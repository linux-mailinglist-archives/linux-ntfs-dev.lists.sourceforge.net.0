Return-Path: <linux-ntfs-dev-bounces@lists.sourceforge.net>
X-Original-To: lists+linux-ntfs-dev@lfdr.de
Delivered-To: lists+linux-ntfs-dev@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id 3E66782D5D6
	for <lists+linux-ntfs-dev@lfdr.de>; Mon, 15 Jan 2024 10:26:06 +0100 (CET)
Received: from [127.0.0.1] (helo=sfs-ml-2.v29.lw.sourceforge.com)
	by sfs-ml-2.v29.lw.sourceforge.com with esmtp (Exim 4.95)
	(envelope-from <linux-ntfs-dev-bounces@lists.sourceforge.net>)
	id 1rPJEH-0000KX-Od;
	Mon, 15 Jan 2024 09:26:01 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-4.v29.lw.sourceforge.com with esmtps (TLS1.2) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <willy@infradead.org>) id 1rPHIE-0006nV-U9
 for linux-ntfs-dev@lists.sourceforge.net;
 Mon, 15 Jan 2024 07:21:59 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=Content-Transfer-Encoding:Content-Type:MIME-Version
 :Message-Id:Date:Subject:Cc:To:From:Sender:Reply-To:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:In-Reply-To:References:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=aCJLAu/k7X+a5vqPhUmWTCVSGSr0Vx1/kZLaYfvwZ20=; b=EB5vPqzIMrl11m8zNfix9rPXZF
 pn9Pq7fISSZNUDWZPB9wMnZn1AL13CNg6HFEMgytKc0onObqSfuknMyUeZhwnpg3RLMlm4JznjGAZ
 bw2QjjGJh1JV0tlXJaXyUqQpWOOjwJkACdjVZVU9ns+GGA4pdY7OvT2CanaeaMqvZiyo=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:Message-Id:Date:
 Subject:Cc:To:From:Sender:Reply-To:Content-ID:Content-Description:Resent-Date
 :Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:
 References:List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:
 List-Owner:List-Archive; bh=aCJLAu/k7X+a5vqPhUmWTCVSGSr0Vx1/kZLaYfvwZ20=; b=G
 lfTyQUaRC1XdPZo8Zu9PuJVLAVPlGCbn2OMPy5+uLqzKmGQKNkk1YW0Aoy8zd1ropYkNp70PS3/wG
 l8UiVQFuZb2gRf9MiaVMkm+K7EEVOvWrMTs5EsTYoktcaHOgzJxLVYtxdoFf/93iCoAFmOYtiA4Vd
 sOmkUpZ3hfuddaOg=;
Received: from [90.155.50.34] (helo=casper.infradead.org)
 by sfi-mx-2.v28.lw.sourceforge.com with esmtps
 (TLS1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.95)
 id 1rPHI5-0004OY-4Q for linux-ntfs-dev@lists.sourceforge.net;
 Mon, 15 Jan 2024 07:21:58 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=casper.20170209; h=Content-Transfer-Encoding:Content-Type:
 MIME-Version:Message-Id:Date:Subject:Cc:To:From:Sender:Reply-To:Content-ID:
 Content-Description:In-Reply-To:References;
 bh=aCJLAu/k7X+a5vqPhUmWTCVSGSr0Vx1/kZLaYfvwZ20=; b=Duw9W9FAWoV91yINf7FqqtRmFu
 JBmBFZJQObwDRYSbh/1jF0BOm5F6qR6LdJUmt3DYB/wDKcEfaH0VsInWt6j0j6R3q9224N+AoOo1z
 BnaNJTvL3NcYnicUksPBlPbnE7uD9M+HH7iy69QncV9V0lZwIVIrfhZopeUITDjwk7WU2O4OlfTid
 KeeioTLcPdjKGwHu2Ezr8O3FNRuesV7fAeRTx66pRXBkKY501ep7pLnhpTk4gMQZgAFt5v8FCxxvL
 QEStng42rf66LQURInUJPlAKG3bHag1VHHgRosDYAeRevmFXG1fLTHBVBYp1IZ1JvxIGJZkBs0vr2
 bzoVx+9A==;
Received: from willy by casper.infradead.org with local (Exim 4.94.2 #2 (Red
 Hat Linux)) id 1rPHGy-008h0e-K9; Mon, 15 Jan 2024 07:20:41 +0000
From: "Matthew Wilcox (Oracle)" <willy@infradead.org>
To: Christian Brauner <brauner@kernel.org>
Date: Mon, 15 Jan 2024 07:20:25 +0000
Message-Id: <20240115072025.2071931-1-willy@infradead.org>
X-Mailer: git-send-email 2.37.1
MIME-Version: 1.0
X-Spam-Score: 1.1 (+)
X-Spam-Report: Spam detection software,
 running on the system "util-spamd-1.v13.lw.sourceforge.com", 
 has NOT identified this incoming email as spam.  The original
 message has been attached to this so you can view it or label
 similar future email.  If you have any questions, see
 the administrator of that system for details.
 Content preview:  The replacement, NTFS3, was merged over two years ago. It
 is now time to remove the original from the tree as it is the last user of
 several APIs, and it is not worth changing. Signed-off-by: Matthew Wilcox
 (Oracle) <willy@infradead.org> Cc: Anton Altaparmakov <anton@tuxera.com>
 Cc: Namjae Jeon <linkinjeon@kernel.org> --- CREDITS | 5 +
 Documentation/filesystems/ntfs.rst | 46 [...] 
 Content analysis details:   (1.1 points, 6.0 required)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 1.3 RDNS_NONE Delivered to internal network by a host with no rDNS
 -0.0 T_SCC_BODY_TEXT_LINE   No description available.
X-Headers-End: 1rPHI5-0004OY-4Q
X-Mailman-Approved-At: Mon, 15 Jan 2024 09:26:00 +0000
Subject: [Linux-ntfs-dev] [PATCH] fs: Remove NTFS classic
X-BeenThere: linux-ntfs-dev@lists.sourceforge.net
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: "Discussion related to Linux NTFS development."
 <linux-ntfs-dev.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=linux-ntfs-dev>
List-Post: <mailto:linux-ntfs-dev@lists.sourceforge.net>
List-Help: <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=subscribe>
Cc: linux-ntfs-dev@lists.sourceforge.net,
 "Matthew Wilcox \(Oracle\)" <willy@infradead.org>,
 linux-fsdevel@vger.kernel.org, ntfs3@lists.linux.dev,
 Anton Altaparmakov <anton@tuxera.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-ntfs-dev-bounces@lists.sourceforge.net

VGhlIHJlcGxhY2VtZW50LCBOVEZTMywgd2FzIG1lcmdlZCBvdmVyIHR3byB5ZWFycyBhZ28uICBJ
dCBpcyBub3cgdGltZSB0bwpyZW1vdmUgdGhlIG9yaWdpbmFsIGZyb20gdGhlIHRyZWUgYXMgaXQg
aXMgdGhlIGxhc3QgdXNlciBvZiBzZXZlcmFsIEFQSXMsCmFuZCBpdCBpcyBub3Qgd29ydGggY2hh
bmdpbmcuCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IFdpbGNveCAoT3JhY2xlKSA8d2lsbHlAaW5m
cmFkZWFkLm9yZz4KQ2M6IEFudG9uIEFsdGFwYXJtYWtvdiA8YW50b25AdHV4ZXJhLmNvbT4KQ2M6
IE5hbWphZSBKZW9uIDxsaW5raW5qZW9uQGtlcm5lbC5vcmc+Ci0tLQogQ1JFRElUUyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgIDUgKwogRG9jdW1lbnRhdGlvbi9maWxlc3lzdGVtcy9u
dGZzLnJzdCB8ICA0NjYgLS0tLQogTUFJTlRBSU5FUlMgICAgICAgICAgICAgICAgICAgICAgICB8
ICAgMTAgLQogZnMvS2NvbmZpZyAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgIDEgLQogZnMv
TWFrZWZpbGUgICAgICAgICAgICAgICAgICAgICAgICB8ICAgIDEgLQogZnMvbnRmcy9LY29uZmln
ICAgICAgICAgICAgICAgICAgICB8ICAgODEgLQogZnMvbnRmcy9NYWtlZmlsZSAgICAgICAgICAg
ICAgICAgICB8ICAgMTUgLQogZnMvbnRmcy9hb3BzLmMgICAgICAgICAgICAgICAgICAgICB8IDE3
NDQgLS0tLS0tLS0tLS0tLS0tCiBmcy9udGZzL2FvcHMuaCAgICAgICAgICAgICAgICAgICAgIHwg
ICA4OCAtCiBmcy9udGZzL2F0dHJpYi5jICAgICAgICAgICAgICAgICAgIHwgMjYyNCAtLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQogZnMvbnRmcy9hdHRyaWIuaCAgICAgICAgICAgICAgICAgICB8ICAx
MDIgLQogZnMvbnRmcy9iaXRtYXAuYyAgICAgICAgICAgICAgICAgICB8ICAxNzkgLS0KIGZzL250
ZnMvYml0bWFwLmggICAgICAgICAgICAgICAgICAgfCAgMTA0IC0KIGZzL250ZnMvY29sbGF0ZS5j
ICAgICAgICAgICAgICAgICAgfCAgMTEwIC0KIGZzL250ZnMvY29sbGF0ZS5oICAgICAgICAgICAg
ICAgICAgfCAgIDM2IC0KIGZzL250ZnMvY29tcHJlc3MuYyAgICAgICAgICAgICAgICAgfCAgOTUw
IC0tLS0tLS0tLQogZnMvbnRmcy9kZWJ1Zy5jICAgICAgICAgICAgICAgICAgICB8ICAxNTkgLS0K
IGZzL250ZnMvZGVidWcuaCAgICAgICAgICAgICAgICAgICAgfCAgIDU3IC0KIGZzL250ZnMvZGly
LmMgICAgICAgICAgICAgICAgICAgICAgfCAxNTQwIC0tLS0tLS0tLS0tLS0KIGZzL250ZnMvZGly
LmggICAgICAgICAgICAgICAgICAgICAgfCAgIDM0IC0KIGZzL250ZnMvZW5kaWFuLmggICAgICAg
ICAgICAgICAgICAgfCAgIDc5IC0KIGZzL250ZnMvZmlsZS5jICAgICAgICAgICAgICAgICAgICAg
fCAxOTk3IC0tLS0tLS0tLS0tLS0tLS0tCiBmcy9udGZzL2luZGV4LmMgICAgICAgICAgICAgICAg
ICAgIHwgIDQ0MCAtLS0tCiBmcy9udGZzL2luZGV4LmggICAgICAgICAgICAgICAgICAgIHwgIDEz
NCAtLQogZnMvbnRmcy9pbm9kZS5jICAgICAgICAgICAgICAgICAgICB8IDMxMDIgLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCiBmcy9udGZzL2lub2RlLmggICAgICAgICAgICAgICAgICAgIHwg
IDMxMCAtLS0KIGZzL250ZnMvbGF5b3V0LmggICAgICAgICAgICAgICAgICAgfCAyNDIxIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLQogZnMvbnRmcy9sY25hbGxvYy5jICAgICAgICAgICAgICAgICB8IDEw
MDAgLS0tLS0tLS0tCiBmcy9udGZzL2xjbmFsbG9jLmggICAgICAgICAgICAgICAgIHwgIDEzMSAt
LQogZnMvbnRmcy9sb2dmaWxlLmMgICAgICAgICAgICAgICAgICB8ICA4NDkgLS0tLS0tLS0KIGZz
L250ZnMvbG9nZmlsZS5oICAgICAgICAgICAgICAgICAgfCAgMjk1IC0tLQogZnMvbnRmcy9tYWxs
b2MuaCAgICAgICAgICAgICAgICAgICB8ICAgNzcgLQogZnMvbnRmcy9tZnQuYyAgICAgICAgICAg
ICAgICAgICAgICB8IDI5MDcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZnMvbnRmcy9tZnQu
aCAgICAgICAgICAgICAgICAgICAgICB8ICAxMTAgLQogZnMvbnRmcy9tc3QuYyAgICAgICAgICAg
ICAgICAgICAgICB8ICAxODkgLS0KIGZzL250ZnMvbmFtZWkuYyAgICAgICAgICAgICAgICAgICAg
fCAgMzkyIC0tLS0KIGZzL250ZnMvbnRmcy5oICAgICAgICAgICAgICAgICAgICAgfCAgMTUwIC0t
CiBmcy9udGZzL3F1b3RhLmMgICAgICAgICAgICAgICAgICAgIHwgIDEwMyAtCiBmcy9udGZzL3F1
b3RhLmggICAgICAgICAgICAgICAgICAgIHwgICAyMSAtCiBmcy9udGZzL3J1bmxpc3QuYyAgICAg
ICAgICAgICAgICAgIHwgMTg5MyAtLS0tLS0tLS0tLS0tLS0tCiBmcy9udGZzL3J1bmxpc3QuaCAg
ICAgICAgICAgICAgICAgIHwgICA4OCAtCiBmcy9udGZzL3N1cGVyLmMgICAgICAgICAgICAgICAg
ICAgIHwgMzIwMiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBmcy9udGZzL3N5c2N0bC5j
ICAgICAgICAgICAgICAgICAgIHwgICA1OCAtCiBmcy9udGZzL3N5c2N0bC5oICAgICAgICAgICAg
ICAgICAgIHwgICAyNyAtCiBmcy9udGZzL3RpbWUuaCAgICAgICAgICAgICAgICAgICAgIHwgICA4
OSAtCiBmcy9udGZzL3R5cGVzLmggICAgICAgICAgICAgICAgICAgIHwgICA1NSAtCiBmcy9udGZz
L3VuaXN0ci5jICAgICAgICAgICAgICAgICAgIHwgIDM4NCAtLS0tCiBmcy9udGZzL3VwY2FzZS5j
ICAgICAgICAgICAgICAgICAgIHwgICA3MyAtCiBmcy9udGZzL3VzbmpybmwuYyAgICAgICAgICAg
ICAgICAgIHwgICA3MCAtCiBmcy9udGZzL3VzbmpybmwuaCAgICAgICAgICAgICAgICAgIHwgIDE5
MSAtLQogZnMvbnRmcy92b2x1bWUuaCAgICAgICAgICAgICAgICAgICB8ICAxNjQgLS0KIDUxIGZp
bGVzIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygrKSwgMjkzMDIgZGVsZXRpb25zKC0pCiBkZWxldGUg
bW9kZSAxMDA2NDQgRG9jdW1lbnRhdGlvbi9maWxlc3lzdGVtcy9udGZzLnJzdAogZGVsZXRlIG1v
ZGUgMTAwNjQ0IGZzL250ZnMvS2NvbmZpZwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvTWFr
ZWZpbGUKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2FvcHMuYwogZGVsZXRlIG1vZGUgMTAw
NjQ0IGZzL250ZnMvYW9wcy5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy9hdHRyaWIuYwog
ZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvYXR0cmliLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBm
cy9udGZzL2JpdG1hcC5jCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy9iaXRtYXAuaAogZGVs
ZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvY29sbGF0ZS5jCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMv
bnRmcy9jb2xsYXRlLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2NvbXByZXNzLmMKIGRl
bGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2RlYnVnLmMKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9u
dGZzL2RlYnVnLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2Rpci5jCiBkZWxldGUgbW9k
ZSAxMDA2NDQgZnMvbnRmcy9kaXIuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvZW5kaWFu
LmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2ZpbGUuYwogZGVsZXRlIG1vZGUgMTAwNjQ0
IGZzL250ZnMvaW5kZXguYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvaW5kZXguaAogZGVs
ZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvaW5vZGUuYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250
ZnMvaW5vZGUuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvbGF5b3V0LmgKIGRlbGV0ZSBt
b2RlIDEwMDY0NCBmcy9udGZzL2xjbmFsbG9jLmMKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZz
L2xjbmFsbG9jLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL2xvZ2ZpbGUuYwogZGVsZXRl
IG1vZGUgMTAwNjQ0IGZzL250ZnMvbG9nZmlsZS5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRm
cy9tYWxsb2MuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvbWZ0LmMKIGRlbGV0ZSBtb2Rl
IDEwMDY0NCBmcy9udGZzL21mdC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy9tc3QuYwog
ZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvbmFtZWkuYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZz
L250ZnMvbnRmcy5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy9xdW90YS5jCiBkZWxldGUg
bW9kZSAxMDA2NDQgZnMvbnRmcy9xdW90YS5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy9y
dW5saXN0LmMKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL3J1bmxpc3QuaAogZGVsZXRlIG1v
ZGUgMTAwNjQ0IGZzL250ZnMvc3VwZXIuYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvc3lz
Y3RsLmMKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL3N5c2N0bC5oCiBkZWxldGUgbW9kZSAx
MDA2NDQgZnMvbnRmcy90aW1lLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL3R5cGVzLmgK
IGRlbGV0ZSBtb2RlIDEwMDY0NCBmcy9udGZzL3VuaXN0ci5jCiBkZWxldGUgbW9kZSAxMDA2NDQg
ZnMvbnRmcy91cGNhc2UuYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGZzL250ZnMvdXNuanJubC5jCiBk
ZWxldGUgbW9kZSAxMDA2NDQgZnMvbnRmcy91c25qcm5sLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBm
cy9udGZzL3ZvbHVtZS5oCgpkaWZmIC0tZ2l0IGEvQ1JFRElUUyBiL0NSRURJVFMKaW5kZXggMDZi
MTc3YzZhZjZhLi43OGMwYmUwOTA0MWIgMTAwNjQ0Ci0tLSBhL0NSRURJVFMKKysrIGIvQ1JFRElU
UwpAQCAtNjMsNiArNjMsMTEgQEAgRDogZG9zZnMsIExJTE8sIHNvbWUgZmQgZmVhdHVyZXMsIEFU
TSwgdmFyaW91cyBvdGhlciBoYWNrcyBoZXJlIGFuZCB0aGVyZQogUzogQnVlbm9zIEFpcmVzCiBT
OiBBcmdlbnRpbmEKIAorTlRGUyBGSUxFU1lTVEVNCitOOiBBbnRvbiBBbHRhcGFybWFrb3YKK0U6
IGFudG9uQHR1eGVyYS5jb20KK0Q6IE5URlMgZmlsZXN5c3RlbQorCiBOOiBUaW0gQWxwYWVydHMK
IEU6IHRpbV9hbHBhZXJ0c0B0b3lvdGEtbW90b3ItZXVyb3BlLmNvbQogRDogODAyLjIgY2xhc3Mg
SUkgbG9naWNhbCBsaW5rIGNvbnRyb2wgbGF5ZXIsCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9u
L2ZpbGVzeXN0ZW1zL250ZnMucnN0IGIvRG9jdW1lbnRhdGlvbi9maWxlc3lzdGVtcy9udGZzLnJz
dApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNWJiMDkzYTI2NDg1Li4wMDAwMDAwMDAw
MDAKLS0tIGEvRG9jdW1lbnRhdGlvbi9maWxlc3lzdGVtcy9udGZzLnJzdAorKysgL2Rldi9udWxs
CkBAIC0xLDQ2NiArMCwwIEBACi0uLiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAot
Ci09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotVGhlIExpbnV4IE5URlMgZmlsZXN5
c3RlbSBkcml2ZXIKLT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0KLQotLi4gVGFi
bGUgb2YgY29udGVudHMKLQotICAgLSBPdmVydmlldwotICAgLSBXZWIgc2l0ZQotICAgLSBGZWF0
dXJlcwotICAgLSBTdXBwb3J0ZWQgbW91bnQgb3B0aW9ucwotICAgLSBLbm93biBidWdzIGFuZCAo
bWlzLSlmZWF0dXJlcwotICAgLSBVc2luZyBOVEZTIHZvbHVtZSBhbmQgc3RyaXBlIHNldHMKLSAg
ICAgLSBUaGUgRGV2aWNlLU1hcHBlciBkcml2ZXIKLSAgICAgLSBUaGUgU29mdHdhcmUgUkFJRCAv
IE1EIGRyaXZlcgotICAgICAtIExpbWl0YXRpb25zIHdoZW4gdXNpbmcgdGhlIE1EIGRyaXZlcgot
Ci0KLU92ZXJ2aWV3Ci09PT09PT09PQotCi1MaW51eC1OVEZTIGNvbWVzIHdpdGggYSBudW1iZXIg
b2YgdXNlci1zcGFjZSBwcm9ncmFtcyBrbm93biBhcyBudGZzcHJvZ3MuCi1UaGVzZSBpbmNsdWRl
IG1rbnRmcywgYSBmdWxsLWZlYXR1cmVkIG50ZnMgZmlsZXN5c3RlbSBmb3JtYXQgdXRpbGl0eSwK
LW50ZnN1bmRlbGV0ZSB1c2VkIGZvciByZWNvdmVyaW5nIGZpbGVzIHRoYXQgd2VyZSB1bmludGVu
dGlvbmFsbHkgZGVsZXRlZAotZnJvbSBhbiBOVEZTIHZvbHVtZSBhbmQgbnRmc3Jlc2l6ZSB3aGlj
aCBpcyB1c2VkIHRvIHJlc2l6ZSBhbiBOVEZTIHBhcnRpdGlvbi4KLVNlZSB0aGUgd2ViIHNpdGUg
Zm9yIG1vcmUgaW5mb3JtYXRpb24uCi0KLVRvIG1vdW50IGFuIE5URlMgMS4yLzMueCAoV2luZG93
cyBOVDQvMjAwMC9YUC8yMDAzKSB2b2x1bWUsIHVzZSB0aGUgZmlsZQotc3lzdGVtIHR5cGUgJ250
ZnMnLiAgVGhlIGRyaXZlciBjdXJyZW50bHkgc3VwcG9ydHMgcmVhZC1vbmx5IG1vZGUgKHdpdGgg
bm8KLWZhdWx0LXRvbGVyYW5jZSwgZW5jcnlwdGlvbiBvciBqb3VybmFsbGluZykgYW5kIHZlcnkg
bGltaXRlZCwgYnV0IHNhZmUsIHdyaXRlCi1zdXBwb3J0LgotCi1Gb3IgZmF1bHQgdG9sZXJhbmNl
IGFuZCByYWlkIHN1cHBvcnQgKGkuZS4gdm9sdW1lIGFuZCBzdHJpcGUgc2V0cyksIHlvdSBjYW4K
LXVzZSB0aGUga2VybmVsJ3MgU29mdHdhcmUgUkFJRCAvIE1EIGRyaXZlci4gIFNlZSBzZWN0aW9u
ICJVc2luZyBTb2Z0d2FyZSBSQUlECi13aXRoIE5URlMiIGZvciBkZXRhaWxzLgotCi0KLVdlYiBz
aXRlCi09PT09PT09PQotCi1UaGVyZSBpcyBwbGVudHkgb2YgYWRkaXRpb25hbCBpbmZvcm1hdGlv
biBvbiB0aGUgbGludXgtbnRmcyB3ZWIgc2l0ZQotYXQgaHR0cDovL3d3dy5saW51eC1udGZzLm9y
Zy8KLQotVGhlIHdlYiBzaXRlIGhhcyBhIGxvdCBvZiBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLCBz
dWNoIGFzIGEgY29tcHJlaGVuc2l2ZQotRkFRLCBkb2N1bWVudGF0aW9uIG9uIHRoZSBOVEZTIG9u
LWRpc2sgZm9ybWF0LCBpbmZvcm1hdGlvbiBvbiB0aGUgTGludXgtTlRGUwotdXNlcnNwYWNlIHV0
aWxpdGllcywgZXRjLgotCi0KLUZlYXR1cmVzCi09PT09PT09PQotCi0tIFRoaXMgaXMgYSBjb21w
bGV0ZSByZXdyaXRlIG9mIHRoZSBOVEZTIGRyaXZlciB0aGF0IHVzZWQgdG8gYmUgaW4gdGhlIDIu
NCBhbmQKLSAgZWFybGllciBrZXJuZWxzLiAgVGhpcyBuZXcgZHJpdmVyIGltcGxlbWVudHMgTlRG
UyByZWFkIHN1cHBvcnQgYW5kIGlzCi0gIGZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIHRoZSBv
bGQgbnRmcyBkcml2ZXIgYW5kIGl0IGFsc28gaW1wbGVtZW50cyBsaW1pdGVkCi0gIHdyaXRlIHN1
cHBvcnQuICBUaGUgYmlnZ2VzdCBsaW1pdGF0aW9uIGF0IHByZXNlbnQgaXMgdGhhdCBmaWxlcy9k
aXJlY3RvcmllcwotICBjYW5ub3QgYmUgY3JlYXRlZCBvciBkZWxldGVkLiAgU2VlIGJlbG93IGZv
ciB0aGUgbGlzdCBvZiB3cml0ZSBmZWF0dXJlcyB0aGF0Ci0gIGFyZSBzbyBmYXIgc3VwcG9ydGVk
LiAgQW5vdGhlciBsaW1pdGF0aW9uIGlzIHRoYXQgd3JpdGluZyB0byBjb21wcmVzc2VkIGZpbGVz
Ci0gIGlzIG5vdCBpbXBsZW1lbnRlZCBhdCBhbGwuICBBbHNvLCBuZWl0aGVyIHJlYWQgbm9yIHdy
aXRlIGFjY2VzcyB0byBlbmNyeXB0ZWQKLSAgZmlsZXMgaXMgc28gZmFyIGltcGxlbWVudGVkLgot
LSBUaGUgbmV3IGRyaXZlciBoYXMgZnVsbCBzdXBwb3J0IGZvciBzcGFyc2UgZmlsZXMgb24gTlRG
UyAzLnggdm9sdW1lcyB3aGljaAotICB0aGUgb2xkIGRyaXZlciBpc24ndCBoYXBweSB3aXRoLgot
LSBUaGUgbmV3IGRyaXZlciBzdXBwb3J0cyBleGVjdXRpb24gb2YgYmluYXJpZXMgZHVlIHRvIG1t
YXAoKSBub3cgYmVpbmcKLSAgc3VwcG9ydGVkLgotLSBUaGUgbmV3IGRyaXZlciBzdXBwb3J0cyBs
b29wYmFjayBtb3VudGluZyBvZiBmaWxlcyBvbiBOVEZTIHdoaWNoIGlzIHVzZWQgYnkKLSAgc29t
ZSBMaW51eCBkaXN0cmlidXRpb25zIHRvIGVuYWJsZSB0aGUgdXNlciB0byBydW4gTGludXggZnJv
bSBhbiBOVEZTCi0gIHBhcnRpdGlvbiBieSBjcmVhdGluZyBhIGxhcmdlIGZpbGUgd2hpbGUgaW4g
V2luZG93cyBhbmQgdGhlbiBsb29wYmFjawotICBtb3VudGluZyB0aGUgZmlsZSB3aGlsZSBpbiBM
aW51eCBhbmQgY3JlYXRpbmcgYSBMaW51eCBmaWxlc3lzdGVtIG9uIGl0IHRoYXQKLSAgaXMgdXNl
ZCB0byBpbnN0YWxsIExpbnV4IG9uIGl0LgotLSBBIGNvbXBhcmlzb24gb2YgdGhlIHR3byBkcml2
ZXJzIHVzaW5nOjoKLQotCXRpbWUgZmluZCAuIC10eXBlIGYgLWV4ZWMgbWQ1c3VtICJ7fSIgXDsK
LQotICBydW4gdGhyZWUgdGltZXMgaW4gc2VxdWVuY2Ugd2l0aCBlYWNoIGRyaXZlciAoYWZ0ZXIg
YSByZWJvb3QpIG9uIGEgMS40R2lCCi0gIE5URlMgcGFydGl0aW9uLCBzaG93ZWQgdGhlIG5ldyBk
cml2ZXIgdG8gYmUgMjAlIGZhc3RlciBpbiB0b3RhbCB0aW1lIGVsYXBzZWQKLSAgKGZyb20gOTo0
MyBtaW51dGVzIG9uIGF2ZXJhZ2UgZG93biB0byA3OjUzKS4gIFRoZSB0aW1lIHNwZW50IGluIHVz
ZXIgc3BhY2UKLSAgd2FzIHVuY2hhbmdlZCBidXQgdGhlIHRpbWUgc3BlbnQgaW4gdGhlIGtlcm5l
bCB3YXMgZGVjcmVhc2VkIGJ5IGEgZmFjdG9yIG9mCi0gIDIuNSAoZnJvbSA4NSBDUFUgc2Vjb25k
cyBkb3duIHRvIDMzKS4KLS0gVGhlIGRyaXZlciBkb2VzIG5vdCBzdXBwb3J0IHNob3J0IGZpbGUg
bmFtZXMgaW4gZ2VuZXJhbC4gIEZvciBiYWNrd2FyZHMKLSAgY29tcGF0aWJpbGl0eSwgd2UgaW1w
bGVtZW50IGFjY2VzcyB0byBmaWxlcyB1c2luZyB0aGVpciBzaG9ydCBmaWxlIG5hbWVzIGlmCi0g
IHRoZXkgZXhpc3QuICBUaGUgZHJpdmVyIHdpbGwgbm90IGNyZWF0ZSBzaG9ydCBmaWxlIG5hbWVz
IGhvd2V2ZXIsIGFuZCBhCi0gIHJlbmFtZSB3aWxsIGRpc2NhcmQgYW55IGV4aXN0aW5nIHNob3J0
IGZpbGUgbmFtZS4KLS0gVGhlIG5ldyBkcml2ZXIgc3VwcG9ydHMgZXhwb3J0aW5nIG9mIG1vdW50
ZWQgTlRGUyB2b2x1bWVzIHZpYSBORlMuCi0tIFRoZSBuZXcgZHJpdmVyIHN1cHBvcnRzIGFzeW5j
IGlvIChhaW8pLgotLSBUaGUgbmV3IGRyaXZlciBzdXBwb3J0cyBmc3luYygyKSwgZmRhdGFzeW5j
KDIpLCBhbmQgbXN5bmMoMikuCi0tIFRoZSBuZXcgZHJpdmVyIHN1cHBvcnRzIHJlYWR2KDIpIGFu
ZCB3cml0ZXYoMikuCi0tIFRoZSBuZXcgZHJpdmVyIHN1cHBvcnRzIGFjY2VzcyB0aW1lIHVwZGF0
ZXMgKGluY2x1ZGluZyBtdGltZSBhbmQgY3RpbWUpLgotLSBUaGUgbmV3IGRyaXZlciBzdXBwb3J0
cyB0cnVuY2F0ZSgyKSBhbmQgb3BlbigyKSB3aXRoIE9fVFJVTkMuICBCdXQgYXQgcHJlc2VudAot
ICBvbmx5IHZlcnkgbGltaXRlZCBzdXBwb3J0IGZvciBoaWdobHkgZnJhZ21lbnRlZCBmaWxlcywg
aS5lLiBvbmVzIHdoaWNoIGhhdmUKLSAgdGhlaXIgZGF0YSBhdHRyaWJ1dGUgc3BsaXQgYWNyb3Nz
IG11bHRpcGxlIGV4dGVudHMsIGlzIGluY2x1ZGVkLiAgQW5vdGhlcgotICBsaW1pdGF0aW9uIGlz
IHRoYXQgYXQgcHJlc2VudCB0cnVuY2F0ZSgyKSB3aWxsIG5ldmVyIGNyZWF0ZSBzcGFyc2UgZmls
ZXMsCi0gIHNpbmNlIHRvIG1hcmsgYSBmaWxlIHNwYXJzZSB3ZSBuZWVkIHRvIG1vZGlmeSB0aGUg
ZGlyZWN0b3J5IGVudHJ5IGZvciB0aGUKLSAgZmlsZSBhbmQgd2UgZG8gbm90IGltcGxlbWVudCBk
aXJlY3RvcnkgbW9kaWZpY2F0aW9ucyB5ZXQuCi0tIFRoZSBuZXcgZHJpdmVyIHN1cHBvcnRzIHdy
aXRlKDIpIHdoaWNoIGNhbiBib3RoIG92ZXJ3cml0ZSBleGlzdGluZyBkYXRhIGFuZAotICBleHRl
bmQgdGhlIGZpbGUgc2l6ZSBzbyB0aGF0IHlvdSBjYW4gd3JpdGUgYmV5b25kIHRoZSBleGlzdGlu
ZyBkYXRhLiAgQWxzbywKLSAgd3JpdGluZyBpbnRvIHNwYXJzZSByZWdpb25zIGlzIHN1cHBvcnRl
ZCBhbmQgdGhlIGhvbGVzIGFyZSBmaWxsZWQgaW4gd2l0aAotICBjbHVzdGVycy4gIEJ1dCBhdCBw
cmVzZW50IG9ubHkgbGltaXRlZCBzdXBwb3J0IGZvciBoaWdobHkgZnJhZ21lbnRlZCBmaWxlcywK
LSAgaS5lLiBvbmVzIHdoaWNoIGhhdmUgdGhlaXIgZGF0YSBhdHRyaWJ1dGUgc3BsaXQgYWNyb3Nz
IG11bHRpcGxlIGV4dGVudHMsIGlzCi0gIGluY2x1ZGVkLiAgQW5vdGhlciBsaW1pdGF0aW9uIGlz
IHRoYXQgd3JpdGUoMikgd2lsbCBuZXZlciBjcmVhdGUgc3BhcnNlCi0gIGZpbGVzLCBzaW5jZSB0
byBtYXJrIGEgZmlsZSBzcGFyc2Ugd2UgbmVlZCB0byBtb2RpZnkgdGhlIGRpcmVjdG9yeSBlbnRy
eSBmb3IKLSAgdGhlIGZpbGUgYW5kIHdlIGRvIG5vdCBpbXBsZW1lbnQgZGlyZWN0b3J5IG1vZGlm
aWNhdGlvbnMgeWV0LgotCi1TdXBwb3J0ZWQgbW91bnQgb3B0aW9ucwotPT09PT09PT09PT09PT09
PT09PT09PT0KLQotSW4gYWRkaXRpb24gdG8gdGhlIGdlbmVyaWMgbW91bnQgb3B0aW9ucyBkZXNj
cmliZWQgYnkgdGhlIG1hbnVhbCBwYWdlIGZvciB0aGUKLW1vdW50IGNvbW1hbmQgKG1hbiA4IG1v
dW50LCBhbHNvIHNlZSBtYW4gNSBmc3RhYiksIHRoZSBOVEZTIGRyaXZlciBzdXBwb3J0cyB0aGUK
LWZvbGxvd2luZyBtb3VudCBvcHRpb25zOgotCi09PT09PT09PT09PT09PT09PT09PT09PSA9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci1pb2No
YXJzZXQ9bmFtZQkJRGVwcmVjYXRlZCBvcHRpb24uICBTdGlsbCBzdXBwb3J0ZWQgYnV0IHBsZWFz
ZSB1c2UKLQkJCW5scz1uYW1lIGluIHRoZSBmdXR1cmUuICBTZWUgZGVzY3JpcHRpb24gZm9yIG5s
cz1uYW1lLgotCi1ubHM9bmFtZQkJQ2hhcmFjdGVyIHNldCB0byB1c2Ugd2hlbiByZXR1cm5pbmcg
ZmlsZSBuYW1lcy4KLQkJCVVubGlrZSBWRkFULCBOVEZTIHN1cHByZXNzZXMgbmFtZXMgdGhhdCBj
b250YWluCi0JCQl1bmNvbnZlcnRpYmxlIGNoYXJhY3RlcnMuICBOb3RlIHRoYXQgbW9zdCBjaGFy
YWN0ZXIKLQkJCXNldHMgY29udGFpbiBpbnN1ZmZpY2llbnQgY2hhcmFjdGVycyB0byByZXByZXNl
bnQgYWxsCi0JCQlwb3NzaWJsZSBVbmljb2RlIGNoYXJhY3RlcnMgdGhhdCBjYW4gZXhpc3Qgb24g
TlRGUy4KLQkJCVRvIGJlIHN1cmUgeW91IGFyZSBub3QgbWlzc2luZyBhbnkgZmlsZXMsIHlvdSBh
cmUKLQkJCWFkdmlzZWQgdG8gdXNlIG5scz11dGY4IHdoaWNoIGlzIGNhcGFibGUgb2YKLQkJCXJl
cHJlc2VudGluZyBhbGwgVW5pY29kZSBjaGFyYWN0ZXJzLgotCi11dGY4PTxib29sPgkJT3B0aW9u
IG5vIGxvbmdlciBzdXBwb3J0ZWQuICBDdXJyZW50bHkgbWFwcGVkIHRvCi0JCQlubHM9dXRmOCBi
dXQgcGxlYXNlIHVzZSBubHM9dXRmOCBpbiB0aGUgZnV0dXJlIGFuZAotCQkJbWFrZSBzdXJlIHV0
ZjggaXMgY29tcGlsZWQgZWl0aGVyIGFzIG1vZHVsZSBvciBpbnRvCi0JCQl0aGUga2VybmVsLiAg
U2VlIGRlc2NyaXB0aW9uIGZvciBubHM9bmFtZS4KLQotdWlkPQotZ2lkPQotdW1hc2s9CQkJUHJv
dmlkZSBkZWZhdWx0IG93bmVyLCBncm91cCwgYW5kIGFjY2VzcyBtb2RlIG1hc2suCi0JCQlUaGVz
ZSBvcHRpb25zIHdvcmsgYXMgZG9jdW1lbnRlZCBpbiBtb3VudCg4KS4gIEJ5Ci0JCQlkZWZhdWx0
LCB0aGUgZmlsZXMvZGlyZWN0b3JpZXMgYXJlIG93bmVkIGJ5IHJvb3QgYW5kCi0JCQloZS9zaGUg
aGFzIHJlYWQgYW5kIHdyaXRlIHBlcm1pc3Npb25zLCBhcyB3ZWxsIGFzCi0JCQlicm93c2UgcGVy
bWlzc2lvbiBmb3IgZGlyZWN0b3JpZXMuICBObyBvbmUgZWxzZSBoYXMgYW55Ci0JCQlhY2Nlc3Mg
cGVybWlzc2lvbnMuICBJLmUuIHRoZSBtb2RlIG9uIGFsbCBmaWxlcyBpcyBieQotCQkJZGVmYXVs
dCBydy0tLS0tLS0gYW5kIGZvciBkaXJlY3RvcmllcyByd3gtLS0tLS0sIGEKLQkJCWNvbnNlcXVl
bmNlIG9mIHRoZSBkZWZhdWx0IGZtYXNrPTAxNzcgYW5kIGRtYXNrPTAwNzcuCi0JCQlVc2luZyBh
IHVtYXNrIG9mIHplcm8gd2lsbCBncmFudCBhbGwgcGVybWlzc2lvbnMgdG8KLQkJCWV2ZXJ5b25l
LCBpLmUuIGFsbCBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgd2lsbCBoYXZlIG1vZGUKLQkJCXJ3eHJ3
eHJ3eC4KLQotZm1hc2s9Ci1kbWFzaz0JCQlJbnN0ZWFkIG9mIHNwZWNpZnlpbmcgdW1hc2sgd2hp
Y2ggYXBwbGllcyBib3RoIHRvCi0JCQlmaWxlcyBhbmQgZGlyZWN0b3JpZXMsIGZtYXNrIGFwcGxp
ZXMgb25seSB0byBmaWxlcyBhbmQKLQkJCWRtYXNrIG9ubHkgdG8gZGlyZWN0b3JpZXMuCi0KLXNs
b3BweT08Qk9PTD4JCUlmIHNsb3BweSBpcyBzcGVjaWZpZWQsIGlnbm9yZSB1bmtub3duIG1vdW50
IG9wdGlvbnMuCi0JCQlPdGhlcndpc2UgdGhlIGRlZmF1bHQgYmVoYXZpb3VyIGlzIHRvIGFib3J0
IG1vdW50IGlmCi0JCQlhbnkgdW5rbm93biBvcHRpb25zIGFyZSBmb3VuZC4KLQotc2hvd19zeXNf
ZmlsZXM9PEJPT0w+CUlmIHNob3dfc3lzX2ZpbGVzIGlzIHNwZWNpZmllZCwgc2hvdyB0aGUgc3lz
dGVtIGZpbGVzCi0JCQlpbiBkaXJlY3RvcnkgbGlzdGluZ3MuICBPdGhlcndpc2UgdGhlIGRlZmF1
bHQgYmVoYXZpb3VyCi0JCQlpcyB0byBoaWRlIHRoZSBzeXN0ZW0gZmlsZXMuCi0JCQlOb3RlIHRo
YXQgZXZlbiB3aGVuIHNob3dfc3lzX2ZpbGVzIGlzIHNwZWNpZmllZCwgIiRNRlQiCi0JCQl3aWxs
IG5vdCBiZSB2aXNpYmxlIGR1ZSB0byBidWdzL21pcy1mZWF0dXJlcyBpbiBnbGliYy4KLQkJCUZ1
cnRoZXIsIG5vdGUgdGhhdCBpcnJlc3BlY3RpdmUgb2Ygc2hvd19zeXNfZmlsZXMsIGFsbAotCQkJ
ZmlsZXMgYXJlIGFjY2Vzc2libGUgYnkgbmFtZSwgaS5lLiB5b3UgY2FuIGFsd2F5cyBkbwotCQkJ
ImxzIC1sIFwkVXBDYXNlIiBmb3IgZXhhbXBsZSB0byBzcGVjaWZpY2FsbHkgc2hvdyB0aGUKLQkJ
CXN5c3RlbSBmaWxlIGNvbnRhaW5pbmcgdGhlIFVuaWNvZGUgdXBjYXNlIHRhYmxlLgotCi1jYXNl
X3NlbnNpdGl2ZT08Qk9PTD4JSWYgY2FzZV9zZW5zaXRpdmUgaXMgc3BlY2lmaWVkLCB0cmVhdCBh
bGwgZmlsZSBuYW1lcyBhcwotCQkJY2FzZSBzZW5zaXRpdmUgYW5kIGNyZWF0ZSBmaWxlIG5hbWVz
IGluIHRoZSBQT1NJWAotCQkJbmFtZXNwYWNlLiAgT3RoZXJ3aXNlIHRoZSBkZWZhdWx0IGJlaGF2
aW91ciBpcyB0byB0cmVhdAotCQkJZmlsZSBuYW1lcyBhcyBjYXNlIGluc2Vuc2l0aXZlIGFuZCB0
byBjcmVhdGUgZmlsZSBuYW1lcwotCQkJaW4gdGhlIFdJTjMyL0xPTkcgbmFtZSBzcGFjZS4gIE5v
dGUsIHRoZSBMaW51eCBOVEZTCi0JCQlkcml2ZXIgd2lsbCBuZXZlciBjcmVhdGUgc2hvcnQgZmls
ZSBuYW1lcyBhbmQgd2lsbAotCQkJcmVtb3ZlIHRoZW0gb24gcmVuYW1lL2RlbGV0ZSBvZiB0aGUg
Y29ycmVzcG9uZGluZyBsb25nCi0JCQlmaWxlIG5hbWUuCi0JCQlOb3RlIHRoYXQgZmlsZXMgcmVt
YWluIGFjY2Vzc2libGUgdmlhIHRoZWlyIHNob3J0IGZpbGUKLQkJCW5hbWUsIGlmIGl0IGV4aXN0
cy4gIElmIGNhc2Vfc2Vuc2l0aXZlLCB5b3Ugd2lsbCBuZWVkCi0JCQl0byBwcm92aWRlIHRoZSBj
b3JyZWN0IGNhc2Ugb2YgdGhlIHNob3J0IGZpbGUgbmFtZS4KLQotZGlzYWJsZV9zcGFyc2U9PEJP
T0w+CUlmIGRpc2FibGVfc3BhcnNlIGlzIHNwZWNpZmllZCwgY3JlYXRpb24gb2Ygc3BhcnNlCi0J
CQlyZWdpb25zLCBpLmUuIGhvbGVzLCBpbnNpZGUgZmlsZXMgaXMgZGlzYWJsZWQgZm9yIHRoZQot
CQkJdm9sdW1lIChmb3IgdGhlIGR1cmF0aW9uIG9mIHRoaXMgbW91bnQgb25seSkuICBCeQotCQkJ
ZGVmYXVsdCwgY3JlYXRpb24gb2Ygc3BhcnNlIHJlZ2lvbnMgaXMgZW5hYmxlZCwgd2hpY2gKLQkJ
CWlzIGNvbnNpc3RlbnQgd2l0aCB0aGUgYmVoYXZpb3VyIG9mIHRyYWRpdGlvbmFsIFVuaXgKLQkJ
CWZpbGVzeXN0ZW1zLgotCi1lcnJvcnM9b3B0CQlXaGF0IHRvIGRvIHdoZW4gY3JpdGljYWwgZmls
ZXN5c3RlbSBlcnJvcnMgYXJlIGZvdW5kLgotCQkJRm9sbG93aW5nIHZhbHVlcyBjYW4gYmUgdXNl
ZCBmb3IgIm9wdCI6Ci0KLQkJCSAgPT09PT09PT0gID09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0JCQkgIGNvbnRpbnVlICBERUZBVUxULCB0cnkgdG8gY2xlYW4tdXAg
YXMgbXVjaCBhcwotCQkJCSAgICBwb3NzaWJsZSwgZS5nLiBtYXJraW5nIGEgY29ycnVwdCBpbm9k
ZSBhcwotCQkJCSAgICBiYWQgc28gaXQgaXMgbm8gbG9uZ2VyIGFjY2Vzc2VkLCBhbmQgdGhlbgot
CQkJCSAgICBjb250aW51ZS4KLQkJCSAgcmVjb3ZlciAgIEF0IHByZXNlbnQgb25seSBzdXBwb3J0
ZWQgaXMgcmVjb3Zlcnkgb2YKLQkJCQkgICAgdGhlIGJvb3Qgc2VjdG9yIGZyb20gdGhlIGJhY2t1
cCBjb3B5LgotCQkJCSAgICBJZiByZWFkLW9ubHkgbW91bnQsIHRoZSByZWNvdmVyeSBpcyBkb25l
Ci0JCQkJICAgIGluIG1lbW9yeSBvbmx5IGFuZCBub3Qgd3JpdHRlbiB0byBkaXNrLgotCQkJICA9
PT09PT09PSAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLQotCQkJ
Tm90ZSB0aGF0IHRoZSBvcHRpb25zIGFyZSBhZGRpdGl2ZSwgaS5lLiBzcGVjaWZ5aW5nOjoKLQot
CQkJICAgZXJyb3JzPWNvbnRpbnVlLGVycm9ycz1yZWNvdmVyCi0KLQkJCW1lYW5zIHRoZSBkcml2
ZXIgd2lsbCBhdHRlbXB0IHRvIHJlY292ZXIgYW5kIGlmIHRoYXQKLQkJCWZhaWxzIGl0IHdpbGwg
Y2xlYW4tdXAgYXMgbXVjaCBhcyBwb3NzaWJsZSBhbmQKLQkJCWNvbnRpbnVlLgotCi1tZnRfem9u
ZV9tdWx0aXBsaWVyPQlTZXQgdGhlIE1GVCB6b25lIG11bHRpcGxpZXIgZm9yIHRoZSB2b2x1bWUg
KHRoaXMKLQkJCXNldHRpbmcgaXMgbm90IHBlcnNpc3RlbnQgYWNyb3NzIG1vdW50cyBhbmQgY2Fu
IGJlCi0JCQljaGFuZ2VkIGZyb20gbW91bnQgdG8gbW91bnQgYnV0IGNhbm5vdCBiZSBjaGFuZ2Vk
IG9uCi0JCQlyZW1vdW50KS4gIFZhbHVlcyBvZiAxIHRvIDQgYXJlIGFsbG93ZWQsIDEgYmVpbmcg
dGhlCi0JCQlkZWZhdWx0LiAgVGhlIE1GVCB6b25lIG11bHRpcGxpZXIgZGV0ZXJtaW5lcyBob3cg
bXVjaAotCQkJc3BhY2UgaXMgcmVzZXJ2ZWQgZm9yIHRoZSBNRlQgb24gdGhlIHZvbHVtZS4gIElm
IGFsbAotCQkJb3RoZXIgc3BhY2UgaXMgdXNlZCB1cCwgdGhlbiB0aGUgTUZUIHpvbmUgd2lsbCBi
ZQotCQkJc2hydW5rIGR5bmFtaWNhbGx5LCBzbyB0aGlzIGhhcyBubyBpbXBhY3Qgb24gdGhlCi0J
CQlhbW91bnQgb2YgZnJlZSBzcGFjZS4gIEhvd2V2ZXIsIGl0IGNhbiBoYXZlIGFuIGltcGFjdAot
CQkJb24gcGVyZm9ybWFuY2UgYnkgYWZmZWN0aW5nIGZyYWdtZW50YXRpb24gb2YgdGhlIE1GVC4K
LQkJCUluIGdlbmVyYWwgdXNlIHRoZSBkZWZhdWx0LiAgSWYgeW91IGhhdmUgYSBsb3Qgb2Ygc21h
bGwKLQkJCWZpbGVzIHRoZW4gdXNlIGEgaGlnaGVyIHZhbHVlLiAgVGhlIHZhbHVlcyBoYXZlIHRo
ZQotCQkJZm9sbG93aW5nIG1lYW5pbmc6Ci0KLQkJCSAgICAgID09PT09CSAgICA9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLQkJCSAgICAgIFZhbHVlCSAgICAgTUZUIHpvbmUgc2l6
ZSAoJSBvZiB2b2x1bWUgc2l6ZSkKLQkJCSAgICAgID09PT09CSAgICA9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLQkJCQkxCQkxMi41JQotCQkJCTIJCTI1JQotCQkJCTMJCTM3LjUl
Ci0JCQkJNAkJNTAlCi0JCQkgICAgICA9PT09PQkgICAgPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0KLQkJCU5vdGUgdGhpcyBvcHRpb24gaXMgaXJyZWxldmFudCBmb3IgcmVhZC1v
bmx5IG1vdW50cy4KLT09PT09PT09PT09PT09PT09PT09PT09ID09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLQotCi1Lbm93biBidWdzIGFuZCAo
bWlzLSlmZWF0dXJlcwotPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLQotLSBUaGUgbGlu
ayBjb3VudCBvbiBlYWNoIGRpcmVjdG9yeSBpbm9kZSBlbnRyeSBpcyBzZXQgdG8gMSwgZHVlIHRv
IExpbnV4IG5vdAotICBzdXBwb3J0aW5nIGRpcmVjdG9yeSBoYXJkIGxpbmtzLiAgVGhpcyBtYXkg
d2VsbCBjb25mdXNlIHNvbWUgdXNlciBzcGFjZQotICBhcHBsaWNhdGlvbnMsIHNpbmNlIHRoZSBk
aXJlY3RvcnkgbmFtZXMgd2lsbCBoYXZlIHRoZSBzYW1lIGlub2RlIG51bWJlcnMuCi0gIFRoaXMg
YWxzbyBzcGVlZHMgdXAgbnRmc19yZWFkX2lub2RlKCkgaW1tZW5zZWx5LiAgQW5kIHdlIGhhdmVu
J3QgZm91bmQgYW55Ci0gIHByb2JsZW1zIHdpdGggdGhpcyBhcHByb2FjaCBzbyBmYXIuICBJZiB5
b3UgZmluZCBhIHByb2JsZW0gd2l0aCB0aGlzLCBwbGVhc2UKLSAgbGV0IHVzIGtub3cuCi0KLQot
UGxlYXNlIHNlbmQgYnVnIHJlcG9ydHMvY29tbWVudHMvZmVlZGJhY2svYWJ1c2UgdG8gdGhlIExp
bnV4LU5URlMgZGV2ZWxvcG1lbnQKLWxpc3QgYXQgc291cmNlZm9yZ2U6IGxpbnV4LW50ZnMtZGV2
QGxpc3RzLnNvdXJjZWZvcmdlLm5ldAotCi0KLVVzaW5nIE5URlMgdm9sdW1lIGFuZCBzdHJpcGUg
c2V0cwotPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0KLUZvciBzdXBwb3J0IG9m
IHZvbHVtZSBhbmQgc3RyaXBlIHNldHMsIHlvdSBjYW4gZWl0aGVyIHVzZSB0aGUga2VybmVsJ3MK
LURldmljZS1NYXBwZXIgZHJpdmVyIG9yIHRoZSBrZXJuZWwncyBTb2Z0d2FyZSBSQUlEIC8gTUQg
ZHJpdmVyLiAgVGhlIGZvcm1lciBpcwotdGhlIHJlY29tbWVuZGVkIG9uZSB0byB1c2UgZm9yIGxp
bmVhciByYWlkLiAgQnV0IHRoZSBsYXR0ZXIgaXMgcmVxdWlyZWQgZm9yCi1yYWlkIGxldmVsIDUu
ICBGb3Igc3RyaXBpbmcgYW5kIG1pcnJvcmluZywgZWl0aGVyIGRyaXZlciBzaG91bGQgd29yayBm
aW5lLgotCi0KLVRoZSBEZXZpY2UtTWFwcGVyIGRyaXZlcgotLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tCi0KLVlvdSB3aWxsIG5lZWQgdG8gY3JlYXRlIGEgdGFibGUgb2YgdGhlIGNvbXBvbmVudHMg
b2YgdGhlIHZvbHVtZS9zdHJpcGUgc2V0IGFuZAotaG93IHRoZXkgZml0IHRvZ2V0aGVyIGFuZCBs
b2FkIHRoaXMgaW50byB0aGUga2VybmVsIHVzaW5nIHRoZSBkbXNldHVwIHV0aWxpdHkKLShzZWUg
bWFuIDggZG1zZXR1cCkuCi0KLUxpbmVhciB2b2x1bWUgc2V0cywgaS5lLiBsaW5lYXIgcmFpZCwg
aGFzIGJlZW4gdGVzdGVkIGFuZCB3b3JrcyBmaW5lLiAgRXZlbgotdGhvdWdoIHVudGVzdGVkLCB0
aGVyZSBpcyBubyByZWFzb24gd2h5IHN0cmlwZSBzZXRzLCBpLmUuIHJhaWQgbGV2ZWwgMCwgYW5k
Ci1taXJyb3JzLCBpLmUuIHJhaWQgbGV2ZWwgMSBzaG91bGQgbm90IHdvcmssIHRvby4gIFN0cmlw
ZXMgd2l0aCBwYXJpdHksIGkuZS4KLXJhaWQgbGV2ZWwgNSwgdW5mb3J0dW5hdGVseSBjYW5ub3Qg
d29yayB5ZXQgYmVjYXVzZSB0aGUgY3VycmVudCB2ZXJzaW9uIG9mIHRoZQotRGV2aWNlLU1hcHBl
ciBkcml2ZXIgZG9lcyBub3Qgc3VwcG9ydCByYWlkIGxldmVsIDUuICBZb3UgbWF5IGJlIGFibGUg
dG8gdXNlIHRoZQotU29mdHdhcmUgUkFJRCAvIE1EIGRyaXZlciBmb3IgcmFpZCBsZXZlbCA1LCBz
ZWUgdGhlIG5leHQgc2VjdGlvbiBmb3IgZGV0YWlscy4KLQotVG8gY3JlYXRlIHRoZSB0YWJsZSBk
ZXNjcmliaW5nIHlvdXIgdm9sdW1lIHlvdSB3aWxsIG5lZWQgdG8ga25vdyBlYWNoIG9mIGl0cwot
Y29tcG9uZW50cyBhbmQgdGhlaXIgc2l6ZXMgaW4gc2VjdG9ycywgaS5lLiBtdWx0aXBsZXMgb2Yg
NTEyLWJ5dGUgYmxvY2tzLgotCi1Gb3IgTlQ0IGZhdWx0IHRvbGVyYW50IHZvbHVtZXMgeW91IGNh
biBvYnRhaW4gdGhlIHNpemVzIHVzaW5nIGZkaXNrLiAgU28gZm9yCi1leGFtcGxlIGlmIG9uZSBv
ZiB5b3VyIHBhcnRpdGlvbnMgaXMgL2Rldi9oZGEyIHlvdSB3b3VsZCBkbzo6Ci0KLSAgICAkIGZk
aXNrIC11bCAvZGV2L2hkYQotCi0gICAgRGlzayAvZGV2L2hkYTogODEuOSBHQiwgODE5NjQzMDIz
MzYgYnl0ZXMKLSAgICAyNTUgaGVhZHMsIDYzIHNlY3RvcnMvdHJhY2ssIDk5NjQgY3lsaW5kZXJz
LCB0b3RhbCAxNjAwODY1Mjggc2VjdG9ycwotICAgIFVuaXRzID0gc2VjdG9ycyBvZiAxICogNTEy
ID0gNTEyIGJ5dGVzCi0KLQlEZXZpY2UgQm9vdCAgICAgIFN0YXJ0ICAgICAgICAgRW5kICAgICAg
QmxvY2tzICAgSWQgIFN5c3RlbQotCS9kZXYvaGRhMSAgICogICAgICAgICAgNjMgICAgIDQyMDkw
MjkgICAgIDIxMDQ0ODMrICA4MyAgTGludXgKLQkvZGV2L2hkYTIgICAgICAgICA0MjA5MDMwICAg
IDM3NzY4ODE0ICAgIDE2Nzc5ODkyKyAgODYgIE5URlMKLQkvZGV2L2hkYTMgICAgICAgIDM3NzY4
ODE1ICAgIDQ2MTcwODA5ICAgICA0MjAwOTk3KyAgODMgIExpbnV4Ci0KLUFuZCB5b3Ugd291bGQg
a25vdyB0aGF0IC9kZXYvaGRhMiBoYXMgYSBzaXplIG9mIDM3NzY4ODE0IC0gNDIwOTAzMCArIDEg
PQotMzM1NTk3ODUgc2VjdG9ycy4KLQotRm9yIFdpbjJrIGFuZCBsYXRlciBkeW5hbWljIGRpc2tz
LCB5b3UgY2FuIGZvciBleGFtcGxlIHVzZSB0aGUgbGRtaW5mbyB1dGlsaXR5Ci13aGljaCBpcyBw
YXJ0IG9mIHRoZSBMaW51eCBMRE0gdG9vbHMgKHRoZSBsYXRlc3QgdmVyc2lvbiBhdCB0aGUgdGlt
ZSBvZgotd3JpdGluZyBpcyBsaW51eC1sZG0tMC4wLjgudGFyLmJ6MikuICBZb3UgY2FuIGRvd25s
b2FkIGl0IGZyb206Ci0KLQlodHRwOi8vd3d3LmxpbnV4LW50ZnMub3JnLwotCi1TaW1wbHkgZXh0
cmFjdCB0aGUgZG93bmxvYWRlZCBhcmNoaXZlICh0YXIgeHZqZiBsaW51eC1sZG0tMC4wLjgudGFy
LmJ6MiksIGdvCi1pbnRvIGl0IChjZCBsaW51eC1sZG0tMC4wLjgpIGFuZCBjaGFuZ2UgdG8gdGhl
IHRlc3QgZGlyZWN0b3J5IChjZCB0ZXN0KS4gIFlvdQotd2lsbCBmaW5kIHRoZSBwcmVjb21waWxl
ZCAoaTM4NikgbGRtaW5mbyB1dGlsaXR5IHRoZXJlLiAgTk9URTogWW91IHdpbGwgbm90IGJlCi1h
YmxlIHRvIGNvbXBpbGUgdGhpcyB5b3Vyc2VsZiBlYXNpbHkgc28gdXNlIHRoZSBiaW5hcnkgdmVy
c2lvbiEKLQotVGhlbiB5b3Ugd291bGQgdXNlIGxkbWluZm8gaW4gZHVtcCBtb2RlIHRvIG9idGFp
biB0aGUgbmVjZXNzYXJ5IGluZm9ybWF0aW9uOjoKLQotICAgICQgLi9sZG1pbmZvIC0tZHVtcCAv
ZGV2L2hkYQotCi1UaGlzIHdvdWxkIGR1bXAgdGhlIExETSBkYXRhYmFzZSBmb3VuZCBvbiAvZGV2
L2hkYSB3aGljaCBkZXNjcmliZXMgYWxsIG9mIHlvdXIKLWR5bmFtaWMgZGlza3MgYW5kIGFsbCB0
aGUgdm9sdW1lcyBvbiB0aGVtLiAgQXQgdGhlIGJvdHRvbSB5b3Ugd2lsbCBzZWUgdGhlCi1WT0xV
TUUgREVGSU5JVElPTlMgc2VjdGlvbiB3aGljaCBpcyBhbGwgeW91IHJlYWxseSBuZWVkLiAgWW91
IG1heSBuZWVkIHRvIGxvb2sKLWZ1cnRoZXIgYWJvdmUgdG8gZGV0ZXJtaW5lIHdoaWNoIG9mIHRo
ZSBkaXNrcyBpbiB0aGUgdm9sdW1lIGRlZmluaXRpb25zIGlzCi13aGljaCBkZXZpY2UgaW4gTGlu
dXguICBIaW50OiBSdW4gbGRtaW5mbyBvbiBlYWNoIG9mIHlvdXIgZHluYW1pYyBkaXNrcyBhbmQK
LWxvb2sgYXQgdGhlIERpc2sgSWQgY2xvc2UgdG8gdGhlIHRvcCBvZiB0aGUgb3V0cHV0IGZvciBl
YWNoICh0aGUgUFJJVkFURSBIRUFERVIKLXNlY3Rpb24pLiAgWW91IGNhbiB0aGVuIGZpbmQgdGhl
c2UgRGlzayBJZHMgaW4gdGhlIFZCTEsgREFUQUJBU0Ugc2VjdGlvbiBpbiB0aGUKLTxEaXNrPiBj
b21wb25lbnRzIHdoZXJlIHlvdSB3aWxsIGdldCB0aGUgTERNIE5hbWUgZm9yIHRoZSBkaXNrIHRo
YXQgaXMgZm91bmQgaW4KLXRoZSBWT0xVTUUgREVGSU5JVElPTlMgc2VjdGlvbi4KLQotTm90ZSB5
b3Ugd2lsbCBhbHNvIG5lZWQgdG8gZW5hYmxlIHRoZSBMRE0gZHJpdmVyIGluIHRoZSBMaW51eCBr
ZXJuZWwuICBJZiB5b3VyCi1kaXN0cmlidXRpb24gZGlkIG5vdCBlbmFibGUgaXQsIHlvdSB3aWxs
IG5lZWQgdG8gcmVjb21waWxlIHRoZSBrZXJuZWwgd2l0aCBpdAotZW5hYmxlZC4gIFRoaXMgd2ls
bCBjcmVhdGUgdGhlIExETSBwYXJ0aXRpb25zIG9uIGVhY2ggZGV2aWNlIGF0IGJvb3QgdGltZS4g
IFlvdQotd291bGQgdGhlbiB1c2UgdGhvc2UgZGV2aWNlcyAoZm9yIC9kZXYvaGRhIHRoZXkgd291
bGQgYmUgL2Rldi9oZGExLCAyLCAzLCBldGMpCi1pbiB0aGUgRGV2aWNlLU1hcHBlciB0YWJsZS4K
LQotWW91IGNhbiBhbHNvIGJ5cGFzcyB1c2luZyB0aGUgTERNIGRyaXZlciBieSB1c2luZyB0aGUg
bWFpbiBkZXZpY2UgKGUuZy4KLS9kZXYvaGRhKSBhbmQgdGhlbiB1c2luZyB0aGUgb2Zmc2V0cyBv
ZiB0aGUgTERNIHBhcnRpdGlvbnMgaW50byB0aGlzIGRldmljZSBhcwotdGhlICJTdGFydCBzZWN0
b3Igb2YgZGV2aWNlIiB3aGVuIGNyZWF0aW5nIHRoZSB0YWJsZS4gIE9uY2UgYWdhaW4gbGRtaW5m
byB3b3VsZAotZ2l2ZSB5b3UgdGhlIGNvcnJlY3QgaW5mb3JtYXRpb24gdG8gZG8gdGhpcy4KLQot
QXNzdW1pbmcgeW91IGtub3cgYWxsIHlvdXIgZGV2aWNlcyBhbmQgdGhlaXIgc2l6ZXMgdGhpbmdz
IGFyZSBlYXN5LgotCi1Gb3IgYSBsaW5lYXIgcmFpZCB0aGUgdGFibGUgd291bGQgbG9vayBsaWtl
IHRoaXMgKG5vdGUgYWxsIHZhbHVlcyBhcmUgaW4KLTUxMi1ieXRlIHNlY3RvcnMpOjoKLQotICAg
ICMgT2Zmc2V0IGludG8JU2l6ZSBvZiB0aGlzCVJhaWQgdHlwZQlEZXZpY2UJCVN0YXJ0IHNlY3Rv
cgotICAgICMgdm9sdW1lCWRldmljZQkJCQkJCW9mIGRldmljZQotICAgIDAJCTEwMjgxNjEJCWxp
bmVhcgkJL2Rldi9oZGExCTAKLSAgICAxMDI4MTYxCQkzOTAzNzYyCQlsaW5lYXIJCS9kZXYvaGRi
MgkwCi0gICAgNDkzMTkyMwkJMjEwMzIxMQkJbGluZWFyCQkvZGV2L2hkYzEJMAotCi1Gb3IgYSBz
dHJpcGVkIHZvbHVtZSwgaS5lLiByYWlkIGxldmVsIDAsIHlvdSB3aWxsIG5lZWQgdG8ga25vdyB0
aGUgY2h1bmsgc2l6ZQoteW91IHVzZWQgd2hlbiBjcmVhdGluZyB0aGUgdm9sdW1lLiAgV2luZG93
cyB1c2VzIDY0a2lCIGFzIHRoZSBkZWZhdWx0LCBzbyBpdAotd2lsbCBwcm9iYWJseSBiZSB0aGlz
IHVubGVzcyB5b3UgY2hhbmdlcyB0aGUgZGVmYXVsdHMgd2hlbiBjcmVhdGluZyB0aGUgYXJyYXku
Ci0KLUZvciBhIHJhaWQgbGV2ZWwgMCB0aGUgdGFibGUgd291bGQgbG9vayBsaWtlIHRoaXMgKG5v
dGUgYWxsIHZhbHVlcyBhcmUgaW4KLTUxMi1ieXRlIHNlY3RvcnMpOjoKLQotICAgICMgT2Zmc2V0
ICAgU2l6ZQkgICAgUmFpZCAgICAgTnVtYmVyICAgQ2h1bmsgIDFzdCAgICAgICAgU3RhcnQJMm5k
CSAgU3RhcnQKLSAgICAjIGludG8gICAgIG9mIHRoZSAgIHR5cGUgICAgIG9mCSAgICAgIHNpemUg
ICBEZXZpY2UJaW4JRGV2aWNlCSAgaW4KLSAgICAjIHZvbHVtZSAgIHZvbHVtZQkgICAgIHN0cmlw
ZXMJCQlkZXZpY2UJCSAgZGV2aWNlCi0gICAgMAkgICAyMDU2MzIwICBzdHJpcGVkICAyCSAgICAg
IDEyOCAgICAvZGV2L2hkYTEJMAkvZGV2L2hkYjEgMAotCi1JZiB0aGVyZSBhcmUgbW9yZSB0aGFu
IHR3byBkZXZpY2VzLCBqdXN0IGFkZCBlYWNoIG9mIHRoZW0gdG8gdGhlIGVuZCBvZiB0aGUKLWxp
bmUuCi0KLUZpbmFsbHksIGZvciBhIG1pcnJvcmVkIHZvbHVtZSwgaS5lLiByYWlkIGxldmVsIDEs
IHRoZSB0YWJsZSB3b3VsZCBsb29rIGxpa2UKLXRoaXMgKG5vdGUgYWxsIHZhbHVlcyBhcmUgaW4g
NTEyLWJ5dGUgc2VjdG9ycyk6OgotCi0gICAgIyBPZnMgU2l6ZSAgIFJhaWQgICBMb2cgIE51bWJl
ciBSZWdpb24gU2hvdWxkIE51bWJlciBTb3VyY2UgIFN0YXJ0IFRhcmdldCBTdGFydAotICAgICMg
aW4gIG9mIHRoZSB0eXBlICAgdHlwZSBvZiBsb2cgc2l6ZSAgIHN5bmM/ICBvZiAgICAgRGV2aWNl
ICBpbiAgICBEZXZpY2UgaW4KLSAgICAjIHZvbCB2b2x1bWUJCSBwYXJhbXMJCSAgICAgbWlycm9y
cwkgICAgIERldmljZQkgIERldmljZQotICAgIDAgICAgMjA1NjMyMCBtaXJyb3IgY29yZSAyCTE2
ICAgICBub3N5bmMgMgkgICAvZGV2L2hkYTEgMCAgIC9kZXYvaGRiMSAwCi0KLUlmIHlvdSBhcmUg
bWlycm9yaW5nIHRvIG11bHRpcGxlIGRldmljZXMgeW91IGNhbiBzcGVjaWZ5IGZ1cnRoZXIgdGFy
Z2V0cyBhdCB0aGUKLWVuZCBvZiB0aGUgbGluZS4KLQotTm90ZSB0aGUgIlNob3VsZCBzeW5jPyIg
cGFyYW1ldGVyICJub3N5bmMiIG1lYW5zIHRoYXQgdGhlIHR3byBtaXJyb3JzIGFyZQotYWxyZWFk
eSBpbiBzeW5jIHdoaWNoIHdpbGwgYmUgdGhlIGNhc2Ugb24gYSBjbGVhbiBzaHV0ZG93biBvZiBX
aW5kb3dzLiAgSWYgdGhlCi1taXJyb3JzIGFyZSBub3QgY2xlYW4sIHlvdSBjYW4gc3BlY2lmeSB0
aGUgInN5bmMiIG9wdGlvbiBpbnN0ZWFkIG9mICJub3N5bmMiCi1hbmQgdGhlIERldmljZS1NYXBw
ZXIgZHJpdmVyIHdpbGwgdGhlbiBjb3B5IHRoZSBlbnRpcmV0eSBvZiB0aGUgIlNvdXJjZSBEZXZp
Y2UiCi10byB0aGUgIlRhcmdldCBEZXZpY2UiIG9yIGlmIHlvdSBzcGVjaWZpZWQgbXVsdGlwbGUg
dGFyZ2V0IGRldmljZXMgdG8gYWxsIG9mCi10aGVtLgotCi1PbmNlIHlvdSBoYXZlIHlvdXIgdGFi
bGUsIHNhdmUgaXQgaW4gYSBmaWxlIHNvbWV3aGVyZSAoZS5nLiAvZXRjL250ZnN2b2x1bWUxKSwK
LWFuZCBoYW5kIGl0IG92ZXIgdG8gZG1zZXR1cCB0byB3b3JrIHdpdGgsIGxpa2Ugc286OgotCi0g
ICAgJCBkbXNldHVwIGNyZWF0ZSBteXZvbHVtZTEgL2V0Yy9udGZzdm9sdW1lMQotCi1Zb3UgY2Fu
IG9idmlvdXNseSByZXBsYWNlICJteXZvbHVtZTEiIHdpdGggd2hhdGV2ZXIgbmFtZSB5b3UgbGlr
ZS4KLQotSWYgaXQgYWxsIHdvcmtlZCwgeW91IHdpbGwgbm93IGhhdmUgdGhlIGRldmljZSAvZGV2
L2RldmljZS1tYXBwZXIvbXl2b2x1bWUxCi13aGljaCB5b3UgY2FuIHRoZW4ganVzdCB1c2UgYXMg
YW4gYXJndW1lbnQgdG8gdGhlIG1vdW50IGNvbW1hbmQgYXMgdXN1YWwgdG8KLW1vdW50IHRoZSBu
dGZzIHZvbHVtZS4gIEZvciBleGFtcGxlOjoKLQotICAgICQgbW91bnQgLXQgbnRmcyAtbyBybyAv
ZGV2L2RldmljZS1tYXBwZXIvbXl2b2x1bWUxIC9tbnQvbXl2b2wxCi0KLShZb3UgbmVlZCB0byBj
cmVhdGUgdGhlIGRpcmVjdG9yeSAvbW50L215dm9sMSBmaXJzdCBhbmQgb2YgY291cnNlIHlvdSBj
YW4gdXNlCi1hbnl0aGluZyB5b3UgbGlrZSBpbnN0ZWFkIG9mIC9tbnQvbXl2b2wxIGFzIGxvbmcg
YXMgaXQgaXMgYW4gZXhpc3RpbmcKLWRpcmVjdG9yeS4pCi0KLUl0IGlzIGFkdmlzYWJsZSB0byBk
byB0aGUgbW91bnQgcmVhZC1vbmx5IHRvIHNlZSBpZiB0aGUgdm9sdW1lIGhhcyBiZWVuIHNldHVw
Ci1jb3JyZWN0bHkgdG8gYXZvaWQgdGhlIHBvc3NpYmlsaXR5IG9mIGNhdXNpbmcgZGFtYWdlIHRv
IHRoZSBkYXRhIG9uIHRoZSBudGZzCi12b2x1bWUuCi0KLQotVGhlIFNvZnR3YXJlIFJBSUQgLyBN
RCBkcml2ZXIKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0KLUFuIGFsdGVybmF0aXZl
IHRvIHVzaW5nIHRoZSBEZXZpY2UtTWFwcGVyIGRyaXZlciBpcyB0byB1c2UgdGhlIGtlcm5lbCdz
Ci1Tb2Z0d2FyZSBSQUlEIC8gTUQgZHJpdmVyLiAgRm9yIHdoaWNoIHlvdSBuZWVkIHRvIHNldCB1
cCB5b3VyIC9ldGMvcmFpZHRhYgotYXBwcm9wcmlhdGVseSAoc2VlIG1hbiA1IHJhaWR0YWIpLgot
Ci1MaW5lYXIgdm9sdW1lIHNldHMsIGkuZS4gbGluZWFyIHJhaWQsIGFzIHdlbGwgYXMgc3RyaXBl
IHNldHMsIGkuZS4gcmFpZCBsZXZlbAotMCwgaGF2ZSBiZWVuIHRlc3RlZCBhbmQgd29yayBmaW5l
ICh0aG91Z2ggc2VlIHNlY3Rpb24gIkxpbWl0YXRpb25zIHdoZW4gdXNpbmcKLXRoZSBNRCBkcml2
ZXIgd2l0aCBOVEZTIHZvbHVtZXMiIGVzcGVjaWFsbHkgaWYgeW91IHdhbnQgdG8gdXNlIGxpbmVh
ciByYWlkKS4KLUV2ZW4gdGhvdWdoIHVudGVzdGVkLCB0aGVyZSBpcyBubyByZWFzb24gd2h5IG1p
cnJvcnMsIGkuZS4gcmFpZCBsZXZlbCAxLCBhbmQKLXN0cmlwZXMgd2l0aCBwYXJpdHksIGkuZS4g
cmFpZCBsZXZlbCA1LCBzaG91bGQgbm90IHdvcmssIHRvby4KLQotWW91IGhhdmUgdG8gdXNlIHRo
ZSAicGVyc2lzdGVudC1zdXBlcmJsb2NrIDAiIG9wdGlvbiBmb3IgZWFjaCByYWlkLWRpc2sgaW4g
dGhlCi1OVEZTIHZvbHVtZS9zdHJpcGUgeW91IGFyZSBjb25maWd1cmluZyBpbiAvZXRjL3JhaWR0
YWIgYXMgdGhlIHBlcnNpc3RlbnQKLXN1cGVyYmxvY2sgdXNlZCBieSB0aGUgTUQgZHJpdmVyIHdv
dWxkIGRhbWFnZSB0aGUgTlRGUyB2b2x1bWUuCi0KLVdpbmRvd3MgYnkgZGVmYXVsdCB1c2VzIGEg
c3RyaXBlIGNodW5rIHNpemUgb2YgNjRrLCBzbyB5b3UgcHJvYmFibHkgd2FudCB0aGUKLSJjaHVu
ay1zaXplIDY0ayIgb3B0aW9uIGZvciBlYWNoIHJhaWQtZGlzaywgdG9vLgotCi1Gb3IgZXhhbXBs
ZSwgaWYgeW91IGhhdmUgYSBzdHJpcGUgc2V0IGNvbnNpc3Rpbmcgb2YgdHdvIHBhcnRpdGlvbnMg
L2Rldi9oZGE1Ci1hbmQgL2Rldi9oZGIxIHlvdXIgL2V0Yy9yYWlkdGFiIHdvdWxkIGxvb2sgbGlr
ZSB0aGlzOjoKLQotICAgIHJhaWRkZXYgL2Rldi9tZDAKLQkgICAgcmFpZC1sZXZlbAkwCi0JICAg
IG5yLXJhaWQtZGlza3MJMgotCSAgICBuci1zcGFyZS1kaXNrcwkwCi0JICAgIHBlcnNpc3RlbnQt
c3VwZXJibG9jawkwCi0JICAgIGNodW5rLXNpemUJNjRrCi0JICAgIGRldmljZQkJL2Rldi9oZGE1
Ci0JICAgIHJhaWQtZGlzawkwCi0JICAgIGRldmljZQkJL2Rldi9oZGIxCi0JICAgIHJhaWQtZGlz
awkxCi0KLUZvciBsaW5lYXIgcmFpZCwganVzdCBjaGFuZ2UgdGhlIHJhaWQtbGV2ZWwgYWJvdmUg
dG8gInJhaWQtbGV2ZWwgbGluZWFyIiwgZm9yCi1taXJyb3JzLCBjaGFuZ2UgaXQgdG8gInJhaWQt
bGV2ZWwgMSIsIGFuZCBmb3Igc3RyaXBlIHNldHMgd2l0aCBwYXJpdHksIGNoYW5nZQotaXQgdG8g
InJhaWQtbGV2ZWwgNSIuCi0KLU5vdGUgZm9yIHN0cmlwZSBzZXRzIHdpdGggcGFyaXR5IHlvdSB3
aWxsIGFsc28gbmVlZCB0byB0ZWxsIHRoZSBNRCBkcml2ZXIKLXdoaWNoIHBhcml0eSBhbGdvcml0
aG0gdG8gdXNlIGJ5IHNwZWNpZnlpbmcgdGhlIG9wdGlvbiAicGFyaXR5LWFsZ29yaXRobQotd2hp
Y2giLCB3aGVyZSB5b3UgbmVlZCB0byByZXBsYWNlICJ3aGljaCIgd2l0aCB0aGUgbmFtZSBvZiB0
aGUgYWxnb3JpdGhtIHRvCi11c2UgKHNlZSBtYW4gNSByYWlkdGFiIGZvciBhdmFpbGFibGUgYWxn
b3JpdGhtcykgYW5kIHlvdSB3aWxsIGhhdmUgdG8gdHJ5IHRoZQotZGlmZmVyZW50IGF2YWlsYWJs
ZSBhbGdvcml0aG1zIHVudGlsIHlvdSBmaW5kIG9uZSB0aGF0IHdvcmtzLiAgTWFrZSBzdXJlIHlv
dQotYXJlIHdvcmtpbmcgcmVhZC1vbmx5IHdoZW4gcGxheWluZyB3aXRoIHRoaXMgYXMgeW91IG1h
eSBkYW1hZ2UgeW91ciBkYXRhCi1vdGhlcndpc2UuICBJZiB5b3UgZmluZCB3aGljaCBhbGdvcml0
aG0gd29ya3MgcGxlYXNlIGxldCB1cyBrbm93IChlbWFpbCB0aGUKLWxpbnV4LW50ZnMgZGV2ZWxv
cGVycyBsaXN0IGxpbnV4LW50ZnMtZGV2QGxpc3RzLnNvdXJjZWZvcmdlLm5ldCBvciBkcm9wIGlu
IG9uCi1JUkMgaW4gY2hhbm5lbCAjbnRmcyBvbiB0aGUgaXJjLmZyZWVub2RlLm5ldCBuZXR3b3Jr
KSBzbyB3ZSBjYW4gdXBkYXRlIHRoaXMKLWRvY3VtZW50YXRpb24uCi0KLU9uY2UgdGhlIHJhaWR0
YWIgaXMgc2V0dXAsIHJ1biBmb3IgZXhhbXBsZSByYWlkMHJ1biAtYSB0byBzdGFydCBhbGwgZGV2
aWNlcyBvcgotcmFpZDBydW4gL2Rldi9tZDAgdG8gc3RhcnQgYSBwYXJ0aWN1bGFyIG1kIGRldmlj
ZSwgaW4gdGhpcyBjYXNlIC9kZXYvbWQwLgotCi1UaGVuIGp1c3QgdXNlIHRoZSBtb3VudCBjb21t
YW5kIGFzIHVzdWFsIHRvIG1vdW50IHRoZSBudGZzIHZvbHVtZSB1c2luZyBmb3IKLWV4YW1wbGU6
OgotCi0gICAgbW91bnQgLXQgbnRmcyAtbyBybyAvZGV2L21kMCAvbW50L215bnRmc3ZvbHVtZQot
Ci1JdCBpcyBhZHZpc2FibGUgdG8gZG8gdGhlIG1vdW50IHJlYWQtb25seSB0byBzZWUgaWYgdGhl
IG1kIHZvbHVtZSBoYXMgYmVlbgotc2V0dXAgY29ycmVjdGx5IHRvIGF2b2lkIHRoZSBwb3NzaWJp
bGl0eSBvZiBjYXVzaW5nIGRhbWFnZSB0byB0aGUgZGF0YSBvbiB0aGUKLW50ZnMgdm9sdW1lLgot
Ci0KLUxpbWl0YXRpb25zIHdoZW4gdXNpbmcgdGhlIFNvZnR3YXJlIFJBSUQgLyBNRCBkcml2ZXIK
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0K
LVVzaW5nIHRoZSBtZCBkcml2ZXIgd2lsbCBub3Qgd29yayBwcm9wZXJseSBpZiBhbnkgb2YgeW91
ciBOVEZTIHBhcnRpdGlvbnMgaGF2ZQotYW4gb2RkIG51bWJlciBvZiBzZWN0b3JzLiAgVGhpcyBp
cyBlc3BlY2lhbGx5IGltcG9ydGFudCBmb3IgbGluZWFyIHJhaWQgYXMgYWxsCi1kYXRhIGFmdGVy
IHRoZSBmaXJzdCBwYXJ0aXRpb24gd2l0aCBhbiBvZGQgbnVtYmVyIG9mIHNlY3RvcnMgd2lsbCBi
ZSBvZmZzZXQgYnkKLW9uZSBvciBtb3JlIHNlY3RvcnMgc28gaWYgeW91IG1vdW50IHN1Y2ggYSBw
YXJ0aXRpb24gd2l0aCB3cml0ZSBzdXBwb3J0IHlvdQotd2lsbCBjYXVzZSBtYXNzaXZlIGRhbWFn
ZSB0byB0aGUgZGF0YSBvbiB0aGUgdm9sdW1lIHdoaWNoIHdpbGwgb25seSBiZWNvbWUKLWFwcGFy
ZW50IHdoZW4geW91IHRyeSB0byB1c2UgdGhlIHZvbHVtZSBhZ2FpbiB1bmRlciBXaW5kb3dzLgot
Ci1TbyB3aGVuIHVzaW5nIGxpbmVhciByYWlkLCBtYWtlIHN1cmUgdGhhdCBhbGwgeW91ciBwYXJ0
aXRpb25zIGhhdmUgYW4gZXZlbgotbnVtYmVyIG9mIHNlY3RvcnMgQkVGT1JFIGF0dGVtcHRpbmcg
dG8gdXNlIGl0LiAgWW91IGhhdmUgYmVlbiB3YXJuZWQhCi0KLUV2ZW4gYmV0dGVyIGlzIHRvIHNp
bXBseSB1c2UgdGhlIERldmljZS1NYXBwZXIgZm9yIGxpbmVhciByYWlkIGFuZCB0aGVuIHlvdSBk
bwotbm90IGhhdmUgdGhpcyBwcm9ibGVtIHdpdGggb2RkIG51bWJlcnMgb2Ygc2VjdG9ycy4KZGlm
ZiAtLWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggMzkxYmJiODU1Y2JlLi45
ZDRhMWU1YThlN2YgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBA
IC0xNTQ2MCwxNiArMTU0NjAsNiBAQCBXOglodHRwczovL2dpdGh1Yi5jb20vZGF2ZWppYW5nL2xp
bnV4L3dpa2kKIFQ6CWdpdCBodHRwczovL2dpdGh1Yi5jb20vZGF2ZWppYW5nL2xpbnV4LmdpdAog
RjoJZHJpdmVycy9udGIvaHcvaW50ZWwvCiAKLU5URlMgRklMRVNZU1RFTQotTToJQW50b24gQWx0
YXBhcm1ha292IDxhbnRvbkB0dXhlcmEuY29tPgotUjoJTmFtamFlIEplb24gPGxpbmtpbmplb25A
a2VybmVsLm9yZz4KLUw6CWxpbnV4LW50ZnMtZGV2QGxpc3RzLnNvdXJjZWZvcmdlLm5ldAotUzoJ
U3VwcG9ydGVkCi1XOglodHRwOi8vd3d3LnR1eGVyYS5jb20vCi1UOglnaXQgZ2l0Oi8vZ2l0Lmtl
cm5lbC5vcmcvcHViL3NjbS9saW51eC9rZXJuZWwvZ2l0L2FpYTIxL250ZnMuZ2l0Ci1GOglEb2N1
bWVudGF0aW9uL2ZpbGVzeXN0ZW1zL250ZnMucnN0Ci1GOglmcy9udGZzLwotCiBOVEZTMyBGSUxF
U1lTVEVNCiBNOglLb25zdGFudGluIEtvbWFyb3YgPGFsbWF6LmFsZXhhbmRyb3ZpY2hAcGFyYWdv
bi1zb2Z0d2FyZS5jb20+CiBMOgludGZzM0BsaXN0cy5saW51eC5kZXYKZGlmZiAtLWdpdCBhL2Zz
L0tjb25maWcgYi9mcy9LY29uZmlnCmluZGV4IGEzMTU5ODMxYmE5OC4uOTZlYjlkMzFjNWE5IDEw
MDY0NAotLS0gYS9mcy9LY29uZmlnCisrKyBiL2ZzL0tjb25maWcKQEAgLTE2Myw3ICsxNjMsNiBA
QCBtZW51ICJET1MvRkFUL0VYRkFUL05UIEZpbGVzeXN0ZW1zIgogCiBzb3VyY2UgImZzL2ZhdC9L
Y29uZmlnIgogc291cmNlICJmcy9leGZhdC9LY29uZmlnIgotc291cmNlICJmcy9udGZzL0tjb25m
aWciCiBzb3VyY2UgImZzL250ZnMzL0tjb25maWciCiAKIGVuZG1lbnUKZGlmZiAtLWdpdCBhL2Zz
L01ha2VmaWxlIGIvZnMvTWFrZWZpbGUKaW5kZXggYTY5NjJjNTg4OTYyLi5mYWViMGYzYTEwMTgg
MTAwNjQ0Ci0tLSBhL2ZzL01ha2VmaWxlCisrKyBiL2ZzL01ha2VmaWxlCkBAIC05Miw3ICs5Miw2
IEBAIG9iai15CQkJCSs9IHVuaWNvZGUvCiBvYmotJChDT05GSUdfU1lTVl9GUykJCSs9IHN5c3Yv
CiBvYmotJChDT05GSUdfU01CRlMpCQkrPSBzbWIvCiBvYmotJChDT05GSUdfSFBGU19GUykJCSs9
IGhwZnMvCi1vYmotJChDT05GSUdfTlRGU19GUykJCSs9IG50ZnMvCiBvYmotJChDT05GSUdfTlRG
UzNfRlMpCQkrPSBudGZzMy8KIG9iai0kKENPTkZJR19VRlNfRlMpCQkrPSB1ZnMvCiBvYmotJChD
T05GSUdfRUZTX0ZTKQkJKz0gZWZzLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9LY29uZmlnIGIvZnMv
bnRmcy9LY29uZmlnCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA3YjI1MDk3NDE3MzUu
LjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL0tjb25maWcKKysrIC9kZXYvbnVsbApAQCAtMSw4
MSArMCwwIEBACi0jIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKLWNvbmZp
ZyBOVEZTX0ZTCi0JdHJpc3RhdGUgIk5URlMgZmlsZSBzeXN0ZW0gc3VwcG9ydCIKLQlzZWxlY3Qg
QlVGRkVSX0hFQUQKLQlzZWxlY3QgTkxTCi0JaGVscAotCSAgTlRGUyBpcyB0aGUgZmlsZSBzeXN0
ZW0gb2YgTWljcm9zb2Z0IFdpbmRvd3MgTlQsIDIwMDAsIFhQIGFuZCAyMDAzLgotCi0JICBTYXlp
bmcgWSBvciBNIGhlcmUgZW5hYmxlcyByZWFkIHN1cHBvcnQuICBUaGVyZSBpcyBwYXJ0aWFsLCBi
dXQKLQkgIHNhZmUsIHdyaXRlIHN1cHBvcnQgYXZhaWxhYmxlLiAgRm9yIHdyaXRlIHN1cHBvcnQg
eW91IG11c3QgYWxzbwotCSAgc2F5IFkgdG8gIk5URlMgd3JpdGUgc3VwcG9ydCIgYmVsb3cuCi0K
LQkgIFRoZXJlIGFyZSBhbHNvIGEgbnVtYmVyIG9mIHVzZXItc3BhY2UgdG9vbHMgYXZhaWxhYmxl
LCBjYWxsZWQKLQkgIG50ZnNwcm9ncy4gIFRoZXNlIGluY2x1ZGUgbnRmc3VuZGVsZXRlIGFuZCBu
dGZzcmVzaXplLCB0aGF0IHdvcmsKLQkgIHdpdGhvdXQgTlRGUyBzdXBwb3J0IGVuYWJsZWQgaW4g
dGhlIGtlcm5lbC4KLQotCSAgVGhpcyBpcyBhIHJld3JpdGUgZnJvbSBzY3JhdGNoIG9mIExpbnV4
IE5URlMgc3VwcG9ydCBhbmQgcmVwbGFjZWQKLQkgIHRoZSBvbGQgTlRGUyBjb2RlIHN0YXJ0aW5n
IHdpdGggTGludXggMi41LjExLiAgQSBiYWNrcG9ydCB0bwotCSAgdGhlIExpbnV4IDIuNCBrZXJu
ZWwgc2VyaWVzIGlzIHNlcGFyYXRlbHkgYXZhaWxhYmxlIGFzIGEgcGF0Y2gKLQkgIGZyb20gdGhl
IHByb2plY3Qgd2ViIHNpdGUuCi0KLQkgIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSA8ZmlsZTpE
b2N1bWVudGF0aW9uL2ZpbGVzeXN0ZW1zL250ZnMucnN0PgotCSAgYW5kIDxodHRwOi8vd3d3Lmxp
bnV4LW50ZnMub3JnLz4uCi0KLQkgIFRvIGNvbXBpbGUgdGhpcyBmaWxlIHN5c3RlbSBzdXBwb3J0
IGFzIGEgbW9kdWxlLCBjaG9vc2UgTSBoZXJlOiB0aGUKLQkgIG1vZHVsZSB3aWxsIGJlIGNhbGxl
ZCBudGZzLgotCi0JICBJZiB5b3UgYXJlIG5vdCB1c2luZyBXaW5kb3dzIE5ULCAyMDAwLCBYUCBv
ciAyMDAzIGluIGFkZGl0aW9uIHRvCi0JICBMaW51eCBvbiB5b3VyIGNvbXB1dGVyIGl0IGlzIHNh
ZmUgdG8gc2F5IE4uCi0KLWNvbmZpZyBOVEZTX0RFQlVHCi0JYm9vbCAiTlRGUyBkZWJ1Z2dpbmcg
c3VwcG9ydCIKLQlkZXBlbmRzIG9uIE5URlNfRlMKLQloZWxwCi0JICBJZiB5b3UgYXJlIGV4cGVy
aWVuY2luZyBhbnkgcHJvYmxlbXMgd2l0aCB0aGUgTlRGUyBmaWxlIHN5c3RlbSwgc2F5Ci0JICBZ
IGhlcmUuICBUaGlzIHdpbGwgcmVzdWx0IGluIGFkZGl0aW9uYWwgY29uc2lzdGVuY3kgY2hlY2tz
IHRvIGJlCi0JICBwZXJmb3JtZWQgYnkgdGhlIGRyaXZlciBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwg
ZGVidWdnaW5nIG1lc3NhZ2VzIHRvCi0JICBiZSB3cml0dGVuIHRvIHRoZSBzeXN0ZW0gbG9nLiAg
Tm90ZSB0aGF0IGRlYnVnZ2luZyBtZXNzYWdlcyBhcmUKLQkgIGRpc2FibGVkIGJ5IGRlZmF1bHQu
ICBUbyBlbmFibGUgdGhlbSwgc3VwcGx5IHRoZSBvcHRpb24gZGVidWdfbXNncz0xCi0JICBhdCB0
aGUga2VybmVsIGNvbW1hbmQgbGluZSB3aGVuIGJvb3RpbmcgdGhlIGtlcm5lbCBvciBhcyBhbiBv
cHRpb24KLQkgIHRvIGluc21vZCB3aGVuIGxvYWRpbmcgdGhlIG50ZnMgbW9kdWxlLiAgT25jZSB0
aGUgZHJpdmVyIGlzIGFjdGl2ZSwKLQkgIHlvdSBjYW4gZW5hYmxlIGRlYnVnZ2luZyBtZXNzYWdl
cyBieSBkb2luZyAoYXMgcm9vdCk6Ci0JICBlY2hvIDEgPiAvcHJvYy9zeXMvZnMvbnRmcy1kZWJ1
ZwotCSAgUmVwbGFjaW5nIHRoZSAiMSIgd2l0aCAiMCIgd291bGQgZGlzYWJsZSBkZWJ1ZyBtZXNz
YWdlcy4KLQotCSAgSWYgeW91IGxlYXZlIGRlYnVnZ2luZyBtZXNzYWdlcyBkaXNhYmxlZCwgdGhp
cyByZXN1bHRzIGluIGxpdHRsZQotCSAgb3ZlcmhlYWQsIGJ1dCBlbmFibGluZyBkZWJ1ZyBtZXNz
YWdlcyByZXN1bHRzIGluIHZlcnkgc2lnbmlmaWNhbnQKLQkgIHNsb3dkb3duIG9mIHRoZSBzeXN0
ZW0uCi0KLQkgIFdoZW4gcmVwb3J0aW5nIGJ1Z3MsIHBsZWFzZSB0cnkgdG8gaGF2ZSBhdmFpbGFi
bGUgYSBmdWxsIGR1bXAgb2YKLQkgIGRlYnVnZ2luZyBtZXNzYWdlcyB3aGlsZSB0aGUgbWlzYmVo
YXZpb3VyIHdhcyBvY2N1cnJpbmcuCi0KLWNvbmZpZyBOVEZTX1JXCi0JYm9vbCAiTlRGUyB3cml0
ZSBzdXBwb3J0IgotCWRlcGVuZHMgb24gTlRGU19GUwotCWRlcGVuZHMgb24gUEFHRV9TSVpFX0xF
U1NfVEhBTl82NEtCCi0JaGVscAotCSAgVGhpcyBlbmFibGVzIHRoZSBwYXJ0aWFsLCBidXQgc2Fm
ZSwgd3JpdGUgc3VwcG9ydCBpbiB0aGUgTlRGUyBkcml2ZXIuCi0KLQkgIFRoZSBvbmx5IHN1cHBv
cnRlZCBvcGVyYXRpb24gaXMgb3ZlcndyaXRpbmcgZXhpc3RpbmcgZmlsZXMsIHdpdGhvdXQKLQkg
IGNoYW5naW5nIHRoZSBmaWxlIGxlbmd0aC4gIE5vIGZpbGUgb3IgZGlyZWN0b3J5IGNyZWF0aW9u
LCBkZWxldGlvbiBvcgotCSAgcmVuYW1pbmcgaXMgcG9zc2libGUuICBOb3RlIG9ubHkgbm9uLXJl
c2lkZW50IGZpbGVzIGNhbiBiZSB3cml0dGVuIHRvCi0JICBzbyB5b3UgbWF5IGZpbmQgdGhhdCBz
b21lIHZlcnkgc21hbGwgZmlsZXMgKDw1MDAgYnl0ZXMgb3Igc28pIGNhbm5vdAotCSAgYmUgd3Jp
dHRlbiB0by4KLQotCSAgV2hpbGUgd2UgY2Fubm90IGd1YXJhbnRlZSB0aGF0IGl0IHdpbGwgbm90
IGRhbWFnZSBhbnkgZGF0YSwgd2UgaGF2ZQotCSAgc28gZmFyIG5vdCByZWNlaXZlZCBhIHNpbmds
ZSByZXBvcnQgd2hlcmUgdGhlIGRyaXZlciB3b3VsZCBoYXZlCi0JICBkYW1hZ2VkIHNvbWVvbmVz
IGRhdGEgc28gd2UgYXNzdW1lIGl0IGlzIHBlcmZlY3RseSBzYWZlIHRvIHVzZS4KLQotCSAgTm90
ZTogIFdoaWxlIHdyaXRlIHN1cHBvcnQgaXMgc2FmZSBpbiB0aGlzIHZlcnNpb24gKGEgcmV3cml0
ZSBmcm9tCi0JICBzY3JhdGNoIG9mIHRoZSBOVEZTIHN1cHBvcnQpLCBpdCBzaG91bGQgYmUgbm90
ZWQgdGhhdCB0aGUgb2xkIE5URlMKLQkgIHdyaXRlIHN1cHBvcnQsIGluY2x1ZGVkIGluIExpbnV4
IDIuNS4xMCBhbmQgYmVmb3JlIChzaW5jZSAxOTk3KSwKLQkgIGlzIG5vdCBzYWZlLgotCi0JICBU
aGlzIGlzIGN1cnJlbnRseSB1c2VmdWwgd2l0aCBUb3BvbG9naUxpbnV4LiAgVG9wb2xvZ2lMaW51
eCBpcyBydW4KLQkgIG9uIHRvcCBvZiBhbnkgRE9TL01pY3Jvc29mdCBXaW5kb3dzIHN5c3RlbSB3
aXRob3V0IHBhcnRpdGlvbmluZyB5b3VyCi0JICBoYXJkIGRpc2suICBVbmxpa2Ugb3RoZXIgTGlu
dXggZGlzdHJpYnV0aW9ucyBUb3BvbG9naUxpbnV4IGRvZXMgbm90Ci0JICBuZWVkIGl0cyBvd24g
cGFydGl0aW9uLiAgRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlCi0JICA8aHR0cDovL3RvcG9sb2dp
LWxpbnV4LnNvdXJjZWZvcmdlLm5ldC8+Ci0KLQkgIEl0IGlzIHBlcmZlY3RseSBzYWZlIHRvIHNh
eSBOIGhlcmUuCmRpZmYgLS1naXQgYS9mcy9udGZzL01ha2VmaWxlIGIvZnMvbnRmcy9NYWtlZmls
ZQpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggM2U3MzY1NzJlZDAwLi4wMDAwMDAwMDAw
MDAKLS0tIGEvZnMvbnRmcy9NYWtlZmlsZQorKysgL2Rldi9udWxsCkBAIC0xLDE1ICswLDAgQEAK
LSMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKLSMgUnVsZXMgZm9yIG1ha2luZyB0
aGUgTlRGUyBkcml2ZXIuCi0KLW9iai0kKENPTkZJR19OVEZTX0ZTKSArPSBudGZzLm8KLQotbnRm
cy15IDo9IGFvcHMubyBhdHRyaWIubyBjb2xsYXRlLm8gY29tcHJlc3MubyBkZWJ1Zy5vIGRpci5v
IGZpbGUubyBcCi0JICBpbmRleC5vIGlub2RlLm8gbWZ0Lm8gbXN0Lm8gbmFtZWkubyBydW5saXN0
Lm8gc3VwZXIubyBzeXNjdGwubyBcCi0JICB1bmlzdHIubyB1cGNhc2UubwotCi1udGZzLSQoQ09O
RklHX05URlNfUlcpICs9IGJpdG1hcC5vIGxjbmFsbG9jLm8gbG9nZmlsZS5vIHF1b3RhLm8gdXNu
anJubC5vCi0KLWNjZmxhZ3MteSA6PSAtRE5URlNfVkVSU0lPTj1cIjIuMS4zMlwiCi1jY2ZsYWdz
LSQoQ09ORklHX05URlNfREVCVUcpCSs9IC1EREVCVUcKLWNjZmxhZ3MtJChDT05GSUdfTlRGU19S
VykJKz0gLUROVEZTX1JXCi0KZGlmZiAtLWdpdCBhL2ZzL250ZnMvYW9wcy5jIGIvZnMvbnRmcy9h
b3BzLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDJkMDE1MTdhMmQ1OS4uMDAwMDAw
MDAwMDAwCi0tLSBhL2ZzL250ZnMvYW9wcy5jCisrKyAvZGV2L251bGwKQEAgLTEsMTc0NCArMCww
IEBACi0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgotLyoKLSAq
IGFvcHMuYyAtIE5URlMga2VybmVsIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBhbmQgcGFnZSBj
YWNoZSBoYW5kbGluZy4KLSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAxNCBBbnRvbiBBbHRh
cGFybWFrb3YgYW5kIFR1eGVyYSBJbmMuCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDIgUmljaGFyZCBS
dXNzb24KLSAqLwotCi0jaW5jbHVkZSA8bGludXgvZXJybm8uaD4KLSNpbmNsdWRlIDxsaW51eC9m
cy5oPgotI2luY2x1ZGUgPGxpbnV4L2dmcC5oPgotI2luY2x1ZGUgPGxpbnV4L21tLmg+Ci0jaW5j
bHVkZSA8bGludXgvcGFnZW1hcC5oPgotI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4KLSNpbmNsdWRl
IDxsaW51eC9idWZmZXJfaGVhZC5oPgotI2luY2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPgotI2lu
Y2x1ZGUgPGxpbnV4L2JpdF9zcGlubG9jay5oPgotI2luY2x1ZGUgPGxpbnV4L2Jpby5oPgotCi0j
aW5jbHVkZSAiYW9wcy5oIgotI2luY2x1ZGUgImF0dHJpYi5oIgotI2luY2x1ZGUgImRlYnVnLmgi
Ci0jaW5jbHVkZSAiaW5vZGUuaCIKLSNpbmNsdWRlICJtZnQuaCIKLSNpbmNsdWRlICJydW5saXN0
LmgiCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJudGZzLmgiCi0KLS8qKgotICogbnRm
c19lbmRfYnVmZmVyX2FzeW5jX3JlYWQgLSBhc3luYyBpbyBjb21wbGV0aW9uIGZvciByZWFkaW5n
IGF0dHJpYnV0ZXMKLSAqIEBiaDoJCWJ1ZmZlciBoZWFkIG9uIHdoaWNoIGlvIGlzIGNvbXBsZXRl
ZAotICogQHVwdG9kYXRlOgl3aGV0aGVyIEBiaCBpcyBub3cgdXB0b2RhdGUgb3Igbm90Ci0gKgot
ICogQXN5bmNocm9ub3VzIEkvTyBjb21wbGV0aW9uIGhhbmRsZXIgZm9yIHJlYWRpbmcgcGFnZXMg
YmVsb25naW5nIHRvIHRoZQotICogYXR0cmlidXRlIGFkZHJlc3Mgc3BhY2Ugb2YgYW4gaW5vZGUu
ICBUaGUgaW5vZGVzIGNhbiBlaXRoZXIgYmUgZmlsZXMgb3IKLSAqIGRpcmVjdG9yaWVzIG9yIHRo
ZXkgY2FuIGJlIGZha2UgaW5vZGVzIGRlc2NyaWJpbmcgc29tZSBhdHRyaWJ1dGUuCi0gKgotICog
SWYgTklub01zdFByb3RlY3RlZCgpLCBwZXJmb3JtIHRoZSBwb3N0IHJlYWQgbXN0IGZpeHVwcyB3
aGVuIGFsbCBJTyBvbiB0aGUKLSAqIHBhZ2UgaGFzIGJlZW4gY29tcGxldGVkIGFuZCBtYXJrIHRo
ZSBwYWdlIHVwdG9kYXRlIG9yIHNldCB0aGUgZXJyb3IgYml0IG9uCi0gKiB0aGUgcGFnZS4gIFRv
IGRldGVybWluZSB0aGUgc2l6ZSBvZiB0aGUgcmVjb3JkcyB0aGF0IG5lZWQgZml4aW5nIHVwLCB3
ZQotICogY2hlYXQgYSBsaXR0bGUgYml0IGJ5IHNldHRpbmcgdGhlIGluZGV4X2Jsb2NrX3NpemUg
aW4gbnRmc19pbm9kZSB0byB0aGUgbnRmcwotICogcmVjb3JkIHNpemUsIGFuZCBpbmRleF9ibG9j
a19zaXplX2JpdHMsIHRvIHRoZSBsb2coYmFzZSAyKSBvZiB0aGUgbnRmcwotICogcmVjb3JkIHNp
emUuCi0gKi8KLXN0YXRpYyB2b2lkIG50ZnNfZW5kX2J1ZmZlcl9hc3luY19yZWFkKHN0cnVjdCBi
dWZmZXJfaGVhZCAqYmgsIGludCB1cHRvZGF0ZSkKLXsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwot
CXN0cnVjdCBidWZmZXJfaGVhZCAqZmlyc3QsICp0bXA7Ci0Jc3RydWN0IHBhZ2UgKnBhZ2U7Ci0J
c3RydWN0IGlub2RlICp2aTsKLQludGZzX2lub2RlICpuaTsKLQlpbnQgcGFnZV91cHRvZGF0ZSA9
IDE7Ci0KLQlwYWdlID0gYmgtPmJfcGFnZTsKLQl2aSA9IHBhZ2UtPm1hcHBpbmctPmhvc3Q7Ci0J
bmkgPSBOVEZTX0kodmkpOwotCi0JaWYgKGxpa2VseSh1cHRvZGF0ZSkpIHsKLQkJbG9mZl90IGlf
c2l6ZTsKLQkJczY0IGZpbGVfb2ZzLCBpbml0X3NpemU7Ci0KLQkJc2V0X2J1ZmZlcl91cHRvZGF0
ZShiaCk7Ci0KLQkJZmlsZV9vZnMgPSAoKHM2NClwYWdlLT5pbmRleCA8PCBQQUdFX1NISUZUKSAr
Ci0JCQkJYmhfb2Zmc2V0KGJoKTsKLQkJcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ss
IGZsYWdzKTsKLQkJaW5pdF9zaXplID0gbmktPmluaXRpYWxpemVkX3NpemU7Ci0JCWlfc2l6ZSA9
IGlfc2l6ZV9yZWFkKHZpKTsKLQkJcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9j
aywgZmxhZ3MpOwotCQlpZiAodW5saWtlbHkoaW5pdF9zaXplID4gaV9zaXplKSkgewotCQkJLyog
UmFjZSB3aXRoIHNocmlua2luZyB0cnVuY2F0ZS4gKi8KLQkJCWluaXRfc2l6ZSA9IGlfc2l6ZTsK
LQkJfQotCQkvKiBDaGVjayBmb3IgdGhlIGN1cnJlbnQgYnVmZmVyIGhlYWQgb3ZlcmZsb3dpbmcu
ICovCi0JCWlmICh1bmxpa2VseShmaWxlX29mcyArIGJoLT5iX3NpemUgPiBpbml0X3NpemUpKSB7
Ci0JCQlpbnQgb2ZzOwotCQkJdm9pZCAqa2FkZHI7Ci0KLQkJCW9mcyA9IDA7Ci0JCQlpZiAoZmls
ZV9vZnMgPCBpbml0X3NpemUpCi0JCQkJb2ZzID0gaW5pdF9zaXplIC0gZmlsZV9vZnM7Ci0JCQlr
YWRkciA9IGttYXBfYXRvbWljKHBhZ2UpOwotCQkJbWVtc2V0KGthZGRyICsgYmhfb2Zmc2V0KGJo
KSArIG9mcywgMCwKLQkJCQkJYmgtPmJfc2l6ZSAtIG9mcyk7Ci0JCQlmbHVzaF9kY2FjaGVfcGFn
ZShwYWdlKTsKLQkJCWt1bm1hcF9hdG9taWMoa2FkZHIpOwotCQl9Ci0JfSBlbHNlIHsKLQkJY2xl
YXJfYnVmZmVyX3VwdG9kYXRlKGJoKTsKLQkJU2V0UGFnZUVycm9yKHBhZ2UpOwotCQludGZzX2Vy
cm9yKG5pLT52b2wtPnNiLCAiQnVmZmVyIEkvTyBlcnJvciwgbG9naWNhbCBibG9jayAiCi0JCQkJ
IjB4JWxseC4iLCAodW5zaWduZWQgbG9uZyBsb25nKWJoLT5iX2Jsb2NrbnIpOwotCX0KLQlmaXJz
dCA9IHBhZ2VfYnVmZmVycyhwYWdlKTsKLQlzcGluX2xvY2tfaXJxc2F2ZSgmZmlyc3QtPmJfdXB0
b2RhdGVfbG9jaywgZmxhZ3MpOwotCWNsZWFyX2J1ZmZlcl9hc3luY19yZWFkKGJoKTsKLQl1bmxv
Y2tfYnVmZmVyKGJoKTsKLQl0bXAgPSBiaDsKLQlkbyB7Ci0JCWlmICghYnVmZmVyX3VwdG9kYXRl
KHRtcCkpCi0JCQlwYWdlX3VwdG9kYXRlID0gMDsKLQkJaWYgKGJ1ZmZlcl9hc3luY19yZWFkKHRt
cCkpIHsKLQkJCWlmIChsaWtlbHkoYnVmZmVyX2xvY2tlZCh0bXApKSkKLQkJCQlnb3RvIHN0aWxs
X2J1c3k7Ci0JCQkvKiBBc3luYyBidWZmZXJzIG11c3QgYmUgbG9ja2VkLiAqLwotCQkJQlVHKCk7
Ci0JCX0KLQkJdG1wID0gdG1wLT5iX3RoaXNfcGFnZTsKLQl9IHdoaWxlICh0bXAgIT0gYmgpOwot
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmZpcnN0LT5iX3VwdG9kYXRlX2xvY2ssIGZsYWdzKTsK
LQkvKgotCSAqIElmIG5vbmUgb2YgdGhlIGJ1ZmZlcnMgaGFkIGVycm9ycyB0aGVuIHdlIGNhbiBz
ZXQgdGhlIHBhZ2UgdXB0b2RhdGUsCi0JICogYnV0IHdlIGZpcnN0IGhhdmUgdG8gcGVyZm9ybSB0
aGUgcG9zdCByZWFkIG1zdCBmaXh1cHMsIGlmIHRoZQotCSAqIGF0dHJpYnV0ZSBpcyBtc3QgcHJv
dGVjdGVkLCBpLmUuIGlmIE5Jbm9Nc3RQcm90ZWNlZChuaSkgaXMgdHJ1ZS4KLQkgKiBOb3RlIHdl
IGlnbm9yZSBmaXh1cCBlcnJvcnMgYXMgdGhvc2UgYXJlIGRldGVjdGVkIHdoZW4KLQkgKiBtYXBf
bWZ0X3JlY29yZCgpIGlzIGNhbGxlZCB3aGljaCBnaXZlcyB1cyBwZXIgcmVjb3JkIGdyYW51bGFy
aXR5Ci0JICogcmF0aGVyIHRoYW4gcGVyIHBhZ2UgZ3JhbnVsYXJpdHkuCi0JICovCi0JaWYgKCFO
SW5vTXN0UHJvdGVjdGVkKG5pKSkgewotCQlpZiAobGlrZWx5KHBhZ2VfdXB0b2RhdGUgJiYgIVBh
Z2VFcnJvcihwYWdlKSkpCi0JCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7Ci0JfSBlbHNlIHsKLQkJ
dTggKmthZGRyOwotCQl1bnNpZ25lZCBpbnQgaSwgcmVjczsKLQkJdTMyIHJlY19zaXplOwotCi0J
CXJlY19zaXplID0gbmktPml0eXBlLmluZGV4LmJsb2NrX3NpemU7Ci0JCXJlY3MgPSBQQUdFX1NJ
WkUgLyByZWNfc2l6ZTsKLQkJLyogU2hvdWxkIGhhdmUgYmVlbiB2ZXJpZmllZCBiZWZvcmUgd2Ug
Z290IGhlcmUuLi4gKi8KLQkJQlVHX09OKCFyZWNzKTsKLQkJa2FkZHIgPSBrbWFwX2F0b21pYyhw
YWdlKTsKLQkJZm9yIChpID0gMDsgaSA8IHJlY3M7IGkrKykKLQkJCXBvc3RfcmVhZF9tc3RfZml4
dXAoKE5URlNfUkVDT1JEKikoa2FkZHIgKwotCQkJCQlpICogcmVjX3NpemUpLCByZWNfc2l6ZSk7
Ci0JCWt1bm1hcF9hdG9taWMoa2FkZHIpOwotCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsKLQkJ
aWYgKGxpa2VseShwYWdlX3VwdG9kYXRlICYmICFQYWdlRXJyb3IocGFnZSkpKQotCQkJU2V0UGFn
ZVVwdG9kYXRlKHBhZ2UpOwotCX0KLQl1bmxvY2tfcGFnZShwYWdlKTsKLQlyZXR1cm47Ci1zdGls
bF9idXN5OgotCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmZpcnN0LT5iX3VwdG9kYXRlX2xvY2ss
IGZsYWdzKTsKLQlyZXR1cm47Ci19Ci0KLS8qKgotICogbnRmc19yZWFkX2Jsb2NrIC0gZmlsbCBh
IEBmb2xpbyBvZiBhbiBhZGRyZXNzIHNwYWNlIHdpdGggZGF0YQotICogQGZvbGlvOglwYWdlIGNh
Y2hlIGZvbGlvIHRvIGZpbGwgd2l0aCBkYXRhCi0gKgotICogV2UgcmVhZCBlYWNoIGJ1ZmZlciBh
c3luY2hyb25vdXNseSBhbmQgd2hlbiBhbGwgYnVmZmVycyBhcmUgcmVhZCBpbiwgb3VyIGlvCi0g
KiBjb21wbGV0aW9uIGhhbmRsZXIgbnRmc19lbmRfYnVmZmVyX3JlYWRfYXN5bmMoKSwgaWYgcmVx
dWlyZWQsIGF1dG9tYXRpY2FsbHkKLSAqIGFwcGxpZXMgdGhlIG1zdCBmaXh1cHMgdG8gdGhlIGZv
bGlvIGJlZm9yZSBmaW5hbGx5IG1hcmtpbmcgaXQgdXB0b2RhdGUgYW5kCi0gKiB1bmxvY2tpbmcg
aXQuCi0gKgotICogV2Ugb25seSBlbmZvcmNlIGFsbG9jYXRlZF9zaXplIGxpbWl0IGJlY2F1c2Ug
aV9zaXplIGlzIGNoZWNrZWQgZm9yIGluCi0gKiBnZW5lcmljX2ZpbGVfcmVhZCgpLgotICoKLSAq
IFJldHVybiAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqCi0gKiBDb250YWlu
cyBhbiBhZGFwdGVkIHZlcnNpb24gb2YgZnMvYnVmZmVyLmM6OmJsb2NrX3JlYWRfZnVsbF9mb2xp
bygpLgotICovCi1zdGF0aWMgaW50IG50ZnNfcmVhZF9ibG9jayhzdHJ1Y3QgZm9saW8gKmZvbGlv
KQotewotCWxvZmZfdCBpX3NpemU7Ci0JVkNOIHZjbjsKLQlMQ04gbGNuOwotCXM2NCBpbml0X3Np
emU7Ci0Jc3RydWN0IGlub2RlICp2aTsKLQludGZzX2lub2RlICpuaTsKLQludGZzX3ZvbHVtZSAq
dm9sOwotCXJ1bmxpc3RfZWxlbWVudCAqcmw7Ci0Jc3RydWN0IGJ1ZmZlcl9oZWFkICpiaCwgKmhl
YWQsICphcnJbTUFYX0JVRl9QRVJfUEFHRV07Ci0Jc2VjdG9yX3QgaWJsb2NrLCBsYmxvY2ssIHpi
bG9jazsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwotCXVuc2lnbmVkIGludCBibG9ja3NpemUsIHZj
bl9vZnM7Ci0JaW50IGksIG5yOwotCXVuc2lnbmVkIGNoYXIgYmxvY2tzaXplX2JpdHM7Ci0KLQl2
aSA9IGZvbGlvLT5tYXBwaW5nLT5ob3N0OwotCW5pID0gTlRGU19JKHZpKTsKLQl2b2wgPSBuaS0+
dm9sOwotCi0JLyogJE1GVC8kREFUQSBtdXN0IGhhdmUgaXRzIGNvbXBsZXRlIHJ1bmxpc3QgaW4g
bWVtb3J5IGF0IGFsbCB0aW1lcy4gKi8KLQlCVUdfT04oIW5pLT5ydW5saXN0LnJsICYmICFuaS0+
bWZ0X25vICYmICFOSW5vQXR0cihuaSkpOwotCi0JYmxvY2tzaXplID0gdm9sLT5zYi0+c19ibG9j
a3NpemU7Ci0JYmxvY2tzaXplX2JpdHMgPSB2b2wtPnNiLT5zX2Jsb2Nrc2l6ZV9iaXRzOwotCi0J
aGVhZCA9IGZvbGlvX2J1ZmZlcnMoZm9saW8pOwotCWlmICghaGVhZCkKLQkJaGVhZCA9IGNyZWF0
ZV9lbXB0eV9idWZmZXJzKGZvbGlvLCBibG9ja3NpemUsIDApOwotCWJoID0gaGVhZDsKLQotCS8q
Ci0JICogV2UgbWF5IGJlIHJhY2luZyB3aXRoIHRydW5jYXRlLiAgVG8gYXZvaWQgc29tZSBvZiB0
aGUgcHJvYmxlbXMgd2UKLQkgKiBub3cgdGFrZSBhIHNuYXBzaG90IG9mIHRoZSB2YXJpb3VzIHNp
emVzIGFuZCB1c2UgdGhvc2UgZm9yIHRoZSB3aG9sZQotCSAqIG9mIHRoZSBmdW5jdGlvbi4gIElu
IGNhc2Ugb2YgYW4gZXh0ZW5kaW5nIHRydW5jYXRlIGl0IGp1c3QgbWVhbnMgd2UKLQkgKiBtYXkg
bGVhdmUgc29tZSBidWZmZXJzIHVubWFwcGVkIHdoaWNoIGFyZSBub3cgYWxsb2NhdGVkLiAgVGhp
cyBpcwotCSAqIG5vdCBhIHByb2JsZW0gc2luY2UgdGhlc2UgYnVmZmVycyB3aWxsIGp1c3QgZ2V0
IG1hcHBlZCB3aGVuIGEgd3JpdGUKLQkgKiBvY2N1cnMuICBJbiBjYXNlIG9mIGEgc2hyaW5raW5n
IHRydW5jYXRlLCB3ZSB3aWxsIGRldGVjdCB0aGlzIGxhdGVyCi0JICogb24gZHVlIHRvIHRoZSBy
dW5saXN0IGJlaW5nIGluY29tcGxldGUgYW5kIGlmIHRoZSBmb2xpbyBpcyBiZWluZwotCSAqIGZ1
bGx5IHRydW5jYXRlZCwgdHJ1bmNhdGUgd2lsbCB0aHJvdyBpdCBhd2F5IGFzIHNvb24gYXMgd2Ug
dW5sb2NrCi0JICogaXQgc28gbm8gbmVlZCB0byB3b3JyeSB3aGF0IHdlIGRvIHdpdGggaXQuCi0J
ICovCi0JaWJsb2NrID0gKHM2NClmb2xpby0+aW5kZXggPDwgKFBBR0VfU0hJRlQgLSBibG9ja3Np
emVfYml0cyk7Ci0JcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQls
YmxvY2sgPSAobmktPmFsbG9jYXRlZF9zaXplICsgYmxvY2tzaXplIC0gMSkgPj4gYmxvY2tzaXpl
X2JpdHM7Ci0JaW5pdF9zaXplID0gbmktPmluaXRpYWxpemVkX3NpemU7Ci0JaV9zaXplID0gaV9z
aXplX3JlYWQodmkpOwotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZs
YWdzKTsKLQlpZiAodW5saWtlbHkoaW5pdF9zaXplID4gaV9zaXplKSkgewotCQkvKiBSYWNlIHdp
dGggc2hyaW5raW5nIHRydW5jYXRlLiAqLwotCQlpbml0X3NpemUgPSBpX3NpemU7Ci0JfQotCXpi
bG9jayA9IChpbml0X3NpemUgKyBibG9ja3NpemUgLSAxKSA+PiBibG9ja3NpemVfYml0czsKLQot
CS8qIExvb3AgdGhyb3VnaCBhbGwgdGhlIGJ1ZmZlcnMgaW4gdGhlIGZvbGlvLiAqLwotCXJsID0g
TlVMTDsKLQluciA9IGkgPSAwOwotCWRvIHsKLQkJaW50IGVyciA9IDA7Ci0KLQkJaWYgKHVubGlr
ZWx5KGJ1ZmZlcl91cHRvZGF0ZShiaCkpKQotCQkJY29udGludWU7Ci0JCWlmICh1bmxpa2VseShi
dWZmZXJfbWFwcGVkKGJoKSkpIHsKLQkJCWFycltucisrXSA9IGJoOwotCQkJY29udGludWU7Ci0J
CX0KLQkJYmgtPmJfYmRldiA9IHZvbC0+c2ItPnNfYmRldjsKLQkJLyogSXMgdGhlIGJsb2NrIHdp
dGhpbiB0aGUgYWxsb3dlZCBsaW1pdHM/ICovCi0JCWlmIChpYmxvY2sgPCBsYmxvY2spIHsKLQkJ
CWJvb2wgaXNfcmV0cnkgPSBmYWxzZTsKLQotCQkJLyogQ29udmVydCBpYmxvY2sgaW50byBjb3Jy
ZXNwb25kaW5nIHZjbiBhbmQgb2Zmc2V0LiAqLwotCQkJdmNuID0gKFZDTilpYmxvY2sgPDwgYmxv
Y2tzaXplX2JpdHMgPj4KLQkJCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0czsKLQkJCXZjbl9vZnMg
PSAoKFZDTilpYmxvY2sgPDwgYmxvY2tzaXplX2JpdHMpICYKLQkJCQkJdm9sLT5jbHVzdGVyX3Np
emVfbWFzazsKLQkJCWlmICghcmwpIHsKLWxvY2tfcmV0cnlfcmVtYXA6Ci0JCQkJZG93bl9yZWFk
KCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJCQlybCA9IG5pLT5ydW5saXN0LnJsOwotCQkJfQotCQkJ
aWYgKGxpa2VseShybCAhPSBOVUxMKSkgewotCQkJCS8qIFNlZWsgdG8gZWxlbWVudCBjb250YWlu
aW5nIHRhcmdldCB2Y24uICovCi0JCQkJd2hpbGUgKHJsLT5sZW5ndGggJiYgcmxbMV0udmNuIDw9
IHZjbikKLQkJCQkJcmwrKzsKLQkJCQlsY24gPSBudGZzX3JsX3Zjbl90b19sY24ocmwsIHZjbik7
Ci0JCQl9IGVsc2UKLQkJCQlsY24gPSBMQ05fUkxfTk9UX01BUFBFRDsKLQkJCS8qIFN1Y2Nlc3Nm
dWwgcmVtYXAuICovCi0JCQlpZiAobGNuID49IDApIHsKLQkJCQkvKiBTZXR1cCBidWZmZXIgaGVh
ZCB0byBjb3JyZWN0IGJsb2NrLiAqLwotCQkJCWJoLT5iX2Jsb2NrbnIgPSAoKGxjbiA8PCB2b2wt
PmNsdXN0ZXJfc2l6ZV9iaXRzKQotCQkJCQkJKyB2Y25fb2ZzKSA+PiBibG9ja3NpemVfYml0czsK
LQkJCQlzZXRfYnVmZmVyX21hcHBlZChiaCk7Ci0JCQkJLyogT25seSByZWFkIGluaXRpYWxpemVk
IGRhdGEgYmxvY2tzLiAqLwotCQkJCWlmIChpYmxvY2sgPCB6YmxvY2spIHsKLQkJCQkJYXJyW25y
KytdID0gYmg7Ci0JCQkJCWNvbnRpbnVlOwotCQkJCX0KLQkJCQkvKiBGdWxseSBub24taW5pdGlh
bGl6ZWQgZGF0YSBibG9jaywgemVybyBpdC4gKi8KLQkJCQlnb3RvIGhhbmRsZV96YmxvY2s7Ci0J
CQl9Ci0JCQkvKiBJdCBpcyBhIGhvbGUsIG5lZWQgdG8gemVybyBpdC4gKi8KLQkJCWlmIChsY24g
PT0gTENOX0hPTEUpCi0JCQkJZ290byBoYW5kbGVfaG9sZTsKLQkJCS8qIElmIGZpcnN0IHRyeSBh
bmQgcnVubGlzdCB1bm1hcHBlZCwgbWFwIGFuZCByZXRyeS4gKi8KLQkJCWlmICghaXNfcmV0cnkg
JiYgbGNuID09IExDTl9STF9OT1RfTUFQUEVEKSB7Ci0JCQkJaXNfcmV0cnkgPSB0cnVlOwotCQkJ
CS8qCi0JCQkJICogQXR0ZW1wdCB0byBtYXAgcnVubGlzdCwgZHJvcHBpbmcgbG9jayBmb3IKLQkJ
CQkgKiB0aGUgZHVyYXRpb24uCi0JCQkJICovCi0JCQkJdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9j
ayk7Ci0JCQkJZXJyID0gbnRmc19tYXBfcnVubGlzdChuaSwgdmNuKTsKLQkJCQlpZiAobGlrZWx5
KCFlcnIpKQotCQkJCQlnb3RvIGxvY2tfcmV0cnlfcmVtYXA7Ci0JCQkJcmwgPSBOVUxMOwotCQkJ
fSBlbHNlIGlmICghcmwpCi0JCQkJdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JCQkvKgot
CQkJICogSWYgYnVmZmVyIGlzIG91dHNpZGUgdGhlIHJ1bmxpc3QsIHRyZWF0IGl0IGFzIGEKLQkJ
CSAqIGhvbGUuICBUaGlzIGNhbiBoYXBwZW4gZHVlIHRvIGNvbmN1cnJlbnQgdHJ1bmNhdGUKLQkJ
CSAqIGZvciBleGFtcGxlLgotCQkJICovCi0JCQlpZiAoZXJyID09IC1FTk9FTlQgfHwgbGNuID09
IExDTl9FTk9FTlQpIHsKLQkJCQllcnIgPSAwOwotCQkJCWdvdG8gaGFuZGxlX2hvbGU7Ci0JCQl9
Ci0JCQkvKiBIYXJkIGVycm9yLCB6ZXJvIG91dCByZWdpb24uICovCi0JCQlpZiAoIWVycikKLQkJ
CQllcnIgPSAtRUlPOwotCQkJYmgtPmJfYmxvY2tuciA9IC0xOwotCQkJZm9saW9fc2V0X2Vycm9y
KGZvbGlvKTsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZWFkIGZyb20gaW5v
ZGUgMHglbHgsICIKLQkJCQkJImF0dHJpYnV0ZSB0eXBlIDB4JXgsIHZjbiAweCVsbHgsICIKLQkJ
CQkJIm9mZnNldCAweCV4IGJlY2F1c2UgaXRzIGxvY2F0aW9uIG9uICIKLQkJCQkJImRpc2sgY291
bGQgbm90IGJlIGRldGVybWluZWQlcyAiCi0JCQkJCSIoZXJyb3IgY29kZSAlaSkuIiwgbmktPm1m
dF9ubywKLQkJCQkJbmktPnR5cGUsICh1bnNpZ25lZCBsb25nIGxvbmcpdmNuLAotCQkJCQl2Y25f
b2ZzLCBpc19yZXRyeSA/ICIgZXZlbiBhZnRlciAiCi0JCQkJCSJyZXRyeWluZyIgOiAiIiwgZXJy
KTsKLQkJfQotCQkvKgotCQkgKiBFaXRoZXIgaWJsb2NrIHdhcyBvdXRzaWRlIGxibG9jayBsaW1p
dHMgb3IKLQkJICogbnRmc19ybF92Y25fdG9fbGNuKCkgcmV0dXJuZWQgZXJyb3IuICBKdXN0IHpl
cm8gdGhhdCBwb3J0aW9uCi0JCSAqIG9mIHRoZSBmb2xpbyBhbmQgc2V0IHRoZSBidWZmZXIgdXB0
b2RhdGUuCi0JCSAqLwotaGFuZGxlX2hvbGU6Ci0JCWJoLT5iX2Jsb2NrbnIgPSAtMVVMOwotCQlj
bGVhcl9idWZmZXJfbWFwcGVkKGJoKTsKLWhhbmRsZV96YmxvY2s6Ci0JCWZvbGlvX3plcm9fcmFu
Z2UoZm9saW8sIGkgKiBibG9ja3NpemUsIGJsb2Nrc2l6ZSk7Ci0JCWlmIChsaWtlbHkoIWVycikp
Ci0JCQlzZXRfYnVmZmVyX3VwdG9kYXRlKGJoKTsKLQl9IHdoaWxlIChpKyssIGlibG9jaysrLCAo
YmggPSBiaC0+Yl90aGlzX3BhZ2UpICE9IGhlYWQpOwotCi0JLyogUmVsZWFzZSB0aGUgbG9jayBp
ZiB3ZSB0b29rIGl0LiAqLwotCWlmIChybCkKLQkJdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7
Ci0KLQkvKiBDaGVjayB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBidWZmZXIgcmVhZHkgZm9yIGkvby4g
Ki8KLQlpZiAobnIpIHsKLQkJc3RydWN0IGJ1ZmZlcl9oZWFkICp0Ymg7Ci0KLQkJLyogTG9jayB0
aGUgYnVmZmVycy4gKi8KLQkJZm9yIChpID0gMDsgaSA8IG5yOyBpKyspIHsKLQkJCXRiaCA9IGFy
cltpXTsKLQkJCWxvY2tfYnVmZmVyKHRiaCk7Ci0JCQl0YmgtPmJfZW5kX2lvID0gbnRmc19lbmRf
YnVmZmVyX2FzeW5jX3JlYWQ7Ci0JCQlzZXRfYnVmZmVyX2FzeW5jX3JlYWQodGJoKTsKLQkJfQot
CQkvKiBGaW5hbGx5LCBzdGFydCBpL28gb24gdGhlIGJ1ZmZlcnMuICovCi0JCWZvciAoaSA9IDA7
IGkgPCBucjsgaSsrKSB7Ci0JCQl0YmggPSBhcnJbaV07Ci0JCQlpZiAobGlrZWx5KCFidWZmZXJf
dXB0b2RhdGUodGJoKSkpCi0JCQkJc3VibWl0X2JoKFJFUV9PUF9SRUFELCB0YmgpOwotCQkJZWxz
ZQotCQkJCW50ZnNfZW5kX2J1ZmZlcl9hc3luY19yZWFkKHRiaCwgMSk7Ci0JCX0KLQkJcmV0dXJu
IDA7Ci0JfQotCS8qIE5vIGkvbyB3YXMgc2NoZWR1bGVkIG9uIGFueSBvZiB0aGUgYnVmZmVycy4g
Ki8KLQlpZiAobGlrZWx5KCFmb2xpb190ZXN0X2Vycm9yKGZvbGlvKSkpCi0JCWZvbGlvX21hcmtf
dXB0b2RhdGUoZm9saW8pOwotCWVsc2UgLyogU2lnbmFsIHN5bmNocm9ub3VzIGkvbyBlcnJvci4g
Ki8KLQkJbnIgPSAtRUlPOwotCWZvbGlvX3VubG9jayhmb2xpbyk7Ci0JcmV0dXJuIG5yOwotfQot
Ci0vKioKLSAqIG50ZnNfcmVhZF9mb2xpbyAtIGZpbGwgYSBAZm9saW8gb2YgYSBAZmlsZSB3aXRo
IGRhdGEgZnJvbSB0aGUgZGV2aWNlCi0gKiBAZmlsZToJb3BlbiBmaWxlIHRvIHdoaWNoIHRoZSBm
b2xpbyBAZm9saW8gYmVsb25ncyBvciBOVUxMCi0gKiBAZm9saW86CXBhZ2UgY2FjaGUgZm9saW8g
dG8gZmlsbCB3aXRoIGRhdGEKLSAqCi0gKiBGb3Igbm9uLXJlc2lkZW50IGF0dHJpYnV0ZXMsIG50
ZnNfcmVhZF9mb2xpbygpIGZpbGxzIHRoZSBAZm9saW8gb2YgdGhlIG9wZW4KLSAqIGZpbGUgQGZp
bGUgYnkgY2FsbGluZyB0aGUgbnRmcyB2ZXJzaW9uIG9mIHRoZSBnZW5lcmljIGJsb2NrX3JlYWRf
ZnVsbF9mb2xpbygpCi0gKiBmdW5jdGlvbiwgbnRmc19yZWFkX2Jsb2NrKCksIHdoaWNoIGluIHR1
cm4gY3JlYXRlcyBhbmQgcmVhZHMgaW4gdGhlIGJ1ZmZlcnMKLSAqIGFzc29jaWF0ZWQgd2l0aCB0
aGUgZm9saW8gYXN5bmNocm9ub3VzbHkuCi0gKgotICogRm9yIHJlc2lkZW50IGF0dHJpYnV0ZXMs
IE9UT0gsIG50ZnNfcmVhZF9mb2xpbygpIGZpbGxzIEBmb2xpbyBieSBjb3B5aW5nIHRoZQotICog
ZGF0YSBmcm9tIHRoZSBtZnQgcmVjb3JkICh3aGljaCBhdCB0aGlzIHN0YWdlIGlzIG1vc3QgbGlr
ZWx5IGluIG1lbW9yeSkgYW5kCi0gKiBmaWxscyB0aGUgcmVtYWluZGVyIHdpdGggemVyb2VzLiBU
aHVzLCBpbiB0aGlzIGNhc2UsIEkvTyBpcyBzeW5jaHJvbm91cywgYXMKLSAqIGV2ZW4gaWYgdGhl
IG1mdCByZWNvcmQgaXMgbm90IGNhY2hlZCBhdCB0aGlzIHBvaW50IGluIHRpbWUsIHdlIG5lZWQg
dG8gd2FpdAotICogZm9yIGl0IHRvIGJlIHJlYWQgaW4gYmVmb3JlIHdlIGNhbiBkbyB0aGUgY29w
eS4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3IuCi0gKi8K
LXN0YXRpYyBpbnQgbnRmc19yZWFkX2ZvbGlvKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgZm9s
aW8gKmZvbGlvKQotewotCXN0cnVjdCBwYWdlICpwYWdlID0gJmZvbGlvLT5wYWdlOwotCWxvZmZf
dCBpX3NpemU7Ci0Jc3RydWN0IGlub2RlICp2aTsKLQludGZzX2lub2RlICpuaSwgKmJhc2Vfbmk7
Ci0JdTggKmFkZHI7Ci0JbnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eDsKLQlNRlRfUkVDT1JEICpt
cmVjOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JdTMyIGF0dHJfbGVuOwotCWludCBlcnIgPSAw
OwotCi1yZXRyeV9yZWFkcGFnZToKLQlCVUdfT04oIVBhZ2VMb2NrZWQocGFnZSkpOwotCXZpID0g
cGFnZS0+bWFwcGluZy0+aG9zdDsKLQlpX3NpemUgPSBpX3NpemVfcmVhZCh2aSk7Ci0JLyogSXMg
dGhlIHBhZ2UgZnVsbHkgb3V0c2lkZSBpX3NpemU/ICh0cnVuY2F0ZSBpbiBwcm9ncmVzcykgKi8K
LQlpZiAodW5saWtlbHkocGFnZS0+aW5kZXggPj0gKGlfc2l6ZSArIFBBR0VfU0laRSAtIDEpID4+
Ci0JCQlQQUdFX1NISUZUKSkgewotCQl6ZXJvX3VzZXIocGFnZSwgMCwgUEFHRV9TSVpFKTsKLQkJ
bnRmc19kZWJ1ZygiUmVhZCBvdXRzaWRlIGlfc2l6ZSAtIHRydW5jYXRlZD8iKTsKLQkJZ290byBk
b25lOwotCX0KLQkvKgotCSAqIFRoaXMgY2FuIHBvdGVudGlhbGx5IGhhcHBlbiBiZWNhdXNlIHdl
IGNsZWFyIFBhZ2VVcHRvZGF0ZSgpIGR1cmluZwotCSAqIG50ZnNfd3JpdGVwYWdlKCkgb2YgTXN0
UHJvdGVjdGVkKCkgYXR0cmlidXRlcy4KLQkgKi8KLQlpZiAoUGFnZVVwdG9kYXRlKHBhZ2UpKSB7
Ci0JCXVubG9ja19wYWdlKHBhZ2UpOwotCQlyZXR1cm4gMDsKLQl9Ci0JbmkgPSBOVEZTX0kodmkp
OwotCS8qCi0JICogT25seSAkREFUQSBhdHRyaWJ1dGVzIGNhbiBiZSBlbmNyeXB0ZWQgYW5kIG9u
bHkgdW5uYW1lZCAkREFUQQotCSAqIGF0dHJpYnV0ZXMgY2FuIGJlIGNvbXByZXNzZWQuICBJbmRl
eCByb290IGNhbiBoYXZlIHRoZSBmbGFncyBzZXQgYnV0Ci0JICogdGhpcyBtZWFucyB0byBjcmVh
dGUgY29tcHJlc3NlZC9lbmNyeXB0ZWQgZmlsZXMsIG5vdCB0aGF0IHRoZQotCSAqIGF0dHJpYnV0
ZSBpcyBjb21wcmVzc2VkL2VuY3J5cHRlZC4gIE5vdGUgd2UgbmVlZCB0byBjaGVjayBmb3IKLQkg
KiBBVF9JTkRFWF9BTExPQ0FUSU9OIHNpbmNlIHRoaXMgaXMgdGhlIHR5cGUgb2YgYm90aCBkaXJl
Y3RvcnkgYW5kCi0JICogaW5kZXggaW5vZGVzLgotCSAqLwotCWlmIChuaS0+dHlwZSAhPSBBVF9J
TkRFWF9BTExPQ0FUSU9OKSB7Ci0JCS8qIElmIGF0dHJpYnV0ZSBpcyBlbmNyeXB0ZWQsIGRlbnkg
YWNjZXNzLCBqdXN0IGxpa2UgTlQ0LiAqLwotCQlpZiAoTklub0VuY3J5cHRlZChuaSkpIHsKLQkJ
CUJVR19PTihuaS0+dHlwZSAhPSBBVF9EQVRBKTsKLQkJCWVyciA9IC1FQUNDRVM7Ci0JCQlnb3Rv
IGVycl9vdXQ7Ci0JCX0KLQkJLyogQ29tcHJlc3NlZCBkYXRhIHN0cmVhbXMgYXJlIGhhbmRsZWQg
aW4gY29tcHJlc3MuYy4gKi8KLQkJaWYgKE5Jbm9Ob25SZXNpZGVudChuaSkgJiYgTklub0NvbXBy
ZXNzZWQobmkpKSB7Ci0JCQlCVUdfT04obmktPnR5cGUgIT0gQVRfREFUQSk7Ci0JCQlCVUdfT04o
bmktPm5hbWVfbGVuKTsKLQkJCXJldHVybiBudGZzX3JlYWRfY29tcHJlc3NlZF9ibG9jayhwYWdl
KTsKLQkJfQotCX0KLQkvKiBOSW5vTm9uUmVzaWRlbnQoKSA9PSBOSW5vSW5kZXhBbGxvY1ByZXNl
bnQoKSAqLwotCWlmIChOSW5vTm9uUmVzaWRlbnQobmkpKSB7Ci0JCS8qIE5vcm1hbCwgbm9uLXJl
c2lkZW50IGRhdGEgc3RyZWFtLiAqLwotCQlyZXR1cm4gbnRmc19yZWFkX2Jsb2NrKGZvbGlvKTsK
LQl9Ci0JLyoKLQkgKiBBdHRyaWJ1dGUgaXMgcmVzaWRlbnQsIGltcGx5aW5nIGl0IGlzIG5vdCBj
b21wcmVzc2VkIG9yIGVuY3J5cHRlZC4KLQkgKiBUaGlzIGFsc28gbWVhbnMgdGhlIGF0dHJpYnV0
ZSBpcyBzbWFsbGVyIHRoYW4gYW4gbWZ0IHJlY29yZCBhbmQKLQkgKiBoZW5jZSBzbWFsbGVyIHRo
YW4gYSBwYWdlLCBzbyBjYW4gc2ltcGx5IHplcm8gb3V0IGFueSBwYWdlcyB3aXRoCi0JICogaW5k
ZXggYWJvdmUgMC4gIE5vdGUgdGhlIGF0dHJpYnV0ZSBjYW4gYWN0dWFsbHkgYmUgbWFya2VkIGNv
bXByZXNzZWQKLQkgKiBidXQgaWYgaXQgaXMgcmVzaWRlbnQgdGhlIGFjdHVhbCBkYXRhIGlzIG5v
dCBjb21wcmVzc2VkIHNvIHdlIGFyZQotCSAqIG9rIHRvIGlnbm9yZSB0aGUgY29tcHJlc3NlZCBm
bGFnIGhlcmUuCi0JICovCi0JaWYgKHVubGlrZWx5KHBhZ2UtPmluZGV4ID4gMCkpIHsKLQkJemVy
b191c2VyKHBhZ2UsIDAsIFBBR0VfU0laRSk7Ci0JCWdvdG8gZG9uZTsKLQl9Ci0JaWYgKCFOSW5v
QXR0cihuaSkpCi0JCWJhc2VfbmkgPSBuaTsKLQllbHNlCi0JCWJhc2VfbmkgPSBuaS0+ZXh0LmJh
c2VfbnRmc19pbm87Ci0JLyogTWFwLCBwaW4sIGFuZCBsb2NrIHRoZSBtZnQgcmVjb3JkLiAqLwot
CW1yZWMgPSBtYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQlpZiAoSVNfRVJSKG1yZWMpKSB7Ci0J
CWVyciA9IFBUUl9FUlIobXJlYyk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JLyoKLQkgKiBJZiBh
IHBhcmFsbGVsIHdyaXRlIG1hZGUgdGhlIGF0dHJpYnV0ZSBub24tcmVzaWRlbnQsIGRyb3AgdGhl
IG1mdAotCSAqIHJlY29yZCBhbmQgcmV0cnkgdGhlIHJlYWRfZm9saW8uCi0JICovCi0JaWYgKHVu
bGlrZWx5KE5Jbm9Ob25SZXNpZGVudChuaSkpKSB7Ci0JCXVubWFwX21mdF9yZWNvcmQoYmFzZV9u
aSk7Ci0JCWdvdG8gcmV0cnlfcmVhZHBhZ2U7Ci0JfQotCWN0eCA9IG50ZnNfYXR0cl9nZXRfc2Vh
cmNoX2N0eChiYXNlX25pLCBtcmVjKTsKLQlpZiAodW5saWtlbHkoIWN0eCkpIHsKLQkJZXJyID0g
LUVOT01FTTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JZXJyID0gbnRmc19hdHRyX2xvb2t1
cChuaS0+dHlwZSwgbmktPm5hbWUsIG5pLT5uYW1lX2xlbiwKLQkJCUNBU0VfU0VOU0lUSVZFLCAw
LCBOVUxMLCAwLCBjdHgpOwotCWlmICh1bmxpa2VseShlcnIpKQotCQlnb3RvIHB1dF91bm1fZXJy
X291dDsKLQlhdHRyX2xlbiA9IGxlMzJfdG9fY3B1KGN0eC0+YXR0ci0+ZGF0YS5yZXNpZGVudC52
YWx1ZV9sZW5ndGgpOwotCXJlYWRfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7
Ci0JaWYgKHVubGlrZWx5KGF0dHJfbGVuID4gbmktPmluaXRpYWxpemVkX3NpemUpKQotCQlhdHRy
X2xlbiA9IG5pLT5pbml0aWFsaXplZF9zaXplOwotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKHZpKTsK
LQlyZWFkX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JaWYgKHVu
bGlrZWx5KGF0dHJfbGVuID4gaV9zaXplKSkgewotCQkvKiBSYWNlIHdpdGggc2hyaW5raW5nIHRy
dW5jYXRlLiAqLwotCQlhdHRyX2xlbiA9IGlfc2l6ZTsKLQl9Ci0JYWRkciA9IGttYXBfYXRvbWlj
KHBhZ2UpOwotCS8qIENvcHkgdGhlIGRhdGEgdG8gdGhlIHBhZ2UuICovCi0JbWVtY3B5KGFkZHIs
ICh1OCopY3R4LT5hdHRyICsKLQkJCWxlMTZfdG9fY3B1KGN0eC0+YXR0ci0+ZGF0YS5yZXNpZGVu
dC52YWx1ZV9vZmZzZXQpLAotCQkJYXR0cl9sZW4pOwotCS8qIFplcm8gdGhlIHJlbWFpbmRlciBv
ZiB0aGUgcGFnZS4gKi8KLQltZW1zZXQoYWRkciArIGF0dHJfbGVuLCAwLCBQQUdFX1NJWkUgLSBh
dHRyX2xlbik7Ci0JZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7Ci0Ja3VubWFwX2F0b21pYyhhZGRy
KTsKLXB1dF91bm1fZXJyX291dDoKLQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLXVu
bV9lcnJfb3V0OgotCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci1kb25lOgotCVNldFBhZ2VV
cHRvZGF0ZShwYWdlKTsKLWVycl9vdXQ6Ci0JdW5sb2NrX3BhZ2UocGFnZSk7Ci0JcmV0dXJuIGVy
cjsKLX0KLQotI2lmZGVmIE5URlNfUlcKLQotLyoqCi0gKiBudGZzX3dyaXRlX2Jsb2NrIC0gd3Jp
dGUgYSBAZm9saW8gdG8gdGhlIGJhY2tpbmcgc3RvcmUKLSAqIEBmb2xpbzoJcGFnZSBjYWNoZSBm
b2xpbyB0byB3cml0ZSBvdXQKLSAqIEB3YmM6CXdyaXRlYmFjayBjb250cm9sIHN0cnVjdHVyZQot
ICoKLSAqIFRoaXMgZnVuY3Rpb24gaXMgZm9yIHdyaXRpbmcgZm9saW9zIGJlbG9uZ2luZyB0byBu
b24tcmVzaWRlbnQsIG5vbi1tc3QKLSAqIHByb3RlY3RlZCBhdHRyaWJ1dGVzIHRvIHRoZWlyIGJh
Y2tpbmcgc3RvcmUuCi0gKgotICogRm9yIGEgZm9saW8gd2l0aCBidWZmZXJzLCBtYXAgYW5kIHdy
aXRlIHRoZSBkaXJ0eSBidWZmZXJzIGFzeW5jaHJvbm91c2x5Ci0gKiB1bmRlciBmb2xpbyB3cml0
ZWJhY2suIEZvciBhIGZvbGlvIHdpdGhvdXQgYnVmZmVycywgY3JlYXRlIGJ1ZmZlcnMgZm9yIHRo
ZQotICogZm9saW8sIHRoZW4gcHJvY2VlZCBhcyBhYm92ZS4KLSAqCi0gKiBJZiBhIGZvbGlvIGRv
ZXNuJ3QgaGF2ZSBidWZmZXJzIHRoZSBmb2xpbyBkaXJ0eSBzdGF0ZSBpcyBkZWZpbml0aXZlLiBJ
ZgotICogYSBmb2xpbyBkb2VzIGhhdmUgYnVmZmVycywgdGhlIGZvbGlvIGRpcnR5IHN0YXRlIGlz
IGp1c3QgYSBoaW50LAotICogYW5kIHRoZSBidWZmZXIgZGlydHkgc3RhdGUgaXMgZGVmaW5pdGl2
ZS4gKEEgaGludCB3aGljaCBoYXMgcnVsZXM6Ci0gKiBkaXJ0eSBidWZmZXJzIGFnYWluc3QgYSBj
bGVhbiBmb2xpbyBpcyBpbGxlZ2FsLiBPdGhlciBjb21iaW5hdGlvbnMgYXJlCi0gKiBsZWdhbCBh
bmQgbmVlZCB0byBiZSBoYW5kbGVkLiBJbiBwYXJ0aWN1bGFyIGEgZGlydHkgZm9saW8gY29udGFp
bmluZwotICogY2xlYW4gYnVmZmVycyBmb3IgZXhhbXBsZS4pCi0gKgotICogUmV0dXJuIDAgb24g
c3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICoKLSAqIEJhc2VkIG9uIG50ZnNfcmVhZF9i
bG9jaygpIGFuZCBfX2Jsb2NrX3dyaXRlX2Z1bGxfZm9saW8oKS4KLSAqLwotc3RhdGljIGludCBu
dGZzX3dyaXRlX2Jsb2NrKHN0cnVjdCBmb2xpbyAqZm9saW8sIHN0cnVjdCB3cml0ZWJhY2tfY29u
dHJvbCAqd2JjKQotewotCVZDTiB2Y247Ci0JTENOIGxjbjsKLQlzNjQgaW5pdGlhbGl6ZWRfc2l6
ZTsKLQlsb2ZmX3QgaV9zaXplOwotCXNlY3Rvcl90IGJsb2NrLCBkYmxvY2ssIGlibG9jazsKLQlz
dHJ1Y3QgaW5vZGUgKnZpOwotCW50ZnNfaW5vZGUgKm5pOwotCW50ZnNfdm9sdW1lICp2b2w7Ci0J
cnVubGlzdF9lbGVtZW50ICpybDsKLQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoLCAqaGVhZDsKLQl1
bnNpZ25lZCBsb25nIGZsYWdzOwotCXVuc2lnbmVkIGludCBibG9ja3NpemUsIHZjbl9vZnM7Ci0J
aW50IGVycjsKLQlib29sIG5lZWRfZW5kX3dyaXRlYmFjazsKLQl1bnNpZ25lZCBjaGFyIGJsb2Nr
c2l6ZV9iaXRzOwotCi0JdmkgPSBmb2xpby0+bWFwcGluZy0+aG9zdDsKLQluaSA9IE5URlNfSSh2
aSk7Ci0Jdm9sID0gbmktPnZvbDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBpbm9kZSAw
eCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgcGFnZSBpbmRleCAiCi0JCQkiMHglbHguIiwgbmkt
Pm1mdF9ubywgbmktPnR5cGUsIGZvbGlvLT5pbmRleCk7Ci0KLQlCVUdfT04oIU5Jbm9Ob25SZXNp
ZGVudChuaSkpOwotCUJVR19PTihOSW5vTXN0UHJvdGVjdGVkKG5pKSk7Ci0JYmxvY2tzaXplID0g
dm9sLT5zYi0+c19ibG9ja3NpemU7Ci0JYmxvY2tzaXplX2JpdHMgPSB2b2wtPnNiLT5zX2Jsb2Nr
c2l6ZV9iaXRzOwotCWhlYWQgPSBmb2xpb19idWZmZXJzKGZvbGlvKTsKLQlpZiAoIWhlYWQpIHsK
LQkJQlVHX09OKCFmb2xpb190ZXN0X3VwdG9kYXRlKGZvbGlvKSk7Ci0JCWhlYWQgPSBjcmVhdGVf
ZW1wdHlfYnVmZmVycyhmb2xpbywgYmxvY2tzaXplLAotCQkJCSgxIDw8IEJIX1VwdG9kYXRlKSB8
ICgxIDw8IEJIX0RpcnR5KSk7Ci0JfQotCWJoID0gaGVhZDsKLQotCS8qIE5PVEU6IERpZmZlcmVu
dCBuYW1pbmcgc2NoZW1lIHRvIG50ZnNfcmVhZF9ibG9jaygpISAqLwotCi0JLyogVGhlIGZpcnN0
IGJsb2NrIGluIHRoZSBmb2xpby4gKi8KLQlibG9jayA9IChzNjQpZm9saW8tPmluZGV4IDw8IChQ
QUdFX1NISUZUIC0gYmxvY2tzaXplX2JpdHMpOwotCi0JcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5z
aXplX2xvY2ssIGZsYWdzKTsKLQlpX3NpemUgPSBpX3NpemVfcmVhZCh2aSk7Ci0JaW5pdGlhbGl6
ZWRfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9zaXplOwotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUo
Jm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQotCS8qIFRoZSBmaXJzdCBvdXQgb2YgYm91bmRzIGJs
b2NrIGZvciB0aGUgZGF0YSBzaXplLiAqLwotCWRibG9jayA9IChpX3NpemUgKyBibG9ja3NpemUg
LSAxKSA+PiBibG9ja3NpemVfYml0czsKLQotCS8qIFRoZSBsYXN0IChmdWxseSBvciBwYXJ0aWFs
bHkpIGluaXRpYWxpemVkIGJsb2NrLiAqLwotCWlibG9jayA9IGluaXRpYWxpemVkX3NpemUgPj4g
YmxvY2tzaXplX2JpdHM7Ci0KLQkvKgotCSAqIEJlIHZlcnkgY2FyZWZ1bC4gIFdlIGhhdmUgbm8g
ZXhjbHVzaW9uIGZyb20gYmxvY2tfZGlydHlfZm9saW8KLQkgKiBoZXJlLCBhbmQgdGhlIChwb3Rl
bnRpYWxseSB1bm1hcHBlZCkgYnVmZmVycyBtYXkgYmVjb21lIGRpcnR5IGF0Ci0JICogYW55IHRp
bWUuICBJZiBhIGJ1ZmZlciBiZWNvbWVzIGRpcnR5IGhlcmUgYWZ0ZXIgd2UndmUgaW5zcGVjdGVk
IGl0Ci0JICogdGhlbiB3ZSBqdXN0IG1pc3MgdGhhdCBmYWN0LCBhbmQgdGhlIGZvbGlvIHN0YXlz
IGRpcnR5LgotCSAqCi0JICogQnVmZmVycyBvdXRzaWRlIGlfc2l6ZSBtYXkgYmUgZGlydGllZCBi
eSBibG9ja19kaXJ0eV9mb2xpbzsKLQkgKiBoYW5kbGUgdGhhdCBoZXJlIGJ5IGp1c3QgY2xlYW5p
bmcgdGhlbS4KLQkgKi8KLQotCS8qCi0JICogTG9vcCB0aHJvdWdoIGFsbCB0aGUgYnVmZmVycyBp
biB0aGUgZm9saW8sIG1hcHBpbmcgYWxsIHRoZSBkaXJ0eQotCSAqIGJ1ZmZlcnMgdG8gZGlzayBh
ZGRyZXNzZXMgYW5kIGhhbmRsaW5nIGFueSBhbGlhc2VzIGZyb20gdGhlCi0JICogdW5kZXJseWlu
ZyBibG9jayBkZXZpY2UncyBtYXBwaW5nLgotCSAqLwotCXJsID0gTlVMTDsKLQllcnIgPSAwOwot
CWRvIHsKLQkJYm9vbCBpc19yZXRyeSA9IGZhbHNlOwotCi0JCWlmICh1bmxpa2VseShibG9jayA+
PSBkYmxvY2spKSB7Ci0JCQkvKgotCQkJICogTWFwcGVkIGJ1ZmZlcnMgb3V0c2lkZSBpX3NpemUg
d2lsbCBvY2N1ciwgYmVjYXVzZQotCQkJICogdGhpcyBmb2xpbyBjYW4gYmUgb3V0c2lkZSBpX3Np
emUgd2hlbiB0aGVyZSBpcyBhCi0JCQkgKiB0cnVuY2F0ZSBpbiBwcm9ncmVzcy4gVGhlIGNvbnRl
bnRzIG9mIHN1Y2ggYnVmZmVycwotCQkJICogd2VyZSB6ZXJvZWQgYnkgbnRmc193cml0ZXBhZ2Uo
KS4KLQkJCSAqCi0JCQkgKiBGSVhNRTogV2hhdCBhYm91dCB0aGUgc21hbGwgcmFjZSB3aW5kb3cg
d2hlcmUKLQkJCSAqIG50ZnNfd3JpdGVwYWdlKCkgaGFzIG5vdCBkb25lIGFueSBjbGVhcmluZyBi
ZWNhdXNlCi0JCQkgKiB0aGUgZm9saW8gd2FzIHdpdGhpbiBpX3NpemUgYnV0IGJlZm9yZSB3ZSBn
ZXQgaGVyZSwKLQkJCSAqIHZtdHJ1bmNhdGUoKSBtb2RpZmllcyBpX3NpemU/Ci0JCQkgKi8KLQkJ
CWNsZWFyX2J1ZmZlcl9kaXJ0eShiaCk7Ci0JCQlzZXRfYnVmZmVyX3VwdG9kYXRlKGJoKTsKLQkJ
CWNvbnRpbnVlOwotCQl9Ci0KLQkJLyogQ2xlYW4gYnVmZmVycyBhcmUgbm90IHdyaXR0ZW4gb3V0
LCBzbyBubyBuZWVkIHRvIG1hcCB0aGVtLiAqLwotCQlpZiAoIWJ1ZmZlcl9kaXJ0eShiaCkpCi0J
CQljb250aW51ZTsKLQotCQkvKiBNYWtlIHN1cmUgd2UgaGF2ZSBlbm91Z2ggaW5pdGlhbGl6ZWQg
c2l6ZS4gKi8KLQkJaWYgKHVubGlrZWx5KChibG9jayA+PSBpYmxvY2spICYmCi0JCQkJKGluaXRp
YWxpemVkX3NpemUgPCBpX3NpemUpKSkgewotCQkJLyoKLQkJCSAqIElmIHRoaXMgZm9saW8gaXMg
ZnVsbHkgb3V0c2lkZSBpbml0aWFsaXplZAotCQkJICogc2l6ZSwgemVybyBvdXQgYWxsIGZvbGlv
cyBiZXR3ZWVuIHRoZSBjdXJyZW50Ci0JCQkgKiBpbml0aWFsaXplZCBzaXplIGFuZCB0aGUgY3Vy
cmVudCBmb2xpby4gSnVzdAotCQkJICogdXNlIG50ZnNfcmVhZF9mb2xpbygpIHRvIGRvIHRoZSB6
ZXJvaW5nCi0JCQkgKiB0cmFuc3BhcmVudGx5LgotCQkJICovCi0JCQlpZiAoYmxvY2sgPiBpYmxv
Y2spIHsKLQkJCQkvLyBUT0RPOgotCQkJCS8vIEZvciBlYWNoIGZvbGlvIGRvOgotCQkJCS8vIC0g
cmVhZF9jYWNoZV9mb2xpbygpCi0JCQkJLy8gQWdhaW4gZm9yIGVhY2ggZm9saW8gZG86Ci0JCQkJ
Ly8gLSB3YWl0X29uX2ZvbGlvX2xvY2tlZCgpCi0JCQkJLy8gLSBDaGVjayAoZm9saW9fdGVzdF91
cHRvZGF0ZShmb2xpbykgJiYKLQkJCQkvLwkJIWZvbGlvX3Rlc3RfZXJyb3IoZm9saW8pKQotCQkJ
CS8vIFVwZGF0ZSBpbml0aWFsaXplZCBzaXplIGluIHRoZSBhdHRyaWJ1dGUgYW5kCi0JCQkJLy8g
aW4gdGhlIGlub2RlLgotCQkJCS8vIEFnYWluLCBmb3IgZWFjaCBmb2xpbyBkbzoKLQkJCQkvLwli
bG9ja19kaXJ0eV9mb2xpbygpOwotCQkJCS8vIGZvbGlvX3B1dCgpCi0JCQkJLy8gV2UgZG9uJ3Qg
bmVlZCB0byB3YWl0IG9uIHRoZSB3cml0ZXMuCi0JCQkJLy8gVXBkYXRlIGlibG9jay4KLQkJCX0K
LQkJCS8qCi0JCQkgKiBUaGUgY3VycmVudCBmb2xpbyBzdHJhZGRsZXMgaW5pdGlhbGl6ZWQgc2l6
ZS4gWmVybwotCQkJICogYWxsIG5vbi11cHRvZGF0ZSBidWZmZXJzIGFuZCBzZXQgdGhlbSB1cHRv
ZGF0ZSAoYW5kCi0JCQkgKiBkaXJ0eT8pLiBOb3RlLCB0aGVyZSBhcmVuJ3QgYW55IG5vbi11cHRv
ZGF0ZSBidWZmZXJzCi0JCQkgKiBpZiB0aGUgZm9saW8gaXMgdXB0b2RhdGUuCi0JCQkgKiBGSVhN
RTogRm9yIGFuIHVwdG9kYXRlIGZvbGlvLCB0aGUgYnVmZmVycyBtYXkgbmVlZCB0bwotCQkJICog
YmUgd3JpdHRlbiBvdXQgYmVjYXVzZSB0aGV5IHdlcmUgbm90IGluaXRpYWxpemVkIG9uCi0JCQkg
KiBkaXNrIGJlZm9yZS4KLQkJCSAqLwotCQkJaWYgKCFmb2xpb190ZXN0X3VwdG9kYXRlKGZvbGlv
KSkgewotCQkJCS8vIFRPRE86Ci0JCQkJLy8gWmVybyBhbnkgbm9uLXVwdG9kYXRlIGJ1ZmZlcnMg
dXAgdG8gaV9zaXplLgotCQkJCS8vIFNldCB0aGVtIHVwdG9kYXRlIGFuZCBkaXJ0eS4KLQkJCX0K
LQkJCS8vIFRPRE86Ci0JCQkvLyBVcGRhdGUgaW5pdGlhbGl6ZWQgc2l6ZSBpbiB0aGUgYXR0cmli
dXRlIGFuZCBpbiB0aGUKLQkJCS8vIGlub2RlICh1cCB0byBpX3NpemUpLgotCQkJLy8gVXBkYXRl
IGlibG9jay4KLQkJCS8vIEZJWE1FOiBUaGlzIGlzIGluZWZmaWNpZW50LiBUcnkgdG8gYmF0Y2gg
dGhlIHR3bwotCQkJLy8gc2l6ZSBjaGFuZ2VzIHRvIGhhcHBlbiBpbiBvbmUgZ28uCi0JCQludGZz
X2Vycm9yKHZvbC0+c2IsICJXcml0aW5nIGJleW9uZCBpbml0aWFsaXplZCBzaXplICIKLQkJCQkJ
ImlzIG5vdCBzdXBwb3J0ZWQgeWV0LiBTb3JyeS4iKTsKLQkJCWVyciA9IC1FT1BOT1RTVVBQOwot
CQkJYnJlYWs7Ci0JCQkvLyBEbyBOT1Qgc2V0X2J1ZmZlcl9uZXcoKSBCVVQgRE8gY2xlYXIgYnVm
ZmVyIHJhbmdlCi0JCQkvLyBvdXRzaWRlIHdyaXRlIHJlcXVlc3QgcmFuZ2UuCi0JCQkvLyBzZXRf
YnVmZmVyX3VwdG9kYXRlKCkgb24gY29tcGxldGUgYnVmZmVycyBhcyB3ZWxsIGFzCi0JCQkvLyBz
ZXRfYnVmZmVyX2RpcnR5KCkuCi0JCX0KLQotCQkvKiBObyBuZWVkIHRvIG1hcCBidWZmZXJzIHRo
YXQgYXJlIGFscmVhZHkgbWFwcGVkLiAqLwotCQlpZiAoYnVmZmVyX21hcHBlZChiaCkpCi0JCQlj
b250aW51ZTsKLQotCQkvKiBVbm1hcHBlZCwgZGlydHkgYnVmZmVyLiBOZWVkIHRvIG1hcCBpdC4g
Ki8KLQkJYmgtPmJfYmRldiA9IHZvbC0+c2ItPnNfYmRldjsKLQotCQkvKiBDb252ZXJ0IGJsb2Nr
IGludG8gY29ycmVzcG9uZGluZyB2Y24gYW5kIG9mZnNldC4gKi8KLQkJdmNuID0gKFZDTilibG9j
ayA8PCBibG9ja3NpemVfYml0czsKLQkJdmNuX29mcyA9IHZjbiAmIHZvbC0+Y2x1c3Rlcl9zaXpl
X21hc2s7Ci0JCXZjbiA+Pj0gdm9sLT5jbHVzdGVyX3NpemVfYml0czsKLQkJaWYgKCFybCkgewot
bG9ja19yZXRyeV9yZW1hcDoKLQkJCWRvd25fcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JCQly
bCA9IG5pLT5ydW5saXN0LnJsOwotCQl9Ci0JCWlmIChsaWtlbHkocmwgIT0gTlVMTCkpIHsKLQkJ
CS8qIFNlZWsgdG8gZWxlbWVudCBjb250YWluaW5nIHRhcmdldCB2Y24uICovCi0JCQl3aGlsZSAo
cmwtPmxlbmd0aCAmJiBybFsxXS52Y24gPD0gdmNuKQotCQkJCXJsKys7Ci0JCQlsY24gPSBudGZz
X3JsX3Zjbl90b19sY24ocmwsIHZjbik7Ci0JCX0gZWxzZQotCQkJbGNuID0gTENOX1JMX05PVF9N
QVBQRUQ7Ci0JCS8qIFN1Y2Nlc3NmdWwgcmVtYXAuICovCi0JCWlmIChsY24gPj0gMCkgewotCQkJ
LyogU2V0dXAgYnVmZmVyIGhlYWQgdG8gcG9pbnQgdG8gY29ycmVjdCBibG9jay4gKi8KLQkJCWJo
LT5iX2Jsb2NrbnIgPSAoKGxjbiA8PCB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzKSArCi0JCQkJCXZj
bl9vZnMpID4+IGJsb2Nrc2l6ZV9iaXRzOwotCQkJc2V0X2J1ZmZlcl9tYXBwZWQoYmgpOwotCQkJ
Y29udGludWU7Ci0JCX0KLQkJLyogSXQgaXMgYSBob2xlLCBuZWVkIHRvIGluc3RhbnRpYXRlIGl0
LiAqLwotCQlpZiAobGNuID09IExDTl9IT0xFKSB7Ci0JCQl1OCAqa2FkZHI7Ci0JCQl1bnNpZ25l
ZCBsb25nICpicG9zLCAqYmVuZDsKLQotCQkJLyogQ2hlY2sgaWYgdGhlIGJ1ZmZlciBpcyB6ZXJv
LiAqLwotCQkJa2FkZHIgPSBrbWFwX2xvY2FsX2ZvbGlvKGZvbGlvLCBiaF9vZmZzZXQoYmgpKTsK
LQkJCWJwb3MgPSAodW5zaWduZWQgbG9uZyAqKWthZGRyOwotCQkJYmVuZCA9ICh1bnNpZ25lZCBs
b25nICopKGthZGRyICsgYmxvY2tzaXplKTsKLQkJCWRvIHsKLQkJCQlpZiAodW5saWtlbHkoKmJw
b3MpKQotCQkJCQlicmVhazsKLQkJCX0gd2hpbGUgKGxpa2VseSgrK2Jwb3MgPCBiZW5kKSk7Ci0J
CQlrdW5tYXBfbG9jYWwoa2FkZHIpOwotCQkJaWYgKGJwb3MgPT0gYmVuZCkgewotCQkJCS8qCi0J
CQkJICogQnVmZmVyIGlzIHplcm8gYW5kIHNwYXJzZSwgbm8gbmVlZCB0byB3cml0ZQotCQkJCSAq
IGl0LgotCQkJCSAqLwotCQkJCWJoLT5iX2Jsb2NrbnIgPSAtMTsKLQkJCQljbGVhcl9idWZmZXJf
ZGlydHkoYmgpOwotCQkJCWNvbnRpbnVlOwotCQkJfQotCQkJLy8gVE9ETzogSW5zdGFudGlhdGUg
dGhlIGhvbGUuCi0JCQkvLyBjbGVhcl9idWZmZXJfbmV3KGJoKTsKLQkJCS8vIGNsZWFuX2JkZXZf
YmhfYWxpYXMoYmgpOwotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiV3JpdGluZyBpbnRvIHNwYXJz
ZSByZWdpb25zIGlzICIKLQkJCQkJIm5vdCBzdXBwb3J0ZWQgeWV0LiBTb3JyeS4iKTsKLQkJCWVy
ciA9IC1FT1BOT1RTVVBQOwotCQkJYnJlYWs7Ci0JCX0KLQkJLyogSWYgZmlyc3QgdHJ5IGFuZCBy
dW5saXN0IHVubWFwcGVkLCBtYXAgYW5kIHJldHJ5LiAqLwotCQlpZiAoIWlzX3JldHJ5ICYmIGxj
biA9PSBMQ05fUkxfTk9UX01BUFBFRCkgewotCQkJaXNfcmV0cnkgPSB0cnVlOwotCQkJLyoKLQkJ
CSAqIEF0dGVtcHQgdG8gbWFwIHJ1bmxpc3QsIGRyb3BwaW5nIGxvY2sgZm9yCi0JCQkgKiB0aGUg
ZHVyYXRpb24uCi0JCQkgKi8KLQkJCXVwX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCQkJZXJy
ID0gbnRmc19tYXBfcnVubGlzdChuaSwgdmNuKTsKLQkJCWlmIChsaWtlbHkoIWVycikpCi0JCQkJ
Z290byBsb2NrX3JldHJ5X3JlbWFwOwotCQkJcmwgPSBOVUxMOwotCQl9IGVsc2UgaWYgKCFybCkK
LQkJCXVwX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCQkvKgotCQkgKiBJZiBidWZmZXIgaXMg
b3V0c2lkZSB0aGUgcnVubGlzdCwgdHJ1bmNhdGUgaGFzIGN1dCBpdCBvdXQKLQkJICogb2YgdGhl
IHJ1bmxpc3QuICBKdXN0IGNsZWFuIGFuZCBjbGVhciB0aGUgYnVmZmVyIGFuZCBzZXQgaXQKLQkJ
ICogdXB0b2RhdGUgc28gaXQgY2FuIGdldCBkaXNjYXJkZWQgYnkgdGhlIFZNLgotCQkgKi8KLQkJ
aWYgKGVyciA9PSAtRU5PRU5UIHx8IGxjbiA9PSBMQ05fRU5PRU5UKSB7Ci0JCQliaC0+Yl9ibG9j
a25yID0gLTE7Ci0JCQljbGVhcl9idWZmZXJfZGlydHkoYmgpOwotCQkJZm9saW9femVyb19yYW5n
ZShmb2xpbywgYmhfb2Zmc2V0KGJoKSwgYmxvY2tzaXplKTsKLQkJCXNldF9idWZmZXJfdXB0b2Rh
dGUoYmgpOwotCQkJZXJyID0gMDsKLQkJCWNvbnRpbnVlOwotCQl9Ci0JCS8qIEZhaWxlZCB0byBt
YXAgdGhlIGJ1ZmZlciwgZXZlbiBhZnRlciByZXRyeWluZy4gKi8KLQkJaWYgKCFlcnIpCi0JCQll
cnIgPSAtRUlPOwotCQliaC0+Yl9ibG9ja25yID0gLTE7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkZhaWxlZCB0byB3cml0ZSB0byBpbm9kZSAweCVseCwgIgotCQkJCSJhdHRyaWJ1dGUgdHlwZSAw
eCV4LCB2Y24gMHglbGx4LCBvZmZzZXQgMHgleCAiCi0JCQkJImJlY2F1c2UgaXRzIGxvY2F0aW9u
IG9uIGRpc2sgY291bGQgbm90IGJlICIKLQkJCQkiZGV0ZXJtaW5lZCVzIChlcnJvciBjb2RlICVp
KS4iLCBuaS0+bWZ0X25vLAotCQkJCW5pLT50eXBlLCAodW5zaWduZWQgbG9uZyBsb25nKXZjbiwK
LQkJCQl2Y25fb2ZzLCBpc19yZXRyeSA/ICIgZXZlbiBhZnRlciAiCi0JCQkJInJldHJ5aW5nIiA6
ICIiLCBlcnIpOwotCQlicmVhazsKLQl9IHdoaWxlIChibG9jaysrLCAoYmggPSBiaC0+Yl90aGlz
X3BhZ2UpICE9IGhlYWQpOwotCi0JLyogUmVsZWFzZSB0aGUgbG9jayBpZiB3ZSB0b29rIGl0LiAq
LwotCWlmIChybCkKLQkJdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0KLQkvKiBGb3IgdGhl
IGVycm9yIGNhc2UsIG5lZWQgdG8gcmVzZXQgYmggdG8gdGhlIGJlZ2lubmluZy4gKi8KLQliaCA9
IGhlYWQ7Ci0KLQkvKiBKdXN0IGFuIG9wdGltaXphdGlvbiwgc28gLT5yZWFkX2ZvbGlvKCkgaXMg
bm90IGNhbGxlZCBsYXRlci4gKi8KLQlpZiAodW5saWtlbHkoIWZvbGlvX3Rlc3RfdXB0b2RhdGUo
Zm9saW8pKSkgewotCQlpbnQgdXB0b2RhdGUgPSAxOwotCQlkbyB7Ci0JCQlpZiAoIWJ1ZmZlcl91
cHRvZGF0ZShiaCkpIHsKLQkJCQl1cHRvZGF0ZSA9IDA7Ci0JCQkJYmggPSBoZWFkOwotCQkJCWJy
ZWFrOwotCQkJfQotCQl9IHdoaWxlICgoYmggPSBiaC0+Yl90aGlzX3BhZ2UpICE9IGhlYWQpOwot
CQlpZiAodXB0b2RhdGUpCi0JCQlmb2xpb19tYXJrX3VwdG9kYXRlKGZvbGlvKTsKLQl9Ci0KLQkv
KiBTZXR1cCBhbGwgbWFwcGVkLCBkaXJ0eSBidWZmZXJzIGZvciBhc3luYyB3cml0ZSBpL28uICov
Ci0JZG8gewotCQlpZiAoYnVmZmVyX21hcHBlZChiaCkgJiYgYnVmZmVyX2RpcnR5KGJoKSkgewot
CQkJbG9ja19idWZmZXIoYmgpOwotCQkJaWYgKHRlc3RfY2xlYXJfYnVmZmVyX2RpcnR5KGJoKSkg
ewotCQkJCUJVR19PTighYnVmZmVyX3VwdG9kYXRlKGJoKSk7Ci0JCQkJbWFya19idWZmZXJfYXN5
bmNfd3JpdGUoYmgpOwotCQkJfSBlbHNlCi0JCQkJdW5sb2NrX2J1ZmZlcihiaCk7Ci0JCX0gZWxz
ZSBpZiAodW5saWtlbHkoZXJyKSkgewotCQkJLyoKLQkJCSAqIEZvciB0aGUgZXJyb3IgY2FzZS4g
VGhlIGJ1ZmZlciBtYXkgaGF2ZSBiZWVuIHNldAotCQkJICogZGlydHkgZHVyaW5nIGF0dGFjaG1l
bnQgdG8gYSBkaXJ0eSBmb2xpby4KLQkJCSAqLwotCQkJaWYgKGVyciAhPSAtRU5PTUVNKQotCQkJ
CWNsZWFyX2J1ZmZlcl9kaXJ0eShiaCk7Ci0JCX0KLQl9IHdoaWxlICgoYmggPSBiaC0+Yl90aGlz
X3BhZ2UpICE9IGhlYWQpOwotCi0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJLy8gVE9ETzogUmVt
b3ZlIHRoZSAtRU9QTk9UU1VQUCBjaGVjayBsYXRlciBvbi4uLgotCQlpZiAodW5saWtlbHkoZXJy
ID09IC1FT1BOT1RTVVBQKSkKLQkJCWVyciA9IDA7Ci0JCWVsc2UgaWYgKGVyciA9PSAtRU5PTUVN
KSB7Ci0JCQludGZzX3dhcm5pbmcodm9sLT5zYiwgIkVycm9yIGFsbG9jYXRpbmcgbWVtb3J5LiAi
Ci0JCQkJCSJSZWRpcnR5aW5nIGZvbGlvIHNvIHdlIHRyeSBhZ2FpbiAiCi0JCQkJCSJsYXRlci4i
KTsKLQkJCS8qCi0JCQkgKiBQdXQgdGhlIGZvbGlvIGJhY2sgb24gbWFwcGluZy0+ZGlydHlfcGFn
ZXMsIGJ1dAotCQkJICogbGVhdmUgaXRzIGJ1ZmZlcidzIGRpcnR5IHN0YXRlIGFzLWlzLgotCQkJ
ICovCi0JCQlmb2xpb19yZWRpcnR5X2Zvcl93cml0ZXBhZ2Uod2JjLCBmb2xpbyk7Ci0JCQllcnIg
PSAwOwotCQl9IGVsc2UKLQkJCWZvbGlvX3NldF9lcnJvcihmb2xpbyk7Ci0JfQotCi0JQlVHX09O
KGZvbGlvX3Rlc3Rfd3JpdGViYWNrKGZvbGlvKSk7Ci0JZm9saW9fc3RhcnRfd3JpdGViYWNrKGZv
bGlvKTsJLyogS2VlcHMgdHJ5X3RvX2ZyZWVfYnVmZmVycygpIGF3YXkuICovCi0KLQkvKiBTdWJt
aXQgdGhlIHByZXBhcmVkIGJ1ZmZlcnMgZm9yIGkvby4gKi8KLQluZWVkX2VuZF93cml0ZWJhY2sg
PSB0cnVlOwotCWRvIHsKLQkJc3RydWN0IGJ1ZmZlcl9oZWFkICpuZXh0ID0gYmgtPmJfdGhpc19w
YWdlOwotCQlpZiAoYnVmZmVyX2FzeW5jX3dyaXRlKGJoKSkgewotCQkJc3VibWl0X2JoKFJFUV9P
UF9XUklURSwgYmgpOwotCQkJbmVlZF9lbmRfd3JpdGViYWNrID0gZmFsc2U7Ci0JCX0KLQkJYmgg
PSBuZXh0OwotCX0gd2hpbGUgKGJoICE9IGhlYWQpOwotCWZvbGlvX3VubG9jayhmb2xpbyk7Ci0K
LQkvKiBJZiBubyBpL28gd2FzIHN0YXJ0ZWQsIG5lZWQgdG8gZW5kIHdyaXRlYmFjayBoZXJlLiAq
LwotCWlmICh1bmxpa2VseShuZWVkX2VuZF93cml0ZWJhY2spKQotCQlmb2xpb19lbmRfd3JpdGVi
YWNrKGZvbGlvKTsKLQotCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JcmV0dXJuIGVycjsKLX0KLQot
LyoqCi0gKiBudGZzX3dyaXRlX21zdF9ibG9jayAtIHdyaXRlIGEgQHBhZ2UgdG8gdGhlIGJhY2tp
bmcgc3RvcmUKLSAqIEBwYWdlOglwYWdlIGNhY2hlIHBhZ2UgdG8gd3JpdGUgb3V0Ci0gKiBAd2Jj
Ogl3cml0ZWJhY2sgY29udHJvbCBzdHJ1Y3R1cmUKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGlzIGZv
ciB3cml0aW5nIHBhZ2VzIGJlbG9uZ2luZyB0byBub24tcmVzaWRlbnQsIG1zdCBwcm90ZWN0ZWQK
LSAqIGF0dHJpYnV0ZXMgdG8gdGhlaXIgYmFja2luZyBzdG9yZS4gIFRoZSBvbmx5IHN1cHBvcnRl
ZCBhdHRyaWJ1dGVzIGFyZSBpbmRleAotICogYWxsb2NhdGlvbiBhbmQgJE1GVC8kREFUQS4gIEJv
dGggZGlyZWN0b3J5IGlub2RlcyBhbmQgaW5kZXggaW5vZGVzIGFyZQotICogc3VwcG9ydGVkIGZv
ciB0aGUgaW5kZXggYWxsb2NhdGlvbiBjYXNlLgotICoKLSAqIFRoZSBwYWdlIG11c3QgcmVtYWlu
IGxvY2tlZCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSB3cml0ZSBiZWNhdXNlIHdlIGFwcGx5Ci0g
KiB0aGUgbXN0IGZpeHVwcywgd3JpdGUsIGFuZCB0aGVuIHVuZG8gdGhlIGZpeHVwcywgc28gaWYg
d2Ugd2VyZSB0byB1bmxvY2sgdGhlCi0gKiBwYWdlIGJlZm9yZSB1bmRvaW5nIHRoZSBmaXh1cHMs
IGFueSBvdGhlciB1c2VyIG9mIHRoZSBwYWdlIHdpbGwgc2VlIHRoZQotICogcGFnZSBjb250ZW50
cyBhcyBjb3JydXB0LgotICoKLSAqIFdlIGNsZWFyIHRoZSBwYWdlIHVwdG9kYXRlIGZsYWcgZm9y
IHRoZSBkdXJhdGlvbiBvZiB0aGUgZnVuY3Rpb24gdG8gZW5zdXJlCi0gKiBleGNsdXNpb24gZm9y
IHRoZSAkTUZULyREQVRBIGNhc2UgYWdhaW5zdCBzb21lb25lIG1hcHBpbmcgYW4gbWZ0IHJlY29y
ZCB3ZQotICogYXJlIGFib3V0IHRvIGFwcGx5IHRoZSBtc3QgZml4dXBzIHRvLgotICoKLSAqIFJl
dHVybiAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqCi0gKiBCYXNlZCBvbiBu
dGZzX3dyaXRlX2Jsb2NrKCksIG50ZnNfbWZ0X3dyaXRlcGFnZSgpLCBhbmQKLSAqIHdyaXRlX21m
dF9yZWNvcmRfbm9sb2NrKCkuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc193cml0ZV9tc3RfYmxvY2so
c3RydWN0IHBhZ2UgKnBhZ2UsCi0JCXN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqd2JjKQotewot
CXNlY3Rvcl90IGJsb2NrLCBkYmxvY2ssIHJlY19ibG9jazsKLQlzdHJ1Y3QgaW5vZGUgKnZpID0g
cGFnZS0+bWFwcGluZy0+aG9zdDsKLQludGZzX2lub2RlICpuaSA9IE5URlNfSSh2aSk7Ci0JbnRm
c192b2x1bWUgKnZvbCA9IG5pLT52b2w7Ci0JdTggKmthZGRyOwotCXVuc2lnbmVkIGludCByZWNf
c2l6ZSA9IG5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplOwotCW50ZnNfaW5vZGUgKmxvY2tlZF9u
aXNbUEFHRV9TSVpFIC8gTlRGU19CTE9DS19TSVpFXTsKLQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJo
LCAqaGVhZCwgKnRiaCwgKnJlY19zdGFydF9iaDsKLQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoc1tN
QVhfQlVGX1BFUl9QQUdFXTsKLQlydW5saXN0X2VsZW1lbnQgKnJsOwotCWludCBpLCBucl9sb2Nr
ZWRfbmlzLCBucl9yZWNzLCBucl9iaHMsIG1heF9iaHMsIGJoc19wZXJfcmVjLCBlcnIsIGVycjI7
Ci0JdW5zaWduZWQgYmhfc2l6ZSwgcmVjX3NpemVfYml0czsKLQlib29sIHN5bmMsIGlzX21mdCwg
cGFnZV9pc19kaXJ0eSwgcmVjX2lzX2RpcnR5OwotCXVuc2lnbmVkIGNoYXIgYmhfc2l6ZV9iaXRz
OwotCi0JaWYgKFdBUk5fT04ocmVjX3NpemUgPCBOVEZTX0JMT0NLX1NJWkUpKQotCQlyZXR1cm4g
LUVJTlZBTDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBpbm9kZSAweCVseCwgYXR0cmli
dXRlIHR5cGUgMHgleCwgcGFnZSBpbmRleCAiCi0JCQkiMHglbHguIiwgdmktPmlfaW5vLCBuaS0+
dHlwZSwgcGFnZS0+aW5kZXgpOwotCUJVR19PTighTklub05vblJlc2lkZW50KG5pKSk7Ci0JQlVH
X09OKCFOSW5vTXN0UHJvdGVjdGVkKG5pKSk7Ci0JaXNfbWZ0ID0gKFNfSVNSRUcodmktPmlfbW9k
ZSkgJiYgIXZpLT5pX2lubyk7Ci0JLyoKLQkgKiBOT1RFOiBudGZzX3dyaXRlX21zdF9ibG9jaygp
IHdvdWxkIGJlIGNhbGxlZCBmb3IgJE1GVE1pcnIgaWYgYSBwYWdlCi0JICogaW4gaXRzIHBhZ2Ug
Y2FjaGUgd2VyZSB0byBiZSBtYXJrZWQgZGlydHkuICBIb3dldmVyIHRoaXMgc2hvdWxkCi0JICog
bmV2ZXIgaGFwcGVuIHdpdGggdGhlIGN1cnJlbnQgZHJpdmVyIGFuZCBjb25zaWRlcmluZyB3ZSBk
byBub3QKLQkgKiBoYW5kbGUgdGhpcyBjYXNlIGhlcmUgd2UgZG8gd2FudCB0byBCVUcoKSwgYXQg
bGVhc3QgZm9yIG5vdy4KLQkgKi8KLQlCVUdfT04oIShpc19tZnQgfHwgU19JU0RJUih2aS0+aV9t
b2RlKSB8fAotCQkJKE5Jbm9BdHRyKG5pKSAmJiBuaS0+dHlwZSA9PSBBVF9JTkRFWF9BTExPQ0FU
SU9OKSkpOwotCWJoX3NpemUgPSB2b2wtPnNiLT5zX2Jsb2Nrc2l6ZTsKLQliaF9zaXplX2JpdHMg
PSB2b2wtPnNiLT5zX2Jsb2Nrc2l6ZV9iaXRzOwotCW1heF9iaHMgPSBQQUdFX1NJWkUgLyBiaF9z
aXplOwotCUJVR19PTighbWF4X2Jocyk7Ci0JQlVHX09OKG1heF9iaHMgPiBNQVhfQlVGX1BFUl9Q
QUdFKTsKLQotCS8qIFdlcmUgd2UgY2FsbGVkIGZvciBzeW5jIHB1cnBvc2VzPyAqLwotCXN5bmMg
PSAod2JjLT5zeW5jX21vZGUgPT0gV0JfU1lOQ19BTEwpOwotCi0JLyogTWFrZSBzdXJlIHdlIGhh
dmUgbWFwcGVkIGJ1ZmZlcnMuICovCi0JYmggPSBoZWFkID0gcGFnZV9idWZmZXJzKHBhZ2UpOwot
CUJVR19PTighYmgpOwotCi0JcmVjX3NpemVfYml0cyA9IG5pLT5pdHlwZS5pbmRleC5ibG9ja19z
aXplX2JpdHM7Ci0JQlVHX09OKCEoUEFHRV9TSVpFID4+IHJlY19zaXplX2JpdHMpKTsKLQliaHNf
cGVyX3JlYyA9IHJlY19zaXplID4+IGJoX3NpemVfYml0czsKLQlCVUdfT04oIWJoc19wZXJfcmVj
KTsKLQotCS8qIFRoZSBmaXJzdCBibG9jayBpbiB0aGUgcGFnZS4gKi8KLQlyZWNfYmxvY2sgPSBi
bG9jayA9IChzZWN0b3JfdClwYWdlLT5pbmRleCA8PAotCQkJKFBBR0VfU0hJRlQgLSBiaF9zaXpl
X2JpdHMpOwotCi0JLyogVGhlIGZpcnN0IG91dCBvZiBib3VuZHMgYmxvY2sgZm9yIHRoZSBkYXRh
IHNpemUuICovCi0JZGJsb2NrID0gKGlfc2l6ZV9yZWFkKHZpKSArIGJoX3NpemUgLSAxKSA+PiBi
aF9zaXplX2JpdHM7Ci0KLQlybCA9IE5VTEw7Ci0JZXJyID0gZXJyMiA9IG5yX2JocyA9IG5yX3Jl
Y3MgPSBucl9sb2NrZWRfbmlzID0gMDsKLQlwYWdlX2lzX2RpcnR5ID0gcmVjX2lzX2RpcnR5ID0g
ZmFsc2U7Ci0JcmVjX3N0YXJ0X2JoID0gTlVMTDsKLQlkbyB7Ci0JCWJvb2wgaXNfcmV0cnkgPSBm
YWxzZTsKLQotCQlpZiAobGlrZWx5KGJsb2NrIDwgcmVjX2Jsb2NrKSkgewotCQkJaWYgKHVubGlr
ZWx5KGJsb2NrID49IGRibG9jaykpIHsKLQkJCQljbGVhcl9idWZmZXJfZGlydHkoYmgpOwotCQkJ
CXNldF9idWZmZXJfdXB0b2RhdGUoYmgpOwotCQkJCWNvbnRpbnVlOwotCQkJfQotCQkJLyoKLQkJ
CSAqIFRoaXMgYmxvY2sgaXMgbm90IHRoZSBmaXJzdCBvbmUgaW4gdGhlIHJlY29yZC4gIFdlCi0J
CQkgKiBpZ25vcmUgdGhlIGJ1ZmZlcidzIGRpcnR5IHN0YXRlIGJlY2F1c2Ugd2UgY291bGQKLQkJ
CSAqIGhhdmUgcmFjZWQgd2l0aCBhIHBhcmFsbGVsIG1hcmtfbnRmc19yZWNvcmRfZGlydHkoKS4K
LQkJCSAqLwotCQkJaWYgKCFyZWNfaXNfZGlydHkpCi0JCQkJY29udGludWU7Ci0JCQlpZiAodW5s
aWtlbHkoZXJyMikpIHsKLQkJCQlpZiAoZXJyMiAhPSAtRU5PTUVNKQotCQkJCQljbGVhcl9idWZm
ZXJfZGlydHkoYmgpOwotCQkJCWNvbnRpbnVlOwotCQkJfQotCQl9IGVsc2UgLyogaWYgKGJsb2Nr
ID09IHJlY19ibG9jaykgKi8gewotCQkJQlVHX09OKGJsb2NrID4gcmVjX2Jsb2NrKTsKLQkJCS8q
IFRoaXMgYmxvY2sgaXMgdGhlIGZpcnN0IG9uZSBpbiB0aGUgcmVjb3JkLiAqLwotCQkJcmVjX2Js
b2NrICs9IGJoc19wZXJfcmVjOwotCQkJZXJyMiA9IDA7Ci0JCQlpZiAodW5saWtlbHkoYmxvY2sg
Pj0gZGJsb2NrKSkgewotCQkJCWNsZWFyX2J1ZmZlcl9kaXJ0eShiaCk7Ci0JCQkJY29udGludWU7
Ci0JCQl9Ci0JCQlpZiAoIWJ1ZmZlcl9kaXJ0eShiaCkpIHsKLQkJCQkvKiBDbGVhbiByZWNvcmRz
IGFyZSBub3Qgd3JpdHRlbiBvdXQuICovCi0JCQkJcmVjX2lzX2RpcnR5ID0gZmFsc2U7Ci0JCQkJ
Y29udGludWU7Ci0JCQl9Ci0JCQlyZWNfaXNfZGlydHkgPSB0cnVlOwotCQkJcmVjX3N0YXJ0X2Jo
ID0gYmg7Ci0JCX0KLQkJLyogTmVlZCB0byBtYXAgdGhlIGJ1ZmZlciBpZiBpdCBpcyBub3QgbWFw
cGVkIGFscmVhZHkuICovCi0JCWlmICh1bmxpa2VseSghYnVmZmVyX21hcHBlZChiaCkpKSB7Ci0J
CQlWQ04gdmNuOwotCQkJTENOIGxjbjsKLQkJCXVuc2lnbmVkIGludCB2Y25fb2ZzOwotCi0JCQli
aC0+Yl9iZGV2ID0gdm9sLT5zYi0+c19iZGV2OwotCQkJLyogT2J0YWluIHRoZSB2Y24gYW5kIG9m
ZnNldCBvZiB0aGUgY3VycmVudCBibG9jay4gKi8KLQkJCXZjbiA9IChWQ04pYmxvY2sgPDwgYmhf
c2l6ZV9iaXRzOwotCQkJdmNuX29mcyA9IHZjbiAmIHZvbC0+Y2x1c3Rlcl9zaXplX21hc2s7Ci0J
CQl2Y24gPj49IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JCQlpZiAoIXJsKSB7Ci1sb2NrX3Jl
dHJ5X3JlbWFwOgotCQkJCWRvd25fcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JCQkJcmwgPSBu
aS0+cnVubGlzdC5ybDsKLQkJCX0KLQkJCWlmIChsaWtlbHkocmwgIT0gTlVMTCkpIHsKLQkJCQkv
KiBTZWVrIHRvIGVsZW1lbnQgY29udGFpbmluZyB0YXJnZXQgdmNuLiAqLwotCQkJCXdoaWxlIChy
bC0+bGVuZ3RoICYmIHJsWzFdLnZjbiA8PSB2Y24pCi0JCQkJCXJsKys7Ci0JCQkJbGNuID0gbnRm
c19ybF92Y25fdG9fbGNuKHJsLCB2Y24pOwotCQkJfSBlbHNlCi0JCQkJbGNuID0gTENOX1JMX05P
VF9NQVBQRUQ7Ci0JCQkvKiBTdWNjZXNzZnVsIHJlbWFwLiAqLwotCQkJaWYgKGxpa2VseShsY24g
Pj0gMCkpIHsKLQkJCQkvKiBTZXR1cCBidWZmZXIgaGVhZCB0byBjb3JyZWN0IGJsb2NrLiAqLwot
CQkJCWJoLT5iX2Jsb2NrbnIgPSAoKGxjbiA8PAotCQkJCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0
cykgKwotCQkJCQkJdmNuX29mcykgPj4gYmhfc2l6ZV9iaXRzOwotCQkJCXNldF9idWZmZXJfbWFw
cGVkKGJoKTsKLQkJCX0gZWxzZSB7Ci0JCQkJLyoKLQkJCQkgKiBSZW1hcCBmYWlsZWQuICBSZXRy
eSB0byBtYXAgdGhlIHJ1bmxpc3Qgb25jZQotCQkJCSAqIHVubGVzcyB3ZSBhcmUgd29ya2luZyBv
biAkTUZUIHdoaWNoIGFsd2F5cwotCQkJCSAqIGhhcyB0aGUgd2hvbGUgb2YgaXRzIHJ1bmxpc3Qg
aW4gbWVtb3J5LgotCQkJCSAqLwotCQkJCWlmICghaXNfbWZ0ICYmICFpc19yZXRyeSAmJgotCQkJ
CQkJbGNuID09IExDTl9STF9OT1RfTUFQUEVEKSB7Ci0JCQkJCWlzX3JldHJ5ID0gdHJ1ZTsKLQkJ
CQkJLyoKLQkJCQkJICogQXR0ZW1wdCB0byBtYXAgcnVubGlzdCwgZHJvcHBpbmcKLQkJCQkJICog
bG9jayBmb3IgdGhlIGR1cmF0aW9uLgotCQkJCQkgKi8KLQkJCQkJdXBfcmVhZCgmbmktPnJ1bmxp
c3QubG9jayk7Ci0JCQkJCWVycjIgPSBudGZzX21hcF9ydW5saXN0KG5pLCB2Y24pOwotCQkJCQlp
ZiAobGlrZWx5KCFlcnIyKSkKLQkJCQkJCWdvdG8gbG9ja19yZXRyeV9yZW1hcDsKLQkJCQkJaWYg
KGVycjIgPT0gLUVOT01FTSkKLQkJCQkJCXBhZ2VfaXNfZGlydHkgPSB0cnVlOwotCQkJCQlsY24g
PSBlcnIyOwotCQkJCX0gZWxzZSB7Ci0JCQkJCWVycjIgPSAtRUlPOwotCQkJCQlpZiAoIXJsKQot
CQkJCQkJdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JCQkJfQotCQkJCS8qIEhhcmQgZXJy
b3IuICBBYm9ydCB3cml0aW5nIHRoaXMgcmVjb3JkLiAqLwotCQkJCWlmICghZXJyIHx8IGVyciA9
PSAtRU5PTUVNKQotCQkJCQllcnIgPSBlcnIyOwotCQkJCWJoLT5iX2Jsb2NrbnIgPSAtMTsKLQkJ
CQludGZzX2Vycm9yKHZvbC0+c2IsICJDYW5ub3Qgd3JpdGUgbnRmcyByZWNvcmQgIgotCQkJCQkJ
IjB4JWxseCAoaW5vZGUgMHglbHgsICIKLQkJCQkJCSJhdHRyaWJ1dGUgdHlwZSAweCV4KSBiZWNh
dXNlICIKLQkJCQkJCSJpdHMgbG9jYXRpb24gb24gZGlzayBjb3VsZCAiCi0JCQkJCQkibm90IGJl
IGRldGVybWluZWQgKGVycm9yICIKLQkJCQkJCSJjb2RlICVsbGkpLiIsCi0JCQkJCQkobG9uZyBs
b25nKWJsb2NrIDw8Ci0JCQkJCQliaF9zaXplX2JpdHMgPj4KLQkJCQkJCXZvbC0+bWZ0X3JlY29y
ZF9zaXplX2JpdHMsCi0JCQkJCQluaS0+bWZ0X25vLCBuaS0+dHlwZSwKLQkJCQkJCShsb25nIGxv
bmcpbGNuKTsKLQkJCQkvKgotCQkJCSAqIElmIHRoaXMgaXMgbm90IHRoZSBmaXJzdCBidWZmZXIs
IHJlbW92ZSB0aGUKLQkJCQkgKiBidWZmZXJzIGluIHRoaXMgcmVjb3JkIGZyb20gdGhlIGxpc3Qg
b2YKLQkJCQkgKiBidWZmZXJzIHRvIHdyaXRlIGFuZCBjbGVhciB0aGVpciBkaXJ0eSBiaXQKLQkJ
CQkgKiBpZiBub3QgZXJyb3IgLUVOT01FTS4KLQkJCQkgKi8KLQkJCQlpZiAocmVjX3N0YXJ0X2Jo
ICE9IGJoKSB7Ci0JCQkJCXdoaWxlIChiaHNbLS1ucl9iaHNdICE9IHJlY19zdGFydF9iaCkKLQkJ
CQkJCTsKLQkJCQkJaWYgKGVycjIgIT0gLUVOT01FTSkgewotCQkJCQkJZG8gewotCQkJCQkJCWNs
ZWFyX2J1ZmZlcl9kaXJ0eSgKLQkJCQkJCQkJcmVjX3N0YXJ0X2JoKTsKLQkJCQkJCX0gd2hpbGUg
KChyZWNfc3RhcnRfYmggPQotCQkJCQkJCQlyZWNfc3RhcnRfYmgtPgotCQkJCQkJCQliX3RoaXNf
cGFnZSkgIT0KLQkJCQkJCQkJYmgpOwotCQkJCQl9Ci0JCQkJfQotCQkJCWNvbnRpbnVlOwotCQkJ
fQotCQl9Ci0JCUJVR19PTighYnVmZmVyX3VwdG9kYXRlKGJoKSk7Ci0JCUJVR19PTihucl9iaHMg
Pj0gbWF4X2Jocyk7Ci0JCWJoc1tucl9iaHMrK10gPSBiaDsKLQl9IHdoaWxlIChibG9jaysrLCAo
YmggPSBiaC0+Yl90aGlzX3BhZ2UpICE9IGhlYWQpOwotCWlmICh1bmxpa2VseShybCkpCi0JCXVw
X3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCS8qIElmIHRoZXJlIHdlcmUgbm8gZGlydHkgYnVm
ZmVycywgd2UgYXJlIGRvbmUuICovCi0JaWYgKCFucl9iaHMpCi0JCWdvdG8gZG9uZTsKLQkvKiBN
YXAgdGhlIHBhZ2Ugc28gd2UgY2FuIGFjY2VzcyBpdHMgY29udGVudHMuICovCi0Ja2FkZHIgPSBr
bWFwKHBhZ2UpOwotCS8qIENsZWFyIHRoZSBwYWdlIHVwdG9kYXRlIGZsYWcgd2hpbHN0IHRoZSBt
c3QgZml4dXBzIGFyZSBhcHBsaWVkLiAqLwotCUJVR19PTighUGFnZVVwdG9kYXRlKHBhZ2UpKTsK
LQlDbGVhclBhZ2VVcHRvZGF0ZShwYWdlKTsKLQlmb3IgKGkgPSAwOyBpIDwgbnJfYmhzOyBpKysp
IHsKLQkJdW5zaWduZWQgaW50IG9mczsKLQotCQkvKiBTa2lwIGJ1ZmZlcnMgd2hpY2ggYXJlIG5v
dCBhdCB0aGUgYmVnaW5uaW5nIG9mIHJlY29yZHMuICovCi0JCWlmIChpICUgYmhzX3Blcl9yZWMp
Ci0JCQljb250aW51ZTsKLQkJdGJoID0gYmhzW2ldOwotCQlvZnMgPSBiaF9vZmZzZXQodGJoKTsK
LQkJaWYgKGlzX21mdCkgewotCQkJbnRmc19pbm9kZSAqdG5pOwotCQkJdW5zaWduZWQgbG9uZyBt
ZnRfbm87Ci0KLQkJCS8qIEdldCB0aGUgbWZ0IHJlY29yZCBudW1iZXIuICovCi0JCQltZnRfbm8g
PSAoKChzNjQpcGFnZS0+aW5kZXggPDwgUEFHRV9TSElGVCkgKyBvZnMpCi0JCQkJCT4+IHJlY19z
aXplX2JpdHM7Ci0JCQkvKiBDaGVjayB3aGV0aGVyIHRvIHdyaXRlIHRoaXMgbWZ0IHJlY29yZC4g
Ki8KLQkJCXRuaSA9IE5VTEw7Ci0JCQlpZiAoIW50ZnNfbWF5X3dyaXRlX21mdF9yZWNvcmQodm9s
LCBtZnRfbm8sCi0JCQkJCShNRlRfUkVDT1JEKikoa2FkZHIgKyBvZnMpLCAmdG5pKSkgewotCQkJ
CS8qCi0JCQkJICogVGhlIHJlY29yZCBzaG91bGQgbm90IGJlIHdyaXR0ZW4uICBUaGlzCi0JCQkJ
ICogbWVhbnMgd2UgbmVlZCB0byByZWRpcnR5IHRoZSBwYWdlIGJlZm9yZQotCQkJCSAqIHJldHVy
bmluZy4KLQkJCQkgKi8KLQkJCQlwYWdlX2lzX2RpcnR5ID0gdHJ1ZTsKLQkJCQkvKgotCQkJCSAq
IFJlbW92ZSB0aGUgYnVmZmVycyBpbiB0aGlzIG1mdCByZWNvcmQgZnJvbQotCQkJCSAqIHRoZSBs
aXN0IG9mIGJ1ZmZlcnMgdG8gd3JpdGUuCi0JCQkJICovCi0JCQkJZG8gewotCQkJCQliaHNbaV0g
PSBOVUxMOwotCQkJCX0gd2hpbGUgKCsraSAlIGJoc19wZXJfcmVjKTsKLQkJCQljb250aW51ZTsK
LQkJCX0KLQkJCS8qCi0JCQkgKiBUaGUgcmVjb3JkIHNob3VsZCBiZSB3cml0dGVuLiAgSWYgYSBs
b2NrZWQgbnRmcwotCQkJICogaW5vZGUgd2FzIHJldHVybmVkLCBhZGQgaXQgdG8gdGhlIGFycmF5
IG9mIGxvY2tlZAotCQkJICogbnRmcyBpbm9kZXMuCi0JCQkgKi8KLQkJCWlmICh0bmkpCi0JCQkJ
bG9ja2VkX25pc1tucl9sb2NrZWRfbmlzKytdID0gdG5pOwotCQl9Ci0JCS8qIEFwcGx5IHRoZSBt
c3QgcHJvdGVjdGlvbiBmaXh1cHMuICovCi0JCWVycjIgPSBwcmVfd3JpdGVfbXN0X2ZpeHVwKChO
VEZTX1JFQ09SRCopKGthZGRyICsgb2ZzKSwKLQkJCQlyZWNfc2l6ZSk7Ci0JCWlmICh1bmxpa2Vs
eShlcnIyKSkgewotCQkJaWYgKCFlcnIgfHwgZXJyID09IC1FTk9NRU0pCi0JCQkJZXJyID0gLUVJ
TzsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBhcHBseSBtc3QgZml4dXBzICIK
LQkJCQkJIihpbm9kZSAweCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgIgotCQkJCQkicGFnZSBp
bmRleCAweCVseCwgcGFnZSBvZmZzZXQgMHgleCkhIgotCQkJCQkiICBVbm1vdW50IGFuZCBydW4g
Y2hrZHNrLiIsIHZpLT5pX2lubywKLQkJCQkJbmktPnR5cGUsIHBhZ2UtPmluZGV4LCBvZnMpOwot
CQkJLyoKLQkJCSAqIE1hcmsgYWxsIHRoZSBidWZmZXJzIGluIHRoaXMgcmVjb3JkIGNsZWFuIGFz
IHdlIGRvCi0JCQkgKiBub3Qgd2FudCB0byB3cml0ZSBjb3JydXB0IGRhdGEgdG8gZGlzay4KLQkJ
CSAqLwotCQkJZG8gewotCQkJCWNsZWFyX2J1ZmZlcl9kaXJ0eShiaHNbaV0pOwotCQkJCWJoc1tp
XSA9IE5VTEw7Ci0JCQl9IHdoaWxlICgrK2kgJSBiaHNfcGVyX3JlYyk7Ci0JCQljb250aW51ZTsK
LQkJfQotCQlucl9yZWNzKys7Ci0JfQotCS8qIElmIG5vIHJlY29yZHMgYXJlIHRvIGJlIHdyaXR0
ZW4gb3V0LCB3ZSBhcmUgZG9uZS4gKi8KLQlpZiAoIW5yX3JlY3MpCi0JCWdvdG8gdW5tX2RvbmU7
Ci0JZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7Ci0JLyogTG9jayBidWZmZXJzIGFuZCBzdGFydCBz
eW5jaHJvbm91cyB3cml0ZSBpL28gb24gdGhlbS4gKi8KLQlmb3IgKGkgPSAwOyBpIDwgbnJfYmhz
OyBpKyspIHsKLQkJdGJoID0gYmhzW2ldOwotCQlpZiAoIXRiaCkKLQkJCWNvbnRpbnVlOwotCQlp
ZiAoIXRyeWxvY2tfYnVmZmVyKHRiaCkpCi0JCQlCVUcoKTsKLQkJLyogVGhlIGJ1ZmZlciBkaXJ0
eSBzdGF0ZSBpcyBub3cgaXJyZWxldmFudCwganVzdCBjbGVhbiBpdC4gKi8KLQkJY2xlYXJfYnVm
ZmVyX2RpcnR5KHRiaCk7Ci0JCUJVR19PTighYnVmZmVyX3VwdG9kYXRlKHRiaCkpOwotCQlCVUdf
T04oIWJ1ZmZlcl9tYXBwZWQodGJoKSk7Ci0JCWdldF9iaCh0YmgpOwotCQl0YmgtPmJfZW5kX2lv
ID0gZW5kX2J1ZmZlcl93cml0ZV9zeW5jOwotCQlzdWJtaXRfYmgoUkVRX09QX1dSSVRFLCB0Ymgp
OwotCX0KLQkvKiBTeW5jaHJvbml6ZSB0aGUgbWZ0IG1pcnJvciBub3cgaWYgbm90IEBzeW5jLiAq
LwotCWlmIChpc19tZnQgJiYgIXN5bmMpCi0JCWdvdG8gZG9fbWlycm9yOwotZG9fd2FpdDoKLQkv
KiBXYWl0IG9uIGkvbyBjb21wbGV0aW9uIG9mIGJ1ZmZlcnMuICovCi0JZm9yIChpID0gMDsgaSA8
IG5yX2JoczsgaSsrKSB7Ci0JCXRiaCA9IGJoc1tpXTsKLQkJaWYgKCF0YmgpCi0JCQljb250aW51
ZTsKLQkJd2FpdF9vbl9idWZmZXIodGJoKTsKLQkJaWYgKHVubGlrZWx5KCFidWZmZXJfdXB0b2Rh
dGUodGJoKSkpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkkvTyBlcnJvciB3aGlsZSB3cml0
aW5nIG50ZnMgIgotCQkJCQkicmVjb3JkIGJ1ZmZlciAoaW5vZGUgMHglbHgsICIKLQkJCQkJImF0
dHJpYnV0ZSB0eXBlIDB4JXgsIHBhZ2UgaW5kZXggIgotCQkJCQkiMHglbHgsIHBhZ2Ugb2Zmc2V0
IDB4JWx4KSEgIFVubW91bnQgIgotCQkJCQkiYW5kIHJ1biBjaGtkc2suIiwgdmktPmlfaW5vLCBu
aS0+dHlwZSwKLQkJCQkJcGFnZS0+aW5kZXgsIGJoX29mZnNldCh0YmgpKTsKLQkJCWlmICghZXJy
IHx8IGVyciA9PSAtRU5PTUVNKQotCQkJCWVyciA9IC1FSU87Ci0JCQkvKgotCQkJICogU2V0IHRo
ZSBidWZmZXIgdXB0b2RhdGUgc28gdGhlIHBhZ2UgYW5kIGJ1ZmZlcgotCQkJICogc3RhdGVzIGRv
IG5vdCBiZWNvbWUgb3V0IG9mIHN5bmMuCi0JCQkgKi8KLQkJCXNldF9idWZmZXJfdXB0b2RhdGUo
dGJoKTsKLQkJfQotCX0KLQkvKiBJZiBAc3luYywgbm93IHN5bmNocm9uaXplIHRoZSBtZnQgbWly
cm9yLiAqLwotCWlmIChpc19tZnQgJiYgc3luYykgewotZG9fbWlycm9yOgotCQlmb3IgKGkgPSAw
OyBpIDwgbnJfYmhzOyBpKyspIHsKLQkJCXVuc2lnbmVkIGxvbmcgbWZ0X25vOwotCQkJdW5zaWdu
ZWQgaW50IG9mczsKLQotCQkJLyoKLQkJCSAqIFNraXAgYnVmZmVycyB3aGljaCBhcmUgbm90IGF0
IHRoZSBiZWdpbm5pbmcgb2YKLQkJCSAqIHJlY29yZHMuCi0JCQkgKi8KLQkJCWlmIChpICUgYmhz
X3Blcl9yZWMpCi0JCQkJY29udGludWU7Ci0JCQl0YmggPSBiaHNbaV07Ci0JCQkvKiBTa2lwIHJl
bW92ZWQgYnVmZmVycyAoYW5kIGhlbmNlIHJlY29yZHMpLiAqLwotCQkJaWYgKCF0YmgpCi0JCQkJ
Y29udGludWU7Ci0JCQlvZnMgPSBiaF9vZmZzZXQodGJoKTsKLQkJCS8qIEdldCB0aGUgbWZ0IHJl
Y29yZCBudW1iZXIuICovCi0JCQltZnRfbm8gPSAoKChzNjQpcGFnZS0+aW5kZXggPDwgUEFHRV9T
SElGVCkgKyBvZnMpCi0JCQkJCT4+IHJlY19zaXplX2JpdHM7Ci0JCQlpZiAobWZ0X25vIDwgdm9s
LT5tZnRtaXJyX3NpemUpCi0JCQkJbnRmc19zeW5jX21mdF9taXJyb3Iodm9sLCBtZnRfbm8sCi0J
CQkJCQkoTUZUX1JFQ09SRCopKGthZGRyICsgb2ZzKSwKLQkJCQkJCXN5bmMpOwotCQl9Ci0JCWlm
ICghc3luYykKLQkJCWdvdG8gZG9fd2FpdDsKLQl9Ci0JLyogUmVtb3ZlIHRoZSBtc3QgcHJvdGVj
dGlvbiBmaXh1cHMgYWdhaW4uICovCi0JZm9yIChpID0gMDsgaSA8IG5yX2JoczsgaSsrKSB7Ci0J
CWlmICghKGkgJSBiaHNfcGVyX3JlYykpIHsKLQkJCXRiaCA9IGJoc1tpXTsKLQkJCWlmICghdGJo
KQotCQkJCWNvbnRpbnVlOwotCQkJcG9zdF93cml0ZV9tc3RfZml4dXAoKE5URlNfUkVDT1JEKiko
a2FkZHIgKwotCQkJCQliaF9vZmZzZXQodGJoKSkpOwotCQl9Ci0JfQotCWZsdXNoX2RjYWNoZV9w
YWdlKHBhZ2UpOwotdW5tX2RvbmU6Ci0JLyogVW5sb2NrIGFueSBsb2NrZWQgaW5vZGVzLiAqLwot
CXdoaWxlIChucl9sb2NrZWRfbmlzLS0gPiAwKSB7Ci0JCW50ZnNfaW5vZGUgKnRuaSwgKmJhc2Vf
dG5pOwotCQkKLQkJdG5pID0gbG9ja2VkX25pc1tucl9sb2NrZWRfbmlzXTsKLQkJLyogR2V0IHRo
ZSBiYXNlIGlub2RlLiAqLwotCQltdXRleF9sb2NrKCZ0bmktPmV4dGVudF9sb2NrKTsKLQkJaWYg
KHRuaS0+bnJfZXh0ZW50cyA+PSAwKQotCQkJYmFzZV90bmkgPSB0bmk7Ci0JCWVsc2UgewotCQkJ
YmFzZV90bmkgPSB0bmktPmV4dC5iYXNlX250ZnNfaW5vOwotCQkJQlVHX09OKCFiYXNlX3RuaSk7
Ci0JCX0KLQkJbXV0ZXhfdW5sb2NrKCZ0bmktPmV4dGVudF9sb2NrKTsKLQkJbnRmc19kZWJ1Zygi
VW5sb2NraW5nICVzIGlub2RlIDB4JWx4LiIsCi0JCQkJdG5pID09IGJhc2VfdG5pID8gImJhc2Ui
IDogImV4dGVudCIsCi0JCQkJdG5pLT5tZnRfbm8pOwotCQltdXRleF91bmxvY2soJnRuaS0+bXJl
Y19sb2NrKTsKLQkJYXRvbWljX2RlYygmdG5pLT5jb3VudCk7Ci0JCWlwdXQoVkZTX0koYmFzZV90
bmkpKTsKLQl9Ci0JU2V0UGFnZVVwdG9kYXRlKHBhZ2UpOwotCWt1bm1hcChwYWdlKTsKLWRvbmU6
Ci0JaWYgKHVubGlrZWx5KGVyciAmJiBlcnIgIT0gLUVOT01FTSkpIHsKLQkJLyoKLQkJICogU2V0
IHBhZ2UgZXJyb3IgaWYgdGhlcmUgaXMgb25seSBvbmUgbnRmcyByZWNvcmQgaW4gdGhlIHBhZ2Uu
Ci0JCSAqIE90aGVyd2lzZSB3ZSB3b3VsZCBsb29zZSBwZXItcmVjb3JkIGdyYW51bGFyaXR5Lgot
CQkgKi8KLQkJaWYgKG5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplID09IFBBR0VfU0laRSkKLQkJ
CVNldFBhZ2VFcnJvcihwYWdlKTsKLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCX0KLQlpZiAocGFn
ZV9pc19kaXJ0eSkgewotCQludGZzX2RlYnVnKCJQYWdlIHN0aWxsIGNvbnRhaW5zIG9uZSBvciBt
b3JlIGRpcnR5IG50ZnMgIgotCQkJCSJyZWNvcmRzLiAgUmVkaXJ0eWluZyB0aGUgcGFnZSBzdGFy
dGluZyBhdCAiCi0JCQkJInJlY29yZCAweCVseC4iLCBwYWdlLT5pbmRleCA8PAotCQkJCShQQUdF
X1NISUZUIC0gcmVjX3NpemVfYml0cykpOwotCQlyZWRpcnR5X3BhZ2VfZm9yX3dyaXRlcGFnZSh3
YmMsIHBhZ2UpOwotCQl1bmxvY2tfcGFnZShwYWdlKTsKLQl9IGVsc2UgewotCQkvKgotCQkgKiBL
ZWVwIHRoZSBWTSBoYXBweS4gIFRoaXMgbXVzdCBiZSBkb25lIG90aGVyd2lzZSB0aGUKLQkJICog
cmFkaXgtdHJlZSB0YWcgUEFHRUNBQ0hFX1RBR19ESVJUWSByZW1haW5zIHNldCBldmVuIHRob3Vn
aAotCQkgKiB0aGUgcGFnZSBpcyBjbGVhbi4KLQkJICovCi0JCUJVR19PTihQYWdlV3JpdGViYWNr
KHBhZ2UpKTsKLQkJc2V0X3BhZ2Vfd3JpdGViYWNrKHBhZ2UpOwotCQl1bmxvY2tfcGFnZShwYWdl
KTsKLQkJZW5kX3BhZ2Vfd3JpdGViYWNrKHBhZ2UpOwotCX0KLQlpZiAobGlrZWx5KCFlcnIpKQot
CQludGZzX2RlYnVnKCJEb25lLiIpOwotCXJldHVybiBlcnI7Ci19Ci0KLS8qKgotICogbnRmc193
cml0ZXBhZ2UgLSB3cml0ZSBhIEBwYWdlIHRvIHRoZSBiYWNraW5nIHN0b3JlCi0gKiBAcGFnZToJ
cGFnZSBjYWNoZSBwYWdlIHRvIHdyaXRlIG91dAotICogQHdiYzoJd3JpdGViYWNrIGNvbnRyb2wg
c3RydWN0dXJlCi0gKgotICogVGhpcyBpcyBjYWxsZWQgZnJvbSB0aGUgVk0gd2hlbiBpdCB3YW50
cyB0byBoYXZlIGEgZGlydHkgbnRmcyBwYWdlIGNhY2hlCi0gKiBwYWdlIGNsZWFuZWQuICBUaGUg
Vk0gaGFzIGFscmVhZHkgbG9ja2VkIHRoZSBwYWdlIGFuZCBtYXJrZWQgaXQgY2xlYW4uCi0gKgot
ICogRm9yIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGVzLCBudGZzX3dyaXRlcGFnZSgpIHdyaXRlcyB0
aGUgQHBhZ2UgYnkgY2FsbGluZwotICogdGhlIG50ZnMgdmVyc2lvbiBvZiB0aGUgZ2VuZXJpYyBi
bG9ja193cml0ZV9mdWxsX2ZvbGlvKCkgZnVuY3Rpb24sCi0gKiBudGZzX3dyaXRlX2Jsb2NrKCks
IHdoaWNoIGluIHR1cm4gaWYgbmVjZXNzYXJ5IGNyZWF0ZXMgYW5kIHdyaXRlcyB0aGUKLSAqIGJ1
ZmZlcnMgYXNzb2NpYXRlZCB3aXRoIHRoZSBwYWdlIGFzeW5jaHJvbm91c2x5LgotICoKLSAqIEZv
ciByZXNpZGVudCBhdHRyaWJ1dGVzLCBPVE9ILCBudGZzX3dyaXRlcGFnZSgpIHdyaXRlcyB0aGUg
QHBhZ2UgYnkgY29weWluZwotICogdGhlIGRhdGEgdG8gdGhlIG1mdCByZWNvcmQgKHdoaWNoIGF0
IHRoaXMgc3RhZ2UgaXMgbW9zdCBsaWtlbHkgaW4gbWVtb3J5KS4KLSAqIFRoZSBtZnQgcmVjb3Jk
IGlzIHRoZW4gbWFya2VkIGRpcnR5IGFuZCB3cml0dGVuIG91dCBhc3luY2hyb25vdXNseSB2aWEg
dGhlCi0gKiB2ZnMgaW5vZGUgZGlydHkgY29kZSBwYXRoIGZvciB0aGUgaW5vZGUgdGhlIG1mdCBy
ZWNvcmQgYmVsb25ncyB0byBvciB2aWEgdGhlCi0gKiB2bSBwYWdlIGRpcnR5IGNvZGUgcGF0aCBm
b3IgdGhlIHBhZ2UgdGhlIG1mdCByZWNvcmQgaXMgaW4uCi0gKgotICogQmFzZWQgb24gbnRmc19y
ZWFkX2ZvbGlvKCkgYW5kIGZzL2J1ZmZlci5jOjpibG9ja193cml0ZV9mdWxsX2ZvbGlvKCkuCi0g
KgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0
aWMgaW50IG50ZnNfd3JpdGVwYWdlKHN0cnVjdCBwYWdlICpwYWdlLCBzdHJ1Y3Qgd3JpdGViYWNr
X2NvbnRyb2wgKndiYykKLXsKLQlzdHJ1Y3QgZm9saW8gKmZvbGlvID0gcGFnZV9mb2xpbyhwYWdl
KTsKLQlsb2ZmX3QgaV9zaXplOwotCXN0cnVjdCBpbm9kZSAqdmkgPSBmb2xpby0+bWFwcGluZy0+
aG9zdDsKLQludGZzX2lub2RlICpiYXNlX25pID0gTlVMTCwgKm5pID0gTlRGU19JKHZpKTsKLQlj
aGFyICphZGRyOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHggPSBOVUxMOwotCU1GVF9SRUNP
UkQgKm0gPSBOVUxMOwotCXUzMiBhdHRyX2xlbjsKLQlpbnQgZXJyOwotCi1yZXRyeV93cml0ZXBh
Z2U6Ci0JQlVHX09OKCFmb2xpb190ZXN0X2xvY2tlZChmb2xpbykpOwotCWlfc2l6ZSA9IGlfc2l6
ZV9yZWFkKHZpKTsKLQkvKiBJcyB0aGUgZm9saW8gZnVsbHkgb3V0c2lkZSBpX3NpemU/ICh0cnVu
Y2F0ZSBpbiBwcm9ncmVzcykgKi8KLQlpZiAodW5saWtlbHkoZm9saW8tPmluZGV4ID49IChpX3Np
emUgKyBQQUdFX1NJWkUgLSAxKSA+PgotCQkJUEFHRV9TSElGVCkpIHsKLQkJLyoKLQkJICogVGhl
IGZvbGlvIG1heSBoYXZlIGRpcnR5LCB1bm1hcHBlZCBidWZmZXJzLiAgTWFrZSB0aGVtCi0JCSAq
IGZyZWVhYmxlIGhlcmUsIHNvIHRoZSBwYWdlIGRvZXMgbm90IGxlYWsuCi0JCSAqLwotCQlibG9j
a19pbnZhbGlkYXRlX2ZvbGlvKGZvbGlvLCAwLCBmb2xpb19zaXplKGZvbGlvKSk7Ci0JCWZvbGlv
X3VubG9jayhmb2xpbyk7Ci0JCW50ZnNfZGVidWcoIldyaXRlIG91dHNpZGUgaV9zaXplIC0gdHJ1
bmNhdGVkPyIpOwotCQlyZXR1cm4gMDsKLQl9Ci0JLyoKLQkgKiBPbmx5ICREQVRBIGF0dHJpYnV0
ZXMgY2FuIGJlIGVuY3J5cHRlZCBhbmQgb25seSB1bm5hbWVkICREQVRBCi0JICogYXR0cmlidXRl
cyBjYW4gYmUgY29tcHJlc3NlZC4gIEluZGV4IHJvb3QgY2FuIGhhdmUgdGhlIGZsYWdzIHNldCBi
dXQKLQkgKiB0aGlzIG1lYW5zIHRvIGNyZWF0ZSBjb21wcmVzc2VkL2VuY3J5cHRlZCBmaWxlcywg
bm90IHRoYXQgdGhlCi0JICogYXR0cmlidXRlIGlzIGNvbXByZXNzZWQvZW5jcnlwdGVkLiAgTm90
ZSB3ZSBuZWVkIHRvIGNoZWNrIGZvcgotCSAqIEFUX0lOREVYX0FMTE9DQVRJT04gc2luY2UgdGhp
cyBpcyB0aGUgdHlwZSBvZiBib3RoIGRpcmVjdG9yeSBhbmQKLQkgKiBpbmRleCBpbm9kZXMuCi0J
ICovCi0JaWYgKG5pLT50eXBlICE9IEFUX0lOREVYX0FMTE9DQVRJT04pIHsKLQkJLyogSWYgZmls
ZSBpcyBlbmNyeXB0ZWQsIGRlbnkgYWNjZXNzLCBqdXN0IGxpa2UgTlQ0LiAqLwotCQlpZiAoTklu
b0VuY3J5cHRlZChuaSkpIHsKLQkJCWZvbGlvX3VubG9jayhmb2xpbyk7Ci0JCQlCVUdfT04obmkt
PnR5cGUgIT0gQVRfREFUQSk7Ci0JCQludGZzX2RlYnVnKCJEZW55aW5nIHdyaXRlIGFjY2VzcyB0
byBlbmNyeXB0ZWQgZmlsZS4iKTsKLQkJCXJldHVybiAtRUFDQ0VTOwotCQl9Ci0JCS8qIENvbXBy
ZXNzZWQgZGF0YSBzdHJlYW1zIGFyZSBoYW5kbGVkIGluIGNvbXByZXNzLmMuICovCi0JCWlmIChO
SW5vTm9uUmVzaWRlbnQobmkpICYmIE5Jbm9Db21wcmVzc2VkKG5pKSkgewotCQkJQlVHX09OKG5p
LT50eXBlICE9IEFUX0RBVEEpOwotCQkJQlVHX09OKG5pLT5uYW1lX2xlbik7Ci0JCQkvLyBUT0RP
OiBJbXBsZW1lbnQgYW5kIHJlcGxhY2UgdGhpcyB3aXRoCi0JCQkvLyByZXR1cm4gbnRmc193cml0
ZV9jb21wcmVzc2VkX2Jsb2NrKHBhZ2UpOwotCQkJZm9saW9fdW5sb2NrKGZvbGlvKTsKLQkJCW50
ZnNfZXJyb3IodmktPmlfc2IsICJXcml0aW5nIHRvIGNvbXByZXNzZWQgZmlsZXMgaXMgIgotCQkJ
CQkibm90IHN1cHBvcnRlZCB5ZXQuICBTb3JyeS4iKTsKLQkJCXJldHVybiAtRU9QTk9UU1VQUDsK
LQkJfQotCQkvLyBUT0RPOiBJbXBsZW1lbnQgYW5kIHJlbW92ZSB0aGlzIGNoZWNrLgotCQlpZiAo
Tklub05vblJlc2lkZW50KG5pKSAmJiBOSW5vU3BhcnNlKG5pKSkgewotCQkJZm9saW9fdW5sb2Nr
KGZvbGlvKTsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJXcml0aW5nIHRvIHNwYXJzZSBmaWxl
cyBpcyBub3QgIgotCQkJCQkic3VwcG9ydGVkIHlldC4gIFNvcnJ5LiIpOwotCQkJcmV0dXJuIC1F
T1BOT1RTVVBQOwotCQl9Ci0JfQotCS8qIE5Jbm9Ob25SZXNpZGVudCgpID09IE5Jbm9JbmRleEFs
bG9jUHJlc2VudCgpICovCi0JaWYgKE5Jbm9Ob25SZXNpZGVudChuaSkpIHsKLQkJLyogV2UgaGF2
ZSB0byB6ZXJvIGV2ZXJ5IHRpbWUgZHVlIHRvIG1tYXAtYXQtZW5kLW9mLWZpbGUuICovCi0JCWlm
IChmb2xpby0+aW5kZXggPj0gKGlfc2l6ZSA+PiBQQUdFX1NISUZUKSkgewotCQkJLyogVGhlIGZv
bGlvIHN0cmFkZGxlcyBpX3NpemUuICovCi0JCQl1bnNpZ25lZCBpbnQgb2ZzID0gaV9zaXplICYg
KGZvbGlvX3NpemUoZm9saW8pIC0gMSk7Ci0JCQlmb2xpb196ZXJvX3NlZ21lbnQoZm9saW8sIG9m
cywgZm9saW9fc2l6ZShmb2xpbykpOwotCQl9Ci0JCS8qIEhhbmRsZSBtc3QgcHJvdGVjdGVkIGF0
dHJpYnV0ZXMuICovCi0JCWlmIChOSW5vTXN0UHJvdGVjdGVkKG5pKSkKLQkJCXJldHVybiBudGZz
X3dyaXRlX21zdF9ibG9jayhwYWdlLCB3YmMpOwotCQkvKiBOb3JtYWwsIG5vbi1yZXNpZGVudCBk
YXRhIHN0cmVhbS4gKi8KLQkJcmV0dXJuIG50ZnNfd3JpdGVfYmxvY2soZm9saW8sIHdiYyk7Ci0J
fQotCS8qCi0JICogQXR0cmlidXRlIGlzIHJlc2lkZW50LCBpbXBseWluZyBpdCBpcyBub3QgY29t
cHJlc3NlZCwgZW5jcnlwdGVkLCBvcgotCSAqIG1zdCBwcm90ZWN0ZWQuICBUaGlzIGFsc28gbWVh
bnMgdGhlIGF0dHJpYnV0ZSBpcyBzbWFsbGVyIHRoYW4gYW4gbWZ0Ci0JICogcmVjb3JkIGFuZCBo
ZW5jZSBzbWFsbGVyIHRoYW4gYSBmb2xpbywgc28gY2FuIHNpbXBseSByZXR1cm4gZXJyb3Igb24K
LQkgKiBhbnkgZm9saW9zIHdpdGggaW5kZXggYWJvdmUgMC4gIE5vdGUgdGhlIGF0dHJpYnV0ZSBj
YW4gYWN0dWFsbHkgYmUKLQkgKiBtYXJrZWQgY29tcHJlc3NlZCBidXQgaWYgaXQgaXMgcmVzaWRl
bnQgdGhlIGFjdHVhbCBkYXRhIGlzIG5vdAotCSAqIGNvbXByZXNzZWQgc28gd2UgYXJlIG9rIHRv
IGlnbm9yZSB0aGUgY29tcHJlc3NlZCBmbGFnIGhlcmUuCi0JICovCi0JQlVHX09OKGZvbGlvX2J1
ZmZlcnMoZm9saW8pKTsKLQlCVUdfT04oIWZvbGlvX3Rlc3RfdXB0b2RhdGUoZm9saW8pKTsKLQlp
ZiAodW5saWtlbHkoZm9saW8tPmluZGV4ID4gMCkpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwg
IkJVRygpISBmb2xpby0+aW5kZXggKDB4JWx4KSA+IDAuICAiCi0JCQkJIkFib3J0aW5nIHdyaXRl
LiIsIGZvbGlvLT5pbmRleCk7Ci0JCUJVR19PTihmb2xpb190ZXN0X3dyaXRlYmFjayhmb2xpbykp
OwotCQlmb2xpb19zdGFydF93cml0ZWJhY2soZm9saW8pOwotCQlmb2xpb191bmxvY2soZm9saW8p
OwotCQlmb2xpb19lbmRfd3JpdGViYWNrKGZvbGlvKTsKLQkJcmV0dXJuIC1FSU87Ci0JfQotCWlm
ICghTklub0F0dHIobmkpKQotCQliYXNlX25pID0gbmk7Ci0JZWxzZQotCQliYXNlX25pID0gbmkt
PmV4dC5iYXNlX250ZnNfaW5vOwotCS8qIE1hcCwgcGluLCBhbmQgbG9jayB0aGUgbWZ0IHJlY29y
ZC4gKi8KLQltID0gbWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0JaWYgKElTX0VSUihtKSkgewot
CQllcnIgPSBQVFJfRVJSKG0pOwotCQltID0gTlVMTDsKLQkJY3R4ID0gTlVMTDsKLQkJZ290byBl
cnJfb3V0OwotCX0KLQkvKgotCSAqIElmIGEgcGFyYWxsZWwgd3JpdGUgbWFkZSB0aGUgYXR0cmli
dXRlIG5vbi1yZXNpZGVudCwgZHJvcCB0aGUgbWZ0Ci0JICogcmVjb3JkIGFuZCByZXRyeSB0aGUg
d3JpdGVwYWdlLgotCSAqLwotCWlmICh1bmxpa2VseShOSW5vTm9uUmVzaWRlbnQobmkpKSkgewot
CQl1bm1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCQlnb3RvIHJldHJ5X3dyaXRlcGFnZTsKLQl9
Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KGJhc2VfbmksIG0pOwotCWlmICh1bmxp
a2VseSghY3R4KSkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWVy
ciA9IG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0J
CQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkK
LQkJZ290byBlcnJfb3V0OwotCS8qCi0JICogS2VlcCB0aGUgVk0gaGFwcHkuICBUaGlzIG11c3Qg
YmUgZG9uZSBvdGhlcndpc2UKLQkgKiBQQUdFQ0FDSEVfVEFHX0RJUlRZIHJlbWFpbnMgc2V0IGV2
ZW4gdGhvdWdoIHRoZSBmb2xpbyBpcyBjbGVhbi4KLQkgKi8KLQlCVUdfT04oZm9saW9fdGVzdF93
cml0ZWJhY2soZm9saW8pKTsKLQlmb2xpb19zdGFydF93cml0ZWJhY2soZm9saW8pOwotCWZvbGlv
X3VubG9jayhmb2xpbyk7Ci0JYXR0cl9sZW4gPSBsZTMyX3RvX2NwdShjdHgtPmF0dHItPmRhdGEu
cmVzaWRlbnQudmFsdWVfbGVuZ3RoKTsKLQlpX3NpemUgPSBpX3NpemVfcmVhZCh2aSk7Ci0JaWYg
KHVubGlrZWx5KGF0dHJfbGVuID4gaV9zaXplKSkgewotCQkvKiBSYWNlIHdpdGggc2hyaW5raW5n
IHRydW5jYXRlIG9yIGEgZmFpbGVkIHRydW5jYXRlLiAqLwotCQlhdHRyX2xlbiA9IGlfc2l6ZTsK
LQkJLyoKLQkJICogSWYgdGhlIHRydW5jYXRlIGZhaWxlZCwgZml4IGl0IHVwIG5vdy4gIElmIGEg
Y29uY3VycmVudAotCQkgKiB0cnVuY2F0ZSwgd2UgZG8gaXRzIGpvYiwgc28gaXQgZG9lcyBub3Qg
aGF2ZSB0byBkbyBhbnl0aGluZy4KLQkJICovCi0JCWVyciA9IG50ZnNfcmVzaWRlbnRfYXR0cl92
YWx1ZV9yZXNpemUoY3R4LT5tcmVjLCBjdHgtPmF0dHIsCi0JCQkJYXR0cl9sZW4pOwotCQkvKiBT
aHJpbmtpbmcgY2Fubm90IGZhaWwuICovCi0JCUJVR19PTihlcnIpOwotCX0KLQlhZGRyID0ga21h
cF9sb2NhbF9mb2xpbyhmb2xpbywgMCk7Ci0JLyogQ29weSB0aGUgZGF0YSBmcm9tIHRoZSBmb2xp
byB0byB0aGUgbWZ0IHJlY29yZC4gKi8KLQltZW1jcHkoKHU4KiljdHgtPmF0dHIgKwotCQkJbGUx
Nl90b19jcHUoY3R4LT5hdHRyLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCksCi0JCQlhZGRy
LCBhdHRyX2xlbik7Ci0JLyogWmVybyBvdXQgb2YgYm91bmRzIGFyZWEgaW4gdGhlIHBhZ2UgY2Fj
aGUgZm9saW8uICovCi0JbWVtc2V0KGFkZHIgKyBhdHRyX2xlbiwgMCwgZm9saW9fc2l6ZShmb2xp
bykgLSBhdHRyX2xlbik7Ci0Ja3VubWFwX2xvY2FsKGFkZHIpOwotCWZsdXNoX2RjYWNoZV9mb2xp
byhmb2xpbyk7Ci0JZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsK
LQkvKiBXZSBhcmUgZG9uZSB3aXRoIHRoZSBmb2xpby4gKi8KLQlmb2xpb19lbmRfd3JpdGViYWNr
KGZvbGlvKTsKLQkvKiBGaW5hbGx5LCBtYXJrIHRoZSBtZnQgcmVjb3JkIGRpcnR5LCBzbyBpdCBn
ZXRzIHdyaXR0ZW4gYmFjay4gKi8KLQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lu
byk7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5tYXBfbWZ0X3JlY29yZChi
YXNlX25pKTsKLQlyZXR1cm4gMDsKLWVycl9vdXQ6Ci0JaWYgKGVyciA9PSAtRU5PTUVNKSB7Ci0J
CW50ZnNfd2FybmluZyh2aS0+aV9zYiwgIkVycm9yIGFsbG9jYXRpbmcgbWVtb3J5LiBSZWRpcnR5
aW5nICIKLQkJCQkicGFnZSBzbyB3ZSB0cnkgYWdhaW4gbGF0ZXIuIik7Ci0JCS8qCi0JCSAqIFB1
dCB0aGUgZm9saW8gYmFjayBvbiBtYXBwaW5nLT5kaXJ0eV9wYWdlcywgYnV0IGxlYXZlIGl0cwot
CQkgKiBidWZmZXJzJyBkaXJ0eSBzdGF0ZSBhcy1pcy4KLQkJICovCi0JCWZvbGlvX3JlZGlydHlf
Zm9yX3dyaXRlcGFnZSh3YmMsIGZvbGlvKTsKLQkJZXJyID0gMDsKLQl9IGVsc2UgewotCQludGZz
X2Vycm9yKHZpLT5pX3NiLCAiUmVzaWRlbnQgYXR0cmlidXRlIHdyaXRlIGZhaWxlZCB3aXRoICIK
LQkJCQkiZXJyb3IgJWkuIiwgZXJyKTsKLQkJZm9saW9fc2V0X2Vycm9yKGZvbGlvKTsKLQkJTlZv
bFNldEVycm9ycyhuaS0+dm9sKTsKLQl9Ci0JZm9saW9fdW5sb2NrKGZvbGlvKTsKLQlpZiAoY3R4
KQotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQlpZiAobSkKLQkJdW5tYXBfbWZ0
X3JlY29yZChiYXNlX25pKTsKLQlyZXR1cm4gZXJyOwotfQotCi0jZW5kaWYJLyogTlRGU19SVyAq
LwotCi0vKioKLSAqIG50ZnNfYm1hcCAtIG1hcCBsb2dpY2FsIGZpbGUgYmxvY2sgdG8gcGh5c2lj
YWwgZGV2aWNlIGJsb2NrCi0gKiBAbWFwcGluZzoJYWRkcmVzcyBzcGFjZSBtYXBwaW5nIHRvIHdo
aWNoIHRoZSBibG9jayB0byBiZSBtYXBwZWQgYmVsb25ncwotICogQGJsb2NrOglsb2dpY2FsIGJs
b2NrIHRvIG1hcCB0byBpdHMgcGh5c2ljYWwgZGV2aWNlIGJsb2NrCi0gKgotICogRm9yIHJlZ3Vs
YXIsIG5vbi1yZXNpZGVudCBmaWxlcyAoaS5lLiBub3QgY29tcHJlc3NlZCBhbmQgbm90IGVuY3J5
cHRlZCksIG1hcAotICogdGhlIGxvZ2ljYWwgQGJsb2NrIGJlbG9uZ2luZyB0byB0aGUgZmlsZSBk
ZXNjcmliZWQgYnkgdGhlIGFkZHJlc3Mgc3BhY2UKLSAqIG1hcHBpbmcgQG1hcHBpbmcgdG8gaXRz
IHBoeXNpY2FsIGRldmljZSBibG9jay4KLSAqCi0gKiBUaGUgc2l6ZSBvZiB0aGUgYmxvY2sgaXMg
ZXF1YWwgdG8gdGhlIEBzX2Jsb2Nrc2l6ZSBmaWVsZCBvZiB0aGUgc3VwZXIgYmxvY2sKLSAqIG9m
IHRoZSBtb3VudGVkIGZpbGUgc3lzdGVtIHdoaWNoIGlzIGd1YXJhbnRlZWQgdG8gYmUgc21hbGxl
ciB0aGFuIG9yIGVxdWFsCi0gKiB0byB0aGUgY2x1c3RlciBzaXplIHRodXMgdGhlIGJsb2NrIGlz
IGd1YXJhbnRlZWQgdG8gZml0IGVudGlyZWx5IGluc2lkZSB0aGUKLSAqIGNsdXN0ZXIgd2hpY2gg
bWVhbnMgd2UgZG8gbm90IG5lZWQgdG8gY2FyZSBob3cgbWFueSBjb250aWd1b3VzIGJ5dGVzIGFy
ZQotICogYXZhaWxhYmxlIGFmdGVyIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGJsb2NrLgotICoKLSAq
IFJldHVybiB0aGUgcGh5c2ljYWwgZGV2aWNlIGJsb2NrIGlmIHRoZSBtYXBwaW5nIHN1Y2NlZWRl
ZCBvciAwIGlmIHRoZSBibG9jawotICogaXMgc3BhcnNlIG9yIHRoZXJlIHdhcyBhbiBlcnJvci4K
LSAqCi0gKiBOb3RlOiBUaGlzIGlzIGEgcHJvYmxlbSBpZiBzb21lb25lIHRyaWVzIHRvIHJ1biBi
bWFwKCkgb24gJEJvb3Qgc3lzdGVtIGZpbGUKLSAqIGFzIHRoYXQgcmVhbGx5IGlzIGluIGJsb2Nr
IHplcm8gYnV0IHRoZXJlIGlzIG5vdGhpbmcgd2UgY2FuIGRvLiAgYm1hcCgpIGlzCi0gKiBqdXN0
IGJyb2tlbiBpbiB0aGF0IHJlc3BlY3QgKGp1c3QgbGlrZSBpdCBjYW5ub3QgZGlzdGluZ3Vpc2gg
c3BhcnNlIGZyb20KLSAqIG5vdCBhdmFpbGFibGUgb3IgZXJyb3IpLgotICovCi1zdGF0aWMgc2Vj
dG9yX3QgbnRmc19ibWFwKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCBzZWN0b3JfdCBi
bG9jaykKLXsKLQlzNjQgb2ZzLCBzaXplOwotCWxvZmZfdCBpX3NpemU7Ci0JTENOIGxjbjsKLQl1
bnNpZ25lZCBsb25nIGJsb2Nrc2l6ZSwgZmxhZ3M7Ci0JbnRmc19pbm9kZSAqbmkgPSBOVEZTX0ko
bWFwcGluZy0+aG9zdCk7Ci0JbnRmc192b2x1bWUgKnZvbCA9IG5pLT52b2w7Ci0JdW5zaWduZWQg
ZGVsdGE7Ci0JdW5zaWduZWQgY2hhciBibG9ja3NpemVfYml0cywgY2x1c3Rlcl9zaXplX3NoaWZ0
OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIG1mdF9ubyAweCVseCwgbG9naWNhbCBibG9j
ayAweCVsbHguIiwKLQkJCW5pLT5tZnRfbm8sICh1bnNpZ25lZCBsb25nIGxvbmcpYmxvY2spOwot
CWlmIChuaS0+dHlwZSAhPSBBVF9EQVRBIHx8ICFOSW5vTm9uUmVzaWRlbnQobmkpIHx8IE5Jbm9F
bmNyeXB0ZWQobmkpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkJNQVAgZG9lcyBub3QgbWFr
ZSBzZW5zZSBmb3IgJXMgIgotCQkJCSJhdHRyaWJ1dGVzLCByZXR1cm5pbmcgMC4iLAotCQkJCShu
aS0+dHlwZSAhPSBBVF9EQVRBKSA/ICJub24tZGF0YSIgOgotCQkJCSghTklub05vblJlc2lkZW50
KG5pKSA/ICJyZXNpZGVudCIgOgotCQkJCSJlbmNyeXB0ZWQiKSk7Ci0JCXJldHVybiAwOwotCX0K
LQkvKiBOb25lIG9mIHRoZXNlIGNhbiBoYXBwZW4uICovCi0JQlVHX09OKE5Jbm9Db21wcmVzc2Vk
KG5pKSk7Ci0JQlVHX09OKE5Jbm9Nc3RQcm90ZWN0ZWQobmkpKTsKLQlibG9ja3NpemUgPSB2b2wt
PnNiLT5zX2Jsb2Nrc2l6ZTsKLQlibG9ja3NpemVfYml0cyA9IHZvbC0+c2ItPnNfYmxvY2tzaXpl
X2JpdHM7Ci0Jb2ZzID0gKHM2NClibG9jayA8PCBibG9ja3NpemVfYml0czsKLQlyZWFkX2xvY2tf
aXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCXNpemUgPSBuaS0+aW5pdGlhbGl6ZWRf
c2l6ZTsKLQlpX3NpemUgPSBpX3NpemVfcmVhZChWRlNfSShuaSkpOwotCXJlYWRfdW5sb2NrX2ly
cXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkvKgotCSAqIElmIHRoZSBvZmZzZXQg
aXMgb3V0c2lkZSB0aGUgaW5pdGlhbGl6ZWQgc2l6ZSBvciB0aGUgYmxvY2sgc3RyYWRkbGVzCi0J
ICogdGhlIGluaXRpYWxpemVkIHNpemUgdGhlbiBwcmV0ZW5kIGl0IGlzIGEgaG9sZSB1bmxlc3Mg
dGhlCi0JICogaW5pdGlhbGl6ZWQgc2l6ZSBlcXVhbHMgdGhlIGZpbGUgc2l6ZS4KLQkgKi8KLQlp
ZiAodW5saWtlbHkob2ZzID49IHNpemUgfHwgKG9mcyArIGJsb2Nrc2l6ZSA+IHNpemUgJiYgc2l6
ZSA8IGlfc2l6ZSkpKQotCQlnb3RvIGhvbGU7Ci0JY2x1c3Rlcl9zaXplX3NoaWZ0ID0gdm9sLT5j
bHVzdGVyX3NpemVfYml0czsKLQlkb3duX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCWxjbiA9
IG50ZnNfYXR0cl92Y25fdG9fbGNuX25vbG9jayhuaSwgb2ZzID4+IGNsdXN0ZXJfc2l6ZV9zaGlm
dCwgZmFsc2UpOwotCXVwX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCWlmICh1bmxpa2VseShs
Y24gPCBMQ05fSE9MRSkpIHsKLQkJLyoKLQkJICogU3RlcCBkb3duIHRvIGFuIGludGVnZXIgdG8g
YXZvaWQgZ2NjIGRvaW5nIGEgbG9uZyBsb25nCi0JCSAqIGNvbXBhcmlzaW9uIGluIHRoZSBzd2l0
Y2ggd2hlbiB3ZSBrbm93IEBsY24gaXMgYmV0d2VlbgotCQkgKiBMQ05fSE9MRSBhbmQgTENOX0VJ
TyAoaS5lLiAtMSB0byAtNSkuCi0JCSAqCi0JCSAqIE90aGVyd2lzZSBvbGRlciBnY2MgKGF0IGxl
YXN0IG9uIHNvbWUgYXJjaGl0ZWN0dXJlcykgd2lsbAotCQkgKiB0cnkgdG8gdXNlIF9fY21wZGky
KCkgd2hpY2ggaXMgb2YgY291cnNlIG5vdCBhdmFpbGFibGUgaW4KLQkJICogdGhlIGtlcm5lbC4K
LQkJICovCi0JCXN3aXRjaCAoKGludClsY24pIHsKLQkJY2FzZSBMQ05fRU5PRU5UOgotCQkJLyoK
LQkJCSAqIElmIHRoZSBvZmZzZXQgaXMgb3V0IG9mIGJvdW5kcyB0aGVuIHByZXRlbmQgaXQgaXMg
YQotCQkJICogaG9sZS4KLQkJCSAqLwotCQkJZ290byBob2xlOwotCQljYXNlIExDTl9FTk9NRU06
Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJOb3QgZW5vdWdoIG1lbW9yeSB0byBjb21wbGV0ZSAi
Ci0JCQkJCSJtYXBwaW5nIGZvciBpbm9kZSAweCVseC4gICIKLQkJCQkJIlJldHVybmluZyAwLiIs
IG5pLT5tZnRfbm8pOwotCQkJYnJlYWs7Ci0JCWRlZmF1bHQ6Ci0JCQludGZzX2Vycm9yKHZvbC0+
c2IsICJGYWlsZWQgdG8gY29tcGxldGUgbWFwcGluZyBmb3IgIgotCQkJCQkiaW5vZGUgMHglbHgu
ICBSdW4gY2hrZHNrLiAgIgotCQkJCQkiUmV0dXJuaW5nIDAuIiwgbmktPm1mdF9ubyk7Ci0JCQli
cmVhazsKLQkJfQotCQlyZXR1cm4gMDsKLQl9Ci0JaWYgKGxjbiA8IDApIHsKLQkJLyogSXQgaXMg
YSBob2xlLiAqLwotaG9sZToKLQkJbnRmc19kZWJ1ZygiRG9uZSAocmV0dXJuaW5nIGhvbGUpLiIp
OwotCQlyZXR1cm4gMDsKLQl9Ci0JLyoKLQkgKiBUaGUgYmxvY2sgaXMgcmVhbGx5IGFsbG9jYXRl
ZCBhbmQgZnVsbGZpbHMgYWxsIG91ciBjcml0ZXJpYS4KLQkgKiBDb252ZXJ0IHRoZSBjbHVzdGVy
IHRvIHVuaXRzIG9mIGJsb2NrIHNpemUgYW5kIHJldHVybiB0aGUgcmVzdWx0LgotCSAqLwotCWRl
bHRhID0gb2ZzICYgdm9sLT5jbHVzdGVyX3NpemVfbWFzazsKLQlpZiAodW5saWtlbHkoc2l6ZW9m
KGJsb2NrKSA8IHNpemVvZihsY24pKSkgewotCQlibG9jayA9IGxjbiA9ICgobGNuIDw8IGNsdXN0
ZXJfc2l6ZV9zaGlmdCkgKyBkZWx0YSkgPj4KLQkJCQlibG9ja3NpemVfYml0czsKLQkJLyogSWYg
dGhlIGJsb2NrIG51bWJlciB3YXMgdHJ1bmNhdGVkIHJldHVybiAwLiAqLwotCQlpZiAodW5saWtl
bHkoYmxvY2sgIT0gbGNuKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiUGh5c2ljYWwgYmxv
Y2sgMHglbGx4IGlzIHRvbyAiCi0JCQkJCSJsYXJnZSB0byBiZSByZXR1cm5lZCwgcmV0dXJuaW5n
IDAuIiwKLQkJCQkJKGxvbmcgbG9uZylsY24pOwotCQkJcmV0dXJuIDA7Ci0JCX0KLQl9IGVsc2UK
LQkJYmxvY2sgPSAoKGxjbiA8PCBjbHVzdGVyX3NpemVfc2hpZnQpICsgZGVsdGEpID4+Ci0JCQkJ
YmxvY2tzaXplX2JpdHM7Ci0JbnRmc19kZWJ1ZygiRG9uZSAocmV0dXJuaW5nIGJsb2NrIDB4JWxs
eCkuIiwgKHVuc2lnbmVkIGxvbmcgbG9uZylsY24pOwotCXJldHVybiBibG9jazsKLX0KLQotLyoK
LSAqIG50ZnNfbm9ybWFsX2FvcHMgLSBhZGRyZXNzIHNwYWNlIG9wZXJhdGlvbnMgZm9yIG5vcm1h
bCBpbm9kZXMgYW5kIGF0dHJpYnV0ZXMKLSAqCi0gKiBOb3RlIHRoZXNlIGFyZSBub3QgdXNlZCBm
b3IgY29tcHJlc3NlZCBvciBtc3QgcHJvdGVjdGVkIGlub2RlcyBhbmQKLSAqIGF0dHJpYnV0ZXMu
Ci0gKi8KLWNvbnN0IHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMgbnRmc19ub3JtYWxf
YW9wcyA9IHsKLQkucmVhZF9mb2xpbwk9IG50ZnNfcmVhZF9mb2xpbywKLSNpZmRlZiBOVEZTX1JX
Ci0JLndyaXRlcGFnZQk9IG50ZnNfd3JpdGVwYWdlLAotCS5kaXJ0eV9mb2xpbwk9IGJsb2NrX2Rp
cnR5X2ZvbGlvLAotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQkuYm1hcAkJPSBudGZzX2JtYXAsCi0J
Lm1pZ3JhdGVfZm9saW8JPSBidWZmZXJfbWlncmF0ZV9mb2xpbywKLQkuaXNfcGFydGlhbGx5X3Vw
dG9kYXRlID0gYmxvY2tfaXNfcGFydGlhbGx5X3VwdG9kYXRlLAotCS5lcnJvcl9yZW1vdmVfZm9s
aW8gPSBnZW5lcmljX2Vycm9yX3JlbW92ZV9mb2xpbywKLX07Ci0KLS8qCi0gKiBudGZzX2NvbXBy
ZXNzZWRfYW9wcyAtIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBmb3IgY29tcHJlc3NlZCBpbm9k
ZXMKLSAqLwotY29uc3Qgc3RydWN0IGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9ucyBudGZzX2NvbXBy
ZXNzZWRfYW9wcyA9IHsKLQkucmVhZF9mb2xpbwk9IG50ZnNfcmVhZF9mb2xpbywKLSNpZmRlZiBO
VEZTX1JXCi0JLndyaXRlcGFnZQk9IG50ZnNfd3JpdGVwYWdlLAotCS5kaXJ0eV9mb2xpbwk9IGJs
b2NrX2RpcnR5X2ZvbGlvLAotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQkubWlncmF0ZV9mb2xpbwk9
IGJ1ZmZlcl9taWdyYXRlX2ZvbGlvLAotCS5pc19wYXJ0aWFsbHlfdXB0b2RhdGUgPSBibG9ja19p
c19wYXJ0aWFsbHlfdXB0b2RhdGUsCi0JLmVycm9yX3JlbW92ZV9mb2xpbyA9IGdlbmVyaWNfZXJy
b3JfcmVtb3ZlX2ZvbGlvLAotfTsKLQotLyoKLSAqIG50ZnNfbXN0X2FvcHMgLSBnZW5lcmFsIGFk
ZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBmb3IgbXN0IHByb3RlY3RlZWQgaW5vZGVzCi0gKgkJCSAg
YW5kIGF0dHJpYnV0ZXMKLSAqLwotY29uc3Qgc3RydWN0IGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9u
cyBudGZzX21zdF9hb3BzID0gewotCS5yZWFkX2ZvbGlvCT0gbnRmc19yZWFkX2ZvbGlvLAkvKiBG
aWxsIHBhZ2Ugd2l0aCBkYXRhLiAqLwotI2lmZGVmIE5URlNfUlcKLQkud3JpdGVwYWdlCT0gbnRm
c193cml0ZXBhZ2UsCS8qIFdyaXRlIGRpcnR5IHBhZ2UgdG8gZGlzay4gKi8KLQkuZGlydHlfZm9s
aW8JPSBmaWxlbWFwX2RpcnR5X2ZvbGlvLAotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQkubWlncmF0
ZV9mb2xpbwk9IGJ1ZmZlcl9taWdyYXRlX2ZvbGlvLAotCS5pc19wYXJ0aWFsbHlfdXB0b2RhdGUJ
PSBibG9ja19pc19wYXJ0aWFsbHlfdXB0b2RhdGUsCi0JLmVycm9yX3JlbW92ZV9mb2xpbyA9IGdl
bmVyaWNfZXJyb3JfcmVtb3ZlX2ZvbGlvLAotfTsKLQotI2lmZGVmIE5URlNfUlcKLQotLyoqCi0g
KiBtYXJrX250ZnNfcmVjb3JkX2RpcnR5IC0gbWFyayBhbiBudGZzIHJlY29yZCBkaXJ0eQotICog
QHBhZ2U6CXBhZ2UgY29udGFpbmluZyB0aGUgbnRmcyByZWNvcmQgdG8gbWFyayBkaXJ0eQotICog
QG9mczoJYnl0ZSBvZmZzZXQgd2l0aGluIEBwYWdlIGF0IHdoaWNoIHRoZSBudGZzIHJlY29yZCBi
ZWdpbnMKLSAqCi0gKiBTZXQgdGhlIGJ1ZmZlcnMgYW5kIHRoZSBwYWdlIGluIHdoaWNoIHRoZSBu
dGZzIHJlY29yZCBpcyBsb2NhdGVkIGRpcnR5LgotICoKLSAqIFRoZSBsYXR0ZXIgYWxzbyBtYXJr
cyB0aGUgdmZzIGlub2RlIHRoZSBudGZzIHJlY29yZCBiZWxvbmdzIHRvIGRpcnR5Ci0gKiAoSV9E
SVJUWV9QQUdFUyBvbmx5KS4KLSAqCi0gKiBJZiB0aGUgcGFnZSBkb2VzIG5vdCBoYXZlIGJ1ZmZl
cnMsIHdlIGNyZWF0ZSB0aGVtIGFuZCBzZXQgdGhlbSB1cHRvZGF0ZS4KLSAqIFRoZSBwYWdlIG1h
eSBub3QgYmUgbG9ja2VkIHdoaWNoIGlzIHdoeSB3ZSBuZWVkIHRvIGhhbmRsZSB0aGUgYnVmZmVy
cyB1bmRlcgotICogdGhlIG1hcHBpbmctPmlfcHJpdmF0ZV9sb2NrLiAgT25jZSB0aGUgYnVmZmVy
cyBhcmUgbWFya2VkIGRpcnR5IHdlIG5vIGxvbmdlcgotICogbmVlZCB0aGUgbG9jayBzaW5jZSB0
cnlfdG9fZnJlZV9idWZmZXJzKCkgZG9lcyBub3QgZnJlZSBkaXJ0eSBidWZmZXJzLgotICovCi12
b2lkIG1hcmtfbnRmc19yZWNvcmRfZGlydHkoc3RydWN0IHBhZ2UgKnBhZ2UsIGNvbnN0IHVuc2ln
bmVkIGludCBvZnMpIHsKLQlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZyA9IHBhZ2UtPm1h
cHBpbmc7Ci0JbnRmc19pbm9kZSAqbmkgPSBOVEZTX0kobWFwcGluZy0+aG9zdCk7Ci0Jc3RydWN0
IGJ1ZmZlcl9oZWFkICpiaCwgKmhlYWQsICpidWZmZXJzX3RvX2ZyZWUgPSBOVUxMOwotCXVuc2ln
bmVkIGludCBlbmQsIGJoX3NpemUsIGJoX29mczsKLQotCUJVR19PTighUGFnZVVwdG9kYXRlKHBh
Z2UpKTsKLQllbmQgPSBvZnMgKyBuaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZTsKLQliaF9zaXpl
ID0gVkZTX0kobmkpLT5pX3NiLT5zX2Jsb2Nrc2l6ZTsKLQlzcGluX2xvY2soJm1hcHBpbmctPmlf
cHJpdmF0ZV9sb2NrKTsKLQlpZiAodW5saWtlbHkoIXBhZ2VfaGFzX2J1ZmZlcnMocGFnZSkpKSB7
Ci0JCXNwaW5fdW5sb2NrKCZtYXBwaW5nLT5pX3ByaXZhdGVfbG9jayk7Ci0JCWJoID0gaGVhZCA9
IGFsbG9jX3BhZ2VfYnVmZmVycyhwYWdlLCBiaF9zaXplLCB0cnVlKTsKLQkJc3Bpbl9sb2NrKCZt
YXBwaW5nLT5pX3ByaXZhdGVfbG9jayk7Ci0JCWlmIChsaWtlbHkoIXBhZ2VfaGFzX2J1ZmZlcnMo
cGFnZSkpKSB7Ci0JCQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKnRhaWw7Ci0KLQkJCWRvIHsKLQkJCQlz
ZXRfYnVmZmVyX3VwdG9kYXRlKGJoKTsKLQkJCQl0YWlsID0gYmg7Ci0JCQkJYmggPSBiaC0+Yl90
aGlzX3BhZ2U7Ci0JCQl9IHdoaWxlIChiaCk7Ci0JCQl0YWlsLT5iX3RoaXNfcGFnZSA9IGhlYWQ7
Ci0JCQlhdHRhY2hfcGFnZV9wcml2YXRlKHBhZ2UsIGhlYWQpOwotCQl9IGVsc2UKLQkJCWJ1ZmZl
cnNfdG9fZnJlZSA9IGJoOwotCX0KLQliaCA9IGhlYWQgPSBwYWdlX2J1ZmZlcnMocGFnZSk7Ci0J
QlVHX09OKCFiaCk7Ci0JZG8gewotCQliaF9vZnMgPSBiaF9vZmZzZXQoYmgpOwotCQlpZiAoYmhf
b2ZzICsgYmhfc2l6ZSA8PSBvZnMpCi0JCQljb250aW51ZTsKLQkJaWYgKHVubGlrZWx5KGJoX29m
cyA+PSBlbmQpKQotCQkJYnJlYWs7Ci0JCXNldF9idWZmZXJfZGlydHkoYmgpOwotCX0gd2hpbGUg
KChiaCA9IGJoLT5iX3RoaXNfcGFnZSkgIT0gaGVhZCk7Ci0Jc3Bpbl91bmxvY2soJm1hcHBpbmct
PmlfcHJpdmF0ZV9sb2NrKTsKLQlmaWxlbWFwX2RpcnR5X2ZvbGlvKG1hcHBpbmcsIHBhZ2VfZm9s
aW8ocGFnZSkpOwotCWlmICh1bmxpa2VseShidWZmZXJzX3RvX2ZyZWUpKSB7Ci0JCWRvIHsKLQkJ
CWJoID0gYnVmZmVyc190b19mcmVlLT5iX3RoaXNfcGFnZTsKLQkJCWZyZWVfYnVmZmVyX2hlYWQo
YnVmZmVyc190b19mcmVlKTsKLQkJCWJ1ZmZlcnNfdG9fZnJlZSA9IGJoOwotCQl9IHdoaWxlIChi
dWZmZXJzX3RvX2ZyZWUpOwotCX0KLX0KLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KZGlmZiAtLWdp
dCBhL2ZzL250ZnMvYW9wcy5oIGIvZnMvbnRmcy9hb3BzLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDhkMDk1OGExNDljYi4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvYW9wcy5o
CisrKyAvZGV2L251bGwKQEAgLTEsODggKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBhb3BzLmggLSBEZWZpbmVzIGZvciBOVEZT
IGtlcm5lbCBhZGRyZXNzIHNwYWNlIG9wZXJhdGlvbnMgYW5kIHBhZ2UgY2FjaGUKLSAqCSAgICBo
YW5kbGluZy4gIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4KLSAqCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDEtMjAwNCBBbnRvbiBBbHRhcGFybWFrb3YKLSAqIENvcHlyaWdodCAoYykgMjAw
MiBSaWNoYXJkIFJ1c3NvbgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfQU9QU19ICi0jZGVm
aW5lIF9MSU5VWF9OVEZTX0FPUFNfSAotCi0jaW5jbHVkZSA8bGludXgvbW0uaD4KLSNpbmNsdWRl
IDxsaW51eC9oaWdobWVtLmg+Ci0jaW5jbHVkZSA8bGludXgvcGFnZW1hcC5oPgotI2luY2x1ZGUg
PGxpbnV4L2ZzLmg+Ci0KLSNpbmNsdWRlICJpbm9kZS5oIgotCi0vKioKLSAqIG50ZnNfdW5tYXBf
cGFnZSAtIHJlbGVhc2UgYSBwYWdlIHRoYXQgd2FzIG1hcHBlZCB1c2luZyBudGZzX21hcF9wYWdl
KCkKLSAqIEBwYWdlOgl0aGUgcGFnZSB0byByZWxlYXNlCi0gKgotICogVW5waW4sIHVubWFwIGFu
ZCByZWxlYXNlIGEgcGFnZSB0aGF0IHdhcyBvYnRhaW5lZCBmcm9tIG50ZnNfbWFwX3BhZ2UoKS4K
LSAqLwotc3RhdGljIGlubGluZSB2b2lkIG50ZnNfdW5tYXBfcGFnZShzdHJ1Y3QgcGFnZSAqcGFn
ZSkKLXsKLQlrdW5tYXAocGFnZSk7Ci0JcHV0X3BhZ2UocGFnZSk7Ci19Ci0KLS8qKgotICogbnRm
c19tYXBfcGFnZSAtIG1hcCBhIHBhZ2UgaW50byBhY2Nlc3NpYmxlIG1lbW9yeSwgcmVhZGluZyBp
dCBpZiBuZWNlc3NhcnkKLSAqIEBtYXBwaW5nOglhZGRyZXNzIHNwYWNlIGZvciB3aGljaCB0byBv
YnRhaW4gdGhlIHBhZ2UKLSAqIEBpbmRleDoJaW5kZXggaW50byB0aGUgcGFnZSBjYWNoZSBmb3Ig
QG1hcHBpbmcgb2YgdGhlIHBhZ2UgdG8gbWFwCi0gKgotICogUmVhZCBhIHBhZ2UgZnJvbSB0aGUg
cGFnZSBjYWNoZSBvZiB0aGUgYWRkcmVzcyBzcGFjZSBAbWFwcGluZyBhdCBwb3NpdGlvbgotICog
QGluZGV4LCB3aGVyZSBAaW5kZXggaXMgaW4gdW5pdHMgb2YgUEFHRV9TSVpFLCBhbmQgbm90IGlu
IGJ5dGVzLgotICoKLSAqIElmIHRoZSBwYWdlIGlzIG5vdCBpbiBtZW1vcnkgaXQgaXMgbG9hZGVk
IGZyb20gZGlzayBmaXJzdCB1c2luZyB0aGUKLSAqIHJlYWRfZm9saW8gbWV0aG9kIGRlZmluZWQg
aW4gdGhlIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBvZiBAbWFwcGluZwotICogYW5kIHRoZSBw
YWdlIGlzIGFkZGVkIHRvIHRoZSBwYWdlIGNhY2hlIG9mIEBtYXBwaW5nIGluIHRoZSBwcm9jZXNz
LgotICoKLSAqIElmIHRoZSBwYWdlIGJlbG9uZ3MgdG8gYW4gbXN0IHByb3RlY3RlZCBhdHRyaWJ1
dGUgYW5kIGl0IGlzIG1hcmtlZCBhcyBzdWNoCi0gKiBpbiBpdHMgbnRmcyBpbm9kZSAoTklub01z
dFByb3RlY3RlZCgpKSB0aGUgbXN0IGZpeHVwcyBhcmUgYXBwbGllZCBidXQgbm8KLSAqIGVycm9y
IGNoZWNraW5nIGlzIHBlcmZvcm1lZC4gIFRoaXMgbWVhbnMgdGhlIGNhbGxlciBoYXMgdG8gdmVy
aWZ5IHdoZXRoZXIKLSAqIHRoZSBudGZzIHJlY29yZChzKSBjb250YWluZWQgaW4gdGhlIHBhZ2Ug
YXJlIHZhbGlkIG9yIG5vdCB1c2luZyBvbmUgb2YgdGhlCi0gKiBudGZzX2lzX1hYWFhfcmVjb3Jk
eyxwfSgpIG1hY3Jvcywgd2hlcmUgWFhYWCBpcyB0aGUgcmVjb3JkIHR5cGUgeW91IGFyZQotICog
ZXhwZWN0aW5nIHRvIHNlZS4gIChGb3IgZGV0YWlscyBvZiB0aGUgbWFjcm9zLCBzZWUgZnMvbnRm
cy9sYXlvdXQuaC4pCi0gKgotICogSWYgdGhlIHBhZ2UgaXMgaW4gaGlnaCBtZW1vcnkgaXQgaXMg
bWFwcGVkIGludG8gbWVtb3J5IGRpcmVjdGx5IGFkZHJlc3NpYmxlCi0gKiBieSB0aGUga2VybmVs
LgotICoKLSAqIEZpbmFsbHkgdGhlIHBhZ2UgY291bnQgaXMgaW5jcmVtZW50ZWQsIHRodXMgcGlu
bmluZyB0aGUgcGFnZSBpbnRvIHBsYWNlLgotICoKLSAqIFRoZSBhYm92ZSBtZWFucyB0aGF0IHBh
Z2VfYWRkcmVzcyhwYWdlKSBjYW4gYmUgdXNlZCBvbiBhbGwgcGFnZXMgb2J0YWluZWQKLSAqIHdp
dGggbnRmc19tYXBfcGFnZSgpIHRvIGdldCB0aGUga2VybmVsIHZpcnR1YWwgYWRkcmVzcyBvZiB0
aGUgcGFnZS4KLSAqCi0gKiBXaGVuIGZpbmlzaGVkIHdpdGggdGhlIHBhZ2UsIHRoZSBjYWxsZXIg
aGFzIHRvIGNhbGwgbnRmc191bm1hcF9wYWdlKCkgdG8KLSAqIHVucGluLCB1bm1hcCBhbmQgcmVs
ZWFzZSB0aGUgcGFnZS4KLSAqCi0gKiBOb3RlIHRoaXMgZG9lcyBub3QgZ3JhbnQgZXhjbHVzaXZl
IGFjY2Vzcy4gSWYgc3VjaCBpcyBkZXNpcmVkLCB0aGUgY2FsbGVyCi0gKiBtdXN0IHByb3ZpZGUg
aXQgaW5kZXBlbmRlbnRseSBvZiB0aGUgbnRmc197dW59bWFwX3BhZ2UoKSBjYWxscyBieSB1c2lu
ZwotICogYSB7cndffXNlbWFwaG9yZSBvciBvdGhlciBtZWFucyBvZiBzZXJpYWxpemF0aW9uLiBB
IHNwaW4gbG9jayBjYW5ub3QgYmUKLSAqIHVzZWQgYXMgbnRmc19tYXBfcGFnZSgpIGNhbiBibG9j
ay4KLSAqCi0gKiBUaGUgdW5sb2NrZWQgYW5kIHVwdG9kYXRlIHBhZ2UgaXMgcmV0dXJuZWQgb24g
c3VjY2VzcyBvciBhbiBlbmNvZGVkIGVycm9yCi0gKiBvbiBmYWlsdXJlLiBDYWxsZXIgaGFzIHRv
IHRlc3QgZm9yIGVycm9yIHVzaW5nIHRoZSBJU19FUlIoKSBtYWNybyBvbiB0aGUKLSAqIHJldHVy
biB2YWx1ZS4gSWYgdGhhdCBldmFsdWF0ZXMgdG8gJ3RydWUnLCB0aGUgbmVnYXRpdmUgZXJyb3Ig
Y29kZSBjYW4gYmUKLSAqIG9idGFpbmVkIHVzaW5nIFBUUl9FUlIoKSBvbiB0aGUgcmV0dXJuIHZh
bHVlIG9mIG50ZnNfbWFwX3BhZ2UoKS4KLSAqLwotc3RhdGljIGlubGluZSBzdHJ1Y3QgcGFnZSAq
bnRmc19tYXBfcGFnZShzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKLQkJdW5zaWduZWQg
bG9uZyBpbmRleCkKLXsKLQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IHJlYWRfbWFwcGluZ19wYWdlKG1h
cHBpbmcsIGluZGV4LCBOVUxMKTsKLQotCWlmICghSVNfRVJSKHBhZ2UpKQotCQlrbWFwKHBhZ2Up
OwotCXJldHVybiBwYWdlOwotfQotCi0jaWZkZWYgTlRGU19SVwotCi1leHRlcm4gdm9pZCBtYXJr
X250ZnNfcmVjb3JkX2RpcnR5KHN0cnVjdCBwYWdlICpwYWdlLCBjb25zdCB1bnNpZ25lZCBpbnQg
b2ZzKTsKLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQotI2VuZGlmIC8qIF9MSU5VWF9OVEZTX0FP
UFNfSCAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9hdHRyaWIuYyBiL2ZzL250ZnMvYXR0cmliLmMK
ZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGY3OTQwOGY5MTI3YS4uMDAwMDAwMDAwMDAw
Ci0tLSBhL2ZzL250ZnMvYXR0cmliLmMKKysrIC9kZXYvbnVsbApAQCAtMSwyNjI0ICswLDAgQEAK
LS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyCi0vKgotICogYXR0
cmliLmMgLSBOVEZTIGF0dHJpYnV0ZSBvcGVyYXRpb25zLiAgUGFydCBvZiB0aGUgTGludXgtTlRG
UyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMS0yMDEyIEFudG9uIEFsdGFwYXJt
YWtvdiBhbmQgVHV4ZXJhIEluYy4KLSAqIENvcHlyaWdodCAoYykgMjAwMiBSaWNoYXJkIFJ1c3Nv
bgotICovCi0KLSNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgotI2luY2x1ZGUgPGxpbnV4
L3NjaGVkLmg+Ci0jaW5jbHVkZSA8bGludXgvc2xhYi5oPgotI2luY2x1ZGUgPGxpbnV4L3N3YXAu
aD4KLSNpbmNsdWRlIDxsaW51eC93cml0ZWJhY2suaD4KLQotI2luY2x1ZGUgImF0dHJpYi5oIgot
I2luY2x1ZGUgImRlYnVnLmgiCi0jaW5jbHVkZSAibGF5b3V0LmgiCi0jaW5jbHVkZSAibGNuYWxs
b2MuaCIKLSNpbmNsdWRlICJtYWxsb2MuaCIKLSNpbmNsdWRlICJtZnQuaCIKLSNpbmNsdWRlICJu
dGZzLmgiCi0jaW5jbHVkZSAidHlwZXMuaCIKLQotLyoqCi0gKiBudGZzX21hcF9ydW5saXN0X25v
bG9jayAtIG1hcCAoYSBwYXJ0IG9mKSBhIHJ1bmxpc3Qgb2YgYW4gbnRmcyBpbm9kZQotICogQG5p
OgkJbnRmcyBpbm9kZSBmb3Igd2hpY2ggdG8gbWFwIChwYXJ0IG9mKSBhIHJ1bmxpc3QKLSAqIEB2
Y246CW1hcCBydW5saXN0IHBhcnQgY29udGFpbmluZyB0aGlzIHZjbgotICogQGN0eDoJYWN0aXZl
IGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dCBpZiBwcmVzZW50IG9yIE5VTEwgaWYgbm90Ci0gKgot
ICogTWFwIHRoZSBwYXJ0IG9mIGEgcnVubGlzdCBjb250YWluaW5nIHRoZSBAdmNuIG9mIHRoZSBu
dGZzIGlub2RlIEBuaS4KLSAqCi0gKiBJZiBAY3R4IGlzIHNwZWNpZmllZCwgaXQgaXMgYW4gYWN0
aXZlIHNlYXJjaCBjb250ZXh0IG9mIEBuaSBhbmQgaXRzIGJhc2UgbWZ0Ci0gKiByZWNvcmQuICBU
aGlzIGlzIG5lZWRlZCB3aGVuIG50ZnNfbWFwX3J1bmxpc3Rfbm9sb2NrKCkgZW5jb3VudGVycyB1
bm1hcHBlZAotICogcnVubGlzdCBmcmFnbWVudHMgYW5kIGFsbG93cyB0aGVpciBtYXBwaW5nLiAg
SWYgeW91IGRvIG5vdCBoYXZlIHRoZSBtZnQKLSAqIHJlY29yZCBtYXBwZWQsIHlvdSBjYW4gc3Bl
Y2lmeSBAY3R4IGFzIE5VTEwgYW5kIG50ZnNfbWFwX3J1bmxpc3Rfbm9sb2NrKCkKLSAqIHdpbGwg
cGVyZm9ybSB0aGUgbmVjZXNzYXJ5IG1hcHBpbmcgYW5kIHVubWFwcGluZy4KLSAqCi0gKiBOb3Rl
LCBudGZzX21hcF9ydW5saXN0X25vbG9jaygpIHNhdmVzIHRoZSBzdGF0ZSBvZiBAY3R4IG9uIGVu
dHJ5IGFuZAotICogcmVzdG9yZXMgaXQgYmVmb3JlIHJldHVybmluZy4gIFRodXMsIEBjdHggd2ls
bCBiZSBsZWZ0IHBvaW50aW5nIHRvIHRoZSBzYW1lCi0gKiBhdHRyaWJ1dGUgb24gcmV0dXJuIGFz
IG9uIGVudHJ5LiAgSG93ZXZlciwgdGhlIGFjdHVhbCBwb2ludGVycyBpbiBAY3R4IG1heQotICog
cG9pbnQgdG8gZGlmZmVyZW50IG1lbW9yeSBsb2NhdGlvbnMgb24gcmV0dXJuLCBzbyB5b3UgbXVz
dCByZW1lbWJlciB0byByZXNldAotICogYW55IGNhY2hlZCBwb2ludGVycyBmcm9tIHRoZSBAY3R4
LCBpLmUuIGFmdGVyIHRoZSBjYWxsIHRvCi0gKiBudGZzX21hcF9ydW5saXN0X25vbG9jaygpLCB5
b3Ugd2lsbCBwcm9iYWJseSB3YW50IHRvIGRvOgotICoJbSA9IGN0eC0+bXJlYzsKLSAqCWEgPSBj
dHgtPmF0dHI7Ci0gKiBBc3N1bWluZyB5b3UgY2FjaGUgY3R4LT5hdHRyIGluIGEgdmFyaWFibGUg
QGEgb2YgdHlwZSBBVFRSX1JFQ09SRCAqIGFuZCB0aGF0Ci0gKiB5b3UgY2FjaGUgY3R4LT5tcmVj
IGluIGEgdmFyaWFibGUgQG0gb2YgdHlwZSBNRlRfUkVDT1JEICouCi0gKgotICogUmV0dXJuIDAg
b24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLiAgVGhlcmUgaXMgb25lIHNwZWNpYWwgZXJy
b3IgY29kZQotICogd2hpY2ggaXMgbm90IGFuIGVycm9yIGFzIHN1Y2guICBUaGlzIGlzIC1FTk9F
TlQuICBJdCBtZWFucyB0aGF0IEB2Y24gaXMgb3V0Ci0gKiBvZiBib3VuZHMgb2YgdGhlIHJ1bmxp
c3QuCi0gKgotICogTm90ZSB0aGUgcnVubGlzdCBjYW4gYmUgTlVMTCBhZnRlciB0aGlzIGZ1bmN0
aW9uIHJldHVybnMgaWYgQHZjbiBpcyB6ZXJvIGFuZAotICogdGhlIGF0dHJpYnV0ZSBoYXMgemVy
byBhbGxvY2F0ZWQgc2l6ZSwgaS5lLiB0aGVyZSBzaW1wbHkgaXMgbm8gcnVubGlzdC4KLSAqCi0g
KiBXQVJOSU5HOiBJZiBAY3R4IGlzIHN1cHBsaWVkLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgc3Vj
Y2VzcyBvciBmYWlsdXJlIGlzCi0gKgkgICAgcmV0dXJuZWQsIHlvdSBuZWVkIHRvIGNoZWNrIElT
X0VSUihAY3R4LT5tcmVjKSBhbmQgaWYgJ3RydWUnIHRoZSBAY3R4Ci0gKgkgICAgaXMgbm8gbG9u
Z2VyIHZhbGlkLCBpLmUuIHlvdSBuZWVkIHRvIGVpdGhlciBjYWxsCi0gKgkgICAgbnRmc19hdHRy
X3JlaW5pdF9zZWFyY2hfY3R4KCkgb3IgbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KCkgb24gaXQu
Ci0gKgkgICAgSW4gdGhhdCBjYXNlIFBUUl9FUlIoQGN0eC0+bXJlYykgd2lsbCBnaXZlIHlvdSB0
aGUgZXJyb3IgY29kZSBmb3IKLSAqCSAgICB3aHkgdGhlIG1hcHBpbmcgb2YgdGhlIG9sZCBpbm9k
ZSBmYWlsZWQuCi0gKgotICogTG9ja2luZzogLSBUaGUgcnVubGlzdCBkZXNjcmliZWQgYnkgQG5p
IG11c3QgYmUgbG9ja2VkIGZvciB3cml0aW5nIG9uIGVudHJ5Ci0gKgkgICAgICBhbmQgaXMgbG9j
a2VkIG9uIHJldHVybi4gIE5vdGUgdGhlIHJ1bmxpc3Qgd2lsbCBiZSBtb2RpZmllZC4KLSAqCSAg
ICAtIElmIEBjdHggaXMgTlVMTCwgdGhlIGJhc2UgbWZ0IHJlY29yZCBvZiBAbmkgbXVzdCBub3Qg
YmUgbWFwcGVkIG9uCi0gKgkgICAgICBlbnRyeSBhbmQgaXQgd2lsbCBiZSBsZWZ0IHVubWFwcGVk
IG9uIHJldHVybi4KLSAqCSAgICAtIElmIEBjdHggaXMgbm90IE5VTEwsIHRoZSBiYXNlIG1mdCBy
ZWNvcmQgbXVzdCBiZSBtYXBwZWQgb24gZW50cnkKLSAqCSAgICAgIGFuZCBpdCB3aWxsIGJlIGxl
ZnQgbWFwcGVkIG9uIHJldHVybi4KLSAqLwotaW50IG50ZnNfbWFwX3J1bmxpc3Rfbm9sb2NrKG50
ZnNfaW5vZGUgKm5pLCBWQ04gdmNuLCBudGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4KQotewotCVZD
TiBlbmRfdmNuOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JbnRmc19pbm9kZSAqYmFzZV9uaTsK
LQlNRlRfUkVDT1JEICptOwotCUFUVFJfUkVDT1JEICphOwotCXJ1bmxpc3RfZWxlbWVudCAqcmw7
Ci0Jc3RydWN0IHBhZ2UgKnB1dF90aGlzX3BhZ2UgPSBOVUxMOwotCWludCBlcnIgPSAwOwotCWJv
b2wgY3R4X2lzX3RlbXBvcmFyeSwgY3R4X25lZWRzX3Jlc2V0OwotCW50ZnNfYXR0cl9zZWFyY2hf
Y3R4IG9sZF9jdHggPSB7IE5VTEwsIH07Ci0KLQludGZzX2RlYnVnKCJNYXBwaW5nIHJ1bmxpc3Qg
cGFydCBjb250YWluaW5nIHZjbiAweCVsbHguIiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdmNu
KTsKLQlpZiAoIU5Jbm9BdHRyKG5pKSkKLQkJYmFzZV9uaSA9IG5pOwotCWVsc2UKLQkJYmFzZV9u
aSA9IG5pLT5leHQuYmFzZV9udGZzX2lubzsKLQlpZiAoIWN0eCkgewotCQljdHhfaXNfdGVtcG9y
YXJ5ID0gY3R4X25lZWRzX3Jlc2V0ID0gdHJ1ZTsKLQkJbSA9IG1hcF9tZnRfcmVjb3JkKGJhc2Vf
bmkpOwotCQlpZiAoSVNfRVJSKG0pKQotCQkJcmV0dXJuIFBUUl9FUlIobSk7Ci0JCWN0eCA9IG50
ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChiYXNlX25pLCBtKTsKLQkJaWYgKHVubGlrZWx5KCFjdHgp
KSB7Ci0JCQllcnIgPSAtRU5PTUVNOwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0JfSBlbHNlIHsK
LQkJVkNOIGFsbG9jYXRlZF9zaXplX3ZjbjsKLQotCQlCVUdfT04oSVNfRVJSKGN0eC0+bXJlYykp
OwotCQlhID0gY3R4LT5hdHRyOwotCQlCVUdfT04oIWEtPm5vbl9yZXNpZGVudCk7Ci0JCWN0eF9p
c190ZW1wb3JhcnkgPSBmYWxzZTsKLQkJZW5kX3ZjbiA9IHNsZTY0X3RvX2NwdShhLT5kYXRhLm5v
bl9yZXNpZGVudC5oaWdoZXN0X3Zjbik7Ci0JCXJlYWRfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9s
b2NrLCBmbGFncyk7Ci0JCWFsbG9jYXRlZF9zaXplX3ZjbiA9IG5pLT5hbGxvY2F0ZWRfc2l6ZSA+
PgotCQkJCW5pLT52b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzOwotCQlyZWFkX3VubG9ja19pcnFyZXN0
b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCWlmICghYS0+ZGF0YS5ub25fcmVzaWRlbnQu
bG93ZXN0X3ZjbiAmJiBlbmRfdmNuIDw9IDApCi0JCQllbmRfdmNuID0gYWxsb2NhdGVkX3NpemVf
dmNuIC0gMTsKLQkJLyoKLQkJICogSWYgd2UgYWxyZWFkeSBoYXZlIHRoZSBhdHRyaWJ1dGUgZXh0
ZW50IGNvbnRhaW5pbmcgQHZjbiBpbgotCQkgKiBAY3R4LCBubyBuZWVkIHRvIGxvb2sgaXQgdXAg
YWdhaW4uICBXZSBzbGlnaHRseSBjaGVhdCBpbgotCQkgKiB0aGF0IGlmIHZjbiBleGNlZWRzIHRo
ZSBhbGxvY2F0ZWQgc2l6ZSwgd2Ugd2lsbCByZWZ1c2UgdG8KLQkJICogbWFwIHRoZSBydW5saXN0
IGJlbG93LCBzbyB0aGVyZSBpcyBkZWZpbml0ZWx5IG5vIG5lZWQgdG8gZ2V0Ci0JCSAqIHRoZSBy
aWdodCBhdHRyaWJ1dGUgZXh0ZW50LgotCQkgKi8KLQkJaWYgKHZjbiA+PSBhbGxvY2F0ZWRfc2l6
ZV92Y24gfHwgKGEtPnR5cGUgPT0gbmktPnR5cGUgJiYKLQkJCQlhLT5uYW1lX2xlbmd0aCA9PSBu
aS0+bmFtZV9sZW4gJiYKLQkJCQkhbWVtY21wKCh1OCopYSArIGxlMTZfdG9fY3B1KGEtPm5hbWVf
b2Zmc2V0KSwKLQkJCQluaS0+bmFtZSwgbmktPm5hbWVfbGVuKSAmJgotCQkJCXNsZTY0X3RvX2Nw
dShhLT5kYXRhLm5vbl9yZXNpZGVudC5sb3dlc3RfdmNuKQotCQkJCTw9IHZjbiAmJiBlbmRfdmNu
ID49IHZjbikpCi0JCQljdHhfbmVlZHNfcmVzZXQgPSBmYWxzZTsKLQkJZWxzZSB7Ci0JCQkvKiBT
YXZlIHRoZSBvbGQgc2VhcmNoIGNvbnRleHQuICovCi0JCQlvbGRfY3R4ID0gKmN0eDsKLQkJCS8q
Ci0JCQkgKiBJZiB0aGUgY3VycmVudGx5IG1hcHBlZCAoZXh0ZW50KSBpbm9kZSBpcyBub3QgdGhl
Ci0JCQkgKiBiYXNlIGlub2RlIHdlIHdpbGwgdW5tYXAgaXQgd2hlbiB3ZSByZWluaXRpYWxpemUg
dGhlCi0JCQkgKiBzZWFyY2ggY29udGV4dCB3aGljaCBtZWFucyB3ZSBuZWVkIHRvIGdldCBhCi0J
CQkgKiByZWZlcmVuY2UgdG8gdGhlIHBhZ2UgY29udGFpbmluZyB0aGUgbWFwcGVkIG1mdAotCQkJ
ICogcmVjb3JkIHNvIHdlIGRvIG5vdCBhY2NpZGVudGFsbHkgZHJvcCBjaGFuZ2VzIHRvIHRoZQot
CQkJICogbWZ0IHJlY29yZCB3aGVuIGl0IGhhcyBub3QgYmVlbiBtYXJrZWQgZGlydHkgeWV0Lgot
CQkJICovCi0JCQlpZiAob2xkX2N0eC5iYXNlX250ZnNfaW5vICYmIG9sZF9jdHgubnRmc19pbm8g
IT0KLQkJCQkJb2xkX2N0eC5iYXNlX250ZnNfaW5vKSB7Ci0JCQkJcHV0X3RoaXNfcGFnZSA9IG9s
ZF9jdHgubnRmc19pbm8tPnBhZ2U7Ci0JCQkJZ2V0X3BhZ2UocHV0X3RoaXNfcGFnZSk7Ci0JCQl9
Ci0JCQkvKgotCQkJICogUmVpbml0aWFsaXplIHRoZSBzZWFyY2ggY29udGV4dCBzbyB3ZSBjYW4g
bG9va3VwIHRoZQotCQkJICogbmVlZGVkIGF0dHJpYnV0ZSBleHRlbnQuCi0JCQkgKi8KLQkJCW50
ZnNfYXR0cl9yZWluaXRfc2VhcmNoX2N0eChjdHgpOwotCQkJY3R4X25lZWRzX3Jlc2V0ID0gdHJ1
ZTsKLQkJfQotCX0KLQlpZiAoY3R4X25lZWRzX3Jlc2V0KSB7Ci0JCWVyciA9IG50ZnNfYXR0cl9s
b29rdXAobmktPnR5cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0JCQkJQ0FTRV9TRU5TSVRJ
VkUsIHZjbiwgTlVMTCwgMCwgY3R4KTsKLQkJaWYgKHVubGlrZWx5KGVycikpIHsKLQkJCWlmIChl
cnIgPT0gLUVOT0VOVCkKLQkJCQllcnIgPSAtRUlPOwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0J
CUJVR19PTighY3R4LT5hdHRyLT5ub25fcmVzaWRlbnQpOwotCX0KLQlhID0gY3R4LT5hdHRyOwot
CS8qCi0JICogT25seSBkZWNvbXByZXNzIHRoZSBtYXBwaW5nIHBhaXJzIGlmIEB2Y24gaXMgaW5z
aWRlIGl0LiAgT3RoZXJ3aXNlCi0JICogd2UgZ2V0IGludG8gcHJvYmxlbXMgd2hlbiB3ZSB0cnkg
dG8gbWFwIGFuIG91dCBvZiBib3VuZHMgdmNuIGJlY2F1c2UKLQkgKiB3ZSB0aGVuIHRyeSB0byBt
YXAgdGhlIGFscmVhZHkgbWFwcGVkIHJ1bmxpc3QgZnJhZ21lbnQgYW5kCi0JICogbnRmc19tYXBw
aW5nX3BhaXJzX2RlY29tcHJlc3MoKSBmYWlscy4KLQkgKi8KLQllbmRfdmNuID0gc2xlNjRfdG9f
Y3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuKSArIDE7Ci0JaWYgKHVubGlrZWx5
KHZjbiAmJiB2Y24gPj0gZW5kX3ZjbikpIHsKLQkJZXJyID0gLUVOT0VOVDsKLQkJZ290byBlcnJf
b3V0OwotCX0KLQlybCA9IG50ZnNfbWFwcGluZ19wYWlyc19kZWNvbXByZXNzKG5pLT52b2wsIGEs
IG5pLT5ydW5saXN0LnJsKTsKLQlpZiAoSVNfRVJSKHJsKSkKLQkJZXJyID0gUFRSX0VSUihybCk7
Ci0JZWxzZQotCQluaS0+cnVubGlzdC5ybCA9IHJsOwotZXJyX291dDoKLQlpZiAoY3R4X2lzX3Rl
bXBvcmFyeSkgewotCQlpZiAobGlrZWx5KGN0eCkpCi0JCQludGZzX2F0dHJfcHV0X3NlYXJjaF9j
dHgoY3R4KTsKLQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQl9IGVsc2UgaWYgKGN0eF9u
ZWVkc19yZXNldCkgewotCQkvKgotCQkgKiBJZiB0aGVyZSBpcyBubyBhdHRyaWJ1dGUgbGlzdCwg
cmVzdG9yaW5nIHRoZSBzZWFyY2ggY29udGV4dAotCQkgKiBpcyBhY2NvbXBsaXNoZWQgc2ltcGx5
IGJ5IGNvcHlpbmcgdGhlIHNhdmVkIGNvbnRleHQgYmFjayBvdmVyCi0JCSAqIHRoZSBjYWxsZXIg
c3VwcGxpZWQgY29udGV4dC4gIElmIHRoZXJlIGlzIGFuIGF0dHJpYnV0ZSBsaXN0LAotCQkgKiB0
aGluZ3MgYXJlIG1vcmUgY29tcGxpY2F0ZWQgYXMgd2UgbmVlZCB0byBkZWFsIHdpdGggbWFwcGlu
ZwotCQkgKiBvZiBtZnQgcmVjb3JkcyBhbmQgcmVzdWx0aW5nIHBvdGVudGlhbCBjaGFuZ2VzIGlu
IHBvaW50ZXJzLgotCQkgKi8KLQkJaWYgKE5Jbm9BdHRyTGlzdChiYXNlX25pKSkgewotCQkJLyoK
LQkJCSAqIElmIHRoZSBjdXJyZW50bHkgbWFwcGVkIChleHRlbnQpIGlub2RlIGlzIG5vdCB0aGUK
LQkJCSAqIG9uZSB3ZSBoYWQgYmVmb3JlLCB3ZSBuZWVkIHRvIHVubWFwIGl0IGFuZCBtYXAgdGhl
Ci0JCQkgKiBvbGQgb25lLgotCQkJICovCi0JCQlpZiAoY3R4LT5udGZzX2lubyAhPSBvbGRfY3R4
Lm50ZnNfaW5vKSB7Ci0JCQkJLyoKLQkJCQkgKiBJZiB0aGUgY3VycmVudGx5IG1hcHBlZCBpbm9k
ZSBpcyBub3QgdGhlCi0JCQkJICogYmFzZSBpbm9kZSwgdW5tYXAgaXQuCi0JCQkJICovCi0JCQkJ
aWYgKGN0eC0+YmFzZV9udGZzX2lubyAmJiBjdHgtPm50ZnNfaW5vICE9Ci0JCQkJCQljdHgtPmJh
c2VfbnRmc19pbm8pIHsKLQkJCQkJdW5tYXBfZXh0ZW50X21mdF9yZWNvcmQoY3R4LT5udGZzX2lu
byk7Ci0JCQkJCWN0eC0+bXJlYyA9IGN0eC0+YmFzZV9tcmVjOwotCQkJCQlCVUdfT04oIWN0eC0+
bXJlYyk7Ci0JCQkJfQotCQkJCS8qCi0JCQkJICogSWYgdGhlIG9sZCBtYXBwZWQgaW5vZGUgaXMg
bm90IHRoZSBiYXNlCi0JCQkJICogaW5vZGUsIG1hcCBpdC4KLQkJCQkgKi8KLQkJCQlpZiAob2xk
X2N0eC5iYXNlX250ZnNfaW5vICYmCi0JCQkJCQlvbGRfY3R4Lm50ZnNfaW5vICE9Ci0JCQkJCQlv
bGRfY3R4LmJhc2VfbnRmc19pbm8pIHsKLXJldHJ5X21hcDoKLQkJCQkJY3R4LT5tcmVjID0gbWFw
X21mdF9yZWNvcmQoCi0JCQkJCQkJb2xkX2N0eC5udGZzX2lubyk7Ci0JCQkJCS8qCi0JCQkJCSAq
IFNvbWV0aGluZyBiYWQgaGFzIGhhcHBlbmVkLiAgSWYgb3V0Ci0JCQkJCSAqIG9mIG1lbW9yeSBy
ZXRyeSB0aWxsIGl0IHN1Y2NlZWRzLgotCQkJCQkgKiBBbnkgb3RoZXIgZXJyb3JzIGFyZSBmYXRh
bCBhbmQgd2UKLQkJCQkJICogcmV0dXJuIHRoZSBlcnJvciBjb2RlIGluIGN0eC0+bXJlYy4KLQkJ
CQkJICogTGV0IHRoZSBjYWxsZXIgZGVhbCB3aXRoIGl0Li4uICBXZQotCQkJCQkgKiBqdXN0IG5l
ZWQgdG8gZnVkZ2UgdGhpbmdzIHNvIHRoZQotCQkJCQkgKiBjYWxsZXIgY2FuIHJlaW5pdCBhbmQv
b3IgcHV0IHRoZQotCQkJCQkgKiBzZWFyY2ggY29udGV4dCBzYWZlbHkuCi0JCQkJCSAqLwotCQkJ
CQlpZiAoSVNfRVJSKGN0eC0+bXJlYykpIHsKLQkJCQkJCWlmIChQVFJfRVJSKGN0eC0+bXJlYykg
PT0KLQkJCQkJCQkJLUVOT01FTSkgewotCQkJCQkJCXNjaGVkdWxlKCk7Ci0JCQkJCQkJZ290byBy
ZXRyeV9tYXA7Ci0JCQkJCQl9IGVsc2UKLQkJCQkJCQlvbGRfY3R4Lm50ZnNfaW5vID0KLQkJCQkJ
CQkJb2xkX2N0eC4KLQkJCQkJCQkJYmFzZV9udGZzX2lubzsKLQkJCQkJfQotCQkJCX0KLQkJCX0K
LQkJCS8qIFVwZGF0ZSB0aGUgY2hhbmdlZCBwb2ludGVycyBpbiB0aGUgc2F2ZWQgY29udGV4dC4g
Ki8KLQkJCWlmIChjdHgtPm1yZWMgIT0gb2xkX2N0eC5tcmVjKSB7Ci0JCQkJaWYgKCFJU19FUlIo
Y3R4LT5tcmVjKSkKLQkJCQkJb2xkX2N0eC5hdHRyID0gKEFUVFJfUkVDT1JEKikoCi0JCQkJCQkJ
KHU4KiljdHgtPm1yZWMgKwotCQkJCQkJCSgodTgqKW9sZF9jdHguYXR0ciAtCi0JCQkJCQkJKHU4
KilvbGRfY3R4Lm1yZWMpKTsKLQkJCQlvbGRfY3R4Lm1yZWMgPSBjdHgtPm1yZWM7Ci0JCQl9Ci0J
CX0KLQkJLyogUmVzdG9yZSB0aGUgc2VhcmNoIGNvbnRleHQgdG8gdGhlIHNhdmVkIG9uZS4gKi8K
LQkJKmN0eCA9IG9sZF9jdHg7Ci0JCS8qCi0JCSAqIFdlIGRyb3AgdGhlIHJlZmVyZW5jZSBvbiB0
aGUgcGFnZSB3ZSB0b29rIGVhcmxpZXIuICBJbiB0aGUKLQkJICogY2FzZSB0aGF0IElTX0VSUihj
dHgtPm1yZWMpIGlzIHRydWUgdGhpcyBtZWFucyB3ZSBtaWdodCBsb3NlCi0JCSAqIHNvbWUgY2hh
bmdlcyB0byB0aGUgbWZ0IHJlY29yZCB0aGF0IGhhZCBiZWVuIG1hZGUgYmV0d2VlbgotCQkgKiB0
aGUgbGFzdCB0aW1lIGl0IHdhcyBtYXJrZWQgZGlydHkvd3JpdHRlbiBvdXQgYW5kIG5vdy4gIFRo
aXMKLQkJICogYXQgdGhpcyBzdGFnZSBpcyBub3QgYSBwcm9ibGVtIGFzIHRoZSBtYXBwaW5nIGVy
cm9yIGlzIGZhdGFsCi0JCSAqIGVub3VnaCB0aGF0IHRoZSBtZnQgcmVjb3JkIGNhbm5vdCBiZSB3
cml0dGVuIG91dCBhbnl3YXkgYW5kCi0JCSAqIHRoZSBjYWxsZXIgaXMgdmVyeSBsaWtlbHkgdG8g
c2h1dGRvd24gdGhlIHdob2xlIGlub2RlCi0JCSAqIGltbWVkaWF0ZWx5IGFuZCBtYXJrIHRoZSB2
b2x1bWUgZGlydHkgZm9yIGNoa2RzayB0byBwaWNrIHVwCi0JCSAqIHRoZSBwaWVjZXMgYW55d2F5
LgotCQkgKi8KLQkJaWYgKHB1dF90aGlzX3BhZ2UpCi0JCQlwdXRfcGFnZShwdXRfdGhpc19wYWdl
KTsKLQl9Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoqCi0gKiBudGZzX21hcF9ydW5saXN0IC0gbWFw
IChhIHBhcnQgb2YpIGEgcnVubGlzdCBvZiBhbiBudGZzIGlub2RlCi0gKiBAbmk6CQludGZzIGlu
b2RlIGZvciB3aGljaCB0byBtYXAgKHBhcnQgb2YpIGEgcnVubGlzdAotICogQHZjbjoJbWFwIHJ1
bmxpc3QgcGFydCBjb250YWluaW5nIHRoaXMgdmNuCi0gKgotICogTWFwIHRoZSBwYXJ0IG9mIGEg
cnVubGlzdCBjb250YWluaW5nIHRoZSBAdmNuIG9mIHRoZSBudGZzIGlub2RlIEBuaS4KLSAqCi0g
KiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3IuICBUaGVyZSBpcyBvbmUg
c3BlY2lhbCBlcnJvciBjb2RlCi0gKiB3aGljaCBpcyBub3QgYW4gZXJyb3IgYXMgc3VjaC4gIFRo
aXMgaXMgLUVOT0VOVC4gIEl0IG1lYW5zIHRoYXQgQHZjbiBpcyBvdXQKLSAqIG9mIGJvdW5kcyBv
ZiB0aGUgcnVubGlzdC4KLSAqCi0gKiBMb2NraW5nOiAtIFRoZSBydW5saXN0IG11c3QgYmUgdW5s
b2NrZWQgb24gZW50cnkgYW5kIGlzIHVubG9ja2VkIG9uIHJldHVybi4KLSAqCSAgICAtIFRoaXMg
ZnVuY3Rpb24gdGFrZXMgdGhlIHJ1bmxpc3QgbG9jayBmb3Igd3JpdGluZyBhbmQgbWF5IG1vZGlm
eQotICoJICAgICAgdGhlIHJ1bmxpc3QuCi0gKi8KLWludCBudGZzX21hcF9ydW5saXN0KG50ZnNf
aW5vZGUgKm5pLCBWQ04gdmNuKQotewotCWludCBlcnIgPSAwOwotCi0JZG93bl93cml0ZSgmbmkt
PnJ1bmxpc3QubG9jayk7Ci0JLyogTWFrZSBzdXJlIHNvbWVvbmUgZWxzZSBkaWRuJ3QgZG8gdGhl
IHdvcmsgd2hpbGUgd2Ugd2VyZSBzbGVlcGluZy4gKi8KLQlpZiAobGlrZWx5KG50ZnNfcmxfdmNu
X3RvX2xjbihuaS0+cnVubGlzdC5ybCwgdmNuKSA8PQotCQkJTENOX1JMX05PVF9NQVBQRUQpKQot
CQllcnIgPSBudGZzX21hcF9ydW5saXN0X25vbG9jayhuaSwgdmNuLCBOVUxMKTsKLQl1cF93cml0
ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoqCi0gKiBudGZzX2F0
dHJfdmNuX3RvX2xjbl9ub2xvY2sgLSBjb252ZXJ0IGEgdmNuIGludG8gYSBsY24gZ2l2ZW4gYW4g
bnRmcyBpbm9kZQotICogQG5pOgkJCW50ZnMgaW5vZGUgb2YgdGhlIGF0dHJpYnV0ZSB3aG9zZSBy
dW5saXN0IHRvIHNlYXJjaAotICogQHZjbjoJCXZjbiB0byBjb252ZXJ0Ci0gKiBAd3JpdGVfbG9j
a2VkOgl0cnVlIGlmIHRoZSBydW5saXN0IGlzIGxvY2tlZCBmb3Igd3JpdGluZwotICoKLSAqIEZp
bmQgdGhlIHZpcnR1YWwgY2x1c3RlciBudW1iZXIgQHZjbiBpbiB0aGUgcnVubGlzdCBvZiB0aGUg
bnRmcyBhdHRyaWJ1dGUKLSAqIGRlc2NyaWJlZCBieSB0aGUgbnRmcyBpbm9kZSBAbmkgYW5kIHJl
dHVybiB0aGUgY29ycmVzcG9uZGluZyBsb2dpY2FsIGNsdXN0ZXIKLSAqIG51bWJlciAobGNuKS4K
LSAqCi0gKiBJZiB0aGUgQHZjbiBpcyBub3QgbWFwcGVkIHlldCwgdGhlIGF0dGVtcHQgaXMgbWFk
ZSB0byBtYXAgdGhlIGF0dHJpYnV0ZQotICogZXh0ZW50IGNvbnRhaW5pbmcgdGhlIEB2Y24gYW5k
IHRoZSB2Y24gdG8gbGNuIGNvbnZlcnNpb24gaXMgcmV0cmllZC4KLSAqCi0gKiBJZiBAd3JpdGVf
bG9ja2VkIGlzIHRydWUgdGhlIGNhbGxlciBoYXMgbG9ja2VkIHRoZSBydW5saXN0IGZvciB3cml0
aW5nIGFuZAotICogaWYgZmFsc2UgZm9yIHJlYWRpbmcuCi0gKgotICogU2luY2UgbGNucyBtdXN0
IGJlID49IDAsIHdlIHVzZSBuZWdhdGl2ZSByZXR1cm4gY29kZXMgd2l0aCBzcGVjaWFsIG1lYW5p
bmc6Ci0gKgotICogUmV0dXJuIGNvZGUJTWVhbmluZyAvIERlc2NyaXB0aW9uCi0gKiA9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLSAqICBMQ05fSE9MRQlIb2xlIC8g
bm90IGFsbG9jYXRlZCBvbiBkaXNrLgotICogIExDTl9FTk9FTlQJVGhlcmUgaXMgbm8gc3VjaCB2
Y24gaW4gdGhlIHJ1bmxpc3QsIGkuZS4gQHZjbiBpcyBvdXQgb2YgYm91bmRzLgotICogIExDTl9F
Tk9NRU0JTm90IGVub3VnaCBtZW1vcnkgdG8gbWFwIHJ1bmxpc3QuCi0gKiAgTENOX0VJTwlDcml0
aWNhbCBlcnJvciAocnVubGlzdC9maWxlIGlzIGNvcnJ1cHQsIGkvbyBlcnJvciwgZXRjKS4KLSAq
Ci0gKiBMb2NraW5nOiAtIFRoZSBydW5saXN0IG11c3QgYmUgbG9ja2VkIG9uIGVudHJ5IGFuZCBp
cyBsZWZ0IGxvY2tlZCBvbiByZXR1cm4uCi0gKgkgICAgLSBJZiBAd3JpdGVfbG9ja2VkIGlzICdm
YWxzZScsIGkuZS4gdGhlIHJ1bmxpc3QgaXMgbG9ja2VkIGZvciByZWFkaW5nLAotICoJICAgICAg
dGhlIGxvY2sgbWF5IGJlIGRyb3BwZWQgaW5zaWRlIHRoZSBmdW5jdGlvbiBzbyB5b3UgY2Fubm90
IHJlbHkgb24KLSAqCSAgICAgIHRoZSBydW5saXN0IHN0aWxsIGJlaW5nIHRoZSBzYW1lIHdoZW4g
dGhpcyBmdW5jdGlvbiByZXR1cm5zLgotICovCi1MQ04gbnRmc19hdHRyX3Zjbl90b19sY25fbm9s
b2NrKG50ZnNfaW5vZGUgKm5pLCBjb25zdCBWQ04gdmNuLAotCQljb25zdCBib29sIHdyaXRlX2xv
Y2tlZCkKLXsKLQlMQ04gbGNuOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JYm9vbCBpc19yZXRy
eSA9IGZhbHNlOwotCi0JQlVHX09OKCFuaSk7Ci0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIGlf
aW5vIDB4JWx4LCB2Y24gMHglbGx4LCAlc19sb2NrZWQuIiwKLQkJCW5pLT5tZnRfbm8sICh1bnNp
Z25lZCBsb25nIGxvbmcpdmNuLAotCQkJd3JpdGVfbG9ja2VkID8gIndyaXRlIiA6ICJyZWFkIik7
Ci0JQlVHX09OKCFOSW5vTm9uUmVzaWRlbnQobmkpKTsKLQlCVUdfT04odmNuIDwgMCk7Ci0JaWYg
KCFuaS0+cnVubGlzdC5ybCkgewotCQlyZWFkX2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywg
ZmxhZ3MpOwotCQlpZiAoIW5pLT5hbGxvY2F0ZWRfc2l6ZSkgewotCQkJcmVhZF91bmxvY2tfaXJx
cmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQkJcmV0dXJuIExDTl9FTk9FTlQ7Ci0J
CX0KLQkJcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCX0K
LXJldHJ5X3JlbWFwOgotCS8qIENvbnZlcnQgdmNuIHRvIGxjbi4gIElmIHRoYXQgZmFpbHMgbWFw
IHRoZSBydW5saXN0IGFuZCByZXRyeSBvbmNlLiAqLwotCWxjbiA9IG50ZnNfcmxfdmNuX3RvX2xj
bihuaS0+cnVubGlzdC5ybCwgdmNuKTsKLQlpZiAobGlrZWx5KGxjbiA+PSBMQ05fSE9MRSkpIHsK
LQkJbnRmc19kZWJ1ZygiRG9uZSwgbGNuIDB4JWxseC4iLCAobG9uZyBsb25nKWxjbik7Ci0JCXJl
dHVybiBsY247Ci0JfQotCWlmIChsY24gIT0gTENOX1JMX05PVF9NQVBQRUQpIHsKLQkJaWYgKGxj
biAhPSBMQ05fRU5PRU5UKQotCQkJbGNuID0gTENOX0VJTzsKLQl9IGVsc2UgaWYgKCFpc19yZXRy
eSkgewotCQlpbnQgZXJyOwotCi0JCWlmICghd3JpdGVfbG9ja2VkKSB7Ci0JCQl1cF9yZWFkKCZu
aS0+cnVubGlzdC5sb2NrKTsKLQkJCWRvd25fd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotCQkJ
aWYgKHVubGlrZWx5KG50ZnNfcmxfdmNuX3RvX2xjbihuaS0+cnVubGlzdC5ybCwgdmNuKSAhPQot
CQkJCQlMQ05fUkxfTk9UX01BUFBFRCkpIHsKLQkJCQl1cF93cml0ZSgmbmktPnJ1bmxpc3QubG9j
ayk7Ci0JCQkJZG93bl9yZWFkKCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJCQlnb3RvIHJldHJ5X3Jl
bWFwOwotCQkJfQotCQl9Ci0JCWVyciA9IG50ZnNfbWFwX3J1bmxpc3Rfbm9sb2NrKG5pLCB2Y24s
IE5VTEwpOwotCQlpZiAoIXdyaXRlX2xvY2tlZCkgewotCQkJdXBfd3JpdGUoJm5pLT5ydW5saXN0
LmxvY2spOwotCQkJZG93bl9yZWFkKCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJfQotCQlpZiAobGlr
ZWx5KCFlcnIpKSB7Ci0JCQlpc19yZXRyeSA9IHRydWU7Ci0JCQlnb3RvIHJldHJ5X3JlbWFwOwot
CQl9Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkKLQkJCWxjbiA9IExDTl9FTk9FTlQ7Ci0JCWVsc2Ug
aWYgKGVyciA9PSAtRU5PTUVNKQotCQkJbGNuID0gTENOX0VOT01FTTsKLQkJZWxzZQotCQkJbGNu
ID0gTENOX0VJTzsKLQl9Ci0JaWYgKGxjbiAhPSBMQ05fRU5PRU5UKQotCQludGZzX2Vycm9yKG5p
LT52b2wtPnNiLCAiRmFpbGVkIHdpdGggZXJyb3IgY29kZSAlbGxpLiIsCi0JCQkJKGxvbmcgbG9u
ZylsY24pOwotCXJldHVybiBsY247Ci19Ci0KLS8qKgotICogbnRmc19hdHRyX2ZpbmRfdmNuX25v
bG9jayAtIGZpbmQgYSB2Y24gaW4gdGhlIHJ1bmxpc3Qgb2YgYW4gbnRmcyBpbm9kZQotICogQG5p
OgkJbnRmcyBpbm9kZSBkZXNjcmliaW5nIHRoZSBydW5saXN0IHRvIHNlYXJjaAotICogQHZjbjoJ
dmNuIHRvIGZpbmQKLSAqIEBjdHg6CWFjdGl2ZSBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQgaWYg
cHJlc2VudCBvciBOVUxMIGlmIG5vdAotICoKLSAqIEZpbmQgdGhlIHZpcnR1YWwgY2x1c3RlciBu
dW1iZXIgQHZjbiBpbiB0aGUgcnVubGlzdCBkZXNjcmliZWQgYnkgdGhlIG50ZnMKLSAqIGlub2Rl
IEBuaSBhbmQgcmV0dXJuIHRoZSBhZGRyZXNzIG9mIHRoZSBydW5saXN0IGVsZW1lbnQgY29udGFp
bmluZyB0aGUgQHZjbi4KLSAqCi0gKiBJZiB0aGUgQHZjbiBpcyBub3QgbWFwcGVkIHlldCwgdGhl
IGF0dGVtcHQgaXMgbWFkZSB0byBtYXAgdGhlIGF0dHJpYnV0ZQotICogZXh0ZW50IGNvbnRhaW5p
bmcgdGhlIEB2Y24gYW5kIHRoZSB2Y24gdG8gbGNuIGNvbnZlcnNpb24gaXMgcmV0cmllZC4KLSAq
Ci0gKiBJZiBAY3R4IGlzIHNwZWNpZmllZCwgaXQgaXMgYW4gYWN0aXZlIHNlYXJjaCBjb250ZXh0
IG9mIEBuaSBhbmQgaXRzIGJhc2UgbWZ0Ci0gKiByZWNvcmQuICBUaGlzIGlzIG5lZWRlZCB3aGVu
IG50ZnNfYXR0cl9maW5kX3Zjbl9ub2xvY2soKSBlbmNvdW50ZXJzIHVubWFwcGVkCi0gKiBydW5s
aXN0IGZyYWdtZW50cyBhbmQgYWxsb3dzIHRoZWlyIG1hcHBpbmcuICBJZiB5b3UgZG8gbm90IGhh
dmUgdGhlIG1mdAotICogcmVjb3JkIG1hcHBlZCwgeW91IGNhbiBzcGVjaWZ5IEBjdHggYXMgTlVM
TCBhbmQgbnRmc19hdHRyX2ZpbmRfdmNuX25vbG9jaygpCi0gKiB3aWxsIHBlcmZvcm0gdGhlIG5l
Y2Vzc2FyeSBtYXBwaW5nIGFuZCB1bm1hcHBpbmcuCi0gKgotICogTm90ZSwgbnRmc19hdHRyX2Zp
bmRfdmNuX25vbG9jaygpIHNhdmVzIHRoZSBzdGF0ZSBvZiBAY3R4IG9uIGVudHJ5IGFuZAotICog
cmVzdG9yZXMgaXQgYmVmb3JlIHJldHVybmluZy4gIFRodXMsIEBjdHggd2lsbCBiZSBsZWZ0IHBv
aW50aW5nIHRvIHRoZSBzYW1lCi0gKiBhdHRyaWJ1dGUgb24gcmV0dXJuIGFzIG9uIGVudHJ5LiAg
SG93ZXZlciwgdGhlIGFjdHVhbCBwb2ludGVycyBpbiBAY3R4IG1heQotICogcG9pbnQgdG8gZGlm
ZmVyZW50IG1lbW9yeSBsb2NhdGlvbnMgb24gcmV0dXJuLCBzbyB5b3UgbXVzdCByZW1lbWJlciB0
byByZXNldAotICogYW55IGNhY2hlZCBwb2ludGVycyBmcm9tIHRoZSBAY3R4LCBpLmUuIGFmdGVy
IHRoZSBjYWxsIHRvCi0gKiBudGZzX2F0dHJfZmluZF92Y25fbm9sb2NrKCksIHlvdSB3aWxsIHBy
b2JhYmx5IHdhbnQgdG8gZG86Ci0gKgltID0gY3R4LT5tcmVjOwotICoJYSA9IGN0eC0+YXR0cjsK
LSAqIEFzc3VtaW5nIHlvdSBjYWNoZSBjdHgtPmF0dHIgaW4gYSB2YXJpYWJsZSBAYSBvZiB0eXBl
IEFUVFJfUkVDT1JEICogYW5kIHRoYXQKLSAqIHlvdSBjYWNoZSBjdHgtPm1yZWMgaW4gYSB2YXJp
YWJsZSBAbSBvZiB0eXBlIE1GVF9SRUNPUkQgKi4KLSAqIE5vdGUgeW91IG5lZWQgdG8gZGlzdGlu
Z3Vpc2ggYmV0d2VlbiB0aGUgbGNuIG9mIHRoZSByZXR1cm5lZCBydW5saXN0IGVsZW1lbnQKLSAq
IGJlaW5nID49IDAgYW5kIExDTl9IT0xFLiAgSW4gdGhlIGxhdGVyIGNhc2UgeW91IGhhdmUgdG8g
cmV0dXJuIHplcm9lcyBvbgotICogcmVhZCBhbmQgYWxsb2NhdGUgY2x1c3RlcnMgb24gd3JpdGUu
Ci0gKgotICogUmV0dXJuIHRoZSBydW5saXN0IGVsZW1lbnQgY29udGFpbmluZyB0aGUgQHZjbiBv
biBzdWNjZXNzIGFuZAotICogRVJSX1BUUigtZXJybm8pIG9uIGVycm9yLiAgWW91IG5lZWQgdG8g
dGVzdCB0aGUgcmV0dXJuIHZhbHVlIHdpdGggSVNfRVJSKCkKLSAqIHRvIGRlY2lkZSBpZiB0aGUg
cmV0dXJuIGlzIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBhbmQgUFRSX0VSUigpIHRvIGdldCB0byB0aGUK
LSAqIGVycm9yIGNvZGUgaWYgSVNfRVJSKCkgaXMgdHJ1ZS4KLSAqCi0gKiBUaGUgcG9zc2libGUg
ZXJyb3IgcmV0dXJuIGNvZGVzIGFyZToKLSAqCS1FTk9FTlQgLSBObyBzdWNoIHZjbiBpbiB0aGUg
cnVubGlzdCwgaS5lLiBAdmNuIGlzIG91dCBvZiBib3VuZHMuCi0gKgktRU5PTUVNIC0gTm90IGVu
b3VnaCBtZW1vcnkgdG8gbWFwIHJ1bmxpc3QuCi0gKgktRUlPCS0gQ3JpdGljYWwgZXJyb3IgKHJ1
bmxpc3QvZmlsZSBpcyBjb3JydXB0LCBpL28gZXJyb3IsIGV0YykuCi0gKgotICogV0FSTklORzog
SWYgQGN0eCBpcyBzdXBwbGllZCwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHN1Y2Nlc3Mgb3IgZmFp
bHVyZSBpcwotICoJICAgIHJldHVybmVkLCB5b3UgbmVlZCB0byBjaGVjayBJU19FUlIoQGN0eC0+
bXJlYykgYW5kIGlmICd0cnVlJyB0aGUgQGN0eAotICoJICAgIGlzIG5vIGxvbmdlciB2YWxpZCwg
aS5lLiB5b3UgbmVlZCB0byBlaXRoZXIgY2FsbAotICoJICAgIG50ZnNfYXR0cl9yZWluaXRfc2Vh
cmNoX2N0eCgpIG9yIG50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eCgpIG9uIGl0LgotICoJICAgIElu
IHRoYXQgY2FzZSBQVFJfRVJSKEBjdHgtPm1yZWMpIHdpbGwgZ2l2ZSB5b3UgdGhlIGVycm9yIGNv
ZGUgZm9yCi0gKgkgICAgd2h5IHRoZSBtYXBwaW5nIG9mIHRoZSBvbGQgaW5vZGUgZmFpbGVkLgot
ICoKLSAqIExvY2tpbmc6IC0gVGhlIHJ1bmxpc3QgZGVzY3JpYmVkIGJ5IEBuaSBtdXN0IGJlIGxv
Y2tlZCBmb3Igd3JpdGluZyBvbiBlbnRyeQotICoJICAgICAgYW5kIGlzIGxvY2tlZCBvbiByZXR1
cm4uICBOb3RlIHRoZSBydW5saXN0IG1heSBiZSBtb2RpZmllZCB3aGVuCi0gKgkgICAgICBuZWVk
ZWQgcnVubGlzdCBmcmFnbWVudHMgbmVlZCB0byBiZSBtYXBwZWQuCi0gKgkgICAgLSBJZiBAY3R4
IGlzIE5VTEwsIHRoZSBiYXNlIG1mdCByZWNvcmQgb2YgQG5pIG11c3Qgbm90IGJlIG1hcHBlZCBv
bgotICoJICAgICAgZW50cnkgYW5kIGl0IHdpbGwgYmUgbGVmdCB1bm1hcHBlZCBvbiByZXR1cm4u
Ci0gKgkgICAgLSBJZiBAY3R4IGlzIG5vdCBOVUxMLCB0aGUgYmFzZSBtZnQgcmVjb3JkIG11c3Qg
YmUgbWFwcGVkIG9uIGVudHJ5Ci0gKgkgICAgICBhbmQgaXQgd2lsbCBiZSBsZWZ0IG1hcHBlZCBv
biByZXR1cm4uCi0gKi8KLXJ1bmxpc3RfZWxlbWVudCAqbnRmc19hdHRyX2ZpbmRfdmNuX25vbG9j
ayhudGZzX2lub2RlICpuaSwgY29uc3QgVkNOIHZjbiwKLQkJbnRmc19hdHRyX3NlYXJjaF9jdHgg
KmN0eCkKLXsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwotCXJ1bmxpc3RfZWxlbWVudCAqcmw7Ci0J
aW50IGVyciA9IDA7Ci0JYm9vbCBpc19yZXRyeSA9IGZhbHNlOwotCi0JQlVHX09OKCFuaSk7Ci0J
bnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIGlfaW5vIDB4JWx4LCB2Y24gMHglbGx4LCB3aXRoJXMg
Y3R4LiIsCi0JCQluaS0+bWZ0X25vLCAodW5zaWduZWQgbG9uZyBsb25nKXZjbiwgY3R4ID8gIiIg
OiAib3V0Iik7Ci0JQlVHX09OKCFOSW5vTm9uUmVzaWRlbnQobmkpKTsKLQlCVUdfT04odmNuIDwg
MCk7Ci0JaWYgKCFuaS0+cnVubGlzdC5ybCkgewotCQlyZWFkX2xvY2tfaXJxc2F2ZSgmbmktPnNp
emVfbG9jaywgZmxhZ3MpOwotCQlpZiAoIW5pLT5hbGxvY2F0ZWRfc2l6ZSkgewotCQkJcmVhZF91
bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQkJcmV0dXJuIEVSUl9Q
VFIoLUVOT0VOVCk7Ci0JCX0KLQkJcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9j
aywgZmxhZ3MpOwotCX0KLXJldHJ5X3JlbWFwOgotCXJsID0gbmktPnJ1bmxpc3Qucmw7Ci0JaWYg
KGxpa2VseShybCAmJiB2Y24gPj0gcmxbMF0udmNuKSkgewotCQl3aGlsZSAobGlrZWx5KHJsLT5s
ZW5ndGgpKSB7Ci0JCQlpZiAodW5saWtlbHkodmNuIDwgcmxbMV0udmNuKSkgewotCQkJCWlmIChs
aWtlbHkocmwtPmxjbiA+PSBMQ05fSE9MRSkpIHsKLQkJCQkJbnRmc19kZWJ1ZygiRG9uZS4iKTsK
LQkJCQkJcmV0dXJuIHJsOwotCQkJCX0KLQkJCQlicmVhazsKLQkJCX0KLQkJCXJsKys7Ci0JCX0K
LQkJaWYgKGxpa2VseShybC0+bGNuICE9IExDTl9STF9OT1RfTUFQUEVEKSkgewotCQkJaWYgKGxp
a2VseShybC0+bGNuID09IExDTl9FTk9FTlQpKQotCQkJCWVyciA9IC1FTk9FTlQ7Ci0JCQllbHNl
Ci0JCQkJZXJyID0gLUVJTzsKLQkJfQotCX0KLQlpZiAoIWVyciAmJiAhaXNfcmV0cnkpIHsKLQkJ
LyoKLQkJICogSWYgdGhlIHNlYXJjaCBjb250ZXh0IGlzIGludmFsaWQgd2UgY2Fubm90IG1hcCB0
aGUgdW5tYXBwZWQKLQkJICogcmVnaW9uLgotCQkgKi8KLQkJaWYgKElTX0VSUihjdHgtPm1yZWMp
KQotCQkJZXJyID0gUFRSX0VSUihjdHgtPm1yZWMpOwotCQllbHNlIHsKLQkJCS8qCi0JCQkgKiBU
aGUgQHZjbiBpcyBpbiBhbiB1bm1hcHBlZCByZWdpb24sIG1hcCB0aGUgcnVubGlzdAotCQkJICog
YW5kIHJldHJ5LgotCQkJICovCi0JCQllcnIgPSBudGZzX21hcF9ydW5saXN0X25vbG9jayhuaSwg
dmNuLCBjdHgpOwotCQkJaWYgKGxpa2VseSghZXJyKSkgewotCQkJCWlzX3JldHJ5ID0gdHJ1ZTsK
LQkJCQlnb3RvIHJldHJ5X3JlbWFwOwotCQkJfQotCQl9Ci0JCWlmIChlcnIgPT0gLUVJTlZBTCkK
LQkJCWVyciA9IC1FSU87Ci0JfSBlbHNlIGlmICghZXJyKQotCQllcnIgPSAtRUlPOwotCWlmIChl
cnIgIT0gLUVOT0VOVCkKLQkJbnRmc19lcnJvcihuaS0+dm9sLT5zYiwgIkZhaWxlZCB3aXRoIGVy
cm9yIGNvZGUgJWkuIiwgZXJyKTsKLQlyZXR1cm4gRVJSX1BUUihlcnIpOwotfQotCi0vKioKLSAq
IG50ZnNfYXR0cl9maW5kIC0gZmluZCAobmV4dCkgYXR0cmlidXRlIGluIG1mdCByZWNvcmQKLSAq
IEB0eXBlOglhdHRyaWJ1dGUgdHlwZSB0byBmaW5kCi0gKiBAbmFtZToJYXR0cmlidXRlIG5hbWUg
dG8gZmluZCAob3B0aW9uYWwsIGkuZS4gTlVMTCBtZWFucyBkb24ndCBjYXJlKQotICogQG5hbWVf
bGVuOglhdHRyaWJ1dGUgbmFtZSBsZW5ndGggKG9ubHkgbmVlZGVkIGlmIEBuYW1lIHByZXNlbnQp
Ci0gKiBAaWM6CQlJR05PUkVfQ0FTRSBvciBDQVNFX1NFTlNJVElWRSAoaWdub3JlZCBpZiBAbmFt
ZSBub3QgcHJlc2VudCkKLSAqIEB2YWw6CWF0dHJpYnV0ZSB2YWx1ZSB0byBmaW5kIChvcHRpb25h
bCwgcmVzaWRlbnQgYXR0cmlidXRlcyBvbmx5KQotICogQHZhbF9sZW46CWF0dHJpYnV0ZSB2YWx1
ZSBsZW5ndGgKLSAqIEBjdHg6CXNlYXJjaCBjb250ZXh0IHdpdGggbWZ0IHJlY29yZCBhbmQgYXR0
cmlidXRlIHRvIHNlYXJjaCBmcm9tCi0gKgotICogWW91IHNob3VsZCBub3QgbmVlZCB0byBjYWxs
IHRoaXMgZnVuY3Rpb24gZGlyZWN0bHkuICBVc2UgbnRmc19hdHRyX2xvb2t1cCgpCi0gKiBpbnN0
ZWFkLgotICoKLSAqIG50ZnNfYXR0cl9maW5kKCkgdGFrZXMgYSBzZWFyY2ggY29udGV4dCBAY3R4
IGFzIHBhcmFtZXRlciBhbmQgc2VhcmNoZXMgdGhlCi0gKiBtZnQgcmVjb3JkIHNwZWNpZmllZCBi
eSBAY3R4LT5tcmVjLCBiZWdpbm5pbmcgYXQgQGN0eC0+YXR0ciwgZm9yIGFuCi0gKiBhdHRyaWJ1
dGUgb2YgQHR5cGUsIG9wdGlvbmFsbHkgQG5hbWUgYW5kIEB2YWwuCi0gKgotICogSWYgdGhlIGF0
dHJpYnV0ZSBpcyBmb3VuZCwgbnRmc19hdHRyX2ZpbmQoKSByZXR1cm5zIDAgYW5kIEBjdHgtPmF0
dHIgd2lsbAotICogcG9pbnQgdG8gdGhlIGZvdW5kIGF0dHJpYnV0ZS4KLSAqCi0gKiBJZiB0aGUg
YXR0cmlidXRlIGlzIG5vdCBmb3VuZCwgbnRmc19hdHRyX2ZpbmQoKSByZXR1cm5zIC1FTk9FTlQg
YW5kCi0gKiBAY3R4LT5hdHRyIHdpbGwgcG9pbnQgdG8gdGhlIGF0dHJpYnV0ZSBiZWZvcmUgd2hp
Y2ggdGhlIGF0dHJpYnV0ZSBiZWluZwotICogc2VhcmNoZWQgZm9yIHdvdWxkIG5lZWQgdG8gYmUg
aW5zZXJ0ZWQgaWYgc3VjaCBhbiBhY3Rpb24gd2VyZSB0byBiZSBkZXNpcmVkLgotICoKLSAqIE9u
IGFjdHVhbCBlcnJvciwgbnRmc19hdHRyX2ZpbmQoKSByZXR1cm5zIC1FSU8uICBJbiB0aGlzIGNh
c2UgQGN0eC0+YXR0ciBpcwotICogdW5kZWZpbmVkIGFuZCBpbiBwYXJ0aWN1bGFyIGRvIG5vdCBy
ZWx5IG9uIGl0IG5vdCBjaGFuZ2luZy4KLSAqCi0gKiBJZiBAY3R4LT5pc19maXJzdCBpcyAndHJ1
ZScsIHRoZSBzZWFyY2ggYmVnaW5zIHdpdGggQGN0eC0+YXR0ciBpdHNlbGYuICBJZiBpdAotICog
aXMgJ2ZhbHNlJywgdGhlIHNlYXJjaCBiZWdpbnMgYWZ0ZXIgQGN0eC0+YXR0ci4KLSAqCi0gKiBJ
ZiBAaWMgaXMgSUdOT1JFX0NBU0UsIHRoZSBAbmFtZSBjb21wYXJpc3NvbiBpcyBub3QgY2FzZSBz
ZW5zaXRpdmUgYW5kCi0gKiBAY3R4LT5udGZzX2lubyBtdXN0IGJlIHNldCB0byB0aGUgbnRmcyBp
bm9kZSB0byB3aGljaCB0aGUgbWZ0IHJlY29yZAotICogQGN0eC0+bXJlYyBiZWxvbmdzLiAgVGhp
cyBpcyBzbyB3ZSBjYW4gZ2V0IGF0IHRoZSBudGZzIHZvbHVtZSBhbmQgaGVuY2UgYXQKLSAqIHRo
ZSB1cGNhc2UgdGFibGUuICBJZiBAaWMgaXMgQ0FTRV9TRU5TSVRJVkUsIHRoZSBjb21wYXJpc29u
IGlzIGNhc2UKLSAqIHNlbnNpdGl2ZS4gIFdoZW4gQG5hbWUgaXMgcHJlc2VudCwgQG5hbWVfbGVu
IGlzIHRoZSBAbmFtZSBsZW5ndGggaW4gVW5pY29kZQotICogY2hhcmFjdGVycy4KLSAqCi0gKiBJ
ZiBAbmFtZSBpcyBub3QgcHJlc2VudCAoTlVMTCksIHdlIGFzc3VtZSB0aGF0IHRoZSB1bm5hbWVk
IGF0dHJpYnV0ZSBpcwotICogYmVpbmcgc2VhcmNoZWQgZm9yLgotICoKLSAqIEZpbmFsbHksIHRo
ZSByZXNpZGVudCBhdHRyaWJ1dGUgdmFsdWUgQHZhbCBpcyBsb29rZWQgZm9yLCBpZiBwcmVzZW50
LiAgSWYKLSAqIEB2YWwgaXMgbm90IHByZXNlbnQgKE5VTEwpLCBAdmFsX2xlbiBpcyBpZ25vcmVk
LgotICoKLSAqIG50ZnNfYXR0cl9maW5kKCkgb25seSBzZWFyY2hlcyB0aGUgc3BlY2lmaWVkIG1m
dCByZWNvcmQgYW5kIGl0IGlnbm9yZXMgdGhlCi0gKiBwcmVzZW5jZSBvZiBhbiBhdHRyaWJ1dGUg
bGlzdCBhdHRyaWJ1dGUgKHVubGVzcyBpdCBpcyB0aGUgb25lIGJlaW5nIHNlYXJjaGVkCi0gKiBm
b3IsIG9idmlvdXNseSkuICBJZiB5b3UgbmVlZCB0byB0YWtlIGF0dHJpYnV0ZSBsaXN0cyBpbnRv
IGNvbnNpZGVyYXRpb24sCi0gKiB1c2UgbnRmc19hdHRyX2xvb2t1cCgpIGluc3RlYWQgKHNlZSBi
ZWxvdykuICBUaGlzIGFsc28gbWVhbnMgdGhhdCB5b3UgY2Fubm90Ci0gKiB1c2UgbnRmc19hdHRy
X2ZpbmQoKSB0byBzZWFyY2ggZm9yIGV4dGVudCByZWNvcmRzIG9mIG5vbi1yZXNpZGVudAotICog
YXR0cmlidXRlcywgYXMgZXh0ZW50cyB3aXRoIGxvd2VzdF92Y24gIT0gMCBhcmUgdXN1YWxseSBk
ZXNjcmliZWQgYnkgdGhlCi0gKiBhdHRyaWJ1dGUgbGlzdCBhdHRyaWJ1dGUgb25seS4gLSBOb3Rl
IHRoYXQgaXQgaXMgcG9zc2libGUgdGhhdCB0aGUgZmlyc3QKLSAqIGV4dGVudCBpcyBvbmx5IGlu
IHRoZSBhdHRyaWJ1dGUgbGlzdCB3aGlsZSB0aGUgbGFzdCBleHRlbnQgaXMgaW4gdGhlIGJhc2UK
LSAqIG1mdCByZWNvcmQsIHNvIGRvIG5vdCByZWx5IG9uIGJlaW5nIGFibGUgdG8gZmluZCB0aGUg
Zmlyc3QgZXh0ZW50IGluIHRoZQotICogYmFzZSBtZnQgcmVjb3JkLgotICoKLSAqIFdhcm5pbmc6
IE5ldmVyIHVzZSBAdmFsIHdoZW4gbG9va2luZyBmb3IgYXR0cmlidXRlIHR5cGVzIHdoaWNoIGNh
biBiZQotICoJICAgIG5vbi1yZXNpZGVudCBhcyB0aGlzIG1vc3QgbGlrZWx5IHdpbGwgcmVzdWx0
IGluIGEgY3Jhc2ghCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19hdHRyX2ZpbmQoY29uc3QgQVRUUl9U
WVBFIHR5cGUsIGNvbnN0IG50ZnNjaGFyICpuYW1lLAotCQljb25zdCB1MzIgbmFtZV9sZW4sIGNv
bnN0IElHTk9SRV9DQVNFX0JPT0wgaWMsCi0JCWNvbnN0IHU4ICp2YWwsIGNvbnN0IHUzMiB2YWxf
bGVuLCBudGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4KQotewotCUFUVFJfUkVDT1JEICphOwotCW50
ZnNfdm9sdW1lICp2b2wgPSBjdHgtPm50ZnNfaW5vLT52b2w7Ci0JbnRmc2NoYXIgKnVwY2FzZSA9
IHZvbC0+dXBjYXNlOwotCXUzMiB1cGNhc2VfbGVuID0gdm9sLT51cGNhc2VfbGVuOwotCi0JLyoK
LQkgKiBJdGVyYXRlIG92ZXIgYXR0cmlidXRlcyBpbiBtZnQgcmVjb3JkIHN0YXJ0aW5nIGF0IEBj
dHgtPmF0dHIsIG9yIHRoZQotCSAqIGF0dHJpYnV0ZSBmb2xsb3dpbmcgdGhhdCwgaWYgQGN0eC0+
aXNfZmlyc3QgaXMgJ3RydWUnLgotCSAqLwotCWlmIChjdHgtPmlzX2ZpcnN0KSB7Ci0JCWEgPSBj
dHgtPmF0dHI7Ci0JCWN0eC0+aXNfZmlyc3QgPSBmYWxzZTsKLQl9IGVsc2UKLQkJYSA9IChBVFRS
X1JFQ09SRCopKCh1OCopY3R4LT5hdHRyICsKLQkJCQlsZTMyX3RvX2NwdShjdHgtPmF0dHItPmxl
bmd0aCkpOwotCWZvciAoOzsJYSA9IChBVFRSX1JFQ09SRCopKCh1OCopYSArIGxlMzJfdG9fY3B1
KGEtPmxlbmd0aCkpKSB7Ci0JCXU4ICptcmVjX2VuZCA9ICh1OCAqKWN0eC0+bXJlYyArCi0JCSAg
ICAgICAgICAgICAgIGxlMzJfdG9fY3B1KGN0eC0+bXJlYy0+Ynl0ZXNfYWxsb2NhdGVkKTsKLQkJ
dTggKm5hbWVfZW5kOwotCi0JCS8qIGNoZWNrIHdoZXRoZXIgQVRUUl9SRUNPUkQgd3JhcCAqLwot
CQlpZiAoKHU4ICopYSA8ICh1OCAqKWN0eC0+bXJlYykKLQkJCWJyZWFrOwotCi0JCS8qIGNoZWNr
IHdoZXRoZXIgQXR0cmlidXRlIFJlY29yZCBIZWFkZXIgaXMgd2l0aGluIGJvdW5kcyAqLwotCQlp
ZiAoKHU4ICopYSA+IG1yZWNfZW5kIHx8Ci0JCSAgICAodTggKilhICsgc2l6ZW9mKEFUVFJfUkVD
T1JEKSA+IG1yZWNfZW5kKQotCQkJYnJlYWs7Ci0KLQkJLyogY2hlY2sgd2hldGhlciBBVFRSX1JF
Q09SRCdzIG5hbWUgaXMgd2l0aGluIGJvdW5kcyAqLwotCQluYW1lX2VuZCA9ICh1OCAqKWEgKyBs
ZTE2X3RvX2NwdShhLT5uYW1lX29mZnNldCkgKwotCQkJICAgYS0+bmFtZV9sZW5ndGggKiBzaXpl
b2YobnRmc2NoYXIpOwotCQlpZiAobmFtZV9lbmQgPiBtcmVjX2VuZCkKLQkJCWJyZWFrOwotCi0J
CWN0eC0+YXR0ciA9IGE7Ci0JCWlmICh1bmxpa2VseShsZTMyX3RvX2NwdShhLT50eXBlKSA+IGxl
MzJfdG9fY3B1KHR5cGUpIHx8Ci0JCQkJYS0+dHlwZSA9PSBBVF9FTkQpKQotCQkJcmV0dXJuIC1F
Tk9FTlQ7Ci0JCWlmICh1bmxpa2VseSghYS0+bGVuZ3RoKSkKLQkJCWJyZWFrOwotCi0JCS8qIGNo
ZWNrIHdoZXRoZXIgQVRUUl9SRUNPUkQncyBsZW5ndGggd3JhcCAqLwotCQlpZiAoKHU4ICopYSAr
IGxlMzJfdG9fY3B1KGEtPmxlbmd0aCkgPCAodTggKilhKQotCQkJYnJlYWs7Ci0JCS8qIGNoZWNr
IHdoZXRoZXIgQVRUUl9SRUNPUkQncyBsZW5ndGggaXMgd2l0aGluIGJvdW5kcyAqLwotCQlpZiAo
KHU4ICopYSArIGxlMzJfdG9fY3B1KGEtPmxlbmd0aCkgPiBtcmVjX2VuZCkKLQkJCWJyZWFrOwot
Ci0JCWlmIChhLT50eXBlICE9IHR5cGUpCi0JCQljb250aW51ZTsKLQkJLyoKLQkJICogSWYgQG5h
bWUgaXMgcHJlc2VudCwgY29tcGFyZSB0aGUgdHdvIG5hbWVzLiAgSWYgQG5hbWUgaXMKLQkJICog
bWlzc2luZywgYXNzdW1lIHdlIHdhbnQgYW4gdW5uYW1lZCBhdHRyaWJ1dGUuCi0JCSAqLwotCQlp
ZiAoIW5hbWUpIHsKLQkJCS8qIFRoZSBzZWFyY2ggZmFpbGVkIGlmIHRoZSBmb3VuZCBhdHRyaWJ1
dGUgaXMgbmFtZWQuICovCi0JCQlpZiAoYS0+bmFtZV9sZW5ndGgpCi0JCQkJcmV0dXJuIC1FTk9F
TlQ7Ci0JCX0gZWxzZSBpZiAoIW50ZnNfYXJlX25hbWVzX2VxdWFsKG5hbWUsIG5hbWVfbGVuLAot
CQkJICAgIChudGZzY2hhciopKCh1OCopYSArIGxlMTZfdG9fY3B1KGEtPm5hbWVfb2Zmc2V0KSks
Ci0JCQkgICAgYS0+bmFtZV9sZW5ndGgsIGljLCB1cGNhc2UsIHVwY2FzZV9sZW4pKSB7Ci0JCQly
ZWdpc3RlciBpbnQgcmM7Ci0KLQkJCXJjID0gbnRmc19jb2xsYXRlX25hbWVzKG5hbWUsIG5hbWVf
bGVuLAotCQkJCQkobnRmc2NoYXIqKSgodTgqKWEgKwotCQkJCQlsZTE2X3RvX2NwdShhLT5uYW1l
X29mZnNldCkpLAotCQkJCQlhLT5uYW1lX2xlbmd0aCwgMSwgSUdOT1JFX0NBU0UsCi0JCQkJCXVw
Y2FzZSwgdXBjYXNlX2xlbik7Ci0JCQkvKgotCQkJICogSWYgQG5hbWUgY29sbGF0ZXMgYmVmb3Jl
IGEtPm5hbWUsIHRoZXJlIGlzIG5vCi0JCQkgKiBtYXRjaGluZyBhdHRyaWJ1dGUuCi0JCQkgKi8K
LQkJCWlmIChyYyA9PSAtMSkKLQkJCQlyZXR1cm4gLUVOT0VOVDsKLQkJCS8qIElmIHRoZSBzdHJp
bmdzIGFyZSBub3QgZXF1YWwsIGNvbnRpbnVlIHNlYXJjaC4gKi8KLQkJCWlmIChyYykKLQkJCQlj
b250aW51ZTsKLQkJCXJjID0gbnRmc19jb2xsYXRlX25hbWVzKG5hbWUsIG5hbWVfbGVuLAotCQkJ
CQkobnRmc2NoYXIqKSgodTgqKWEgKwotCQkJCQlsZTE2X3RvX2NwdShhLT5uYW1lX29mZnNldCkp
LAotCQkJCQlhLT5uYW1lX2xlbmd0aCwgMSwgQ0FTRV9TRU5TSVRJVkUsCi0JCQkJCXVwY2FzZSwg
dXBjYXNlX2xlbik7Ci0JCQlpZiAocmMgPT0gLTEpCi0JCQkJcmV0dXJuIC1FTk9FTlQ7Ci0JCQlp
ZiAocmMpCi0JCQkJY29udGludWU7Ci0JCX0KLQkJLyoKLQkJICogVGhlIG5hbWVzIG1hdGNoIG9y
IEBuYW1lIG5vdCBwcmVzZW50IGFuZCBhdHRyaWJ1dGUgaXMKLQkJICogdW5uYW1lZC4gIElmIG5v
IEB2YWwgc3BlY2lmaWVkLCB3ZSBoYXZlIGZvdW5kIHRoZSBhdHRyaWJ1dGUKLQkJICogYW5kIGFy
ZSBkb25lLgotCQkgKi8KLQkJaWYgKCF2YWwpCi0JCQlyZXR1cm4gMDsKLQkJLyogQHZhbCBpcyBw
cmVzZW50OyBjb21wYXJlIHZhbHVlcy4gKi8KLQkJZWxzZSB7Ci0JCQlyZWdpc3RlciBpbnQgcmM7
Ci0KLQkJCXJjID0gbWVtY21wKHZhbCwgKHU4KilhICsgbGUxNl90b19jcHUoCi0JCQkJCWEtPmRh
dGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSwKLQkJCQkJbWluX3QodTMyLCB2YWxfbGVuLCBsZTMy
X3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpKSk7Ci0JCQkvKgot
CQkJICogSWYgQHZhbCBjb2xsYXRlcyBiZWZvcmUgdGhlIGN1cnJlbnQgYXR0cmlidXRlJ3MKLQkJ
CSAqIHZhbHVlLCB0aGVyZSBpcyBubyBtYXRjaGluZyBhdHRyaWJ1dGUuCi0JCQkgKi8KLQkJCWlm
ICghcmMpIHsKLQkJCQlyZWdpc3RlciB1MzIgYXZsOwotCi0JCQkJYXZsID0gbGUzMl90b19jcHUo
Ci0JCQkJCQlhLT5kYXRhLnJlc2lkZW50LnZhbHVlX2xlbmd0aCk7Ci0JCQkJaWYgKHZhbF9sZW4g
PT0gYXZsKQotCQkJCQlyZXR1cm4gMDsKLQkJCQlpZiAodmFsX2xlbiA8IGF2bCkKLQkJCQkJcmV0
dXJuIC1FTk9FTlQ7Ci0JCQl9IGVsc2UgaWYgKHJjIDwgMCkKLQkJCQlyZXR1cm4gLUVOT0VOVDsK
LQkJfQotCX0KLQludGZzX2Vycm9yKHZvbC0+c2IsICJJbm9kZSBpcyBjb3JydXB0LiAgUnVuIGNo
a2Rzay4iKTsKLQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JcmV0dXJuIC1FSU87Ci19Ci0KLS8qKgot
ICogbG9hZF9hdHRyaWJ1dGVfbGlzdCAtIGxvYWQgYW4gYXR0cmlidXRlIGxpc3QgaW50byBtZW1v
cnkKLSAqIEB2b2w6CQludGZzIHZvbHVtZSBmcm9tIHdoaWNoIHRvIHJlYWQKLSAqIEBydW5saXN0
OgkJcnVubGlzdCBvZiB0aGUgYXR0cmlidXRlIGxpc3QKLSAqIEBhbF9zdGFydDoJCWRlc3RpbmF0
aW9uIGJ1ZmZlcgotICogQHNpemU6CQlzaXplIG9mIHRoZSBkZXN0aW5hdGlvbiBidWZmZXIgaW4g
Ynl0ZXMKLSAqIEBpbml0aWFsaXplZF9zaXplOglpbml0aWFsaXplZCBzaXplIG9mIHRoZSBhdHRy
aWJ1dGUgbGlzdAotICoKLSAqIFdhbGsgdGhlIHJ1bmxpc3QgQHJ1bmxpc3QgYW5kIGxvYWQgYWxs
IGNsdXN0ZXJzIGZyb20gaXQgY29weWluZyB0aGVtIGludG8KLSAqIHRoZSBsaW5lYXIgYnVmZmVy
IEBhbC4gVGhlIG1heGltdW0gbnVtYmVyIG9mIGJ5dGVzIGNvcGllZCB0byBAYWwgaXMgQHNpemUK
LSAqIGJ5dGVzLiBOb3RlLCBAc2l6ZSBkb2VzIG5vdCBuZWVkIHRvIGJlIGEgbXVsdGlwbGUgb2Yg
dGhlIGNsdXN0ZXIgc2l6ZS4gSWYKLSAqIEBpbml0aWFsaXplZF9zaXplIGlzIGxlc3MgdGhhbiBA
c2l6ZSwgdGhlIHJlZ2lvbiBpbiBAYWwgYmV0d2VlbgotICogQGluaXRpYWxpemVkX3NpemUgYW5k
IEBzaXplIHdpbGwgYmUgemVyb2VkIGFuZCBub3QgcmVhZCBmcm9tIGRpc2suCi0gKgotICogUmV0
dXJuIDAgb24gc3VjY2VzcyBvciAtZXJybm8gb24gZXJyb3IuCi0gKi8KLWludCBsb2FkX2F0dHJp
YnV0ZV9saXN0KG50ZnNfdm9sdW1lICp2b2wsIHJ1bmxpc3QgKnJ1bmxpc3QsIHU4ICphbF9zdGFy
dCwKLQkJY29uc3QgczY0IHNpemUsIGNvbnN0IHM2NCBpbml0aWFsaXplZF9zaXplKQotewotCUxD
TiBsY247Ci0JdTggKmFsID0gYWxfc3RhcnQ7Ci0JdTggKmFsX2VuZCA9IGFsICsgaW5pdGlhbGl6
ZWRfc2l6ZTsKLQlydW5saXN0X2VsZW1lbnQgKnJsOwotCXN0cnVjdCBidWZmZXJfaGVhZCAqYmg7
Ci0Jc3RydWN0IHN1cGVyX2Jsb2NrICpzYjsKLQl1bnNpZ25lZCBsb25nIGJsb2NrX3NpemU7Ci0J
dW5zaWduZWQgbG9uZyBibG9jaywgbWF4X2Jsb2NrOwotCWludCBlcnIgPSAwOwotCXVuc2lnbmVk
IGNoYXIgYmxvY2tfc2l6ZV9iaXRzOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JaWYg
KCF2b2wgfHwgIXJ1bmxpc3QgfHwgIWFsIHx8IHNpemUgPD0gMCB8fCBpbml0aWFsaXplZF9zaXpl
IDwgMCB8fAotCQkJaW5pdGlhbGl6ZWRfc2l6ZSA+IHNpemUpCi0JCXJldHVybiAtRUlOVkFMOwot
CWlmICghaW5pdGlhbGl6ZWRfc2l6ZSkgewotCQltZW1zZXQoYWwsIDAsIHNpemUpOwotCQlyZXR1
cm4gMDsKLQl9Ci0Jc2IgPSB2b2wtPnNiOwotCWJsb2NrX3NpemUgPSBzYi0+c19ibG9ja3NpemU7
Ci0JYmxvY2tfc2l6ZV9iaXRzID0gc2ItPnNfYmxvY2tzaXplX2JpdHM7Ci0JZG93bl9yZWFkKCZy
dW5saXN0LT5sb2NrKTsKLQlybCA9IHJ1bmxpc3QtPnJsOwotCWlmICghcmwpIHsKLQkJbnRmc19l
cnJvcihzYiwgIkNhbm5vdCByZWFkIGF0dHJpYnV0ZSBsaXN0IHNpbmNlIHJ1bmxpc3QgaXMgIgot
CQkJCSJtaXNzaW5nLiIpOwotCQlnb3RvIGVycl9vdXQ7CQotCX0KLQkvKiBSZWFkIGFsbCBjbHVz
dGVycyBzcGVjaWZpZWQgYnkgdGhlIHJ1bmxpc3Qgb25lIHJ1biBhdCBhIHRpbWUuICovCi0Jd2hp
bGUgKHJsLT5sZW5ndGgpIHsKLQkJbGNuID0gbnRmc19ybF92Y25fdG9fbGNuKHJsLCBybC0+dmNu
KTsKLQkJbnRmc19kZWJ1ZygiUmVhZGluZyB2Y24gPSAweCVsbHgsIGxjbiA9IDB4JWxseC4iLAot
CQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpcmwtPnZjbiwKLQkJCQkodW5zaWduZWQgbG9uZyBsb25n
KWxjbik7Ci0JCS8qIFRoZSBhdHRyaWJ1dGUgbGlzdCBjYW5ub3QgYmUgc3BhcnNlLiAqLwotCQlp
ZiAobGNuIDwgMCkgewotCQkJbnRmc19lcnJvcihzYiwgIm50ZnNfcmxfdmNuX3RvX2xjbigpIGZh
aWxlZC4gIENhbm5vdCAiCi0JCQkJCSJyZWFkIGF0dHJpYnV0ZSBsaXN0LiIpOwotCQkJZ290byBl
cnJfb3V0OwotCQl9Ci0JCWJsb2NrID0gbGNuIDw8IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMgPj4g
YmxvY2tfc2l6ZV9iaXRzOwotCQkvKiBSZWFkIHRoZSBydW4gZnJvbSBkZXZpY2UgaW4gY2h1bmtz
IG9mIGJsb2NrX3NpemUgYnl0ZXMuICovCi0JCW1heF9ibG9jayA9IGJsb2NrICsgKHJsLT5sZW5n
dGggPDwgdm9sLT5jbHVzdGVyX3NpemVfYml0cyA+PgotCQkJCWJsb2NrX3NpemVfYml0cyk7Ci0J
CW50ZnNfZGVidWcoIm1heF9ibG9jayA9IDB4JWx4LiIsIG1heF9ibG9jayk7Ci0JCWRvIHsKLQkJ
CW50ZnNfZGVidWcoIlJlYWRpbmcgYmxvY2sgPSAweCVseC4iLCBibG9jayk7Ci0JCQliaCA9IHNi
X2JyZWFkKHNiLCBibG9jayk7Ci0JCQlpZiAoIWJoKSB7Ci0JCQkJbnRmc19lcnJvcihzYiwgInNi
X2JyZWFkKCkgZmFpbGVkLiBDYW5ub3QgIgotCQkJCQkJInJlYWQgYXR0cmlidXRlIGxpc3QuIik7
Ci0JCQkJZ290byBlcnJfb3V0OwotCQkJfQotCQkJaWYgKGFsICsgYmxvY2tfc2l6ZSA+PSBhbF9l
bmQpCi0JCQkJZ290byBkb19maW5hbDsKLQkJCW1lbWNweShhbCwgYmgtPmJfZGF0YSwgYmxvY2tf
c2l6ZSk7Ci0JCQlicmVsc2UoYmgpOwotCQkJYWwgKz0gYmxvY2tfc2l6ZTsKLQkJfSB3aGlsZSAo
KytibG9jayA8IG1heF9ibG9jayk7Ci0JCXJsKys7Ci0JfQotCWlmIChpbml0aWFsaXplZF9zaXpl
IDwgc2l6ZSkgewotaW5pdGlhbGl6ZToKLQkJbWVtc2V0KGFsX3N0YXJ0ICsgaW5pdGlhbGl6ZWRf
c2l6ZSwgMCwgc2l6ZSAtIGluaXRpYWxpemVkX3NpemUpOwotCX0KLWRvbmU6Ci0JdXBfcmVhZCgm
cnVubGlzdC0+bG9jayk7Ci0JcmV0dXJuIGVycjsKLWRvX2ZpbmFsOgotCWlmIChhbCA8IGFsX2Vu
ZCkgewotCQkvKgotCQkgKiBQYXJ0aWFsIGJsb2NrLgotCQkgKgotCQkgKiBOb3RlOiBUaGUgYXR0
cmlidXRlIGxpc3QgY2FuIGJlIHNtYWxsZXIgdGhhbiBpdHMgYWxsb2NhdGlvbgotCQkgKiBieSBt
dWx0aXBsZSBjbHVzdGVycy4gIFRoaXMgaGFzIGJlZW4gZW5jb3VudGVyZWQgYnkgYXQgbGVhc3QK
LQkJICogdHdvIHBlb3BsZSBydW5uaW5nIFdpbmRvd3MgWFAsIHRodXMgd2UgY2Fubm90IGRvIGFu
eQotCQkgKiB0cnVuY2F0aW9uIHNhbml0eSBjaGVja2luZyBoZXJlLiAoQUlBKQotCQkgKi8KLQkJ
bWVtY3B5KGFsLCBiaC0+Yl9kYXRhLCBhbF9lbmQgLSBhbCk7Ci0JCWJyZWxzZShiaCk7Ci0JCWlm
IChpbml0aWFsaXplZF9zaXplIDwgc2l6ZSkKLQkJCWdvdG8gaW5pdGlhbGl6ZTsKLQkJZ290byBk
b25lOwotCX0KLQlicmVsc2UoYmgpOwotCS8qIFJlYWwgb3ZlcmZsb3chICovCi0JbnRmc19lcnJv
cihzYiwgIkF0dHJpYnV0ZSBsaXN0IGJ1ZmZlciBvdmVyZmxvdy4gUmVhZCBhdHRyaWJ1dGUgbGlz
dCAiCi0JCQkiaXMgdHJ1bmNhdGVkLiIpOwotZXJyX291dDoKLQllcnIgPSAtRUlPOwotCWdvdG8g
ZG9uZTsKLX0KLQotLyoqCi0gKiBudGZzX2V4dGVybmFsX2F0dHJfZmluZCAtIGZpbmQgYW4gYXR0
cmlidXRlIGluIHRoZSBhdHRyaWJ1dGUgbGlzdCBvZiBhbiBpbm9kZQotICogQHR5cGU6CWF0dHJp
YnV0ZSB0eXBlIHRvIGZpbmQKLSAqIEBuYW1lOglhdHRyaWJ1dGUgbmFtZSB0byBmaW5kIChvcHRp
b25hbCwgaS5lLiBOVUxMIG1lYW5zIGRvbid0IGNhcmUpCi0gKiBAbmFtZV9sZW46CWF0dHJpYnV0
ZSBuYW1lIGxlbmd0aCAob25seSBuZWVkZWQgaWYgQG5hbWUgcHJlc2VudCkKLSAqIEBpYzoJCUlH
Tk9SRV9DQVNFIG9yIENBU0VfU0VOU0lUSVZFIChpZ25vcmVkIGlmIEBuYW1lIG5vdCBwcmVzZW50
KQotICogQGxvd2VzdF92Y246CWxvd2VzdCB2Y24gdG8gZmluZCAob3B0aW9uYWwsIG5vbi1yZXNp
ZGVudCBhdHRyaWJ1dGVzIG9ubHkpCi0gKiBAdmFsOglhdHRyaWJ1dGUgdmFsdWUgdG8gZmluZCAo
b3B0aW9uYWwsIHJlc2lkZW50IGF0dHJpYnV0ZXMgb25seSkKLSAqIEB2YWxfbGVuOglhdHRyaWJ1
dGUgdmFsdWUgbGVuZ3RoCi0gKiBAY3R4OglzZWFyY2ggY29udGV4dCB3aXRoIG1mdCByZWNvcmQg
YW5kIGF0dHJpYnV0ZSB0byBzZWFyY2ggZnJvbQotICoKLSAqIFlvdSBzaG91bGQgbm90IG5lZWQg
dG8gY2FsbCB0aGlzIGZ1bmN0aW9uIGRpcmVjdGx5LiAgVXNlIG50ZnNfYXR0cl9sb29rdXAoKQot
ICogaW5zdGVhZC4KLSAqCi0gKiBGaW5kIGFuIGF0dHJpYnV0ZSBieSBzZWFyY2hpbmcgdGhlIGF0
dHJpYnV0ZSBsaXN0IGZvciB0aGUgY29ycmVzcG9uZGluZwotICogYXR0cmlidXRlIGxpc3QgZW50
cnkuICBIYXZpbmcgZm91bmQgdGhlIGVudHJ5LCBtYXAgdGhlIG1mdCByZWNvcmQgaWYgdGhlCi0g
KiBhdHRyaWJ1dGUgaXMgaW4gYSBkaWZmZXJlbnQgbWZ0IHJlY29yZC9pbm9kZSwgbnRmc19hdHRy
X2ZpbmQoKSB0aGUgYXR0cmlidXRlCi0gKiBpbiB0aGVyZSBhbmQgcmV0dXJuIGl0LgotICoKLSAq
IE9uIGZpcnN0IHNlYXJjaCBAY3R4LT5udGZzX2lubyBtdXN0IGJlIHRoZSBiYXNlIG1mdCByZWNv
cmQgYW5kIEBjdHggbXVzdAotICogaGF2ZSBiZWVuIG9idGFpbmVkIGZyb20gYSBjYWxsIHRvIG50
ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eCgpLiAgT24gc3Vic2VxdWVudAotICogY2FsbHMgQGN0eC0+
bnRmc19pbm8gY2FuIGJlIGFueSBleHRlbnQgaW5vZGUsIHRvbyAoQGN0eC0+YmFzZV9udGZzX2lu
byBpcwotICogdGhlbiB0aGUgYmFzZSBpbm9kZSkuCi0gKgotICogQWZ0ZXIgZmluaXNoaW5nIHdp
dGggdGhlIGF0dHJpYnV0ZS9tZnQgcmVjb3JkIHlvdSBuZWVkIHRvIGNhbGwKLSAqIG50ZnNfYXR0
cl9wdXRfc2VhcmNoX2N0eCgpIHRvIGNsZWFudXAgdGhlIHNlYXJjaCBjb250ZXh0ICh1bm1hcHBp
bmcgYW55Ci0gKiBtYXBwZWQgaW5vZGVzLCBldGMpLgotICoKLSAqIElmIHRoZSBhdHRyaWJ1dGUg
aXMgZm91bmQsIG50ZnNfZXh0ZXJuYWxfYXR0cl9maW5kKCkgcmV0dXJucyAwIGFuZAotICogQGN0
eC0+YXR0ciB3aWxsIHBvaW50IHRvIHRoZSBmb3VuZCBhdHRyaWJ1dGUuICBAY3R4LT5tcmVjIHdp
bGwgcG9pbnQgdG8gdGhlCi0gKiBtZnQgcmVjb3JkIGluIHdoaWNoIEBjdHgtPmF0dHIgaXMgbG9j
YXRlZCBhbmQgQGN0eC0+YWxfZW50cnkgd2lsbCBwb2ludCB0bwotICogdGhlIGF0dHJpYnV0ZSBs
aXN0IGVudHJ5IGZvciB0aGUgYXR0cmlidXRlLgotICoKLSAqIElmIHRoZSBhdHRyaWJ1dGUgaXMg
bm90IGZvdW5kLCBudGZzX2V4dGVybmFsX2F0dHJfZmluZCgpIHJldHVybnMgLUVOT0VOVCBhbmQK
LSAqIEBjdHgtPmF0dHIgd2lsbCBwb2ludCB0byB0aGUgYXR0cmlidXRlIGluIHRoZSBiYXNlIG1m
dCByZWNvcmQgYmVmb3JlIHdoaWNoCi0gKiB0aGUgYXR0cmlidXRlIGJlaW5nIHNlYXJjaGVkIGZv
ciB3b3VsZCBuZWVkIHRvIGJlIGluc2VydGVkIGlmIHN1Y2ggYW4gYWN0aW9uCi0gKiB3ZXJlIHRv
IGJlIGRlc2lyZWQuICBAY3R4LT5tcmVjIHdpbGwgcG9pbnQgdG8gdGhlIG1mdCByZWNvcmQgaW4g
d2hpY2gKLSAqIEBjdHgtPmF0dHIgaXMgbG9jYXRlZCBhbmQgQGN0eC0+YWxfZW50cnkgd2lsbCBw
b2ludCB0byB0aGUgYXR0cmlidXRlIGxpc3QKLSAqIGVudHJ5IG9mIHRoZSBhdHRyaWJ1dGUgYmVm
b3JlIHdoaWNoIHRoZSBhdHRyaWJ1dGUgYmVpbmcgc2VhcmNoZWQgZm9yIHdvdWxkCi0gKiBuZWVk
IHRvIGJlIGluc2VydGVkIGlmIHN1Y2ggYW4gYWN0aW9uIHdlcmUgdG8gYmUgZGVzaXJlZC4KLSAq
Ci0gKiBUaHVzIHRvIGluc2VydCB0aGUgbm90IGZvdW5kIGF0dHJpYnV0ZSwgb25lIHdhbnRzIHRv
IGFkZCB0aGUgYXR0cmlidXRlIHRvCi0gKiBAY3R4LT5tcmVjICh0aGUgYmFzZSBtZnQgcmVjb3Jk
KSBhbmQgaWYgdGhlcmUgaXMgbm90IGVub3VnaCBzcGFjZSwgdGhlCi0gKiBhdHRyaWJ1dGUgc2hv
dWxkIGJlIHBsYWNlZCBpbiBhIG5ld2x5IGFsbG9jYXRlZCBleHRlbnQgbWZ0IHJlY29yZC4gIFRo
ZQotICogYXR0cmlidXRlIGxpc3QgZW50cnkgZm9yIHRoZSBpbnNlcnRlZCBhdHRyaWJ1dGUgc2hv
dWxkIGJlIGluc2VydGVkIGluIHRoZQotICogYXR0cmlidXRlIGxpc3QgYXR0cmlidXRlIGF0IEBj
dHgtPmFsX2VudHJ5LgotICoKLSAqIE9uIGFjdHVhbCBlcnJvciwgbnRmc19leHRlcm5hbF9hdHRy
X2ZpbmQoKSByZXR1cm5zIC1FSU8uICBJbiB0aGlzIGNhc2UKLSAqIEBjdHgtPmF0dHIgaXMgdW5k
ZWZpbmVkIGFuZCBpbiBwYXJ0aWN1bGFyIGRvIG5vdCByZWx5IG9uIGl0IG5vdCBjaGFuZ2luZy4K
LSAqLwotc3RhdGljIGludCBudGZzX2V4dGVybmFsX2F0dHJfZmluZChjb25zdCBBVFRSX1RZUEUg
dHlwZSwKLQkJY29uc3QgbnRmc2NoYXIgKm5hbWUsIGNvbnN0IHUzMiBuYW1lX2xlbiwKLQkJY29u
c3QgSUdOT1JFX0NBU0VfQk9PTCBpYywgY29uc3QgVkNOIGxvd2VzdF92Y24sCi0JCWNvbnN0IHU4
ICp2YWwsIGNvbnN0IHUzMiB2YWxfbGVuLCBudGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4KQotewot
CW50ZnNfaW5vZGUgKmJhc2VfbmksICpuaTsKLQludGZzX3ZvbHVtZSAqdm9sOwotCUFUVFJfTElT
VF9FTlRSWSAqYWxfZW50cnksICpuZXh0X2FsX2VudHJ5OwotCXU4ICphbF9zdGFydCwgKmFsX2Vu
ZDsKLQlBVFRSX1JFQ09SRCAqYTsKLQludGZzY2hhciAqYWxfbmFtZTsKLQl1MzIgYWxfbmFtZV9s
ZW47Ci0JaW50IGVyciA9IDA7Ci0Jc3RhdGljIGNvbnN0IGNoYXIgKmVzID0gIiBVbm1vdW50IGFu
ZCBydW4gY2hrZHNrLiI7Ci0KLQluaSA9IGN0eC0+bnRmc19pbm87Ci0JYmFzZV9uaSA9IGN0eC0+
YmFzZV9udGZzX2lubzsKLQludGZzX2RlYnVnKCJFbnRlcmluZyBmb3IgaW5vZGUgMHglbHgsIHR5
cGUgMHgleC4iLCBuaS0+bWZ0X25vLCB0eXBlKTsKLQlpZiAoIWJhc2VfbmkpIHsKLQkJLyogRmly
c3QgY2FsbCBoYXBwZW5zIHdpdGggdGhlIGJhc2UgbWZ0IHJlY29yZC4gKi8KLQkJYmFzZV9uaSA9
IGN0eC0+YmFzZV9udGZzX2lubyA9IGN0eC0+bnRmc19pbm87Ci0JCWN0eC0+YmFzZV9tcmVjID0g
Y3R4LT5tcmVjOwotCX0KLQlpZiAobmkgPT0gYmFzZV9uaSkKLQkJY3R4LT5iYXNlX2F0dHIgPSBj
dHgtPmF0dHI7Ci0JaWYgKHR5cGUgPT0gQVRfRU5EKQotCQlnb3RvIG5vdF9mb3VuZDsKLQl2b2wg
PSBiYXNlX25pLT52b2w7Ci0JYWxfc3RhcnQgPSBiYXNlX25pLT5hdHRyX2xpc3Q7Ci0JYWxfZW5k
ID0gYWxfc3RhcnQgKyBiYXNlX25pLT5hdHRyX2xpc3Rfc2l6ZTsKLQlpZiAoIWN0eC0+YWxfZW50
cnkpCi0JCWN0eC0+YWxfZW50cnkgPSAoQVRUUl9MSVNUX0VOVFJZKilhbF9zdGFydDsKLQkvKgot
CSAqIEl0ZXJhdGUgb3ZlciBlbnRyaWVzIGluIGF0dHJpYnV0ZSBsaXN0IHN0YXJ0aW5nIGF0IEBj
dHgtPmFsX2VudHJ5LAotCSAqIG9yIHRoZSBlbnRyeSBmb2xsb3dpbmcgdGhhdCwgaWYgQGN0eC0+
aXNfZmlyc3QgaXMgJ3RydWUnLgotCSAqLwotCWlmIChjdHgtPmlzX2ZpcnN0KSB7Ci0JCWFsX2Vu
dHJ5ID0gY3R4LT5hbF9lbnRyeTsKLQkJY3R4LT5pc19maXJzdCA9IGZhbHNlOwotCX0gZWxzZQot
CQlhbF9lbnRyeSA9IChBVFRSX0xJU1RfRU5UUlkqKSgodTgqKWN0eC0+YWxfZW50cnkgKwotCQkJ
CWxlMTZfdG9fY3B1KGN0eC0+YWxfZW50cnktPmxlbmd0aCkpOwotCWZvciAoOzsgYWxfZW50cnkg
PSBuZXh0X2FsX2VudHJ5KSB7Ci0JCS8qIE91dCBvZiBib3VuZHMgY2hlY2suICovCi0JCWlmICgo
dTgqKWFsX2VudHJ5IDwgYmFzZV9uaS0+YXR0cl9saXN0IHx8Ci0JCQkJKHU4KilhbF9lbnRyeSA+
IGFsX2VuZCkKLQkJCWJyZWFrOwkvKiBJbm9kZSBpcyBjb3JydXB0LiAqLwotCQljdHgtPmFsX2Vu
dHJ5ID0gYWxfZW50cnk7Ci0JCS8qIENhdGNoIHRoZSBlbmQgb2YgdGhlIGF0dHJpYnV0ZSBsaXN0
LiAqLwotCQlpZiAoKHU4KilhbF9lbnRyeSA9PSBhbF9lbmQpCi0JCQlnb3RvIG5vdF9mb3VuZDsK
LQkJaWYgKCFhbF9lbnRyeS0+bGVuZ3RoKQotCQkJYnJlYWs7Ci0JCWlmICgodTgqKWFsX2VudHJ5
ICsgNiA+IGFsX2VuZCB8fCAodTgqKWFsX2VudHJ5ICsKLQkJCQlsZTE2X3RvX2NwdShhbF9lbnRy
eS0+bGVuZ3RoKSA+IGFsX2VuZCkKLQkJCWJyZWFrOwotCQluZXh0X2FsX2VudHJ5ID0gKEFUVFJf
TElTVF9FTlRSWSopKCh1OCopYWxfZW50cnkgKwotCQkJCWxlMTZfdG9fY3B1KGFsX2VudHJ5LT5s
ZW5ndGgpKTsKLQkJaWYgKGxlMzJfdG9fY3B1KGFsX2VudHJ5LT50eXBlKSA+IGxlMzJfdG9fY3B1
KHR5cGUpKQotCQkJZ290byBub3RfZm91bmQ7Ci0JCWlmICh0eXBlICE9IGFsX2VudHJ5LT50eXBl
KQotCQkJY29udGludWU7Ci0JCS8qCi0JCSAqIElmIEBuYW1lIGlzIHByZXNlbnQsIGNvbXBhcmUg
dGhlIHR3byBuYW1lcy4gIElmIEBuYW1lIGlzCi0JCSAqIG1pc3NpbmcsIGFzc3VtZSB3ZSB3YW50
IGFuIHVubmFtZWQgYXR0cmlidXRlLgotCQkgKi8KLQkJYWxfbmFtZV9sZW4gPSBhbF9lbnRyeS0+
bmFtZV9sZW5ndGg7Ci0JCWFsX25hbWUgPSAobnRmc2NoYXIqKSgodTgqKWFsX2VudHJ5ICsgYWxf
ZW50cnktPm5hbWVfb2Zmc2V0KTsKLQkJaWYgKCFuYW1lKSB7Ci0JCQlpZiAoYWxfbmFtZV9sZW4p
Ci0JCQkJZ290byBub3RfZm91bmQ7Ci0JCX0gZWxzZSBpZiAoIW50ZnNfYXJlX25hbWVzX2VxdWFs
KGFsX25hbWUsIGFsX25hbWVfbGVuLCBuYW1lLAotCQkJCW5hbWVfbGVuLCBpYywgdm9sLT51cGNh
c2UsIHZvbC0+dXBjYXNlX2xlbikpIHsKLQkJCXJlZ2lzdGVyIGludCByYzsKLQotCQkJcmMgPSBu
dGZzX2NvbGxhdGVfbmFtZXMobmFtZSwgbmFtZV9sZW4sIGFsX25hbWUsCi0JCQkJCWFsX25hbWVf
bGVuLCAxLCBJR05PUkVfQ0FTRSwKLQkJCQkJdm9sLT51cGNhc2UsIHZvbC0+dXBjYXNlX2xlbik7
Ci0JCQkvKgotCQkJICogSWYgQG5hbWUgY29sbGF0ZXMgYmVmb3JlIGFsX25hbWUsIHRoZXJlIGlz
IG5vCi0JCQkgKiBtYXRjaGluZyBhdHRyaWJ1dGUuCi0JCQkgKi8KLQkJCWlmIChyYyA9PSAtMSkK
LQkJCQlnb3RvIG5vdF9mb3VuZDsKLQkJCS8qIElmIHRoZSBzdHJpbmdzIGFyZSBub3QgZXF1YWws
IGNvbnRpbnVlIHNlYXJjaC4gKi8KLQkJCWlmIChyYykKLQkJCQljb250aW51ZTsKLQkJCS8qCi0J
CQkgKiBGSVhNRTogUmV2ZXJzZSBlbmdpbmVlcmluZyBzaG93ZWQgMCwgSUdOT1JFX0NBU0UgYnV0
Ci0JCQkgKiB0aGF0IGlzIGluY29uc2lzdGVudCB3aXRoIG50ZnNfYXR0cl9maW5kKCkuICBUaGUK
LQkJCSAqIHN1YnNlcXVlbnQgcmMgY2hlY2tzIHdlcmUgYWxzbyBkaWZmZXJlbnQuICBQZXJoYXBz
IEkKLQkJCSAqIG1hZGUgYSBtaXN0YWtlIGluIG9uZSBvZiB0aGUgdHdvLiAgTmVlZCB0byByZWNo
ZWNrCi0JCQkgKiB3aGljaCBpcyBjb3JyZWN0IG9yIGF0IGxlYXN0IHNlZSB3aGF0IGlzIGdvaW5n
IG9uLi4uCi0JCQkgKiAoQUlBKQotCQkJICovCi0JCQlyYyA9IG50ZnNfY29sbGF0ZV9uYW1lcyhu
YW1lLCBuYW1lX2xlbiwgYWxfbmFtZSwKLQkJCQkJYWxfbmFtZV9sZW4sIDEsIENBU0VfU0VOU0lU
SVZFLAotCQkJCQl2b2wtPnVwY2FzZSwgdm9sLT51cGNhc2VfbGVuKTsKLQkJCWlmIChyYyA9PSAt
MSkKLQkJCQlnb3RvIG5vdF9mb3VuZDsKLQkJCWlmIChyYykKLQkJCQljb250aW51ZTsKLQkJfQot
CQkvKgotCQkgKiBUaGUgbmFtZXMgbWF0Y2ggb3IgQG5hbWUgbm90IHByZXNlbnQgYW5kIGF0dHJp
YnV0ZSBpcwotCQkgKiB1bm5hbWVkLiAgTm93IGNoZWNrIEBsb3dlc3RfdmNuLiAgQ29udGludWUg
c2VhcmNoIGlmIHRoZQotCQkgKiBuZXh0IGF0dHJpYnV0ZSBsaXN0IGVudHJ5IHN0aWxsIGZpdHMg
QGxvd2VzdF92Y24uICBPdGhlcndpc2UKLQkJICogd2UgaGF2ZSByZWFjaGVkIHRoZSByaWdodCBv
bmUgb3IgdGhlIHNlYXJjaCBoYXMgZmFpbGVkLgotCQkgKi8KLQkJaWYgKGxvd2VzdF92Y24gJiYg
KHU4KiluZXh0X2FsX2VudHJ5ID49IGFsX3N0YXJ0CSAgICAmJgotCQkJCSh1OCopbmV4dF9hbF9l
bnRyeSArIDYgPCBhbF9lbmQJCSAgICAmJgotCQkJCSh1OCopbmV4dF9hbF9lbnRyeSArIGxlMTZf
dG9fY3B1KAotCQkJCQluZXh0X2FsX2VudHJ5LT5sZW5ndGgpIDw9IGFsX2VuZCAgICAmJgotCQkJ
CXNsZTY0X3RvX2NwdShuZXh0X2FsX2VudHJ5LT5sb3dlc3RfdmNuKSA8PQotCQkJCQlsb3dlc3Rf
dmNuCQkJICAgICYmCi0JCQkJbmV4dF9hbF9lbnRyeS0+dHlwZSA9PSBhbF9lbnRyeS0+dHlwZQkg
ICAgJiYKLQkJCQluZXh0X2FsX2VudHJ5LT5uYW1lX2xlbmd0aCA9PSBhbF9uYW1lX2xlbiAgICYm
Ci0JCQkJbnRmc19hcmVfbmFtZXNfZXF1YWwoKG50ZnNjaGFyKikoKHU4KikKLQkJCQkJbmV4dF9h
bF9lbnRyeSArCi0JCQkJCW5leHRfYWxfZW50cnktPm5hbWVfb2Zmc2V0KSwKLQkJCQkJbmV4dF9h
bF9lbnRyeS0+bmFtZV9sZW5ndGgsCi0JCQkJCWFsX25hbWUsIGFsX25hbWVfbGVuLCBDQVNFX1NF
TlNJVElWRSwKLQkJCQkJdm9sLT51cGNhc2UsIHZvbC0+dXBjYXNlX2xlbikpCi0JCQljb250aW51
ZTsKLQkJaWYgKE1SRUZfTEUoYWxfZW50cnktPm1mdF9yZWZlcmVuY2UpID09IG5pLT5tZnRfbm8p
IHsKLQkJCWlmIChNU0VRTk9fTEUoYWxfZW50cnktPm1mdF9yZWZlcmVuY2UpICE9IG5pLT5zZXFf
bm8pIHsKLQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJGb3VuZCBzdGFsZSBtZnQgIgotCQkJCQkJ
InJlZmVyZW5jZSBpbiBhdHRyaWJ1dGUgbGlzdCAiCi0JCQkJCQkib2YgYmFzZSBpbm9kZSAweCVs
eC4lcyIsCi0JCQkJCQliYXNlX25pLT5tZnRfbm8sIGVzKTsKLQkJCQllcnIgPSAtRUlPOwotCQkJ
CWJyZWFrOwotCQkJfQotCQl9IGVsc2UgeyAvKiBNZnQgcmVmZXJlbmNlcyBkbyBub3QgbWF0Y2gu
ICovCi0JCQkvKiBJZiB0aGVyZSBpcyBhIG1hcHBlZCByZWNvcmQgdW5tYXAgaXQgZmlyc3QuICov
Ci0JCQlpZiAobmkgIT0gYmFzZV9uaSkKLQkJCQl1bm1hcF9leHRlbnRfbWZ0X3JlY29yZChuaSk7
Ci0JCQkvKiBEbyB3ZSB3YW50IHRoZSBiYXNlIHJlY29yZCBiYWNrPyAqLwotCQkJaWYgKE1SRUZf
TEUoYWxfZW50cnktPm1mdF9yZWZlcmVuY2UpID09Ci0JCQkJCWJhc2VfbmktPm1mdF9ubykgewot
CQkJCW5pID0gY3R4LT5udGZzX2lubyA9IGJhc2Vfbmk7Ci0JCQkJY3R4LT5tcmVjID0gY3R4LT5i
YXNlX21yZWM7Ci0JCQl9IGVsc2UgewotCQkJCS8qIFdlIHdhbnQgYW4gZXh0ZW50IHJlY29yZC4g
Ki8KLQkJCQljdHgtPm1yZWMgPSBtYXBfZXh0ZW50X21mdF9yZWNvcmQoYmFzZV9uaSwKLQkJCQkJ
CWxlNjRfdG9fY3B1KAotCQkJCQkJYWxfZW50cnktPm1mdF9yZWZlcmVuY2UpLCAmbmkpOwotCQkJ
CWlmIChJU19FUlIoY3R4LT5tcmVjKSkgewotCQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWls
ZWQgdG8gbWFwICIKLQkJCQkJCQkiZXh0ZW50IG1mdCByZWNvcmQgIgotCQkJCQkJCSIweCVseCBv
ZiBiYXNlIGlub2RlICIKLQkJCQkJCQkiMHglbHguJXMiLAotCQkJCQkJCU1SRUZfTEUoYWxfZW50
cnktPgotCQkJCQkJCW1mdF9yZWZlcmVuY2UpLAotCQkJCQkJCWJhc2VfbmktPm1mdF9ubywgZXMp
OwotCQkJCQllcnIgPSBQVFJfRVJSKGN0eC0+bXJlYyk7Ci0JCQkJCWlmIChlcnIgPT0gLUVOT0VO
VCkKLQkJCQkJCWVyciA9IC1FSU87Ci0JCQkJCS8qIENhdXNlIEBjdHggdG8gYmUgc2FuaXRpemVk
IGJlbG93LiAqLwotCQkJCQluaSA9IE5VTEw7Ci0JCQkJCWJyZWFrOwotCQkJCX0KLQkJCQljdHgt
Pm50ZnNfaW5vID0gbmk7Ci0JCQl9Ci0JCQljdHgtPmF0dHIgPSAoQVRUUl9SRUNPUkQqKSgodTgq
KWN0eC0+bXJlYyArCi0JCQkJCWxlMTZfdG9fY3B1KGN0eC0+bXJlYy0+YXR0cnNfb2Zmc2V0KSk7
Ci0JCX0KLQkJLyoKLQkJICogY3R4LT52ZnNfaW5vLCBjdHgtPm1yZWMsIGFuZCBjdHgtPmF0dHIg
bm93IHBvaW50IHRvIHRoZQotCQkgKiBtZnQgcmVjb3JkIGNvbnRhaW5pbmcgdGhlIGF0dHJpYnV0
ZSByZXByZXNlbnRlZCBieSB0aGUKLQkJICogY3VycmVudCBhbF9lbnRyeS4KLQkJICovCi0JCS8q
Ci0JCSAqIFdlIGNvdWxkIGNhbGwgaW50byBudGZzX2F0dHJfZmluZCgpIHRvIGZpbmQgdGhlIHJp
Z2h0Ci0JCSAqIGF0dHJpYnV0ZSBpbiB0aGlzIG1mdCByZWNvcmQgYnV0IHRoaXMgd291bGQgYmUg
bGVzcwotCQkgKiBlZmZpY2llbnQgYW5kIG5vdCBxdWl0ZSBhY2N1cmF0ZSBhcyBudGZzX2F0dHJf
ZmluZCgpIGlnbm9yZXMKLQkJICogdGhlIGF0dHJpYnV0ZSBpbnN0YW5jZSBudW1iZXJzIGZvciBl
eGFtcGxlIHdoaWNoIGJlY29tZQotCQkgKiBpbXBvcnRhbnQgd2hlbiBvbmUgcGxheXMgd2l0aCBh
dHRyaWJ1dGUgbGlzdHMuICBBbHNvLAotCQkgKiBiZWNhdXNlIGEgcHJvcGVyIG1hdGNoIGhhcyBi
ZWVuIGZvdW5kIGluIHRoZSBhdHRyaWJ1dGUgbGlzdAotCQkgKiBlbnRyeSBhYm92ZSwgdGhlIGNv
bXBhcmlzb24gY2FuIG5vdyBiZSBvcHRpbWl6ZWQuICBTbyBpdCBpcwotCQkgKiB3b3J0aCByZS1p
bXBsZW1lbnRpbmcgYSBzaW1wbGlmaWVkIG50ZnNfYXR0cl9maW5kKCkgaGVyZS4KLQkJICovCi0J
CWEgPSBjdHgtPmF0dHI7Ci0JCS8qCi0JCSAqIFVzZSBhIG1hbnVhbCBsb29wIHNvIHdlIGNhbiBz
dGlsbCB1c2UgYnJlYWsgYW5kIGNvbnRpbnVlCi0JCSAqIHdpdGggdGhlIHNhbWUgbWVhbmluZ3Mg
YXMgYWJvdmUuCi0JCSAqLwotZG9fbmV4dF9hdHRyX2xvb3A6Ci0JCWlmICgodTgqKWEgPCAodTgq
KWN0eC0+bXJlYyB8fCAodTgqKWEgPiAodTgqKWN0eC0+bXJlYyArCi0JCQkJbGUzMl90b19jcHUo
Y3R4LT5tcmVjLT5ieXRlc19hbGxvY2F0ZWQpKQotCQkJYnJlYWs7Ci0JCWlmIChhLT50eXBlID09
IEFUX0VORCkKLQkJCWJyZWFrOwotCQlpZiAoIWEtPmxlbmd0aCkKLQkJCWJyZWFrOwotCQlpZiAo
YWxfZW50cnktPmluc3RhbmNlICE9IGEtPmluc3RhbmNlKQotCQkJZ290byBkb19uZXh0X2F0dHI7
Ci0JCS8qCi0JCSAqIElmIHRoZSB0eXBlIGFuZC9vciB0aGUgbmFtZSBhcmUgbWlzbWF0Y2hlZCBi
ZXR3ZWVuIHRoZQotCQkgKiBhdHRyaWJ1dGUgbGlzdCBlbnRyeSBhbmQgdGhlIGF0dHJpYnV0ZSBy
ZWNvcmQsIHRoZXJlIGlzCi0JCSAqIGNvcnJ1cHRpb24gc28gd2UgYnJlYWsgYW5kIHJldHVybiBl
cnJvciBFSU8uCi0JCSAqLwotCQlpZiAoYWxfZW50cnktPnR5cGUgIT0gYS0+dHlwZSkKLQkJCWJy
ZWFrOwotCQlpZiAoIW50ZnNfYXJlX25hbWVzX2VxdWFsKChudGZzY2hhciopKCh1OCopYSArCi0J
CQkJbGUxNl90b19jcHUoYS0+bmFtZV9vZmZzZXQpKSwgYS0+bmFtZV9sZW5ndGgsCi0JCQkJYWxf
bmFtZSwgYWxfbmFtZV9sZW4sIENBU0VfU0VOU0lUSVZFLAotCQkJCXZvbC0+dXBjYXNlLCB2b2wt
PnVwY2FzZV9sZW4pKQotCQkJYnJlYWs7Ci0JCWN0eC0+YXR0ciA9IGE7Ci0JCS8qCi0JCSAqIElm
IG5vIEB2YWwgc3BlY2lmaWVkIG9yIEB2YWwgc3BlY2lmaWVkIGFuZCBpdCBtYXRjaGVzLCB3ZQot
CQkgKiBoYXZlIGZvdW5kIGl0IQotCQkgKi8KLQkJaWYgKCF2YWwgfHwgKCFhLT5ub25fcmVzaWRl
bnQgJiYgbGUzMl90b19jcHUoCi0JCQkJYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpID09
IHZhbF9sZW4gJiYKLQkJCQkhbWVtY21wKCh1OCopYSArCi0JCQkJbGUxNl90b19jcHUoYS0+ZGF0
YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpLAotCQkJCXZhbCwgdmFsX2xlbikpKSB7Ci0JCQludGZz
X2RlYnVnKCJEb25lLCBmb3VuZC4iKTsKLQkJCXJldHVybiAwOwotCQl9Ci1kb19uZXh0X2F0dHI6
Ci0JCS8qIFByb2NlZWQgdG8gdGhlIG5leHQgYXR0cmlidXRlIGluIHRoZSBjdXJyZW50IG1mdCBy
ZWNvcmQuICovCi0JCWEgPSAoQVRUUl9SRUNPUkQqKSgodTgqKWEgKyBsZTMyX3RvX2NwdShhLT5s
ZW5ndGgpKTsKLQkJZ290byBkb19uZXh0X2F0dHJfbG9vcDsKLQl9Ci0JaWYgKCFlcnIpIHsKLQkJ
bnRmc19lcnJvcih2b2wtPnNiLCAiQmFzZSBpbm9kZSAweCVseCBjb250YWlucyBjb3JydXB0ICIK
LQkJCQkiYXR0cmlidXRlIGxpc3QgYXR0cmlidXRlLiVzIiwgYmFzZV9uaS0+bWZ0X25vLAotCQkJ
CWVzKTsKLQkJZXJyID0gLUVJTzsKLQl9Ci0JaWYgKG5pICE9IGJhc2VfbmkpIHsKLQkJaWYgKG5p
KQotCQkJdW5tYXBfZXh0ZW50X21mdF9yZWNvcmQobmkpOwotCQljdHgtPm50ZnNfaW5vID0gYmFz
ZV9uaTsKLQkJY3R4LT5tcmVjID0gY3R4LT5iYXNlX21yZWM7Ci0JCWN0eC0+YXR0ciA9IGN0eC0+
YmFzZV9hdHRyOwotCX0KLQlpZiAoZXJyICE9IC1FTk9NRU0pCi0JCU5Wb2xTZXRFcnJvcnModm9s
KTsKLQlyZXR1cm4gZXJyOwotbm90X2ZvdW5kOgotCS8qCi0JICogSWYgd2Ugd2VyZSBsb29raW5n
IGZvciBBVF9FTkQsIHdlIHJlc2V0IHRoZSBzZWFyY2ggY29udGV4dCBAY3R4IGFuZAotCSAqIHVz
ZSBudGZzX2F0dHJfZmluZCgpIHRvIHNlZWsgdG8gdGhlIGVuZCBvZiB0aGUgYmFzZSBtZnQgcmVj
b3JkLgotCSAqLwotCWlmICh0eXBlID09IEFUX0VORCkgewotCQludGZzX2F0dHJfcmVpbml0X3Nl
YXJjaF9jdHgoY3R4KTsKLQkJcmV0dXJuIG50ZnNfYXR0cl9maW5kKEFUX0VORCwgbmFtZSwgbmFt
ZV9sZW4sIGljLCB2YWwsIHZhbF9sZW4sCi0JCQkJY3R4KTsKLQl9Ci0JLyoKLQkgKiBUaGUgYXR0
cmlidXRlIHdhcyBub3QgZm91bmQuICBCZWZvcmUgd2UgcmV0dXJuLCB3ZSB3YW50IHRvIGVuc3Vy
ZQotCSAqIEBjdHgtPm1yZWMgYW5kIEBjdHgtPmF0dHIgaW5kaWNhdGUgdGhlIHBvc2l0aW9uIGF0
IHdoaWNoIHRoZQotCSAqIGF0dHJpYnV0ZSBzaG91bGQgYmUgaW5zZXJ0ZWQgaW4gdGhlIGJhc2Ug
bWZ0IHJlY29yZC4gIFNpbmNlIHdlIGFsc28KLQkgKiB3YW50IHRvIHByZXNlcnZlIEBjdHgtPmFs
X2VudHJ5IHdlIGNhbm5vdCByZWluaXRpYWxpemUgdGhlIHNlYXJjaAotCSAqIGNvbnRleHQgdXNp
bmcgbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4KCkgYXMgdGhpcyB3b3VsZCBzZXQKLQkgKiBA
Y3R4LT5hbF9lbnRyeSB0byBOVUxMLiAgVGh1cyB3ZSBkbyB0aGUgbmVjZXNzYXJ5IGJpdHMgbWFu
dWFsbHkgKHNlZQotCSAqIG50ZnNfYXR0cl9pbml0X3NlYXJjaF9jdHgoKSBiZWxvdykuICBOb3Rl
LCB3ZSBfb25seV8gcHJlc2VydmUKLQkgKiBAY3R4LT5hbF9lbnRyeSBhcyB0aGUgcmVtYWluaW5n
IGZpZWxkcyAoYmFzZV8qKSBhcmUgaWRlbnRpY2FsIHRvCi0JICogdGhlaXIgbm9uIGJhc2VfIGNv
dW50ZXJwYXJ0cyBhbmQgd2UgY2Fubm90IHNldCBAY3R4LT5iYXNlX2F0dHIKLQkgKiBjb3JyZWN0
bHkgeWV0IGFzIHdlIGRvIG5vdCBrbm93IHdoYXQgQGN0eC0+YXR0ciB3aWxsIGJlIHNldCB0byBi
eQotCSAqIHRoZSBjYWxsIHRvIG50ZnNfYXR0cl9maW5kKCkgYmVsb3cuCi0JICovCi0JaWYgKG5p
ICE9IGJhc2VfbmkpCi0JCXVubWFwX2V4dGVudF9tZnRfcmVjb3JkKG5pKTsKLQljdHgtPm1yZWMg
PSBjdHgtPmJhc2VfbXJlYzsKLQljdHgtPmF0dHIgPSAoQVRUUl9SRUNPUkQqKSgodTgqKWN0eC0+
bXJlYyArCi0JCQlsZTE2X3RvX2NwdShjdHgtPm1yZWMtPmF0dHJzX29mZnNldCkpOwotCWN0eC0+
aXNfZmlyc3QgPSB0cnVlOwotCWN0eC0+bnRmc19pbm8gPSBiYXNlX25pOwotCWN0eC0+YmFzZV9u
dGZzX2lubyA9IE5VTEw7Ci0JY3R4LT5iYXNlX21yZWMgPSBOVUxMOwotCWN0eC0+YmFzZV9hdHRy
ID0gTlVMTDsKLQkvKgotCSAqIEluIGNhc2UgdGhlcmUgYXJlIG11bHRpcGxlIG1hdGNoZXMgaW4g
dGhlIGJhc2UgbWZ0IHJlY29yZCwgbmVlZCB0bwotCSAqIGtlZXAgZW51bWVyYXRpbmcgdW50aWwg
d2UgZ2V0IGFuIGF0dHJpYnV0ZSBub3QgZm91bmQgcmVzcG9uc2UgKG9yCi0JICogYW5vdGhlciBl
cnJvciksIG90aGVyd2lzZSB3ZSB3b3VsZCBrZWVwIHJldHVybmluZyB0aGUgc2FtZSBhdHRyaWJ1
dGUKLQkgKiBvdmVyIGFuZCBvdmVyIGFnYWluIGFuZCBhbGwgcHJvZ3JhbXMgdXNpbmcgdXMgZm9y
IGVudW1lcmF0aW9uIHdvdWxkCi0JICogbG9jayB1cCBpbiBhIHRpZ2h0IGxvb3AuCi0JICovCi0J
ZG8gewotCQllcnIgPSBudGZzX2F0dHJfZmluZCh0eXBlLCBuYW1lLCBuYW1lX2xlbiwgaWMsIHZh
bCwgdmFsX2xlbiwKLQkJCQljdHgpOwotCX0gd2hpbGUgKCFlcnIpOwotCW50ZnNfZGVidWcoIkRv
bmUsIG5vdCBmb3VuZC4iKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfYXR0cl9s
b29rdXAgLSBmaW5kIGFuIGF0dHJpYnV0ZSBpbiBhbiBudGZzIGlub2RlCi0gKiBAdHlwZToJYXR0
cmlidXRlIHR5cGUgdG8gZmluZAotICogQG5hbWU6CWF0dHJpYnV0ZSBuYW1lIHRvIGZpbmQgKG9w
dGlvbmFsLCBpLmUuIE5VTEwgbWVhbnMgZG9uJ3QgY2FyZSkKLSAqIEBuYW1lX2xlbjoJYXR0cmli
dXRlIG5hbWUgbGVuZ3RoIChvbmx5IG5lZWRlZCBpZiBAbmFtZSBwcmVzZW50KQotICogQGljOgkJ
SUdOT1JFX0NBU0Ugb3IgQ0FTRV9TRU5TSVRJVkUgKGlnbm9yZWQgaWYgQG5hbWUgbm90IHByZXNl
bnQpCi0gKiBAbG93ZXN0X3ZjbjoJbG93ZXN0IHZjbiB0byBmaW5kIChvcHRpb25hbCwgbm9uLXJl
c2lkZW50IGF0dHJpYnV0ZXMgb25seSkKLSAqIEB2YWw6CWF0dHJpYnV0ZSB2YWx1ZSB0byBmaW5k
IChvcHRpb25hbCwgcmVzaWRlbnQgYXR0cmlidXRlcyBvbmx5KQotICogQHZhbF9sZW46CWF0dHJp
YnV0ZSB2YWx1ZSBsZW5ndGgKLSAqIEBjdHg6CXNlYXJjaCBjb250ZXh0IHdpdGggbWZ0IHJlY29y
ZCBhbmQgYXR0cmlidXRlIHRvIHNlYXJjaCBmcm9tCi0gKgotICogRmluZCBhbiBhdHRyaWJ1dGUg
aW4gYW4gbnRmcyBpbm9kZS4gIE9uIGZpcnN0IHNlYXJjaCBAY3R4LT5udGZzX2lubyBtdXN0Ci0g
KiBiZSB0aGUgYmFzZSBtZnQgcmVjb3JkIGFuZCBAY3R4IG11c3QgaGF2ZSBiZWVuIG9idGFpbmVk
IGZyb20gYSBjYWxsIHRvCi0gKiBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgoKS4KLSAqCi0gKiBU
aGlzIGZ1bmN0aW9uIHRyYW5zcGFyZW50bHkgaGFuZGxlcyBhdHRyaWJ1dGUgbGlzdHMgYW5kIEBj
dHggaXMgdXNlZCB0bwotICogY29udGludWUgc2VhcmNoZXMgd2hlcmUgdGhleSB3ZXJlIGxlZnQg
b2ZmIGF0LgotICoKLSAqIEFmdGVyIGZpbmlzaGluZyB3aXRoIHRoZSBhdHRyaWJ1dGUvbWZ0IHJl
Y29yZCB5b3UgbmVlZCB0byBjYWxsCi0gKiBudGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoKSB0byBj
bGVhbnVwIHRoZSBzZWFyY2ggY29udGV4dCAodW5tYXBwaW5nIGFueQotICogbWFwcGVkIGlub2Rl
cywgZXRjKS4KLSAqCi0gKiBSZXR1cm4gMCBpZiB0aGUgc2VhcmNoIHdhcyBzdWNjZXNzZnVsIGFu
ZCAtZXJybm8gaWYgbm90LgotICoKLSAqIFdoZW4gMCwgQGN0eC0+YXR0ciBpcyB0aGUgZm91bmQg
YXR0cmlidXRlIGFuZCBpdCBpcyBpbiBtZnQgcmVjb3JkCi0gKiBAY3R4LT5tcmVjLiAgSWYgYW4g
YXR0cmlidXRlIGxpc3QgYXR0cmlidXRlIGlzIHByZXNlbnQsIEBjdHgtPmFsX2VudHJ5IGlzCi0g
KiB0aGUgYXR0cmlidXRlIGxpc3QgZW50cnkgb2YgdGhlIGZvdW5kIGF0dHJpYnV0ZS4KLSAqCi0g
KiBXaGVuIC1FTk9FTlQsIEBjdHgtPmF0dHIgaXMgdGhlIGF0dHJpYnV0ZSB3aGljaCBjb2xsYXRl
cyBqdXN0IGFmdGVyIHRoZQotICogYXR0cmlidXRlIGJlaW5nIHNlYXJjaGVkIGZvciwgaS5lLiBp
ZiBvbmUgd2FudHMgdG8gYWRkIHRoZSBhdHRyaWJ1dGUgdG8gdGhlCi0gKiBtZnQgcmVjb3JkIHRo
aXMgaXMgdGhlIGNvcnJlY3QgcGxhY2UgdG8gaW5zZXJ0IGl0IGludG8uICBJZiBhbiBhdHRyaWJ1
dGUKLSAqIGxpc3QgYXR0cmlidXRlIGlzIHByZXNlbnQsIEBjdHgtPmFsX2VudHJ5IGlzIHRoZSBh
dHRyaWJ1dGUgbGlzdCBlbnRyeSB3aGljaAotICogY29sbGF0ZXMganVzdCBhZnRlciB0aGUgYXR0
cmlidXRlIGxpc3QgZW50cnkgb2YgdGhlIGF0dHJpYnV0ZSBiZWluZyBzZWFyY2hlZAotICogZm9y
LCBpLmUuIGlmIG9uZSB3YW50cyB0byBhZGQgdGhlIGF0dHJpYnV0ZSB0byB0aGUgbWZ0IHJlY29y
ZCB0aGlzIGlzIHRoZQotICogY29ycmVjdCBwbGFjZSB0byBpbnNlcnQgaXRzIGF0dHJpYnV0ZSBs
aXN0IGVudHJ5IGludG8uCi0gKgotICogV2hlbiAtZXJybm8gIT0gLUVOT0VOVCwgYW4gZXJyb3Ig
b2NjdXJyZWQgZHVyaW5nIHRoZSBsb29rdXAuICBAY3R4LT5hdHRyIGlzCi0gKiB0aGVuIHVuZGVm
aW5lZCBhbmQgaW4gcGFydGljdWxhciB5b3Ugc2hvdWxkIG5vdCByZWx5IG9uIGl0IG5vdCBjaGFu
Z2luZy4KLSAqLwotaW50IG50ZnNfYXR0cl9sb29rdXAoY29uc3QgQVRUUl9UWVBFIHR5cGUsIGNv
bnN0IG50ZnNjaGFyICpuYW1lLAotCQljb25zdCB1MzIgbmFtZV9sZW4sIGNvbnN0IElHTk9SRV9D
QVNFX0JPT0wgaWMsCi0JCWNvbnN0IFZDTiBsb3dlc3RfdmNuLCBjb25zdCB1OCAqdmFsLCBjb25z
dCB1MzIgdmFsX2xlbiwKLQkJbnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eCkKLXsKLQludGZzX2lu
b2RlICpiYXNlX25pOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JQlVHX09OKElTX0VS
UihjdHgtPm1yZWMpKTsKLQlpZiAoY3R4LT5iYXNlX250ZnNfaW5vKQotCQliYXNlX25pID0gY3R4
LT5iYXNlX250ZnNfaW5vOwotCWVsc2UKLQkJYmFzZV9uaSA9IGN0eC0+bnRmc19pbm87Ci0JLyog
U2FuaXR5IGNoZWNrLCBqdXN0IGZvciBkZWJ1Z2dpbmcgcmVhbGx5LiAqLwotCUJVR19PTighYmFz
ZV9uaSk7Ci0JaWYgKCFOSW5vQXR0ckxpc3QoYmFzZV9uaSkgfHwgdHlwZSA9PSBBVF9BVFRSSUJV
VEVfTElTVCkKLQkJcmV0dXJuIG50ZnNfYXR0cl9maW5kKHR5cGUsIG5hbWUsIG5hbWVfbGVuLCBp
YywgdmFsLCB2YWxfbGVuLAotCQkJCWN0eCk7Ci0JcmV0dXJuIG50ZnNfZXh0ZXJuYWxfYXR0cl9m
aW5kKHR5cGUsIG5hbWUsIG5hbWVfbGVuLCBpYywgbG93ZXN0X3ZjbiwKLQkJCXZhbCwgdmFsX2xl
biwgY3R4KTsKLX0KLQotLyoqCi0gKiBudGZzX2F0dHJfaW5pdF9zZWFyY2hfY3R4IC0gaW5pdGlh
bGl6ZSBhbiBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQKLSAqIEBjdHg6CWF0dHJpYnV0ZSBzZWFy
Y2ggY29udGV4dCB0byBpbml0aWFsaXplCi0gKiBAbmk6CQludGZzIGlub2RlIHdpdGggd2hpY2gg
dG8gaW5pdGlhbGl6ZSB0aGUgc2VhcmNoIGNvbnRleHQKLSAqIEBtcmVjOgltZnQgcmVjb3JkIHdp
dGggd2hpY2ggdG8gaW5pdGlhbGl6ZSB0aGUgc2VhcmNoIGNvbnRleHQKLSAqCi0gKiBJbml0aWFs
aXplIHRoZSBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQgQGN0eCB3aXRoIEBuaSBhbmQgQG1yZWMu
Ci0gKi8KLXN0YXRpYyBpbmxpbmUgdm9pZCBudGZzX2F0dHJfaW5pdF9zZWFyY2hfY3R4KG50ZnNf
YXR0cl9zZWFyY2hfY3R4ICpjdHgsCi0JCW50ZnNfaW5vZGUgKm5pLCBNRlRfUkVDT1JEICptcmVj
KQotewotCSpjdHggPSAobnRmc19hdHRyX3NlYXJjaF9jdHgpIHsKLQkJLm1yZWMgPSBtcmVjLAot
CQkvKiBTYW5pdHkgY2hlY2tzIGFyZSBwZXJmb3JtZWQgZWxzZXdoZXJlLiAqLwotCQkuYXR0ciA9
IChBVFRSX1JFQ09SRCopKCh1OCopbXJlYyArCi0JCQkJbGUxNl90b19jcHUobXJlYy0+YXR0cnNf
b2Zmc2V0KSksCi0JCS5pc19maXJzdCA9IHRydWUsCi0JCS5udGZzX2lubyA9IG5pLAotCX07Ci19
Ci0KLS8qKgotICogbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4IC0gcmVpbml0aWFsaXplIGFu
IGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dAotICogQGN0eDoJYXR0cmlidXRlIHNlYXJjaCBjb250
ZXh0IHRvIHJlaW5pdGlhbGl6ZQotICoKLSAqIFJlaW5pdGlhbGl6ZSB0aGUgYXR0cmlidXRlIHNl
YXJjaCBjb250ZXh0IEBjdHgsIHVubWFwcGluZyBhbiBhc3NvY2lhdGVkCi0gKiBleHRlbnQgbWZ0
IHJlY29yZCBpZiBwcmVzZW50LCBhbmQgaW5pdGlhbGl6ZSB0aGUgc2VhcmNoIGNvbnRleHQgYWdh
aW4uCi0gKgotICogVGhpcyBpcyB1c2VkIHdoZW4gYSBzZWFyY2ggZm9yIGEgbmV3IGF0dHJpYnV0
ZSBpcyBiZWluZyBzdGFydGVkIHRvIHJlc2V0Ci0gKiB0aGUgc2VhcmNoIGNvbnRleHQgdG8gdGhl
IGJlZ2lubmluZy4KLSAqLwotdm9pZCBudGZzX2F0dHJfcmVpbml0X3NlYXJjaF9jdHgobnRmc19h
dHRyX3NlYXJjaF9jdHggKmN0eCkKLXsKLQlpZiAobGlrZWx5KCFjdHgtPmJhc2VfbnRmc19pbm8p
KSB7Ci0JCS8qIE5vIGF0dHJpYnV0ZSBsaXN0LiAqLwotCQljdHgtPmlzX2ZpcnN0ID0gdHJ1ZTsK
LQkJLyogU2FuaXR5IGNoZWNrcyBhcmUgcGVyZm9ybWVkIGVsc2V3aGVyZS4gKi8KLQkJY3R4LT5h
dHRyID0gKEFUVFJfUkVDT1JEKikoKHU4KiljdHgtPm1yZWMgKwotCQkJCWxlMTZfdG9fY3B1KGN0
eC0+bXJlYy0+YXR0cnNfb2Zmc2V0KSk7Ci0JCS8qCi0JCSAqIFRoaXMgbmVlZHMgcmVzZXR0aW5n
IGR1ZSB0byBudGZzX2V4dGVybmFsX2F0dHJfZmluZCgpIHdoaWNoCi0JCSAqIGNhbiBsZWF2ZSBp
dCBzZXQgZGVzcGl0ZSBoYXZpbmcgemVyb2VkIGN0eC0+YmFzZV9udGZzX2luby4KLQkJICovCi0J
CWN0eC0+YWxfZW50cnkgPSBOVUxMOwotCQlyZXR1cm47Ci0JfSAvKiBBdHRyaWJ1dGUgbGlzdC4g
Ki8KLQlpZiAoY3R4LT5udGZzX2lubyAhPSBjdHgtPmJhc2VfbnRmc19pbm8pCi0JCXVubWFwX2V4
dGVudF9tZnRfcmVjb3JkKGN0eC0+bnRmc19pbm8pOwotCW50ZnNfYXR0cl9pbml0X3NlYXJjaF9j
dHgoY3R4LCBjdHgtPmJhc2VfbnRmc19pbm8sIGN0eC0+YmFzZV9tcmVjKTsKLQlyZXR1cm47Ci19
Ci0KLS8qKgotICogbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4IC0gYWxsb2NhdGUvaW5pdGlhbGl6
ZSBhIG5ldyBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQKLSAqIEBuaToJCW50ZnMgaW5vZGUgd2l0
aCB3aGljaCB0byBpbml0aWFsaXplIHRoZSBzZWFyY2ggY29udGV4dAotICogQG1yZWM6CW1mdCBy
ZWNvcmQgd2l0aCB3aGljaCB0byBpbml0aWFsaXplIHRoZSBzZWFyY2ggY29udGV4dAotICoKLSAq
IEFsbG9jYXRlIGEgbmV3IGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dCwgaW5pdGlhbGl6ZSBpdCB3
aXRoIEBuaSBhbmQgQG1yZWMsCi0gKiBhbmQgcmV0dXJuIGl0LiBSZXR1cm4gTlVMTCBpZiBhbGxv
Y2F0aW9uIGZhaWxlZC4KLSAqLwotbnRmc19hdHRyX3NlYXJjaF9jdHggKm50ZnNfYXR0cl9nZXRf
c2VhcmNoX2N0eChudGZzX2lub2RlICpuaSwgTUZUX1JFQ09SRCAqbXJlYykKLXsKLQludGZzX2F0
dHJfc2VhcmNoX2N0eCAqY3R4OwotCi0JY3R4ID0ga21lbV9jYWNoZV9hbGxvYyhudGZzX2F0dHJf
Y3R4X2NhY2hlLCBHRlBfTk9GUyk7Ci0JaWYgKGN0eCkKLQkJbnRmc19hdHRyX2luaXRfc2VhcmNo
X2N0eChjdHgsIG5pLCBtcmVjKTsKLQlyZXR1cm4gY3R4OwotfQotCi0vKioKLSAqIG50ZnNfYXR0
cl9wdXRfc2VhcmNoX2N0eCAtIHJlbGVhc2UgYW4gYXR0cmlidXRlIHNlYXJjaCBjb250ZXh0Ci0g
KiBAY3R4OglhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQgdG8gZnJlZQotICoKLSAqIFJlbGVhc2Ug
dGhlIGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dCBAY3R4LCB1bm1hcHBpbmcgYW4gYXNzb2NpYXRl
ZCBleHRlbnQKLSAqIG1mdCByZWNvcmQgaWYgcHJlc2VudC4KLSAqLwotdm9pZCBudGZzX2F0dHJf
cHV0X3NlYXJjaF9jdHgobnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eCkKLXsKLQlpZiAoY3R4LT5i
YXNlX250ZnNfaW5vICYmIGN0eC0+bnRmc19pbm8gIT0gY3R4LT5iYXNlX250ZnNfaW5vKQotCQl1
bm1hcF9leHRlbnRfbWZ0X3JlY29yZChjdHgtPm50ZnNfaW5vKTsKLQlrbWVtX2NhY2hlX2ZyZWUo
bnRmc19hdHRyX2N0eF9jYWNoZSwgY3R4KTsKLQlyZXR1cm47Ci19Ci0KLSNpZmRlZiBOVEZTX1JX
Ci0KLS8qKgotICogbnRmc19hdHRyX2ZpbmRfaW5fYXR0cmRlZiAtIGZpbmQgYW4gYXR0cmlidXRl
IGluIHRoZSAkQXR0ckRlZiBzeXN0ZW0gZmlsZQotICogQHZvbDoJbnRmcyB2b2x1bWUgdG8gd2hp
Y2ggdGhlIGF0dHJpYnV0ZSBiZWxvbmdzCi0gKiBAdHlwZToJYXR0cmlidXRlIHR5cGUgd2hpY2gg
dG8gZmluZAotICoKLSAqIFNlYXJjaCBmb3IgdGhlIGF0dHJpYnV0ZSBkZWZpbml0aW9uIHJlY29y
ZCBjb3JyZXNwb25kaW5nIHRvIHRoZSBhdHRyaWJ1dGUKLSAqIEB0eXBlIGluIHRoZSAkQXR0ckRl
ZiBzeXN0ZW0gZmlsZS4KLSAqCi0gKiBSZXR1cm4gdGhlIGF0dHJpYnV0ZSB0eXBlIGRlZmluaXRp
b24gcmVjb3JkIGlmIGZvdW5kIGFuZCBOVUxMIGlmIG5vdCBmb3VuZC4KLSAqLwotc3RhdGljIEFU
VFJfREVGICpudGZzX2F0dHJfZmluZF9pbl9hdHRyZGVmKGNvbnN0IG50ZnNfdm9sdW1lICp2b2ws
Ci0JCWNvbnN0IEFUVFJfVFlQRSB0eXBlKQotewotCUFUVFJfREVGICphZDsKLQotCUJVR19PTigh
dm9sLT5hdHRyZGVmKTsKLQlCVUdfT04oIXR5cGUpOwotCWZvciAoYWQgPSB2b2wtPmF0dHJkZWY7
ICh1OCopYWQgLSAodTgqKXZvbC0+YXR0cmRlZiA8Ci0JCQl2b2wtPmF0dHJkZWZfc2l6ZSAmJiBh
ZC0+dHlwZTsgKythZCkgewotCQkvKiBXZSBoYXZlIG5vdCBmb3VuZCBpdCB5ZXQsIGNhcnJ5IG9u
IHNlYXJjaGluZy4gKi8KLQkJaWYgKGxpa2VseShsZTMyX3RvX2NwdShhZC0+dHlwZSkgPCBsZTMy
X3RvX2NwdSh0eXBlKSkpCi0JCQljb250aW51ZTsKLQkJLyogV2UgZm91bmQgdGhlIGF0dHJpYnV0
ZTsgcmV0dXJuIGl0LiAqLwotCQlpZiAobGlrZWx5KGFkLT50eXBlID09IHR5cGUpKQotCQkJcmV0
dXJuIGFkOwotCQkvKiBXZSBoYXZlIGdvbmUgdG9vIGZhciBhbHJlYWR5LiAgTm8gcG9pbnQgaW4g
Y29udGludWluZy4gKi8KLQkJYnJlYWs7Ci0JfQotCS8qIEF0dHJpYnV0ZSBub3QgZm91bmQuICov
Ci0JbnRmc19kZWJ1ZygiQXR0cmlidXRlIHR5cGUgMHgleCBub3QgZm91bmQgaW4gJEF0dHJEZWYu
IiwKLQkJCWxlMzJfdG9fY3B1KHR5cGUpKTsKLQlyZXR1cm4gTlVMTDsKLX0KLQotLyoqCi0gKiBu
dGZzX2F0dHJfc2l6ZV9ib3VuZHNfY2hlY2sgLSBjaGVjayBhIHNpemUgb2YgYW4gYXR0cmlidXRl
IHR5cGUgZm9yIHZhbGlkaXR5Ci0gKiBAdm9sOgludGZzIHZvbHVtZSB0byB3aGljaCB0aGUgYXR0
cmlidXRlIGJlbG9uZ3MKLSAqIEB0eXBlOglhdHRyaWJ1dGUgdHlwZSB3aGljaCB0byBjaGVjawot
ICogQHNpemU6CXNpemUgd2hpY2ggdG8gY2hlY2sKLSAqCi0gKiBDaGVjayB3aGV0aGVyIHRoZSBA
c2l6ZSBpbiBieXRlcyBpcyB2YWxpZCBmb3IgYW4gYXR0cmlidXRlIG9mIEB0eXBlIG9uIHRoZQot
ICogbnRmcyB2b2x1bWUgQHZvbC4gIFRoaXMgaW5mb3JtYXRpb24gaXMgb2J0YWluZWQgZnJvbSAk
QXR0ckRlZiBzeXN0ZW0gZmlsZS4KLSAqCi0gKiBSZXR1cm4gMCBpZiB2YWxpZCwgLUVSQU5HRSBp
ZiBub3QgdmFsaWQsIG9yIC1FTk9FTlQgaWYgdGhlIGF0dHJpYnV0ZSBpcyBub3QKLSAqIGxpc3Rl
ZCBpbiAkQXR0ckRlZi4KLSAqLwotaW50IG50ZnNfYXR0cl9zaXplX2JvdW5kc19jaGVjayhjb25z
dCBudGZzX3ZvbHVtZSAqdm9sLCBjb25zdCBBVFRSX1RZUEUgdHlwZSwKLQkJY29uc3QgczY0IHNp
emUpCi17Ci0JQVRUUl9ERUYgKmFkOwotCi0JQlVHX09OKHNpemUgPCAwKTsKLQkvKgotCSAqICRB
VFRSSUJVVEVfTElTVCBoYXMgYSBtYXhpbXVtIHNpemUgb2YgMjU2a2lCLCBidXQgdGhpcyBpcyBu
b3QKLQkgKiBsaXN0ZWQgaW4gJEF0dHJEZWYuCi0JICovCi0JaWYgKHVubGlrZWx5KHR5cGUgPT0g
QVRfQVRUUklCVVRFX0xJU1QgJiYgc2l6ZSA+IDI1NiAqIDEwMjQpKQotCQlyZXR1cm4gLUVSQU5H
RTsKLQkvKiBHZXQgdGhlICRBdHRyRGVmIGVudHJ5IGZvciB0aGUgYXR0cmlidXRlIEB0eXBlLiAq
LwotCWFkID0gbnRmc19hdHRyX2ZpbmRfaW5fYXR0cmRlZih2b2wsIHR5cGUpOwotCWlmICh1bmxp
a2VseSghYWQpKQotCQlyZXR1cm4gLUVOT0VOVDsKLQkvKiBEbyB0aGUgYm91bmRzIGNoZWNrLiAq
LwotCWlmICgoKHNsZTY0X3RvX2NwdShhZC0+bWluX3NpemUpID4gMCkgJiYKLQkJCXNpemUgPCBz
bGU2NF90b19jcHUoYWQtPm1pbl9zaXplKSkgfHwKLQkJCSgoc2xlNjRfdG9fY3B1KGFkLT5tYXhf
c2l6ZSkgPiAwKSAmJiBzaXplID4KLQkJCXNsZTY0X3RvX2NwdShhZC0+bWF4X3NpemUpKSkKLQkJ
cmV0dXJuIC1FUkFOR0U7Ci0JcmV0dXJuIDA7Ci19Ci0KLS8qKgotICogbnRmc19hdHRyX2Nhbl9i
ZV9ub25fcmVzaWRlbnQgLSBjaGVjayBpZiBhbiBhdHRyaWJ1dGUgY2FuIGJlIG5vbi1yZXNpZGVu
dAotICogQHZvbDoJbnRmcyB2b2x1bWUgdG8gd2hpY2ggdGhlIGF0dHJpYnV0ZSBiZWxvbmdzCi0g
KiBAdHlwZToJYXR0cmlidXRlIHR5cGUgd2hpY2ggdG8gY2hlY2sKLSAqCi0gKiBDaGVjayB3aGV0
aGVyIHRoZSBhdHRyaWJ1dGUgb2YgQHR5cGUgb24gdGhlIG50ZnMgdm9sdW1lIEB2b2wgaXMgYWxs
b3dlZCB0bwotICogYmUgbm9uLXJlc2lkZW50LiAgVGhpcyBpbmZvcm1hdGlvbiBpcyBvYnRhaW5l
ZCBmcm9tICRBdHRyRGVmIHN5c3RlbSBmaWxlLgotICoKLSAqIFJldHVybiAwIGlmIHRoZSBhdHRy
aWJ1dGUgaXMgYWxsb3dlZCB0byBiZSBub24tcmVzaWRlbnQsIC1FUEVSTSBpZiBub3QsIGFuZAot
ICogLUVOT0VOVCBpZiB0aGUgYXR0cmlidXRlIGlzIG5vdCBsaXN0ZWQgaW4gJEF0dHJEZWYuCi0g
Ki8KLWludCBudGZzX2F0dHJfY2FuX2JlX25vbl9yZXNpZGVudChjb25zdCBudGZzX3ZvbHVtZSAq
dm9sLCBjb25zdCBBVFRSX1RZUEUgdHlwZSkKLXsKLQlBVFRSX0RFRiAqYWQ7Ci0KLQkvKiBGaW5k
IHRoZSBhdHRyaWJ1dGUgZGVmaW5pdGlvbiByZWNvcmQgaW4gJEF0dHJEZWYuICovCi0JYWQgPSBu
dGZzX2F0dHJfZmluZF9pbl9hdHRyZGVmKHZvbCwgdHlwZSk7Ci0JaWYgKHVubGlrZWx5KCFhZCkp
Ci0JCXJldHVybiAtRU5PRU5UOwotCS8qIENoZWNrIHRoZSBmbGFncyBhbmQgcmV0dXJuIHRoZSBy
ZXN1bHQuICovCi0JaWYgKGFkLT5mbGFncyAmIEFUVFJfREVGX1JFU0lERU5UKQotCQlyZXR1cm4g
LUVQRVJNOwotCXJldHVybiAwOwotfQotCi0vKioKLSAqIG50ZnNfYXR0cl9jYW5fYmVfcmVzaWRl
bnQgLSBjaGVjayBpZiBhbiBhdHRyaWJ1dGUgY2FuIGJlIHJlc2lkZW50Ci0gKiBAdm9sOgludGZz
IHZvbHVtZSB0byB3aGljaCB0aGUgYXR0cmlidXRlIGJlbG9uZ3MKLSAqIEB0eXBlOglhdHRyaWJ1
dGUgdHlwZSB3aGljaCB0byBjaGVjawotICoKLSAqIENoZWNrIHdoZXRoZXIgdGhlIGF0dHJpYnV0
ZSBvZiBAdHlwZSBvbiB0aGUgbnRmcyB2b2x1bWUgQHZvbCBpcyBhbGxvd2VkIHRvCi0gKiBiZSBy
ZXNpZGVudC4gIFRoaXMgaW5mb3JtYXRpb24gaXMgZGVyaXZlZCBmcm9tIG91ciBudGZzIGtub3ds
ZWRnZSBhbmQgbWF5Ci0gKiBub3QgYmUgY29tcGxldGVseSBhY2N1cmF0ZSwgZXNwZWNpYWxseSB3
aGVuIHVzZXIgZGVmaW5lZCBhdHRyaWJ1dGVzIGFyZQotICogcHJlc2VudC4gIEJhc2ljYWxseSB3
ZSBhbGxvdyBldmVyeXRoaW5nIHRvIGJlIHJlc2lkZW50IGV4Y2VwdCBmb3IgaW5kZXgKLSAqIGFs
bG9jYXRpb24gYW5kICRFQSBhdHRyaWJ1dGVzLgotICoKLSAqIFJldHVybiAwIGlmIHRoZSBhdHRy
aWJ1dGUgaXMgYWxsb3dlZCB0byBiZSBub24tcmVzaWRlbnQgYW5kIC1FUEVSTSBpZiBub3QuCi0g
KgotICogV2FybmluZzogSW4gdGhlIHN5c3RlbSBmaWxlICRNRlQgdGhlIGF0dHJpYnV0ZSAkQml0
bWFwIG11c3QgYmUgbm9uLXJlc2lkZW50Ci0gKgkgICAgb3RoZXJ3aXNlIHdpbmRvd3Mgd2lsbCBu
b3QgYm9vdCAoYmx1ZSBzY3JlZW4gb2YgZGVhdGgpISAgV2UgY2Fubm90Ci0gKgkgICAgY2hlY2sg
Zm9yIHRoaXMgaGVyZSBhcyB3ZSBkbyBub3Qga25vdyB3aGljaCBpbm9kZSdzICRCaXRtYXAgaXMK
LSAqCSAgICBiZWluZyBhc2tlZCBhYm91dCBzbyB0aGUgY2FsbGVyIG5lZWRzIHRvIHNwZWNpYWwg
Y2FzZSB0aGlzLgotICovCi1pbnQgbnRmc19hdHRyX2Nhbl9iZV9yZXNpZGVudChjb25zdCBudGZz
X3ZvbHVtZSAqdm9sLCBjb25zdCBBVFRSX1RZUEUgdHlwZSkKLXsKLQlpZiAodHlwZSA9PSBBVF9J
TkRFWF9BTExPQ0FUSU9OKQotCQlyZXR1cm4gLUVQRVJNOwotCXJldHVybiAwOwotfQotCi0vKioK
LSAqIG50ZnNfYXR0cl9yZWNvcmRfcmVzaXplIC0gcmVzaXplIGFuIGF0dHJpYnV0ZSByZWNvcmQK
LSAqIEBtOgkJbWZ0IHJlY29yZCBjb250YWluaW5nIGF0dHJpYnV0ZSByZWNvcmQKLSAqIEBhOgkJ
YXR0cmlidXRlIHJlY29yZCB0byByZXNpemUKLSAqIEBuZXdfc2l6ZToJbmV3IHNpemUgaW4gYnl0
ZXMgdG8gd2hpY2ggdG8gcmVzaXplIHRoZSBhdHRyaWJ1dGUgcmVjb3JkIEBhCi0gKgotICogUmVz
aXplIHRoZSBhdHRyaWJ1dGUgcmVjb3JkIEBhLCBpLmUuIHRoZSByZXNpZGVudCBwYXJ0IG9mIHRo
ZSBhdHRyaWJ1dGUsIGluCi0gKiB0aGUgbWZ0IHJlY29yZCBAbSB0byBAbmV3X3NpemUgYnl0ZXMu
Ci0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLiAgVGhlIGZv
bGxvd2luZyBlcnJvciBjb2RlcyBhcmUKLSAqIGRlZmluZWQ6Ci0gKgktRU5PU1BDCS0gTm90IGVu
b3VnaCBzcGFjZSBpbiB0aGUgbWZ0IHJlY29yZCBAbSB0byBwZXJmb3JtIHRoZSByZXNpemUuCi0g
KgotICogTm90ZTogT24gZXJyb3IsIG5vIG1vZGlmaWNhdGlvbnMgaGF2ZSBiZWVuIHBlcmZvcm1l
ZCB3aGF0c29ldmVyLgotICoKLSAqIFdhcm5pbmc6IElmIHlvdSBtYWtlIGEgcmVjb3JkIHNtYWxs
ZXIgd2l0aG91dCBoYXZpbmcgY29waWVkIGFsbCB0aGUgZGF0YSB5b3UKLSAqCSAgICBhcmUgaW50
ZXJlc3RlZCBpbiB0aGUgZGF0YSBtYXkgYmUgb3ZlcndyaXR0ZW4uCi0gKi8KLWludCBudGZzX2F0
dHJfcmVjb3JkX3Jlc2l6ZShNRlRfUkVDT1JEICptLCBBVFRSX1JFQ09SRCAqYSwgdTMyIG5ld19z
aXplKQotewotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBuZXdfc2l6ZSAldS4iLCBuZXdfc2l6
ZSk7Ci0JLyogQWxpZ24gdG8gOCBieXRlcyBpZiBpdCBpcyBub3QgYWxyZWFkeSBkb25lLiAqLwot
CWlmIChuZXdfc2l6ZSAmIDcpCi0JCW5ld19zaXplID0gKG5ld19zaXplICsgNykgJiB+NzsKLQkv
KiBJZiB0aGUgYWN0dWFsIGF0dHJpYnV0ZSBsZW5ndGggaGFzIGNoYW5nZWQsIG1vdmUgdGhpbmdz
IGFyb3VuZC4gKi8KLQlpZiAobmV3X3NpemUgIT0gbGUzMl90b19jcHUoYS0+bGVuZ3RoKSkgewot
CQl1MzIgbmV3X211c2UgPSBsZTMyX3RvX2NwdShtLT5ieXRlc19pbl91c2UpIC0KLQkJCQlsZTMy
X3RvX2NwdShhLT5sZW5ndGgpICsgbmV3X3NpemU7Ci0JCS8qIE5vdCBlbm91Z2ggc3BhY2UgaW4g
dGhpcyBtZnQgcmVjb3JkLiAqLwotCQlpZiAobmV3X211c2UgPiBsZTMyX3RvX2NwdShtLT5ieXRl
c19hbGxvY2F0ZWQpKQotCQkJcmV0dXJuIC1FTk9TUEM7Ci0JCS8qIE1vdmUgYXR0cmlidXRlcyBm
b2xsb3dpbmcgQGEgdG8gdGhlaXIgbmV3IGxvY2F0aW9uLiAqLwotCQltZW1tb3ZlKCh1OCopYSAr
IG5ld19zaXplLCAodTgqKWEgKyBsZTMyX3RvX2NwdShhLT5sZW5ndGgpLAotCQkJCWxlMzJfdG9f
Y3B1KG0tPmJ5dGVzX2luX3VzZSkgLSAoKHU4KilhIC0KLQkJCQkodTgqKW0pIC0gbGUzMl90b19j
cHUoYS0+bGVuZ3RoKSk7Ci0JCS8qIEFkanVzdCBAbSB0byByZWZsZWN0IHRoZSBjaGFuZ2UgaW4g
dXNlZCBzcGFjZS4gKi8KLQkJbS0+Ynl0ZXNfaW5fdXNlID0gY3B1X3RvX2xlMzIobmV3X211c2Up
OwotCQkvKiBBZGp1c3QgQGEgdG8gcmVmbGVjdCB0aGUgbmV3IHNpemUuICovCi0JCWlmIChuZXdf
c2l6ZSA+PSBvZmZzZXRvZihBVFRSX1JFQywgbGVuZ3RoKSArIHNpemVvZihhLT5sZW5ndGgpKQot
CQkJYS0+bGVuZ3RoID0gY3B1X3RvX2xlMzIobmV3X3NpemUpOwotCX0KLQlyZXR1cm4gMDsKLX0K
LQotLyoqCi0gKiBudGZzX3Jlc2lkZW50X2F0dHJfdmFsdWVfcmVzaXplIC0gcmVzaXplIHRoZSB2
YWx1ZSBvZiBhIHJlc2lkZW50IGF0dHJpYnV0ZQotICogQG06CQltZnQgcmVjb3JkIGNvbnRhaW5p
bmcgYXR0cmlidXRlIHJlY29yZAotICogQGE6CQlhdHRyaWJ1dGUgcmVjb3JkIHdob3NlIHZhbHVl
IHRvIHJlc2l6ZQotICogQG5ld19zaXplOgluZXcgc2l6ZSBpbiBieXRlcyB0byB3aGljaCB0byBy
ZXNpemUgdGhlIGF0dHJpYnV0ZSB2YWx1ZSBvZiBAYQotICoKLSAqIFJlc2l6ZSB0aGUgdmFsdWUg
b2YgdGhlIGF0dHJpYnV0ZSBAYSBpbiB0aGUgbWZ0IHJlY29yZCBAbSB0byBAbmV3X3NpemUgYnl0
ZXMuCi0gKiBJZiB0aGUgdmFsdWUgaXMgbWFkZSBiaWdnZXIsIHRoZSBuZXdseSBhbGxvY2F0ZWQg
c3BhY2UgaXMgY2xlYXJlZC4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJybm8g
b24gZXJyb3IuICBUaGUgZm9sbG93aW5nIGVycm9yIGNvZGVzIGFyZQotICogZGVmaW5lZDoKLSAq
CS1FTk9TUEMJLSBOb3QgZW5vdWdoIHNwYWNlIGluIHRoZSBtZnQgcmVjb3JkIEBtIHRvIHBlcmZv
cm0gdGhlIHJlc2l6ZS4KLSAqCi0gKiBOb3RlOiBPbiBlcnJvciwgbm8gbW9kaWZpY2F0aW9ucyBo
YXZlIGJlZW4gcGVyZm9ybWVkIHdoYXRzb2V2ZXIuCi0gKgotICogV2FybmluZzogSWYgeW91IG1h
a2UgYSByZWNvcmQgc21hbGxlciB3aXRob3V0IGhhdmluZyBjb3BpZWQgYWxsIHRoZSBkYXRhIHlv
dQotICoJICAgIGFyZSBpbnRlcmVzdGVkIGluIHRoZSBkYXRhIG1heSBiZSBvdmVyd3JpdHRlbi4K
LSAqLwotaW50IG50ZnNfcmVzaWRlbnRfYXR0cl92YWx1ZV9yZXNpemUoTUZUX1JFQ09SRCAqbSwg
QVRUUl9SRUNPUkQgKmEsCi0JCWNvbnN0IHUzMiBuZXdfc2l6ZSkKLXsKLQl1MzIgb2xkX3NpemU7
Ci0KLQkvKiBSZXNpemUgdGhlIHJlc2lkZW50IHBhcnQgb2YgdGhlIGF0dHJpYnV0ZSByZWNvcmQu
ICovCi0JaWYgKG50ZnNfYXR0cl9yZWNvcmRfcmVzaXplKG0sIGEsCi0JCQlsZTE2X3RvX2NwdShh
LT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkgKyBuZXdfc2l6ZSkpCi0JCXJldHVybiAtRU5P
U1BDOwotCS8qCi0JICogVGhlIHJlc2l6ZSBzdWNjZWVkZWQhICBJZiB3ZSBtYWRlIHRoZSBhdHRy
aWJ1dGUgdmFsdWUgYmlnZ2VyLCBjbGVhcgotCSAqIHRoZSBhcmVhIGJldHdlZW4gdGhlIG9sZCBz
aXplIGFuZCBAbmV3X3NpemUuCi0JICovCi0Jb2xkX3NpemUgPSBsZTMyX3RvX2NwdShhLT5kYXRh
LnJlc2lkZW50LnZhbHVlX2xlbmd0aCk7Ci0JaWYgKG5ld19zaXplID4gb2xkX3NpemUpCi0JCW1l
bXNldCgodTgqKWEgKyBsZTE2X3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkg
KwotCQkJCW9sZF9zaXplLCAwLCBuZXdfc2l6ZSAtIG9sZF9zaXplKTsKLQkvKiBGaW5hbGx5IHVw
ZGF0ZSB0aGUgbGVuZ3RoIG9mIHRoZSBhdHRyaWJ1dGUgdmFsdWUuICovCi0JYS0+ZGF0YS5yZXNp
ZGVudC52YWx1ZV9sZW5ndGggPSBjcHVfdG9fbGUzMihuZXdfc2l6ZSk7Ci0JcmV0dXJuIDA7Ci19
Ci0KLS8qKgotICogbnRmc19hdHRyX21ha2Vfbm9uX3Jlc2lkZW50IC0gY29udmVydCBhIHJlc2lk
ZW50IHRvIGEgbm9uLXJlc2lkZW50IGF0dHJpYnV0ZQotICogQG5pOgkJbnRmcyBpbm9kZSBkZXNj
cmliaW5nIHRoZSBhdHRyaWJ1dGUgdG8gY29udmVydAotICogQGRhdGFfc2l6ZToJc2l6ZSBvZiB0
aGUgcmVzaWRlbnQgZGF0YSB0byBjb3B5IHRvIHRoZSBub24tcmVzaWRlbnQgYXR0cmlidXRlCi0g
KgotICogQ29udmVydCB0aGUgcmVzaWRlbnQgbnRmcyBhdHRyaWJ1dGUgZGVzY3JpYmVkIGJ5IHRo
ZSBudGZzIGlub2RlIEBuaSB0byBhCi0gKiBub24tcmVzaWRlbnQgb25lLgotICoKLSAqIEBkYXRh
X3NpemUgbXVzdCBiZSBlcXVhbCB0byB0aGUgYXR0cmlidXRlIHZhbHVlIHNpemUuICBUaGlzIGlz
IG5lZWRlZCBzaW5jZQotICogd2UgbmVlZCB0byBrbm93IHRoZSBzaXplIGJlZm9yZSB3ZSBjYW4g
bWFwIHRoZSBtZnQgcmVjb3JkIGFuZCBvdXIgY2FsbGVycwotICogYWx3YXlzIGtub3cgaXQuICBU
aGUgcmVhc29uIHdlIGNhbm5vdCBzaW1wbHkgcmVhZCB0aGUgc2l6ZSBmcm9tIHRoZSB2ZnMKLSAq
IGlub2RlIGlfc2l6ZSBpcyB0aGF0IHRoaXMgaXMgbm90IG5lY2Vzc2FyaWx5IHVwdG9kYXRlLiAg
VGhpcyBoYXBwZW5zIHdoZW4KLSAqIG50ZnNfYXR0cl9tYWtlX25vbl9yZXNpZGVudCgpIGlzIGNh
bGxlZCBpbiB0aGUgLT50cnVuY2F0ZSBjYWxsIHBhdGgocykuCi0gKgotICogUmV0dXJuIDAgb24g
c3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLiAgVGhlIGZvbGxvd2luZyBlcnJvciByZXR1cm4g
Y29kZXMKLSAqIGFyZSBkZWZpbmVkOgotICoJLUVQRVJNCS0gVGhlIGF0dHJpYnV0ZSBpcyBub3Qg
YWxsb3dlZCB0byBiZSBub24tcmVzaWRlbnQuCi0gKgktRU5PTUVNCS0gTm90IGVub3VnaCBtZW1v
cnkuCi0gKgktRU5PU1BDCS0gTm90IGVub3VnaCBkaXNrIHNwYWNlLgotICoJLUVJTlZBTAktIEF0
dHJpYnV0ZSBub3QgZGVmaW5lZCBvbiB0aGUgdm9sdW1lLgotICoJLUVJTwktIEkvbyBlcnJvciBv
ciBvdGhlciBlcnJvci4KLSAqIE5vdGUgdGhhdCAtRU5PU1BDIGlzIGFsc28gcmV0dXJuZWQgaW4g
dGhlIGNhc2UgdGhhdCB0aGVyZSBpcyBub3QgZW5vdWdoCi0gKiBzcGFjZSBpbiB0aGUgbWZ0IHJl
Y29yZCB0byBkbyB0aGUgY29udmVyc2lvbi4gIFRoaXMgY2FuIGhhcHBlbiB3aGVuIHRoZSBtZnQK
LSAqIHJlY29yZCBpcyBhbHJlYWR5IHZlcnkgZnVsbC4gIFRoZSBjYWxsZXIgaXMgcmVzcG9uc2li
bGUgZm9yIHRyeWluZyB0byBtYWtlCi0gKiBzcGFjZSBpbiB0aGUgbWZ0IHJlY29yZCBhbmQgdHJ5
aW5nIGFnYWluLiAgRklYTUU6IERvIHdlIG5lZWQgYSBzZXBhcmF0ZQotICogZXJyb3IgcmV0dXJu
IGNvZGUgZm9yIHRoaXMga2luZCBvZiAtRU5PU1BDIG9yIGlzIGl0IGFsd2F5cyB3b3J0aCB0cnlp
bmcKLSAqIGFnYWluIGluIGNhc2UgdGhlIGF0dHJpYnV0ZSBtYXkgdGhlbiBmaXQgaW4gYSByZXNp
ZGVudCBzdGF0ZSBzbyBubyBuZWVkIHRvCi0gKiBtYWtlIGl0IG5vbi1yZXNpZGVudCBhdCBhbGw/
ICBIby1odW0uLi4gIChBSUEpCi0gKgotICogTk9URSB0byBzZWxmOiBObyBjaGFuZ2VzIGluIHRo
ZSBhdHRyaWJ1dGUgbGlzdCBhcmUgcmVxdWlyZWQgdG8gbW92ZSBmcm9tCi0gKgkJIGEgcmVzaWRl
bnQgdG8gYSBub24tcmVzaWRlbnQgYXR0cmlidXRlLgotICoKLSAqIExvY2tpbmc6IC0gVGhlIGNh
bGxlciBtdXN0IGhvbGQgaV9tdXRleCBvbiB0aGUgaW5vZGUuCi0gKi8KLWludCBudGZzX2F0dHJf
bWFrZV9ub25fcmVzaWRlbnQobnRmc19pbm9kZSAqbmksIGNvbnN0IHUzMiBkYXRhX3NpemUpCi17
Ci0JczY0IG5ld19zaXplOwotCXN0cnVjdCBpbm9kZSAqdmkgPSBWRlNfSShuaSk7Ci0JbnRmc192
b2x1bWUgKnZvbCA9IG5pLT52b2w7Ci0JbnRmc19pbm9kZSAqYmFzZV9uaTsKLQlNRlRfUkVDT1JE
ICptOwotCUFUVFJfUkVDT1JEICphOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHg7Ci0Jc3Ry
dWN0IHBhZ2UgKnBhZ2U7Ci0JcnVubGlzdF9lbGVtZW50ICpybDsKLQl1OCAqa2FkZHI7Ci0JdW5z
aWduZWQgbG9uZyBmbGFnczsKLQlpbnQgbXBfc2l6ZSwgbXBfb2ZzLCBuYW1lX29mcywgYXJlY19z
aXplLCBlcnIsIGVycjI7Ci0JdTMyIGF0dHJfc2l6ZTsKLQl1OCBvbGRfcmVzX2F0dHJfZmxhZ3M7
Ci0KLQkvKiBDaGVjayB0aGF0IHRoZSBhdHRyaWJ1dGUgaXMgYWxsb3dlZCB0byBiZSBub24tcmVz
aWRlbnQuICovCi0JZXJyID0gbnRmc19hdHRyX2Nhbl9iZV9ub25fcmVzaWRlbnQodm9sLCBuaS0+
dHlwZSk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJaWYgKGVyciA9PSAtRVBFUk0pCi0JCQlu
dGZzX2RlYnVnKCJBdHRyaWJ1dGUgaXMgbm90IGFsbG93ZWQgdG8gYmUgIgotCQkJCQkibm9uLXJl
c2lkZW50LiIpOwotCQllbHNlCi0JCQludGZzX2RlYnVnKCJBdHRyaWJ1dGUgbm90IGRlZmluZWQg
b24gdGhlIE5URlMgIgotCQkJCQkidm9sdW1lISIpOwotCQlyZXR1cm4gZXJyOwotCX0KLQkvKgot
CSAqIEZJWE1FOiBDb21wcmVzc2VkIGFuZCBlbmNyeXB0ZWQgYXR0cmlidXRlcyBhcmUgbm90IHN1
cHBvcnRlZCB3aGVuCi0JICogd3JpdGluZyBhbmQgd2Ugc2hvdWxkIG5ldmVyIGhhdmUgZ290dGVu
IGhlcmUgZm9yIHRoZW0uCi0JICovCi0JQlVHX09OKE5Jbm9Db21wcmVzc2VkKG5pKSk7Ci0JQlVH
X09OKE5Jbm9FbmNyeXB0ZWQobmkpKTsKLQkvKgotCSAqIFRoZSBzaXplIG5lZWRzIHRvIGJlIGFs
aWduZWQgdG8gYSBjbHVzdGVyIGJvdW5kYXJ5IGZvciBhbGxvY2F0aW9uCi0JICogcHVycG9zZXMu
Ci0JICovCi0JbmV3X3NpemUgPSAoZGF0YV9zaXplICsgdm9sLT5jbHVzdGVyX3NpemUgLSAxKSAm
Ci0JCQl+KHZvbC0+Y2x1c3Rlcl9zaXplIC0gMSk7Ci0JaWYgKG5ld19zaXplID4gMCkgewotCQkv
KgotCQkgKiBXaWxsIG5lZWQgdGhlIHBhZ2UgbGF0ZXIgYW5kIHNpbmNlIHRoZSBwYWdlIGxvY2sg
bmVzdHMKLQkJICogb3V0c2lkZSBhbGwgbnRmcyBsb2Nrcywgd2UgbmVlZCB0byBnZXQgdGhlIHBh
Z2Ugbm93LgotCQkgKi8KLQkJcGFnZSA9IGZpbmRfb3JfY3JlYXRlX3BhZ2UodmktPmlfbWFwcGlu
ZywgMCwKLQkJCQltYXBwaW5nX2dmcF9tYXNrKHZpLT5pX21hcHBpbmcpKTsKLQkJaWYgKHVubGlr
ZWx5KCFwYWdlKSkKLQkJCXJldHVybiAtRU5PTUVNOwotCQkvKiBTdGFydCBieSBhbGxvY2F0aW5n
IGNsdXN0ZXJzIHRvIGhvbGQgdGhlIGF0dHJpYnV0ZSB2YWx1ZS4gKi8KLQkJcmwgPSBudGZzX2Ns
dXN0ZXJfYWxsb2Modm9sLCAwLCBuZXdfc2l6ZSA+PgotCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2Jp
dHMsIC0xLCBEQVRBX1pPTkUsIHRydWUpOwotCQlpZiAoSVNfRVJSKHJsKSkgewotCQkJZXJyID0g
UFRSX0VSUihybCk7Ci0JCQludGZzX2RlYnVnKCJGYWlsZWQgdG8gYWxsb2NhdGUgY2x1c3RlciVz
LCBlcnJvciBjb2RlICIKLQkJCQkJIiVpLiIsIChuZXdfc2l6ZSA+PgotCQkJCQl2b2wtPmNsdXN0
ZXJfc2l6ZV9iaXRzKSA+IDEgPyAicyIgOiAiIiwKLQkJCQkJZXJyKTsKLQkJCWdvdG8gcGFnZV9l
cnJfb3V0OwotCQl9Ci0JfSBlbHNlIHsKLQkJcmwgPSBOVUxMOwotCQlwYWdlID0gTlVMTDsKLQl9
Ci0JLyogRGV0ZXJtaW5lIHRoZSBzaXplIG9mIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5LiAqLwot
CW1wX3NpemUgPSBudGZzX2dldF9zaXplX2Zvcl9tYXBwaW5nX3BhaXJzKHZvbCwgcmwsIDAsIC0x
KTsKLQlpZiAodW5saWtlbHkobXBfc2l6ZSA8IDApKSB7Ci0JCWVyciA9IG1wX3NpemU7Ci0JCW50
ZnNfZGVidWcoIkZhaWxlZCB0byBnZXQgc2l6ZSBmb3IgbWFwcGluZyBwYWlycyBhcnJheSwgZXJy
b3IgIgotCQkJCSJjb2RlICVpLiIsIGVycik7Ci0JCWdvdG8gcmxfZXJyX291dDsKLQl9Ci0JZG93
bl93cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci0JaWYgKCFOSW5vQXR0cihuaSkpCi0JCWJhc2Vf
bmkgPSBuaTsKLQllbHNlCi0JCWJhc2VfbmkgPSBuaS0+ZXh0LmJhc2VfbnRmc19pbm87Ci0JbSA9
IG1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCWlmIChJU19FUlIobSkpIHsKLQkJZXJyID0gUFRS
X0VSUihtKTsKLQkJbSA9IE5VTEw7Ci0JCWN0eCA9IE5VTEw7Ci0JCWdvdG8gZXJyX291dDsKLQl9
Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KGJhc2VfbmksIG0pOwotCWlmICh1bmxp
a2VseSghY3R4KSkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWVy
ciA9IG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0J
CQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkg
ewotCQlpZiAoZXJyID09IC1FTk9FTlQpCi0JCQllcnIgPSAtRUlPOwotCQlnb3RvIGVycl9vdXQ7
Ci0JfQotCW0gPSBjdHgtPm1yZWM7Ci0JYSA9IGN0eC0+YXR0cjsKLQlCVUdfT04oTklub05vblJl
c2lkZW50KG5pKSk7Ci0JQlVHX09OKGEtPm5vbl9yZXNpZGVudCk7Ci0JLyoKLQkgKiBDYWxjdWxh
dGUgbmV3IG9mZnNldHMgZm9yIHRoZSBuYW1lIGFuZCB0aGUgbWFwcGluZyBwYWlycyBhcnJheS4K
LQkgKi8KLQlpZiAoTklub1NwYXJzZShuaSkgfHwgTklub0NvbXByZXNzZWQobmkpKQotCQluYW1l
X29mcyA9IChvZmZzZXRvZihBVFRSX1JFQywKLQkJCQlkYXRhLm5vbl9yZXNpZGVudC5jb21wcmVz
c2VkX3NpemUpICsKLQkJCQlzaXplb2YoYS0+ZGF0YS5ub25fcmVzaWRlbnQuY29tcHJlc3NlZF9z
aXplKSArCi0JCQkJNykgJiB+NzsKLQllbHNlCi0JCW5hbWVfb2ZzID0gKG9mZnNldG9mKEFUVFJf
UkVDLAotCQkJCWRhdGEubm9uX3Jlc2lkZW50LmNvbXByZXNzZWRfc2l6ZSkgKyA3KSAmIH43Owot
CW1wX29mcyA9IChuYW1lX29mcyArIGEtPm5hbWVfbGVuZ3RoICogc2l6ZW9mKG50ZnNjaGFyKSAr
IDcpICYgfjc7Ci0JLyoKLQkgKiBEZXRlcm1pbmUgdGhlIHNpemUgb2YgdGhlIHJlc2lkZW50IHBh
cnQgb2YgdGhlIG5vdyBub24tcmVzaWRlbnQKLQkgKiBhdHRyaWJ1dGUgcmVjb3JkLgotCSAqLwot
CWFyZWNfc2l6ZSA9IChtcF9vZnMgKyBtcF9zaXplICsgNykgJiB+NzsKLQkvKgotCSAqIElmIHRo
ZSBwYWdlIGlzIG5vdCB1cHRvZGF0ZSBicmluZyBpdCB1cHRvZGF0ZSBieSBjb3B5aW5nIGZyb20g
dGhlCi0JICogYXR0cmlidXRlIHZhbHVlLgotCSAqLwotCWF0dHJfc2l6ZSA9IGxlMzJfdG9fY3B1
KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfbGVuZ3RoKTsKLQlCVUdfT04oYXR0cl9zaXplICE9IGRh
dGFfc2l6ZSk7Ci0JaWYgKHBhZ2UgJiYgIVBhZ2VVcHRvZGF0ZShwYWdlKSkgewotCQlrYWRkciA9
IGttYXBfYXRvbWljKHBhZ2UpOwotCQltZW1jcHkoa2FkZHIsICh1OCopYSArCi0JCQkJbGUxNl90
b19jcHUoYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpLAotCQkJCWF0dHJfc2l6ZSk7Ci0J
CW1lbXNldChrYWRkciArIGF0dHJfc2l6ZSwgMCwgUEFHRV9TSVpFIC0gYXR0cl9zaXplKTsKLQkJ
a3VubWFwX2F0b21pYyhrYWRkcik7Ci0JCWZsdXNoX2RjYWNoZV9wYWdlKHBhZ2UpOwotCQlTZXRQ
YWdlVXB0b2RhdGUocGFnZSk7Ci0JfQotCS8qIEJhY2t1cCB0aGUgYXR0cmlidXRlIGZsYWcuICov
Ci0Jb2xkX3Jlc19hdHRyX2ZsYWdzID0gYS0+ZGF0YS5yZXNpZGVudC5mbGFnczsKLQkvKiBSZXNp
emUgdGhlIHJlc2lkZW50IHBhcnQgb2YgdGhlIGF0dHJpYnV0ZSByZWNvcmQuICovCi0JZXJyID0g
bnRmc19hdHRyX3JlY29yZF9yZXNpemUobSwgYSwgYXJlY19zaXplKTsKLQlpZiAodW5saWtlbHko
ZXJyKSkKLQkJZ290byBlcnJfb3V0OwotCS8qCi0JICogQ29udmVydCB0aGUgcmVzaWRlbnQgcGFy
dCBvZiB0aGUgYXR0cmlidXRlIHJlY29yZCB0byBkZXNjcmliZSBhCi0JICogbm9uLXJlc2lkZW50
IGF0dHJpYnV0ZS4KLQkgKi8KLQlhLT5ub25fcmVzaWRlbnQgPSAxOwotCS8qIE1vdmUgdGhlIGF0
dHJpYnV0ZSBuYW1lIGlmIGl0IGV4aXN0cyBhbmQgdXBkYXRlIHRoZSBvZmZzZXQuICovCi0JaWYg
KGEtPm5hbWVfbGVuZ3RoKQotCQltZW1tb3ZlKCh1OCopYSArIG5hbWVfb2ZzLCAodTgqKWEgKyBs
ZTE2X3RvX2NwdShhLT5uYW1lX29mZnNldCksCi0JCQkJYS0+bmFtZV9sZW5ndGggKiBzaXplb2Yo
bnRmc2NoYXIpKTsKLQlhLT5uYW1lX29mZnNldCA9IGNwdV90b19sZTE2KG5hbWVfb2ZzKTsKLQkv
KiBTZXR1cCB0aGUgZmllbGRzIHNwZWNpZmljIHRvIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGVzLiAq
LwotCWEtPmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92Y24gPSAwOwotCWEtPmRhdGEubm9uX3Jl
c2lkZW50LmhpZ2hlc3RfdmNuID0gY3B1X3RvX3NsZTY0KChuZXdfc2l6ZSAtIDEpID4+Ci0JCQl2
b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzKTsKLQlhLT5kYXRhLm5vbl9yZXNpZGVudC5tYXBwaW5nX3Bh
aXJzX29mZnNldCA9IGNwdV90b19sZTE2KG1wX29mcyk7Ci0JbWVtc2V0KCZhLT5kYXRhLm5vbl9y
ZXNpZGVudC5yZXNlcnZlZCwgMCwKLQkJCXNpemVvZihhLT5kYXRhLm5vbl9yZXNpZGVudC5yZXNl
cnZlZCkpOwotCWEtPmRhdGEubm9uX3Jlc2lkZW50LmFsbG9jYXRlZF9zaXplID0gY3B1X3RvX3Ns
ZTY0KG5ld19zaXplKTsKLQlhLT5kYXRhLm5vbl9yZXNpZGVudC5kYXRhX3NpemUgPQotCQkJYS0+
ZGF0YS5ub25fcmVzaWRlbnQuaW5pdGlhbGl6ZWRfc2l6ZSA9Ci0JCQljcHVfdG9fc2xlNjQoYXR0
cl9zaXplKTsKLQlpZiAoTklub1NwYXJzZShuaSkgfHwgTklub0NvbXByZXNzZWQobmkpKSB7Ci0J
CWEtPmRhdGEubm9uX3Jlc2lkZW50LmNvbXByZXNzaW9uX3VuaXQgPSAwOwotCQlpZiAoTklub0Nv
bXByZXNzZWQobmkpIHx8IHZvbC0+bWFqb3JfdmVyIDwgMykKLQkJCWEtPmRhdGEubm9uX3Jlc2lk
ZW50LmNvbXByZXNzaW9uX3VuaXQgPSA0OwotCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5jb21wcmVz
c2VkX3NpemUgPQotCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LmFsbG9jYXRlZF9zaXplOwotCX0g
ZWxzZQotCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5jb21wcmVzc2lvbl91bml0ID0gMDsKLQkvKiBH
ZW5lcmF0ZSB0aGUgbWFwcGluZyBwYWlycyBhcnJheSBpbnRvIHRoZSBhdHRyaWJ1dGUgcmVjb3Jk
LiAqLwotCWVyciA9IG50ZnNfbWFwcGluZ19wYWlyc19idWlsZCh2b2wsICh1OCopYSArIG1wX29m
cywKLQkJCWFyZWNfc2l6ZSAtIG1wX29mcywgcmwsIDAsIC0xLCBOVUxMKTsKLQlpZiAodW5saWtl
bHkoZXJyKSkgewotCQludGZzX2RlYnVnKCJGYWlsZWQgdG8gYnVpbGQgbWFwcGluZyBwYWlycywg
ZXJyb3IgY29kZSAlaS4iLAotCQkJCWVycik7Ci0JCWdvdG8gdW5kb19lcnJfb3V0OwotCX0KLQkv
KiBTZXR1cCB0aGUgaW4tbWVtb3J5IGF0dHJpYnV0ZSBzdHJ1Y3R1cmUgdG8gYmUgbm9uLXJlc2lk
ZW50LiAqLwotCW5pLT5ydW5saXN0LnJsID0gcmw7Ci0Jd3JpdGVfbG9ja19pcnFzYXZlKCZuaS0+
c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbmktPmFsbG9jYXRlZF9zaXplID0gbmV3X3NpemU7Ci0JaWYg
KE5Jbm9TcGFyc2UobmkpIHx8IE5Jbm9Db21wcmVzc2VkKG5pKSkgewotCQluaS0+aXR5cGUuY29t
cHJlc3NlZC5zaXplID0gbmktPmFsbG9jYXRlZF9zaXplOwotCQlpZiAoYS0+ZGF0YS5ub25fcmVz
aWRlbnQuY29tcHJlc3Npb25fdW5pdCkgewotCQkJbmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tf
c2l6ZSA9IDFVIDw8IChhLT5kYXRhLgotCQkJCQlub25fcmVzaWRlbnQuY29tcHJlc3Npb25fdW5p
dCArCi0JCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMpOwotCQkJbmktPml0eXBlLmNvbXByZXNz
ZWQuYmxvY2tfc2l6ZV9iaXRzID0KLQkJCQkJZmZzKG5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2Nr
X3NpemUpIC0KLQkJCQkJMTsKLQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2NrX2NsdXN0ZXJz
ID0gMVUgPDwKLQkJCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuY29tcHJlc3Npb25fdW5pdDsKLQkJ
fSBlbHNlIHsKLQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2NrX3NpemUgPSAwOwotCQkJbmkt
Pml0eXBlLmNvbXByZXNzZWQuYmxvY2tfc2l6ZV9iaXRzID0gMDsKLQkJCW5pLT5pdHlwZS5jb21w
cmVzc2VkLmJsb2NrX2NsdXN0ZXJzID0gMDsKLQkJfQotCQl2aS0+aV9ibG9ja3MgPSBuaS0+aXR5
cGUuY29tcHJlc3NlZC5zaXplID4+IDk7Ci0JfSBlbHNlCi0JCXZpLT5pX2Jsb2NrcyA9IG5pLT5h
bGxvY2F0ZWRfc2l6ZSA+PiA5OwotCXdyaXRlX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9s
b2NrLCBmbGFncyk7Ci0JLyoKLQkgKiBUaGlzIG5lZWRzIHRvIGJlIGxhc3Qgc2luY2UgdGhlIGFk
ZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyAtPnJlYWRfZm9saW8KLQkgKiBhbmQgLT53cml0ZXBhZ2Ug
Y2FuIHJ1biBjb25jdXJyZW50bHkgd2l0aCB1cyBhcyB0aGV5IGFyZSBub3QKLQkgKiBzZXJpYWxp
emVkIG9uIGlfbXV0ZXguICBOb3RlLCB3ZSBhcmUgbm90IGFsbG93ZWQgdG8gZmFpbCBvbmNlIHdl
IGZsaXAKLQkgKiB0aGlzIHN3aXRjaCwgd2hpY2ggaXMgYW5vdGhlciByZWFzb24gdG8gZG8gdGhp
cyBsYXN0LgotCSAqLwotCU5Jbm9TZXROb25SZXNpZGVudChuaSk7Ci0JLyogTWFyayB0aGUgbWZ0
IHJlY29yZCBkaXJ0eSwgc28gaXQgZ2V0cyB3cml0dGVuIGJhY2suICovCi0JZmx1c2hfZGNhY2hl
X21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQltYXJrX21mdF9yZWNvcmRfZGlydHko
Y3R4LT5udGZzX2lubyk7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5tYXBf
bWZ0X3JlY29yZChiYXNlX25pKTsKLQl1cF93cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci0JaWYg
KHBhZ2UpIHsKLQkJc2V0X3BhZ2VfZGlydHkocGFnZSk7Ci0JCXVubG9ja19wYWdlKHBhZ2UpOwot
CQlwdXRfcGFnZShwYWdlKTsKLQl9Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gMDsK
LXVuZG9fZXJyX291dDoKLQkvKiBDb252ZXJ0IHRoZSBhdHRyaWJ1dGUgYmFjayBpbnRvIGEgcmVz
aWRlbnQgYXR0cmlidXRlLiAqLwotCWEtPm5vbl9yZXNpZGVudCA9IDA7Ci0JLyogTW92ZSB0aGUg
YXR0cmlidXRlIG5hbWUgaWYgaXQgZXhpc3RzIGFuZCB1cGRhdGUgdGhlIG9mZnNldC4gKi8KLQlu
YW1lX29mcyA9IChvZmZzZXRvZihBVFRSX1JFQ09SRCwgZGF0YS5yZXNpZGVudC5yZXNlcnZlZCkg
KwotCQkJc2l6ZW9mKGEtPmRhdGEucmVzaWRlbnQucmVzZXJ2ZWQpICsgNykgJiB+NzsKLQlpZiAo
YS0+bmFtZV9sZW5ndGgpCi0JCW1lbW1vdmUoKHU4KilhICsgbmFtZV9vZnMsICh1OCopYSArIGxl
MTZfdG9fY3B1KGEtPm5hbWVfb2Zmc2V0KSwKLQkJCQlhLT5uYW1lX2xlbmd0aCAqIHNpemVvZihu
dGZzY2hhcikpOwotCW1wX29mcyA9IChuYW1lX29mcyArIGEtPm5hbWVfbGVuZ3RoICogc2l6ZW9m
KG50ZnNjaGFyKSArIDcpICYgfjc7Ci0JYS0+bmFtZV9vZmZzZXQgPSBjcHVfdG9fbGUxNihuYW1l
X29mcyk7Ci0JYXJlY19zaXplID0gKG1wX29mcyArIGF0dHJfc2l6ZSArIDcpICYgfjc7Ci0JLyog
UmVzaXplIHRoZSByZXNpZGVudCBwYXJ0IG9mIHRoZSBhdHRyaWJ1dGUgcmVjb3JkLiAqLwotCWVy
cjIgPSBudGZzX2F0dHJfcmVjb3JkX3Jlc2l6ZShtLCBhLCBhcmVjX3NpemUpOwotCWlmICh1bmxp
a2VseShlcnIyKSkgewotCQkvKgotCQkgKiBUaGlzIGNhbm5vdCBoYXBwZW4gKHdlbGwgaWYgbWVt
b3J5IGNvcnJ1cHRpb24gaXMgYXQgd29yayBpdAotCQkgKiBjb3VsZCBoYXBwZW4gaW4gdGhlb3J5
KSwgYnV0IGRlYWwgd2l0aCBpdCBhcyB3ZWxsIGFzIHdlIGNhbi4KLQkJICogSWYgdGhlIG9sZCBz
aXplIGlzIHRvbyBzbWFsbCwgdHJ1bmNhdGUgdGhlIGF0dHJpYnV0ZSwKLQkJICogb3RoZXJ3aXNl
IHNpbXBseSBnaXZlIGl0IGEgbGFyZ2VyIGFsbG9jYXRlZCBzaXplLgotCQkgKiBGSVhNRTogU2hv
dWxkIGNoZWNrIHdoZXRoZXIgY2hrZHNrIGNvbXBsYWlucyB3aGVuIHRoZQotCQkgKiBhbGxvY2F0
ZWQgc2l6ZSBpcyBtdWNoIGJpZ2dlciB0aGFuIHRoZSByZXNpZGVudCB2YWx1ZSBzaXplLgotCQkg
Ki8KLQkJYXJlY19zaXplID0gbGUzMl90b19jcHUoYS0+bGVuZ3RoKTsKLQkJaWYgKChtcF9vZnMg
KyBhdHRyX3NpemUpID4gYXJlY19zaXplKSB7Ci0JCQllcnIyID0gYXR0cl9zaXplOwotCQkJYXR0
cl9zaXplID0gYXJlY19zaXplIC0gbXBfb2ZzOwotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFp
bGVkIHRvIHVuZG8gcGFydGlhbCByZXNpZGVudCAiCi0JCQkJCSJ0byBub24tcmVzaWRlbnQgYXR0
cmlidXRlICIKLQkJCQkJImNvbnZlcnNpb24uICBUcnVuY2F0aW5nIGlub2RlIDB4JWx4LCAiCi0J
CQkJCSJhdHRyaWJ1dGUgdHlwZSAweCV4IGZyb20gJWkgYnl0ZXMgdG8gIgotCQkJCQkiJWkgYnl0
ZXMgdG8gbWFpbnRhaW4gbWV0YWRhdGEgIgotCQkJCQkiY29uc2lzdGVuY3kuICBUSElTIE1FQU5T
IFlPVSBBUkUgIgotCQkJCQkiTE9TSU5HICVpIEJZVEVTIERBVEEgRlJPTSBUSElTICVzLiIsCi0J
CQkJCXZpLT5pX2lubywKLQkJCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwKLQkJ
CQkJZXJyMiwgYXR0cl9zaXplLCBlcnIyIC0gYXR0cl9zaXplLAotCQkJCQkoKG5pLT50eXBlID09
IEFUX0RBVEEpICYmCi0JCQkJCSFuaS0+bmFtZV9sZW4pID8gIkZJTEUiOiAiQVRUUklCVVRFIik7
Ci0JCQl3cml0ZV9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJCW5pLT5p
bml0aWFsaXplZF9zaXplID0gYXR0cl9zaXplOwotCQkJaV9zaXplX3dyaXRlKHZpLCBhdHRyX3Np
emUpOwotCQkJd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsK
LQkJfQotCX0KLQkvKiBTZXR1cCB0aGUgZmllbGRzIHNwZWNpZmljIHRvIHJlc2lkZW50IGF0dHJp
YnV0ZXMuICovCi0JYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGggPSBjcHVfdG9fbGUzMihh
dHRyX3NpemUpOwotCWEtPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0ID0gY3B1X3RvX2xlMTYo
bXBfb2ZzKTsKLQlhLT5kYXRhLnJlc2lkZW50LmZsYWdzID0gb2xkX3Jlc19hdHRyX2ZsYWdzOwot
CW1lbXNldCgmYS0+ZGF0YS5yZXNpZGVudC5yZXNlcnZlZCwgMCwKLQkJCXNpemVvZihhLT5kYXRh
LnJlc2lkZW50LnJlc2VydmVkKSk7Ci0JLyogQ29weSB0aGUgZGF0YSBmcm9tIHRoZSBwYWdlIGJh
Y2sgdG8gdGhlIGF0dHJpYnV0ZSB2YWx1ZS4gKi8KLQlpZiAocGFnZSkgewotCQlrYWRkciA9IGtt
YXBfYXRvbWljKHBhZ2UpOwotCQltZW1jcHkoKHU4KilhICsgbXBfb2ZzLCBrYWRkciwgYXR0cl9z
aXplKTsKLQkJa3VubWFwX2F0b21pYyhrYWRkcik7Ci0JfQotCS8qIFNldHVwIHRoZSBhbGxvY2F0
ZWQgc2l6ZSBpbiB0aGUgbnRmcyBpbm9kZSBpbiBjYXNlIGl0IGNoYW5nZWQuICovCi0Jd3JpdGVf
bG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbmktPmFsbG9jYXRlZF9zaXpl
ID0gYXJlY19zaXplIC0gbXBfb2ZzOwotCXdyaXRlX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6
ZV9sb2NrLCBmbGFncyk7Ci0JLyogTWFyayB0aGUgbWZ0IHJlY29yZCBkaXJ0eSwgc28gaXQgZ2V0
cyB3cml0dGVuIGJhY2suICovCi0JZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50
ZnNfaW5vKTsKLQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lubyk7Ci1lcnJfb3V0
OgotCWlmIChjdHgpCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCWlmIChtKQot
CQl1bm1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCW5pLT5ydW5saXN0LnJsID0gTlVMTDsKLQl1
cF93cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci1ybF9lcnJfb3V0OgotCWlmIChybCkgewotCQlp
ZiAobnRmc19jbHVzdGVyX2ZyZWVfZnJvbV9ybCh2b2wsIHJsKSA8IDApIHsKLQkJCW50ZnNfZXJy
b3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZWxlYXNlIGFsbG9jYXRlZCAiCi0JCQkJCSJjbHVzdGVy
KHMpIGluIGVycm9yIGNvZGUgcGF0aC4gIFJ1biAiCi0JCQkJCSJjaGtkc2sgdG8gcmVjb3ZlciB0
aGUgbG9zdCAiCi0JCQkJCSJjbHVzdGVyKHMpLiIpOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwot
CQl9Ci0JCW50ZnNfZnJlZShybCk7Ci1wYWdlX2Vycl9vdXQ6Ci0JCXVubG9ja19wYWdlKHBhZ2Up
OwotCQlwdXRfcGFnZShwYWdlKTsKLQl9Ci0JaWYgKGVyciA9PSAtRUlOVkFMKQotCQllcnIgPSAt
RUlPOwotCXJldHVybiBlcnI7Ci19Ci0KLS8qKgotICogbnRmc19hdHRyX2V4dGVuZF9hbGxvY2F0
aW9uIC0gZXh0ZW5kIHRoZSBhbGxvY2F0ZWQgc3BhY2Ugb2YgYW4gYXR0cmlidXRlCi0gKiBAbmk6
CQkJbnRmcyBpbm9kZSBvZiB0aGUgYXR0cmlidXRlIHdob3NlIGFsbG9jYXRpb24gdG8gZXh0ZW5k
Ci0gKiBAbmV3X2FsbG9jX3NpemU6CW5ldyBzaXplIGluIGJ5dGVzIHRvIHdoaWNoIHRvIGV4dGVu
ZCB0aGUgYWxsb2NhdGlvbiB0bwotICogQG5ld19kYXRhX3NpemU6CW5ldyBzaXplIGluIGJ5dGVz
IHRvIHdoaWNoIHRvIGV4dGVuZCB0aGUgZGF0YSB0bwotICogQGRhdGFfc3RhcnQ6CQliZWdpbm5p
bmcgb2YgcmVnaW9uIHdoaWNoIGlzIHJlcXVpcmVkIHRvIGJlIG5vbi1zcGFyc2UKLSAqCi0gKiBF
eHRlbmQgdGhlIGFsbG9jYXRlZCBzcGFjZSBvZiBhbiBhdHRyaWJ1dGUgZGVzY3JpYmVkIGJ5IHRo
ZSBudGZzIGlub2RlIEBuaQotICogdG8gQG5ld19hbGxvY19zaXplIGJ5dGVzLiAgSWYgQGRhdGFf
c3RhcnQgaXMgLTEsIHRoZSB3aG9sZSBleHRlbnNpb24gbWF5IGJlCi0gKiBpbXBsZW1lbnRlZCBh
cyBhIGhvbGUgaW4gdGhlIGZpbGUgKGFzIGxvbmcgYXMgYm90aCB0aGUgdm9sdW1lIGFuZCB0aGUg
bnRmcwotICogaW5vZGUgQG5pIGhhdmUgc3BhcnNlIHN1cHBvcnQgZW5hYmxlZCkuICBJZiBAZGF0
YV9zdGFydCBpcyA+PSAwLCB0aGVuIHRoZQotICogcmVnaW9uIGJldHdlZW4gdGhlIG9sZCBhbGxv
Y2F0ZWQgc2l6ZSBhbmQgQGRhdGFfc3RhcnQgLSAxIG1heSBiZSBtYWRlIHNwYXJzZQotICogYnV0
IHRoZSByZWdpb25zIGJldHdlZW4gQGRhdGFfc3RhcnQgYW5kIEBuZXdfYWxsb2Nfc2l6ZSBtdXN0
IGJlIGJhY2tlZCBieQotICogYWN0dWFsIGNsdXN0ZXJzLgotICoKLSAqIElmIEBuZXdfZGF0YV9z
aXplIGlzIC0xLCBpdCBpcyBpZ25vcmVkLiAgSWYgaXQgaXMgPj0gMCwgdGhlbiB0aGUgZGF0YSBz
aXplCi0gKiBvZiB0aGUgYXR0cmlidXRlIGlzIGV4dGVuZGVkIHRvIEBuZXdfZGF0YV9zaXplLiAg
Tm90ZSB0aGF0IHRoZSBpX3NpemUgb2YgdGhlCi0gKiB2ZnMgaW5vZGUgaXMgbm90IHVwZGF0ZWQu
ICBPbmx5IHRoZSBkYXRhIHNpemUgaW4gdGhlIGJhc2UgYXR0cmlidXRlIHJlY29yZAotICogaXMg
dXBkYXRlZC4gIFRoZSBjYWxsZXIgaGFzIHRvIHVwZGF0ZSBpX3NpemUgc2VwYXJhdGVseSBpZiB0
aGlzIGlzIHJlcXVpcmVkLgotICogV0FSTklORzogSXQgaXMgYSBCVUcoKSBmb3IgQG5ld19kYXRh
X3NpemUgdG8gYmUgc21hbGxlciB0aGFuIHRoZSBvbGQgZGF0YQotICogc2l6ZSBhcyB3ZWxsIGFz
IGZvciBAbmV3X2RhdGFfc2l6ZSB0byBiZSBncmVhdGVyIHRoYW4gQG5ld19hbGxvY19zaXplLgot
ICoKLSAqIEZvciByZXNpZGVudCBhdHRyaWJ1dGVzIHRoaXMgaW52b2x2ZXMgcmVzaXppbmcgdGhl
IGF0dHJpYnV0ZSByZWNvcmQgYW5kIGlmCi0gKiBuZWNlc3NhcnkgbW92aW5nIGl0IGFuZC9vciBv
dGhlciBhdHRyaWJ1dGVzIGludG8gZXh0ZW50IG1mdCByZWNvcmRzIGFuZC9vcgotICogY29udmVy
dGluZyB0aGUgYXR0cmlidXRlIHRvIGEgbm9uLXJlc2lkZW50IGF0dHJpYnV0ZSB3aGljaCBpbiB0
dXJuIGludm9sdmVzCi0gKiBleHRlbmRpbmcgdGhlIGFsbG9jYXRpb24gb2YgYSBub24tcmVzaWRl
bnQgYXR0cmlidXRlIGFzIGRlc2NyaWJlZCBiZWxvdy4KLSAqCi0gKiBGb3Igbm9uLXJlc2lkZW50
IGF0dHJpYnV0ZXMgdGhpcyBpbnZvbHZlcyBhbGxvY2F0aW5nIGNsdXN0ZXJzIGluIHRoZSBkYXRh
Ci0gKiB6b25lIG9uIHRoZSB2b2x1bWUgKGV4Y2VwdCBmb3IgcmVnaW9ucyB0aGF0IGFyZSBiZWlu
ZyBtYWRlIHNwYXJzZSkgYW5kCi0gKiBleHRlbmRpbmcgdGhlIHJ1biBsaXN0IHRvIGRlc2NyaWJl
IHRoZSBhbGxvY2F0ZWQgY2x1c3RlcnMgYXMgd2VsbCBhcwotICogdXBkYXRpbmcgdGhlIG1hcHBp
bmcgcGFpcnMgYXJyYXkgb2YgdGhlIGF0dHJpYnV0ZS4gIFRoaXMgaW4gdHVybiBpbnZvbHZlcwot
ICogcmVzaXppbmcgdGhlIGF0dHJpYnV0ZSByZWNvcmQgYW5kIGlmIG5lY2Vzc2FyeSBtb3Zpbmcg
aXQgYW5kL29yIG90aGVyCi0gKiBhdHRyaWJ1dGVzIGludG8gZXh0ZW50IG1mdCByZWNvcmRzIGFu
ZC9vciBzcGxpdHRpbmcgdGhlIGF0dHJpYnV0ZSByZWNvcmQKLSAqIGludG8gbXVsdGlwbGUgZXh0
ZW50IGF0dHJpYnV0ZSByZWNvcmRzLgotICoKLSAqIEFsc28sIHRoZSBhdHRyaWJ1dGUgbGlzdCBh
dHRyaWJ1dGUgaXMgdXBkYXRlZCBpZiBwcmVzZW50IGFuZCBpbiBzb21lIG9mIHRoZQotICogYWJv
dmUgY2FzZXMgKHRoZSBvbmVzIHdoZXJlIGV4dGVudCBtZnQgcmVjb3Jkcy9hdHRyaWJ1dGVzIGNv
bWUgaW50byBwbGF5KSwKLSAqIGFuIGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBpcyBjcmVhdGVk
IGlmIG5vdCBhbHJlYWR5IHByZXNlbnQuCi0gKgotICogUmV0dXJuIHRoZSBuZXcgYWxsb2NhdGVk
IHNpemUgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLiAgSW4gdGhlIGNhc2UKLSAqIHRo
YXQgYW4gZXJyb3IgaXMgZW5jb3VudGVyZWQgYnV0IGEgcGFydGlhbCBleHRlbnNpb24gYXQgbGVh
c3QgdXAgdG8KLSAqIEBkYXRhX3N0YXJ0IChpZiBwcmVzZW50KSBpcyBwb3NzaWJsZSwgdGhlIGFs
bG9jYXRpb24gaXMgcGFydGlhbGx5IGV4dGVuZGVkCi0gKiBhbmQgdGhpcyBpcyByZXR1cm5lZC4g
IFRoaXMgbWVhbnMgdGhlIGNhbGxlciBtdXN0IGNoZWNrIHRoZSByZXR1cm5lZCBzaXplIHRvCi0g
KiBkZXRlcm1pbmUgaWYgdGhlIGV4dGVuc2lvbiB3YXMgcGFydGlhbC4gIElmIEBkYXRhX3N0YXJ0
IGlzIC0xIHRoZW4gcGFydGlhbAotICogYWxsb2NhdGlvbnMgYXJlIG5vdCBwZXJmb3JtZWQuCi0g
KgotICogV0FSTklORzogRG8gbm90IGNhbGwgbnRmc19hdHRyX2V4dGVuZF9hbGxvY2F0aW9uKCkg
Zm9yICRNRlQvJERBVEEuCi0gKgotICogTG9ja2luZzogVGhpcyBmdW5jdGlvbiB0YWtlcyB0aGUg
cnVubGlzdCBsb2NrIG9mIEBuaSBmb3Igd3JpdGluZyBhcyB3ZWxsIGFzCi0gKiBsb2NraW5nIHRo
ZSBtZnQgcmVjb3JkIG9mIHRoZSBiYXNlIG50ZnMgaW5vZGUuICBUaGVzZSBsb2NrcyBhcmUgbWFp
bnRhaW5lZAotICogdGhyb3VnaG91dCBleGVjdXRpb24gb2YgdGhlIGZ1bmN0aW9uLiAgVGhlc2Ug
bG9ja3MgYXJlIHJlcXVpcmVkIHNvIHRoYXQgdGhlCi0gKiBhdHRyaWJ1dGUgY2FuIGJlIHJlc2l6
ZWQgc2FmZWx5IGFuZCBzbyB0aGF0IGl0IGNhbiBmb3IgZXhhbXBsZSBiZSBjb252ZXJ0ZWQKLSAq
IGZyb20gcmVzaWRlbnQgdG8gbm9uLXJlc2lkZW50IHNhZmVseS4KLSAqCi0gKiBUT0RPOiBBdCBw
cmVzZW50IGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBoYW5kbGluZyBpcyBub3QgaW1wbGVtZW50
ZWQuCi0gKgotICogVE9ETzogQXQgcHJlc2VudCBpdCBpcyBub3Qgc2FmZSB0byBjYWxsIHRoaXMg
ZnVuY3Rpb24gZm9yIGFueXRoaW5nIG90aGVyCi0gKiB0aGFuIHRoZSAkREFUQSBhdHRyaWJ1dGUo
cykgb2YgYW4gdW5jb21wcmVzc2VkIGFuZCB1bmVuY3J5cHRlZCBmaWxlLgotICovCi1zNjQgbnRm
c19hdHRyX2V4dGVuZF9hbGxvY2F0aW9uKG50ZnNfaW5vZGUgKm5pLCBzNjQgbmV3X2FsbG9jX3Np
emUsCi0JCWNvbnN0IHM2NCBuZXdfZGF0YV9zaXplLCBjb25zdCBzNjQgZGF0YV9zdGFydCkKLXsK
LQlWQ04gdmNuOwotCXM2NCBsbCwgYWxsb2NhdGVkX3NpemUsIHN0YXJ0ID0gZGF0YV9zdGFydDsK
LQlzdHJ1Y3QgaW5vZGUgKnZpID0gVkZTX0kobmkpOwotCW50ZnNfdm9sdW1lICp2b2wgPSBuaS0+
dm9sOwotCW50ZnNfaW5vZGUgKmJhc2Vfbmk7Ci0JTUZUX1JFQ09SRCAqbTsKLQlBVFRSX1JFQ09S
RCAqYTsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4OwotCXJ1bmxpc3RfZWxlbWVudCAqcmws
ICpybDI7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKLQlpbnQgZXJyLCBtcF9zaXplOwotCXUzMiBh
dHRyX2xlbiA9IDA7IC8qIFNpbGVuY2Ugc3R1cGlkIGdjYyB3YXJuaW5nLiAqLwotCWJvb2wgbXBf
cmVidWlsdDsKLQotI2lmZGVmIERFQlVHCi0JcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQlhbGxvY2F0ZWRfc2l6ZSA9IG5pLT5hbGxvY2F0ZWRfc2l6ZTsKLQlyZWFk
X3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbnRmc19kZWJ1Zygi
RW50ZXJpbmcgZm9yIGlfaW5vIDB4JWx4LCBhdHRyaWJ1dGUgdHlwZSAweCV4LCAiCi0JCQkib2xk
X2FsbG9jYXRlZF9zaXplIDB4JWxseCwgIgotCQkJIm5ld19hbGxvY2F0ZWRfc2l6ZSAweCVsbHgs
IG5ld19kYXRhX3NpemUgMHglbGx4LCAiCi0JCQkiZGF0YV9zdGFydCAweCVsbHguIiwgdmktPmlf
aW5vLAotCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwKLQkJCSh1bnNpZ25lZCBs
b25nIGxvbmcpYWxsb2NhdGVkX3NpemUsCi0JCQkodW5zaWduZWQgbG9uZyBsb25nKW5ld19hbGxv
Y19zaXplLAotCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyluZXdfZGF0YV9zaXplLAotCQkJKHVuc2ln
bmVkIGxvbmcgbG9uZylzdGFydCk7Ci0jZW5kaWYKLXJldHJ5X2V4dGVuZDoKLQkvKgotCSAqIEZv
ciBub24tcmVzaWRlbnQgYXR0cmlidXRlcywgQHN0YXJ0IGFuZCBAbmV3X3NpemUgbmVlZCB0byBi
ZSBhbGlnbmVkCi0JICogdG8gY2x1c3RlciBib3VuZGFyaWVzIGZvciBhbGxvY2F0aW9uIHB1cnBv
c2VzLgotCSAqLwotCWlmIChOSW5vTm9uUmVzaWRlbnQobmkpKSB7Ci0JCWlmIChzdGFydCA+IDAp
Ci0JCQlzdGFydCAmPSB+KHM2NCl2b2wtPmNsdXN0ZXJfc2l6ZV9tYXNrOwotCQluZXdfYWxsb2Nf
c2l6ZSA9IChuZXdfYWxsb2Nfc2l6ZSArIHZvbC0+Y2x1c3Rlcl9zaXplIC0gMSkgJgotCQkJCX4o
czY0KXZvbC0+Y2x1c3Rlcl9zaXplX21hc2s7Ci0JfQotCUJVR19PTihuZXdfZGF0YV9zaXplID49
IDAgJiYgbmV3X2RhdGFfc2l6ZSA+IG5ld19hbGxvY19zaXplKTsKLQkvKiBDaGVjayBpZiBuZXcg
c2l6ZSBpcyBhbGxvd2VkIGluICRBdHRyRGVmLiAqLwotCWVyciA9IG50ZnNfYXR0cl9zaXplX2Jv
dW5kc19jaGVjayh2b2wsIG5pLT50eXBlLCBuZXdfYWxsb2Nfc2l6ZSk7Ci0JaWYgKHVubGlrZWx5
KGVycikpIHsKLQkJLyogT25seSBlbWl0IGVycm9ycyB3aGVuIHRoZSB3cml0ZSB3aWxsIGZhaWwg
Y29tcGxldGVseS4gKi8KLQkJcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdz
KTsKLQkJYWxsb2NhdGVkX3NpemUgPSBuaS0+YWxsb2NhdGVkX3NpemU7Ci0JCXJlYWRfdW5sb2Nr
X2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJaWYgKHN0YXJ0IDwgMCB8fCBz
dGFydCA+PSBhbGxvY2F0ZWRfc2l6ZSkgewotCQkJaWYgKGVyciA9PSAtRVJBTkdFKSB7Ci0JCQkJ
bnRmc19lcnJvcih2b2wtPnNiLCAiQ2Fubm90IGV4dGVuZCBhbGxvY2F0aW9uICIKLQkJCQkJCSJv
ZiBpbm9kZSAweCVseCwgYXR0cmlidXRlICIKLQkJCQkJCSJ0eXBlIDB4JXgsIGJlY2F1c2UgdGhl
IG5ldyAiCi0JCQkJCQkiYWxsb2NhdGlvbiB3b3VsZCBleGNlZWQgdGhlICIKLQkJCQkJCSJtYXhp
bXVtIGFsbG93ZWQgc2l6ZSBmb3IgIgotCQkJCQkJInRoaXMgYXR0cmlidXRlIHR5cGUuIiwKLQkJ
CQkJCXZpLT5pX2lubywgKHVuc2lnbmVkKQotCQkJCQkJbGUzMl90b19jcHUobmktPnR5cGUpKTsK
LQkJCX0gZWxzZSB7Ci0JCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiQ2Fubm90IGV4dGVuZCBhbGxv
Y2F0aW9uICIKLQkJCQkJCSJvZiBpbm9kZSAweCVseCwgYXR0cmlidXRlICIKLQkJCQkJCSJ0eXBl
IDB4JXgsIGJlY2F1c2UgdGhpcyAiCi0JCQkJCQkiYXR0cmlidXRlIHR5cGUgaXMgbm90ICIKLQkJ
CQkJCSJkZWZpbmVkIG9uIHRoZSBOVEZTIHZvbHVtZS4gICIKLQkJCQkJCSJQb3NzaWJsZSBjb3Jy
dXB0aW9uISAgWW91ICIKLQkJCQkJCSJzaG91bGQgcnVuIGNoa2RzayEiLAotCQkJCQkJdmktPmlf
aW5vLCAodW5zaWduZWQpCi0JCQkJCQlsZTMyX3RvX2NwdShuaS0+dHlwZSkpOwotCQkJfQotCQl9
Ci0JCS8qIFRyYW5zbGF0ZSBlcnJvciBjb2RlIHRvIGJlIFBPU0lYIGNvbmZvcm1hbnQgZm9yIHdy
aXRlKDIpLiAqLwotCQlpZiAoZXJyID09IC1FUkFOR0UpCi0JCQllcnIgPSAtRUZCSUc7Ci0JCWVs
c2UKLQkJCWVyciA9IC1FSU87Ci0JCXJldHVybiBlcnI7Ci0JfQotCWlmICghTklub0F0dHIobmkp
KQotCQliYXNlX25pID0gbmk7Ci0JZWxzZQotCQliYXNlX25pID0gbmktPmV4dC5iYXNlX250ZnNf
aW5vOwotCS8qCi0JICogV2Ugd2lsbCBiZSBtb2RpZnlpbmcgYm90aCB0aGUgcnVubGlzdCAoaWYg
bm9uLXJlc2lkZW50KSBhbmQgdGhlIG1mdAotCSAqIHJlY29yZCBzbyBsb2NrIHRoZW0gYm90aCBk
b3duLgotCSAqLwotCWRvd25fd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotCW0gPSBtYXBfbWZ0
X3JlY29yZChiYXNlX25pKTsKLQlpZiAoSVNfRVJSKG0pKSB7Ci0JCWVyciA9IFBUUl9FUlIobSk7
Ci0JCW0gPSBOVUxMOwotCQljdHggPSBOVUxMOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWN0eCA9
IG50ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChiYXNlX25pLCBtKTsKLQlpZiAodW5saWtlbHkoIWN0
eCkpIHsKLQkJZXJyID0gLUVOT01FTTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQlyZWFkX2xvY2tf
aXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWFsbG9jYXRlZF9zaXplID0gbmktPmFs
bG9jYXRlZF9zaXplOwotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZs
YWdzKTsKLQkvKgotCSAqIElmIG5vbi1yZXNpZGVudCwgc2VlayB0byB0aGUgbGFzdCBleHRlbnQu
ICBJZiByZXNpZGVudCwgdGhlcmUgaXMKLQkgKiBvbmx5IG9uZSBleHRlbnQsIHNvIHNlZWsgdG8g
dGhhdC4KLQkgKi8KLQl2Y24gPSBOSW5vTm9uUmVzaWRlbnQobmkpID8gYWxsb2NhdGVkX3NpemUg
Pj4gdm9sLT5jbHVzdGVyX3NpemVfYml0cyA6Ci0JCQkwOwotCS8qCi0JICogQWJvcnQgaWYgc29t
ZW9uZSBkaWQgdGhlIHdvcmsgd2hpbHN0IHdlIHdhaXRlZCBmb3IgdGhlIGxvY2tzLiAgSWYgd2UK
LQkgKiBqdXN0IGNvbnZlcnRlZCB0aGUgYXR0cmlidXRlIGZyb20gcmVzaWRlbnQgdG8gbm9uLXJl
c2lkZW50IGl0IGlzCi0JICogbGlrZWx5IHRoYXQgZXhhY3RseSB0aGlzIGhhcyBoYXBwZW5lZCBh
bHJlYWR5LiAgV2UgY2Fubm90IHF1aXRlCi0JICogYWJvcnQgaWYgd2UgbmVlZCB0byB1cGRhdGUg
dGhlIGRhdGEgc2l6ZS4KLQkgKi8KLQlpZiAodW5saWtlbHkobmV3X2FsbG9jX3NpemUgPD0gYWxs
b2NhdGVkX3NpemUpKSB7Ci0JCW50ZnNfZGVidWcoIkFsbG9jYXRlZCBzaXplIGFscmVhZHkgZXhj
ZWVkcyByZXF1ZXN0ZWQgc2l6ZS4iKTsKLQkJbmV3X2FsbG9jX3NpemUgPSBhbGxvY2F0ZWRfc2l6
ZTsKLQkJaWYgKG5ld19kYXRhX3NpemUgPCAwKQotCQkJZ290byBkb25lOwotCQkvKgotCQkgKiBX
ZSB3YW50IHRoZSBmaXJzdCBhdHRyaWJ1dGUgZXh0ZW50IHNvIHRoYXQgd2UgY2FuIHVwZGF0ZSB0
aGUKLQkJICogZGF0YSBzaXplLgotCQkgKi8KLQkJdmNuID0gMDsKLQl9Ci0JZXJyID0gbnRmc19h
dHRyX2xvb2t1cChuaS0+dHlwZSwgbmktPm5hbWUsIG5pLT5uYW1lX2xlbiwKLQkJCUNBU0VfU0VO
U0lUSVZFLCB2Y24sIE5VTEwsIDAsIGN0eCk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJaWYg
KGVyciA9PSAtRU5PRU5UKQotCQkJZXJyID0gLUVJTzsKLQkJZ290byBlcnJfb3V0OwotCX0KLQlt
ID0gY3R4LT5tcmVjOwotCWEgPSBjdHgtPmF0dHI7Ci0JLyogVXNlIGdvdG8gdG8gcmVkdWNlIGlu
ZGVudGF0aW9uLiAqLwotCWlmIChhLT5ub25fcmVzaWRlbnQpCi0JCWdvdG8gZG9fbm9uX3Jlc2lk
ZW50X2V4dGVuZDsKLQlCVUdfT04oTklub05vblJlc2lkZW50KG5pKSk7Ci0JLyogVGhlIHRvdGFs
IGxlbmd0aCBvZiB0aGUgYXR0cmlidXRlIHZhbHVlLiAqLwotCWF0dHJfbGVuID0gbGUzMl90b19j
cHUoYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpOwotCS8qCi0JICogRXh0ZW5kIHRoZSBh
dHRyaWJ1dGUgcmVjb3JkIHRvIGJlIGFibGUgdG8gc3RvcmUgdGhlIG5ldyBhdHRyaWJ1dGUKLQkg
KiBzaXplLiAgbnRmc19hdHRyX3JlY29yZF9yZXNpemUoKSB3aWxsIG5vdCBkbyBhbnl0aGluZyBp
ZiB0aGUgc2l6ZSBpcwotCSAqIG5vdCBjaGFuZ2luZy4KLQkgKi8KLQlpZiAobmV3X2FsbG9jX3Np
emUgPCB2b2wtPm1mdF9yZWNvcmRfc2l6ZSAmJgotCQkJIW50ZnNfYXR0cl9yZWNvcmRfcmVzaXpl
KG0sIGEsCi0JCQlsZTE2X3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkgKwot
CQkJbmV3X2FsbG9jX3NpemUpKSB7Ci0JCS8qIFRoZSByZXNpemUgc3VjY2VlZGVkISAqLwotCQl3
cml0ZV9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJbmktPmFsbG9jYXRl
ZF9zaXplID0gbGUzMl90b19jcHUoYS0+bGVuZ3RoKSAtCi0JCQkJbGUxNl90b19jcHUoYS0+ZGF0
YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpOwotCQl3cml0ZV91bmxvY2tfaXJxcmVzdG9yZSgmbmkt
PnNpemVfbG9jaywgZmxhZ3MpOwotCQlpZiAobmV3X2RhdGFfc2l6ZSA+PSAwKSB7Ci0JCQlCVUdf
T04obmV3X2RhdGFfc2l6ZSA8IGF0dHJfbGVuKTsKLQkJCWEtPmRhdGEucmVzaWRlbnQudmFsdWVf
bGVuZ3RoID0KLQkJCQkJY3B1X3RvX2xlMzIoKHUzMiluZXdfZGF0YV9zaXplKTsKLQkJfQotCQln
b3RvIGZsdXNoX2RvbmU7Ci0JfQotCS8qCi0JICogV2UgaGF2ZSB0byBkcm9wIGFsbCB0aGUgbG9j
a3Mgc28gd2UgY2FuIGNhbGwKLQkgKiBudGZzX2F0dHJfbWFrZV9ub25fcmVzaWRlbnQoKS4gIFRo
aXMgY291bGQgYmUgb3B0aW1pc2VkIGJ5IHRyeS0KLQkgKiBsb2NraW5nIHRoZSBmaXJzdCBwYWdl
IGNhY2hlIHBhZ2UgYW5kIG9ubHkgaWYgdGhhdCBmYWlscyBkcm9wcGluZwotCSAqIHRoZSBsb2Nr
cywgbG9ja2luZyB0aGUgcGFnZSwgYW5kIHJlZG9pbmcgYWxsIHRoZSBsb2NraW5nIGFuZAotCSAq
IGxvb2t1cHMuICBXaGlsZSB0aGlzIHdvdWxkIGJlIGEgaHVnZSBvcHRpbWlzYXRpb24sIGl0IGlz
IG5vdCB3b3J0aAotCSAqIGl0IGFzIHRoaXMgaXMgZGVmaW5pdGVseSBhIHNsb3cgY29kZSBwYXRo
LgotCSAqLwotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCXVubWFwX21mdF9yZWNv
cmQoYmFzZV9uaSk7Ci0JdXBfd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotCS8qCi0JICogTm90
IGVub3VnaCBzcGFjZSBpbiB0aGUgbWZ0IHJlY29yZCwgdHJ5IHRvIG1ha2UgdGhlIGF0dHJpYnV0
ZQotCSAqIG5vbi1yZXNpZGVudCBhbmQgaWYgc3VjY2Vzc2Z1bCByZXN0YXJ0IHRoZSBleHRlbnNp
b24gcHJvY2Vzcy4KLQkgKi8KLQllcnIgPSBudGZzX2F0dHJfbWFrZV9ub25fcmVzaWRlbnQobmks
IGF0dHJfbGVuKTsKLQlpZiAobGlrZWx5KCFlcnIpKQotCQlnb3RvIHJldHJ5X2V4dGVuZDsKLQkv
KgotCSAqIENvdWxkIG5vdCBtYWtlIG5vbi1yZXNpZGVudC4gIElmIHRoaXMgaXMgZHVlIHRvIHRo
aXMgbm90IGJlaW5nCi0JICogcGVybWl0dGVkIGZvciB0aGlzIGF0dHJpYnV0ZSB0eXBlIG9yIHRo
ZXJlIG5vdCBiZWluZyBlbm91Z2ggc3BhY2UsCi0JICogdHJ5IHRvIG1ha2Ugb3RoZXIgYXR0cmli
dXRlcyBub24tcmVzaWRlbnQuICBPdGhlcndpc2UgZmFpbC4KLQkgKi8KLQlpZiAodW5saWtlbHko
ZXJyICE9IC1FUEVSTSAmJiBlcnIgIT0gLUVOT1NQQykpIHsKLQkJLyogT25seSBlbWl0IGVycm9y
cyB3aGVuIHRoZSB3cml0ZSB3aWxsIGZhaWwgY29tcGxldGVseS4gKi8KLQkJcmVhZF9sb2NrX2ly
cXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJYWxsb2NhdGVkX3NpemUgPSBuaS0+YWxs
b2NhdGVkX3NpemU7Ci0JCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZs
YWdzKTsKLQkJaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSBhbGxvY2F0ZWRfc2l6ZSkKLQkJCW50
ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCBleHRlbmQgYWxsb2NhdGlvbiBvZiAiCi0JCQkJCSJp
bm9kZSAweCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgIgotCQkJCQkiYmVjYXVzZSB0aGUgY29u
dmVyc2lvbiBmcm9tIHJlc2lkZW50ICIKLQkJCQkJInRvIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGUg
ZmFpbGVkICIKLQkJCQkJIndpdGggZXJyb3IgY29kZSAlaS4iLCB2aS0+aV9pbm8sCi0JCQkJCSh1
bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSksIGVycik7Ci0JCWlmIChlcnIgIT0gLUVOT01F
TSkKLQkJCWVyciA9IC1FSU87Ci0JCWdvdG8gY29udl9lcnJfb3V0OwotCX0KLQkvKiBUT0RPOiBO
b3QgaW1wbGVtZW50ZWQgZnJvbSBoZXJlLCBhYm9ydC4gKi8KLQlyZWFkX2xvY2tfaXJxc2F2ZSgm
bmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWFsbG9jYXRlZF9zaXplID0gbmktPmFsbG9jYXRlZF9z
aXplOwotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlp
ZiAoc3RhcnQgPCAwIHx8IHN0YXJ0ID49IGFsbG9jYXRlZF9zaXplKSB7Ci0JCWlmIChlcnIgPT0g
LUVOT1NQQykKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk5vdCBlbm91Z2ggc3BhY2UgaW4gdGhl
IG1mdCAiCi0JCQkJCSJyZWNvcmQvb24gZGlzayBmb3IgdGhlIG5vbi1yZXNpZGVudCAiCi0JCQkJ
CSJhdHRyaWJ1dGUgdmFsdWUuICBUaGlzIGNhc2UgaXMgbm90ICIKLQkJCQkJImltcGxlbWVudGVk
IHlldC4iKTsKLQkJZWxzZSAvKiBpZiAoZXJyID09IC1FUEVSTSkgKi8KLQkJCW50ZnNfZXJyb3Io
dm9sLT5zYiwgIlRoaXMgYXR0cmlidXRlIHR5cGUgbWF5IG5vdCBiZSAiCi0JCQkJCSJub24tcmVz
aWRlbnQuICBUaGlzIGNhc2UgaXMgbm90ICIKLQkJCQkJImltcGxlbWVudGVkIHlldC4iKTsKLQl9
Ci0JZXJyID0gLUVPUE5PVFNVUFA7Ci0JZ290byBjb252X2Vycl9vdXQ7Ci0jaWYgMAotCS8vIFRP
RE86IEF0dGVtcHQgdG8gbWFrZSBvdGhlciBhdHRyaWJ1dGVzIG5vbi1yZXNpZGVudC4KLQlpZiAo
IWVycikKLQkJZ290byBkb19yZXNpZGVudF9leHRlbmQ7Ci0JLyoKLQkgKiBCb3RoIHRoZSBhdHRy
aWJ1dGUgbGlzdCBhdHRyaWJ1dGUgYW5kIHRoZSBzdGFuZGFyZCBpbmZvcm1hdGlvbgotCSAqIGF0
dHJpYnV0ZSBtdXN0IHJlbWFpbiBpbiB0aGUgYmFzZSBpbm9kZS4gIFRodXMsIGlmIHRoaXMgaXMg
b25lIG9mCi0JICogdGhlc2UgYXR0cmlidXRlcywgd2UgaGF2ZSB0byB0cnkgdG8gbW92ZSBvdGhl
ciBhdHRyaWJ1dGVzIG91dCBpbnRvCi0JICogZXh0ZW50IG1mdCByZWNvcmRzIGluc3RlYWQuCi0J
ICovCi0JaWYgKG5pLT50eXBlID09IEFUX0FUVFJJQlVURV9MSVNUIHx8Ci0JCQluaS0+dHlwZSA9
PSBBVF9TVEFOREFSRF9JTkZPUk1BVElPTikgewotCQkvLyBUT0RPOiBBdHRlbXB0IHRvIG1vdmUg
b3RoZXIgYXR0cmlidXRlcyBpbnRvIGV4dGVudCBtZnQKLQkJLy8gcmVjb3Jkcy4KLQkJZXJyID0g
LUVPUE5PVFNVUFA7Ci0JCWlmICghZXJyKQotCQkJZ290byBkb19yZXNpZGVudF9leHRlbmQ7Ci0J
CWdvdG8gZXJyX291dDsKLQl9Ci0JLy8gVE9ETzogQXR0ZW1wdCB0byBtb3ZlIHRoaXMgYXR0cmli
dXRlIHRvIGFuIGV4dGVudCBtZnQgcmVjb3JkLCBidXQKLQkvLyBvbmx5IGlmIGl0IGlzIG5vdCBh
bHJlYWR5IHRoZSBvbmx5IGF0dHJpYnV0ZSBpbiBhbiBtZnQgcmVjb3JkIGluCi0JLy8gd2hpY2gg
Y2FzZSB0aGVyZSB3b3VsZCBiZSBub3RoaW5nIHRvIGdhaW4uCi0JZXJyID0gLUVPUE5PVFNVUFA7
Ci0JaWYgKCFlcnIpCi0JCWdvdG8gZG9fcmVzaWRlbnRfZXh0ZW5kOwotCS8qIFRoZXJlIGlzIG5v
dGhpbmcgd2UgY2FuIGRvIHRvIG1ha2UgZW5vdWdoIHNwYWNlLiApLTogKi8KLQlnb3RvIGVycl9v
dXQ7Ci0jZW5kaWYKLWRvX25vbl9yZXNpZGVudF9leHRlbmQ6Ci0JQlVHX09OKCFOSW5vTm9uUmVz
aWRlbnQobmkpKTsKLQlpZiAobmV3X2FsbG9jX3NpemUgPT0gYWxsb2NhdGVkX3NpemUpIHsKLQkJ
QlVHX09OKHZjbik7Ci0JCWdvdG8gYWxsb2NfZG9uZTsKLQl9Ci0JLyoKLQkgKiBJZiB0aGUgZGF0
YSBzdGFydHMgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgb2xkIGFsbG9jYXRpb24sIHRoaXMgaXMgYQot
CSAqICREQVRBIGF0dHJpYnV0ZSBhbmQgc3BhcnNlIGF0dHJpYnV0ZXMgYXJlIGVuYWJsZWQgb24g
dGhlIHZvbHVtZSBhbmQKLQkgKiBmb3IgdGhpcyBpbm9kZSwgdGhlbiBjcmVhdGUgYSBzcGFyc2Ug
cmVnaW9uIGJldHdlZW4gdGhlIG9sZAotCSAqIGFsbG9jYXRlZCBzaXplIGFuZCB0aGUgc3RhcnQg
b2YgdGhlIGRhdGEuICBPdGhlcndpc2Ugc2ltcGx5IHByb2NlZWQKLQkgKiB3aXRoIGZpbGxpbmcg
dGhlIHdob2xlIHNwYWNlIGJldHdlZW4gdGhlIG9sZCBhbGxvY2F0ZWQgc2l6ZSBhbmQgdGhlCi0J
ICogbmV3IGFsbG9jYXRlZCBzaXplIHdpdGggY2x1c3RlcnMuCi0JICovCi0JaWYgKChzdGFydCA+
PSAwICYmIHN0YXJ0IDw9IGFsbG9jYXRlZF9zaXplKSB8fCBuaS0+dHlwZSAhPSBBVF9EQVRBIHx8
Ci0JCQkhTlZvbFNwYXJzZUVuYWJsZWQodm9sKSB8fCBOSW5vU3BhcnNlRGlzYWJsZWQobmkpKQot
CQlnb3RvIHNraXBfc3BhcnNlOwotCS8vIFRPRE86IFRoaXMgaXMgbm90IGltcGxlbWVudGVkIHll
dC4gIFdlIGp1c3QgZmlsbCBpbiB3aXRoIHJlYWwKLQkvLyBjbHVzdGVycyBmb3Igbm93Li4uCi0J
bnRmc19kZWJ1ZygiSW5zZXJ0aW5nIGhvbGVzIGlzIG5vdC1pbXBsZW1lbnRlZCB5ZXQuICBGYWxs
aW5nIGJhY2sgdG8gIgotCQkJImFsbG9jYXRpbmcgcmVhbCBjbHVzdGVycyBpbnN0ZWFkLiIpOwot
c2tpcF9zcGFyc2U6Ci0JcmwgPSBuaS0+cnVubGlzdC5ybDsKLQlpZiAobGlrZWx5KHJsKSkgewot
CQkvKiBTZWVrIHRvIHRoZSBlbmQgb2YgdGhlIHJ1bmxpc3QuICovCi0JCXdoaWxlIChybC0+bGVu
Z3RoKQotCQkJcmwrKzsKLQl9Ci0JLyogSWYgdGhpcyBhdHRyaWJ1dGUgZXh0ZW50IGlzIG5vdCBt
YXBwZWQsIG1hcCBpdCBub3cuICovCi0JaWYgKHVubGlrZWx5KCFybCB8fCBybC0+bGNuID09IExD
Tl9STF9OT1RfTUFQUEVEIHx8Ci0JCQkocmwtPmxjbiA9PSBMQ05fRU5PRU5UICYmIHJsID4gbmkt
PnJ1bmxpc3QucmwgJiYKLQkJCShybC0xKS0+bGNuID09IExDTl9STF9OT1RfTUFQUEVEKSkpIHsK
LQkJaWYgKCFybCAmJiAhYWxsb2NhdGVkX3NpemUpCi0JCQlnb3RvIGZpcnN0X2FsbG9jOwotCQly
bCA9IG50ZnNfbWFwcGluZ19wYWlyc19kZWNvbXByZXNzKHZvbCwgYSwgbmktPnJ1bmxpc3Qucmwp
OwotCQlpZiAoSVNfRVJSKHJsKSkgewotCQkJZXJyID0gUFRSX0VSUihybCk7Ci0JCQlpZiAoc3Rh
cnQgPCAwIHx8IHN0YXJ0ID49IGFsbG9jYXRlZF9zaXplKQotCQkJCW50ZnNfZXJyb3Iodm9sLT5z
YiwgIkNhbm5vdCBleHRlbmQgYWxsb2NhdGlvbiAiCi0JCQkJCQkib2YgaW5vZGUgMHglbHgsIGF0
dHJpYnV0ZSAiCi0JCQkJCQkidHlwZSAweCV4LCBiZWNhdXNlIHRoZSAiCi0JCQkJCQkibWFwcGlu
ZyBvZiBhIHJ1bmxpc3QgIgotCQkJCQkJImZyYWdtZW50IGZhaWxlZCB3aXRoIGVycm9yICIKLQkJ
CQkJCSJjb2RlICVpLiIsIHZpLT5pX2lubywKLQkJCQkJCSh1bnNpZ25lZClsZTMyX3RvX2NwdShu
aS0+dHlwZSksCi0JCQkJCQllcnIpOwotCQkJaWYgKGVyciAhPSAtRU5PTUVNKQotCQkJCWVyciA9
IC1FSU87Ci0JCQlnb3RvIGVycl9vdXQ7Ci0JCX0KLQkJbmktPnJ1bmxpc3QucmwgPSBybDsKLQkJ
LyogU2VlayB0byB0aGUgZW5kIG9mIHRoZSBydW5saXN0LiAqLwotCQl3aGlsZSAocmwtPmxlbmd0
aCkKLQkJCXJsKys7Ci0JfQotCS8qCi0JICogV2Ugbm93IGtub3cgdGhlIHJ1bmxpc3Qgb2YgdGhl
IGxhc3QgZXh0ZW50IGlzIG1hcHBlZCBhbmQgQHJsIGlzIGF0Ci0JICogdGhlIGVuZCBvZiB0aGUg
cnVubGlzdC4gIFdlIHdhbnQgdG8gYmVnaW4gYWxsb2NhdGluZyBjbHVzdGVycwotCSAqIHN0YXJ0
aW5nIGF0IHRoZSBsYXN0IGFsbG9jYXRlZCBjbHVzdGVyIHRvIHJlZHVjZSBmcmFnbWVudGF0aW9u
LiAgSWYKLQkgKiB0aGVyZSBhcmUgbm8gdmFsaWQgTENOcyBpbiB0aGUgYXR0cmlidXRlIHdlIGxl
dCB0aGUgY2x1c3RlcgotCSAqIGFsbG9jYXRvciBjaG9vc2UgdGhlIHN0YXJ0aW5nIGNsdXN0ZXIu
Ci0JICovCi0JLyogSWYgdGhlIGxhc3QgTENOIGlzIGEgaG9sZSBvciBzaW1pbGxhciBzZWVrIGJh
Y2sgdG8gbGFzdCByZWFsIExDTi4gKi8KLQl3aGlsZSAocmwtPmxjbiA8IDAgJiYgcmwgPiBuaS0+
cnVubGlzdC5ybCkKLQkJcmwtLTsKLWZpcnN0X2FsbG9jOgotCS8vIEZJWE1FOiBOZWVkIHRvIGlt
cGxlbWVudCBwYXJ0aWFsIGFsbG9jYXRpb25zIHNvIGF0IGxlYXN0IHBhcnQgb2YgdGhlCi0JLy8g
d3JpdGUgY2FuIGJlIHBlcmZvcm1lZCB3aGVuIHN0YXJ0ID49IDAuICAoTmVlZGVkIGZvciBQT1NJ
WCB3cml0ZSgyKQotCS8vIGNvbmZvcm1hbmNlLikKLQlybDIgPSBudGZzX2NsdXN0ZXJfYWxsb2Mo
dm9sLCBhbGxvY2F0ZWRfc2l6ZSA+PiB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzLAotCQkJKG5ld19h
bGxvY19zaXplIC0gYWxsb2NhdGVkX3NpemUpID4+Ci0JCQl2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRz
LCAocmwgJiYgKHJsLT5sY24gPj0gMCkpID8KLQkJCXJsLT5sY24gKyBybC0+bGVuZ3RoIDogLTEs
IERBVEFfWk9ORSwgdHJ1ZSk7Ci0JaWYgKElTX0VSUihybDIpKSB7Ci0JCWVyciA9IFBUUl9FUlIo
cmwyKTsKLQkJaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSBhbGxvY2F0ZWRfc2l6ZSkKLQkJCW50
ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCBleHRlbmQgYWxsb2NhdGlvbiBvZiAiCi0JCQkJCSJp
bm9kZSAweCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgIgotCQkJCQkiYmVjYXVzZSB0aGUgYWxs
b2NhdGlvbiBvZiBjbHVzdGVycyAiCi0JCQkJCSJmYWlsZWQgd2l0aCBlcnJvciBjb2RlICVpLiIs
IHZpLT5pX2lubywKLQkJCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwgZXJyKTsK
LQkJaWYgKGVyciAhPSAtRU5PTUVNICYmIGVyciAhPSAtRU5PU1BDKQotCQkJZXJyID0gLUVJTzsK
LQkJZ290byBlcnJfb3V0OwotCX0KLQlybCA9IG50ZnNfcnVubGlzdHNfbWVyZ2UobmktPnJ1bmxp
c3QucmwsIHJsMik7Ci0JaWYgKElTX0VSUihybCkpIHsKLQkJZXJyID0gUFRSX0VSUihybCk7Ci0J
CWlmIChzdGFydCA8IDAgfHwgc3RhcnQgPj0gYWxsb2NhdGVkX3NpemUpCi0JCQludGZzX2Vycm9y
KHZvbC0+c2IsICJDYW5ub3QgZXh0ZW5kIGFsbG9jYXRpb24gb2YgIgotCQkJCQkiaW5vZGUgMHgl
bHgsIGF0dHJpYnV0ZSB0eXBlIDB4JXgsICIKLQkJCQkJImJlY2F1c2UgdGhlIHJ1bmxpc3QgbWVy
Z2UgZmFpbGVkICIKLQkJCQkJIndpdGggZXJyb3IgY29kZSAlaS4iLCB2aS0+aV9pbm8sCi0JCQkJ
CSh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSksIGVycik7Ci0JCWlmIChlcnIgIT0gLUVO
T01FTSkKLQkJCWVyciA9IC1FSU87Ci0JCWlmIChudGZzX2NsdXN0ZXJfZnJlZV9mcm9tX3JsKHZv
bCwgcmwyKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHJlbGVhc2UgYWxs
b2NhdGVkICIKLQkJCQkJImNsdXN0ZXIocykgaW4gZXJyb3IgY29kZSBwYXRoLiAgUnVuICIKLQkJ
CQkJImNoa2RzayB0byByZWNvdmVyIHRoZSBsb3N0ICIKLQkJCQkJImNsdXN0ZXIocykuIik7Ci0J
CQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCX0KLQkJbnRmc19mcmVlKHJsMik7Ci0JCWdvdG8gZXJy
X291dDsKLQl9Ci0JbmktPnJ1bmxpc3QucmwgPSBybDsKLQludGZzX2RlYnVnKCJBbGxvY2F0ZWQg
MHglbGx4IGNsdXN0ZXJzLiIsIChsb25nIGxvbmcpKG5ld19hbGxvY19zaXplIC0KLQkJCWFsbG9j
YXRlZF9zaXplKSA+PiB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzKTsKLQkvKiBGaW5kIHRoZSBydW5s
aXN0IGVsZW1lbnQgd2l0aCB3aGljaCB0aGUgYXR0cmlidXRlIGV4dGVudCBzdGFydHMuICovCi0J
bGwgPSBzbGU2NF90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3Zjbik7Ci0Jcmwy
ID0gbnRmc19ybF9maW5kX3Zjbl9ub2xvY2socmwsIGxsKTsKLQlCVUdfT04oIXJsMik7Ci0JQlVH
X09OKCFybDItPmxlbmd0aCk7Ci0JQlVHX09OKHJsMi0+bGNuIDwgTENOX0hPTEUpOwotCW1wX3Jl
YnVpbHQgPSBmYWxzZTsKLQkvKiBHZXQgdGhlIHNpemUgZm9yIHRoZSBuZXcgbWFwcGluZyBwYWly
cyBhcnJheSBmb3IgdGhpcyBleHRlbnQuICovCi0JbXBfc2l6ZSA9IG50ZnNfZ2V0X3NpemVfZm9y
X21hcHBpbmdfcGFpcnModm9sLCBybDIsIGxsLCAtMSk7Ci0JaWYgKHVubGlrZWx5KG1wX3NpemUg
PD0gMCkpIHsKLQkJZXJyID0gbXBfc2l6ZTsKLQkJaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSBh
bGxvY2F0ZWRfc2l6ZSkKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCBleHRlbmQgYWxs
b2NhdGlvbiBvZiAiCi0JCQkJCSJpbm9kZSAweCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgIgot
CQkJCQkiYmVjYXVzZSBkZXRlcm1pbmluZyB0aGUgc2l6ZSBmb3IgdGhlICIKLQkJCQkJIm1hcHBp
bmcgcGFpcnMgZmFpbGVkIHdpdGggZXJyb3IgY29kZSAiCi0JCQkJCSIlaS4iLCB2aS0+aV9pbm8s
Ci0JCQkJCSh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSksIGVycik7Ci0JCWVyciA9IC1F
SU87Ci0JCWdvdG8gdW5kb19hbGxvYzsKLQl9Ci0JLyogRXh0ZW5kIHRoZSBhdHRyaWJ1dGUgcmVj
b3JkIHRvIGZpdCB0aGUgYmlnZ2VyIG1hcHBpbmcgcGFpcnMgYXJyYXkuICovCi0JYXR0cl9sZW4g
PSBsZTMyX3RvX2NwdShhLT5sZW5ndGgpOwotCWVyciA9IG50ZnNfYXR0cl9yZWNvcmRfcmVzaXpl
KG0sIGEsIG1wX3NpemUgKwotCQkJbGUxNl90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQubWFw
cGluZ19wYWlyc19vZmZzZXQpKTsKLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlCVUdfT04oZXJy
ICE9IC1FTk9TUEMpOwotCQkvLyBUT0RPOiBEZWFsIHdpdGggdGhpcyBieSBtb3ZpbmcgdGhpcyBl
eHRlbnQgdG8gYSBuZXcgbWZ0Ci0JCS8vIHJlY29yZCBvciBieSBzdGFydGluZyBhIG5ldyBleHRl
bnQgaW4gYSBuZXcgbWZ0IHJlY29yZCwKLQkJLy8gcG9zc2libHkgYnkgZXh0ZW5kaW5nIHRoaXMg
ZXh0ZW50IHBhcnRpYWxseSBhbmQgZmlsbGluZyBpdAotCQkvLyBhbmQgY3JlYXRpbmcgYSBuZXcg
ZXh0ZW50IGZvciB0aGUgcmVtYWluZGVyLCBvciBieSBtYWtpbmcKLQkJLy8gb3RoZXIgYXR0cmli
dXRlcyBub24tcmVzaWRlbnQgYW5kL29yIGJ5IG1vdmluZyBvdGhlcgotCQkvLyBhdHRyaWJ1dGVz
IG91dCBvZiB0aGlzIG1mdCByZWNvcmQuCi0JCWlmIChzdGFydCA8IDAgfHwgc3RhcnQgPj0gYWxs
b2NhdGVkX3NpemUpCi0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJOb3QgZW5vdWdoIHNwYWNlIGlu
IHRoZSBtZnQgIgotCQkJCQkicmVjb3JkIGZvciB0aGUgZXh0ZW5kZWQgYXR0cmlidXRlICIKLQkJ
CQkJInJlY29yZC4gIFRoaXMgY2FzZSBpcyBub3QgIgotCQkJCQkiaW1wbGVtZW50ZWQgeWV0LiIp
OwotCQllcnIgPSAtRU9QTk9UU1VQUDsKLQkJZ290byB1bmRvX2FsbG9jOwotCX0KLQltcF9yZWJ1
aWx0ID0gdHJ1ZTsKLQkvKiBHZW5lcmF0ZSB0aGUgbWFwcGluZyBwYWlycyBhcnJheSBkaXJlY3Rs
eSBpbnRvIHRoZSBhdHRyIHJlY29yZC4gKi8KLQllcnIgPSBudGZzX21hcHBpbmdfcGFpcnNfYnVp
bGQodm9sLCAodTgqKWEgKwotCQkJbGUxNl90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQubWFw
cGluZ19wYWlyc19vZmZzZXQpLAotCQkJbXBfc2l6ZSwgcmwyLCBsbCwgLTEsIE5VTEwpOwotCWlm
ICh1bmxpa2VseShlcnIpKSB7Ci0JCWlmIChzdGFydCA8IDAgfHwgc3RhcnQgPj0gYWxsb2NhdGVk
X3NpemUpCi0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJDYW5ub3QgZXh0ZW5kIGFsbG9jYXRpb24g
b2YgIgotCQkJCQkiaW5vZGUgMHglbHgsIGF0dHJpYnV0ZSB0eXBlIDB4JXgsICIKLQkJCQkJImJl
Y2F1c2UgYnVpbGRpbmcgdGhlIG1hcHBpbmcgcGFpcnMgIgotCQkJCQkiZmFpbGVkIHdpdGggZXJy
b3IgY29kZSAlaS4iLCB2aS0+aV9pbm8sCi0JCQkJCSh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+
dHlwZSksIGVycik7Ci0JCWVyciA9IC1FSU87Ci0JCWdvdG8gdW5kb19hbGxvYzsKLQl9Ci0JLyog
VXBkYXRlIHRoZSBoaWdoZXN0X3Zjbi4gKi8KLQlhLT5kYXRhLm5vbl9yZXNpZGVudC5oaWdoZXN0
X3ZjbiA9IGNwdV90b19zbGU2NCgobmV3X2FsbG9jX3NpemUgPj4KLQkJCXZvbC0+Y2x1c3Rlcl9z
aXplX2JpdHMpIC0gMSk7Ci0JLyoKLQkgKiBXZSBub3cgaGF2ZSBleHRlbmRlZCB0aGUgYWxsb2Nh
dGVkIHNpemUgb2YgdGhlIGF0dHJpYnV0ZS4gIFJlZmxlY3QKLQkgKiB0aGlzIGluIHRoZSBudGZz
X2lub2RlIHN0cnVjdHVyZSBhbmQgdGhlIGF0dHJpYnV0ZSByZWNvcmQuCi0JICovCi0JaWYgKGEt
PmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92Y24pIHsKLQkJLyoKLQkJICogV2UgYXJlIG5vdCBp
biB0aGUgZmlyc3QgYXR0cmlidXRlIGV4dGVudCwgc3dpdGNoIHRvIGl0LCBidXQKLQkJICogZmly
c3QgZW5zdXJlIHRoZSBjaGFuZ2VzIHdpbGwgbWFrZSBpdCB0byBkaXNrIGxhdGVyLgotCQkgKi8K
LQkJZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQkJbWFya19t
ZnRfcmVjb3JkX2RpcnR5KGN0eC0+bnRmc19pbm8pOwotCQludGZzX2F0dHJfcmVpbml0X3NlYXJj
aF9jdHgoY3R4KTsKLQkJZXJyID0gbnRmc19hdHRyX2xvb2t1cChuaS0+dHlwZSwgbmktPm5hbWUs
IG5pLT5uYW1lX2xlbiwKLQkJCQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQkJ
aWYgKHVubGlrZWx5KGVycikpCi0JCQlnb3RvIHJlc3RvcmVfdW5kb19hbGxvYzsKLQkJLyogQG0g
aXMgbm90IHVzZWQgYW55IG1vcmUgc28gbm8gbmVlZCB0byBzZXQgaXQuICovCi0JCWEgPSBjdHgt
PmF0dHI7Ci0JfQotCXdyaXRlX2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwot
CW5pLT5hbGxvY2F0ZWRfc2l6ZSA9IG5ld19hbGxvY19zaXplOwotCWEtPmRhdGEubm9uX3Jlc2lk
ZW50LmFsbG9jYXRlZF9zaXplID0gY3B1X3RvX3NsZTY0KG5ld19hbGxvY19zaXplKTsKLQkvKgot
CSAqIEZJWE1FOiBUaGlzIHdvdWxkIGZhaWwgaWYgQG5pIGlzIGEgZGlyZWN0b3J5LCAkTUZULCBv
ciBhbiBpbmRleCwKLQkgKiBzaW5jZSB0aG9zZSBjYW4gaGF2ZSBzcGFyc2UvY29tcHJlc3NlZCBz
ZXQuICBGb3IgZXhhbXBsZSBjYW4gYmUKLQkgKiBzZXQgY29tcHJlc3NlZCBldmVuIHRob3VnaCBp
dCBpcyBub3QgY29tcHJlc3NlZCBpdHNlbGYgYW5kIGluIHRoYXQKLQkgKiBjYXNlIHRoZSBiaXQg
bWVhbnMgdGhhdCBmaWxlcyBhcmUgdG8gYmUgY3JlYXRlZCBjb21wcmVzc2VkIGluIHRoZQotCSAq
IGRpcmVjdG9yeS4uLiAgQXQgcHJlc2VudCB0aGlzIGlzIG9rIGFzIHRoaXMgY29kZSBpcyBvbmx5
IGNhbGxlZCBmb3IKLQkgKiByZWd1bGFyIGZpbGVzLCBhbmQgb25seSBmb3IgdGhlaXIgJERBVEEg
YXR0cmlidXRlKHMpLgotCSAqIEZJWE1FOiBUaGUgY2FsY3VsYXRpb24gaXMgd3JvbmcgaWYgd2Ug
Y3JlYXRlZCBhIGhvbGUgYWJvdmUuICBGb3Igbm93Ci0JICogaXQgZG9lcyBub3QgbWF0dGVyIGFz
IHdlIG5ldmVyIGNyZWF0ZSBob2xlcy4KLQkgKi8KLQlpZiAoTklub1NwYXJzZShuaSkgfHwgTklu
b0NvbXByZXNzZWQobmkpKSB7Ci0JCW5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUgKz0gbmV3X2Fs
bG9jX3NpemUgLSBhbGxvY2F0ZWRfc2l6ZTsKLQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuY29tcHJl
c3NlZF9zaXplID0KLQkJCQljcHVfdG9fc2xlNjQobmktPml0eXBlLmNvbXByZXNzZWQuc2l6ZSk7
Ci0JCXZpLT5pX2Jsb2NrcyA9IG5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUgPj4gOTsKLQl9IGVs
c2UKLQkJdmktPmlfYmxvY2tzID0gbmV3X2FsbG9jX3NpemUgPj4gOTsKLQl3cml0ZV91bmxvY2tf
aXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotYWxsb2NfZG9uZToKLQlpZiAobmV3
X2RhdGFfc2l6ZSA+PSAwKSB7Ci0JCUJVR19PTihuZXdfZGF0YV9zaXplIDwKLQkJCQlzbGU2NF90
b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQuZGF0YV9zaXplKSk7Ci0JCWEtPmRhdGEubm9uX3Jl
c2lkZW50LmRhdGFfc2l6ZSA9IGNwdV90b19zbGU2NChuZXdfZGF0YV9zaXplKTsKLQl9Ci1mbHVz
aF9kb25lOgotCS8qIEVuc3VyZSB0aGUgY2hhbmdlcyBtYWtlIGl0IHRvIGRpc2suICovCi0JZmx1
c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQltYXJrX21mdF9yZWNv
cmRfZGlydHkoY3R4LT5udGZzX2lubyk7Ci1kb25lOgotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0
eChjdHgpOwotCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0JdXBfd3JpdGUoJm5pLT5ydW5s
aXN0LmxvY2spOwotCW50ZnNfZGVidWcoIkRvbmUsIG5ld19hbGxvY2F0ZWRfc2l6ZSAweCVsbHgu
IiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpbmV3X2FsbG9jX3NpemUpOwotCXJldHVybiBuZXdf
YWxsb2Nfc2l6ZTsKLXJlc3RvcmVfdW5kb19hbGxvYzoKLQlpZiAoc3RhcnQgPCAwIHx8IHN0YXJ0
ID49IGFsbG9jYXRlZF9zaXplKQotCQludGZzX2Vycm9yKHZvbC0+c2IsICJDYW5ub3QgY29tcGxl
dGUgZXh0ZW5zaW9uIG9mIGFsbG9jYXRpb24gIgotCQkJCSJvZiBpbm9kZSAweCVseCwgYXR0cmli
dXRlIHR5cGUgMHgleCwgYmVjYXVzZSAiCi0JCQkJImxvb2t1cCBvZiBmaXJzdCBhdHRyaWJ1dGUg
ZXh0ZW50IGZhaWxlZCB3aXRoICIKLQkJCQkiZXJyb3IgY29kZSAlaS4iLCB2aS0+aV9pbm8sCi0J
CQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwgZXJyKTsKLQlpZiAoZXJyID09IC1F
Tk9FTlQpCi0JCWVyciA9IC1FSU87Ci0JbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4KGN0eCk7
Ci0JaWYgKG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4s
IENBU0VfU0VOU0lUSVZFLAotCQkJYWxsb2NhdGVkX3NpemUgPj4gdm9sLT5jbHVzdGVyX3NpemVf
Yml0cywgTlVMTCwgMCwKLQkJCWN0eCkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVk
IHRvIGZpbmQgbGFzdCBhdHRyaWJ1dGUgZXh0ZW50IG9mICIKLQkJCQkiYXR0cmlidXRlIGluIGVy
cm9yIGNvZGUgcGF0aC4gIFJ1biBjaGtkc2sgdG8gIgotCQkJCSJyZWNvdmVyLiIpOwotCQl3cml0
ZV9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJbmktPmFsbG9jYXRlZF9z
aXplID0gbmV3X2FsbG9jX3NpemU7Ci0JCS8qCi0JCSAqIEZJWE1FOiBUaGlzIHdvdWxkIGZhaWwg
aWYgQG5pIGlzIGEgZGlyZWN0b3J5Li4uICBTZWUgYWJvdmUuCi0JCSAqIEZJWE1FOiBUaGUgY2Fs
Y3VsYXRpb24gaXMgd3JvbmcgaWYgd2UgY3JlYXRlZCBhIGhvbGUgYWJvdmUuCi0JCSAqIEZvciBu
b3cgaXQgZG9lcyBub3QgbWF0dGVyIGFzIHdlIG5ldmVyIGNyZWF0ZSBob2xlcy4KLQkJICovCi0J
CWlmIChOSW5vU3BhcnNlKG5pKSB8fCBOSW5vQ29tcHJlc3NlZChuaSkpIHsKLQkJCW5pLT5pdHlw
ZS5jb21wcmVzc2VkLnNpemUgKz0gbmV3X2FsbG9jX3NpemUgLQotCQkJCQlhbGxvY2F0ZWRfc2l6
ZTsKLQkJCXZpLT5pX2Jsb2NrcyA9IG5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUgPj4gOTsKLQkJ
fSBlbHNlCi0JCQl2aS0+aV9ibG9ja3MgPSBuZXdfYWxsb2Nfc2l6ZSA+PiA5OwotCQl3cml0ZV91
bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQludGZzX2F0dHJfcHV0
X3NlYXJjaF9jdHgoY3R4KTsKLQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQkJdXBfd3Jp
dGUoJm5pLT5ydW5saXN0LmxvY2spOwotCQkvKgotCQkgKiBUaGUgb25seSB0aGluZyB0aGF0IGlz
IG5vdyB3cm9uZyBpcyB0aGUgYWxsb2NhdGVkIHNpemUgb2YgdGhlCi0JCSAqIGJhc2UgYXR0cmli
dXRlIGV4dGVudCB3aGljaCBjaGtkc2sgc2hvdWxkIGJlIGFibGUgdG8gZml4LgotCQkgKi8KLQkJ
TlZvbFNldEVycm9ycyh2b2wpOwotCQlyZXR1cm4gZXJyOwotCX0KLQljdHgtPmF0dHItPmRhdGEu
bm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuID0gY3B1X3RvX3NsZTY0KAotCQkJKGFsbG9jYXRlZF9z
aXplID4+IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMpIC0gMSk7Ci11bmRvX2FsbG9jOgotCWxsID0g
YWxsb2NhdGVkX3NpemUgPj4gdm9sLT5jbHVzdGVyX3NpemVfYml0czsKLQlpZiAobnRmc19jbHVz
dGVyX2ZyZWUobmksIGxsLCAtMSwgY3R4KSA8IDApIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAi
RmFpbGVkIHRvIHJlbGVhc2UgYWxsb2NhdGVkIGNsdXN0ZXIocykgIgotCQkJCSJpbiBlcnJvciBj
b2RlIHBhdGguICBSdW4gY2hrZHNrIHRvIHJlY292ZXIgIgotCQkJCSJ0aGUgbG9zdCBjbHVzdGVy
KHMpLiIpOwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JfQotCW0gPSBjdHgtPm1yZWM7Ci0JYSA9
IGN0eC0+YXR0cjsKLQkvKgotCSAqIElmIHRoZSBydW5saXN0IHRydW5jYXRpb24gZmFpbHMgYW5k
L29yIHRoZSBzZWFyY2ggY29udGV4dCBpcyBubwotCSAqIGxvbmdlciB2YWxpZCwgd2UgY2Fubm90
IHJlc2l6ZSB0aGUgYXR0cmlidXRlIHJlY29yZCBvciBidWlsZCB0aGUKLQkgKiBtYXBwaW5nIHBh
aXJzIGFycmF5IHRodXMgd2UgbWFyayB0aGUgaW5vZGUgYmFkIHNvIHRoYXQgbm8gYWNjZXNzIHRv
Ci0JICogdGhlIGZyZWVkIGNsdXN0ZXJzIGNhbiBoYXBwZW4uCi0JICovCi0JaWYgKG50ZnNfcmxf
dHJ1bmNhdGVfbm9sb2NrKHZvbCwgJm5pLT5ydW5saXN0LCBsbCkgfHwgSVNfRVJSKG0pKSB7Ci0J
CW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byAlcyBpbiBlcnJvciBjb2RlIHBhdGguICBS
dW4gIgotCQkJCSJjaGtkc2sgdG8gcmVjb3Zlci4iLCBJU19FUlIobSkgPwotCQkJCSJyZXN0b3Jl
IGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dCIgOgotCQkJCSJ0cnVuY2F0ZSBhdHRyaWJ1dGUgcnVu
bGlzdCIpOwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JfSBlbHNlIGlmIChtcF9yZWJ1aWx0KSB7
Ci0JCWlmIChudGZzX2F0dHJfcmVjb3JkX3Jlc2l6ZShtLCBhLCBhdHRyX2xlbikpIHsKLQkJCW50
ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZXN0b3JlIGF0dHJpYnV0ZSAiCi0JCQkJCSJy
ZWNvcmQgaW4gZXJyb3IgY29kZSBwYXRoLiAgUnVuICIKLQkJCQkJImNoa2RzayB0byByZWNvdmVy
LiIpOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQl9IGVsc2UgLyogaWYgKHN1Y2Nlc3MpICov
IHsKLQkJCWlmIChudGZzX21hcHBpbmdfcGFpcnNfYnVpbGQodm9sLCAodTgqKWEgKyBsZTE2X3Rv
X2NwdSgKLQkJCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuCi0JCQkJCW1hcHBpbmdfcGFpcnNfb2Zm
c2V0KSwgYXR0cl9sZW4gLQotCQkJCQlsZTE2X3RvX2NwdShhLT5kYXRhLm5vbl9yZXNpZGVudC4K
LQkJCQkJbWFwcGluZ19wYWlyc19vZmZzZXQpLCBybDIsIGxsLCAtMSwKLQkJCQkJTlVMTCkpIHsK
LQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gcmVzdG9yZSAiCi0JCQkJCQkibWFw
cGluZyBwYWlycyBhcnJheSBpbiBlcnJvciAiCi0JCQkJCQkiY29kZSBwYXRoLiAgUnVuIGNoa2Rz
ayB0byAiCi0JCQkJCQkicmVjb3Zlci4iKTsKLQkJCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQl9
Ci0JCQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwotCQkJbWFy
a19tZnRfcmVjb3JkX2RpcnR5KGN0eC0+bnRmc19pbm8pOwotCQl9Ci0JfQotZXJyX291dDoKLQlp
ZiAoY3R4KQotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQlpZiAobSkKLQkJdW5t
YXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQl1cF93cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci1j
b252X2Vycl9vdXQ6Ci0JbnRmc19kZWJ1ZygiRmFpbGVkLiAgUmV0dXJuaW5nIGVycm9yIGNvZGUg
JWkuIiwgZXJyKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfYXR0cl9zZXQgLSBm
aWxsIChhIHBhcnQgb2YpIGFuIGF0dHJpYnV0ZSB3aXRoIGEgYnl0ZQotICogQG5pOgkJbnRmcyBp
bm9kZSBkZXNjcmliaW5nIHRoZSBhdHRyaWJ1dGUgdG8gZmlsbAotICogQG9mczoJb2Zmc2V0IGlu
c2lkZSB0aGUgYXR0cmlidXRlIGF0IHdoaWNoIHRvIHN0YXJ0IHRvIGZpbGwKLSAqIEBjbnQ6CW51
bWJlciBvZiBieXRlcyB0byBmaWxsCi0gKiBAdmFsOgl0aGUgdW5zaWduZWQgOC1iaXQgdmFsdWUg
d2l0aCB3aGljaCB0byBmaWxsIHRoZSBhdHRyaWJ1dGUKLSAqCi0gKiBGaWxsIEBjbnQgYnl0ZXMg
b2YgdGhlIGF0dHJpYnV0ZSBkZXNjcmliZWQgYnkgdGhlIG50ZnMgaW5vZGUgQG5pIHN0YXJ0aW5n
IGF0Ci0gKiBieXRlIG9mZnNldCBAb2ZzIGluc2lkZSB0aGUgYXR0cmlidXRlIHdpdGggdGhlIGNv
bnN0YW50IGJ5dGUgQHZhbC4KLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGlzIGVmZmVjdGl2ZWx5IGxp
a2UgbWVtc2V0KCkgYXBwbGllZCB0byBhbiBudGZzIGF0dHJpYnV0ZS4KLSAqIE5vdGUgdGhpcyBm
dW5jdGlvbiBhY3R1YWxseSBvbmx5IG9wZXJhdGVzIG9uIHRoZSBwYWdlIGNhY2hlIHBhZ2VzIGJl
bG9uZ2luZwotICogdG8gdGhlIG50ZnMgYXR0cmlidXRlIGFuZCBpdCBtYXJrcyB0aGVtIGRpcnR5
IGFmdGVyIGRvaW5nIHRoZSBtZW1zZXQoKS4KLSAqIFRodXMgaXQgcmVsaWVzIG9uIHRoZSB2bSBk
aXJ0eSBwYWdlIHdyaXRlIGNvZGUgcGF0aHMgdG8gY2F1c2UgdGhlIG1vZGlmaWVkCi0gKiBwYWdl
cyB0byBiZSB3cml0dGVuIHRvIHRoZSBtZnQgcmVjb3JkL2Rpc2suCi0gKgotICogUmV0dXJuIDAg
b24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLiAgQW4gZXJyb3IgY29kZSBvZiAtRVNQSVBF
IG1lYW5zCi0gKiB0aGF0IEBvZnMgKyBAY250IHdlcmUgb3V0c2lkZSB0aGUgZW5kIG9mIHRoZSBh
dHRyaWJ1dGUgYW5kIG5vIHdyaXRlIHdhcwotICogcGVyZm9ybWVkLgotICovCi1pbnQgbnRmc19h
dHRyX3NldChudGZzX2lub2RlICpuaSwgY29uc3QgczY0IG9mcywgY29uc3QgczY0IGNudCwgY29u
c3QgdTggdmFsKQotewotCW50ZnNfdm9sdW1lICp2b2wgPSBuaS0+dm9sOwotCXN0cnVjdCBhZGRy
ZXNzX3NwYWNlICptYXBwaW5nOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXU4ICprYWRkcjsKLQlw
Z29mZl90IGlkeCwgZW5kOwotCXVuc2lnbmVkIHN0YXJ0X29mcywgZW5kX29mcywgc2l6ZTsKLQot
CW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBvZnMgMHglbGx4LCBjbnQgMHglbGx4LCB2YWwgMHgl
aHguIiwKLQkJCShsb25nIGxvbmcpb2ZzLCAobG9uZyBsb25nKWNudCwgdmFsKTsKLQlCVUdfT04o
b2ZzIDwgMCk7Ci0JQlVHX09OKGNudCA8IDApOwotCWlmICghY250KQotCQlnb3RvIGRvbmU7Ci0J
LyoKLQkgKiBGSVhNRTogQ29tcHJlc3NlZCBhbmQgZW5jcnlwdGVkIGF0dHJpYnV0ZXMgYXJlIG5v
dCBzdXBwb3J0ZWQgd2hlbgotCSAqIHdyaXRpbmcgYW5kIHdlIHNob3VsZCBuZXZlciBoYXZlIGdv
dHRlbiBoZXJlIGZvciB0aGVtLgotCSAqLwotCUJVR19PTihOSW5vQ29tcHJlc3NlZChuaSkpOwot
CUJVR19PTihOSW5vRW5jcnlwdGVkKG5pKSk7Ci0JbWFwcGluZyA9IFZGU19JKG5pKS0+aV9tYXBw
aW5nOwotCS8qIFdvcmsgb3V0IHRoZSBzdGFydGluZyBpbmRleCBhbmQgcGFnZSBvZmZzZXQuICov
Ci0JaWR4ID0gb2ZzID4+IFBBR0VfU0hJRlQ7Ci0Jc3RhcnRfb2ZzID0gb2ZzICYgflBBR0VfTUFT
SzsKLQkvKiBXb3JrIG91dCB0aGUgZW5kaW5nIGluZGV4IGFuZCBwYWdlIG9mZnNldC4gKi8KLQll
bmQgPSBvZnMgKyBjbnQ7Ci0JZW5kX29mcyA9IGVuZCAmIH5QQUdFX01BU0s7Ci0JLyogSWYgdGhl
IGVuZCBpcyBvdXRzaWRlIHRoZSBpbm9kZSBzaXplIHJldHVybiAtRVNQSVBFLiAqLwotCWlmICh1
bmxpa2VseShlbmQgPiBpX3NpemVfcmVhZChWRlNfSShuaSkpKSkgewotCQludGZzX2Vycm9yKHZv
bC0+c2IsICJSZXF1ZXN0IGV4Y2VlZHMgZW5kIG9mIGF0dHJpYnV0ZS4iKTsKLQkJcmV0dXJuIC1F
U1BJUEU7Ci0JfQotCWVuZCA+Pj0gUEFHRV9TSElGVDsKLQkvKiBJZiB0aGVyZSBpcyBhIGZpcnN0
IHBhcnRpYWwgcGFnZSwgbmVlZCB0byBkbyBpdCB0aGUgc2xvdyB3YXkuICovCi0JaWYgKHN0YXJ0
X29mcykgewotCQlwYWdlID0gcmVhZF9tYXBwaW5nX3BhZ2UobWFwcGluZywgaWR4LCBOVUxMKTsK
LQkJaWYgKElTX0VSUihwYWdlKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRv
IHJlYWQgZmlyc3QgcGFydGlhbCAiCi0JCQkJCSJwYWdlIChlcnJvciwgaW5kZXggMHglbHgpLiIs
IGlkeCk7Ci0JCQlyZXR1cm4gUFRSX0VSUihwYWdlKTsKLQkJfQotCQkvKgotCQkgKiBJZiB0aGUg
bGFzdCBwYWdlIGlzIHRoZSBzYW1lIGFzIHRoZSBmaXJzdCBwYWdlLCBuZWVkIHRvCi0JCSAqIGxp
bWl0IHRoZSB3cml0ZSB0byB0aGUgZW5kIG9mZnNldC4KLQkJICovCi0JCXNpemUgPSBQQUdFX1NJ
WkU7Ci0JCWlmIChpZHggPT0gZW5kKQotCQkJc2l6ZSA9IGVuZF9vZnM7Ci0JCWthZGRyID0ga21h
cF9hdG9taWMocGFnZSk7Ci0JCW1lbXNldChrYWRkciArIHN0YXJ0X29mcywgdmFsLCBzaXplIC0g
c3RhcnRfb2ZzKTsKLQkJZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7Ci0JCWt1bm1hcF9hdG9taWMo
a2FkZHIpOwotCQlzZXRfcGFnZV9kaXJ0eShwYWdlKTsKLQkJcHV0X3BhZ2UocGFnZSk7Ci0JCWJh
bGFuY2VfZGlydHlfcGFnZXNfcmF0ZWxpbWl0ZWQobWFwcGluZyk7Ci0JCWNvbmRfcmVzY2hlZCgp
OwotCQlpZiAoaWR4ID09IGVuZCkKLQkJCWdvdG8gZG9uZTsKLQkJaWR4Kys7Ci0JfQotCS8qIERv
IHRoZSB3aG9sZSBwYWdlcyB0aGUgZmFzdCB3YXkuICovCi0JZm9yICg7IGlkeCA8IGVuZDsgaWR4
KyspIHsKLQkJLyogRmluZCBvciBjcmVhdGUgdGhlIGN1cnJlbnQgcGFnZS4gIChUaGUgcGFnZSBp
cyBsb2NrZWQuKSAqLwotCQlwYWdlID0gZ3JhYl9jYWNoZV9wYWdlKG1hcHBpbmcsIGlkeCk7Ci0J
CWlmICh1bmxpa2VseSghcGFnZSkpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkluc3VmZmlj
aWVudCBtZW1vcnkgdG8gZ3JhYiAiCi0JCQkJCSJwYWdlIChpbmRleCAweCVseCkuIiwgaWR4KTsK
LQkJCXJldHVybiAtRU5PTUVNOwotCQl9Ci0JCWthZGRyID0ga21hcF9hdG9taWMocGFnZSk7Ci0J
CW1lbXNldChrYWRkciwgdmFsLCBQQUdFX1NJWkUpOwotCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdl
KTsKLQkJa3VubWFwX2F0b21pYyhrYWRkcik7Ci0JCS8qCi0JCSAqIElmIHRoZSBwYWdlIGhhcyBi
dWZmZXJzLCBtYXJrIHRoZW0gdXB0b2RhdGUgc2luY2UgYnVmZmVyCi0JCSAqIHN0YXRlIGFuZCBu
b3QgcGFnZSBzdGF0ZSBpcyBkZWZpbml0aXZlIGluIDIuNiBrZXJuZWxzLgotCQkgKi8KLQkJaWYg
KHBhZ2VfaGFzX2J1ZmZlcnMocGFnZSkpIHsKLQkJCXN0cnVjdCBidWZmZXJfaGVhZCAqYmgsICpo
ZWFkOwotCi0JCQliaCA9IGhlYWQgPSBwYWdlX2J1ZmZlcnMocGFnZSk7Ci0JCQlkbyB7Ci0JCQkJ
c2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0JCQl9IHdoaWxlICgoYmggPSBiaC0+Yl90aGlzX3Bh
Z2UpICE9IGhlYWQpOwotCQl9Ci0JCS8qIE5vdyB0aGF0IGJ1ZmZlcnMgYXJlIHVwdG9kYXRlLCBz
ZXQgdGhlIHBhZ2UgdXB0b2RhdGUsIHRvby4gKi8KLQkJU2V0UGFnZVVwdG9kYXRlKHBhZ2UpOwot
CQkvKgotCQkgKiBTZXQgdGhlIHBhZ2UgYW5kIGFsbCBpdHMgYnVmZmVycyBkaXJ0eSBhbmQgbWFy
ayB0aGUgaW5vZGUKLQkJICogZGlydHksIHRvby4gIFRoZSBWTSB3aWxsIHdyaXRlIHRoZSBwYWdl
IGxhdGVyIG9uLgotCQkgKi8KLQkJc2V0X3BhZ2VfZGlydHkocGFnZSk7Ci0JCS8qIEZpbmFsbHkg
dW5sb2NrIGFuZCByZWxlYXNlIHRoZSBwYWdlLiAqLwotCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJ
cHV0X3BhZ2UocGFnZSk7Ci0JCWJhbGFuY2VfZGlydHlfcGFnZXNfcmF0ZWxpbWl0ZWQobWFwcGlu
Zyk7Ci0JCWNvbmRfcmVzY2hlZCgpOwotCX0KLQkvKiBJZiB0aGVyZSBpcyBhIGxhc3QgcGFydGlh
bCBwYWdlLCBuZWVkIHRvIGRvIGl0IHRoZSBzbG93IHdheS4gKi8KLQlpZiAoZW5kX29mcykgewot
CQlwYWdlID0gcmVhZF9tYXBwaW5nX3BhZ2UobWFwcGluZywgaWR4LCBOVUxMKTsKLQkJaWYgKElT
X0VSUihwYWdlKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHJlYWQgbGFz
dCBwYXJ0aWFsIHBhZ2UgIgotCQkJCQkiKGVycm9yLCBpbmRleCAweCVseCkuIiwgaWR4KTsKLQkJ
CXJldHVybiBQVFJfRVJSKHBhZ2UpOwotCQl9Ci0JCWthZGRyID0ga21hcF9hdG9taWMocGFnZSk7
Ci0JCW1lbXNldChrYWRkciwgdmFsLCBlbmRfb2ZzKTsKLQkJZmx1c2hfZGNhY2hlX3BhZ2UocGFn
ZSk7Ci0JCWt1bm1hcF9hdG9taWMoa2FkZHIpOwotCQlzZXRfcGFnZV9kaXJ0eShwYWdlKTsKLQkJ
cHV0X3BhZ2UocGFnZSk7Ci0JCWJhbGFuY2VfZGlydHlfcGFnZXNfcmF0ZWxpbWl0ZWQobWFwcGlu
Zyk7Ci0JCWNvbmRfcmVzY2hlZCgpOwotCX0KLWRvbmU6Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsK
LQlyZXR1cm4gMDsKLX0KLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KZGlmZiAtLWdpdCBhL2ZzL250
ZnMvYXR0cmliLmggYi9mcy9udGZzL2F0dHJpYi5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCBmZTA4OTBkM2QwNzIuLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2F0dHJpYi5oCisr
KyAvZGV2L251bGwKQEAgLTEsMTAyICswLDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBHUEwtMi4wLW9yLWxhdGVyICovCi0vKgotICogYXR0cmliLmggLSBEZWZpbmVzIGZvciBhdHRy
aWJ1dGUgaGFuZGxpbmcgaW4gTlRGUyBMaW51eCBrZXJuZWwgZHJpdmVyLgotICoJICAgICAgUGFy
dCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMS0y
MDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICogQ29weXJpZ2h0IChjKSAyMDAyIFJpY2hhcmQgUnVz
c29uCi0gKi8KLQotI2lmbmRlZiBfTElOVVhfTlRGU19BVFRSSUJfSAotI2RlZmluZSBfTElOVVhf
TlRGU19BVFRSSUJfSAotCi0jaW5jbHVkZSAiZW5kaWFuLmgiCi0jaW5jbHVkZSAidHlwZXMuaCIK
LSNpbmNsdWRlICJsYXlvdXQuaCIKLSNpbmNsdWRlICJpbm9kZS5oIgotI2luY2x1ZGUgInJ1bmxp
c3QuaCIKLSNpbmNsdWRlICJ2b2x1bWUuaCIKLQotLyoqCi0gKiBudGZzX2F0dHJfc2VhcmNoX2N0
eCAtIHVzZWQgaW4gYXR0cmlidXRlIHNlYXJjaCBmdW5jdGlvbnMKLSAqIEBtcmVjOglidWZmZXIg
Y29udGFpbmluZyBtZnQgcmVjb3JkIHRvIHNlYXJjaAotICogQGF0dHI6CWF0dHJpYnV0ZSByZWNv
cmQgaW4gQG1yZWMgd2hlcmUgdG8gYmVnaW4vY29udGludWUgc2VhcmNoCi0gKiBAaXNfZmlyc3Q6
CWlmIHRydWUgbnRmc19hdHRyX2xvb2t1cCgpIGJlZ2lucyBzZWFyY2ggd2l0aCBAYXR0ciwgZWxz
ZSBhZnRlcgotICoKLSAqIFN0cnVjdHVyZSBtdXN0IGJlIGluaXRpYWxpemVkIHRvIHplcm8gYmVm
b3JlIHRoZSBmaXJzdCBjYWxsIHRvIG9uZSBvZiB0aGUKLSAqIGF0dHJpYnV0ZSBzZWFyY2ggZnVu
Y3Rpb25zLiBJbml0aWFsaXplIEBtcmVjIHRvIHBvaW50IHRvIHRoZSBtZnQgcmVjb3JkIHRvCi0g
KiBzZWFyY2gsIGFuZCBAYXR0ciB0byBwb2ludCB0byB0aGUgZmlyc3QgYXR0cmlidXRlIHdpdGhp
biBAbXJlYyAobm90IG5lY2Vzc2FyeQotICogaWYgY2FsbGluZyB0aGUgX2ZpcnN0KCkgZnVuY3Rp
b25zKSwgYW5kIHNldCBAaXNfZmlyc3QgdG8gJ3RydWUnIChub3QgbmVjZXNzYXJ5Ci0gKiBpZiBj
YWxsaW5nIHRoZSBfZmlyc3QoKSBmdW5jdGlvbnMpLgotICoKLSAqIElmIEBpc19maXJzdCBpcyAn
dHJ1ZScsIHRoZSBzZWFyY2ggYmVnaW5zIHdpdGggQGF0dHIuIElmIEBpc19maXJzdCBpcyAnZmFs
c2UnLAotICogdGhlIHNlYXJjaCBiZWdpbnMgYWZ0ZXIgQGF0dHIuIFRoaXMgaXMgc28gdGhhdCwg
YWZ0ZXIgdGhlIGZpcnN0IGNhbGwgdG8gb25lCi0gKiBvZiB0aGUgc2VhcmNoIGF0dHJpYnV0ZSBm
dW5jdGlvbnMsIHdlIGNhbiBjYWxsIHRoZSBmdW5jdGlvbiBhZ2Fpbiwgd2l0aG91dAotICogYW55
IG1vZGlmaWNhdGlvbiBvZiB0aGUgc2VhcmNoIGNvbnRleHQsIHRvIGF1dG9tYWdpY2FsbHkgZ2V0
IHRoZSBuZXh0Ci0gKiBtYXRjaGluZyBhdHRyaWJ1dGUuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsK
LQlNRlRfUkVDT1JEICptcmVjOwotCUFUVFJfUkVDT1JEICphdHRyOwotCWJvb2wgaXNfZmlyc3Q7
Ci0JbnRmc19pbm9kZSAqbnRmc19pbm87Ci0JQVRUUl9MSVNUX0VOVFJZICphbF9lbnRyeTsKLQlu
dGZzX2lub2RlICpiYXNlX250ZnNfaW5vOwotCU1GVF9SRUNPUkQgKmJhc2VfbXJlYzsKLQlBVFRS
X1JFQ09SRCAqYmFzZV9hdHRyOwotfSBudGZzX2F0dHJfc2VhcmNoX2N0eDsKLQotZXh0ZXJuIGlu
dCBudGZzX21hcF9ydW5saXN0X25vbG9jayhudGZzX2lub2RlICpuaSwgVkNOIHZjbiwKLQkJbnRm
c19hdHRyX3NlYXJjaF9jdHggKmN0eCk7Ci1leHRlcm4gaW50IG50ZnNfbWFwX3J1bmxpc3QobnRm
c19pbm9kZSAqbmksIFZDTiB2Y24pOwotCi1leHRlcm4gTENOIG50ZnNfYXR0cl92Y25fdG9fbGNu
X25vbG9jayhudGZzX2lub2RlICpuaSwgY29uc3QgVkNOIHZjbiwKLQkJY29uc3QgYm9vbCB3cml0
ZV9sb2NrZWQpOwotCi1leHRlcm4gcnVubGlzdF9lbGVtZW50ICpudGZzX2F0dHJfZmluZF92Y25f
bm9sb2NrKG50ZnNfaW5vZGUgKm5pLAotCQljb25zdCBWQ04gdmNuLCBudGZzX2F0dHJfc2VhcmNo
X2N0eCAqY3R4KTsKLQotaW50IG50ZnNfYXR0cl9sb29rdXAoY29uc3QgQVRUUl9UWVBFIHR5cGUs
IGNvbnN0IG50ZnNjaGFyICpuYW1lLAotCQljb25zdCB1MzIgbmFtZV9sZW4sIGNvbnN0IElHTk9S
RV9DQVNFX0JPT0wgaWMsCi0JCWNvbnN0IFZDTiBsb3dlc3RfdmNuLCBjb25zdCB1OCAqdmFsLCBj
b25zdCB1MzIgdmFsX2xlbiwKLQkJbnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eCk7Ci0KLWV4dGVy
biBpbnQgbG9hZF9hdHRyaWJ1dGVfbGlzdChudGZzX3ZvbHVtZSAqdm9sLCBydW5saXN0ICpybCwg
dTggKmFsX3N0YXJ0LAotCQljb25zdCBzNjQgc2l6ZSwgY29uc3QgczY0IGluaXRpYWxpemVkX3Np
emUpOwotCi1zdGF0aWMgaW5saW5lIHM2NCBudGZzX2F0dHJfc2l6ZShjb25zdCBBVFRSX1JFQ09S
RCAqYSkKLXsKLQlpZiAoIWEtPm5vbl9yZXNpZGVudCkKLQkJcmV0dXJuIChzNjQpbGUzMl90b19j
cHUoYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpOwotCXJldHVybiBzbGU2NF90b19jcHUo
YS0+ZGF0YS5ub25fcmVzaWRlbnQuZGF0YV9zaXplKTsKLX0KLQotZXh0ZXJuIHZvaWQgbnRmc19h
dHRyX3JlaW5pdF9zZWFyY2hfY3R4KG50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHgpOwotZXh0ZXJu
IG50ZnNfYXR0cl9zZWFyY2hfY3R4ICpudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgobnRmc19pbm9k
ZSAqbmksCi0JCU1GVF9SRUNPUkQgKm1yZWMpOwotZXh0ZXJuIHZvaWQgbnRmc19hdHRyX3B1dF9z
ZWFyY2hfY3R4KG50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHgpOwotCi0jaWZkZWYgTlRGU19SVwot
Ci1leHRlcm4gaW50IG50ZnNfYXR0cl9zaXplX2JvdW5kc19jaGVjayhjb25zdCBudGZzX3ZvbHVt
ZSAqdm9sLAotCQljb25zdCBBVFRSX1RZUEUgdHlwZSwgY29uc3QgczY0IHNpemUpOwotZXh0ZXJu
IGludCBudGZzX2F0dHJfY2FuX2JlX25vbl9yZXNpZGVudChjb25zdCBudGZzX3ZvbHVtZSAqdm9s
LAotCQljb25zdCBBVFRSX1RZUEUgdHlwZSk7Ci1leHRlcm4gaW50IG50ZnNfYXR0cl9jYW5fYmVf
cmVzaWRlbnQoY29uc3QgbnRmc192b2x1bWUgKnZvbCwKLQkJY29uc3QgQVRUUl9UWVBFIHR5cGUp
OwotCi1leHRlcm4gaW50IG50ZnNfYXR0cl9yZWNvcmRfcmVzaXplKE1GVF9SRUNPUkQgKm0sIEFU
VFJfUkVDT1JEICphLCB1MzIgbmV3X3NpemUpOwotZXh0ZXJuIGludCBudGZzX3Jlc2lkZW50X2F0
dHJfdmFsdWVfcmVzaXplKE1GVF9SRUNPUkQgKm0sIEFUVFJfUkVDT1JEICphLAotCQljb25zdCB1
MzIgbmV3X3NpemUpOwotCi1leHRlcm4gaW50IG50ZnNfYXR0cl9tYWtlX25vbl9yZXNpZGVudChu
dGZzX2lub2RlICpuaSwgY29uc3QgdTMyIGRhdGFfc2l6ZSk7Ci0KLWV4dGVybiBzNjQgbnRmc19h
dHRyX2V4dGVuZF9hbGxvY2F0aW9uKG50ZnNfaW5vZGUgKm5pLCBzNjQgbmV3X2FsbG9jX3NpemUs
Ci0JCWNvbnN0IHM2NCBuZXdfZGF0YV9zaXplLCBjb25zdCBzNjQgZGF0YV9zdGFydCk7Ci0KLWV4
dGVybiBpbnQgbnRmc19hdHRyX3NldChudGZzX2lub2RlICpuaSwgY29uc3QgczY0IG9mcywgY29u
c3QgczY0IGNudCwKLQkJY29uc3QgdTggdmFsKTsKLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQot
I2VuZGlmIC8qIF9MSU5VWF9OVEZTX0FUVFJJQl9IICovCmRpZmYgLS1naXQgYS9mcy9udGZzL2Jp
dG1hcC5jIGIvZnMvbnRmcy9iaXRtYXAuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDY3NWIyNDAwODczLi4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9iaXRtYXAuYworKysgL2Rl
di9udWxsCkBAIC0xLDE3OSArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BM
LTIuMC1vci1sYXRlcgotLyoKLSAqIGJpdG1hcC5jIC0gTlRGUyBrZXJuZWwgYml0bWFwIGhhbmRs
aW5nLiAgUGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAo
YykgMjAwNC0yMDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZmRlZiBOVEZTX1JXCi0K
LSNpbmNsdWRlIDxsaW51eC9wYWdlbWFwLmg+Ci0KLSNpbmNsdWRlICJiaXRtYXAuaCIKLSNpbmNs
dWRlICJkZWJ1Zy5oIgotI2luY2x1ZGUgImFvcHMuaCIKLSNpbmNsdWRlICJudGZzLmgiCi0KLS8q
KgotICogX19udGZzX2JpdG1hcF9zZXRfYml0c19pbl9ydW4gLSBzZXQgYSBydW4gb2YgYml0cyBp
biBhIGJpdG1hcCB0byBhIHZhbHVlCi0gKiBAdmk6CQkJdmZzIGlub2RlIGRlc2NyaWJpbmcgdGhl
IGJpdG1hcAotICogQHN0YXJ0X2JpdDoJCWZpcnN0IGJpdCB0byBzZXQKLSAqIEBjb3VudDoJCW51
bWJlciBvZiBiaXRzIHRvIHNldAotICogQHZhbHVlOgkJdmFsdWUgdG8gc2V0IHRoZSBiaXRzIHRv
IChpLmUuIDAgb3IgMSkKLSAqIEBpc19yb2xsYmFjazoJaWYgJ3RydWUnIHRoaXMgaXMgYSByb2xs
YmFjayBvcGVyYXRpb24KLSAqCi0gKiBTZXQgQGNvdW50IGJpdHMgc3RhcnRpbmcgYXQgYml0IEBz
dGFydF9iaXQgaW4gdGhlIGJpdG1hcCBkZXNjcmliZWQgYnkgdGhlCi0gKiB2ZnMgaW5vZGUgQHZp
IHRvIEB2YWx1ZSwgd2hlcmUgQHZhbHVlIGlzIGVpdGhlciAwIG9yIDEuCi0gKgotICogQGlzX3Jv
bGxiYWNrIHNob3VsZCBhbHdheXMgYmUgJ2ZhbHNlJywgaXQgaXMgZm9yIGludGVybmFsIHVzZSB0
byByb2xsYmFjawotICogZXJyb3JzLiAgWW91IHByb2JhYmx5IHdhbnQgdG8gdXNlIG50ZnNfYml0
bWFwX3NldF9iaXRzX2luX3J1bigpIGluc3RlYWQuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2Vz
cyBhbmQgLWVycm5vIG9uIGVycm9yLgotICovCi1pbnQgX19udGZzX2JpdG1hcF9zZXRfYml0c19p
bl9ydW4oc3RydWN0IGlub2RlICp2aSwgY29uc3QgczY0IHN0YXJ0X2JpdCwKLQkJY29uc3QgczY0
IGNvdW50LCBjb25zdCB1OCB2YWx1ZSwgY29uc3QgYm9vbCBpc19yb2xsYmFjaykKLXsKLQlzNjQg
Y250ID0gY291bnQ7Ci0JcGdvZmZfdCBpbmRleCwgZW5kX2luZGV4OwotCXN0cnVjdCBhZGRyZXNz
X3NwYWNlICptYXBwaW5nOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXU4ICprYWRkcjsKLQlpbnQg
cG9zLCBsZW47Ci0JdTggYml0OwotCi0JQlVHX09OKCF2aSk7Ci0JbnRmc19kZWJ1ZygiRW50ZXJp
bmcgZm9yIGlfaW5vIDB4JWx4LCBzdGFydF9iaXQgMHglbGx4LCBjb3VudCAweCVsbHgsICIKLQkJ
CSJ2YWx1ZSAldS4lcyIsIHZpLT5pX2lubywgKHVuc2lnbmVkIGxvbmcgbG9uZylzdGFydF9iaXQs
Ci0JCQkodW5zaWduZWQgbG9uZyBsb25nKWNudCwgKHVuc2lnbmVkIGludCl2YWx1ZSwKLQkJCWlz
X3JvbGxiYWNrID8gIiAocm9sbGJhY2spIiA6ICIiKTsKLQlCVUdfT04oc3RhcnRfYml0IDwgMCk7
Ci0JQlVHX09OKGNudCA8IDApOwotCUJVR19PTih2YWx1ZSA+IDEpOwotCS8qCi0JICogQ2FsY3Vs
YXRlIHRoZSBpbmRpY2VzIGZvciB0aGUgcGFnZXMgY29udGFpbmluZyB0aGUgZmlyc3QgYW5kIGxh
c3QKLQkgKiBiaXRzLCBpLmUuIEBzdGFydF9iaXQgYW5kIEBzdGFydF9iaXQgKyBAY250IC0gMSwg
cmVzcGVjdGl2ZWx5LgotCSAqLwotCWluZGV4ID0gc3RhcnRfYml0ID4+ICgzICsgUEFHRV9TSElG
VCk7Ci0JZW5kX2luZGV4ID0gKHN0YXJ0X2JpdCArIGNudCAtIDEpID4+ICgzICsgUEFHRV9TSElG
VCk7Ci0KLQkvKiBHZXQgdGhlIHBhZ2UgY29udGFpbmluZyB0aGUgZmlyc3QgYml0IChAc3RhcnRf
Yml0KS4gKi8KLQltYXBwaW5nID0gdmktPmlfbWFwcGluZzsKLQlwYWdlID0gbnRmc19tYXBfcGFn
ZShtYXBwaW5nLCBpbmRleCk7Ci0JaWYgKElTX0VSUihwYWdlKSkgewotCQlpZiAoIWlzX3JvbGxi
YWNrKQotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZhaWxlZCB0byBtYXAgZmlyc3QgcGFnZSAo
ZXJyb3IgIgotCQkJCQkiJWxpKSwgYWJvcnRpbmcuIiwgUFRSX0VSUihwYWdlKSk7Ci0JCXJldHVy
biBQVFJfRVJSKHBhZ2UpOwotCX0KLQlrYWRkciA9IHBhZ2VfYWRkcmVzcyhwYWdlKTsKLQotCS8q
IFNldCBAcG9zIHRvIHRoZSBwb3NpdGlvbiBvZiB0aGUgYnl0ZSBjb250YWluaW5nIEBzdGFydF9i
aXQuICovCi0JcG9zID0gKHN0YXJ0X2JpdCA+PiAzKSAmIH5QQUdFX01BU0s7Ci0KLQkvKiBDYWxj
dWxhdGUgdGhlIHBvc2l0aW9uIG9mIEBzdGFydF9iaXQgaW4gdGhlIGZpcnN0IGJ5dGUuICovCi0J
Yml0ID0gc3RhcnRfYml0ICYgNzsKLQotCS8qIElmIHRoZSBmaXJzdCBieXRlIGlzIHBhcnRpYWws
IG1vZGlmeSB0aGUgYXBwcm9wcmlhdGUgYml0cyBpbiBpdC4gKi8KLQlpZiAoYml0KSB7Ci0JCXU4
ICpieXRlID0ga2FkZHIgKyBwb3M7Ci0JCXdoaWxlICgoYml0ICYgNykgJiYgY250KSB7Ci0JCQlj
bnQtLTsKLQkJCWlmICh2YWx1ZSkKLQkJCQkqYnl0ZSB8PSAxIDw8IGJpdCsrOwotCQkJZWxzZQot
CQkJCSpieXRlICY9IH4oMSA8PCBiaXQrKyk7Ci0JCX0KLQkJLyogSWYgd2UgYXJlIGRvbmUsIHVu
bWFwIHRoZSBwYWdlIGFuZCByZXR1cm4gc3VjY2Vzcy4gKi8KLQkJaWYgKCFjbnQpCi0JCQlnb3Rv
IGRvbmU7Ci0KLQkJLyogVXBkYXRlIEBwb3MgdG8gdGhlIG5ldyBwb3NpdGlvbi4gKi8KLQkJcG9z
Kys7Ci0JfQotCS8qCi0JICogRGVwZW5kaW5nIG9uIEB2YWx1ZSwgbW9kaWZ5IGFsbCByZW1haW5p
bmcgd2hvbGUgYnl0ZXMgaW4gdGhlIHBhZ2UgdXAKLQkgKiB0byBAY250LgotCSAqLwotCWxlbiA9
IG1pbl90KHM2NCwgY250ID4+IDMsIFBBR0VfU0laRSAtIHBvcyk7Ci0JbWVtc2V0KGthZGRyICsg
cG9zLCB2YWx1ZSA/IDB4ZmYgOiAwLCBsZW4pOwotCWNudCAtPSBsZW4gPDwgMzsKLQotCS8qIFVw
ZGF0ZSBAbGVuIHRvIHBvaW50IHRvIHRoZSBmaXJzdCBub3QtZG9uZSBieXRlIGluIHRoZSBwYWdl
LiAqLwotCWlmIChjbnQgPCA4KQotCQlsZW4gKz0gcG9zOwotCi0JLyogSWYgd2UgYXJlIG5vdCBp
biB0aGUgbGFzdCBwYWdlLCBkZWFsIHdpdGggYWxsIHN1YnNlcXVlbnQgcGFnZXMuICovCi0Jd2hp
bGUgKGluZGV4IDwgZW5kX2luZGV4KSB7Ci0JCUJVR19PTihjbnQgPD0gMCk7Ci0KLQkJLyogVXBk
YXRlIEBpbmRleCBhbmQgZ2V0IHRoZSBuZXh0IHBhZ2UuICovCi0JCWZsdXNoX2RjYWNoZV9wYWdl
KHBhZ2UpOwotCQlzZXRfcGFnZV9kaXJ0eShwYWdlKTsKLQkJbnRmc191bm1hcF9wYWdlKHBhZ2Up
OwotCQlwYWdlID0gbnRmc19tYXBfcGFnZShtYXBwaW5nLCArK2luZGV4KTsKLQkJaWYgKElTX0VS
UihwYWdlKSkKLQkJCWdvdG8gcm9sbGJhY2s7Ci0JCWthZGRyID0gcGFnZV9hZGRyZXNzKHBhZ2Up
OwotCQkvKgotCQkgKiBEZXBlbmRpbmcgb24gQHZhbHVlLCBtb2RpZnkgYWxsIHJlbWFpbmluZyB3
aG9sZSBieXRlcyBpbiB0aGUKLQkJICogcGFnZSB1cCB0byBAY250LgotCQkgKi8KLQkJbGVuID0g
bWluX3QoczY0LCBjbnQgPj4gMywgUEFHRV9TSVpFKTsKLQkJbWVtc2V0KGthZGRyLCB2YWx1ZSA/
IDB4ZmYgOiAwLCBsZW4pOwotCQljbnQgLT0gbGVuIDw8IDM7Ci0JfQotCS8qCi0JICogVGhlIGN1
cnJlbnRseSBtYXBwZWQgcGFnZSBpcyB0aGUgbGFzdCBvbmUuICBJZiB0aGUgbGFzdCBieXRlIGlz
Ci0JICogcGFydGlhbCwgbW9kaWZ5IHRoZSBhcHByb3ByaWF0ZSBiaXRzIGluIGl0LiAgTm90ZSwg
QGxlbiBpcyB0aGUKLQkgKiBwb3NpdGlvbiBvZiB0aGUgbGFzdCBieXRlIGluc2lkZSB0aGUgcGFn
ZS4KLQkgKi8KLQlpZiAoY250KSB7Ci0JCXU4ICpieXRlOwotCi0JCUJVR19PTihjbnQgPiA3KTsK
LQotCQliaXQgPSBjbnQ7Ci0JCWJ5dGUgPSBrYWRkciArIGxlbjsKLQkJd2hpbGUgKGJpdC0tKSB7
Ci0JCQlpZiAodmFsdWUpCi0JCQkJKmJ5dGUgfD0gMSA8PCBiaXQ7Ci0JCQllbHNlCi0JCQkJKmJ5
dGUgJj0gfigxIDw8IGJpdCk7Ci0JCX0KLQl9Ci1kb25lOgotCS8qIFdlIGFyZSBkb25lLiAgVW5t
YXAgdGhlIHBhZ2UgYW5kIHJldHVybiBzdWNjZXNzLiAqLwotCWZsdXNoX2RjYWNoZV9wYWdlKHBh
Z2UpOwotCXNldF9wYWdlX2RpcnR5KHBhZ2UpOwotCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLQlu
dGZzX2RlYnVnKCJEb25lLiIpOwotCXJldHVybiAwOwotcm9sbGJhY2s6Ci0JLyoKLQkgKiBDdXJy
ZW50IHN0YXRlOgotCSAqCS0gbm8gcGFnZXMgYXJlIG1hcHBlZAotCSAqCS0gQGNvdW50IC0gQGNu
dCBpcyB0aGUgbnVtYmVyIG9mIGJpdHMgdGhhdCBoYXZlIGJlZW4gbW9kaWZpZWQKLQkgKi8KLQlp
ZiAoaXNfcm9sbGJhY2spCi0JCXJldHVybiBQVFJfRVJSKHBhZ2UpOwotCWlmIChjb3VudCAhPSBj
bnQpCi0JCXBvcyA9IF9fbnRmc19iaXRtYXBfc2V0X2JpdHNfaW5fcnVuKHZpLCBzdGFydF9iaXQs
IGNvdW50IC0gY250LAotCQkJCXZhbHVlID8gMCA6IDEsIHRydWUpOwotCWVsc2UKLQkJcG9zID0g
MDsKLQlpZiAoIXBvcykgewotCQkvKiBSb2xsYmFjayB3YXMgc3VjY2Vzc2Z1bC4gKi8KLQkJbnRm
c19lcnJvcih2aS0+aV9zYiwgIkZhaWxlZCB0byBtYXAgc3Vic2VxdWVudCBwYWdlIChlcnJvciAi
Ci0JCQkJIiVsaSksIGFib3J0aW5nLiIsIFBUUl9FUlIocGFnZSkpOwotCX0gZWxzZSB7Ci0JCS8q
IFJvbGxiYWNrIGZhaWxlZC4gKi8KLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZhaWxlZCB0byBt
YXAgc3Vic2VxdWVudCBwYWdlIChlcnJvciAiCi0JCQkJIiVsaSkgYW5kIHJvbGxiYWNrIGZhaWxl
ZCAoZXJyb3IgJWkpLiAgIgotCQkJCSJBYm9ydGluZyBhbmQgbGVhdmluZyBpbmNvbnNpc3RlbnQg
bWV0YWRhdGEuICAiCi0JCQkJIlVubW91bnQgYW5kIHJ1biBjaGtkc2suIiwgUFRSX0VSUihwYWdl
KSwgcG9zKTsKLQkJTlZvbFNldEVycm9ycyhOVEZTX1NCKHZpLT5pX3NiKSk7Ci0JfQotCXJldHVy
biBQVFJfRVJSKHBhZ2UpOwotfQotCi0jZW5kaWYgLyogTlRGU19SVyAqLwpkaWZmIC0tZ2l0IGEv
ZnMvbnRmcy9iaXRtYXAuaCBiL2ZzL250ZnMvYml0bWFwLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDlkZDIyMjRjYTljNC4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvYml0bWFw
LmgKKysrIC9kZXYvbnVsbApAQCAtMSwxMDQgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBiaXRtYXAuaCAtIERlZmluZXMgZm9y
IE5URlMga2VybmVsIGJpdG1hcCBoYW5kbGluZy4gIFBhcnQgb2YgdGhlIExpbnV4LU5URlMKLSAq
CSAgICAgIHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDA0IEFudG9uIEFsdGFwYXJt
YWtvdgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfQklUTUFQX0gKLSNkZWZpbmUgX0xJTlVY
X05URlNfQklUTUFQX0gKLQotI2lmZGVmIE5URlNfUlcKLQotI2luY2x1ZGUgPGxpbnV4L2ZzLmg+
Ci0KLSNpbmNsdWRlICJ0eXBlcy5oIgotCi1leHRlcm4gaW50IF9fbnRmc19iaXRtYXBfc2V0X2Jp
dHNfaW5fcnVuKHN0cnVjdCBpbm9kZSAqdmksIGNvbnN0IHM2NCBzdGFydF9iaXQsCi0JCWNvbnN0
IHM2NCBjb3VudCwgY29uc3QgdTggdmFsdWUsIGNvbnN0IGJvb2wgaXNfcm9sbGJhY2spOwotCi0v
KioKLSAqIG50ZnNfYml0bWFwX3NldF9iaXRzX2luX3J1biAtIHNldCBhIHJ1biBvZiBiaXRzIGlu
IGEgYml0bWFwIHRvIGEgdmFsdWUKLSAqIEB2aToJCQl2ZnMgaW5vZGUgZGVzY3JpYmluZyB0aGUg
Yml0bWFwCi0gKiBAc3RhcnRfYml0OgkJZmlyc3QgYml0IHRvIHNldAotICogQGNvdW50OgkJbnVt
YmVyIG9mIGJpdHMgdG8gc2V0Ci0gKiBAdmFsdWU6CQl2YWx1ZSB0byBzZXQgdGhlIGJpdHMgdG8g
KGkuZS4gMCBvciAxKQotICoKLSAqIFNldCBAY291bnQgYml0cyBzdGFydGluZyBhdCBiaXQgQHN0
YXJ0X2JpdCBpbiB0aGUgYml0bWFwIGRlc2NyaWJlZCBieSB0aGUKLSAqIHZmcyBpbm9kZSBAdmkg
dG8gQHZhbHVlLCB3aGVyZSBAdmFsdWUgaXMgZWl0aGVyIDAgb3IgMS4KLSAqCi0gKiBSZXR1cm4g
MCBvbiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3IuCi0gKi8KLXN0YXRpYyBpbmxpbmUgaW50
IG50ZnNfYml0bWFwX3NldF9iaXRzX2luX3J1bihzdHJ1Y3QgaW5vZGUgKnZpLAotCQljb25zdCBz
NjQgc3RhcnRfYml0LCBjb25zdCBzNjQgY291bnQsIGNvbnN0IHU4IHZhbHVlKQotewotCXJldHVy
biBfX250ZnNfYml0bWFwX3NldF9iaXRzX2luX3J1bih2aSwgc3RhcnRfYml0LCBjb3VudCwgdmFs
dWUsCi0JCQlmYWxzZSk7Ci19Ci0KLS8qKgotICogbnRmc19iaXRtYXBfc2V0X3J1biAtIHNldCBh
IHJ1biBvZiBiaXRzIGluIGEgYml0bWFwCi0gKiBAdmk6CQl2ZnMgaW5vZGUgZGVzY3JpYmluZyB0
aGUgYml0bWFwCi0gKiBAc3RhcnRfYml0OglmaXJzdCBiaXQgdG8gc2V0Ci0gKiBAY291bnQ6CW51
bWJlciBvZiBiaXRzIHRvIHNldAotICoKLSAqIFNldCBAY291bnQgYml0cyBzdGFydGluZyBhdCBi
aXQgQHN0YXJ0X2JpdCBpbiB0aGUgYml0bWFwIGRlc2NyaWJlZCBieSB0aGUKLSAqIHZmcyBpbm9k
ZSBAdmkuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgot
ICovCi1zdGF0aWMgaW5saW5lIGludCBudGZzX2JpdG1hcF9zZXRfcnVuKHN0cnVjdCBpbm9kZSAq
dmksIGNvbnN0IHM2NCBzdGFydF9iaXQsCi0JCWNvbnN0IHM2NCBjb3VudCkKLXsKLQlyZXR1cm4g
bnRmc19iaXRtYXBfc2V0X2JpdHNfaW5fcnVuKHZpLCBzdGFydF9iaXQsIGNvdW50LCAxKTsKLX0K
LQotLyoqCi0gKiBudGZzX2JpdG1hcF9jbGVhcl9ydW4gLSBjbGVhciBhIHJ1biBvZiBiaXRzIGlu
IGEgYml0bWFwCi0gKiBAdmk6CQl2ZnMgaW5vZGUgZGVzY3JpYmluZyB0aGUgYml0bWFwCi0gKiBA
c3RhcnRfYml0OglmaXJzdCBiaXQgdG8gY2xlYXIKLSAqIEBjb3VudDoJbnVtYmVyIG9mIGJpdHMg
dG8gY2xlYXIKLSAqCi0gKiBDbGVhciBAY291bnQgYml0cyBzdGFydGluZyBhdCBiaXQgQHN0YXJ0
X2JpdCBpbiB0aGUgYml0bWFwIGRlc2NyaWJlZCBieSB0aGUKLSAqIHZmcyBpbm9kZSBAdmkuCi0g
KgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0
aWMgaW5saW5lIGludCBudGZzX2JpdG1hcF9jbGVhcl9ydW4oc3RydWN0IGlub2RlICp2aSwgY29u
c3QgczY0IHN0YXJ0X2JpdCwKLQkJY29uc3QgczY0IGNvdW50KQotewotCXJldHVybiBudGZzX2Jp
dG1hcF9zZXRfYml0c19pbl9ydW4odmksIHN0YXJ0X2JpdCwgY291bnQsIDApOwotfQotCi0vKioK
LSAqIG50ZnNfYml0bWFwX3NldF9iaXQgLSBzZXQgYSBiaXQgaW4gYSBiaXRtYXAKLSAqIEB2aToJ
CXZmcyBpbm9kZSBkZXNjcmliaW5nIHRoZSBiaXRtYXAKLSAqIEBiaXQ6CWJpdCB0byBzZXQKLSAq
Ci0gKiBTZXQgYml0IEBiaXQgaW4gdGhlIGJpdG1hcCBkZXNjcmliZWQgYnkgdGhlIHZmcyBpbm9k
ZSBAdmkuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgot
ICovCi1zdGF0aWMgaW5saW5lIGludCBudGZzX2JpdG1hcF9zZXRfYml0KHN0cnVjdCBpbm9kZSAq
dmksIGNvbnN0IHM2NCBiaXQpCi17Ci0JcmV0dXJuIG50ZnNfYml0bWFwX3NldF9ydW4odmksIGJp
dCwgMSk7Ci19Ci0KLS8qKgotICogbnRmc19iaXRtYXBfY2xlYXJfYml0IC0gY2xlYXIgYSBiaXQg
aW4gYSBiaXRtYXAKLSAqIEB2aToJCXZmcyBpbm9kZSBkZXNjcmliaW5nIHRoZSBiaXRtYXAKLSAq
IEBiaXQ6CWJpdCB0byBjbGVhcgotICoKLSAqIENsZWFyIGJpdCBAYml0IGluIHRoZSBiaXRtYXAg
ZGVzY3JpYmVkIGJ5IHRoZSB2ZnMgaW5vZGUgQHZpLgotICoKLSAqIFJldHVybiAwIG9uIHN1Y2Nl
c3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqLwotc3RhdGljIGlubGluZSBpbnQgbnRmc19iaXRt
YXBfY2xlYXJfYml0KHN0cnVjdCBpbm9kZSAqdmksIGNvbnN0IHM2NCBiaXQpCi17Ci0JcmV0dXJu
IG50ZnNfYml0bWFwX2NsZWFyX3J1bih2aSwgYml0LCAxKTsKLX0KLQotI2VuZGlmIC8qIE5URlNf
UlcgKi8KLQotI2VuZGlmIC8qIGRlZmluZWQgX0xJTlVYX05URlNfQklUTUFQX0ggKi8KZGlmZiAt
LWdpdCBhL2ZzL250ZnMvY29sbGF0ZS5jIGIvZnMvbnRmcy9jb2xsYXRlLmMKZGVsZXRlZCBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDNhYjZlYzk2YWJmZS4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250
ZnMvY29sbGF0ZS5jCisrKyAvZGV2L251bGwKQEAgLTEsMTEwICswLDAgQEAKLS8vIFNQRFgtTGlj
ZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyCi0vKgotICogY29sbGF0ZS5jIC0gTlRG
UyBrZXJuZWwgY29sbGF0aW9uIGhhbmRsaW5nLiAgUGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9q
ZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwNCBBbnRvbiBBbHRhcGFybWFrb3YKLSAqLwot
Ci0jaW5jbHVkZSAiY29sbGF0ZS5oIgotI2luY2x1ZGUgImRlYnVnLmgiCi0jaW5jbHVkZSAibnRm
cy5oIgotCi1zdGF0aWMgaW50IG50ZnNfY29sbGF0ZV9iaW5hcnkobnRmc192b2x1bWUgKnZvbCwK
LQkJY29uc3Qgdm9pZCAqZGF0YTEsIGNvbnN0IGludCBkYXRhMV9sZW4sCi0JCWNvbnN0IHZvaWQg
KmRhdGEyLCBjb25zdCBpbnQgZGF0YTJfbGVuKQotewotCWludCByYzsKLQotCW50ZnNfZGVidWco
IkVudGVyaW5nLiIpOwotCXJjID0gbWVtY21wKGRhdGExLCBkYXRhMiwgbWluKGRhdGExX2xlbiwg
ZGF0YTJfbGVuKSk7Ci0JaWYgKCFyYyAmJiAoZGF0YTFfbGVuICE9IGRhdGEyX2xlbikpIHsKLQkJ
aWYgKGRhdGExX2xlbiA8IGRhdGEyX2xlbikKLQkJCXJjID0gLTE7Ci0JCWVsc2UKLQkJCXJjID0g
MTsKLQl9Ci0JbnRmc19kZWJ1ZygiRG9uZSwgcmV0dXJuaW5nICVpIiwgcmMpOwotCXJldHVybiBy
YzsKLX0KLQotc3RhdGljIGludCBudGZzX2NvbGxhdGVfbnRvZnNfdWxvbmcobnRmc192b2x1bWUg
KnZvbCwKLQkJY29uc3Qgdm9pZCAqZGF0YTEsIGNvbnN0IGludCBkYXRhMV9sZW4sCi0JCWNvbnN0
IHZvaWQgKmRhdGEyLCBjb25zdCBpbnQgZGF0YTJfbGVuKQotewotCWludCByYzsKLQl1MzIgZDEs
IGQyOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JLy8gRklYTUU6ICBXZSBkb24ndCBy
ZWFsbHkgd2FudCB0byBidWcgaGVyZS4KLQlCVUdfT04oZGF0YTFfbGVuICE9IGRhdGEyX2xlbik7
Ci0JQlVHX09OKGRhdGExX2xlbiAhPSA0KTsKLQlkMSA9IGxlMzJfdG9fY3B1cChkYXRhMSk7Ci0J
ZDIgPSBsZTMyX3RvX2NwdXAoZGF0YTIpOwotCWlmIChkMSA8IGQyKQotCQlyYyA9IC0xOwotCWVs
c2UgewotCQlpZiAoZDEgPT0gZDIpCi0JCQlyYyA9IDA7Ci0JCWVsc2UKLQkJCXJjID0gMTsKLQl9
Ci0JbnRmc19kZWJ1ZygiRG9uZSwgcmV0dXJuaW5nICVpIiwgcmMpOwotCXJldHVybiByYzsKLX0K
LQotdHlwZWRlZiBpbnQgKCpudGZzX2NvbGxhdGVfZnVuY190KShudGZzX3ZvbHVtZSAqLCBjb25z
dCB2b2lkICosIGNvbnN0IGludCwKLQkJY29uc3Qgdm9pZCAqLCBjb25zdCBpbnQpOwotCi1zdGF0
aWMgbnRmc19jb2xsYXRlX2Z1bmNfdCBudGZzX2RvX2NvbGxhdGUweDBbM10gPSB7Ci0JbnRmc19j
b2xsYXRlX2JpbmFyeSwKLQlOVUxMLypudGZzX2NvbGxhdGVfZmlsZV9uYW1lKi8sCi0JTlVMTC8q
bnRmc19jb2xsYXRlX3VuaWNvZGVfc3RyaW5nKi8sCi19OwotCi1zdGF0aWMgbnRmc19jb2xsYXRl
X2Z1bmNfdCBudGZzX2RvX2NvbGxhdGUweDFbNF0gPSB7Ci0JbnRmc19jb2xsYXRlX250b2ZzX3Vs
b25nLAotCU5VTEwvKm50ZnNfY29sbGF0ZV9udG9mc19zaWQqLywKLQlOVUxMLypudGZzX2NvbGxh
dGVfbnRvZnNfc2VjdXJpdHlfaGFzaCovLAotCU5VTEwvKm50ZnNfY29sbGF0ZV9udG9mc191bG9u
Z3MqLywKLX07Ci0KLS8qKgotICogbnRmc19jb2xsYXRlIC0gY29sbGF0ZSB0d28gZGF0YSBpdGVt
cyB1c2luZyBhIHNwZWNpZmllZCBjb2xsYXRpb24gcnVsZQotICogQHZvbDoJbnRmcyB2b2x1bWUg
dG8gd2hpY2ggdGhlIGRhdGEgaXRlbXMgYmVsb25nCi0gKiBAY3I6CQljb2xsYXRpb24gcnVsZSB0
byB1c2Ugd2hlbiBjb21wYXJpbmcgdGhlIGl0ZW1zCi0gKiBAZGF0YTE6CWZpcnN0IGRhdGEgaXRl
bSB0byBjb2xsYXRlCi0gKiBAZGF0YTFfbGVuOglsZW5ndGggaW4gYnl0ZXMgb2YgQGRhdGExCi0g
KiBAZGF0YTI6CXNlY29uZCBkYXRhIGl0ZW0gdG8gY29sbGF0ZQotICogQGRhdGEyX2xlbjoJbGVu
Z3RoIGluIGJ5dGVzIG9mIEBkYXRhMgotICoKLSAqIENvbGxhdGUgdGhlIHR3byBkYXRhIGl0ZW1z
IEBkYXRhMSBhbmQgQGRhdGEyIHVzaW5nIHRoZSBjb2xsYXRpb24gcnVsZSBAY3IKLSAqIGFuZCBy
ZXR1cm4gLTEsIDAsIGlyIDEgaWYgQGRhdGExIGlzIGZvdW5kLCByZXNwZWN0aXZlbHksIHRvIGNv
bGxhdGUgYmVmb3JlLAotICogdG8gbWF0Y2gsIG9yIHRvIGNvbGxhdGUgYWZ0ZXIgQGRhdGEyLgot
ICoKLSAqIEZvciBzcGVlZCB3ZSB1c2UgdGhlIGNvbGxhdGlvbiBydWxlIEBjciBhcyBhbiBpbmRl
eCBpbnRvIHR3byB0YWJsZXMgb2YKLSAqIGZ1bmN0aW9uIHBvaW50ZXJzIHRvIGNhbGwgdGhlIGFw
cHJvcHJpYXRlIGNvbGxhdGlvbiBmdW5jdGlvbi4KLSAqLwotaW50IG50ZnNfY29sbGF0ZShudGZz
X3ZvbHVtZSAqdm9sLCBDT0xMQVRJT05fUlVMRSBjciwKLQkJY29uc3Qgdm9pZCAqZGF0YTEsIGNv
bnN0IGludCBkYXRhMV9sZW4sCi0JCWNvbnN0IHZvaWQgKmRhdGEyLCBjb25zdCBpbnQgZGF0YTJf
bGVuKSB7Ci0JaW50IGk7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQkvKgotCSAqIEZJ
WE1FOiAgQXQgdGhlIG1vbWVudCB3ZSBvbmx5IHN1cHBvcnQgQ09MTEFUSU9OX0JJTkFSWSBhbmQK
LQkgKiBDT0xMQVRJT05fTlRPRlNfVUxPTkcsIHNvIHdlIEJVRygpIGZvciBldmVyeXRoaW5nIGVs
c2UgZm9yIG5vdy4KLQkgKi8KLQlCVUdfT04oY3IgIT0gQ09MTEFUSU9OX0JJTkFSWSAmJiBjciAh
PSBDT0xMQVRJT05fTlRPRlNfVUxPTkcpOwotCWkgPSBsZTMyX3RvX2NwdShjcik7Ci0JQlVHX09O
KGkgPCAwKTsKLQlpZiAoaSA8PSAweDAyKQotCQlyZXR1cm4gbnRmc19kb19jb2xsYXRlMHgwW2ld
KHZvbCwgZGF0YTEsIGRhdGExX2xlbiwKLQkJCQlkYXRhMiwgZGF0YTJfbGVuKTsKLQlCVUdfT04o
aSA8IDB4MTApOwotCWkgLT0gMHgxMDsKLQlpZiAobGlrZWx5KGkgPD0gMykpCi0JCXJldHVybiBu
dGZzX2RvX2NvbGxhdGUweDFbaV0odm9sLCBkYXRhMSwgZGF0YTFfbGVuLAotCQkJCWRhdGEyLCBk
YXRhMl9sZW4pOwotCUJVRygpOwotCXJldHVybiAwOwotfQpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9j
b2xsYXRlLmggYi9mcy9udGZzL2NvbGxhdGUuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggZjIyNTU2MTliNGY0Li4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9jb2xsYXRlLmgKKysr
IC9kZXYvbnVsbApAQCAtMSwzNiArMCwwIEBACi0vKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
R1BMLTIuMC1vci1sYXRlciAqLwotLyoKLSAqIGNvbGxhdGUuaCAtIERlZmluZXMgZm9yIE5URlMg
a2VybmVsIGNvbGxhdGlvbiBoYW5kbGluZy4gIFBhcnQgb2YgdGhlCi0gKgkgICAgICAgTGludXgt
TlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwNCBBbnRvbiBBbHRhcGFybWFr
b3YKLSAqLwotCi0jaWZuZGVmIF9MSU5VWF9OVEZTX0NPTExBVEVfSAotI2RlZmluZSBfTElOVVhf
TlRGU19DT0xMQVRFX0gKLQotI2luY2x1ZGUgInR5cGVzLmgiCi0jaW5jbHVkZSAidm9sdW1lLmgi
Ci0KLXN0YXRpYyBpbmxpbmUgYm9vbCBudGZzX2lzX2NvbGxhdGlvbl9ydWxlX3N1cHBvcnRlZChD
T0xMQVRJT05fUlVMRSBjcikgewotCWludCBpOwotCi0JLyoKLQkgKiBGSVhNRTogIEF0IHRoZSBt
b21lbnQgd2Ugb25seSBzdXBwb3J0IENPTExBVElPTl9CSU5BUlkgYW5kCi0JICogQ09MTEFUSU9O
X05UT0ZTX1VMT05HLCBzbyB3ZSByZXR1cm4gZmFsc2UgZm9yIGV2ZXJ5dGhpbmcgZWxzZSBmb3IK
LQkgKiBub3cuCi0JICovCi0JaWYgKHVubGlrZWx5KGNyICE9IENPTExBVElPTl9CSU5BUlkgJiYg
Y3IgIT0gQ09MTEFUSU9OX05UT0ZTX1VMT05HKSkKLQkJcmV0dXJuIGZhbHNlOwotCWkgPSBsZTMy
X3RvX2NwdShjcik7Ci0JaWYgKGxpa2VseSgoKGkgPj0gMCkgJiYgKGkgPD0gMHgwMikpIHx8Ci0J
CQkoKGkgPj0gMHgxMCkgJiYgKGkgPD0gMHgxMykpKSkKLQkJcmV0dXJuIHRydWU7Ci0JcmV0dXJu
IGZhbHNlOwotfQotCi1leHRlcm4gaW50IG50ZnNfY29sbGF0ZShudGZzX3ZvbHVtZSAqdm9sLCBD
T0xMQVRJT05fUlVMRSBjciwKLQkJY29uc3Qgdm9pZCAqZGF0YTEsIGNvbnN0IGludCBkYXRhMV9s
ZW4sCi0JCWNvbnN0IHZvaWQgKmRhdGEyLCBjb25zdCBpbnQgZGF0YTJfbGVuKTsKLQotI2VuZGlm
IC8qIF9MSU5VWF9OVEZTX0NPTExBVEVfSCAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9jb21wcmVz
cy5jIGIvZnMvbnRmcy9jb21wcmVzcy5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA3
NjFhYWEwMTk1ZDYuLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2NvbXByZXNzLmMKKysrIC9k
ZXYvbnVsbApAQCAtMSw5NTAgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQ
TC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBjb21wcmVzcy5jIC0gTlRGUyBrZXJuZWwgY29tcHJlc3Nl
ZCBhdHRyaWJ1dGVzIGhhbmRsaW5nLgotICoJCVBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVj
dC4KLSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAwNCBBbnRvbiBBbHRhcGFybWFrb3YKLSAq
IENvcHlyaWdodCAoYykgMjAwMiBSaWNoYXJkIFJ1c3NvbgotICovCi0KLSNpbmNsdWRlIDxsaW51
eC9mcy5oPgotI2luY2x1ZGUgPGxpbnV4L2J1ZmZlcl9oZWFkLmg+Ci0jaW5jbHVkZSA8bGludXgv
YmxrZGV2Lmg+Ci0jaW5jbHVkZSA8bGludXgvdm1hbGxvYy5oPgotI2luY2x1ZGUgPGxpbnV4L3Ns
YWIuaD4KLQotI2luY2x1ZGUgImF0dHJpYi5oIgotI2luY2x1ZGUgImlub2RlLmgiCi0jaW5jbHVk
ZSAiZGVidWcuaCIKLSNpbmNsdWRlICJudGZzLmgiCi0KLS8qKgotICogbnRmc19jb21wcmVzc2lv
bl9jb25zdGFudHMgLSBlbnVtIG9mIGNvbnN0YW50cyB1c2VkIGluIHRoZSBjb21wcmVzc2lvbiBj
b2RlCi0gKi8KLXR5cGVkZWYgZW51bSB7Ci0JLyogVG9rZW4gdHlwZXMgYW5kIGFjY2VzcyBtYXNr
LiAqLwotCU5URlNfU1lNQk9MX1RPS0VOCT0JMCwKLQlOVEZTX1BIUkFTRV9UT0tFTgk9CTEsCi0J
TlRGU19UT0tFTl9NQVNLCQk9CTEsCi0KLQkvKiBDb21wcmVzc2lvbiBzdWItYmxvY2sgY29uc3Rh
bnRzLiAqLwotCU5URlNfU0JfU0laRV9NQVNLCT0JMHgwZmZmLAotCU5URlNfU0JfU0laRQkJPQkw
eDEwMDAsCi0JTlRGU19TQl9JU19DT01QUkVTU0VECT0JMHg4MDAwLAotCi0JLyoKLQkgKiBUaGUg
bWF4aW11bSBjb21wcmVzc2lvbiBibG9jayBzaXplIGlzIGJ5IGRlZmluaXRpb24gMTYgKiB0aGUg
Y2x1c3RlcgotCSAqIHNpemUsIHdpdGggdGhlIG1heGltdW0gc3VwcG9ydGVkIGNsdXN0ZXIgc2l6
ZSBiZWluZyA0a2lCLiBUaHVzIHRoZQotCSAqIG1heGltdW0gY29tcHJlc3Npb24gYnVmZmVyIHNp
emUgaXMgNjRraUIsIHNvIHdlIHVzZSB0aGlzIHdoZW4KLQkgKiBpbml0aWFsaXppbmcgdGhlIGNv
bXByZXNzaW9uIGJ1ZmZlci4KLQkgKi8KLQlOVEZTX01BWF9DQl9TSVpFCT0gNjQgKiAxMDI0LAot
fSBudGZzX2NvbXByZXNzaW9uX2NvbnN0YW50czsKLQotLyoKLSAqIG50ZnNfY29tcHJlc3Npb25f
YnVmZmVyIC0gb25lIGJ1ZmZlciBmb3IgdGhlIGRlY29tcHJlc3Npb24gZW5naW5lCi0gKi8KLXN0
YXRpYyB1OCAqbnRmc19jb21wcmVzc2lvbl9idWZmZXI7Ci0KLS8qCi0gKiBudGZzX2NiX2xvY2sg
LSBzcGlubG9jayB3aGljaCBwcm90ZWN0cyBudGZzX2NvbXByZXNzaW9uX2J1ZmZlcgotICovCi1z
dGF0aWMgREVGSU5FX1NQSU5MT0NLKG50ZnNfY2JfbG9jayk7Ci0KLS8qKgotICogYWxsb2NhdGVf
Y29tcHJlc3Npb25fYnVmZmVycyAtIGFsbG9jYXRlIHRoZSBkZWNvbXByZXNzaW9uIGJ1ZmZlcnMK
LSAqCi0gKiBDYWxsZXIgaGFzIHRvIGhvbGQgdGhlIG50ZnNfbG9jayBtdXRleC4KLSAqCi0gKiBS
ZXR1cm4gMCBvbiBzdWNjZXNzIG9yIC1FTk9NRU0gaWYgdGhlIGFsbG9jYXRpb25zIGZhaWxlZC4K
LSAqLwotaW50IGFsbG9jYXRlX2NvbXByZXNzaW9uX2J1ZmZlcnModm9pZCkKLXsKLQlCVUdfT04o
bnRmc19jb21wcmVzc2lvbl9idWZmZXIpOwotCi0JbnRmc19jb21wcmVzc2lvbl9idWZmZXIgPSB2
bWFsbG9jKE5URlNfTUFYX0NCX1NJWkUpOwotCWlmICghbnRmc19jb21wcmVzc2lvbl9idWZmZXIp
Ci0JCXJldHVybiAtRU5PTUVNOwotCXJldHVybiAwOwotfQotCi0vKioKLSAqIGZyZWVfY29tcHJl
c3Npb25fYnVmZmVycyAtIGZyZWUgdGhlIGRlY29tcHJlc3Npb24gYnVmZmVycwotICoKLSAqIENh
bGxlciBoYXMgdG8gaG9sZCB0aGUgbnRmc19sb2NrIG11dGV4LgotICovCi12b2lkIGZyZWVfY29t
cHJlc3Npb25fYnVmZmVycyh2b2lkKQotewotCUJVR19PTighbnRmc19jb21wcmVzc2lvbl9idWZm
ZXIpOwotCXZmcmVlKG50ZnNfY29tcHJlc3Npb25fYnVmZmVyKTsKLQludGZzX2NvbXByZXNzaW9u
X2J1ZmZlciA9IE5VTEw7Ci19Ci0KLS8qKgotICogemVyb19wYXJ0aWFsX2NvbXByZXNzZWRfcGFn
ZSAtIHplcm8gb3V0IG9mIGJvdW5kcyBjb21wcmVzc2VkIHBhZ2UgcmVnaW9uCi0gKi8KLXN0YXRp
YyB2b2lkIHplcm9fcGFydGlhbF9jb21wcmVzc2VkX3BhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsCi0J
CWNvbnN0IHM2NCBpbml0aWFsaXplZF9zaXplKQotewotCXU4ICprcCA9IHBhZ2VfYWRkcmVzcyhw
YWdlKTsKLQl1bnNpZ25lZCBpbnQga3Bfb2ZzOwotCi0JbnRmc19kZWJ1ZygiWmVyb2luZyBwYWdl
IHJlZ2lvbiBvdXRzaWRlIGluaXRpYWxpemVkIHNpemUuIik7Ci0JaWYgKCgoczY0KXBhZ2UtPmlu
ZGV4IDw8IFBBR0VfU0hJRlQpID49IGluaXRpYWxpemVkX3NpemUpIHsKLQkJY2xlYXJfcGFnZShr
cCk7Ci0JCXJldHVybjsKLQl9Ci0Ja3Bfb2ZzID0gaW5pdGlhbGl6ZWRfc2l6ZSAmIH5QQUdFX01B
U0s7Ci0JbWVtc2V0KGtwICsga3Bfb2ZzLCAwLCBQQUdFX1NJWkUgLSBrcF9vZnMpOwotCXJldHVy
bjsKLX0KLQotLyoqCi0gKiBoYW5kbGVfYm91bmRzX2NvbXByZXNzZWRfcGFnZSAtIHRlc3QgZm9y
JmhhbmRsZSBvdXQgb2YgYm91bmRzIGNvbXByZXNzZWQgcGFnZQotICovCi1zdGF0aWMgaW5saW5l
IHZvaWQgaGFuZGxlX2JvdW5kc19jb21wcmVzc2VkX3BhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsCi0J
CWNvbnN0IGxvZmZfdCBpX3NpemUsIGNvbnN0IHM2NCBpbml0aWFsaXplZF9zaXplKQotewotCWlm
ICgocGFnZS0+aW5kZXggPj0gKGluaXRpYWxpemVkX3NpemUgPj4gUEFHRV9TSElGVCkpICYmCi0J
CQkoaW5pdGlhbGl6ZWRfc2l6ZSA8IGlfc2l6ZSkpCi0JCXplcm9fcGFydGlhbF9jb21wcmVzc2Vk
X3BhZ2UocGFnZSwgaW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JcmV0dXJuOwotfQotCi0vKioKLSAqIG50
ZnNfZGVjb21wcmVzcyAtIGRlY29tcHJlc3MgYSBjb21wcmVzc2lvbiBibG9jayBpbnRvIGFuIGFy
cmF5IG9mIHBhZ2VzCi0gKiBAZGVzdF9wYWdlczoJCWRlc3RpbmF0aW9uIGFycmF5IG9mIHBhZ2Vz
Ci0gKiBAY29tcGxldGVkX3BhZ2VzOglzY3JhdGNoIHNwYWNlIHRvIHRyYWNrIGNvbXBsZXRlZCBw
YWdlcwotICogQGRlc3RfaW5kZXg6CQljdXJyZW50IGluZGV4IGludG8gQGRlc3RfcGFnZXMgKElO
L09VVCkKLSAqIEBkZXN0X29mczoJCWN1cnJlbnQgb2Zmc2V0IHdpdGhpbiBAZGVzdF9wYWdlc1tA
ZGVzdF9pbmRleF0gKElOL09VVCkKLSAqIEBkZXN0X21heF9pbmRleDoJbWF4aW11bSBpbmRleCBp
bnRvIEBkZXN0X3BhZ2VzIChJTikKLSAqIEBkZXN0X21heF9vZnM6CW1heGltdW0gb2Zmc2V0IHdp
dGhpbiBAZGVzdF9wYWdlc1tAZGVzdF9tYXhfaW5kZXhdIChJTikKLSAqIEB4cGFnZToJCXRoZSB0
YXJnZXQgcGFnZSAoLTEgaWYgbm9uZSkgKElOKQotICogQHhwYWdlX2RvbmU6CQlzZXQgdG8gMSBp
ZiB4cGFnZSB3YXMgY29tcGxldGVkIHN1Y2Nlc3NmdWxseSAoSU4vT1VUKQotICogQGNiX3N0YXJ0
OgkJY29tcHJlc3Npb24gYmxvY2sgdG8gZGVjb21wcmVzcyAoSU4pCi0gKiBAY2Jfc2l6ZToJCXNp
emUgb2YgY29tcHJlc3Npb24gYmxvY2sgQGNiX3N0YXJ0IGluIGJ5dGVzIChJTikKLSAqIEBpX3Np
emU6CQlmaWxlIHNpemUgd2hlbiB3ZSBzdGFydGVkIHRoZSByZWFkIChJTikKLSAqIEBpbml0aWFs
aXplZF9zaXplOglpbml0aWFsaXplZCBmaWxlIHNpemUgd2hlbiB3ZSBzdGFydGVkIHRoZSByZWFk
IChJTikKLSAqCi0gKiBUaGUgY2FsbGVyIG11c3QgaGF2ZSBkaXNhYmxlZCBwcmVlbXB0aW9uLiBu
dGZzX2RlY29tcHJlc3MoKSByZWVuYWJsZXMgaXQgd2hlbgotICogdGhlIGNyaXRpY2FsIHNlY3Rp
b24gaXMgZmluaXNoZWQuCi0gKgotICogVGhpcyBkZWNvbXByZXNzZXMgdGhlIGNvbXByZXNzaW9u
IGJsb2NrIEBjYl9zdGFydCBpbnRvIHRoZSBhcnJheSBvZgotICogZGVzdGluYXRpb24gcGFnZXMg
QGRlc3RfcGFnZXMgc3RhcnRpbmcgYXQgaW5kZXggQGRlc3RfaW5kZXggaW50byBAZGVzdF9wYWdl
cwotICogYW5kIGF0IG9mZnNldCBAZGVzdF9wb3MgaW50byB0aGUgcGFnZSBAZGVzdF9wYWdlc1tA
ZGVzdF9pbmRleF0uCi0gKgotICogV2hlbiB0aGUgcGFnZSBAZGVzdF9wYWdlc1tAeHBhZ2VdIGlz
IGNvbXBsZXRlZCwgQHhwYWdlX2RvbmUgaXMgc2V0IHRvIDEuCi0gKiBJZiB4cGFnZSBpcyAtMSBv
ciBAeHBhZ2UgaGFzIG5vdCBiZWVuIGNvbXBsZXRlZCwgQHhwYWdlX2RvbmUgaXMgbm90IG1vZGlm
aWVkLgotICoKLSAqIEBjYl9zdGFydCBpcyBhIHBvaW50ZXIgdG8gdGhlIGNvbXByZXNzaW9uIGJs
b2NrIHdoaWNoIG5lZWRzIGRlY29tcHJlc3NpbmcKLSAqIGFuZCBAY2Jfc2l6ZSBpcyB0aGUgc2l6
ZSBvZiBAY2Jfc3RhcnQgaW4gYnl0ZXMgKDgtNjRraUIpLgotICoKLSAqIFJldHVybiAwIGlmIHN1
Y2Nlc3Mgb3IgLUVPVkVSRkxPVyBvbiBlcnJvciBpbiB0aGUgY29tcHJlc3NlZCBzdHJlYW0uCi0g
KiBAeHBhZ2VfZG9uZSBpbmRpY2F0ZXMgd2hldGhlciB0aGUgdGFyZ2V0IHBhZ2UgKEBkZXN0X3Bh
Z2VzW0B4cGFnZV0pIHdhcwotICogY29tcGxldGVkIGR1cmluZyB0aGUgZGVjb21wcmVzc2lvbiBv
ZiB0aGUgY29tcHJlc3Npb24gYmxvY2sgKEBjYl9zdGFydCkuCi0gKgotICogV2FybmluZzogVGhp
cyBmdW5jdGlvbiAqUkVRVUlSRVMqIFBBR0VfU0laRSA+PSA0MDk2IG9yIGl0IHdpbGwgYmxvdyB1
cAotICogdW5wcmVkaWNhdGJseSEgWW91IGhhdmUgYmVlbiB3YXJuZWQhCi0gKgotICogTm90ZSB0
byBoYWNrZXJzOiBUaGlzIGZ1bmN0aW9uIG1heSBub3Qgc2xlZXAgdW50aWwgaXQgaGFzIGZpbmlz
aGVkIGFjY2Vzc2luZwotICogdGhlIGNvbXByZXNzaW9uIGJsb2NrIEBjYl9zdGFydCBhcyBpdCBp
cyBhIHBlci1DUFUgYnVmZmVyLgotICovCi1zdGF0aWMgaW50IG50ZnNfZGVjb21wcmVzcyhzdHJ1
Y3QgcGFnZSAqZGVzdF9wYWdlc1tdLCBpbnQgY29tcGxldGVkX3BhZ2VzW10sCi0JCWludCAqZGVz
dF9pbmRleCwgaW50ICpkZXN0X29mcywgY29uc3QgaW50IGRlc3RfbWF4X2luZGV4LAotCQljb25z
dCBpbnQgZGVzdF9tYXhfb2ZzLCBjb25zdCBpbnQgeHBhZ2UsIGNoYXIgKnhwYWdlX2RvbmUsCi0J
CXU4ICpjb25zdCBjYl9zdGFydCwgY29uc3QgdTMyIGNiX3NpemUsIGNvbnN0IGxvZmZfdCBpX3Np
emUsCi0JCWNvbnN0IHM2NCBpbml0aWFsaXplZF9zaXplKQotewotCS8qCi0JICogUG9pbnRlcnMg
aW50byB0aGUgY29tcHJlc3NlZCBkYXRhLCBpLmUuIHRoZSBjb21wcmVzc2lvbiBibG9jayAoY2Ip
LAotCSAqIGFuZCB0aGUgdGhlcmVpbiBjb250YWluZWQgc3ViLWJsb2NrcyAoc2IpLgotCSAqLwot
CXU4ICpjYl9lbmQgPSBjYl9zdGFydCArIGNiX3NpemU7IC8qIEVuZCBvZiBjYi4gKi8KLQl1OCAq
Y2IgPSBjYl9zdGFydDsJLyogQ3VycmVudCBwb3NpdGlvbiBpbiBjYi4gKi8KLQl1OCAqY2Jfc2Jf
c3RhcnQ7CS8qIEJlZ2lubmluZyBvZiB0aGUgY3VycmVudCBzYiBpbiB0aGUgY2IuICovCi0JdTgg
KmNiX3NiX2VuZDsJCS8qIEVuZCBvZiBjdXJyZW50IHNiIC8gYmVnaW5uaW5nIG9mIG5leHQgc2Iu
ICovCi0KLQkvKiBWYXJpYWJsZXMgZm9yIHVuY29tcHJlc3NlZCBkYXRhIC8gZGVzdGluYXRpb24u
ICovCi0Jc3RydWN0IHBhZ2UgKmRwOwkvKiBDdXJyZW50IGRlc3RpbmF0aW9uIHBhZ2UgYmVpbmcg
d29ya2VkIG9uLiAqLwotCXU4ICpkcF9hZGRyOwkJLyogQ3VycmVudCBwb2ludGVyIGludG8gZHAu
ICovCi0JdTggKmRwX3NiX3N0YXJ0OwkvKiBTdGFydCBvZiBjdXJyZW50IHN1Yi1ibG9jayBpbiBk
cC4gKi8KLQl1OCAqZHBfc2JfZW5kOwkJLyogRW5kIG9mIGN1cnJlbnQgc2IgaW4gZHAgKGRwX3Ni
X3N0YXJ0ICsKLQkJCQkgICBOVEZTX1NCX1NJWkUpLiAqLwotCXUxNiBkb19zYl9zdGFydDsJLyog
QGRlc3Rfb2ZzIHdoZW4gc3RhcnRpbmcgdGhpcyBzdWItYmxvY2suICovCi0JdTE2IGRvX3NiX2Vu
ZDsJCS8qIEBkZXN0X29mcyBvZiBlbmQgb2YgdGhpcyBzYiAoZG9fc2Jfc3RhcnQgKwotCQkJCSAg
IE5URlNfU0JfU0laRSkuICovCi0KLQkvKiBWYXJpYWJsZXMgZm9yIHRhZyBhbmQgdG9rZW4gcGFy
c2luZy4gKi8KLQl1OCB0YWc7CQkJLyogQ3VycmVudCB0YWcuICovCi0JaW50IHRva2VuOwkJLyog
TG9vcCBjb3VudGVyIGZvciB0aGUgZWlnaHQgdG9rZW5zIGluIHRhZy4gKi8KLQlpbnQgbnJfY29t
cGxldGVkX3BhZ2VzID0gMDsKLQotCS8qIERlZmF1bHQgZXJyb3IgY29kZS4gKi8KLQlpbnQgZXJy
ID0gLUVPVkVSRkxPVzsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLCBjYl9zaXplID0gMHgleC4i
LCBjYl9zaXplKTsKLWRvX25leHRfc2I6Ci0JbnRmc19kZWJ1ZygiQmVnaW5uaW5nIHN1Yi1ibG9j
ayBhdCBvZmZzZXQgPSAweCV6eCBpbiB0aGUgY2IuIiwKLQkJCWNiIC0gY2Jfc3RhcnQpOwotCS8q
Ci0JICogSGF2ZSB3ZSByZWFjaGVkIHRoZSBlbmQgb2YgdGhlIGNvbXByZXNzaW9uIGJsb2NrIG9y
IHRoZSBlbmQgb2YgdGhlCi0JICogZGVjb21wcmVzc2VkIGRhdGE/ICBUaGUgbGF0dGVyIGNhbiBo
YXBwZW4gZm9yIGV4YW1wbGUgaWYgdGhlIGN1cnJlbnQKLQkgKiBwb3NpdGlvbiBpbiB0aGUgY29t
cHJlc3Npb24gYmxvY2sgaXMgb25lIGJ5dGUgYmVmb3JlIGl0cyBlbmQgc28gdGhlCi0JICogZmly
c3QgdHdvIGNoZWNrcyBkbyBub3QgZGV0ZWN0IGl0LgotCSAqLwotCWlmIChjYiA9PSBjYl9lbmQg
fHwgIWxlMTZfdG9fY3B1cCgobGUxNiopY2IpIHx8Ci0JCQkoKmRlc3RfaW5kZXggPT0gZGVzdF9t
YXhfaW5kZXggJiYKLQkJCSpkZXN0X29mcyA9PSBkZXN0X21heF9vZnMpKSB7Ci0JCWludCBpOwot
Ci0JCW50ZnNfZGVidWcoIkNvbXBsZXRlZC4gUmV0dXJuaW5nIHN1Y2Nlc3MgKDApLiIpOwotCQll
cnIgPSAwOwotcmV0dXJuX2Vycm9yOgotCQkvKiBXZSBjYW4gc2xlZXAgZnJvbSBub3cgb24sIHNv
IHdlIGRyb3AgbG9jay4gKi8KLQkJc3Bpbl91bmxvY2soJm50ZnNfY2JfbG9jayk7Ci0JCS8qIFNl
Y29uZCBzdGFnZTogZmluYWxpemUgY29tcGxldGVkIHBhZ2VzLiAqLwotCQlpZiAobnJfY29tcGxl
dGVkX3BhZ2VzID4gMCkgewotCQkJZm9yIChpID0gMDsgaSA8IG5yX2NvbXBsZXRlZF9wYWdlczsg
aSsrKSB7Ci0JCQkJaW50IGRpID0gY29tcGxldGVkX3BhZ2VzW2ldOwotCi0JCQkJZHAgPSBkZXN0
X3BhZ2VzW2RpXTsKLQkJCQkvKgotCQkJCSAqIElmIHdlIGFyZSBvdXRzaWRlIHRoZSBpbml0aWFs
aXplZCBzaXplLCB6ZXJvCi0JCQkJICogdGhlIG91dCBvZiBib3VuZHMgcGFnZSByYW5nZS4KLQkJ
CQkgKi8KLQkJCQloYW5kbGVfYm91bmRzX2NvbXByZXNzZWRfcGFnZShkcCwgaV9zaXplLAotCQkJ
CQkJaW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JCQkJZmx1c2hfZGNhY2hlX3BhZ2UoZHApOwotCQkJCWt1
bm1hcChkcCk7Ci0JCQkJU2V0UGFnZVVwdG9kYXRlKGRwKTsKLQkJCQl1bmxvY2tfcGFnZShkcCk7
Ci0JCQkJaWYgKGRpID09IHhwYWdlKQotCQkJCQkqeHBhZ2VfZG9uZSA9IDE7Ci0JCQkJZWxzZQot
CQkJCQlwdXRfcGFnZShkcCk7Ci0JCQkJZGVzdF9wYWdlc1tkaV0gPSBOVUxMOwotCQkJfQotCQl9
Ci0JCXJldHVybiBlcnI7Ci0JfQotCi0JLyogU2V0dXAgb2Zmc2V0cyBmb3IgdGhlIGN1cnJlbnQg
c3ViLWJsb2NrIGRlc3RpbmF0aW9uLiAqLwotCWRvX3NiX3N0YXJ0ID0gKmRlc3Rfb2ZzOwotCWRv
X3NiX2VuZCA9IGRvX3NiX3N0YXJ0ICsgTlRGU19TQl9TSVpFOwotCi0JLyogQ2hlY2sgdGhhdCB3
ZSBhcmUgc3RpbGwgd2l0aGluIGFsbG93ZWQgYm91bmRhcmllcy4gKi8KLQlpZiAoKmRlc3RfaW5k
ZXggPT0gZGVzdF9tYXhfaW5kZXggJiYgZG9fc2JfZW5kID4gZGVzdF9tYXhfb2ZzKQotCQlnb3Rv
IHJldHVybl9vdmVyZmxvdzsKLQotCS8qIERvZXMgdGhlIG1pbmltdW0gc2l6ZSBvZiBhIGNvbXBy
ZXNzZWQgc2Igb3ZlcmZsb3cgdmFsaWQgcmFuZ2U/ICovCi0JaWYgKGNiICsgNiA+IGNiX2VuZCkK
LQkJZ290byByZXR1cm5fb3ZlcmZsb3c7Ci0KLQkvKiBTZXR1cCB0aGUgY3VycmVudCBzdWItYmxv
Y2sgc291cmNlIHBvaW50ZXJzIGFuZCB2YWxpZGF0ZSByYW5nZS4gKi8KLQljYl9zYl9zdGFydCA9
IGNiOwotCWNiX3NiX2VuZCA9IGNiX3NiX3N0YXJ0ICsgKGxlMTZfdG9fY3B1cCgobGUxNiopY2Ip
ICYgTlRGU19TQl9TSVpFX01BU0spCi0JCQkrIDM7Ci0JaWYgKGNiX3NiX2VuZCA+IGNiX2VuZCkK
LQkJZ290byByZXR1cm5fb3ZlcmZsb3c7Ci0KLQkvKiBHZXQgdGhlIGN1cnJlbnQgZGVzdGluYXRp
b24gcGFnZS4gKi8KLQlkcCA9IGRlc3RfcGFnZXNbKmRlc3RfaW5kZXhdOwotCWlmICghZHApIHsK
LQkJLyogTm8gcGFnZSBwcmVzZW50LiBTa2lwIGRlY29tcHJlc3Npb24gb2YgdGhpcyBzdWItYmxv
Y2suICovCi0JCWNiID0gY2Jfc2JfZW5kOwotCi0JCS8qIEFkdmFuY2UgZGVzdGluYXRpb24gcG9z
aXRpb24gdG8gbmV4dCBzdWItYmxvY2suICovCi0JCSpkZXN0X29mcyA9ICgqZGVzdF9vZnMgKyBO
VEZTX1NCX1NJWkUpICYgflBBR0VfTUFTSzsKLQkJaWYgKCEqZGVzdF9vZnMgJiYgKCsrKmRlc3Rf
aW5kZXggPiBkZXN0X21heF9pbmRleCkpCi0JCQlnb3RvIHJldHVybl9vdmVyZmxvdzsKLQkJZ290
byBkb19uZXh0X3NiOwotCX0KLQotCS8qIFdlIGhhdmUgYSB2YWxpZCBkZXN0aW5hdGlvbiBwYWdl
LiBTZXR1cCB0aGUgZGVzdGluYXRpb24gcG9pbnRlcnMuICovCi0JZHBfYWRkciA9ICh1OCopcGFn
ZV9hZGRyZXNzKGRwKSArIGRvX3NiX3N0YXJ0OwotCi0JLyogTm93LCB3ZSBhcmUgcmVhZHkgdG8g
cHJvY2VzcyB0aGUgY3VycmVudCBzdWItYmxvY2sgKHNiKS4gKi8KLQlpZiAoIShsZTE2X3RvX2Nw
dXAoKGxlMTYqKWNiKSAmIE5URlNfU0JfSVNfQ09NUFJFU1NFRCkpIHsKLQkJbnRmc19kZWJ1Zygi
Rm91bmQgdW5jb21wcmVzc2VkIHN1Yi1ibG9jay4iKTsKLQkJLyogVGhpcyBzYiBpcyBub3QgY29t
cHJlc3NlZCwganVzdCBjb3B5IGl0IGludG8gZGVzdGluYXRpb24uICovCi0KLQkJLyogQWR2YW5j
ZSBzb3VyY2UgcG9zaXRpb24gdG8gZmlyc3QgZGF0YSBieXRlLiAqLwotCQljYiArPSAyOwotCi0J
CS8qIEFuIHVuY29tcHJlc3NlZCBzYiBtdXN0IGJlIGZ1bGwgc2l6ZS4gKi8KLQkJaWYgKGNiX3Ni
X2VuZCAtIGNiICE9IE5URlNfU0JfU0laRSkKLQkJCWdvdG8gcmV0dXJuX292ZXJmbG93OwotCi0J
CS8qIENvcHkgdGhlIGJsb2NrIGFuZCBhZHZhbmNlIHRoZSBzb3VyY2UgcG9zaXRpb24uICovCi0J
CW1lbWNweShkcF9hZGRyLCBjYiwgTlRGU19TQl9TSVpFKTsKLQkJY2IgKz0gTlRGU19TQl9TSVpF
OwotCi0JCS8qIEFkdmFuY2UgZGVzdGluYXRpb24gcG9zaXRpb24gdG8gbmV4dCBzdWItYmxvY2su
ICovCi0JCSpkZXN0X29mcyArPSBOVEZTX1NCX1NJWkU7Ci0JCWlmICghKCpkZXN0X29mcyAmPSB+
UEFHRV9NQVNLKSkgewotZmluYWxpemVfcGFnZToKLQkJCS8qCi0JCQkgKiBGaXJzdCBzdGFnZTog
YWRkIGN1cnJlbnQgcGFnZSBpbmRleCB0byBhcnJheSBvZgotCQkJICogY29tcGxldGVkIHBhZ2Vz
LgotCQkJICovCi0JCQljb21wbGV0ZWRfcGFnZXNbbnJfY29tcGxldGVkX3BhZ2VzKytdID0gKmRl
c3RfaW5kZXg7Ci0JCQlpZiAoKysqZGVzdF9pbmRleCA+IGRlc3RfbWF4X2luZGV4KQotCQkJCWdv
dG8gcmV0dXJuX292ZXJmbG93OwotCQl9Ci0JCWdvdG8gZG9fbmV4dF9zYjsKLQl9Ci0JbnRmc19k
ZWJ1ZygiRm91bmQgY29tcHJlc3NlZCBzdWItYmxvY2suIik7Ci0JLyogVGhpcyBzYiBpcyBjb21w
cmVzc2VkLCBkZWNvbXByZXNzIGl0IGludG8gZGVzdGluYXRpb24uICovCi0KLQkvKiBTZXR1cCBk
ZXN0aW5hdGlvbiBwb2ludGVycy4gKi8KLQlkcF9zYl9zdGFydCA9IGRwX2FkZHI7Ci0JZHBfc2Jf
ZW5kID0gZHBfc2Jfc3RhcnQgKyBOVEZTX1NCX1NJWkU7Ci0KLQkvKiBGb3J3YXJkIHRvIHRoZSBm
aXJzdCB0YWcgaW4gdGhlIHN1Yi1ibG9jay4gKi8KLQljYiArPSAyOwotZG9fbmV4dF90YWc6Ci0J
aWYgKGNiID09IGNiX3NiX2VuZCkgewotCQkvKiBDaGVjayBpZiB0aGUgZGVjb21wcmVzc2VkIHN1
Yi1ibG9jayB3YXMgbm90IGZ1bGwtbGVuZ3RoLiAqLwotCQlpZiAoZHBfYWRkciA8IGRwX3NiX2Vu
ZCkgewotCQkJaW50IG5yX2J5dGVzID0gZG9fc2JfZW5kIC0gKmRlc3Rfb2ZzOwotCi0JCQludGZz
X2RlYnVnKCJGaWxsaW5nIGluY29tcGxldGUgc3ViLWJsb2NrIHdpdGggIgotCQkJCQkiemVyb2Vz
LiIpOwotCQkJLyogWmVybyByZW1haW5kZXIgYW5kIHVwZGF0ZSBkZXN0aW5hdGlvbiBwb3NpdGlv
bi4gKi8KLQkJCW1lbXNldChkcF9hZGRyLCAwLCBucl9ieXRlcyk7Ci0JCQkqZGVzdF9vZnMgKz0g
bnJfYnl0ZXM7Ci0JCX0KLQkJLyogV2UgaGF2ZSBmaW5pc2hlZCB0aGUgY3VycmVudCBzdWItYmxv
Y2suICovCi0JCWlmICghKCpkZXN0X29mcyAmPSB+UEFHRV9NQVNLKSkKLQkJCWdvdG8gZmluYWxp
emVfcGFnZTsKLQkJZ290byBkb19uZXh0X3NiOwotCX0KLQotCS8qIENoZWNrIHdlIGFyZSBzdGls
bCBpbiByYW5nZS4gKi8KLQlpZiAoY2IgPiBjYl9zYl9lbmQgfHwgZHBfYWRkciA+IGRwX3NiX2Vu
ZCkKLQkJZ290byByZXR1cm5fb3ZlcmZsb3c7Ci0KLQkvKiBHZXQgdGhlIG5leHQgdGFnIGFuZCBh
ZHZhbmNlIHRvIGZpcnN0IHRva2VuLiAqLwotCXRhZyA9ICpjYisrOwotCi0JLyogUGFyc2UgdGhl
IGVpZ2h0IHRva2VucyBkZXNjcmliZWQgYnkgdGhlIHRhZy4gKi8KLQlmb3IgKHRva2VuID0gMDsg
dG9rZW4gPCA4OyB0b2tlbisrLCB0YWcgPj49IDEpIHsKLQkJdTE2IGxnLCBwdCwgbGVuZ3RoLCBt
YXhfbm9uX292ZXJsYXA7Ci0JCXJlZ2lzdGVyIHUxNiBpOwotCQl1OCAqZHBfYmFja19hZGRyOwot
Ci0JCS8qIENoZWNrIGlmIHdlIGFyZSBkb25lIC8gc3RpbGwgaW4gcmFuZ2UuICovCi0JCWlmIChj
YiA+PSBjYl9zYl9lbmQgfHwgZHBfYWRkciA+IGRwX3NiX2VuZCkKLQkJCWJyZWFrOwotCi0JCS8q
IERldGVybWluZSB0b2tlbiB0eXBlIGFuZCBwYXJzZSBhcHByb3ByaWF0ZWx5LiovCi0JCWlmICgo
dGFnICYgTlRGU19UT0tFTl9NQVNLKSA9PSBOVEZTX1NZTUJPTF9UT0tFTikgewotCQkJLyoKLQkJ
CSAqIFdlIGhhdmUgYSBzeW1ib2wgdG9rZW4sIGNvcHkgdGhlIHN5bWJvbCBhY3Jvc3MsIGFuZAot
CQkJICogYWR2YW5jZSB0aGUgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBwb3NpdGlvbnMuCi0JCQkg
Ki8KLQkJCSpkcF9hZGRyKysgPSAqY2IrKzsKLQkJCSsrKmRlc3Rfb2ZzOwotCi0JCQkvKiBDb250
aW51ZSB3aXRoIHRoZSBuZXh0IHRva2VuLiAqLwotCQkJY29udGludWU7Ci0JCX0KLQotCQkvKgot
CQkgKiBXZSBoYXZlIGEgcGhyYXNlIHRva2VuLiBNYWtlIHN1cmUgaXQgaXMgbm90IHRoZSBmaXJz
dCB0YWcgaW4KLQkJICogdGhlIHNiIGFzIHRoaXMgaXMgaWxsZWdhbCBhbmQgd291bGQgY29uZnVz
ZSB0aGUgY29kZSBiZWxvdy4KLQkJICovCi0JCWlmIChkcF9hZGRyID09IGRwX3NiX3N0YXJ0KQot
CQkJZ290byByZXR1cm5fb3ZlcmZsb3c7Ci0KLQkJLyoKLQkJICogRGV0ZXJtaW5lIHRoZSBudW1i
ZXIgb2YgYnl0ZXMgdG8gZ28gYmFjayAocCkgYW5kIHRoZSBudW1iZXIKLQkJICogb2YgYnl0ZXMg
dG8gY29weSAobCkuIFdlIHVzZSBhbiBvcHRpbWl6ZWQgYWxnb3JpdGhtIGluIHdoaWNoCi0JCSAq
IHdlIGZpcnN0IGNhbGN1bGF0ZSBsb2cyKGN1cnJlbnQgZGVzdGluYXRpb24gcG9zaXRpb24gaW4g
c2IpLAotCQkgKiB3aGljaCBhbGxvd3MgZGV0ZXJtaW5hdGlvbiBvZiBsIGFuZCBwIGluIE8oMSkg
cmF0aGVyIHRoYW4KLQkJICogTyhuKS4gV2UganVzdCBuZWVkIGFuIGFyY2gtb3B0aW1pemVkIGxv
ZzIoKSBmdW5jdGlvbiBub3cuCi0JCSAqLwotCQlsZyA9IDA7Ci0JCWZvciAoaSA9ICpkZXN0X29m
cyAtIGRvX3NiX3N0YXJ0IC0gMTsgaSA+PSAweDEwOyBpID4+PSAxKQotCQkJbGcrKzsKLQotCQkv
KiBHZXQgdGhlIHBocmFzZSB0b2tlbiBpbnRvIGkuICovCi0JCXB0ID0gbGUxNl90b19jcHVwKChs
ZTE2KiljYik7Ci0KLQkJLyoKLQkJICogQ2FsY3VsYXRlIHN0YXJ0aW5nIHBvc2l0aW9uIG9mIHRo
ZSBieXRlIHNlcXVlbmNlIGluCi0JCSAqIHRoZSBkZXN0aW5hdGlvbiB1c2luZyB0aGUgZmFjdCB0
aGF0IHAgPSAocHQgPj4gKDEyIC0gbGcpKSArIDEKLQkJICogYW5kIG1ha2Ugc3VyZSB3ZSBkb24n
dCBnbyB0b28gZmFyIGJhY2suCi0JCSAqLwotCQlkcF9iYWNrX2FkZHIgPSBkcF9hZGRyIC0gKHB0
ID4+ICgxMiAtIGxnKSkgLSAxOwotCQlpZiAoZHBfYmFja19hZGRyIDwgZHBfc2Jfc3RhcnQpCi0J
CQlnb3RvIHJldHVybl9vdmVyZmxvdzsKLQotCQkvKiBOb3cgY2FsY3VsYXRlIHRoZSBsZW5ndGgg
b2YgdGhlIGJ5dGUgc2VxdWVuY2UuICovCi0JCWxlbmd0aCA9IChwdCAmICgweGZmZiA+PiBsZykp
ICsgMzsKLQotCQkvKiBBZHZhbmNlIGRlc3RpbmF0aW9uIHBvc2l0aW9uIGFuZCB2ZXJpZnkgaXQg
aXMgaW4gcmFuZ2UuICovCi0JCSpkZXN0X29mcyArPSBsZW5ndGg7Ci0JCWlmICgqZGVzdF9vZnMg
PiBkb19zYl9lbmQpCi0JCQlnb3RvIHJldHVybl9vdmVyZmxvdzsKLQotCQkvKiBUaGUgbnVtYmVy
IG9mIG5vbi1vdmVybGFwcGluZyBieXRlcy4gKi8KLQkJbWF4X25vbl9vdmVybGFwID0gZHBfYWRk
ciAtIGRwX2JhY2tfYWRkcjsKLQotCQlpZiAobGVuZ3RoIDw9IG1heF9ub25fb3ZlcmxhcCkgewot
CQkJLyogVGhlIGJ5dGUgc2VxdWVuY2UgZG9lc24ndCBvdmVybGFwLCBqdXN0IGNvcHkgaXQuICov
Ci0JCQltZW1jcHkoZHBfYWRkciwgZHBfYmFja19hZGRyLCBsZW5ndGgpOwotCi0JCQkvKiBBZHZh
bmNlIGRlc3RpbmF0aW9uIHBvaW50ZXIuICovCi0JCQlkcF9hZGRyICs9IGxlbmd0aDsKLQkJfSBl
bHNlIHsKLQkJCS8qCi0JCQkgKiBUaGUgYnl0ZSBzZXF1ZW5jZSBkb2VzIG92ZXJsYXAsIGNvcHkg
bm9uLW92ZXJsYXBwaW5nCi0JCQkgKiBwYXJ0IGFuZCB0aGVuIGRvIGEgc2xvdyBieXRlIGJ5IGJ5
dGUgY29weSBmb3IgdGhlCi0JCQkgKiBvdmVybGFwcGluZyBwYXJ0LiBBbHNvLCBhZHZhbmNlIHRo
ZSBkZXN0aW5hdGlvbgotCQkJICogcG9pbnRlci4KLQkJCSAqLwotCQkJbWVtY3B5KGRwX2FkZHIs
IGRwX2JhY2tfYWRkciwgbWF4X25vbl9vdmVybGFwKTsKLQkJCWRwX2FkZHIgKz0gbWF4X25vbl9v
dmVybGFwOwotCQkJZHBfYmFja19hZGRyICs9IG1heF9ub25fb3ZlcmxhcDsKLQkJCWxlbmd0aCAt
PSBtYXhfbm9uX292ZXJsYXA7Ci0JCQl3aGlsZSAobGVuZ3RoLS0pCi0JCQkJKmRwX2FkZHIrKyA9
ICpkcF9iYWNrX2FkZHIrKzsKLQkJfQotCi0JCS8qIEFkdmFuY2Ugc291cmNlIHBvc2l0aW9uIGFu
ZCBjb250aW51ZSB3aXRoIHRoZSBuZXh0IHRva2VuLiAqLwotCQljYiArPSAyOwotCX0KLQotCS8q
IE5vIHRva2VucyBsZWZ0IGluIHRoZSBjdXJyZW50IHRhZy4gQ29udGludWUgd2l0aCB0aGUgbmV4
dCB0YWcuICovCi0JZ290byBkb19uZXh0X3RhZzsKLQotcmV0dXJuX292ZXJmbG93OgotCW50ZnNf
ZXJyb3IoTlVMTCwgIkZhaWxlZC4gUmV0dXJuaW5nIC1FT1ZFUkZMT1cuIik7Ci0JZ290byByZXR1
cm5fZXJyb3I7Ci19Ci0KLS8qKgotICogbnRmc19yZWFkX2NvbXByZXNzZWRfYmxvY2sgLSByZWFk
IGEgY29tcHJlc3NlZCBibG9jayBpbnRvIHRoZSBwYWdlIGNhY2hlCi0gKiBAcGFnZToJbG9ja2Vk
IHBhZ2UgaW4gdGhlIGNvbXByZXNzaW9uIGJsb2NrKHMpIHdlIG5lZWQgdG8gcmVhZAotICoKLSAq
IFdoZW4gd2UgYXJlIGNhbGxlZCB0aGUgcGFnZSBoYXMgYWxyZWFkeSBiZWVuIHZlcmlmaWVkIHRv
IGJlIGxvY2tlZCBhbmQgdGhlCi0gKiBhdHRyaWJ1dGUgaXMga25vd24gdG8gYmUgbm9uLXJlc2lk
ZW50LCBub3QgZW5jcnlwdGVkLCBidXQgY29tcHJlc3NlZC4KLSAqCi0gKiAxLiBEZXRlcm1pbmUg
d2hpY2ggY29tcHJlc3Npb24gYmxvY2socykgQHBhZ2UgaXMgaW4uCi0gKiAyLiBHZXQgaG9sZCBv
ZiBhbGwgcGFnZXMgY29ycmVzcG9uZGluZyB0byB0aGlzL3RoZXNlIGNvbXByZXNzaW9uIGJsb2Nr
KHMpLgotICogMy4gUmVhZCB0aGUgKGZpcnN0KSBjb21wcmVzc2lvbiBibG9jay4KLSAqIDQuIERl
Y29tcHJlc3MgaXQgaW50byB0aGUgY29ycmVzcG9uZGluZyBwYWdlcy4KLSAqIDUuIFRocm93IHRo
ZSBjb21wcmVzc2VkIGRhdGEgYXdheSBhbmQgcHJvY2VlZCB0byAzLiBmb3IgdGhlIG5leHQgY29t
cHJlc3Npb24KLSAqICAgIGJsb2NrIG9yIHJldHVybiBzdWNjZXNzIGlmIG5vIG1vcmUgY29tcHJl
c3Npb24gYmxvY2tzIGxlZnQuCi0gKgotICogV2FybmluZzogV2UgaGF2ZSB0byBiZSBjYXJlZnVs
IHdoYXQgd2UgZG8gYWJvdXQgZXhpc3RpbmcgcGFnZXMuIFRoZXkgbWlnaHQKLSAqIGhhdmUgYmVl
biB3cml0dGVuIHRvIHNvIHRoYXQgd2Ugd291bGQgbG9zZSBkYXRhIGlmIHdlIHdlcmUgdG8ganVz
dCBvdmVyd3JpdGUKLSAqIHRoZW0gd2l0aCB0aGUgb3V0LW9mLWRhdGUgdW5jb21wcmVzc2VkIGRh
dGEuCi0gKgotICogRklYTUU6IEZvciBQQUdFX1NJWkUgPiBjYl9zaXplIHdlIGFyZSBub3QgZG9p
bmcgdGhlIFJpZ2h0IFRoaW5nKFRNKSBhdAotICogdGhlIGVuZCBvZiB0aGUgZmlsZSBJIHRoaW5r
LiBXZSBuZWVkIHRvIGRldGVjdCB0aGlzIGNhc2UgYW5kIHplcm8gdGhlIG91dAotICogb2YgYm91
bmRzIHJlbWFpbmRlciBvZiB0aGUgcGFnZSBpbiBxdWVzdGlvbiBhbmQgbWFyayBpdCBhcyBoYW5k
bGVkLiBBdCB0aGUKLSAqIG1vbWVudCB3ZSB3b3VsZCBqdXN0IHJldHVybiAtRUlPIG9uIHN1Y2gg
YSBwYWdlLiBUaGlzIGJ1ZyB3aWxsIG9ubHkgYmVjb21lCi0gKiBhcHBhcmVudCBpZiBwYWdlcyBh
cmUgYWJvdmUgOGtpQiBhbmQgdGhlIE5URlMgdm9sdW1lIG9ubHkgdXNlcyA1MTIgYnl0ZQotICog
Y2x1c3RlcnMgc28gaXMgcHJvYmFibHkgbm90IGdvaW5nIHRvIGJlIHNlZW4gYnkgYW55b25lLiBT
dGlsbCB0aGlzIHNob3VsZAotICogYmUgZml4ZWQuIChBSUEpCi0gKgotICogRklYTUU6IEFnYWlu
IGZvciBQQUdFX1NJWkUgPiBjYl9zaXplIHdlIGFyZSBzY3Jld2luZyB1cCBib3RoIGluCi0gKiBo
YW5kbGluZyBzcGFyc2UgYW5kIGNvbXByZXNzZWQgY2JzLiAoQUlBKQotICoKLSAqIEZJWE1FOiBB
dCB0aGUgbW9tZW50IHdlIGRvbid0IGRvIGFueSB6ZXJvaW5nIG91dCBpbiB0aGUgY2FzZSB0aGF0
Ci0gKiBpbml0aWFsaXplZF9zaXplIGlzIGxlc3MgdGhhbiBkYXRhX3NpemUuIFRoaXMgc2hvdWxk
IGJlIHNhZmUgYmVjYXVzZSBvZiB0aGUKLSAqIG5hdHVyZSBvZiB0aGUgY29tcHJlc3Npb24gYWxn
b3JpdGhtIHVzZWQuIEp1c3QgaW4gY2FzZSB3ZSBjaGVjayBhbmQgb3V0cHV0Ci0gKiBhbiBlcnJv
ciBtZXNzYWdlIGluIHJlYWQgaW5vZGUgaWYgdGhlIHR3byBzaXplcyBhcmUgbm90IGVxdWFsIGZv
ciBhCi0gKiBjb21wcmVzc2VkIGZpbGUuIChBSUEpCi0gKi8KLWludCBudGZzX3JlYWRfY29tcHJl
c3NlZF9ibG9jayhzdHJ1Y3QgcGFnZSAqcGFnZSkKLXsKLQlsb2ZmX3QgaV9zaXplOwotCXM2NCBp
bml0aWFsaXplZF9zaXplOwotCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nID0gcGFnZS0+
bWFwcGluZzsKLQludGZzX2lub2RlICpuaSA9IE5URlNfSShtYXBwaW5nLT5ob3N0KTsKLQludGZz
X3ZvbHVtZSAqdm9sID0gbmktPnZvbDsKLQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gdm9sLT5z
YjsKLQlydW5saXN0X2VsZW1lbnQgKnJsOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3MsIGJsb2NrX3Np
emUgPSBzYi0+c19ibG9ja3NpemU7Ci0JdW5zaWduZWQgY2hhciBibG9ja19zaXplX2JpdHMgPSBz
Yi0+c19ibG9ja3NpemVfYml0czsKLQl1OCAqY2IsICpjYl9wb3MsICpjYl9lbmQ7Ci0Jc3RydWN0
IGJ1ZmZlcl9oZWFkICoqYmhzOwotCXVuc2lnbmVkIGxvbmcgb2Zmc2V0LCBpbmRleCA9IHBhZ2Ut
PmluZGV4OwotCXUzMiBjYl9zaXplID0gbmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tfc2l6ZTsK
LQl1NjQgY2Jfc2l6ZV9tYXNrID0gY2Jfc2l6ZSAtIDFVTDsKLQlWQ04gdmNuOwotCUxDTiBsY247
Ci0JLyogVGhlIGZpcnN0IHdhbnRlZCB2Y24gKG1pbmltdW0gYWxpZ25tZW50IGlzIFBBR0VfU0la
RSkuICovCi0JVkNOIHN0YXJ0X3ZjbiA9ICgoKHM2NClpbmRleCA8PCBQQUdFX1NISUZUKSAmIH5j
Yl9zaXplX21hc2spID4+Ci0JCQl2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzOwotCS8qCi0JICogVGhl
IGZpcnN0IHZjbiBhZnRlciB0aGUgbGFzdCB3YW50ZWQgdmNuIChtaW5pbXVtIGFsaWdubWVudCBp
cyBhZ2FpbgotCSAqIFBBR0VfU0laRS4KLQkgKi8KLQlWQ04gZW5kX3ZjbiA9ICgoKChzNjQpKGlu
ZGV4ICsgMVVMKSA8PCBQQUdFX1NISUZUKSArIGNiX3NpemUgLSAxKQotCQkJJiB+Y2Jfc2l6ZV9t
YXNrKSA+PiB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzOwotCS8qIE51bWJlciBvZiBjb21wcmVzc2lv
biBibG9ja3MgKGNicykgaW4gdGhlIHdhbnRlZCB2Y24gcmFuZ2UuICovCi0JdW5zaWduZWQgaW50
IG5yX2NicyA9IChlbmRfdmNuIC0gc3RhcnRfdmNuKSA8PCB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRz
Ci0JCQk+PiBuaS0+aXR5cGUuY29tcHJlc3NlZC5ibG9ja19zaXplX2JpdHM7Ci0JLyoKLQkgKiBO
dW1iZXIgb2YgcGFnZXMgcmVxdWlyZWQgdG8gc3RvcmUgdGhlIHVuY29tcHJlc3NlZCBkYXRhIGZy
b20gYWxsCi0JICogY29tcHJlc3Npb24gYmxvY2tzIChjYnMpIG92ZXJsYXBwaW5nIEBwYWdlLiBE
dWUgdG8gYWxpZ25tZW50Ci0JICogZ3VhcmFudGVlcyBvZiBzdGFydF92Y24gYW5kIGVuZF92Y24s
IG5vIG5lZWQgdG8gcm91bmQgdXAgaGVyZS4KLQkgKi8KLQl1bnNpZ25lZCBpbnQgbnJfcGFnZXMg
PSAoZW5kX3ZjbiAtIHN0YXJ0X3ZjbikgPDwKLQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMgPj4g
UEFHRV9TSElGVDsKLQl1bnNpZ25lZCBpbnQgeHBhZ2UsIG1heF9wYWdlLCBjdXJfcGFnZSwgY3Vy
X29mcywgaTsKLQl1bnNpZ25lZCBpbnQgY2JfY2x1c3RlcnMsIGNiX21heF9vZnM7Ci0JaW50IGJs
b2NrLCBtYXhfYmxvY2ssIGNiX21heF9wYWdlLCBiaHNfc2l6ZSwgbnJfYmhzLCBlcnIgPSAwOwot
CXN0cnVjdCBwYWdlICoqcGFnZXM7Ci0JaW50ICpjb21wbGV0ZWRfcGFnZXM7Ci0JdW5zaWduZWQg
Y2hhciB4cGFnZV9kb25lID0gMDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLCBwYWdlLT5pbmRl
eCA9IDB4JWx4LCBjYl9zaXplID0gMHgleCwgbnJfcGFnZXMgPSAiCi0JCQkiJWkuIiwgaW5kZXgs
IGNiX3NpemUsIG5yX3BhZ2VzKTsKLQkvKgotCSAqIEJhZCB0aGluZ3MgaGFwcGVuIGlmIHdlIGdl
dCBoZXJlIGZvciBhbnl0aGluZyB0aGF0IGlzIG5vdCBhbgotCSAqIHVubmFtZWQgJERBVEEgYXR0
cmlidXRlLgotCSAqLwotCUJVR19PTihuaS0+dHlwZSAhPSBBVF9EQVRBKTsKLQlCVUdfT04obmkt
Pm5hbWVfbGVuKTsKLQotCXBhZ2VzID0ga21hbGxvY19hcnJheShucl9wYWdlcywgc2l6ZW9mKHN0
cnVjdCBwYWdlICopLCBHRlBfTk9GUyk7Ci0JY29tcGxldGVkX3BhZ2VzID0ga21hbGxvY19hcnJh
eShucl9wYWdlcyArIDEsIHNpemVvZihpbnQpLCBHRlBfTk9GUyk7Ci0KLQkvKiBBbGxvY2F0ZSBt
ZW1vcnkgdG8gc3RvcmUgdGhlIGJ1ZmZlciBoZWFkcyB3ZSBuZWVkLiAqLwotCWJoc19zaXplID0g
Y2Jfc2l6ZSAvIGJsb2NrX3NpemUgKiBzaXplb2Yoc3RydWN0IGJ1ZmZlcl9oZWFkICopOwotCWJo
cyA9IGttYWxsb2MoYmhzX3NpemUsIEdGUF9OT0ZTKTsKLQotCWlmICh1bmxpa2VseSghcGFnZXMg
fHwgIWJocyB8fCAhY29tcGxldGVkX3BhZ2VzKSkgewotCQlrZnJlZShiaHMpOwotCQlrZnJlZShw
YWdlcyk7Ci0JCWtmcmVlKGNvbXBsZXRlZF9wYWdlcyk7Ci0JCXVubG9ja19wYWdlKHBhZ2UpOwot
CQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYWxsb2NhdGUgaW50ZXJuYWwgYnVmZmVy
cy4iKTsKLQkJcmV0dXJuIC1FTk9NRU07Ci0JfQotCi0JLyoKLQkgKiBXZSBoYXZlIGFscmVhZHkg
YmVlbiBnaXZlbiBvbmUgcGFnZSwgdGhpcyBpcyB0aGUgb25lIHdlIG11c3QgZG8uCi0JICogT25j
ZSBhZ2FpbiwgdGhlIGFsaWdubWVudCBndWFyYW50ZWVzIGtlZXAgaXQgc2ltcGxlLgotCSAqLwot
CW9mZnNldCA9IHN0YXJ0X3ZjbiA8PCB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID4+IFBBR0VfU0hJ
RlQ7Ci0JeHBhZ2UgPSBpbmRleCAtIG9mZnNldDsKLQlwYWdlc1t4cGFnZV0gPSBwYWdlOwotCS8q
Ci0JICogVGhlIHJlbWFpbmluZyBwYWdlcyBuZWVkIHRvIGJlIGFsbG9jYXRlZCBhbmQgaW5zZXJ0
ZWQgaW50byB0aGUgcGFnZQotCSAqIGNhY2hlLCBhbGlnbm1lbnQgZ3VhcmFudGVlcyBrZWVwIGFs
bCB0aGUgYmVsb3cgbXVjaCBzaW1wbGVyLiAoLTgKLQkgKi8KLQlyZWFkX2xvY2tfaXJxc2F2ZSgm
bmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKFZGU19JKG5pKSk7
Ci0JaW5pdGlhbGl6ZWRfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9zaXplOwotCXJlYWRfdW5sb2Nr
X2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQltYXhfcGFnZSA9ICgoaV9zaXpl
ICsgUEFHRV9TSVpFIC0gMSkgPj4gUEFHRV9TSElGVCkgLQotCQkJb2Zmc2V0OwotCS8qIElzIHRo
ZSBwYWdlIGZ1bGx5IG91dHNpZGUgaV9zaXplPyAodHJ1bmNhdGUgaW4gcHJvZ3Jlc3MpICovCi0J
aWYgKHhwYWdlID49IG1heF9wYWdlKSB7Ci0JCWtmcmVlKGJocyk7Ci0JCWtmcmVlKHBhZ2VzKTsK
LQkJa2ZyZWUoY29tcGxldGVkX3BhZ2VzKTsKLQkJemVyb191c2VyKHBhZ2UsIDAsIFBBR0VfU0la
RSk7Ci0JCW50ZnNfZGVidWcoIkNvbXByZXNzZWQgcmVhZCBvdXRzaWRlIGlfc2l6ZSAtIHRydW5j
YXRlZD8iKTsKLQkJU2V0UGFnZVVwdG9kYXRlKHBhZ2UpOwotCQl1bmxvY2tfcGFnZShwYWdlKTsK
LQkJcmV0dXJuIDA7Ci0JfQotCWlmIChucl9wYWdlcyA8IG1heF9wYWdlKQotCQltYXhfcGFnZSA9
IG5yX3BhZ2VzOwotCWZvciAoaSA9IDA7IGkgPCBtYXhfcGFnZTsgaSsrLCBvZmZzZXQrKykgewot
CQlpZiAoaSAhPSB4cGFnZSkKLQkJCXBhZ2VzW2ldID0gZ3JhYl9jYWNoZV9wYWdlX25vd2FpdCht
YXBwaW5nLCBvZmZzZXQpOwotCQlwYWdlID0gcGFnZXNbaV07Ci0JCWlmIChwYWdlKSB7Ci0JCQkv
KgotCQkJICogV2Ugb25seSAocmUpcmVhZCB0aGUgcGFnZSBpZiBpdCBpc24ndCBhbHJlYWR5IHJl
YWQKLQkJCSAqIGluIGFuZC9vciBkaXJ0eSBvciB3ZSB3b3VsZCBiZSBsb3NpbmcgZGF0YSBvciBh
dAotCQkJICogbGVhc3Qgd2FzdGluZyBvdXIgdGltZS4KLQkJCSAqLwotCQkJaWYgKCFQYWdlRGly
dHkocGFnZSkgJiYgKCFQYWdlVXB0b2RhdGUocGFnZSkgfHwKLQkJCQkJUGFnZUVycm9yKHBhZ2Up
KSkgewotCQkJCUNsZWFyUGFnZUVycm9yKHBhZ2UpOwotCQkJCWttYXAocGFnZSk7Ci0JCQkJY29u
dGludWU7Ci0JCQl9Ci0JCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJCXB1dF9wYWdlKHBhZ2UpOwot
CQkJcGFnZXNbaV0gPSBOVUxMOwotCQl9Ci0JfQotCi0JLyoKLQkgKiBXZSBoYXZlIHRoZSBydW5s
aXN0LCBhbmQgYWxsIHRoZSBkZXN0aW5hdGlvbiBwYWdlcyB3ZSBuZWVkIHRvIGZpbGwuCi0JICog
Tm93IHJlYWQgdGhlIGZpcnN0IGNvbXByZXNzaW9uIGJsb2NrLgotCSAqLwotCWN1cl9wYWdlID0g
MDsKLQljdXJfb2ZzID0gMDsKLQljYl9jbHVzdGVycyA9IG5pLT5pdHlwZS5jb21wcmVzc2VkLmJs
b2NrX2NsdXN0ZXJzOwotZG9fbmV4dF9jYjoKLQlucl9jYnMtLTsKLQlucl9iaHMgPSAwOwotCi0J
LyogUmVhZCBhbGwgY2IgYnVmZmVyIGhlYWRzIG9uZSBjbHVzdGVyIGF0IGEgdGltZS4gKi8KLQly
bCA9IE5VTEw7Ci0JZm9yICh2Y24gPSBzdGFydF92Y24sIHN0YXJ0X3ZjbiArPSBjYl9jbHVzdGVy
czsgdmNuIDwgc3RhcnRfdmNuOwotCQkJdmNuKyspIHsKLQkJYm9vbCBpc19yZXRyeSA9IGZhbHNl
OwotCi0JCWlmICghcmwpIHsKLWxvY2tfcmV0cnlfcmVtYXA6Ci0JCQlkb3duX3JlYWQoJm5pLT5y
dW5saXN0LmxvY2spOwotCQkJcmwgPSBuaS0+cnVubGlzdC5ybDsKLQkJfQotCQlpZiAobGlrZWx5
KHJsICE9IE5VTEwpKSB7Ci0JCQkvKiBTZWVrIHRvIGVsZW1lbnQgY29udGFpbmluZyB0YXJnZXQg
dmNuLiAqLwotCQkJd2hpbGUgKHJsLT5sZW5ndGggJiYgcmxbMV0udmNuIDw9IHZjbikKLQkJCQly
bCsrOwotCQkJbGNuID0gbnRmc19ybF92Y25fdG9fbGNuKHJsLCB2Y24pOwotCQl9IGVsc2UKLQkJ
CWxjbiA9IExDTl9STF9OT1RfTUFQUEVEOwotCQludGZzX2RlYnVnKCJSZWFkaW5nIHZjbiA9IDB4
JWxseCwgbGNuID0gMHglbGx4LiIsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2Y24sCi0JCQkJ
KHVuc2lnbmVkIGxvbmcgbG9uZylsY24pOwotCQlpZiAobGNuIDwgMCkgewotCQkJLyoKLQkJCSAq
IFdoZW4gd2UgcmVhY2ggdGhlIGZpcnN0IHNwYXJzZSBjbHVzdGVyIHdlIGhhdmUKLQkJCSAqIGZp
bmlzaGVkIHdpdGggdGhlIGNiLgotCQkJICovCi0JCQlpZiAobGNuID09IExDTl9IT0xFKQotCQkJ
CWJyZWFrOwotCQkJaWYgKGlzX3JldHJ5IHx8IGxjbiAhPSBMQ05fUkxfTk9UX01BUFBFRCkKLQkJ
CQlnb3RvIHJsX2VycjsKLQkJCWlzX3JldHJ5ID0gdHJ1ZTsKLQkJCS8qCi0JCQkgKiBBdHRlbXB0
IHRvIG1hcCBydW5saXN0LCBkcm9wcGluZyBsb2NrIGZvciB0aGUKLQkJCSAqIGR1cmF0aW9uLgot
CQkJICovCi0JCQl1cF9yZWFkKCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJCWlmICghbnRmc19tYXBf
cnVubGlzdChuaSwgdmNuKSkKLQkJCQlnb3RvIGxvY2tfcmV0cnlfcmVtYXA7Ci0JCQlnb3RvIG1h
cF9ybF9lcnI7Ci0JCX0KLQkJYmxvY2sgPSBsY24gPDwgdm9sLT5jbHVzdGVyX3NpemVfYml0cyA+
PiBibG9ja19zaXplX2JpdHM7Ci0JCS8qIFJlYWQgdGhlIGxjbiBmcm9tIGRldmljZSBpbiBjaHVu
a3Mgb2YgYmxvY2tfc2l6ZSBieXRlcy4gKi8KLQkJbWF4X2Jsb2NrID0gYmxvY2sgKyAodm9sLT5j
bHVzdGVyX3NpemUgPj4gYmxvY2tfc2l6ZV9iaXRzKTsKLQkJZG8gewotCQkJbnRmc19kZWJ1Zygi
YmxvY2sgPSAweCV4LiIsIGJsb2NrKTsKLQkJCWlmICh1bmxpa2VseSghKGJoc1tucl9iaHNdID0g
c2JfZ2V0YmxrKHNiLCBibG9jaykpKSkKLQkJCQlnb3RvIGdldGJsa19lcnI7Ci0JCQlucl9iaHMr
KzsKLQkJfSB3aGlsZSAoKytibG9jayA8IG1heF9ibG9jayk7Ci0JfQotCi0JLyogUmVsZWFzZSB0
aGUgbG9jayBpZiB3ZSB0b29rIGl0LiAqLwotCWlmIChybCkKLQkJdXBfcmVhZCgmbmktPnJ1bmxp
c3QubG9jayk7Ci0KLQkvKiBTZXR1cCBhbmQgaW5pdGlhdGUgaW8gb24gYWxsIGJ1ZmZlciBoZWFk
cy4gKi8KLQlmb3IgKGkgPSAwOyBpIDwgbnJfYmhzOyBpKyspIHsKLQkJc3RydWN0IGJ1ZmZlcl9o
ZWFkICp0YmggPSBiaHNbaV07Ci0KLQkJaWYgKCF0cnlsb2NrX2J1ZmZlcih0YmgpKQotCQkJY29u
dGludWU7Ci0JCWlmICh1bmxpa2VseShidWZmZXJfdXB0b2RhdGUodGJoKSkpIHsKLQkJCXVubG9j
a19idWZmZXIodGJoKTsKLQkJCWNvbnRpbnVlOwotCQl9Ci0JCWdldF9iaCh0YmgpOwotCQl0Ymgt
PmJfZW5kX2lvID0gZW5kX2J1ZmZlcl9yZWFkX3N5bmM7Ci0JCXN1Ym1pdF9iaChSRVFfT1BfUkVB
RCwgdGJoKTsKLQl9Ci0KLQkvKiBXYWl0IGZvciBpbyBjb21wbGV0aW9uIG9uIGFsbCBidWZmZXIg
aGVhZHMuICovCi0JZm9yIChpID0gMDsgaSA8IG5yX2JoczsgaSsrKSB7Ci0JCXN0cnVjdCBidWZm
ZXJfaGVhZCAqdGJoID0gYmhzW2ldOwotCi0JCWlmIChidWZmZXJfdXB0b2RhdGUodGJoKSkKLQkJ
CWNvbnRpbnVlOwotCQl3YWl0X29uX2J1ZmZlcih0YmgpOwotCQkvKgotCQkgKiBXZSBuZWVkIGFu
IG9wdGltaXphdGlvbiBiYXJyaWVyIGhlcmUsIG90aGVyd2lzZSB3ZSBzdGFydAotCQkgKiBoaXR0
aW5nIHRoZSBiZWxvdyBmaXh1cCBjb2RlIHdoZW4gYWNjZXNzaW5nIGEgbG9vcGJhY2sKLQkJICog
bW91bnRlZCBudGZzIHBhcnRpdGlvbi4gVGhpcyBpbmRpY2F0ZXMgZWl0aGVyIHRoZXJlIGlzIGEK
LQkJICogcmFjZSBjb25kaXRpb24gaW4gdGhlIGxvb3AgZHJpdmVyIG9yLCBtb3JlIGxpa2VseSwg
Z2NjCi0JCSAqIG92ZXJvcHRpbWlzZXMgdGhlIGNvZGUgd2l0aG91dCB0aGUgYmFycmllciBhbmQg
aXQgZG9lc24ndAotCQkgKiBkbyB0aGUgUmlnaHQgVGhpbmcoVE0pLgotCQkgKi8KLQkJYmFycmll
cigpOwotCQlpZiAodW5saWtlbHkoIWJ1ZmZlcl91cHRvZGF0ZSh0YmgpKSkgewotCQkJbnRmc193
YXJuaW5nKHZvbC0+c2IsICJCdWZmZXIgaXMgdW5sb2NrZWQgYnV0IG5vdCAiCi0JCQkJCSJ1cHRv
ZGF0ZSEgVW5wbHVnZ2luZyB0aGUgZGlzayBxdWV1ZSAiCi0JCQkJCSJhbmQgcmVzY2hlZHVsaW5n
LiIpOwotCQkJZ2V0X2JoKHRiaCk7Ci0JCQlpb19zY2hlZHVsZSgpOwotCQkJcHV0X2JoKHRiaCk7
Ci0JCQlpZiAodW5saWtlbHkoIWJ1ZmZlcl91cHRvZGF0ZSh0YmgpKSkKLQkJCQlnb3RvIHJlYWRf
ZXJyOwotCQkJbnRmc193YXJuaW5nKHZvbC0+c2IsICJCdWZmZXIgaXMgbm93IHVwdG9kYXRlLiBH
b29kLiIpOwotCQl9Ci0JfQotCi0JLyoKLQkgKiBHZXQgdGhlIGNvbXByZXNzaW9uIGJ1ZmZlci4g
V2UgbXVzdCBub3Qgc2xlZXAgYW55IG1vcmUKLQkgKiB1bnRpbCB3ZSBhcmUgZmluaXNoZWQgd2l0
aCBpdC4KLQkgKi8KLQlzcGluX2xvY2soJm50ZnNfY2JfbG9jayk7Ci0JY2IgPSBudGZzX2NvbXBy
ZXNzaW9uX2J1ZmZlcjsKLQotCUJVR19PTighY2IpOwotCi0JY2JfcG9zID0gY2I7Ci0JY2JfZW5k
ID0gY2IgKyBjYl9zaXplOwotCi0JLyogQ29weSB0aGUgYnVmZmVyIGhlYWRzIGludG8gdGhlIGNv
bnRpZ3VvdXMgYnVmZmVyLiAqLwotCWZvciAoaSA9IDA7IGkgPCBucl9iaHM7IGkrKykgewotCQlt
ZW1jcHkoY2JfcG9zLCBiaHNbaV0tPmJfZGF0YSwgYmxvY2tfc2l6ZSk7Ci0JCWNiX3BvcyArPSBi
bG9ja19zaXplOwotCX0KLQotCS8qIEp1c3QgYSBwcmVjYXV0aW9uLiAqLwotCWlmIChjYl9wb3Mg
KyAyIDw9IGNiICsgY2Jfc2l6ZSkKLQkJKih1MTYqKWNiX3BvcyA9IDA7Ci0KLQkvKiBSZXNldCBj
Yl9wb3MgYmFjayB0byB0aGUgYmVnaW5uaW5nLiAqLwotCWNiX3BvcyA9IGNiOwotCi0JLyogV2Ug
bm93IGhhdmUgYm90aCBzb3VyY2UgKGlmIHByZXNlbnQpIGFuZCBkZXN0aW5hdGlvbi4gKi8KLQlu
dGZzX2RlYnVnKCJTdWNjZXNzZnVsbHkgcmVhZCB0aGUgY29tcHJlc3Npb24gYmxvY2suIik7Ci0K
LQkvKiBUaGUgbGFzdCBwYWdlIGFuZCBtYXhpbXVtIG9mZnNldCB3aXRoaW4gaXQgZm9yIHRoZSBj
dXJyZW50IGNiLiAqLwotCWNiX21heF9wYWdlID0gKGN1cl9wYWdlIDw8IFBBR0VfU0hJRlQpICsg
Y3VyX29mcyArIGNiX3NpemU7Ci0JY2JfbWF4X29mcyA9IGNiX21heF9wYWdlICYgflBBR0VfTUFT
SzsKLQljYl9tYXhfcGFnZSA+Pj0gUEFHRV9TSElGVDsKLQotCS8qIENhdGNoIGVuZCBvZiBmaWxl
IGluc2lkZSBhIGNvbXByZXNzaW9uIGJsb2NrLiAqLwotCWlmIChjYl9tYXhfcGFnZSA+IG1heF9w
YWdlKQotCQljYl9tYXhfcGFnZSA9IG1heF9wYWdlOwotCi0JaWYgKHZjbiA9PSBzdGFydF92Y24g
LSBjYl9jbHVzdGVycykgewotCQkvKiBTcGFyc2UgY2IsIHplcm8gb3V0IHBhZ2UgcmFuZ2Ugb3Zl
cmxhcHBpbmcgdGhlIGNiLiAqLwotCQludGZzX2RlYnVnKCJGb3VuZCBzcGFyc2UgY29tcHJlc3Np
b24gYmxvY2suIik7Ci0JCS8qIFdlIGNhbiBzbGVlcCBmcm9tIG5vdyBvbiwgc28gd2UgZHJvcCBs
b2NrLiAqLwotCQlzcGluX3VubG9jaygmbnRmc19jYl9sb2NrKTsKLQkJaWYgKGNiX21heF9vZnMp
Ci0JCQljYl9tYXhfcGFnZS0tOwotCQlmb3IgKDsgY3VyX3BhZ2UgPCBjYl9tYXhfcGFnZTsgY3Vy
X3BhZ2UrKykgewotCQkJcGFnZSA9IHBhZ2VzW2N1cl9wYWdlXTsKLQkJCWlmIChwYWdlKSB7Ci0J
CQkJaWYgKGxpa2VseSghY3VyX29mcykpCi0JCQkJCWNsZWFyX3BhZ2UocGFnZV9hZGRyZXNzKHBh
Z2UpKTsKLQkJCQllbHNlCi0JCQkJCW1lbXNldChwYWdlX2FkZHJlc3MocGFnZSkgKyBjdXJfb2Zz
LCAwLAotCQkJCQkJCVBBR0VfU0laRSAtCi0JCQkJCQkJY3VyX29mcyk7Ci0JCQkJZmx1c2hfZGNh
Y2hlX3BhZ2UocGFnZSk7Ci0JCQkJa3VubWFwKHBhZ2UpOwotCQkJCVNldFBhZ2VVcHRvZGF0ZShw
YWdlKTsKLQkJCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJCQlpZiAoY3VyX3BhZ2UgPT0geHBhZ2Up
Ci0JCQkJCXhwYWdlX2RvbmUgPSAxOwotCQkJCWVsc2UKLQkJCQkJcHV0X3BhZ2UocGFnZSk7Ci0J
CQkJcGFnZXNbY3VyX3BhZ2VdID0gTlVMTDsKLQkJCX0KLQkJCWNiX3BvcyArPSBQQUdFX1NJWkUg
LSBjdXJfb2ZzOwotCQkJY3VyX29mcyA9IDA7Ci0JCQlpZiAoY2JfcG9zID49IGNiX2VuZCkKLQkJ
CQlicmVhazsKLQkJfQotCQkvKiBJZiB3ZSBoYXZlIGEgcGFydGlhbCBmaW5hbCBwYWdlLCBkZWFs
IHdpdGggaXQgbm93LiAqLwotCQlpZiAoY2JfbWF4X29mcyAmJiBjYl9wb3MgPCBjYl9lbmQpIHsK
LQkJCXBhZ2UgPSBwYWdlc1tjdXJfcGFnZV07Ci0JCQlpZiAocGFnZSkKLQkJCQltZW1zZXQocGFn
ZV9hZGRyZXNzKHBhZ2UpICsgY3VyX29mcywgMCwKLQkJCQkJCWNiX21heF9vZnMgLSBjdXJfb2Zz
KTsKLQkJCS8qCi0JCQkgKiBObyBuZWVkIHRvIHVwZGF0ZSBjYl9wb3MgYXQgdGhpcyBzdGFnZToK
LQkJCSAqCWNiX3BvcyArPSBjYl9tYXhfb2ZzIC0gY3VyX29mczsKLQkJCSAqLwotCQkJY3VyX29m
cyA9IGNiX21heF9vZnM7Ci0JCX0KLQl9IGVsc2UgaWYgKHZjbiA9PSBzdGFydF92Y24pIHsKLQkJ
LyogV2UgY2FuJ3Qgc2xlZXAgc28gd2UgbmVlZCB0d28gc3RhZ2VzLiAqLwotCQl1bnNpZ25lZCBp
bnQgY3VyMl9wYWdlID0gY3VyX3BhZ2U7Ci0JCXVuc2lnbmVkIGludCBjdXJfb2ZzMiA9IGN1cl9v
ZnM7Ci0JCXU4ICpjYl9wb3MyID0gY2JfcG9zOwotCi0JCW50ZnNfZGVidWcoIkZvdW5kIHVuY29t
cHJlc3NlZCBjb21wcmVzc2lvbiBibG9jay4iKTsKLQkJLyogVW5jb21wcmVzc2VkIGNiLCBjb3B5
IGl0IHRvIHRoZSBkZXN0aW5hdGlvbiBwYWdlcy4gKi8KLQkJLyoKLQkJICogVE9ETzogQXMgYSBi
aWcgb3B0aW1pemF0aW9uLCB3ZSBjb3VsZCBkZXRlY3QgdGhpcyBjYXNlCi0JCSAqIGJlZm9yZSB3
ZSByZWFkIGFsbCB0aGUgcGFnZXMgYW5kIHVzZSBibG9ja19yZWFkX2Z1bGxfZm9saW8oKQotCQkg
KiBvbiBhbGwgZnVsbCBwYWdlcyBpbnN0ZWFkICh3ZSBzdGlsbCBoYXZlIHRvIHRyZWF0IHBhcnRp
YWwKLQkJICogcGFnZXMgZXNwZWNpYWxseSBidXQgYXQgbGVhc3Qgd2UgYXJlIGdldHRpbmcgcmlk
IG9mIHRoZQotCQkgKiBzeW5jaHJvbm91cyBpbyBmb3IgdGhlIG1ham9yaXR5IG9mIHBhZ2VzLgot
CQkgKiBPciBpZiB3ZSBjaG9vc2Ugbm90IHRvIGRvIHRoZSByZWFkLWFoZWFkLy1iZWhpbmQgc3R1
ZmYsIHdlCi0JCSAqIGNvdWxkIGp1c3QgcmV0dXJuIGJsb2NrX3JlYWRfZnVsbF9mb2xpbyhwYWdl
c1t4cGFnZV0pIGFzIGxvbmcKLQkJICogYXMgUEFHRV9TSVpFIDw9IGNiX3NpemUuCi0JCSAqLwot
CQlpZiAoY2JfbWF4X29mcykKLQkJCWNiX21heF9wYWdlLS07Ci0JCS8qIEZpcnN0IHN0YWdlOiBj
b3B5IGRhdGEgaW50byBkZXN0aW5hdGlvbiBwYWdlcy4gKi8KLQkJZm9yICg7IGN1cl9wYWdlIDwg
Y2JfbWF4X3BhZ2U7IGN1cl9wYWdlKyspIHsKLQkJCXBhZ2UgPSBwYWdlc1tjdXJfcGFnZV07Ci0J
CQlpZiAocGFnZSkKLQkJCQltZW1jcHkocGFnZV9hZGRyZXNzKHBhZ2UpICsgY3VyX29mcywgY2Jf
cG9zLAotCQkJCQkJUEFHRV9TSVpFIC0gY3VyX29mcyk7Ci0JCQljYl9wb3MgKz0gUEFHRV9TSVpF
IC0gY3VyX29mczsKLQkJCWN1cl9vZnMgPSAwOwotCQkJaWYgKGNiX3BvcyA+PSBjYl9lbmQpCi0J
CQkJYnJlYWs7Ci0JCX0KLQkJLyogSWYgd2UgaGF2ZSBhIHBhcnRpYWwgZmluYWwgcGFnZSwgZGVh
bCB3aXRoIGl0IG5vdy4gKi8KLQkJaWYgKGNiX21heF9vZnMgJiYgY2JfcG9zIDwgY2JfZW5kKSB7
Ci0JCQlwYWdlID0gcGFnZXNbY3VyX3BhZ2VdOwotCQkJaWYgKHBhZ2UpCi0JCQkJbWVtY3B5KHBh
Z2VfYWRkcmVzcyhwYWdlKSArIGN1cl9vZnMsIGNiX3BvcywKLQkJCQkJCWNiX21heF9vZnMgLSBj
dXJfb2ZzKTsKLQkJCWNiX3BvcyArPSBjYl9tYXhfb2ZzIC0gY3VyX29mczsKLQkJCWN1cl9vZnMg
PSBjYl9tYXhfb2ZzOwotCQl9Ci0JCS8qIFdlIGNhbiBzbGVlcCBmcm9tIG5vdyBvbiwgc28gZHJv
cCBsb2NrLiAqLwotCQlzcGluX3VubG9jaygmbnRmc19jYl9sb2NrKTsKLQkJLyogU2Vjb25kIHN0
YWdlOiBmaW5hbGl6ZSBwYWdlcy4gKi8KLQkJZm9yICg7IGN1cjJfcGFnZSA8IGNiX21heF9wYWdl
OyBjdXIyX3BhZ2UrKykgewotCQkJcGFnZSA9IHBhZ2VzW2N1cjJfcGFnZV07Ci0JCQlpZiAocGFn
ZSkgewotCQkJCS8qCi0JCQkJICogSWYgd2UgYXJlIG91dHNpZGUgdGhlIGluaXRpYWxpemVkIHNp
emUsIHplcm8KLQkJCQkgKiB0aGUgb3V0IG9mIGJvdW5kcyBwYWdlIHJhbmdlLgotCQkJCSAqLwot
CQkJCWhhbmRsZV9ib3VuZHNfY29tcHJlc3NlZF9wYWdlKHBhZ2UsIGlfc2l6ZSwKLQkJCQkJCWlu
aXRpYWxpemVkX3NpemUpOwotCQkJCWZsdXNoX2RjYWNoZV9wYWdlKHBhZ2UpOwotCQkJCWt1bm1h
cChwYWdlKTsKLQkJCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7Ci0JCQkJdW5sb2NrX3BhZ2UocGFn
ZSk7Ci0JCQkJaWYgKGN1cjJfcGFnZSA9PSB4cGFnZSkKLQkJCQkJeHBhZ2VfZG9uZSA9IDE7Ci0J
CQkJZWxzZQotCQkJCQlwdXRfcGFnZShwYWdlKTsKLQkJCQlwYWdlc1tjdXIyX3BhZ2VdID0gTlVM
TDsKLQkJCX0KLQkJCWNiX3BvczIgKz0gUEFHRV9TSVpFIC0gY3VyX29mczI7Ci0JCQljdXJfb2Zz
MiA9IDA7Ci0JCQlpZiAoY2JfcG9zMiA+PSBjYl9lbmQpCi0JCQkJYnJlYWs7Ci0JCX0KLQl9IGVs
c2UgewotCQkvKiBDb21wcmVzc2VkIGNiLCBkZWNvbXByZXNzIGl0IGludG8gdGhlIGRlc3RpbmF0
aW9uIHBhZ2UocykuICovCi0JCXVuc2lnbmVkIGludCBwcmV2X2N1cl9wYWdlID0gY3VyX3BhZ2U7
Ci0KLQkJbnRmc19kZWJ1ZygiRm91bmQgY29tcHJlc3NlZCBjb21wcmVzc2lvbiBibG9jay4iKTsK
LQkJZXJyID0gbnRmc19kZWNvbXByZXNzKHBhZ2VzLCBjb21wbGV0ZWRfcGFnZXMsICZjdXJfcGFn
ZSwKLQkJCQkmY3VyX29mcywgY2JfbWF4X3BhZ2UsIGNiX21heF9vZnMsIHhwYWdlLAotCQkJCSZ4
cGFnZV9kb25lLCBjYl9wb3MsIGNiX3NpemUgLSAoY2JfcG9zIC0gY2IpLAotCQkJCWlfc2l6ZSwg
aW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JCS8qCi0JCSAqIFdlIGNhbiBzbGVlcCBmcm9tIG5vdyBvbiwg
bG9jayBhbHJlYWR5IGRyb3BwZWQgYnkKLQkJICogbnRmc19kZWNvbXByZXNzKCkuCi0JCSAqLwot
CQlpZiAoZXJyKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJudGZzX2RlY29tcHJlc3MoKSBm
YWlsZWQgaW4gaW5vZGUgIgotCQkJCQkiMHglbHggd2l0aCBlcnJvciBjb2RlICVpLiBTa2lwcGlu
ZyAiCi0JCQkJCSJ0aGlzIGNvbXByZXNzaW9uIGJsb2NrLiIsCi0JCQkJCW5pLT5tZnRfbm8sIC1l
cnIpOwotCQkJLyogUmVsZWFzZSB0aGUgdW5maW5pc2hlZCBwYWdlcy4gKi8KLQkJCWZvciAoOyBw
cmV2X2N1cl9wYWdlIDwgY3VyX3BhZ2U7IHByZXZfY3VyX3BhZ2UrKykgewotCQkJCXBhZ2UgPSBw
YWdlc1twcmV2X2N1cl9wYWdlXTsKLQkJCQlpZiAocGFnZSkgewotCQkJCQlmbHVzaF9kY2FjaGVf
cGFnZShwYWdlKTsKLQkJCQkJa3VubWFwKHBhZ2UpOwotCQkJCQl1bmxvY2tfcGFnZShwYWdlKTsK
LQkJCQkJaWYgKHByZXZfY3VyX3BhZ2UgIT0geHBhZ2UpCi0JCQkJCQlwdXRfcGFnZShwYWdlKTsK
LQkJCQkJcGFnZXNbcHJldl9jdXJfcGFnZV0gPSBOVUxMOwotCQkJCX0KLQkJCX0KLQkJfQotCX0K
LQotCS8qIFJlbGVhc2UgdGhlIGJ1ZmZlciBoZWFkcy4gKi8KLQlmb3IgKGkgPSAwOyBpIDwgbnJf
YmhzOyBpKyspCi0JCWJyZWxzZShiaHNbaV0pOwotCi0JLyogRG8gd2UgaGF2ZSBtb3JlIHdvcmsg
dG8gZG8/ICovCi0JaWYgKG5yX2NicykKLQkJZ290byBkb19uZXh0X2NiOwotCi0JLyogV2Ugbm8g
bG9uZ2VyIG5lZWQgdGhlIGxpc3Qgb2YgYnVmZmVyIGhlYWRzLiAqLwotCWtmcmVlKGJocyk7Ci0K
LQkvKiBDbGVhbiB1cCBpZiB3ZSBoYXZlIGFueSBwYWdlcyBsZWZ0LiBTaG91bGQgbmV2ZXIgaGFw
cGVuLiAqLwotCWZvciAoY3VyX3BhZ2UgPSAwOyBjdXJfcGFnZSA8IG1heF9wYWdlOyBjdXJfcGFn
ZSsrKSB7Ci0JCXBhZ2UgPSBwYWdlc1tjdXJfcGFnZV07Ci0JCWlmIChwYWdlKSB7Ci0JCQludGZz
X2Vycm9yKHZvbC0+c2IsICJTdGlsbCBoYXZlIHBhZ2VzIGxlZnQhICIKLQkJCQkJIlRlcm1pbmF0
aW5nIHRoZW0gd2l0aCBleHRyZW1lICIKLQkJCQkJInByZWp1ZGljZS4gIElub2RlIDB4JWx4LCBw
YWdlIGluZGV4ICIKLQkJCQkJIjB4JWx4LiIsIG5pLT5tZnRfbm8sIHBhZ2UtPmluZGV4KTsKLQkJ
CWZsdXNoX2RjYWNoZV9wYWdlKHBhZ2UpOwotCQkJa3VubWFwKHBhZ2UpOwotCQkJdW5sb2NrX3Bh
Z2UocGFnZSk7Ci0JCQlpZiAoY3VyX3BhZ2UgIT0geHBhZ2UpCi0JCQkJcHV0X3BhZ2UocGFnZSk7
Ci0JCQlwYWdlc1tjdXJfcGFnZV0gPSBOVUxMOwotCQl9Ci0JfQotCi0JLyogV2Ugbm8gbG9uZ2Vy
IG5lZWQgdGhlIGxpc3Qgb2YgcGFnZXMuICovCi0Ja2ZyZWUocGFnZXMpOwotCWtmcmVlKGNvbXBs
ZXRlZF9wYWdlcyk7Ci0KLQkvKiBJZiB3ZSBoYXZlIGNvbXBsZXRlZCB0aGUgcmVxdWVzdGVkIHBh
Z2UsIHdlIHJldHVybiBzdWNjZXNzLiAqLwotCWlmIChsaWtlbHkoeHBhZ2VfZG9uZSkpCi0JCXJl
dHVybiAwOwotCi0JbnRmc19kZWJ1ZygiRmFpbGVkLiBSZXR1cm5pbmcgZXJyb3IgY29kZSAlcy4i
LCBlcnIgPT0gLUVPVkVSRkxPVyA/Ci0JCQkiRU9WRVJGTE9XIiA6ICghZXJyID8gIkVJTyIgOiAi
dW5rbm93biBlcnJvciIpKTsKLQlyZXR1cm4gZXJyIDwgMCA/IGVyciA6IC1FSU87Ci0KLXJlYWRf
ZXJyOgotCW50ZnNfZXJyb3Iodm9sLT5zYiwgIklPIGVycm9yIHdoaWxlIHJlYWRpbmcgY29tcHJl
c3NlZCBkYXRhLiIpOwotCS8qIFJlbGVhc2UgdGhlIGJ1ZmZlciBoZWFkcy4gKi8KLQlmb3IgKGkg
PSAwOyBpIDwgbnJfYmhzOyBpKyspCi0JCWJyZWxzZShiaHNbaV0pOwotCWdvdG8gZXJyX291dDsK
LQotbWFwX3JsX2VycjoKLQludGZzX2Vycm9yKHZvbC0+c2IsICJudGZzX21hcF9ydW5saXN0KCkg
ZmFpbGVkLiBDYW5ub3QgcmVhZCAiCi0JCQkiY29tcHJlc3Npb24gYmxvY2suIik7Ci0JZ290byBl
cnJfb3V0OwotCi1ybF9lcnI6Ci0JdXBfcmVhZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JbnRmc19l
cnJvcih2b2wtPnNiLCAibnRmc19ybF92Y25fdG9fbGNuKCkgZmFpbGVkLiBDYW5ub3QgcmVhZCAi
Ci0JCQkiY29tcHJlc3Npb24gYmxvY2suIik7Ci0JZ290byBlcnJfb3V0OwotCi1nZXRibGtfZXJy
OgotCXVwX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCW50ZnNfZXJyb3Iodm9sLT5zYiwgImdl
dGJsaygpIGZhaWxlZC4gQ2Fubm90IHJlYWQgY29tcHJlc3Npb24gYmxvY2suIik7Ci0KLWVycl9v
dXQ6Ci0Ja2ZyZWUoYmhzKTsKLQlmb3IgKGkgPSBjdXJfcGFnZTsgaSA8IG1heF9wYWdlOyBpKysp
IHsKLQkJcGFnZSA9IHBhZ2VzW2ldOwotCQlpZiAocGFnZSkgewotCQkJZmx1c2hfZGNhY2hlX3Bh
Z2UocGFnZSk7Ci0JCQlrdW5tYXAocGFnZSk7Ci0JCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJCWlm
IChpICE9IHhwYWdlKQotCQkJCXB1dF9wYWdlKHBhZ2UpOwotCQl9Ci0JfQotCWtmcmVlKHBhZ2Vz
KTsKLQlrZnJlZShjb21wbGV0ZWRfcGFnZXMpOwotCXJldHVybiAtRUlPOwotfQpkaWZmIC0tZ2l0
IGEvZnMvbnRmcy9kZWJ1Zy5jIGIvZnMvbnRmcy9kZWJ1Zy5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCBhM2MxYzU2NTZmOGYuLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2RlYnVn
LmMKKysrIC9kZXYvbnVsbApAQCAtMSwxNTkgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBkZWJ1Zy5jIC0gTlRGUyBrZXJuZWwgZGVi
dWcgc3VwcG9ydC4gUGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHly
aWdodCAoYykgMjAwMS0yMDA0IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0jZGVmaW5lIHByX2Zt
dChmbXQpIEtCVUlMRF9NT0ROQU1FICI6ICIgZm10Ci0jaW5jbHVkZSAiZGVidWcuaCIKLQotLyoq
Ci0gKiBfX250ZnNfd2FybmluZyAtIG91dHB1dCBhIHdhcm5pbmcgdG8gdGhlIHN5c2xvZwotICog
QGZ1bmN0aW9uOgluYW1lIG9mIGZ1bmN0aW9uIG91dHB1dHRpbmcgdGhlIHdhcm5pbmcKLSAqIEBz
YjoJCXN1cGVyIGJsb2NrIG9mIG1vdW50ZWQgbnRmcyBmaWxlc3lzdGVtCi0gKiBAZm10Ogl3YXJu
aW5nIHN0cmluZyBjb250YWluaW5nIGZvcm1hdCBzcGVjaWZpY2F0aW9ucwotICogQC4uLjoJYSB2
YXJpYWJsZSBudW1iZXIgb2YgYXJndW1lbnRzIHNwZWNpZmllZCBpbiBAZm10Ci0gKgotICogT3V0
cHV0cyBhIHdhcm5pbmcgdG8gdGhlIHN5c2xvZyBmb3IgdGhlIG1vdW50ZWQgbnRmcyBmaWxlc3lz
dGVtIGRlc2NyaWJlZAotICogYnkgQHNiLgotICoKLSAqIEBmbXQgYW5kIHRoZSBjb3JyZXNwb25k
aW5nIEAuLi4gaXMgcHJpbnRmIHN0eWxlIGZvcm1hdCBzdHJpbmcgY29udGFpbmluZwotICogdGhl
IHdhcm5pbmcgc3RyaW5nIGFuZCB0aGUgY29ycmVzcG9uZGluZyBmb3JtYXQgYXJndW1lbnRzLCBy
ZXNwZWN0aXZlbHkuCi0gKgotICogQGZ1bmN0aW9uIGlzIHRoZSBuYW1lIG9mIHRoZSBmdW5jdGlv
biBmcm9tIHdoaWNoIF9fbnRmc193YXJuaW5nIGlzIGJlaW5nCi0gKiBjYWxsZWQuCi0gKgotICog
Tm90ZSwgeW91IHNob3VsZCBiZSB1c2luZyBkZWJ1Zy5oOjpudGZzX3dhcm5pbmcoQHNiLCBAZm10
LCBALi4uKSBpbnN0ZWFkCi0gKiBhcyB0aGlzIHByb3ZpZGVzIHRoZSBAZnVuY3Rpb24gcGFyYW1l
dGVyIGF1dG9tYXRpY2FsbHkuCi0gKi8KLXZvaWQgX19udGZzX3dhcm5pbmcoY29uc3QgY2hhciAq
ZnVuY3Rpb24sIGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsCi0JCWNvbnN0IGNoYXIgKmZt
dCwgLi4uKQotewotCXN0cnVjdCB2YV9mb3JtYXQgdmFmOwotCXZhX2xpc3QgYXJnczsKLQlpbnQg
ZmxlbiA9IDA7Ci0KLSNpZm5kZWYgREVCVUcKLQlpZiAoIXByaW50a19yYXRlbGltaXQoKSkKLQkJ
cmV0dXJuOwotI2VuZGlmCi0JaWYgKGZ1bmN0aW9uKQotCQlmbGVuID0gc3RybGVuKGZ1bmN0aW9u
KTsKLQl2YV9zdGFydChhcmdzLCBmbXQpOwotCXZhZi5mbXQgPSBmbXQ7Ci0JdmFmLnZhID0gJmFy
Z3M7Ci0JaWYgKHNiKQotCQlwcl93YXJuKCIoZGV2aWNlICVzKTogJXMoKTogJXBWXG4iLAotCQkJ
c2ItPnNfaWQsIGZsZW4gPyBmdW5jdGlvbiA6ICIiLCAmdmFmKTsKLQllbHNlCi0JCXByX3dhcm4o
IiVzKCk6ICVwVlxuIiwgZmxlbiA/IGZ1bmN0aW9uIDogIiIsICZ2YWYpOwotCXZhX2VuZChhcmdz
KTsKLX0KLQotLyoqCi0gKiBfX250ZnNfZXJyb3IgLSBvdXRwdXQgYW4gZXJyb3IgdG8gdGhlIHN5
c2xvZwotICogQGZ1bmN0aW9uOgluYW1lIG9mIGZ1bmN0aW9uIG91dHB1dHRpbmcgdGhlIGVycm9y
Ci0gKiBAc2I6CQlzdXBlciBibG9jayBvZiBtb3VudGVkIG50ZnMgZmlsZXN5c3RlbQotICogQGZt
dDoJZXJyb3Igc3RyaW5nIGNvbnRhaW5pbmcgZm9ybWF0IHNwZWNpZmljYXRpb25zCi0gKiBALi4u
OglhIHZhcmlhYmxlIG51bWJlciBvZiBhcmd1bWVudHMgc3BlY2lmaWVkIGluIEBmbXQKLSAqCi0g
KiBPdXRwdXRzIGFuIGVycm9yIHRvIHRoZSBzeXNsb2cgZm9yIHRoZSBtb3VudGVkIG50ZnMgZmls
ZXN5c3RlbSBkZXNjcmliZWQKLSAqIGJ5IEBzYi4KLSAqCi0gKiBAZm10IGFuZCB0aGUgY29ycmVz
cG9uZGluZyBALi4uIGlzIHByaW50ZiBzdHlsZSBmb3JtYXQgc3RyaW5nIGNvbnRhaW5pbmcKLSAq
IHRoZSBlcnJvciBzdHJpbmcgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGZvcm1hdCBhcmd1bWVudHMs
IHJlc3BlY3RpdmVseS4KLSAqCi0gKiBAZnVuY3Rpb24gaXMgdGhlIG5hbWUgb2YgdGhlIGZ1bmN0
aW9uIGZyb20gd2hpY2ggX19udGZzX2Vycm9yIGlzIGJlaW5nCi0gKiBjYWxsZWQuCi0gKgotICog
Tm90ZSwgeW91IHNob3VsZCBiZSB1c2luZyBkZWJ1Zy5oOjpudGZzX2Vycm9yKEBzYiwgQGZtdCwg
QC4uLikgaW5zdGVhZAotICogYXMgdGhpcyBwcm92aWRlcyB0aGUgQGZ1bmN0aW9uIHBhcmFtZXRl
ciBhdXRvbWF0aWNhbGx5LgotICovCi12b2lkIF9fbnRmc19lcnJvcihjb25zdCBjaGFyICpmdW5j
dGlvbiwgY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKLQkJY29uc3QgY2hhciAqZm10LCAu
Li4pCi17Ci0Jc3RydWN0IHZhX2Zvcm1hdCB2YWY7Ci0JdmFfbGlzdCBhcmdzOwotCWludCBmbGVu
ID0gMDsKLQotI2lmbmRlZiBERUJVRwotCWlmICghcHJpbnRrX3JhdGVsaW1pdCgpKQotCQlyZXR1
cm47Ci0jZW5kaWYKLQlpZiAoZnVuY3Rpb24pCi0JCWZsZW4gPSBzdHJsZW4oZnVuY3Rpb24pOwot
CXZhX3N0YXJ0KGFyZ3MsIGZtdCk7Ci0JdmFmLmZtdCA9IGZtdDsKLQl2YWYudmEgPSAmYXJnczsK
LQlpZiAoc2IpCi0JCXByX2VycigiKGRldmljZSAlcyk6ICVzKCk6ICVwVlxuIiwKLQkJICAgICAg
IHNiLT5zX2lkLCBmbGVuID8gZnVuY3Rpb24gOiAiIiwgJnZhZik7Ci0JZWxzZQotCQlwcl9lcnIo
IiVzKCk6ICVwVlxuIiwgZmxlbiA/IGZ1bmN0aW9uIDogIiIsICZ2YWYpOwotCXZhX2VuZChhcmdz
KTsKLX0KLQotI2lmZGVmIERFQlVHCi0KLS8qIElmIDEsIG91dHB1dCBkZWJ1ZyBtZXNzYWdlcywg
YW5kIGlmIDAsIGRvbid0LiAqLwotaW50IGRlYnVnX21zZ3MgPSAwOwotCi12b2lkIF9fbnRmc19k
ZWJ1Zyhjb25zdCBjaGFyICpmaWxlLCBpbnQgbGluZSwgY29uc3QgY2hhciAqZnVuY3Rpb24sCi0J
CWNvbnN0IGNoYXIgKmZtdCwgLi4uKQotewotCXN0cnVjdCB2YV9mb3JtYXQgdmFmOwotCXZhX2xp
c3QgYXJnczsKLQlpbnQgZmxlbiA9IDA7Ci0KLQlpZiAoIWRlYnVnX21zZ3MpCi0JCXJldHVybjsK
LQlpZiAoZnVuY3Rpb24pCi0JCWZsZW4gPSBzdHJsZW4oZnVuY3Rpb24pOwotCXZhX3N0YXJ0KGFy
Z3MsIGZtdCk7Ci0JdmFmLmZtdCA9IGZtdDsKLQl2YWYudmEgPSAmYXJnczsKLQlwcl9kZWJ1Zygi
KCVzLCAlZCk6ICVzKCk6ICVwViIsIGZpbGUsIGxpbmUsIGZsZW4gPyBmdW5jdGlvbiA6ICIiLCAm
dmFmKTsKLQl2YV9lbmQoYXJncyk7Ci19Ci0KLS8qIER1bXAgYSBydW5saXN0LiBDYWxsZXIgaGFz
IHRvIHByb3ZpZGUgc3luY2hyb25pc2F0aW9uIGZvciBAcmwuICovCi12b2lkIG50ZnNfZGVidWdf
ZHVtcF9ydW5saXN0KGNvbnN0IHJ1bmxpc3RfZWxlbWVudCAqcmwpCi17Ci0JaW50IGk7Ci0JY29u
c3QgY2hhciAqbGNuX3N0cls1XSA9IHsgIkxDTl9IT0xFICAgICAgICAgIiwgIkxDTl9STF9OT1Rf
TUFQUEVEIiwKLQkJCQkgICAiTENOX0VOT0VOVCAgICAgICAiLCAiTENOX3Vua25vd24gICAgICAi
IH07Ci0KLQlpZiAoIWRlYnVnX21zZ3MpCi0JCXJldHVybjsKLQlwcl9kZWJ1ZygiRHVtcGluZyBy
dW5saXN0ICh2YWx1ZXMgaW4gaGV4KTpcbiIpOwotCWlmICghcmwpIHsKLQkJcHJfZGVidWcoIlJ1
biBsaXN0IG5vdCBwcmVzZW50LlxuIik7Ci0JCXJldHVybjsKLQl9Ci0JcHJfZGVidWcoIlZDTiAg
ICAgICAgICAgICAgTENOICAgICAgICAgICAgICAgUnVuIGxlbmd0aFxuIik7Ci0JZm9yIChpID0g
MDsgOyBpKyspIHsKLQkJTENOIGxjbiA9IChybCArIGkpLT5sY247Ci0KLQkJaWYgKGxjbiA8IChM
Q04pMCkgewotCQkJaW50IGluZGV4ID0gLWxjbiAtIDE7Ci0KLQkJCWlmIChpbmRleCA+IC1MQ05f
RU5PRU5UIC0gMSkKLQkJCQlpbmRleCA9IDM7Ci0JCQlwcl9kZWJ1ZygiJS0xNkx4ICVzICUtMTZM
eCVzXG4iLAotCQkJCQkobG9uZyBsb25nKShybCArIGkpLT52Y24sIGxjbl9zdHJbaW5kZXhdLAot
CQkJCQkobG9uZyBsb25nKShybCArIGkpLT5sZW5ndGgsCi0JCQkJCShybCArIGkpLT5sZW5ndGgg
PyAiIiA6Ci0JCQkJCQkiIChydW5saXN0IGVuZCkiKTsKLQkJfSBlbHNlCi0JCQlwcl9kZWJ1Zygi
JS0xNkx4ICUtMTZMeCAgJS0xNkx4JXNcbiIsCi0JCQkJCShsb25nIGxvbmcpKHJsICsgaSktPnZj
biwKLQkJCQkJKGxvbmcgbG9uZykocmwgKyBpKS0+bGNuLAotCQkJCQkobG9uZyBsb25nKShybCAr
IGkpLT5sZW5ndGgsCi0JCQkJCShybCArIGkpLT5sZW5ndGggPyAiIiA6Ci0JCQkJCQkiIChydW5s
aXN0IGVuZCkiKTsKLQkJaWYgKCEocmwgKyBpKS0+bGVuZ3RoKQotCQkJYnJlYWs7Ci0JfQotfQot
Ci0jZW5kaWYKZGlmZiAtLWdpdCBhL2ZzL250ZnMvZGVidWcuaCBiL2ZzL250ZnMvZGVidWcuaApk
ZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNmZkZWYzODhmMTI5Li4wMDAwMDAwMDAwMDAK
LS0tIGEvZnMvbnRmcy9kZWJ1Zy5oCisrKyAvZGV2L251bGwKQEAgLTEsNTcgKzAsMCBAQAotLyog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBkZWJ1
Zy5oIC0gTlRGUyBrZXJuZWwgZGVidWcgc3VwcG9ydC4gUGFydCBvZiB0aGUgTGludXgtTlRGUyBw
cm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMS0yMDA0IEFudG9uIEFsdGFwYXJtYWtv
dgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfREVCVUdfSAotI2RlZmluZSBfTElOVVhfTlRG
U19ERUJVR19ICi0KLSNpbmNsdWRlIDxsaW51eC9mcy5oPgotCi0jaW5jbHVkZSAicnVubGlzdC5o
IgotCi0jaWZkZWYgREVCVUcKLQotZXh0ZXJuIGludCBkZWJ1Z19tc2dzOwotCi1leHRlcm4gX19w
cmludGYoNCwgNSkKLXZvaWQgX19udGZzX2RlYnVnKGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5l
LCBjb25zdCBjaGFyICpmdW5jdGlvbiwKLQkJICBjb25zdCBjaGFyICpmb3JtYXQsIC4uLik7Ci0v
KioKLSAqIG50ZnNfZGVidWcgLSB3cml0ZSBhIGRlYnVnIGxldmVsIG1lc3NhZ2UgdG8gc3lzbG9n
Ci0gKiBAZjoJCWEgcHJpbnRmIGZvcm1hdCBzdHJpbmcgY29udGFpbmluZyB0aGUgbWVzc2FnZQot
ICogQC4uLjoJdGhlIHZhcmlhYmxlcyB0byBzdWJzdGl0dXRlIGludG8gQGYKLSAqCi0gKiBudGZz
X2RlYnVnKCkgd3JpdGVzIGEgREVCVUcgbGV2ZWwgbWVzc2FnZSB0byB0aGUgc3lzbG9nIGJ1dCBv
bmx5IGlmIHRoZQotICogZHJpdmVyIHdhcyBjb21waWxlZCB3aXRoIC1EREVCVUcuIE90aGVyd2lz
ZSwgdGhlIGNhbGwgdHVybnMgaW50byBhIE5PUC4KLSAqLwotI2RlZmluZSBudGZzX2RlYnVnKGYs
IGEuLi4pCQkJCQkJXAotCV9fbnRmc19kZWJ1ZyhfX0ZJTEVfXywgX19MSU5FX18sIF9fZnVuY19f
LCBmLCAjI2EpCi0KLWV4dGVybiB2b2lkIG50ZnNfZGVidWdfZHVtcF9ydW5saXN0KGNvbnN0IHJ1
bmxpc3RfZWxlbWVudCAqcmwpOwotCi0jZWxzZQkvKiAhREVCVUcgKi8KLQotI2RlZmluZSBudGZz
X2RlYnVnKGZtdCwgLi4uKQkJCQkJCVwKLWRvIHsJCQkJCQkJCQlcCi0JaWYgKDApCQkJCQkJCQlc
Ci0JCW5vX3ByaW50ayhmbXQsICMjX19WQV9BUkdTX18pOwkJCQlcCi19IHdoaWxlICgwKQotCi0j
ZGVmaW5lIG50ZnNfZGVidWdfZHVtcF9ydW5saXN0KHJsKQlkbyB7fSB3aGlsZSAoMCkKLQotI2Vu
ZGlmCS8qICFERUJVRyAqLwotCi1leHRlcm4gIF9fcHJpbnRmKDMsIDQpCi12b2lkIF9fbnRmc193
YXJuaW5nKGNvbnN0IGNoYXIgKmZ1bmN0aW9uLCBjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNi
LAotCQkgICAgY29uc3QgY2hhciAqZm10LCAuLi4pOwotI2RlZmluZSBudGZzX3dhcm5pbmcoc2Is
IGYsIGEuLi4pCV9fbnRmc193YXJuaW5nKF9fZnVuY19fLCBzYiwgZiwgIyNhKQotCi1leHRlcm4g
IF9fcHJpbnRmKDMsIDQpCi12b2lkIF9fbnRmc19lcnJvcihjb25zdCBjaGFyICpmdW5jdGlvbiwg
Y29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKLQkJICBjb25zdCBjaGFyICpmbXQsIC4uLik7
Ci0jZGVmaW5lIG50ZnNfZXJyb3Ioc2IsIGYsIGEuLi4pCQlfX250ZnNfZXJyb3IoX19mdW5jX18s
IHNiLCBmLCAjI2EpCi0KLSNlbmRpZiAvKiBfTElOVVhfTlRGU19ERUJVR19IICovCmRpZmYgLS1n
aXQgYS9mcy9udGZzL2Rpci5jIGIvZnMvbnRmcy9kaXIuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggNjI5NzIzYThkNzEyLi4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9kaXIuYwor
KysgL2Rldi9udWxsCkBAIC0xLDE1NDAgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBkaXIuYyAtIE5URlMga2VybmVsIGRpcmVjdG9y
eSBvcGVyYXRpb25zLiBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTIHByb2plY3QuCi0gKgotICogQ29w
eXJpZ2h0IChjKSAyMDAxLTIwMDcgQW50b24gQWx0YXBhcm1ha292Ci0gKiBDb3B5cmlnaHQgKGMp
IDIwMDIgUmljaGFyZCBSdXNzb24KLSAqLwotCi0jaW5jbHVkZSA8bGludXgvYnVmZmVyX2hlYWQu
aD4KLSNpbmNsdWRlIDxsaW51eC9zbGFiLmg+Ci0jaW5jbHVkZSA8bGludXgvYmxrZGV2Lmg+Ci0K
LSNpbmNsdWRlICJkaXIuaCIKLSNpbmNsdWRlICJhb3BzLmgiCi0jaW5jbHVkZSAiYXR0cmliLmgi
Ci0jaW5jbHVkZSAibWZ0LmgiCi0jaW5jbHVkZSAiZGVidWcuaCIKLSNpbmNsdWRlICJudGZzLmgi
Ci0KLS8qCi0gKiBUaGUgbGl0dGxlIGVuZGlhbiBVbmljb2RlIHN0cmluZyAkSTMwIGFzIGEgZ2xv
YmFsIGNvbnN0YW50LgotICovCi1udGZzY2hhciBJMzBbNV0gPSB7IGNwdV90b19sZTE2KCckJyks
IGNwdV90b19sZTE2KCdJJyksCi0JCWNwdV90b19sZTE2KCczJyksCWNwdV90b19sZTE2KCcwJyks
IDAgfTsKLQotLyoqCi0gKiBudGZzX2xvb2t1cF9pbm9kZV9ieV9uYW1lIC0gZmluZCBhbiBpbm9k
ZSBpbiBhIGRpcmVjdG9yeSBnaXZlbiBpdHMgbmFtZQotICogQGRpcl9uaToJbnRmcyBpbm9kZSBv
ZiB0aGUgZGlyZWN0b3J5IGluIHdoaWNoIHRvIHNlYXJjaCBmb3IgdGhlIG5hbWUKLSAqIEB1bmFt
ZToJVW5pY29kZSBuYW1lIGZvciB3aGljaCB0byBzZWFyY2ggaW4gdGhlIGRpcmVjdG9yeQotICog
QHVuYW1lX2xlbjoJbGVuZ3RoIG9mIHRoZSBuYW1lIEB1bmFtZSBpbiBVbmljb2RlIGNoYXJhY3Rl
cnMKLSAqIEByZXM6CXJldHVybiB0aGUgZm91bmQgZmlsZSBuYW1lIGlmIG5lY2Vzc2FyeSAoc2Vl
IGJlbG93KQotICoKLSAqIExvb2sgZm9yIGFuIGlub2RlIHdpdGggbmFtZSBAdW5hbWUgaW4gdGhl
IGRpcmVjdG9yeSB3aXRoIGlub2RlIEBkaXJfbmkuCi0gKiBudGZzX2xvb2t1cF9pbm9kZV9ieV9u
YW1lKCkgd2Fsa3MgdGhlIGNvbnRlbnRzIG9mIHRoZSBkaXJlY3RvcnkgbG9va2luZyBmb3IKLSAq
IHRoZSBVbmljb2RlIG5hbWUuIElmIHRoZSBuYW1lIGlzIGZvdW5kIGluIHRoZSBkaXJlY3Rvcnks
IHRoZSBjb3JyZXNwb25kaW5nCi0gKiBpbm9kZSBudW1iZXIgKD49IDApIGlzIHJldHVybmVkIGFz
IGEgbWZ0IHJlZmVyZW5jZSBpbiBjcHUgZm9ybWF0LCBpLmUuIGl0Ci0gKiBpcyBhIDY0LWJpdCBu
dW1iZXIgY29udGFpbmluZyB0aGUgc2VxdWVuY2UgbnVtYmVyLgotICoKLSAqIE9uIGVycm9yLCBh
IG5lZ2F0aXZlIHZhbHVlIGlzIHJldHVybmVkIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGVycm9yIGNv
ZGUuIEluCi0gKiBwYXJ0aWN1bGFyIGlmIHRoZSBpbm9kZSBpcyBub3QgZm91bmQgLUVOT0VOVCBp
cyByZXR1cm5lZC4gTm90ZSB0aGF0IHlvdQotICogY2FuJ3QganVzdCBjaGVjayB0aGUgcmV0dXJu
IHZhbHVlIGZvciBiZWluZyBuZWdhdGl2ZSwgeW91IGhhdmUgdG8gY2hlY2sgdGhlCi0gKiBpbm9k
ZSBudW1iZXIgZm9yIGJlaW5nIG5lZ2F0aXZlIHdoaWNoIHlvdSBjYW4gZXh0cmFjdCB1c2luZyBN
UkVDKHJldHVybgotICogdmFsdWUpLgotICoKLSAqIE5vdGUsIEB1bmFtZV9sZW4gZG9lcyBub3Qg
aW5jbHVkZSB0aGUgKG9wdGlvbmFsKSB0ZXJtaW5hdGluZyBOVUxMIGNoYXJhY3Rlci4KLSAqCi0g
KiBOb3RlLCB3ZSBsb29rIGZvciBhIGNhc2Ugc2Vuc2l0aXZlIG1hdGNoIGZpcnN0IGJ1dCB3ZSBh
bHNvIGxvb2sgZm9yIGEgY2FzZQotICogaW5zZW5zaXRpdmUgbWF0Y2ggYXQgdGhlIHNhbWUgdGlt
ZS4gSWYgd2UgZmluZCBhIGNhc2UgaW5zZW5zaXRpdmUgbWF0Y2gsIHdlCi0gKiBzYXZlIHRoYXQg
Zm9yIHRoZSBjYXNlIHRoYXQgd2UgZG9uJ3QgZmluZCBhbiBleGFjdCBtYXRjaCwgd2hlcmUgd2Ug
cmV0dXJuCi0gKiB0aGUgY2FzZSBpbnNlbnNpdGl2ZSBtYXRjaCBhbmQgc2V0dXAgQHJlcyAod2hp
Y2ggd2UgYWxsb2NhdGUhKSB3aXRoIHRoZSBtZnQKLSAqIHJlZmVyZW5jZSwgdGhlIGZpbGUgbmFt
ZSB0eXBlLCBsZW5ndGggYW5kIHdpdGggYSBjb3B5IG9mIHRoZSBsaXR0bGUgZW5kaWFuCi0gKiBV
bmljb2RlIGZpbGUgbmFtZSBpdHNlbGYuIElmIHdlIG1hdGNoIGEgZmlsZSBuYW1lIHdoaWNoIGlz
IGluIHRoZSBET1MgbmFtZQotICogc3BhY2UsIHdlIG9ubHkgcmV0dXJuIHRoZSBtZnQgcmVmZXJl
bmNlIGFuZCBmaWxlIG5hbWUgdHlwZSBpbiBAcmVzLgotICogbnRmc19sb29rdXAoKSB0aGVuIHVz
ZXMgdGhpcyB0byBmaW5kIHRoZSBsb25nIGZpbGUgbmFtZSBpbiB0aGUgaW5vZGUgaXRzZWxmLgot
ICogVGhpcyBpcyB0byBhdm9pZCBwb2xsdXRpbmcgdGhlIGRjYWNoZSB3aXRoIHNob3J0IGZpbGUg
bmFtZXMuIFdlIHdhbnQgdGhlbSB0bwotICogd29yayBidXQgd2UgZG9uJ3QgY2FyZSBmb3IgaG93
IHF1aWNrbHkgb25lIGNhbiBhY2Nlc3MgdGhlbS4gVGhpcyBhbHNvIGZpeGVzCi0gKiB0aGUgZGNh
Y2hlIGFsaWFzaW5nIGlzc3Vlcy4KLSAqCi0gKiBMb2NraW5nOiAgLSBDYWxsZXIgbXVzdCBob2xk
IGlfbXV0ZXggb24gdGhlIGRpcmVjdG9yeS4KLSAqCSAgICAgLSBFYWNoIHBhZ2UgY2FjaGUgcGFn
ZSBpbiB0aGUgaW5kZXggYWxsb2NhdGlvbiBtYXBwaW5nIG11c3QgYmUKLSAqCSAgICAgICBsb2Nr
ZWQgd2hpbHN0IGJlaW5nIGFjY2Vzc2VkIG90aGVyd2lzZSB3ZSBtYXkgZmluZCBhIGNvcnJ1cHQK
LSAqCSAgICAgICBwYWdlIGR1ZSB0byBpdCBiZWluZyB1bmRlciAtPndyaXRlcGFnZSBhdCB0aGUg
bW9tZW50IHdoaWNoCi0gKgkgICAgICAgYXBwbGllcyB0aGUgbXN0IHByb3RlY3Rpb24gZml4dXBz
IGJlZm9yZSB3cml0aW5nIG91dCBhbmQgdGhlbgotICoJICAgICAgIHJlbW92ZXMgdGhlbSBhZ2Fp
biBhZnRlciB0aGUgd3JpdGUgaXMgY29tcGxldGUgYWZ0ZXIgd2hpY2ggaXQgCi0gKgkgICAgICAg
dW5sb2NrcyB0aGUgcGFnZS4KLSAqLwotTUZUX1JFRiBudGZzX2xvb2t1cF9pbm9kZV9ieV9uYW1l
KG50ZnNfaW5vZGUgKmRpcl9uaSwgY29uc3QgbnRmc2NoYXIgKnVuYW1lLAotCQljb25zdCBpbnQg
dW5hbWVfbGVuLCBudGZzX25hbWUgKipyZXMpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9IGRpcl9u
aS0+dm9sOwotCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSB2b2wtPnNiOwotCU1GVF9SRUNPUkQg
Km07Ci0JSU5ERVhfUk9PVCAqaXI7Ci0JSU5ERVhfRU5UUlkgKmllOwotCUlOREVYX0FMTE9DQVRJ
T04gKmlhOwotCXU4ICppbmRleF9lbmQ7Ci0JdTY0IG1yZWY7Ci0JbnRmc19hdHRyX3NlYXJjaF9j
dHggKmN0eDsKLQlpbnQgZXJyLCByYzsKLQlWQ04gdmNuLCBvbGRfdmNuOwotCXN0cnVjdCBhZGRy
ZXNzX3NwYWNlICppYV9tYXBwaW5nOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXU4ICprYWRkcjsK
LQludGZzX25hbWUgKm5hbWUgPSBOVUxMOwotCi0JQlVHX09OKCFTX0lTRElSKFZGU19JKGRpcl9u
aSktPmlfbW9kZSkpOwotCUJVR19PTihOSW5vQXR0cihkaXJfbmkpKTsKLQkvKiBHZXQgaG9sZCBv
ZiB0aGUgbWZ0IHJlY29yZCBmb3IgdGhlIGRpcmVjdG9yeS4gKi8KLQltID0gbWFwX21mdF9yZWNv
cmQoZGlyX25pKTsKLQlpZiAoSVNfRVJSKG0pKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJtYXBfbWZ0
X3JlY29yZCgpIGZhaWxlZCB3aXRoIGVycm9yIGNvZGUgJWxkLiIsCi0JCQkJLVBUUl9FUlIobSkp
OwotCQlyZXR1cm4gRVJSX01SRUYoUFRSX0VSUihtKSk7Ci0JfQotCWN0eCA9IG50ZnNfYXR0cl9n
ZXRfc2VhcmNoX2N0eChkaXJfbmksIG0pOwotCWlmICh1bmxpa2VseSghY3R4KSkgewotCQllcnIg
PSAtRU5PTUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIEZpbmQgdGhlIGluZGV4IHJvb3Qg
YXR0cmlidXRlIGluIHRoZSBtZnQgcmVjb3JkLiAqLwotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAo
QVRfSU5ERVhfUk9PVCwgSTMwLCA0LCBDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwKLQkJCTAsIGN0
eCk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJaWYgKGVyciA9PSAtRU5PRU5UKSB7Ci0JCQlu
dGZzX2Vycm9yKHNiLCAiSW5kZXggcm9vdCBhdHRyaWJ1dGUgbWlzc2luZyBpbiAiCi0JCQkJCSJk
aXJlY3RvcnkgaW5vZGUgMHglbHguIiwKLQkJCQkJZGlyX25pLT5tZnRfbm8pOwotCQkJZXJyID0g
LUVJTzsKLQkJfQotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIEdldCB0byB0aGUgaW5kZXggcm9v
dCB2YWx1ZSAoaXQncyBiZWVuIHZlcmlmaWVkIGluIHJlYWRfaW5vZGUpLiAqLwotCWlyID0gKElO
REVYX1JPT1QqKSgodTgqKWN0eC0+YXR0ciArCi0JCQlsZTE2X3RvX2NwdShjdHgtPmF0dHItPmRh
dGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0JaW5kZXhfZW5kID0gKHU4KikmaXItPmluZGV4
ICsgbGUzMl90b19jcHUoaXItPmluZGV4LmluZGV4X2xlbmd0aCk7Ci0JLyogVGhlIGZpcnN0IGlu
ZGV4IGVudHJ5LiAqLwotCWllID0gKElOREVYX0VOVFJZKikoKHU4KikmaXItPmluZGV4ICsKLQkJ
CWxlMzJfdG9fY3B1KGlyLT5pbmRleC5lbnRyaWVzX29mZnNldCkpOwotCS8qCi0JICogTG9vcCB1
bnRpbCB3ZSBleGNlZWQgdmFsaWQgbWVtb3J5IChjb3JydXB0aW9uIGNhc2UpIG9yIHVudGlsIHdl
Ci0JICogcmVhY2ggdGhlIGxhc3QgZW50cnkuCi0JICovCi0JZm9yICg7OyBpZSA9IChJTkRFWF9F
TlRSWSopKCh1OCopaWUgKyBsZTE2X3RvX2NwdShpZS0+bGVuZ3RoKSkpIHsKLQkJLyogQm91bmRz
IGNoZWNrcy4gKi8KLQkJaWYgKCh1OCopaWUgPCAodTgqKWN0eC0+bXJlYyB8fCAodTgqKWllICsK
LQkJCQlzaXplb2YoSU5ERVhfRU5UUllfSEVBREVSKSA+IGluZGV4X2VuZCB8fAotCQkJCSh1OCop
aWUgKyBsZTE2X3RvX2NwdShpZS0+a2V5X2xlbmd0aCkgPgotCQkJCWluZGV4X2VuZCkKLQkJCWdv
dG8gZGlyX2Vycl9vdXQ7Ci0JCS8qCi0JCSAqIFRoZSBsYXN0IGVudHJ5IGNhbm5vdCBjb250YWlu
IGEgbmFtZS4gSXQgY2FuIGhvd2V2ZXIgY29udGFpbgotCQkgKiBhIHBvaW50ZXIgdG8gYSBjaGls
ZCBub2RlIGluIHRoZSBCK3RyZWUgc28gd2UganVzdCBicmVhayBvdXQuCi0JCSAqLwotCQlpZiAo
aWUtPmZsYWdzICYgSU5ERVhfRU5UUllfRU5EKQotCQkJYnJlYWs7Ci0JCS8qCi0JCSAqIFdlIHBl
cmZvcm0gYSBjYXNlIHNlbnNpdGl2ZSBjb21wYXJpc29uIGFuZCBpZiB0aGF0IG1hdGNoZXMKLQkJ
ICogd2UgYXJlIGRvbmUgYW5kIHJldHVybiB0aGUgbWZ0IHJlZmVyZW5jZSBvZiB0aGUgaW5vZGUg
KGkuZS4KLQkJICogdGhlIGlub2RlIG51bWJlciB0b2dldGhlciB3aXRoIHRoZSBzZXF1ZW5jZSBu
dW1iZXIgZm9yCi0JCSAqIGNvbnNpc3RlbmN5IGNoZWNraW5nKS4gV2UgY29udmVydCBpdCB0byBj
cHUgZm9ybWF0IGJlZm9yZQotCQkgKiByZXR1cm5pbmcuCi0JCSAqLwotCQlpZiAobnRmc19hcmVf
bmFtZXNfZXF1YWwodW5hbWUsIHVuYW1lX2xlbiwKLQkJCQkobnRmc2NoYXIqKSZpZS0+a2V5LmZp
bGVfbmFtZS5maWxlX25hbWUsCi0JCQkJaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0
aCwKLQkJCQlDQVNFX1NFTlNJVElWRSwgdm9sLT51cGNhc2UsIHZvbC0+dXBjYXNlX2xlbikpIHsK
LWZvdW5kX2l0OgotCQkJLyoKLQkJCSAqIFdlIGhhdmUgYSBwZXJmZWN0IG1hdGNoLCBzbyB3ZSBk
b24ndCBuZWVkIHRvIGNhcmUKLQkJCSAqIGFib3V0IGhhdmluZyBtYXRjaGVkIGltcGVyZmVjdGx5
IGJlZm9yZSwgc28gd2UgY2FuCi0JCQkgKiBmcmVlIG5hbWUgYW5kIHNldCAqcmVzIHRvIE5VTEwu
Ci0JCQkgKiBIb3dldmVyLCBpZiB0aGUgcGVyZmVjdCBtYXRjaCBpcyBhIHNob3J0IGZpbGUgbmFt
ZSwKLQkJCSAqIHdlIG5lZWQgdG8gc2lnbmFsIHRoaXMgdGhyb3VnaCAqcmVzLCBzbyB0aGF0Ci0J
CQkgKiBudGZzX2xvb2t1cCgpIGNhbiBmaXggZGNhY2hlIGFsaWFzaW5nIGlzc3Vlcy4KLQkJCSAq
IEFzIGFuIG9wdGltaXphdGlvbiB3ZSBqdXN0IHJldXNlIGFuIGV4aXN0aW5nCi0JCQkgKiBhbGxv
Y2F0aW9uIG9mICpyZXMuCi0JCQkgKi8KLQkJCWlmIChpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25h
bWVfdHlwZSA9PSBGSUxFX05BTUVfRE9TKSB7Ci0JCQkJaWYgKCFuYW1lKSB7Ci0JCQkJCW5hbWUg
PSBrbWFsbG9jKHNpemVvZihudGZzX25hbWUpLAotCQkJCQkJCUdGUF9OT0ZTKTsKLQkJCQkJaWYg
KCFuYW1lKSB7Ci0JCQkJCQllcnIgPSAtRU5PTUVNOwotCQkJCQkJZ290byBlcnJfb3V0OwotCQkJ
CQl9Ci0JCQkJfQotCQkJCW5hbWUtPm1yZWYgPSBsZTY0X3RvX2NwdSgKLQkJCQkJCWllLT5kYXRh
LmRpci5pbmRleGVkX2ZpbGUpOwotCQkJCW5hbWUtPnR5cGUgPSBGSUxFX05BTUVfRE9TOwotCQkJ
CW5hbWUtPmxlbiA9IDA7Ci0JCQkJKnJlcyA9IG5hbWU7Ci0JCQl9IGVsc2UgewotCQkJCWtmcmVl
KG5hbWUpOwotCQkJCSpyZXMgPSBOVUxMOwotCQkJfQotCQkJbXJlZiA9IGxlNjRfdG9fY3B1KGll
LT5kYXRhLmRpci5pbmRleGVkX2ZpbGUpOwotCQkJbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0
eCk7Ci0JCQl1bm1hcF9tZnRfcmVjb3JkKGRpcl9uaSk7Ci0JCQlyZXR1cm4gbXJlZjsKLQkJfQot
CQkvKgotCQkgKiBGb3IgYSBjYXNlIGluc2Vuc2l0aXZlIG1vdW50LCB3ZSBhbHNvIHBlcmZvcm0g
YSBjYXNlCi0JCSAqIGluc2Vuc2l0aXZlIGNvbXBhcmlzb24gKHByb3ZpZGVkIHRoZSBmaWxlIG5h
bWUgaXMgbm90IGluIHRoZQotCQkgKiBQT1NJWCBuYW1lc3BhY2UpLiBJZiB0aGUgY29tcGFyaXNv
biBtYXRjaGVzLCBhbmQgdGhlIG5hbWUgaXMKLQkJICogaW4gdGhlIFdJTjMyIG5hbWVzcGFjZSwg
d2UgY2FjaGUgdGhlIGZpbGVuYW1lIGluICpyZXMgc28KLQkJICogdGhhdCB0aGUgY2FsbGVyLCBu
dGZzX2xvb2t1cCgpLCBjYW4gd29yayBvbiBpdC4gSWYgdGhlCi0JCSAqIGNvbXBhcmlzb24gbWF0
Y2hlcywgYW5kIHRoZSBuYW1lIGlzIGluIHRoZSBET1MgbmFtZXNwYWNlLCB3ZQotCQkgKiBvbmx5
IGNhY2hlIHRoZSBtZnQgcmVmZXJlbmNlIGFuZCB0aGUgZmlsZSBuYW1lIHR5cGUgKHdlIHNldAot
CQkgKiB0aGUgbmFtZSBsZW5ndGggdG8gemVybyBmb3Igc2ltcGxpY2l0eSkuCi0JCSAqLwotCQlp
ZiAoIU5Wb2xDYXNlU2Vuc2l0aXZlKHZvbCkgJiYKLQkJCQlpZS0+a2V5LmZpbGVfbmFtZS5maWxl
X25hbWVfdHlwZSAmJgotCQkJCW50ZnNfYXJlX25hbWVzX2VxdWFsKHVuYW1lLCB1bmFtZV9sZW4s
Ci0JCQkJKG50ZnNjaGFyKikmaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lLAotCQkJCWllLT5r
ZXkuZmlsZV9uYW1lLmZpbGVfbmFtZV9sZW5ndGgsCi0JCQkJSUdOT1JFX0NBU0UsIHZvbC0+dXBj
YXNlLCB2b2wtPnVwY2FzZV9sZW4pKSB7Ci0JCQlpbnQgbmFtZV9zaXplID0gc2l6ZW9mKG50ZnNf
bmFtZSk7Ci0JCQl1OCB0eXBlID0gaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX3R5cGU7Ci0J
CQl1OCBsZW4gPSBpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWVfbGVuZ3RoOwotCi0JCQkvKiBP
bmx5IG9uZSBjYXNlIGluc2Vuc2l0aXZlIG1hdGNoaW5nIG5hbWUgYWxsb3dlZC4gKi8KLQkJCWlm
IChuYW1lKSB7Ci0JCQkJbnRmc19lcnJvcihzYiwgIkZvdW5kIGFscmVhZHkgYWxsb2NhdGVkIG5h
bWUgIgotCQkJCQkJImluIHBoYXNlIDEuIFBsZWFzZSBydW4gY2hrZHNrICIKLQkJCQkJCSJhbmQg
aWYgdGhhdCBkb2Vzbid0IGZpbmQgYW55ICIKLQkJCQkJCSJlcnJvcnMgcGxlYXNlIHJlcG9ydCB5
b3Ugc2F3ICIKLQkJCQkJCSJ0aGlzIG1lc3NhZ2UgdG8gIgotCQkJCQkJImxpbnV4LW50ZnMtZGV2
QGxpc3RzLiIKLQkJCQkJCSJzb3VyY2Vmb3JnZS5uZXQuIik7Ci0JCQkJZ290byBkaXJfZXJyX291
dDsKLQkJCX0KLQotCQkJaWYgKHR5cGUgIT0gRklMRV9OQU1FX0RPUykKLQkJCQluYW1lX3NpemUg
Kz0gbGVuICogc2l6ZW9mKG50ZnNjaGFyKTsKLQkJCW5hbWUgPSBrbWFsbG9jKG5hbWVfc2l6ZSwg
R0ZQX05PRlMpOwotCQkJaWYgKCFuYW1lKSB7Ci0JCQkJZXJyID0gLUVOT01FTTsKLQkJCQlnb3Rv
IGVycl9vdXQ7Ci0JCQl9Ci0JCQluYW1lLT5tcmVmID0gbGU2NF90b19jcHUoaWUtPmRhdGEuZGly
LmluZGV4ZWRfZmlsZSk7Ci0JCQluYW1lLT50eXBlID0gdHlwZTsKLQkJCWlmICh0eXBlICE9IEZJ
TEVfTkFNRV9ET1MpIHsKLQkJCQluYW1lLT5sZW4gPSBsZW47Ci0JCQkJbWVtY3B5KG5hbWUtPm5h
bWUsIGllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZSwKLQkJCQkJCWxlbiAqIHNpemVvZihudGZz
Y2hhcikpOwotCQkJfSBlbHNlCi0JCQkJbmFtZS0+bGVuID0gMDsKLQkJCSpyZXMgPSBuYW1lOwot
CQl9Ci0JCS8qCi0JCSAqIE5vdCBhIHBlcmZlY3QgbWF0Y2gsIG5lZWQgdG8gZG8gZnVsbCBibG93
biBjb2xsYXRpb24gc28gd2UKLQkJICoga25vdyB3aGljaCB3YXkgaW4gdGhlIEIrdHJlZSB3ZSBo
YXZlIHRvIGdvLgotCQkgKi8KLQkJcmMgPSBudGZzX2NvbGxhdGVfbmFtZXModW5hbWUsIHVuYW1l
X2xlbiwKLQkJCQkobnRmc2NoYXIqKSZpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWUsCi0JCQkJ
aWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0aCwgMSwKLQkJCQlJR05PUkVfQ0FTRSwg
dm9sLT51cGNhc2UsIHZvbC0+dXBjYXNlX2xlbik7Ci0JCS8qCi0JCSAqIElmIHVuYW1lIGNvbGxh
dGVzIGJlZm9yZSB0aGUgbmFtZSBvZiB0aGUgY3VycmVudCBlbnRyeSwgdGhlcmUKLQkJICogaXMg
ZGVmaW5pdGVseSBubyBzdWNoIG5hbWUgaW4gdGhpcyBpbmRleCBidXQgd2UgbWlnaHQgbmVlZCB0
bwotCQkgKiBkZXNjZW5kIGludG8gdGhlIEIrdHJlZSBzbyB3ZSBqdXN0IGJyZWFrIG91dCBvZiB0
aGUgbG9vcC4KLQkJICovCi0JCWlmIChyYyA9PSAtMSkKLQkJCWJyZWFrOwotCQkvKiBUaGUgbmFt
ZXMgYXJlIG5vdCBlcXVhbCwgY29udGludWUgdGhlIHNlYXJjaC4gKi8KLQkJaWYgKHJjKQotCQkJ
Y29udGludWU7Ci0JCS8qCi0JCSAqIE5hbWVzIG1hdGNoIHdpdGggY2FzZSBpbnNlbnNpdGl2ZSBj
b21wYXJpc29uLCBub3cgdHJ5IHRoZQotCQkgKiBjYXNlIHNlbnNpdGl2ZSBjb21wYXJpc29uLCB3
aGljaCBpcyByZXF1aXJlZCBmb3IgcHJvcGVyCi0JCSAqIGNvbGxhdGlvbi4KLQkJICovCi0JCXJj
ID0gbnRmc19jb2xsYXRlX25hbWVzKHVuYW1lLCB1bmFtZV9sZW4sCi0JCQkJKG50ZnNjaGFyKikm
aWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lLAotCQkJCWllLT5rZXkuZmlsZV9uYW1lLmZpbGVf
bmFtZV9sZW5ndGgsIDEsCi0JCQkJQ0FTRV9TRU5TSVRJVkUsIHZvbC0+dXBjYXNlLCB2b2wtPnVw
Y2FzZV9sZW4pOwotCQlpZiAocmMgPT0gLTEpCi0JCQlicmVhazsKLQkJaWYgKHJjKQotCQkJY29u
dGludWU7Ci0JCS8qCi0JCSAqIFBlcmZlY3QgbWF0Y2gsIHRoaXMgd2lsbCBuZXZlciBoYXBwZW4g
YXMgdGhlCi0JCSAqIG50ZnNfYXJlX25hbWVzX2VxdWFsKCkgY2FsbCB3aWxsIGhhdmUgZ290dGVu
IGEgbWF0Y2ggYnV0IHdlCi0JCSAqIHN0aWxsIHRyZWF0IGl0IGNvcnJlY3RseS4KLQkJICovCi0J
CWdvdG8gZm91bmRfaXQ7Ci0JfQotCS8qCi0JICogV2UgaGF2ZSBmaW5pc2hlZCB3aXRoIHRoaXMg
aW5kZXggd2l0aG91dCBzdWNjZXNzLiBDaGVjayBmb3IgdGhlCi0JICogcHJlc2VuY2Ugb2YgYSBj
aGlsZCBub2RlIGFuZCBpZiBub3QgcHJlc2VudCByZXR1cm4gLUVOT0VOVCwgdW5sZXNzCi0JICog
d2UgaGF2ZSBnb3QgYSBtYXRjaGluZyBuYW1lIGNhY2hlZCBpbiBuYW1lIGluIHdoaWNoIGNhc2Ug
cmV0dXJuIHRoZQotCSAqIG1mdCByZWZlcmVuY2UgYXNzb2NpYXRlZCB3aXRoIGl0LgotCSAqLwot
CWlmICghKGllLT5mbGFncyAmIElOREVYX0VOVFJZX05PREUpKSB7Ci0JCWlmIChuYW1lKSB7Ci0J
CQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQkJCXVubWFwX21mdF9yZWNvcmQoZGly
X25pKTsKLQkJCXJldHVybiBuYW1lLT5tcmVmOwotCQl9Ci0JCW50ZnNfZGVidWcoIkVudHJ5IG5v
dCBmb3VuZC4iKTsKLQkJZXJyID0gLUVOT0VOVDsKLQkJZ290byBlcnJfb3V0OwotCX0gLyogQ2hp
bGQgbm9kZSBwcmVzZW50LCBkZXNjZW5kIGludG8gaXQuICovCi0JLyogQ29uc2lzdGVuY3kgY2hl
Y2s6IFZlcmlmeSB0aGF0IGFuIGluZGV4IGFsbG9jYXRpb24gZXhpc3RzLiAqLwotCWlmICghTklu
b0luZGV4QWxsb2NQcmVzZW50KGRpcl9uaSkpIHsKLQkJbnRmc19lcnJvcihzYiwgIk5vIGluZGV4
IGFsbG9jYXRpb24gYXR0cmlidXRlIGJ1dCBpbmRleCBlbnRyeSAiCi0JCQkJInJlcXVpcmVzIG9u
ZS4gRGlyZWN0b3J5IGlub2RlIDB4JWx4IGlzICIKLQkJCQkiY29ycnVwdCBvciBkcml2ZXIgYnVn
LiIsIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQkvKiBHZXQgdGhlIHN0
YXJ0aW5nIHZjbiBvZiB0aGUgaW5kZXhfYmxvY2sgaG9sZGluZyB0aGUgY2hpbGQgbm9kZS4gKi8K
LQl2Y24gPSBzbGU2NF90b19jcHVwKChzbGU2NCopKCh1OCopaWUgKyBsZTE2X3RvX2NwdShpZS0+
bGVuZ3RoKSAtIDgpKTsKLQlpYV9tYXBwaW5nID0gVkZTX0koZGlyX25pKS0+aV9tYXBwaW5nOwot
CS8qCi0JICogV2UgYXJlIGRvbmUgd2l0aCB0aGUgaW5kZXggcm9vdCBhbmQgdGhlIG1mdCByZWNv
cmQuIFJlbGVhc2UgdGhlbSwKLQkgKiBvdGhlcndpc2Ugd2UgZGVhZGxvY2sgd2l0aCBudGZzX21h
cF9wYWdlKCkuCi0JICovCi0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5tYXBf
bWZ0X3JlY29yZChkaXJfbmkpOwotCW0gPSBOVUxMOwotCWN0eCA9IE5VTEw7Ci1kZXNjZW5kX2lu
dG9fY2hpbGRfbm9kZToKLQkvKgotCSAqIENvbnZlcnQgdmNuIHRvIGluZGV4IGludG8gdGhlIGlu
ZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlIGluIHVuaXRzCi0JICogb2YgUEFHRV9TSVpFIGFuZCBt
YXAgdGhlIHBhZ2UgY2FjaGUgcGFnZSwgcmVhZGluZyBpdCBmcm9tCi0JICogZGlzayBpZiBuZWNl
c3NhcnkuCi0JICovCi0JcGFnZSA9IG50ZnNfbWFwX3BhZ2UoaWFfbWFwcGluZywgdmNuIDw8Ci0J
CQlkaXJfbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPj4gUEFHRV9TSElGVCk7Ci0JaWYg
KElTX0VSUihwYWdlKSkgewotCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIG1hcCBkaXJlY3Rv
cnkgaW5kZXggcGFnZSwgZXJyb3IgJWxkLiIsCi0JCQkJLVBUUl9FUlIocGFnZSkpOwotCQllcnIg
PSBQVFJfRVJSKHBhZ2UpOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWxvY2tfcGFnZShwYWdlKTsK
LQlrYWRkciA9ICh1OCopcGFnZV9hZGRyZXNzKHBhZ2UpOwotZmFzdF9kZXNjZW5kX2ludG9fY2hp
bGRfbm9kZToKLQkvKiBHZXQgdG8gdGhlIGluZGV4IGFsbG9jYXRpb24gYmxvY2suICovCi0JaWEg
PSAoSU5ERVhfQUxMT0NBVElPTiopKGthZGRyICsgKCh2Y24gPDwKLQkJCWRpcl9uaS0+aXR5cGUu
aW5kZXgudmNuX3NpemVfYml0cykgJiB+UEFHRV9NQVNLKSk7Ci0JLyogQm91bmRzIGNoZWNrcy4g
Ki8KLQlpZiAoKHU4KilpYSA8IGthZGRyIHx8ICh1OCopaWEgPiBrYWRkciArIFBBR0VfU0laRSkg
ewotCQludGZzX2Vycm9yKHNiLCAiT3V0IG9mIGJvdW5kcyBjaGVjayBmYWlsZWQuIENvcnJ1cHQg
ZGlyZWN0b3J5ICIKLQkJCQkiaW5vZGUgMHglbHggb3IgZHJpdmVyIGJ1Zy4iLCBkaXJfbmktPm1m
dF9ubyk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qIENhdGNoIG11bHRpIHNlY3RvciB0
cmFuc2ZlciBmaXh1cCBlcnJvcnMuICovCi0JaWYgKHVubGlrZWx5KCFudGZzX2lzX2luZHhfcmVj
b3JkKGlhLT5tYWdpYykpKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJEaXJlY3RvcnkgaW5kZXggcmVj
b3JkIHdpdGggdmNuIDB4JWxseCBpcyAiCi0JCQkJImNvcnJ1cHQuICBDb3JydXB0IGlub2RlIDB4
JWx4LiAgUnVuIGNoa2Rzay4iLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdmNuLCBkaXJfbmkt
Pm1mdF9ubyk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCWlmIChzbGU2NF90b19jcHUoaWEt
PmluZGV4X2Jsb2NrX3ZjbikgIT0gdmNuKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJBY3R1YWwgVkNO
ICgweCVsbHgpIG9mIGluZGV4IGJ1ZmZlciBpcyAiCi0JCQkJImRpZmZlcmVudCBmcm9tIGV4cGVj
dGVkIFZDTiAoMHglbGx4KS4gIgotCQkJCSJEaXJlY3RvcnkgaW5vZGUgMHglbHggaXMgY29ycnVw
dCBvciBkcml2ZXIgIgotCQkJCSJidWcuIiwgKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQlzbGU2
NF90b19jcHUoaWEtPmluZGV4X2Jsb2NrX3ZjbiksCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2
Y24sIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JaWYgKGxlMzJf
dG9fY3B1KGlhLT5pbmRleC5hbGxvY2F0ZWRfc2l6ZSkgKyAweDE4ICE9Ci0JCQlkaXJfbmktPml0
eXBlLmluZGV4LmJsb2NrX3NpemUpIHsKLQkJbnRmc19lcnJvcihzYiwgIkluZGV4IGJ1ZmZlciAo
VkNOIDB4JWxseCkgb2YgZGlyZWN0b3J5IGlub2RlICIKLQkJCQkiMHglbHggaGFzIGEgc2l6ZSAo
JXUpIGRpZmZlcmluZyBmcm9tIHRoZSAiCi0JCQkJImRpcmVjdG9yeSBzcGVjaWZpZWQgc2l6ZSAo
JXUpLiBEaXJlY3RvcnkgIgotCQkJCSJpbm9kZSBpcyBjb3JydXB0IG9yIGRyaXZlciBidWcuIiwK
LQkJCQkodW5zaWduZWQgbG9uZyBsb25nKXZjbiwgZGlyX25pLT5tZnRfbm8sCi0JCQkJbGUzMl90
b19jcHUoaWEtPmluZGV4LmFsbG9jYXRlZF9zaXplKSArIDB4MTgsCi0JCQkJZGlyX25pLT5pdHlw
ZS5pbmRleC5ibG9ja19zaXplKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JaW5kZXhfZW5k
ID0gKHU4KilpYSArIGRpcl9uaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZTsKLQlpZiAoaW5kZXhf
ZW5kID4ga2FkZHIgKyBQQUdFX1NJWkUpIHsKLQkJbnRmc19lcnJvcihzYiwgIkluZGV4IGJ1ZmZl
ciAoVkNOIDB4JWxseCkgb2YgZGlyZWN0b3J5IGlub2RlICIKLQkJCQkiMHglbHggY3Jvc3NlcyBw
YWdlIGJvdW5kYXJ5LiBJbXBvc3NpYmxlISAiCi0JCQkJIkNhbm5vdCBhY2Nlc3MhIFRoaXMgaXMg
cHJvYmFibHkgYSBidWcgaW4gdGhlICIKLQkJCQkiZHJpdmVyLiIsICh1bnNpZ25lZCBsb25nIGxv
bmcpdmNuLAotCQkJCWRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0J
aW5kZXhfZW5kID0gKHU4KikmaWEtPmluZGV4ICsgbGUzMl90b19jcHUoaWEtPmluZGV4LmluZGV4
X2xlbmd0aCk7Ci0JaWYgKGluZGV4X2VuZCA+ICh1OCopaWEgKyBkaXJfbmktPml0eXBlLmluZGV4
LmJsb2NrX3NpemUpIHsKLQkJbnRmc19lcnJvcihzYiwgIlNpemUgb2YgaW5kZXggYnVmZmVyIChW
Q04gMHglbGx4KSBvZiBkaXJlY3RvcnkgIgotCQkJCSJpbm9kZSAweCVseCBleGNlZWRzIG1heGlt
dW0gc2l6ZS4iLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdmNuLCBkaXJfbmktPm1mdF9ubyk7
Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qIFRoZSBmaXJzdCBpbmRleCBlbnRyeS4gKi8K
LQlpZSA9IChJTkRFWF9FTlRSWSopKCh1OCopJmlhLT5pbmRleCArCi0JCQlsZTMyX3RvX2NwdShp
YS0+aW5kZXguZW50cmllc19vZmZzZXQpKTsKLQkvKgotCSAqIEl0ZXJhdGUgc2ltaWxhciB0byBh
Ym92ZSBiaWcgbG9vcCBidXQgYXBwbGllZCB0byBpbmRleCBidWZmZXIsIHRodXMKLQkgKiBsb29w
IHVudGlsIHdlIGV4Y2VlZCB2YWxpZCBtZW1vcnkgKGNvcnJ1cHRpb24gY2FzZSkgb3IgdW50aWwg
d2UKLQkgKiByZWFjaCB0aGUgbGFzdCBlbnRyeS4KLQkgKi8KLQlmb3IgKDs7IGllID0gKElOREVY
X0VOVFJZKikoKHU4KilpZSArIGxlMTZfdG9fY3B1KGllLT5sZW5ndGgpKSkgewotCQkvKiBCb3Vu
ZHMgY2hlY2suICovCi0JCWlmICgodTgqKWllIDwgKHU4KilpYSB8fCAodTgqKWllICsKLQkJCQlz
aXplb2YoSU5ERVhfRU5UUllfSEVBREVSKSA+IGluZGV4X2VuZCB8fAotCQkJCSh1OCopaWUgKyBs
ZTE2X3RvX2NwdShpZS0+a2V5X2xlbmd0aCkgPgotCQkJCWluZGV4X2VuZCkgewotCQkJbnRmc19l
cnJvcihzYiwgIkluZGV4IGVudHJ5IG91dCBvZiBib3VuZHMgaW4gIgotCQkJCQkiZGlyZWN0b3J5
IGlub2RlIDB4JWx4LiIsCi0JCQkJCWRpcl9uaS0+bWZ0X25vKTsKLQkJCWdvdG8gdW5tX2Vycl9v
dXQ7Ci0JCX0KLQkJLyoKLQkJICogVGhlIGxhc3QgZW50cnkgY2Fubm90IGNvbnRhaW4gYSBuYW1l
LiBJdCBjYW4gaG93ZXZlciBjb250YWluCi0JCSAqIGEgcG9pbnRlciB0byBhIGNoaWxkIG5vZGUg
aW4gdGhlIEIrdHJlZSBzbyB3ZSBqdXN0IGJyZWFrIG91dC4KLQkJICovCi0JCWlmIChpZS0+Zmxh
Z3MgJiBJTkRFWF9FTlRSWV9FTkQpCi0JCQlicmVhazsKLQkJLyoKLQkJICogV2UgcGVyZm9ybSBh
IGNhc2Ugc2Vuc2l0aXZlIGNvbXBhcmlzb24gYW5kIGlmIHRoYXQgbWF0Y2hlcwotCQkgKiB3ZSBh
cmUgZG9uZSBhbmQgcmV0dXJuIHRoZSBtZnQgcmVmZXJlbmNlIG9mIHRoZSBpbm9kZSAoaS5lLgot
CQkgKiB0aGUgaW5vZGUgbnVtYmVyIHRvZ2V0aGVyIHdpdGggdGhlIHNlcXVlbmNlIG51bWJlciBm
b3IKLQkJICogY29uc2lzdGVuY3kgY2hlY2tpbmcpLiBXZSBjb252ZXJ0IGl0IHRvIGNwdSBmb3Jt
YXQgYmVmb3JlCi0JCSAqIHJldHVybmluZy4KLQkJICovCi0JCWlmIChudGZzX2FyZV9uYW1lc19l
cXVhbCh1bmFtZSwgdW5hbWVfbGVuLAotCQkJCShudGZzY2hhciopJmllLT5rZXkuZmlsZV9uYW1l
LmZpbGVfbmFtZSwKLQkJCQlpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWVfbGVuZ3RoLAotCQkJ
CUNBU0VfU0VOU0lUSVZFLCB2b2wtPnVwY2FzZSwgdm9sLT51cGNhc2VfbGVuKSkgewotZm91bmRf
aXQyOgotCQkJLyoKLQkJCSAqIFdlIGhhdmUgYSBwZXJmZWN0IG1hdGNoLCBzbyB3ZSBkb24ndCBu
ZWVkIHRvIGNhcmUKLQkJCSAqIGFib3V0IGhhdmluZyBtYXRjaGVkIGltcGVyZmVjdGx5IGJlZm9y
ZSwgc28gd2UgY2FuCi0JCQkgKiBmcmVlIG5hbWUgYW5kIHNldCAqcmVzIHRvIE5VTEwuCi0JCQkg
KiBIb3dldmVyLCBpZiB0aGUgcGVyZmVjdCBtYXRjaCBpcyBhIHNob3J0IGZpbGUgbmFtZSwKLQkJ
CSAqIHdlIG5lZWQgdG8gc2lnbmFsIHRoaXMgdGhyb3VnaCAqcmVzLCBzbyB0aGF0Ci0JCQkgKiBu
dGZzX2xvb2t1cCgpIGNhbiBmaXggZGNhY2hlIGFsaWFzaW5nIGlzc3Vlcy4KLQkJCSAqIEFzIGFu
IG9wdGltaXphdGlvbiB3ZSBqdXN0IHJldXNlIGFuIGV4aXN0aW5nCi0JCQkgKiBhbGxvY2F0aW9u
IG9mICpyZXMuCi0JCQkgKi8KLQkJCWlmIChpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWVfdHlw
ZSA9PSBGSUxFX05BTUVfRE9TKSB7Ci0JCQkJaWYgKCFuYW1lKSB7Ci0JCQkJCW5hbWUgPSBrbWFs
bG9jKHNpemVvZihudGZzX25hbWUpLAotCQkJCQkJCUdGUF9OT0ZTKTsKLQkJCQkJaWYgKCFuYW1l
KSB7Ci0JCQkJCQllcnIgPSAtRU5PTUVNOwotCQkJCQkJZ290byB1bm1fZXJyX291dDsKLQkJCQkJ
fQotCQkJCX0KLQkJCQluYW1lLT5tcmVmID0gbGU2NF90b19jcHUoCi0JCQkJCQlpZS0+ZGF0YS5k
aXIuaW5kZXhlZF9maWxlKTsKLQkJCQluYW1lLT50eXBlID0gRklMRV9OQU1FX0RPUzsKLQkJCQlu
YW1lLT5sZW4gPSAwOwotCQkJCSpyZXMgPSBuYW1lOwotCQkJfSBlbHNlIHsKLQkJCQlrZnJlZShu
YW1lKTsKLQkJCQkqcmVzID0gTlVMTDsKLQkJCX0KLQkJCW1yZWYgPSBsZTY0X3RvX2NwdShpZS0+
ZGF0YS5kaXIuaW5kZXhlZF9maWxlKTsKLQkJCXVubG9ja19wYWdlKHBhZ2UpOwotCQkJbnRmc191
bm1hcF9wYWdlKHBhZ2UpOwotCQkJcmV0dXJuIG1yZWY7Ci0JCX0KLQkJLyoKLQkJICogRm9yIGEg
Y2FzZSBpbnNlbnNpdGl2ZSBtb3VudCwgd2UgYWxzbyBwZXJmb3JtIGEgY2FzZQotCQkgKiBpbnNl
bnNpdGl2ZSBjb21wYXJpc29uIChwcm92aWRlZCB0aGUgZmlsZSBuYW1lIGlzIG5vdCBpbiB0aGUK
LQkJICogUE9TSVggbmFtZXNwYWNlKS4gSWYgdGhlIGNvbXBhcmlzb24gbWF0Y2hlcywgYW5kIHRo
ZSBuYW1lIGlzCi0JCSAqIGluIHRoZSBXSU4zMiBuYW1lc3BhY2UsIHdlIGNhY2hlIHRoZSBmaWxl
bmFtZSBpbiAqcmVzIHNvCi0JCSAqIHRoYXQgdGhlIGNhbGxlciwgbnRmc19sb29rdXAoKSwgY2Fu
IHdvcmsgb24gaXQuIElmIHRoZQotCQkgKiBjb21wYXJpc29uIG1hdGNoZXMsIGFuZCB0aGUgbmFt
ZSBpcyBpbiB0aGUgRE9TIG5hbWVzcGFjZSwgd2UKLQkJICogb25seSBjYWNoZSB0aGUgbWZ0IHJl
ZmVyZW5jZSBhbmQgdGhlIGZpbGUgbmFtZSB0eXBlICh3ZSBzZXQKLQkJICogdGhlIG5hbWUgbGVu
Z3RoIHRvIHplcm8gZm9yIHNpbXBsaWNpdHkpLgotCQkgKi8KLQkJaWYgKCFOVm9sQ2FzZVNlbnNp
dGl2ZSh2b2wpICYmCi0JCQkJaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX3R5cGUgJiYKLQkJ
CQludGZzX2FyZV9uYW1lc19lcXVhbCh1bmFtZSwgdW5hbWVfbGVuLAotCQkJCShudGZzY2hhciop
JmllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZSwKLQkJCQlpZS0+a2V5LmZpbGVfbmFtZS5maWxl
X25hbWVfbGVuZ3RoLAotCQkJCUlHTk9SRV9DQVNFLCB2b2wtPnVwY2FzZSwgdm9sLT51cGNhc2Vf
bGVuKSkgewotCQkJaW50IG5hbWVfc2l6ZSA9IHNpemVvZihudGZzX25hbWUpOwotCQkJdTggdHlw
ZSA9IGllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZV90eXBlOwotCQkJdTggbGVuID0gaWUtPmtl
eS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0aDsKLQotCQkJLyogT25seSBvbmUgY2FzZSBpbnNl
bnNpdGl2ZSBtYXRjaGluZyBuYW1lIGFsbG93ZWQuICovCi0JCQlpZiAobmFtZSkgewotCQkJCW50
ZnNfZXJyb3Ioc2IsICJGb3VuZCBhbHJlYWR5IGFsbG9jYXRlZCBuYW1lICIKLQkJCQkJCSJpbiBw
aGFzZSAyLiBQbGVhc2UgcnVuIGNoa2RzayAiCi0JCQkJCQkiYW5kIGlmIHRoYXQgZG9lc24ndCBm
aW5kIGFueSAiCi0JCQkJCQkiZXJyb3JzIHBsZWFzZSByZXBvcnQgeW91IHNhdyAiCi0JCQkJCQki
dGhpcyBtZXNzYWdlIHRvICIKLQkJCQkJCSJsaW51eC1udGZzLWRldkBsaXN0cy4iCi0JCQkJCQki
c291cmNlZm9yZ2UubmV0LiIpOwotCQkJCXVubG9ja19wYWdlKHBhZ2UpOwotCQkJCW50ZnNfdW5t
YXBfcGFnZShwYWdlKTsKLQkJCQlnb3RvIGRpcl9lcnJfb3V0OwotCQkJfQotCi0JCQlpZiAodHlw
ZSAhPSBGSUxFX05BTUVfRE9TKQotCQkJCW5hbWVfc2l6ZSArPSBsZW4gKiBzaXplb2YobnRmc2No
YXIpOwotCQkJbmFtZSA9IGttYWxsb2MobmFtZV9zaXplLCBHRlBfTk9GUyk7Ci0JCQlpZiAoIW5h
bWUpIHsKLQkJCQllcnIgPSAtRU5PTUVNOwotCQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCQl9Ci0J
CQluYW1lLT5tcmVmID0gbGU2NF90b19jcHUoaWUtPmRhdGEuZGlyLmluZGV4ZWRfZmlsZSk7Ci0J
CQluYW1lLT50eXBlID0gdHlwZTsKLQkJCWlmICh0eXBlICE9IEZJTEVfTkFNRV9ET1MpIHsKLQkJ
CQluYW1lLT5sZW4gPSBsZW47Ci0JCQkJbWVtY3B5KG5hbWUtPm5hbWUsIGllLT5rZXkuZmlsZV9u
YW1lLmZpbGVfbmFtZSwKLQkJCQkJCWxlbiAqIHNpemVvZihudGZzY2hhcikpOwotCQkJfSBlbHNl
Ci0JCQkJbmFtZS0+bGVuID0gMDsKLQkJCSpyZXMgPSBuYW1lOwotCQl9Ci0JCS8qCi0JCSAqIE5v
dCBhIHBlcmZlY3QgbWF0Y2gsIG5lZWQgdG8gZG8gZnVsbCBibG93biBjb2xsYXRpb24gc28gd2UK
LQkJICoga25vdyB3aGljaCB3YXkgaW4gdGhlIEIrdHJlZSB3ZSBoYXZlIHRvIGdvLgotCQkgKi8K
LQkJcmMgPSBudGZzX2NvbGxhdGVfbmFtZXModW5hbWUsIHVuYW1lX2xlbiwKLQkJCQkobnRmc2No
YXIqKSZpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWUsCi0JCQkJaWUtPmtleS5maWxlX25hbWUu
ZmlsZV9uYW1lX2xlbmd0aCwgMSwKLQkJCQlJR05PUkVfQ0FTRSwgdm9sLT51cGNhc2UsIHZvbC0+
dXBjYXNlX2xlbik7Ci0JCS8qCi0JCSAqIElmIHVuYW1lIGNvbGxhdGVzIGJlZm9yZSB0aGUgbmFt
ZSBvZiB0aGUgY3VycmVudCBlbnRyeSwgdGhlcmUKLQkJICogaXMgZGVmaW5pdGVseSBubyBzdWNo
IG5hbWUgaW4gdGhpcyBpbmRleCBidXQgd2UgbWlnaHQgbmVlZCB0bwotCQkgKiBkZXNjZW5kIGlu
dG8gdGhlIEIrdHJlZSBzbyB3ZSBqdXN0IGJyZWFrIG91dCBvZiB0aGUgbG9vcC4KLQkJICovCi0J
CWlmIChyYyA9PSAtMSkKLQkJCWJyZWFrOwotCQkvKiBUaGUgbmFtZXMgYXJlIG5vdCBlcXVhbCwg
Y29udGludWUgdGhlIHNlYXJjaC4gKi8KLQkJaWYgKHJjKQotCQkJY29udGludWU7Ci0JCS8qCi0J
CSAqIE5hbWVzIG1hdGNoIHdpdGggY2FzZSBpbnNlbnNpdGl2ZSBjb21wYXJpc29uLCBub3cgdHJ5
IHRoZQotCQkgKiBjYXNlIHNlbnNpdGl2ZSBjb21wYXJpc29uLCB3aGljaCBpcyByZXF1aXJlZCBm
b3IgcHJvcGVyCi0JCSAqIGNvbGxhdGlvbi4KLQkJICovCi0JCXJjID0gbnRmc19jb2xsYXRlX25h
bWVzKHVuYW1lLCB1bmFtZV9sZW4sCi0JCQkJKG50ZnNjaGFyKikmaWUtPmtleS5maWxlX25hbWUu
ZmlsZV9uYW1lLAotCQkJCWllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZV9sZW5ndGgsIDEsCi0J
CQkJQ0FTRV9TRU5TSVRJVkUsIHZvbC0+dXBjYXNlLCB2b2wtPnVwY2FzZV9sZW4pOwotCQlpZiAo
cmMgPT0gLTEpCi0JCQlicmVhazsKLQkJaWYgKHJjKQotCQkJY29udGludWU7Ci0JCS8qCi0JCSAq
IFBlcmZlY3QgbWF0Y2gsIHRoaXMgd2lsbCBuZXZlciBoYXBwZW4gYXMgdGhlCi0JCSAqIG50ZnNf
YXJlX25hbWVzX2VxdWFsKCkgY2FsbCB3aWxsIGhhdmUgZ290dGVuIGEgbWF0Y2ggYnV0IHdlCi0J
CSAqIHN0aWxsIHRyZWF0IGl0IGNvcnJlY3RseS4KLQkJICovCi0JCWdvdG8gZm91bmRfaXQyOwot
CX0KLQkvKgotCSAqIFdlIGhhdmUgZmluaXNoZWQgd2l0aCB0aGlzIGluZGV4IGJ1ZmZlciB3aXRo
b3V0IHN1Y2Nlc3MuIENoZWNrIGZvcgotCSAqIHRoZSBwcmVzZW5jZSBvZiBhIGNoaWxkIG5vZGUu
Ci0JICovCi0JaWYgKGllLT5mbGFncyAmIElOREVYX0VOVFJZX05PREUpIHsKLQkJaWYgKChpYS0+
aW5kZXguZmxhZ3MgJiBOT0RFX01BU0spID09IExFQUZfTk9ERSkgewotCQkJbnRmc19lcnJvcihz
YiwgIkluZGV4IGVudHJ5IHdpdGggY2hpbGQgbm9kZSBmb3VuZCBpbiAiCi0JCQkJCSJhIGxlYWYg
bm9kZSBpbiBkaXJlY3RvcnkgaW5vZGUgMHglbHguIiwKLQkJCQkJZGlyX25pLT5tZnRfbm8pOwot
CQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQkvKiBDaGlsZCBub2RlIHByZXNlbnQsIGRlc2Nl
bmQgaW50byBpdC4gKi8KLQkJb2xkX3ZjbiA9IHZjbjsKLQkJdmNuID0gc2xlNjRfdG9fY3B1cCgo
c2xlNjQqKSgodTgqKWllICsKLQkJCQlsZTE2X3RvX2NwdShpZS0+bGVuZ3RoKSAtIDgpKTsKLQkJ
aWYgKHZjbiA+PSAwKSB7Ci0JCQkvKiBJZiB2Y24gaXMgaW4gdGhlIHNhbWUgcGFnZSBjYWNoZSBw
YWdlIGFzIG9sZF92Y24gd2UKLQkJCSAqIHJlY3ljbGUgdGhlIG1hcHBlZCBwYWdlLiAqLwotCQkJ
aWYgKG9sZF92Y24gPDwgdm9sLT5jbHVzdGVyX3NpemVfYml0cyA+PgotCQkJCQlQQUdFX1NISUZU
ID09IHZjbiA8PAotCQkJCQl2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID4+Ci0JCQkJCVBBR0VfU0hJ
RlQpCi0JCQkJZ290byBmYXN0X2Rlc2NlbmRfaW50b19jaGlsZF9ub2RlOwotCQkJdW5sb2NrX3Bh
Z2UocGFnZSk7Ci0JCQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JCQlnb3RvIGRlc2NlbmRfaW50
b19jaGlsZF9ub2RlOwotCQl9Ci0JCW50ZnNfZXJyb3Ioc2IsICJOZWdhdGl2ZSBjaGlsZCBub2Rl
IHZjbiBpbiBkaXJlY3RvcnkgaW5vZGUgIgotCQkJCSIweCVseC4iLCBkaXJfbmktPm1mdF9ubyk7
Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qCi0JICogTm8gY2hpbGQgbm9kZSBwcmVzZW50
LCByZXR1cm4gLUVOT0VOVCwgdW5sZXNzIHdlIGhhdmUgZ290IGEgbWF0Y2hpbmcKLQkgKiBuYW1l
IGNhY2hlZCBpbiBuYW1lIGluIHdoaWNoIGNhc2UgcmV0dXJuIHRoZSBtZnQgcmVmZXJlbmNlCi0J
ICogYXNzb2NpYXRlZCB3aXRoIGl0LgotCSAqLwotCWlmIChuYW1lKSB7Ci0JCXVubG9ja19wYWdl
KHBhZ2UpOwotCQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JCXJldHVybiBuYW1lLT5tcmVmOwot
CX0KLQludGZzX2RlYnVnKCJFbnRyeSBub3QgZm91bmQuIik7Ci0JZXJyID0gLUVOT0VOVDsKLXVu
bV9lcnJfb3V0OgotCXVubG9ja19wYWdlKHBhZ2UpOwotCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsK
LWVycl9vdXQ6Ci0JaWYgKCFlcnIpCi0JCWVyciA9IC1FSU87Ci0JaWYgKGN0eCkKLQkJbnRmc19h
dHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JaWYgKG0pCi0JCXVubWFwX21mdF9yZWNvcmQoZGly
X25pKTsKLQlpZiAobmFtZSkgewotCQlrZnJlZShuYW1lKTsKLQkJKnJlcyA9IE5VTEw7Ci0JfQot
CXJldHVybiBFUlJfTVJFRihlcnIpOwotZGlyX2Vycl9vdXQ6Ci0JbnRmc19lcnJvcihzYiwgIkNv
cnJ1cHQgZGlyZWN0b3J5LiAgQWJvcnRpbmcgbG9va3VwLiIpOwotCWdvdG8gZXJyX291dDsKLX0K
LQotI2lmIDAKLQotLy8gVE9ETzogKEFJQSkKLS8vIFRoZSBhbGdvcml0aG0gZW1iZWRkZWQgaW4g
dGhpcyBjb2RlIHdpbGwgYmUgcmVxdWlyZWQgZm9yIHRoZSB0aW1lIHdoZW4gd2UKLS8vIHdhbnQg
dG8gc3VwcG9ydCBhZGRpbmcgb2YgZW50cmllcyB0byBkaXJlY3Rvcmllcywgd2hlcmUgd2UgcmVx
dWlyZSBjb3JyZWN0Ci0vLyBjb2xsYXRpb24gb2YgZmlsZSBuYW1lcyBpbiBvcmRlciBub3QgdG8g
Y2F1c2UgY29ycnVwdGlvbiBvZiB0aGUgZmlsZXN5c3RlbS4KLQotLyoqCi0gKiBudGZzX2xvb2t1
cF9pbm9kZV9ieV9uYW1lIC0gZmluZCBhbiBpbm9kZSBpbiBhIGRpcmVjdG9yeSBnaXZlbiBpdHMg
bmFtZQotICogQGRpcl9uaToJbnRmcyBpbm9kZSBvZiB0aGUgZGlyZWN0b3J5IGluIHdoaWNoIHRv
IHNlYXJjaCBmb3IgdGhlIG5hbWUKLSAqIEB1bmFtZToJVW5pY29kZSBuYW1lIGZvciB3aGljaCB0
byBzZWFyY2ggaW4gdGhlIGRpcmVjdG9yeQotICogQHVuYW1lX2xlbjoJbGVuZ3RoIG9mIHRoZSBu
YW1lIEB1bmFtZSBpbiBVbmljb2RlIGNoYXJhY3RlcnMKLSAqCi0gKiBMb29rIGZvciBhbiBpbm9k
ZSB3aXRoIG5hbWUgQHVuYW1lIGluIHRoZSBkaXJlY3Rvcnkgd2l0aCBpbm9kZSBAZGlyX25pLgot
ICogbnRmc19sb29rdXBfaW5vZGVfYnlfbmFtZSgpIHdhbGtzIHRoZSBjb250ZW50cyBvZiB0aGUg
ZGlyZWN0b3J5IGxvb2tpbmcgZm9yCi0gKiB0aGUgVW5pY29kZSBuYW1lLiBJZiB0aGUgbmFtZSBp
cyBmb3VuZCBpbiB0aGUgZGlyZWN0b3J5LCB0aGUgY29ycmVzcG9uZGluZwotICogaW5vZGUgbnVt
YmVyICg+PSAwKSBpcyByZXR1cm5lZCBhcyBhIG1mdCByZWZlcmVuY2UgaW4gY3B1IGZvcm1hdCwg
aS5lLiBpdAotICogaXMgYSA2NC1iaXQgbnVtYmVyIGNvbnRhaW5pbmcgdGhlIHNlcXVlbmNlIG51
bWJlci4KLSAqCi0gKiBPbiBlcnJvciwgYSBuZWdhdGl2ZSB2YWx1ZSBpcyByZXR1cm5lZCBjb3Jy
ZXNwb25kaW5nIHRvIHRoZSBlcnJvciBjb2RlLiBJbgotICogcGFydGljdWxhciBpZiB0aGUgaW5v
ZGUgaXMgbm90IGZvdW5kIC1FTk9FTlQgaXMgcmV0dXJuZWQuIE5vdGUgdGhhdCB5b3UKLSAqIGNh
bid0IGp1c3QgY2hlY2sgdGhlIHJldHVybiB2YWx1ZSBmb3IgYmVpbmcgbmVnYXRpdmUsIHlvdSBo
YXZlIHRvIGNoZWNrIHRoZQotICogaW5vZGUgbnVtYmVyIGZvciBiZWluZyBuZWdhdGl2ZSB3aGlj
aCB5b3UgY2FuIGV4dHJhY3QgdXNpbmcgTVJFQyhyZXR1cm4KLSAqIHZhbHVlKS4KLSAqCi0gKiBO
b3RlLCBAdW5hbWVfbGVuIGRvZXMgbm90IGluY2x1ZGUgdGhlIChvcHRpb25hbCkgdGVybWluYXRp
bmcgTlVMTCBjaGFyYWN0ZXIuCi0gKi8KLXU2NCBudGZzX2xvb2t1cF9pbm9kZV9ieV9uYW1lKG50
ZnNfaW5vZGUgKmRpcl9uaSwgY29uc3QgbnRmc2NoYXIgKnVuYW1lLAotCQljb25zdCBpbnQgdW5h
bWVfbGVuKQotewotCW50ZnNfdm9sdW1lICp2b2wgPSBkaXJfbmktPnZvbDsKLQlzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnNiID0gdm9sLT5zYjsKLQlNRlRfUkVDT1JEICptOwotCUlOREVYX1JPT1QgKmly
OwotCUlOREVYX0VOVFJZICppZTsKLQlJTkRFWF9BTExPQ0FUSU9OICppYTsKLQl1OCAqaW5kZXhf
ZW5kOwotCXU2NCBtcmVmOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHg7Ci0JaW50IGVyciwg
cmM7Ci0JSUdOT1JFX0NBU0VfQk9PTCBpYzsKLQlWQ04gdmNuLCBvbGRfdmNuOwotCXN0cnVjdCBh
ZGRyZXNzX3NwYWNlICppYV9tYXBwaW5nOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXU4ICprYWRk
cjsKLQotCS8qIEdldCBob2xkIG9mIHRoZSBtZnQgcmVjb3JkIGZvciB0aGUgZGlyZWN0b3J5LiAq
LwotCW0gPSBtYXBfbWZ0X3JlY29yZChkaXJfbmkpOwotCWlmIChJU19FUlIobSkpIHsKLQkJbnRm
c19lcnJvcihzYiwgIm1hcF9tZnRfcmVjb3JkKCkgZmFpbGVkIHdpdGggZXJyb3IgY29kZSAlbGQu
IiwKLQkJCQktUFRSX0VSUihtKSk7Ci0JCXJldHVybiBFUlJfTVJFRihQVFJfRVJSKG0pKTsKLQl9
Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KGRpcl9uaSwgbSk7Ci0JaWYgKCFjdHgp
IHsKLQkJZXJyID0gLUVOT01FTTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQkvKiBGaW5kIHRoZSBp
bmRleCByb290IGF0dHJpYnV0ZSBpbiB0aGUgbWZ0IHJlY29yZC4gKi8KLQllcnIgPSBudGZzX2F0
dHJfbG9va3VwKEFUX0lOREVYX1JPT1QsIEkzMCwgNCwgQ0FTRV9TRU5TSVRJVkUsIDAsIE5VTEws
Ci0JCQkwLCBjdHgpOwotCWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VO
VCkgewotCQkJbnRmc19lcnJvcihzYiwgIkluZGV4IHJvb3QgYXR0cmlidXRlIG1pc3NpbmcgaW4g
IgotCQkJCQkiZGlyZWN0b3J5IGlub2RlIDB4JWx4LiIsCi0JCQkJCWRpcl9uaS0+bWZ0X25vKTsK
LQkJCWVyciA9IC1FSU87Ci0JCX0KLQkJZ290byBlcnJfb3V0OwotCX0KLQkvKiBHZXQgdG8gdGhl
IGluZGV4IHJvb3QgdmFsdWUgKGl0J3MgYmVlbiB2ZXJpZmllZCBpbiByZWFkX2lub2RlKS4gKi8K
LQlpciA9IChJTkRFWF9ST09UKikoKHU4KiljdHgtPmF0dHIgKwotCQkJbGUxNl90b19jcHUoY3R4
LT5hdHRyLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkpOwotCWluZGV4X2VuZCA9ICh1OCop
JmlyLT5pbmRleCArIGxlMzJfdG9fY3B1KGlyLT5pbmRleC5pbmRleF9sZW5ndGgpOwotCS8qIFRo
ZSBmaXJzdCBpbmRleCBlbnRyeS4gKi8KLQlpZSA9IChJTkRFWF9FTlRSWSopKCh1OCopJmlyLT5p
bmRleCArCi0JCQlsZTMyX3RvX2NwdShpci0+aW5kZXguZW50cmllc19vZmZzZXQpKTsKLQkvKgot
CSAqIExvb3AgdW50aWwgd2UgZXhjZWVkIHZhbGlkIG1lbW9yeSAoY29ycnVwdGlvbiBjYXNlKSBv
ciB1bnRpbCB3ZQotCSAqIHJlYWNoIHRoZSBsYXN0IGVudHJ5LgotCSAqLwotCWZvciAoOzsgaWUg
PSAoSU5ERVhfRU5UUlkqKSgodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkpKSB7Ci0J
CS8qIEJvdW5kcyBjaGVja3MuICovCi0JCWlmICgodTgqKWllIDwgKHU4KiljdHgtPm1yZWMgfHwg
KHU4KilpZSArCi0JCQkJc2l6ZW9mKElOREVYX0VOVFJZX0hFQURFUikgPiBpbmRleF9lbmQgfHwK
LQkJCQkodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmtleV9sZW5ndGgpID4KLQkJCQlpbmRleF9l
bmQpCi0JCQlnb3RvIGRpcl9lcnJfb3V0OwotCQkvKgotCQkgKiBUaGUgbGFzdCBlbnRyeSBjYW5u
b3QgY29udGFpbiBhIG5hbWUuIEl0IGNhbiBob3dldmVyIGNvbnRhaW4KLQkJICogYSBwb2ludGVy
IHRvIGEgY2hpbGQgbm9kZSBpbiB0aGUgQit0cmVlIHNvIHdlIGp1c3QgYnJlYWsgb3V0LgotCQkg
Ki8KLQkJaWYgKGllLT5mbGFncyAmIElOREVYX0VOVFJZX0VORCkKLQkJCWJyZWFrOwotCQkvKgot
CQkgKiBJZiB0aGUgY3VycmVudCBlbnRyeSBoYXMgYSBuYW1lIHR5cGUgb2YgUE9TSVgsIHRoZSBu
YW1lIGlzCi0JCSAqIGNhc2Ugc2Vuc2l0aXZlIGFuZCBub3Qgb3RoZXJ3aXNlLiBUaGlzIGhhcyB0
aGUgZWZmZWN0IG9mIHVzCi0JCSAqIG5vdCBiZWluZyBhYmxlIHRvIGFjY2VzcyBhbnkgUE9TSVgg
ZmlsZSBuYW1lcyB3aGljaCBjb2xsYXRlCi0JCSAqIGFmdGVyIHRoZSBub24tUE9TSVggb25lIHdo
ZW4gdGhleSBvbmx5IGRpZmZlciBpbiBjYXNlLCBidXQKLQkJICogYW55b25lIGRvaW5nIHNjcmV3
eSBzdHVmZiBsaWtlIHRoYXQgZGVzZXJ2ZXMgdG8gYnVybiBpbgotCQkgKiBoZWxsLi4uIERvaW5n
IHRoYXQga2luZCBvZiBzdHVmZiBvbiBOVDQgYWN0dWFsbHkgY2F1c2VzCi0JCSAqIGNvcnJ1cHRp
b24gb24gdGhlIHBhcnRpdGlvbiBldmVuIHdoZW4gdXNpbmcgU1A2YSBhbmQgTGludXgKLQkJICog
aXMgbm90IGludm9sdmVkIGF0IGFsbC4KLQkJICovCi0JCWljID0gaWUtPmtleS5maWxlX25hbWUu
ZmlsZV9uYW1lX3R5cGUgPyBJR05PUkVfQ0FTRSA6Ci0JCQkJQ0FTRV9TRU5TSVRJVkU7Ci0JCS8q
Ci0JCSAqIElmIHRoZSBuYW1lcyBtYXRjaCBwZXJmZWN0bHksIHdlIGFyZSBkb25lIGFuZCByZXR1
cm4gdGhlCi0JCSAqIG1mdCByZWZlcmVuY2Ugb2YgdGhlIGlub2RlIChpLmUuIHRoZSBpbm9kZSBu
dW1iZXIgdG9nZXRoZXIKLQkJICogd2l0aCB0aGUgc2VxdWVuY2UgbnVtYmVyIGZvciBjb25zaXN0
ZW5jeSBjaGVja2luZy4gV2UKLQkJICogY29udmVydCBpdCB0byBjcHUgZm9ybWF0IGJlZm9yZSBy
ZXR1cm5pbmcuCi0JCSAqLwotCQlpZiAobnRmc19hcmVfbmFtZXNfZXF1YWwodW5hbWUsIHVuYW1l
X2xlbiwKLQkJCQkobnRmc2NoYXIqKSZpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWUsCi0JCQkJ
aWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0aCwgaWMsCi0JCQkJdm9sLT51cGNhc2Us
IHZvbC0+dXBjYXNlX2xlbikpIHsKLWZvdW5kX2l0OgotCQkJbXJlZiA9IGxlNjRfdG9fY3B1KGll
LT5kYXRhLmRpci5pbmRleGVkX2ZpbGUpOwotCQkJbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0
eCk7Ci0JCQl1bm1hcF9tZnRfcmVjb3JkKGRpcl9uaSk7Ci0JCQlyZXR1cm4gbXJlZjsKLQkJfQot
CQkvKgotCQkgKiBOb3QgYSBwZXJmZWN0IG1hdGNoLCBuZWVkIHRvIGRvIGZ1bGwgYmxvd24gY29s
bGF0aW9uIHNvIHdlCi0JCSAqIGtub3cgd2hpY2ggd2F5IGluIHRoZSBCK3RyZWUgd2UgaGF2ZSB0
byBnby4KLQkJICovCi0JCXJjID0gbnRmc19jb2xsYXRlX25hbWVzKHVuYW1lLCB1bmFtZV9sZW4s
Ci0JCQkJKG50ZnNjaGFyKikmaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lLAotCQkJCWllLT5r
ZXkuZmlsZV9uYW1lLmZpbGVfbmFtZV9sZW5ndGgsIDEsCi0JCQkJSUdOT1JFX0NBU0UsIHZvbC0+
dXBjYXNlLCB2b2wtPnVwY2FzZV9sZW4pOwotCQkvKgotCQkgKiBJZiB1bmFtZSBjb2xsYXRlcyBi
ZWZvcmUgdGhlIG5hbWUgb2YgdGhlIGN1cnJlbnQgZW50cnksIHRoZXJlCi0JCSAqIGlzIGRlZmlu
aXRlbHkgbm8gc3VjaCBuYW1lIGluIHRoaXMgaW5kZXggYnV0IHdlIG1pZ2h0IG5lZWQgdG8KLQkJ
ICogZGVzY2VuZCBpbnRvIHRoZSBCK3RyZWUgc28gd2UganVzdCBicmVhayBvdXQgb2YgdGhlIGxv
b3AuCi0JCSAqLwotCQlpZiAocmMgPT0gLTEpCi0JCQlicmVhazsKLQkJLyogVGhlIG5hbWVzIGFy
ZSBub3QgZXF1YWwsIGNvbnRpbnVlIHRoZSBzZWFyY2guICovCi0JCWlmIChyYykKLQkJCWNvbnRp
bnVlOwotCQkvKgotCQkgKiBOYW1lcyBtYXRjaCB3aXRoIGNhc2UgaW5zZW5zaXRpdmUgY29tcGFy
aXNvbiwgbm93IHRyeSB0aGUKLQkJICogY2FzZSBzZW5zaXRpdmUgY29tcGFyaXNvbiwgd2hpY2gg
aXMgcmVxdWlyZWQgZm9yIHByb3BlcgotCQkgKiBjb2xsYXRpb24uCi0JCSAqLwotCQlyYyA9IG50
ZnNfY29sbGF0ZV9uYW1lcyh1bmFtZSwgdW5hbWVfbGVuLAotCQkJCShudGZzY2hhciopJmllLT5r
ZXkuZmlsZV9uYW1lLmZpbGVfbmFtZSwKLQkJCQlpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWVf
bGVuZ3RoLCAxLAotCQkJCUNBU0VfU0VOU0lUSVZFLCB2b2wtPnVwY2FzZSwgdm9sLT51cGNhc2Vf
bGVuKTsKLQkJaWYgKHJjID09IC0xKQotCQkJYnJlYWs7Ci0JCWlmIChyYykKLQkJCWNvbnRpbnVl
OwotCQkvKgotCQkgKiBQZXJmZWN0IG1hdGNoLCB0aGlzIHdpbGwgbmV2ZXIgaGFwcGVuIGFzIHRo
ZQotCQkgKiBudGZzX2FyZV9uYW1lc19lcXVhbCgpIGNhbGwgd2lsbCBoYXZlIGdvdHRlbiBhIG1h
dGNoIGJ1dCB3ZQotCQkgKiBzdGlsbCB0cmVhdCBpdCBjb3JyZWN0bHkuCi0JCSAqLwotCQlnb3Rv
IGZvdW5kX2l0OwotCX0KLQkvKgotCSAqIFdlIGhhdmUgZmluaXNoZWQgd2l0aCB0aGlzIGluZGV4
IHdpdGhvdXQgc3VjY2Vzcy4gQ2hlY2sgZm9yIHRoZQotCSAqIHByZXNlbmNlIG9mIGEgY2hpbGQg
bm9kZS4KLQkgKi8KLQlpZiAoIShpZS0+ZmxhZ3MgJiBJTkRFWF9FTlRSWV9OT0RFKSkgewotCQkv
KiBObyBjaGlsZCBub2RlLCByZXR1cm4gLUVOT0VOVC4gKi8KLQkJZXJyID0gLUVOT0VOVDsKLQkJ
Z290byBlcnJfb3V0OwotCX0gLyogQ2hpbGQgbm9kZSBwcmVzZW50LCBkZXNjZW5kIGludG8gaXQu
ICovCi0JLyogQ29uc2lzdGVuY3kgY2hlY2s6IFZlcmlmeSB0aGF0IGFuIGluZGV4IGFsbG9jYXRp
b24gZXhpc3RzLiAqLwotCWlmICghTklub0luZGV4QWxsb2NQcmVzZW50KGRpcl9uaSkpIHsKLQkJ
bnRmc19lcnJvcihzYiwgIk5vIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlIGJ1dCBpbmRleCBl
bnRyeSAiCi0JCQkJInJlcXVpcmVzIG9uZS4gRGlyZWN0b3J5IGlub2RlIDB4JWx4IGlzICIKLQkJ
CQkiY29ycnVwdCBvciBkcml2ZXIgYnVnLiIsIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byBlcnJf
b3V0OwotCX0KLQkvKiBHZXQgdGhlIHN0YXJ0aW5nIHZjbiBvZiB0aGUgaW5kZXhfYmxvY2sgaG9s
ZGluZyB0aGUgY2hpbGQgbm9kZS4gKi8KLQl2Y24gPSBzbGU2NF90b19jcHVwKCh1OCopaWUgKyBs
ZTE2X3RvX2NwdShpZS0+bGVuZ3RoKSAtIDgpOwotCWlhX21hcHBpbmcgPSBWRlNfSShkaXJfbmkp
LT5pX21hcHBpbmc7Ci0JLyoKLQkgKiBXZSBhcmUgZG9uZSB3aXRoIHRoZSBpbmRleCByb290IGFu
ZCB0aGUgbWZ0IHJlY29yZC4gUmVsZWFzZSB0aGVtLAotCSAqIG90aGVyd2lzZSB3ZSBkZWFkbG9j
ayB3aXRoIG50ZnNfbWFwX3BhZ2UoKS4KLQkgKi8KLQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgo
Y3R4KTsKLQl1bm1hcF9tZnRfcmVjb3JkKGRpcl9uaSk7Ci0JbSA9IE5VTEw7Ci0JY3R4ID0gTlVM
TDsKLWRlc2NlbmRfaW50b19jaGlsZF9ub2RlOgotCS8qCi0JICogQ29udmVydCB2Y24gdG8gaW5k
ZXggaW50byB0aGUgaW5kZXggYWxsb2NhdGlvbiBhdHRyaWJ1dGUgaW4gdW5pdHMKLQkgKiBvZiBQ
QUdFX1NJWkUgYW5kIG1hcCB0aGUgcGFnZSBjYWNoZSBwYWdlLCByZWFkaW5nIGl0IGZyb20KLQkg
KiBkaXNrIGlmIG5lY2Vzc2FyeS4KLQkgKi8KLQlwYWdlID0gbnRmc19tYXBfcGFnZShpYV9tYXBw
aW5nLCB2Y24gPDwKLQkJCWRpcl9uaS0+aXR5cGUuaW5kZXgudmNuX3NpemVfYml0cyA+PiBQQUdF
X1NISUZUKTsKLQlpZiAoSVNfRVJSKHBhZ2UpKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJGYWlsZWQg
dG8gbWFwIGRpcmVjdG9yeSBpbmRleCBwYWdlLCBlcnJvciAlbGQuIiwKLQkJCQktUFRSX0VSUihw
YWdlKSk7Ci0JCWVyciA9IFBUUl9FUlIocGFnZSk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JbG9j
a19wYWdlKHBhZ2UpOwotCWthZGRyID0gKHU4KilwYWdlX2FkZHJlc3MocGFnZSk7Ci1mYXN0X2Rl
c2NlbmRfaW50b19jaGlsZF9ub2RlOgotCS8qIEdldCB0byB0aGUgaW5kZXggYWxsb2NhdGlvbiBi
bG9jay4gKi8KLQlpYSA9IChJTkRFWF9BTExPQ0FUSU9OKikoa2FkZHIgKyAoKHZjbiA8PAotCQkJ
ZGlyX25pLT5pdHlwZS5pbmRleC52Y25fc2l6ZV9iaXRzKSAmIH5QQUdFX01BU0spKTsKLQkvKiBC
b3VuZHMgY2hlY2tzLiAqLwotCWlmICgodTgqKWlhIDwga2FkZHIgfHwgKHU4KilpYSA+IGthZGRy
ICsgUEFHRV9TSVpFKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJPdXQgb2YgYm91bmRzIGNoZWNrIGZh
aWxlZC4gQ29ycnVwdCBkaXJlY3RvcnkgIgotCQkJCSJpbm9kZSAweCVseCBvciBkcml2ZXIgYnVn
LiIsIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JLyogQ2F0Y2gg
bXVsdGkgc2VjdG9yIHRyYW5zZmVyIGZpeHVwIGVycm9ycy4gKi8KLQlpZiAodW5saWtlbHkoIW50
ZnNfaXNfaW5keF9yZWNvcmQoaWEtPm1hZ2ljKSkpIHsKLQkJbnRmc19lcnJvcihzYiwgIkRpcmVj
dG9yeSBpbmRleCByZWNvcmQgd2l0aCB2Y24gMHglbGx4IGlzICIKLQkJCQkiY29ycnVwdC4gIENv
cnJ1cHQgaW5vZGUgMHglbHguICBSdW4gY2hrZHNrLiIsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9u
Zyl2Y24sIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JaWYgKHNs
ZTY0X3RvX2NwdShpYS0+aW5kZXhfYmxvY2tfdmNuKSAhPSB2Y24pIHsKLQkJbnRmc19lcnJvcihz
YiwgIkFjdHVhbCBWQ04gKDB4JWxseCkgb2YgaW5kZXggYnVmZmVyIGlzICIKLQkJCQkiZGlmZmVy
ZW50IGZyb20gZXhwZWN0ZWQgVkNOICgweCVsbHgpLiAiCi0JCQkJIkRpcmVjdG9yeSBpbm9kZSAw
eCVseCBpcyBjb3JydXB0IG9yIGRyaXZlciAiCi0JCQkJImJ1Zy4iLCAodW5zaWduZWQgbG9uZyBs
b25nKQotCQkJCXNsZTY0X3RvX2NwdShpYS0+aW5kZXhfYmxvY2tfdmNuKSwKLQkJCQkodW5zaWdu
ZWQgbG9uZyBsb25nKXZjbiwgZGlyX25pLT5tZnRfbm8pOwotCQlnb3RvIHVubV9lcnJfb3V0Owot
CX0KLQlpZiAobGUzMl90b19jcHUoaWEtPmluZGV4LmFsbG9jYXRlZF9zaXplKSArIDB4MTggIT0K
LQkJCWRpcl9uaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSkgewotCQludGZzX2Vycm9yKHNiLCAi
SW5kZXggYnVmZmVyIChWQ04gMHglbGx4KSBvZiBkaXJlY3RvcnkgaW5vZGUgIgotCQkJCSIweCVs
eCBoYXMgYSBzaXplICgldSkgZGlmZmVyaW5nIGZyb20gdGhlICIKLQkJCQkiZGlyZWN0b3J5IHNw
ZWNpZmllZCBzaXplICgldSkuIERpcmVjdG9yeSAiCi0JCQkJImlub2RlIGlzIGNvcnJ1cHQgb3Ig
ZHJpdmVyIGJ1Zy4iLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdmNuLCBkaXJfbmktPm1mdF9u
bywKLQkJCQlsZTMyX3RvX2NwdShpYS0+aW5kZXguYWxsb2NhdGVkX3NpemUpICsgMHgxOCwKLQkJ
CQlkaXJfbmktPml0eXBlLmluZGV4LmJsb2NrX3NpemUpOwotCQlnb3RvIHVubV9lcnJfb3V0Owot
CX0KLQlpbmRleF9lbmQgPSAodTgqKWlhICsgZGlyX25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXpl
OwotCWlmIChpbmRleF9lbmQgPiBrYWRkciArIFBBR0VfU0laRSkgewotCQludGZzX2Vycm9yKHNi
LCAiSW5kZXggYnVmZmVyIChWQ04gMHglbGx4KSBvZiBkaXJlY3RvcnkgaW5vZGUgIgotCQkJCSIw
eCVseCBjcm9zc2VzIHBhZ2UgYm91bmRhcnkuIEltcG9zc2libGUhICIKLQkJCQkiQ2Fubm90IGFj
Y2VzcyEgVGhpcyBpcyBwcm9iYWJseSBhIGJ1ZyBpbiB0aGUgIgotCQkJCSJkcml2ZXIuIiwgKHVu
c2lnbmVkIGxvbmcgbG9uZyl2Y24sCi0JCQkJZGlyX25pLT5tZnRfbm8pOwotCQlnb3RvIHVubV9l
cnJfb3V0OwotCX0KLQlpbmRleF9lbmQgPSAodTgqKSZpYS0+aW5kZXggKyBsZTMyX3RvX2NwdShp
YS0+aW5kZXguaW5kZXhfbGVuZ3RoKTsKLQlpZiAoaW5kZXhfZW5kID4gKHU4KilpYSArIGRpcl9u
aS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSkgewotCQludGZzX2Vycm9yKHNiLCAiU2l6ZSBvZiBp
bmRleCBidWZmZXIgKFZDTiAweCVsbHgpIG9mIGRpcmVjdG9yeSAiCi0JCQkJImlub2RlIDB4JWx4
IGV4Y2VlZHMgbWF4aW11bSBzaXplLiIsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2Y24sIGRp
cl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JLyogVGhlIGZpcnN0IGlu
ZGV4IGVudHJ5LiAqLwotCWllID0gKElOREVYX0VOVFJZKikoKHU4KikmaWEtPmluZGV4ICsKLQkJ
CWxlMzJfdG9fY3B1KGlhLT5pbmRleC5lbnRyaWVzX29mZnNldCkpOwotCS8qCi0JICogSXRlcmF0
ZSBzaW1pbGFyIHRvIGFib3ZlIGJpZyBsb29wIGJ1dCBhcHBsaWVkIHRvIGluZGV4IGJ1ZmZlciwg
dGh1cwotCSAqIGxvb3AgdW50aWwgd2UgZXhjZWVkIHZhbGlkIG1lbW9yeSAoY29ycnVwdGlvbiBj
YXNlKSBvciB1bnRpbCB3ZQotCSAqIHJlYWNoIHRoZSBsYXN0IGVudHJ5LgotCSAqLwotCWZvciAo
OzsgaWUgPSAoSU5ERVhfRU5UUlkqKSgodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkp
KSB7Ci0JCS8qIEJvdW5kcyBjaGVjay4gKi8KLQkJaWYgKCh1OCopaWUgPCAodTgqKWlhIHx8ICh1
OCopaWUgKwotCQkJCXNpemVvZihJTkRFWF9FTlRSWV9IRUFERVIpID4gaW5kZXhfZW5kIHx8Ci0J
CQkJKHU4KilpZSArIGxlMTZfdG9fY3B1KGllLT5rZXlfbGVuZ3RoKSA+Ci0JCQkJaW5kZXhfZW5k
KSB7Ci0JCQludGZzX2Vycm9yKHNiLCAiSW5kZXggZW50cnkgb3V0IG9mIGJvdW5kcyBpbiAiCi0J
CQkJCSJkaXJlY3RvcnkgaW5vZGUgMHglbHguIiwKLQkJCQkJZGlyX25pLT5tZnRfbm8pOwotCQkJ
Z290byB1bm1fZXJyX291dDsKLQkJfQotCQkvKgotCQkgKiBUaGUgbGFzdCBlbnRyeSBjYW5ub3Qg
Y29udGFpbiBhIG5hbWUuIEl0IGNhbiBob3dldmVyIGNvbnRhaW4KLQkJICogYSBwb2ludGVyIHRv
IGEgY2hpbGQgbm9kZSBpbiB0aGUgQit0cmVlIHNvIHdlIGp1c3QgYnJlYWsgb3V0LgotCQkgKi8K
LQkJaWYgKGllLT5mbGFncyAmIElOREVYX0VOVFJZX0VORCkKLQkJCWJyZWFrOwotCQkvKgotCQkg
KiBJZiB0aGUgY3VycmVudCBlbnRyeSBoYXMgYSBuYW1lIHR5cGUgb2YgUE9TSVgsIHRoZSBuYW1l
IGlzCi0JCSAqIGNhc2Ugc2Vuc2l0aXZlIGFuZCBub3Qgb3RoZXJ3aXNlLiBUaGlzIGhhcyB0aGUg
ZWZmZWN0IG9mIHVzCi0JCSAqIG5vdCBiZWluZyBhYmxlIHRvIGFjY2VzcyBhbnkgUE9TSVggZmls
ZSBuYW1lcyB3aGljaCBjb2xsYXRlCi0JCSAqIGFmdGVyIHRoZSBub24tUE9TSVggb25lIHdoZW4g
dGhleSBvbmx5IGRpZmZlciBpbiBjYXNlLCBidXQKLQkJICogYW55b25lIGRvaW5nIHNjcmV3eSBz
dHVmZiBsaWtlIHRoYXQgZGVzZXJ2ZXMgdG8gYnVybiBpbgotCQkgKiBoZWxsLi4uIERvaW5nIHRo
YXQga2luZCBvZiBzdHVmZiBvbiBOVDQgYWN0dWFsbHkgY2F1c2VzCi0JCSAqIGNvcnJ1cHRpb24g
b24gdGhlIHBhcnRpdGlvbiBldmVuIHdoZW4gdXNpbmcgU1A2YSBhbmQgTGludXgKLQkJICogaXMg
bm90IGludm9sdmVkIGF0IGFsbC4KLQkJICovCi0JCWljID0gaWUtPmtleS5maWxlX25hbWUuZmls
ZV9uYW1lX3R5cGUgPyBJR05PUkVfQ0FTRSA6Ci0JCQkJQ0FTRV9TRU5TSVRJVkU7Ci0JCS8qCi0J
CSAqIElmIHRoZSBuYW1lcyBtYXRjaCBwZXJmZWN0bHksIHdlIGFyZSBkb25lIGFuZCByZXR1cm4g
dGhlCi0JCSAqIG1mdCByZWZlcmVuY2Ugb2YgdGhlIGlub2RlIChpLmUuIHRoZSBpbm9kZSBudW1i
ZXIgdG9nZXRoZXIKLQkJICogd2l0aCB0aGUgc2VxdWVuY2UgbnVtYmVyIGZvciBjb25zaXN0ZW5j
eSBjaGVja2luZy4gV2UKLQkJICogY29udmVydCBpdCB0byBjcHUgZm9ybWF0IGJlZm9yZSByZXR1
cm5pbmcuCi0JCSAqLwotCQlpZiAobnRmc19hcmVfbmFtZXNfZXF1YWwodW5hbWUsIHVuYW1lX2xl
biwKLQkJCQkobnRmc2NoYXIqKSZpZS0+a2V5LmZpbGVfbmFtZS5maWxlX25hbWUsCi0JCQkJaWUt
PmtleS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0aCwgaWMsCi0JCQkJdm9sLT51cGNhc2UsIHZv
bC0+dXBjYXNlX2xlbikpIHsKLWZvdW5kX2l0MjoKLQkJCW1yZWYgPSBsZTY0X3RvX2NwdShpZS0+
ZGF0YS5kaXIuaW5kZXhlZF9maWxlKTsKLQkJCXVubG9ja19wYWdlKHBhZ2UpOwotCQkJbnRmc191
bm1hcF9wYWdlKHBhZ2UpOwotCQkJcmV0dXJuIG1yZWY7Ci0JCX0KLQkJLyoKLQkJICogTm90IGEg
cGVyZmVjdCBtYXRjaCwgbmVlZCB0byBkbyBmdWxsIGJsb3duIGNvbGxhdGlvbiBzbyB3ZQotCQkg
KiBrbm93IHdoaWNoIHdheSBpbiB0aGUgQit0cmVlIHdlIGhhdmUgdG8gZ28uCi0JCSAqLwotCQly
YyA9IG50ZnNfY29sbGF0ZV9uYW1lcyh1bmFtZSwgdW5hbWVfbGVuLAotCQkJCShudGZzY2hhciop
JmllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZSwKLQkJCQlpZS0+a2V5LmZpbGVfbmFtZS5maWxl
X25hbWVfbGVuZ3RoLCAxLAotCQkJCUlHTk9SRV9DQVNFLCB2b2wtPnVwY2FzZSwgdm9sLT51cGNh
c2VfbGVuKTsKLQkJLyoKLQkJICogSWYgdW5hbWUgY29sbGF0ZXMgYmVmb3JlIHRoZSBuYW1lIG9m
IHRoZSBjdXJyZW50IGVudHJ5LCB0aGVyZQotCQkgKiBpcyBkZWZpbml0ZWx5IG5vIHN1Y2ggbmFt
ZSBpbiB0aGlzIGluZGV4IGJ1dCB3ZSBtaWdodCBuZWVkIHRvCi0JCSAqIGRlc2NlbmQgaW50byB0
aGUgQit0cmVlIHNvIHdlIGp1c3QgYnJlYWsgb3V0IG9mIHRoZSBsb29wLgotCQkgKi8KLQkJaWYg
KHJjID09IC0xKQotCQkJYnJlYWs7Ci0JCS8qIFRoZSBuYW1lcyBhcmUgbm90IGVxdWFsLCBjb250
aW51ZSB0aGUgc2VhcmNoLiAqLwotCQlpZiAocmMpCi0JCQljb250aW51ZTsKLQkJLyoKLQkJICog
TmFtZXMgbWF0Y2ggd2l0aCBjYXNlIGluc2Vuc2l0aXZlIGNvbXBhcmlzb24sIG5vdyB0cnkgdGhl
Ci0JCSAqIGNhc2Ugc2Vuc2l0aXZlIGNvbXBhcmlzb24sIHdoaWNoIGlzIHJlcXVpcmVkIGZvciBw
cm9wZXIKLQkJICogY29sbGF0aW9uLgotCQkgKi8KLQkJcmMgPSBudGZzX2NvbGxhdGVfbmFtZXMo
dW5hbWUsIHVuYW1lX2xlbiwKLQkJCQkobnRmc2NoYXIqKSZpZS0+a2V5LmZpbGVfbmFtZS5maWxl
X25hbWUsCi0JCQkJaWUtPmtleS5maWxlX25hbWUuZmlsZV9uYW1lX2xlbmd0aCwgMSwKLQkJCQlD
QVNFX1NFTlNJVElWRSwgdm9sLT51cGNhc2UsIHZvbC0+dXBjYXNlX2xlbik7Ci0JCWlmIChyYyA9
PSAtMSkKLQkJCWJyZWFrOwotCQlpZiAocmMpCi0JCQljb250aW51ZTsKLQkJLyoKLQkJICogUGVy
ZmVjdCBtYXRjaCwgdGhpcyB3aWxsIG5ldmVyIGhhcHBlbiBhcyB0aGUKLQkJICogbnRmc19hcmVf
bmFtZXNfZXF1YWwoKSBjYWxsIHdpbGwgaGF2ZSBnb3R0ZW4gYSBtYXRjaCBidXQgd2UKLQkJICog
c3RpbGwgdHJlYXQgaXQgY29ycmVjdGx5LgotCQkgKi8KLQkJZ290byBmb3VuZF9pdDI7Ci0JfQot
CS8qCi0JICogV2UgaGF2ZSBmaW5pc2hlZCB3aXRoIHRoaXMgaW5kZXggYnVmZmVyIHdpdGhvdXQg
c3VjY2Vzcy4gQ2hlY2sgZm9yCi0JICogdGhlIHByZXNlbmNlIG9mIGEgY2hpbGQgbm9kZS4KLQkg
Ki8KLQlpZiAoaWUtPmZsYWdzICYgSU5ERVhfRU5UUllfTk9ERSkgewotCQlpZiAoKGlhLT5pbmRl
eC5mbGFncyAmIE5PREVfTUFTSykgPT0gTEVBRl9OT0RFKSB7Ci0JCQludGZzX2Vycm9yKHNiLCAi
SW5kZXggZW50cnkgd2l0aCBjaGlsZCBub2RlIGZvdW5kIGluICIKLQkJCQkJImEgbGVhZiBub2Rl
IGluIGRpcmVjdG9yeSBpbm9kZSAweCVseC4iLAotCQkJCQlkaXJfbmktPm1mdF9ubyk7Ci0JCQln
b3RvIHVubV9lcnJfb3V0OwotCQl9Ci0JCS8qIENoaWxkIG5vZGUgcHJlc2VudCwgZGVzY2VuZCBp
bnRvIGl0LiAqLwotCQlvbGRfdmNuID0gdmNuOwotCQl2Y24gPSBzbGU2NF90b19jcHVwKCh1OCop
aWUgKyBsZTE2X3RvX2NwdShpZS0+bGVuZ3RoKSAtIDgpOwotCQlpZiAodmNuID49IDApIHsKLQkJ
CS8qIElmIHZjbiBpcyBpbiB0aGUgc2FtZSBwYWdlIGNhY2hlIHBhZ2UgYXMgb2xkX3ZjbiB3ZQot
CQkJICogcmVjeWNsZSB0aGUgbWFwcGVkIHBhZ2UuICovCi0JCQlpZiAob2xkX3ZjbiA8PCB2b2wt
PmNsdXN0ZXJfc2l6ZV9iaXRzID4+Ci0JCQkJCVBBR0VfU0hJRlQgPT0gdmNuIDw8Ci0JCQkJCXZv
bC0+Y2x1c3Rlcl9zaXplX2JpdHMgPj4KLQkJCQkJUEFHRV9TSElGVCkKLQkJCQlnb3RvIGZhc3Rf
ZGVzY2VuZF9pbnRvX2NoaWxkX25vZGU7Ci0JCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJCW50ZnNf
dW5tYXBfcGFnZShwYWdlKTsKLQkJCWdvdG8gZGVzY2VuZF9pbnRvX2NoaWxkX25vZGU7Ci0JCX0K
LQkJbnRmc19lcnJvcihzYiwgIk5lZ2F0aXZlIGNoaWxkIG5vZGUgdmNuIGluIGRpcmVjdG9yeSBp
bm9kZSAiCi0JCQkJIjB4JWx4LiIsIGRpcl9uaS0+bWZ0X25vKTsKLQkJZ290byB1bm1fZXJyX291
dDsKLQl9Ci0JLyogTm8gY2hpbGQgbm9kZSwgcmV0dXJuIC1FTk9FTlQuICovCi0JbnRmc19kZWJ1
ZygiRW50cnkgbm90IGZvdW5kLiIpOwotCWVyciA9IC1FTk9FTlQ7Ci11bm1fZXJyX291dDoKLQl1
bmxvY2tfcGFnZShwYWdlKTsKLQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci1lcnJfb3V0OgotCWlm
ICghZXJyKQotCQllcnIgPSAtRUlPOwotCWlmIChjdHgpCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNo
X2N0eChjdHgpOwotCWlmIChtKQotCQl1bm1hcF9tZnRfcmVjb3JkKGRpcl9uaSk7Ci0JcmV0dXJu
IEVSUl9NUkVGKGVycik7Ci1kaXJfZXJyX291dDoKLQludGZzX2Vycm9yKHNiLCAiQ29ycnVwdCBk
aXJlY3RvcnkuIEFib3J0aW5nIGxvb2t1cC4iKTsKLQlnb3RvIGVycl9vdXQ7Ci19Ci0KLSNlbmRp
ZgotCi0vKioKLSAqIG50ZnNfZmlsbGRpciAtIG50ZnMgc3BlY2lmaWMgZmlsbGRpciBtZXRob2QK
LSAqIEB2b2w6CWN1cnJlbnQgbnRmcyB2b2x1bWUKLSAqIEBuZGlyOgludGZzIGlub2RlIG9mIGN1
cnJlbnQgZGlyZWN0b3J5Ci0gKiBAaWFfcGFnZToJcGFnZSBpbiB3aGljaCB0aGUgaW5kZXggYWxs
b2NhdGlvbiBidWZmZXIgQGllIGlzIGluIHJlc2lkZXMKLSAqIEBpZToJCWN1cnJlbnQgaW5kZXgg
ZW50cnkKLSAqIEBuYW1lOglidWZmZXIgdG8gdXNlIGZvciB0aGUgY29udmVydGVkIG5hbWUKLSAq
IEBhY3RvcjoJd2hhdCB0byBmZWVkIHRoZSBlbnRyaWVzIHRvCi0gKgotICogQ29udmVydCB0aGUg
VW5pY29kZSBAbmFtZSB0byB0aGUgbG9hZGVkIE5MUyBhbmQgcGFzcyBpdCB0byB0aGUgQGZpbGxk
aXIKLSAqIGNhbGxiYWNrLgotICoKLSAqIElmIEBpYV9wYWdlIGlzIG5vdCBOVUxMIGl0IGlzIHRo
ZSBsb2NrZWQgcGFnZSBjb250YWluaW5nIHRoZSBpbmRleAotICogYWxsb2NhdGlvbiBibG9jayBj
b250YWluaW5nIHRoZSBpbmRleCBlbnRyeSBAaWUuCi0gKgotICogTm90ZSwgd2UgZHJvcCAoYW5k
IHRoZW4gcmVhY3F1aXJlKSB0aGUgcGFnZSBsb2NrIG9uIEBpYV9wYWdlIGFjcm9zcyB0aGUKLSAq
IEBmaWxsZGlyKCkgY2FsbCBvdGhlcndpc2Ugd2Ugd291bGQgZGVhZGxvY2sgd2l0aCBORlNkIHdo
ZW4gaXQgY2FsbHMgLT5sb29rdXAKLSAqIHNpbmNlIG50ZnNfbG9va3VwKCkgd2lsbCBsb2NrIHRo
ZSBzYW1lIHBhZ2UuICBBcyBhbiBvcHRpbWl6YXRpb24sIHdlIGRvIG5vdAotICogcmV0YWtlIHRo
ZSBsb2NrIGlmIHdlIGFyZSByZXR1cm5pbmcgYSBub24temVybyB2YWx1ZSBhcyBudGZzX3JlYWRk
aXIoKQotICogd291bGQgbmVlZCB0byBkcm9wIHRoZSBsb2NrIGltbWVkaWF0ZWx5IGFueXdheS4K
LSAqLwotc3RhdGljIGlubGluZSBpbnQgbnRmc19maWxsZGlyKG50ZnNfdm9sdW1lICp2b2wsCi0J
CW50ZnNfaW5vZGUgKm5kaXIsIHN0cnVjdCBwYWdlICppYV9wYWdlLCBJTkRFWF9FTlRSWSAqaWUs
Ci0JCXU4ICpuYW1lLCBzdHJ1Y3QgZGlyX2NvbnRleHQgKmFjdG9yKQotewotCXVuc2lnbmVkIGxv
bmcgbXJlZjsKLQlpbnQgbmFtZV9sZW47Ci0JdW5zaWduZWQgZHRfdHlwZTsKLQlGSUxFX05BTUVf
VFlQRV9GTEFHUyBuYW1lX3R5cGU7Ci0KLQluYW1lX3R5cGUgPSBpZS0+a2V5LmZpbGVfbmFtZS5m
aWxlX25hbWVfdHlwZTsKLQlpZiAobmFtZV90eXBlID09IEZJTEVfTkFNRV9ET1MpIHsKLQkJbnRm
c19kZWJ1ZygiU2tpcHBpbmcgRE9TIG5hbWUgc3BhY2UgZW50cnkuIik7Ci0JCXJldHVybiAwOwot
CX0KLQlpZiAoTVJFRl9MRShpZS0+ZGF0YS5kaXIuaW5kZXhlZF9maWxlKSA9PSBGSUxFX3Jvb3Qp
IHsKLQkJbnRmc19kZWJ1ZygiU2tpcHBpbmcgcm9vdCBkaXJlY3Rvcnkgc2VsZiByZWZlcmVuY2Ug
ZW50cnkuIik7Ci0JCXJldHVybiAwOwotCX0KLQlpZiAoTVJFRl9MRShpZS0+ZGF0YS5kaXIuaW5k
ZXhlZF9maWxlKSA8IEZJTEVfZmlyc3RfdXNlciAmJgotCQkJIU5Wb2xTaG93U3lzdGVtRmlsZXMo
dm9sKSkgewotCQludGZzX2RlYnVnKCJTa2lwcGluZyBzeXN0ZW0gZmlsZS4iKTsKLQkJcmV0dXJu
IDA7Ci0JfQotCW5hbWVfbGVuID0gbnRmc191Y3N0b25scyh2b2wsIChudGZzY2hhciopJmllLT5r
ZXkuZmlsZV9uYW1lLmZpbGVfbmFtZSwKLQkJCWllLT5rZXkuZmlsZV9uYW1lLmZpbGVfbmFtZV9s
ZW5ndGgsICZuYW1lLAotCQkJTlRGU19NQVhfTkFNRV9MRU4gKiBOTFNfTUFYX0NIQVJTRVRfU0la
RSArIDEpOwotCWlmIChuYW1lX2xlbiA8PSAwKSB7Ci0JCW50ZnNfd2FybmluZyh2b2wtPnNiLCAi
U2tpcHBpbmcgdW5yZXByZXNlbnRhYmxlIGlub2RlIDB4JWxseC4iLAotCQkJCShsb25nIGxvbmcp
TVJFRl9MRShpZS0+ZGF0YS5kaXIuaW5kZXhlZF9maWxlKSk7Ci0JCXJldHVybiAwOwotCX0KLQlp
ZiAoaWUtPmtleS5maWxlX25hbWUuZmlsZV9hdHRyaWJ1dGVzICYKLQkJCUZJTEVfQVRUUl9EVVBf
RklMRV9OQU1FX0lOREVYX1BSRVNFTlQpCi0JCWR0X3R5cGUgPSBEVF9ESVI7Ci0JZWxzZQotCQlk
dF90eXBlID0gRFRfUkVHOwotCW1yZWYgPSBNUkVGX0xFKGllLT5kYXRhLmRpci5pbmRleGVkX2Zp
bGUpOwotCS8qCi0JICogRHJvcCB0aGUgcGFnZSBsb2NrIG90aGVyd2lzZSB3ZSBkZWFkbG9jayB3
aXRoIE5GUyB3aGVuIGl0IGNhbGxzCi0JICogLT5sb29rdXAgc2luY2UgbnRmc19sb29rdXAoKSB3
aWxsIGxvY2sgdGhlIHNhbWUgcGFnZS4KLQkgKi8KLQlpZiAoaWFfcGFnZSkKLQkJdW5sb2NrX3Bh
Z2UoaWFfcGFnZSk7Ci0JbnRmc19kZWJ1ZygiQ2FsbGluZyBmaWxsZGlyIGZvciAlcyB3aXRoIGxl
biAlaSwgZnBvcyAweCVsbHgsIGlub2RlICIKLQkJCSIweCVseCwgRFRfJXMuIiwgbmFtZSwgbmFt
ZV9sZW4sIGFjdG9yLT5wb3MsIG1yZWYsCi0JCQlkdF90eXBlID09IERUX0RJUiA/ICJESVIiIDog
IlJFRyIpOwotCWlmICghZGlyX2VtaXQoYWN0b3IsIG5hbWUsIG5hbWVfbGVuLCBtcmVmLCBkdF90
eXBlKSkKLQkJcmV0dXJuIDE7Ci0JLyogUmVsb2NrIHRoZSBwYWdlIGJ1dCBub3QgaWYgd2UgYXJl
IGFib3J0aW5nIC0+cmVhZGRpci4gKi8KLQlpZiAoaWFfcGFnZSkKLQkJbG9ja19wYWdlKGlhX3Bh
Z2UpOwotCXJldHVybiAwOwotfQotCi0vKgotICogV2UgdXNlIHRoZSBzYW1lIGJhc2ljIGFwcHJv
YWNoIGFzIHRoZSBvbGQgTlRGUyBkcml2ZXIsIGkuZS4gd2UgcGFyc2UgdGhlCi0gKiBpbmRleCBy
b290IGVudHJpZXMgYW5kIHRoZW4gdGhlIGluZGV4IGFsbG9jYXRpb24gZW50cmllcyB0aGF0IGFy
ZSBtYXJrZWQKLSAqIGFzIGluIHVzZSBpbiB0aGUgaW5kZXggYml0bWFwLgotICoKLSAqIFdoaWxl
IHRoaXMgd2lsbCByZXR1cm4gdGhlIG5hbWVzIGluIHJhbmRvbSBvcmRlciB0aGlzIGRvZXNuJ3Qg
bWF0dGVyIGZvcgotICogLT5yZWFkZGlyIGJ1dCBPVE9IIHJlc3VsdHMgaW4gYSBmYXN0ZXIgLT5y
ZWFkZGlyLgotICoKLSAqIFZGUyBjYWxscyAtPnJlYWRkaXIgd2l0aG91dCBCS0wgYnV0IHdpdGgg
aV9tdXRleCBoZWxkLiBUaGlzIHByb3RlY3RzIHRoZSBWRlMKLSAqIHBhcnRzIChlLmcuIC0+Zl9w
b3MgYW5kIC0+aV9zaXplLCBhbmQgaXQgYWxzbyBwcm90ZWN0cyBhZ2FpbnN0IGRpcmVjdG9yeQot
ICogbW9kaWZpY2F0aW9ucykuCi0gKgotICogTG9ja2luZzogIC0gQ2FsbGVyIG11c3QgaG9sZCBp
X211dGV4IG9uIHRoZSBkaXJlY3RvcnkuCi0gKgkgICAgIC0gRWFjaCBwYWdlIGNhY2hlIHBhZ2Ug
aW4gdGhlIGluZGV4IGFsbG9jYXRpb24gbWFwcGluZyBtdXN0IGJlCi0gKgkgICAgICAgbG9ja2Vk
IHdoaWxzdCBiZWluZyBhY2Nlc3NlZCBvdGhlcndpc2Ugd2UgbWF5IGZpbmQgYSBjb3JydXB0Ci0g
KgkgICAgICAgcGFnZSBkdWUgdG8gaXQgYmVpbmcgdW5kZXIgLT53cml0ZXBhZ2UgYXQgdGhlIG1v
bWVudCB3aGljaAotICoJICAgICAgIGFwcGxpZXMgdGhlIG1zdCBwcm90ZWN0aW9uIGZpeHVwcyBi
ZWZvcmUgd3JpdGluZyBvdXQgYW5kIHRoZW4KLSAqCSAgICAgICByZW1vdmVzIHRoZW0gYWdhaW4g
YWZ0ZXIgdGhlIHdyaXRlIGlzIGNvbXBsZXRlIGFmdGVyIHdoaWNoIGl0IAotICoJICAgICAgIHVu
bG9ja3MgdGhlIHBhZ2UuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19yZWFkZGlyKHN0cnVjdCBmaWxl
ICpmaWxlLCBzdHJ1Y3QgZGlyX2NvbnRleHQgKmFjdG9yKQotewotCXM2NCBpYV9wb3MsIGlhX3N0
YXJ0LCBwcmV2X2lhX3BvcywgYm1wX3BvczsKLQlsb2ZmX3QgaV9zaXplOwotCXN0cnVjdCBpbm9k
ZSAqYm1wX3ZpLCAqdmRpciA9IGZpbGVfaW5vZGUoZmlsZSk7Ci0Jc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzYiA9IHZkaXItPmlfc2I7Ci0JbnRmc19pbm9kZSAqbmRpciA9IE5URlNfSSh2ZGlyKTsKLQlu
dGZzX3ZvbHVtZSAqdm9sID0gTlRGU19TQihzYik7Ci0JTUZUX1JFQ09SRCAqbTsKLQlJTkRFWF9S
T09UICppciA9IE5VTEw7Ci0JSU5ERVhfRU5UUlkgKmllOwotCUlOREVYX0FMTE9DQVRJT04gKmlh
OwotCXU4ICpuYW1lID0gTlVMTDsKLQlpbnQgcmMsIGVyciwgaXJfcG9zLCBjdXJfYm1wX3BvczsK
LQlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqaWFfbWFwcGluZywgKmJtcF9tYXBwaW5nOwotCXN0cnVj
dCBwYWdlICpibXBfcGFnZSA9IE5VTEwsICppYV9wYWdlID0gTlVMTDsKLQl1OCAqa2FkZHIsICpi
bXAsICppbmRleF9lbmQ7Ci0JbnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eDsKLQotCW50ZnNfZGVi
dWcoIkVudGVyaW5nIGZvciBpbm9kZSAweCVseCwgZnBvcyAweCVsbHguIiwKLQkJCXZkaXItPmlf
aW5vLCBhY3Rvci0+cG9zKTsKLQlyYyA9IGVyciA9IDA7Ci0JLyogQXJlIHdlIGF0IGVuZCBvZiBk
aXIgeWV0PyAqLwotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKHZkaXIpOwotCWlmIChhY3Rvci0+cG9z
ID49IGlfc2l6ZSArIHZvbC0+bWZ0X3JlY29yZF9zaXplKQotCQlyZXR1cm4gMDsKLQkvKiBFbXVs
YXRlIC4gYW5kIC4uIGZvciBhbGwgZGlyZWN0b3JpZXMuICovCi0JaWYgKCFkaXJfZW1pdF9kb3Rz
KGZpbGUsIGFjdG9yKSkKLQkJcmV0dXJuIDA7Ci0JbSA9IE5VTEw7Ci0JY3R4ID0gTlVMTDsKLQkv
KgotCSAqIEFsbG9jYXRlIGEgYnVmZmVyIHRvIHN0b3JlIHRoZSBjdXJyZW50IG5hbWUgYmVpbmcg
cHJvY2Vzc2VkCi0JICogY29udmVydGVkIHRvIGZvcm1hdCBkZXRlcm1pbmVkIGJ5IGN1cnJlbnQg
TkxTLgotCSAqLwotCW5hbWUgPSBrbWFsbG9jKE5URlNfTUFYX05BTUVfTEVOICogTkxTX01BWF9D
SEFSU0VUX1NJWkUgKyAxLCBHRlBfTk9GUyk7Ci0JaWYgKHVubGlrZWx5KCFuYW1lKSkgewotCQll
cnIgPSAtRU5PTUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIEFyZSB3ZSBqdW1waW5nIHN0
cmFpZ2h0IGludG8gdGhlIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlPyAqLwotCWlmIChhY3Rv
ci0+cG9zID49IHZvbC0+bWZ0X3JlY29yZF9zaXplKQotCQlnb3RvIHNraXBfaW5kZXhfcm9vdDsK
LQkvKiBHZXQgaG9sZCBvZiB0aGUgbWZ0IHJlY29yZCBmb3IgdGhlIGRpcmVjdG9yeS4gKi8KLQlt
ID0gbWFwX21mdF9yZWNvcmQobmRpcik7Ci0JaWYgKElTX0VSUihtKSkgewotCQllcnIgPSBQVFJf
RVJSKG0pOwotCQltID0gTlVMTDsKLQkJZ290byBlcnJfb3V0OwotCX0KLQljdHggPSBudGZzX2F0
dHJfZ2V0X3NlYXJjaF9jdHgobmRpciwgbSk7Ci0JaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCWVy
ciA9IC1FTk9NRU07Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JLyogR2V0IHRoZSBvZmZzZXQgaW50
byB0aGUgaW5kZXggcm9vdCBhdHRyaWJ1dGUuICovCi0JaXJfcG9zID0gKHM2NClhY3Rvci0+cG9z
OwotCS8qIEZpbmQgdGhlIGluZGV4IHJvb3QgYXR0cmlidXRlIGluIHRoZSBtZnQgcmVjb3JkLiAq
LwotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfSU5ERVhfUk9PVCwgSTMwLCA0LCBDQVNFX1NF
TlNJVElWRSwgMCwgTlVMTCwKLQkJCTAsIGN0eCk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJ
bnRmc19lcnJvcihzYiwgIkluZGV4IHJvb3QgYXR0cmlidXRlIG1pc3NpbmcgaW4gZGlyZWN0b3J5
ICIKLQkJCQkiaW5vZGUgMHglbHguIiwgdmRpci0+aV9pbm8pOwotCQlnb3RvIGVycl9vdXQ7Ci0J
fQotCS8qCi0JICogQ29weSB0aGUgaW5kZXggcm9vdCBhdHRyaWJ1dGUgdmFsdWUgdG8gYSBidWZm
ZXIgc28gdGhhdCB3ZSBjYW4gcHV0Ci0JICogdGhlIHNlYXJjaCBjb250ZXh0IGFuZCB1bm1hcCB0
aGUgbWZ0IHJlY29yZCBiZWZvcmUgY2FsbGluZyB0aGUKLQkgKiBmaWxsZGlyKCkgY2FsbGJhY2su
ICBXZSBuZWVkIHRvIGRvIHRoaXMgYmVjYXVzZSBvZiBORlNkIHdoaWNoIGNhbGxzCi0JICogLT5s
b29rdXAoKSBmcm9tIGl0cyBmaWxsZGlyIGNhbGxiYWNrKCkgYW5kIHRoaXMgY2F1c2VzIE5URlMg
dG8KLQkgKiBkZWFkbG9jayBhcyBudGZzX2xvb2t1cCgpIG1hcHMgdGhlIG1mdCByZWNvcmQgb2Yg
dGhlIGRpcmVjdG9yeSBhbmQKLQkgKiB3ZSBoYXZlIGdvdCBpdCBtYXBwZWQgaGVyZSBhbHJlYWR5
LiAgVGhlIG9ubHkgc29sdXRpb24gaXMgZm9yIHVzIHRvCi0JICogdW5tYXAgdGhlIG1mdCByZWNv
cmQgaGVyZSBzbyB0aGF0IGEgY2FsbCB0byBudGZzX2xvb2t1cCgpIGlzIGFibGUgdG8KLQkgKiBt
YXAgdGhlIG1mdCByZWNvcmQgd2l0aG91dCBkZWFkbG9ja2luZy4KLQkgKi8KLQlyYyA9IGxlMzJf
dG9fY3B1KGN0eC0+YXR0ci0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpOwotCWlyID0ga21h
bGxvYyhyYywgR0ZQX05PRlMpOwotCWlmICh1bmxpa2VseSghaXIpKSB7Ci0JCWVyciA9IC1FTk9N
RU07Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JLyogQ29weSB0aGUgaW5kZXggcm9vdCB2YWx1ZSAo
aXQgaGFzIGJlZW4gdmVyaWZpZWQgaW4gcmVhZF9pbm9kZSkuICovCi0JbWVtY3B5KGlyLCAodTgq
KWN0eC0+YXR0ciArCi0JCQlsZTE2X3RvX2NwdShjdHgtPmF0dHItPmRhdGEucmVzaWRlbnQudmFs
dWVfb2Zmc2V0KSwgcmMpOwotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCXVubWFw
X21mdF9yZWNvcmQobmRpcik7Ci0JY3R4ID0gTlVMTDsKLQltID0gTlVMTDsKLQlpbmRleF9lbmQg
PSAodTgqKSZpci0+aW5kZXggKyBsZTMyX3RvX2NwdShpci0+aW5kZXguaW5kZXhfbGVuZ3RoKTsK
LQkvKiBUaGUgZmlyc3QgaW5kZXggZW50cnkuICovCi0JaWUgPSAoSU5ERVhfRU5UUlkqKSgodTgq
KSZpci0+aW5kZXggKwotCQkJbGUzMl90b19jcHUoaXItPmluZGV4LmVudHJpZXNfb2Zmc2V0KSk7
Ci0JLyoKLQkgKiBMb29wIHVudGlsIHdlIGV4Y2VlZCB2YWxpZCBtZW1vcnkgKGNvcnJ1cHRpb24g
Y2FzZSkgb3IgdW50aWwgd2UKLQkgKiByZWFjaCB0aGUgbGFzdCBlbnRyeSBvciB1bnRpbCBmaWxs
ZGlyIHRlbGxzIHVzIGl0IGhhcyBoYWQgZW5vdWdoCi0JICogb3Igc2lnbmFscyBhbiBlcnJvciAo
Ym90aCBjb3ZlcmVkIGJ5IHRoZSByYyB0ZXN0KS4KLQkgKi8KLQlmb3IgKDs7IGllID0gKElOREVY
X0VOVFJZKikoKHU4KilpZSArIGxlMTZfdG9fY3B1KGllLT5sZW5ndGgpKSkgewotCQludGZzX2Rl
YnVnKCJJbiBpbmRleCByb290LCBvZmZzZXQgMHglenguIiwgKHU4KilpZSAtICh1OCopaXIpOwot
CQkvKiBCb3VuZHMgY2hlY2tzLiAqLwotCQlpZiAodW5saWtlbHkoKHU4KilpZSA8ICh1OCopaXIg
fHwgKHU4KilpZSArCi0JCQkJc2l6ZW9mKElOREVYX0VOVFJZX0hFQURFUikgPiBpbmRleF9lbmQg
fHwKLQkJCQkodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmtleV9sZW5ndGgpID4KLQkJCQlpbmRl
eF9lbmQpKQotCQkJZ290byBlcnJfb3V0OwotCQkvKiBUaGUgbGFzdCBlbnRyeSBjYW5ub3QgY29u
dGFpbiBhIG5hbWUuICovCi0JCWlmIChpZS0+ZmxhZ3MgJiBJTkRFWF9FTlRSWV9FTkQpCi0JCQli
cmVhazsKLQkJLyogU2tpcCBpbmRleCByb290IGVudHJ5IGlmIGNvbnRpbnVpbmcgcHJldmlvdXMg
cmVhZGRpci4gKi8KLQkJaWYgKGlyX3BvcyA+ICh1OCopaWUgLSAodTgqKWlyKQotCQkJY29udGlu
dWU7Ci0JCS8qIEFkdmFuY2UgdGhlIHBvc2l0aW9uIGV2ZW4gaWYgZ29pbmcgdG8gc2tpcCB0aGUg
ZW50cnkuICovCi0JCWFjdG9yLT5wb3MgPSAodTgqKWllIC0gKHU4KilpcjsKLQkJLyogU3VibWl0
IHRoZSBuYW1lIHRvIHRoZSBmaWxsZGlyIGNhbGxiYWNrLiAqLwotCQlyYyA9IG50ZnNfZmlsbGRp
cih2b2wsIG5kaXIsIE5VTEwsIGllLCBuYW1lLCBhY3Rvcik7Ci0JCWlmIChyYykgewotCQkJa2Zy
ZWUoaXIpOwotCQkJZ290byBhYm9ydDsKLQkJfQotCX0KLQkvKiBXZSBhcmUgZG9uZSB3aXRoIHRo
ZSBpbmRleCByb290IGFuZCBjYW4gZnJlZSB0aGUgYnVmZmVyLiAqLwotCWtmcmVlKGlyKTsKLQlp
ciA9IE5VTEw7Ci0JLyogSWYgdGhlcmUgaXMgbm8gaW5kZXggYWxsb2NhdGlvbiBhdHRyaWJ1dGUg
d2UgYXJlIGZpbmlzaGVkLiAqLwotCWlmICghTklub0luZGV4QWxsb2NQcmVzZW50KG5kaXIpKQot
CQlnb3RvIEVPRDsKLQkvKiBBZHZhbmNlIGZwb3MgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgaW5k
ZXggYWxsb2NhdGlvbi4gKi8KLQlhY3Rvci0+cG9zID0gdm9sLT5tZnRfcmVjb3JkX3NpemU7Ci1z
a2lwX2luZGV4X3Jvb3Q6Ci0Ja2FkZHIgPSBOVUxMOwotCXByZXZfaWFfcG9zID0gLTFMTDsKLQkv
KiBHZXQgdGhlIG9mZnNldCBpbnRvIHRoZSBpbmRleCBhbGxvY2F0aW9uIGF0dHJpYnV0ZS4gKi8K
LQlpYV9wb3MgPSAoczY0KWFjdG9yLT5wb3MgLSB2b2wtPm1mdF9yZWNvcmRfc2l6ZTsKLQlpYV9t
YXBwaW5nID0gdmRpci0+aV9tYXBwaW5nOwotCW50ZnNfZGVidWcoIklub2RlIDB4JWx4LCBnZXR0
aW5nIGluZGV4IGJpdG1hcC4iLCB2ZGlyLT5pX2lubyk7Ci0JYm1wX3ZpID0gbnRmc19hdHRyX2ln
ZXQodmRpciwgQVRfQklUTUFQLCBJMzAsIDQpOwotCWlmIChJU19FUlIoYm1wX3ZpKSkgewotCQlu
dGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGdldCBiaXRtYXAgYXR0cmlidXRlLiIpOwotCQllcnIg
PSBQVFJfRVJSKGJtcF92aSk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JYm1wX21hcHBpbmcgPSBi
bXBfdmktPmlfbWFwcGluZzsKLQkvKiBHZXQgdGhlIHN0YXJ0aW5nIGJpdG1hcCBiaXQgcG9zaXRp
b24gYW5kIHNhbml0eSBjaGVjayBpdC4gKi8KLQlibXBfcG9zID0gaWFfcG9zID4+IG5kaXItPml0
eXBlLmluZGV4LmJsb2NrX3NpemVfYml0czsKLQlpZiAodW5saWtlbHkoYm1wX3BvcyA+PiAzID49
IGlfc2l6ZV9yZWFkKGJtcF92aSkpKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJDdXJyZW50IGluZGV4
IGFsbG9jYXRpb24gcG9zaXRpb24gZXhjZWVkcyAiCi0JCQkJImluZGV4IGJpdG1hcCBzaXplLiIp
OwotCQlnb3RvIGlwdXRfZXJyX291dDsKLQl9Ci0JLyogR2V0IHRoZSBzdGFydGluZyBiaXQgcG9z
aXRpb24gaW4gdGhlIGN1cnJlbnQgYml0bWFwIHBhZ2UuICovCi0JY3VyX2JtcF9wb3MgPSBibXBf
cG9zICYgKChQQUdFX1NJWkUgKiA4KSAtIDEpOwotCWJtcF9wb3MgJj0gfih1NjQpKChQQUdFX1NJ
WkUgKiA4KSAtIDEpOwotZ2V0X25leHRfYm1wX3BhZ2U6Ci0JbnRmc19kZWJ1ZygiUmVhZGluZyBi
aXRtYXAgd2l0aCBwYWdlIGluZGV4IDB4JWxseCwgYml0IG9mcyAweCVsbHgiLAotCQkJKHVuc2ln
bmVkIGxvbmcgbG9uZylibXBfcG9zID4+ICgzICsgUEFHRV9TSElGVCksCi0JCQkodW5zaWduZWQg
bG9uZyBsb25nKWJtcF9wb3MgJgotCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykoKFBBR0VfU0laRSAq
IDgpIC0gMSkpOwotCWJtcF9wYWdlID0gbnRmc19tYXBfcGFnZShibXBfbWFwcGluZywKLQkJCWJt
cF9wb3MgPj4gKDMgKyBQQUdFX1NISUZUKSk7Ci0JaWYgKElTX0VSUihibXBfcGFnZSkpIHsKLQkJ
bnRmc19lcnJvcihzYiwgIlJlYWRpbmcgaW5kZXggYml0bWFwIGZhaWxlZC4iKTsKLQkJZXJyID0g
UFRSX0VSUihibXBfcGFnZSk7Ci0JCWJtcF9wYWdlID0gTlVMTDsKLQkJZ290byBpcHV0X2Vycl9v
dXQ7Ci0JfQotCWJtcCA9ICh1OCopcGFnZV9hZGRyZXNzKGJtcF9wYWdlKTsKLQkvKiBGaW5kIG5l
eHQgaW5kZXggYmxvY2sgaW4gdXNlLiAqLwotCXdoaWxlICghKGJtcFtjdXJfYm1wX3BvcyA+PiAz
XSAmICgxIDw8IChjdXJfYm1wX3BvcyAmIDcpKSkpIHsKLWZpbmRfbmV4dF9pbmRleF9idWZmZXI6
Ci0JCWN1cl9ibXBfcG9zKys7Ci0JCS8qCi0JCSAqIElmIHdlIGhhdmUgcmVhY2hlZCB0aGUgZW5k
IG9mIHRoZSBiaXRtYXAgcGFnZSwgZ2V0IHRoZSBuZXh0Ci0JCSAqIHBhZ2UsIGFuZCBwdXQgYXdh
eSB0aGUgb2xkIG9uZS4KLQkJICovCi0JCWlmICh1bmxpa2VseSgoY3VyX2JtcF9wb3MgPj4gMykg
Pj0gUEFHRV9TSVpFKSkgewotCQkJbnRmc191bm1hcF9wYWdlKGJtcF9wYWdlKTsKLQkJCWJtcF9w
b3MgKz0gUEFHRV9TSVpFICogODsKLQkJCWN1cl9ibXBfcG9zID0gMDsKLQkJCWdvdG8gZ2V0X25l
eHRfYm1wX3BhZ2U7Ci0JCX0KLQkJLyogSWYgd2UgaGF2ZSByZWFjaGVkIHRoZSBlbmQgb2YgdGhl
IGJpdG1hcCwgd2UgYXJlIGRvbmUuICovCi0JCWlmICh1bmxpa2VseSgoKGJtcF9wb3MgKyBjdXJf
Ym1wX3BvcykgPj4gMykgPj0gaV9zaXplKSkKLQkJCWdvdG8gdW5tX0VPRDsKLQkJaWFfcG9zID0g
KGJtcF9wb3MgKyBjdXJfYm1wX3BvcykgPDwKLQkJCQluZGlyLT5pdHlwZS5pbmRleC5ibG9ja19z
aXplX2JpdHM7Ci0JfQotCW50ZnNfZGVidWcoIkhhbmRsaW5nIGluZGV4IGJ1ZmZlciAweCVsbHgu
IiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpYm1wX3BvcyArIGN1cl9ibXBfcG9zKTsKLQkvKiBJ
ZiB0aGUgY3VycmVudCBpbmRleCBidWZmZXIgaXMgaW4gdGhlIHNhbWUgcGFnZSB3ZSByZXVzZSB0
aGUgcGFnZS4gKi8KLQlpZiAoKHByZXZfaWFfcG9zICYgKHM2NClQQUdFX01BU0spICE9Ci0JCQko
aWFfcG9zICYgKHM2NClQQUdFX01BU0spKSB7Ci0JCXByZXZfaWFfcG9zID0gaWFfcG9zOwotCQlp
ZiAobGlrZWx5KGlhX3BhZ2UgIT0gTlVMTCkpIHsKLQkJCXVubG9ja19wYWdlKGlhX3BhZ2UpOwot
CQkJbnRmc191bm1hcF9wYWdlKGlhX3BhZ2UpOwotCQl9Ci0JCS8qCi0JCSAqIE1hcCB0aGUgcGFn
ZSBjYWNoZSBwYWdlIGNvbnRhaW5pbmcgdGhlIGN1cnJlbnQgaWFfcG9zLAotCQkgKiByZWFkaW5n
IGl0IGZyb20gZGlzayBpZiBuZWNlc3NhcnkuCi0JCSAqLwotCQlpYV9wYWdlID0gbnRmc19tYXBf
cGFnZShpYV9tYXBwaW5nLCBpYV9wb3MgPj4gUEFHRV9TSElGVCk7Ci0JCWlmIChJU19FUlIoaWFf
cGFnZSkpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICJSZWFkaW5nIGluZGV4IGFsbG9jYXRpb24gZGF0
YSBmYWlsZWQuIik7Ci0JCQllcnIgPSBQVFJfRVJSKGlhX3BhZ2UpOwotCQkJaWFfcGFnZSA9IE5V
TEw7Ci0JCQlnb3RvIGVycl9vdXQ7Ci0JCX0KLQkJbG9ja19wYWdlKGlhX3BhZ2UpOwotCQlrYWRk
ciA9ICh1OCopcGFnZV9hZGRyZXNzKGlhX3BhZ2UpOwotCX0KLQkvKiBHZXQgdGhlIGN1cnJlbnQg
aW5kZXggYnVmZmVyLiAqLwotCWlhID0gKElOREVYX0FMTE9DQVRJT04qKShrYWRkciArIChpYV9w
b3MgJiB+UEFHRV9NQVNLICYKLQkJCQkJICB+KHM2NCkobmRpci0+aXR5cGUuaW5kZXguYmxvY2tf
c2l6ZSAtIDEpKSk7Ci0JLyogQm91bmRzIGNoZWNrcy4gKi8KLQlpZiAodW5saWtlbHkoKHU4Kilp
YSA8IGthZGRyIHx8ICh1OCopaWEgPiBrYWRkciArIFBBR0VfU0laRSkpIHsKLQkJbnRmc19lcnJv
cihzYiwgIk91dCBvZiBib3VuZHMgY2hlY2sgZmFpbGVkLiBDb3JydXB0IGRpcmVjdG9yeSAiCi0J
CQkJImlub2RlIDB4JWx4IG9yIGRyaXZlciBidWcuIiwgdmRpci0+aV9pbm8pOwotCQlnb3RvIGVy
cl9vdXQ7Ci0JfQotCS8qIENhdGNoIG11bHRpIHNlY3RvciB0cmFuc2ZlciBmaXh1cCBlcnJvcnMu
ICovCi0JaWYgKHVubGlrZWx5KCFudGZzX2lzX2luZHhfcmVjb3JkKGlhLT5tYWdpYykpKSB7Ci0J
CW50ZnNfZXJyb3Ioc2IsICJEaXJlY3RvcnkgaW5kZXggcmVjb3JkIHdpdGggdmNuIDB4JWxseCBp
cyAiCi0JCQkJImNvcnJ1cHQuICBDb3JydXB0IGlub2RlIDB4JWx4LiAgUnVuIGNoa2Rzay4iLAot
CQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpaWFfcG9zID4+Ci0JCQkJbmRpci0+aXR5cGUuaW5kZXgu
dmNuX3NpemVfYml0cywgdmRpci0+aV9pbm8pOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWlmICh1
bmxpa2VseShzbGU2NF90b19jcHUoaWEtPmluZGV4X2Jsb2NrX3ZjbikgIT0gKGlhX3BvcyAmCi0J
CQl+KHM2NCkobmRpci0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSAtIDEpKSA+PgotCQkJbmRpci0+
aXR5cGUuaW5kZXgudmNuX3NpemVfYml0cykpIHsKLQkJbnRmc19lcnJvcihzYiwgIkFjdHVhbCBW
Q04gKDB4JWxseCkgb2YgaW5kZXggYnVmZmVyIGlzICIKLQkJCQkiZGlmZmVyZW50IGZyb20gZXhw
ZWN0ZWQgVkNOICgweCVsbHgpLiAiCi0JCQkJIkRpcmVjdG9yeSBpbm9kZSAweCVseCBpcyBjb3Jy
dXB0IG9yIGRyaXZlciAiCi0JCQkJImJ1Zy4gIiwgKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQlz
bGU2NF90b19jcHUoaWEtPmluZGV4X2Jsb2NrX3ZjbiksCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9u
ZylpYV9wb3MgPj4KLQkJCQluZGlyLT5pdHlwZS5pbmRleC52Y25fc2l6ZV9iaXRzLCB2ZGlyLT5p
X2lubyk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JaWYgKHVubGlrZWx5KGxlMzJfdG9fY3B1KGlh
LT5pbmRleC5hbGxvY2F0ZWRfc2l6ZSkgKyAweDE4ICE9Ci0JCQluZGlyLT5pdHlwZS5pbmRleC5i
bG9ja19zaXplKSkgewotCQludGZzX2Vycm9yKHNiLCAiSW5kZXggYnVmZmVyIChWQ04gMHglbGx4
KSBvZiBkaXJlY3RvcnkgaW5vZGUgIgotCQkJCSIweCVseCBoYXMgYSBzaXplICgldSkgZGlmZmVy
aW5nIGZyb20gdGhlICIKLQkJCQkiZGlyZWN0b3J5IHNwZWNpZmllZCBzaXplICgldSkuIERpcmVj
dG9yeSAiCi0JCQkJImlub2RlIGlzIGNvcnJ1cHQgb3IgZHJpdmVyIGJ1Zy4iLAotCQkJCSh1bnNp
Z25lZCBsb25nIGxvbmcpaWFfcG9zID4+Ci0JCQkJbmRpci0+aXR5cGUuaW5kZXgudmNuX3NpemVf
Yml0cywgdmRpci0+aV9pbm8sCi0JCQkJbGUzMl90b19jcHUoaWEtPmluZGV4LmFsbG9jYXRlZF9z
aXplKSArIDB4MTgsCi0JCQkJbmRpci0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSk7Ci0JCWdvdG8g
ZXJyX291dDsKLQl9Ci0JaW5kZXhfZW5kID0gKHU4KilpYSArIG5kaXItPml0eXBlLmluZGV4LmJs
b2NrX3NpemU7Ci0JaWYgKHVubGlrZWx5KGluZGV4X2VuZCA+IGthZGRyICsgUEFHRV9TSVpFKSkg
ewotCQludGZzX2Vycm9yKHNiLCAiSW5kZXggYnVmZmVyIChWQ04gMHglbGx4KSBvZiBkaXJlY3Rv
cnkgaW5vZGUgIgotCQkJCSIweCVseCBjcm9zc2VzIHBhZ2UgYm91bmRhcnkuIEltcG9zc2libGUh
ICIKLQkJCQkiQ2Fubm90IGFjY2VzcyEgVGhpcyBpcyBwcm9iYWJseSBhIGJ1ZyBpbiB0aGUgIgot
CQkJCSJkcml2ZXIuIiwgKHVuc2lnbmVkIGxvbmcgbG9uZylpYV9wb3MgPj4KLQkJCQluZGlyLT5p
dHlwZS5pbmRleC52Y25fc2l6ZV9iaXRzLCB2ZGlyLT5pX2lubyk7Ci0JCWdvdG8gZXJyX291dDsK
LQl9Ci0JaWFfc3RhcnQgPSBpYV9wb3MgJiB+KHM2NCkobmRpci0+aXR5cGUuaW5kZXguYmxvY2tf
c2l6ZSAtIDEpOwotCWluZGV4X2VuZCA9ICh1OCopJmlhLT5pbmRleCArIGxlMzJfdG9fY3B1KGlh
LT5pbmRleC5pbmRleF9sZW5ndGgpOwotCWlmICh1bmxpa2VseShpbmRleF9lbmQgPiAodTgqKWlh
ICsgbmRpci0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSkpIHsKLQkJbnRmc19lcnJvcihzYiwgIlNp
emUgb2YgaW5kZXggYnVmZmVyIChWQ04gMHglbGx4KSBvZiBkaXJlY3RvcnkgIgotCQkJCSJpbm9k
ZSAweCVseCBleGNlZWRzIG1heGltdW0gc2l6ZS4iLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcp
aWFfcG9zID4+Ci0JCQkJbmRpci0+aXR5cGUuaW5kZXgudmNuX3NpemVfYml0cywgdmRpci0+aV9p
bm8pOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIFRoZSBmaXJzdCBpbmRleCBlbnRyeSBpbiB0
aGlzIGluZGV4IGJ1ZmZlci4gKi8KLQlpZSA9IChJTkRFWF9FTlRSWSopKCh1OCopJmlhLT5pbmRl
eCArCi0JCQlsZTMyX3RvX2NwdShpYS0+aW5kZXguZW50cmllc19vZmZzZXQpKTsKLQkvKgotCSAq
IExvb3AgdW50aWwgd2UgZXhjZWVkIHZhbGlkIG1lbW9yeSAoY29ycnVwdGlvbiBjYXNlKSBvciB1
bnRpbCB3ZQotCSAqIHJlYWNoIHRoZSBsYXN0IGVudHJ5IG9yIHVudGlsIGZpbGxkaXIgdGVsbHMg
dXMgaXQgaGFzIGhhZCBlbm91Z2gKLQkgKiBvciBzaWduYWxzIGFuIGVycm9yIChib3RoIGNvdmVy
ZWQgYnkgdGhlIHJjIHRlc3QpLgotCSAqLwotCWZvciAoOzsgaWUgPSAoSU5ERVhfRU5UUlkqKSgo
dTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkpKSB7Ci0JCW50ZnNfZGVidWcoIkluIGlu
ZGV4IGFsbG9jYXRpb24sIG9mZnNldCAweCVsbHguIiwKLQkJCQkodW5zaWduZWQgbG9uZyBsb25n
KWlhX3N0YXJ0ICsKLQkJCQkodW5zaWduZWQgbG9uZyBsb25nKSgodTgqKWllIC0gKHU4KilpYSkp
OwotCQkvKiBCb3VuZHMgY2hlY2tzLiAqLwotCQlpZiAodW5saWtlbHkoKHU4KilpZSA8ICh1OCop
aWEgfHwgKHU4KilpZSArCi0JCQkJc2l6ZW9mKElOREVYX0VOVFJZX0hFQURFUikgPiBpbmRleF9l
bmQgfHwKLQkJCQkodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmtleV9sZW5ndGgpID4KLQkJCQlp
bmRleF9lbmQpKQotCQkJZ290byBlcnJfb3V0OwotCQkvKiBUaGUgbGFzdCBlbnRyeSBjYW5ub3Qg
Y29udGFpbiBhIG5hbWUuICovCi0JCWlmIChpZS0+ZmxhZ3MgJiBJTkRFWF9FTlRSWV9FTkQpCi0J
CQlicmVhazsKLQkJLyogU2tpcCBpbmRleCBibG9jayBlbnRyeSBpZiBjb250aW51aW5nIHByZXZp
b3VzIHJlYWRkaXIuICovCi0JCWlmIChpYV9wb3MgLSBpYV9zdGFydCA+ICh1OCopaWUgLSAodTgq
KWlhKQotCQkJY29udGludWU7Ci0JCS8qIEFkdmFuY2UgdGhlIHBvc2l0aW9uIGV2ZW4gaWYgZ29p
bmcgdG8gc2tpcCB0aGUgZW50cnkuICovCi0JCWFjdG9yLT5wb3MgPSAodTgqKWllIC0gKHU4Kilp
YSArCi0JCQkJKHNsZTY0X3RvX2NwdShpYS0+aW5kZXhfYmxvY2tfdmNuKSA8PAotCQkJCW5kaXIt
Pml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMpICsKLQkJCQl2b2wtPm1mdF9yZWNvcmRfc2l6ZTsK
LQkJLyoKLQkJICogU3VibWl0IHRoZSBuYW1lIHRvIHRoZSBAZmlsbGRpciBjYWxsYmFjay4gIE5v
dGUsCi0JCSAqIG50ZnNfZmlsbGRpcigpIGRyb3BzIHRoZSBsb2NrIG9uIEBpYV9wYWdlIGJ1dCBp
dCByZXRha2VzIGl0Ci0JCSAqIGJlZm9yZSByZXR1cm5pbmcsIHVubGVzcyBhIG5vbi16ZXJvIHZh
bHVlIGlzIHJldHVybmVkIGluCi0JCSAqIHdoaWNoIGNhc2UgdGhlIHBhZ2UgaXMgbGVmdCB1bmxv
Y2tlZC4KLQkJICovCi0JCXJjID0gbnRmc19maWxsZGlyKHZvbCwgbmRpciwgaWFfcGFnZSwgaWUs
IG5hbWUsIGFjdG9yKTsKLQkJaWYgKHJjKSB7Ci0JCQkvKiBAaWFfcGFnZSBpcyBhbHJlYWR5IHVu
bG9ja2VkIGluIHRoaXMgY2FzZS4gKi8KLQkJCW50ZnNfdW5tYXBfcGFnZShpYV9wYWdlKTsKLQkJ
CW50ZnNfdW5tYXBfcGFnZShibXBfcGFnZSk7Ci0JCQlpcHV0KGJtcF92aSk7Ci0JCQlnb3RvIGFi
b3J0OwotCQl9Ci0JfQotCWdvdG8gZmluZF9uZXh0X2luZGV4X2J1ZmZlcjsKLXVubV9FT0Q6Ci0J
aWYgKGlhX3BhZ2UpIHsKLQkJdW5sb2NrX3BhZ2UoaWFfcGFnZSk7Ci0JCW50ZnNfdW5tYXBfcGFn
ZShpYV9wYWdlKTsKLQl9Ci0JbnRmc191bm1hcF9wYWdlKGJtcF9wYWdlKTsKLQlpcHV0KGJtcF92
aSk7Ci1FT0Q6Ci0JLyogV2UgYXJlIGZpbmlzaGVkLCBzZXQgZnBvcyB0byBFT0QuICovCi0JYWN0
b3ItPnBvcyA9IGlfc2l6ZSArIHZvbC0+bWZ0X3JlY29yZF9zaXplOwotYWJvcnQ6Ci0Ja2ZyZWUo
bmFtZSk7Ci0JcmV0dXJuIDA7Ci1lcnJfb3V0OgotCWlmIChibXBfcGFnZSkgewotCQludGZzX3Vu
bWFwX3BhZ2UoYm1wX3BhZ2UpOwotaXB1dF9lcnJfb3V0OgotCQlpcHV0KGJtcF92aSk7Ci0JfQot
CWlmIChpYV9wYWdlKSB7Ci0JCXVubG9ja19wYWdlKGlhX3BhZ2UpOwotCQludGZzX3VubWFwX3Bh
Z2UoaWFfcGFnZSk7Ci0JfQotCWtmcmVlKGlyKTsKLQlrZnJlZShuYW1lKTsKLQlpZiAoY3R4KQot
CQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQlpZiAobSkKLQkJdW5tYXBfbWZ0X3Jl
Y29yZChuZGlyKTsKLQlpZiAoIWVycikKLQkJZXJyID0gLUVJTzsKLQludGZzX2RlYnVnKCJGYWls
ZWQuIFJldHVybmluZyBlcnJvciBjb2RlICVpLiIsIC1lcnIpOwotCXJldHVybiBlcnI7Ci19Ci0K
LS8qKgotICogbnRmc19kaXJfb3BlbiAtIGNhbGxlZCB3aGVuIGFuIGlub2RlIGlzIGFib3V0IHRv
IGJlIG9wZW5lZAotICogQHZpOgkJaW5vZGUgdG8gYmUgb3BlbmVkCi0gKiBAZmlscDoJZmlsZSBz
dHJ1Y3R1cmUgZGVzY3JpYmluZyB0aGUgaW5vZGUKLSAqCi0gKiBMaW1pdCBkaXJlY3Rvcnkgc2l6
ZSB0byB0aGUgcGFnZSBjYWNoZSBsaW1pdCBvbiBhcmNoaXRlY3R1cmVzIHdoZXJlIHVuc2lnbmVk
Ci0gKiBsb25nIGlzIDMyLWJpdHMuIFRoaXMgaXMgdGhlIG1vc3Qgd2UgY2FuIGRvIGZvciBub3cg
d2l0aG91dCBvdmVyZmxvd2luZyB0aGUKLSAqIHBhZ2UgY2FjaGUgcGFnZSBpbmRleC4gRG9pbmcg
aXQgdGhpcyB3YXkgbWVhbnMgd2UgZG9uJ3QgcnVuIGludG8gcHJvYmxlbXMKLSAqIGJlY2F1c2Ug
b2YgZXhpc3RpbmcgdG9vIGxhcmdlIGRpcmVjdG9yaWVzLiBJdCB3b3VsZCBiZSBiZXR0ZXIgdG8g
YWxsb3cgdGhlCi0gKiB1c2VyIHRvIHJlYWQgdGhlIGFjY2Vzc2libGUgcGFydCBvZiB0aGUgZGly
ZWN0b3J5IGJ1dCBJIGRvdWJ0IHZlcnkgbXVjaAotICogYW55b25lIGlzIGdvaW5nIHRvIGhpdCB0
aGlzIGNoZWNrIG9uIGEgMzItYml0IGFyY2hpdGVjdHVyZSwgc28gdGhlcmUgaXMgbm8KLSAqIHBv
aW50IGluIGFkZGluZyB0aGUgZXh0cmEgY29tcGxleGl0eSByZXF1aXJlZCB0byBzdXBwb3J0IHRo
aXMuCi0gKgotICogT24gNjQtYml0IGFyY2hpdGVjdHVyZXMsIHRoZSBjaGVjayBpcyBob3BlZnVs
bHkgb3B0aW1pemVkIGF3YXkgYnkgdGhlCi0gKiBjb21waWxlci4KLSAqLwotc3RhdGljIGludCBu
dGZzX2Rpcl9vcGVuKHN0cnVjdCBpbm9kZSAqdmksIHN0cnVjdCBmaWxlICpmaWxwKQotewotCWlm
IChzaXplb2YodW5zaWduZWQgbG9uZykgPCA4KSB7Ci0JCWlmIChpX3NpemVfcmVhZCh2aSkgPiBN
QVhfTEZTX0ZJTEVTSVpFKQotCQkJcmV0dXJuIC1FRkJJRzsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0K
LSNpZmRlZiBOVEZTX1JXCi0KLS8qKgotICogbnRmc19kaXJfZnN5bmMgLSBzeW5jIGEgZGlyZWN0
b3J5IHRvIGRpc2sKLSAqIEBmaWxwOglkaXJlY3RvcnkgdG8gYmUgc3luY2VkCi0gKiBAc3RhcnQ6
CW9mZnNldCBpbiBieXRlcyBvZiB0aGUgYmVnaW5uaW5nIG9mIGRhdGEgcmFuZ2UgdG8gc3luYwot
ICogQGVuZDoJb2Zmc2V0IGluIGJ5dGVzIG9mIHRoZSBlbmQgb2YgZGF0YSByYW5nZSAoaW5jbHVz
aXZlKQotICogQGRhdGFzeW5jOglpZiBub24temVybyBvbmx5IGZsdXNoIHVzZXIgZGF0YSBhbmQg
bm90IG1ldGFkYXRhCi0gKgotICogRGF0YSBpbnRlZ3JpdHkgc3luYyBvZiBhIGRpcmVjdG9yeSB0
byBkaXNrLiAgVXNlZCBmb3IgZnN5bmMsIGZkYXRhc3luYywgYW5kCi0gKiBtc3luYyBzeXN0ZW0g
Y2FsbHMuICBUaGlzIGZ1bmN0aW9uIGlzIGJhc2VkIG9uIGZpbGUuYzo6bnRmc19maWxlX2ZzeW5j
KCkuCi0gKgotICogV3JpdGUgdGhlIG1mdCByZWNvcmQgYW5kIGFsbCBhc3NvY2lhdGVkIGV4dGVu
dCBtZnQgcmVjb3JkcyBhcyB3ZWxsIGFzIHRoZQotICogJElOREVYX0FMTE9DQVRJT04gYW5kICRC
SVRNQVAgYXR0cmlidXRlcyBhbmQgdGhlbiBzeW5jIHRoZSBibG9jayBkZXZpY2UuCi0gKgotICog
SWYgQGRhdGFzeW5jIGlzIHRydWUsIHdlIGRvIG5vdCB3YWl0IG9uIHRoZSBpbm9kZShzKSB0byBi
ZSB3cml0dGVuIG91dAotICogYnV0IHdlIGFsd2F5cyB3YWl0IG9uIHRoZSBwYWdlIGNhY2hlIHBh
Z2VzIHRvIGJlIHdyaXR0ZW4gb3V0LgotICoKLSAqIE5vdGU6IEluIHRoZSBwYXN0IEBmaWxwIGNv
dWxkIGJlIE5VTEwgc28gd2UgaWdub3JlIGl0IGFzIHdlIGRvbid0IG5lZWQgaXQKLSAqIGFueXdh
eS4KLSAqCi0gKiBMb2NraW5nOiBDYWxsZXIgbXVzdCBob2xkIGlfbXV0ZXggb24gdGhlIGlub2Rl
LgotICoKLSAqIFRPRE86IFdlIHNob3VsZCBwcm9iYWJseSBhbHNvIHdyaXRlIGFsbCBhdHRyaWJ1
dGUvaW5kZXggaW5vZGVzIGFzc29jaWF0ZWQKLSAqIHdpdGggdGhpcyBpbm9kZSBidXQgc2luY2Ug
d2UgaGF2ZSBubyBzaW1wbGUgd2F5IG9mIGdldHRpbmcgdG8gdGhlbSB3ZSBpZ25vcmUKLSAqIHRo
aXMgcHJvYmxlbSBmb3Igbm93LiAgV2UgZG8gd3JpdGUgdGhlICRCSVRNQVAgYXR0cmlidXRlIGlm
IGl0IGlzIHByZXNlbnQKLSAqIHdoaWNoIGlzIHRoZSBpbXBvcnRhbnQgb25lIGZvciBhIGRpcmVj
dG9yeSBzbyB0aGluZ3MgYXJlIG5vdCB0b28gYmFkLgotICovCi1zdGF0aWMgaW50IG50ZnNfZGly
X2ZzeW5jKHN0cnVjdCBmaWxlICpmaWxwLCBsb2ZmX3Qgc3RhcnQsIGxvZmZfdCBlbmQsCi0JCQkg
IGludCBkYXRhc3luYykKLXsKLQlzdHJ1Y3QgaW5vZGUgKmJtcF92aSwgKnZpID0gZmlscC0+Zl9t
YXBwaW5nLT5ob3N0OwotCWludCBlcnIsIHJldDsKLQludGZzX2F0dHIgbmE7Ci0KLQludGZzX2Rl
YnVnKCJFbnRlcmluZyBmb3IgaW5vZGUgMHglbHguIiwgdmktPmlfaW5vKTsKLQotCWVyciA9IGZp
bGVfd3JpdGVfYW5kX3dhaXRfcmFuZ2UoZmlscCwgc3RhcnQsIGVuZCk7Ci0JaWYgKGVycikKLQkJ
cmV0dXJuIGVycjsKLQlpbm9kZV9sb2NrKHZpKTsKLQotCUJVR19PTighU19JU0RJUih2aS0+aV9t
b2RlKSk7Ci0JLyogSWYgdGhlIGJpdG1hcCBhdHRyaWJ1dGUgaW5vZGUgaXMgaW4gbWVtb3J5IHN5
bmMgaXQsIHRvby4gKi8KLQluYS5tZnRfbm8gPSB2aS0+aV9pbm87Ci0JbmEudHlwZSA9IEFUX0JJ
VE1BUDsKLQluYS5uYW1lID0gSTMwOwotCW5hLm5hbWVfbGVuID0gNDsKLQlibXBfdmkgPSBpbG9v
a3VwNSh2aS0+aV9zYiwgdmktPmlfaW5vLCBudGZzX3Rlc3RfaW5vZGUsICZuYSk7Ci0JaWYgKGJt
cF92aSkgewotIAkJd3JpdGVfaW5vZGVfbm93KGJtcF92aSwgIWRhdGFzeW5jKTsKLQkJaXB1dChi
bXBfdmkpOwotCX0KLQlyZXQgPSBfX250ZnNfd3JpdGVfaW5vZGUodmksIDEpOwotCXdyaXRlX2lu
b2RlX25vdyh2aSwgIWRhdGFzeW5jKTsKLQllcnIgPSBzeW5jX2Jsb2NrZGV2KHZpLT5pX3NiLT5z
X2JkZXYpOwotCWlmICh1bmxpa2VseShlcnIgJiYgIXJldCkpCi0JCXJldCA9IGVycjsKLQlpZiAo
bGlrZWx5KCFyZXQpKQotCQludGZzX2RlYnVnKCJEb25lLiIpOwotCWVsc2UKLQkJbnRmc193YXJu
aW5nKHZpLT5pX3NiLCAiRmFpbGVkIHRvIGYlc3N5bmMgaW5vZGUgMHglbHguICBFcnJvciAiCi0J
CQkJIiV1LiIsIGRhdGFzeW5jID8gImRhdGEiIDogIiIsIHZpLT5pX2lubywgLXJldCk7Ci0JaW5v
ZGVfdW5sb2NrKHZpKTsKLQlyZXR1cm4gcmV0OwotfQotCi0jZW5kaWYgLyogTlRGU19SVyAqLwot
Ci1XUkFQX0RJUl9JVEVSKG50ZnNfcmVhZGRpcikgLy8gRklYTUUhCi1jb25zdCBzdHJ1Y3QgZmls
ZV9vcGVyYXRpb25zIG50ZnNfZGlyX29wcyA9IHsKLQkubGxzZWVrCQk9IGdlbmVyaWNfZmlsZV9s
bHNlZWssCS8qIFNlZWsgaW5zaWRlIGRpcmVjdG9yeS4gKi8KLQkucmVhZAkJPSBnZW5lcmljX3Jl
YWRfZGlyLAkvKiBSZXR1cm4gLUVJU0RJUi4gKi8KLQkuaXRlcmF0ZV9zaGFyZWQJPSBzaGFyZWRf
bnRmc19yZWFkZGlyLAkvKiBSZWFkIGRpcmVjdG9yeSBjb250ZW50cy4gKi8KLSNpZmRlZiBOVEZT
X1JXCi0JLmZzeW5jCQk9IG50ZnNfZGlyX2ZzeW5jLAkvKiBTeW5jIGEgZGlyZWN0b3J5IHRvIGRp
c2suICovCi0jZW5kaWYgLyogTlRGU19SVyAqLwotCS8qLmlvY3RsCT0gLCovCQkJLyogUGVyZm9y
bSBmdW5jdGlvbiBvbiB0aGUKLQkJCQkJCSAgIG1vdW50ZWQgZmlsZXN5c3RlbS4gKi8KLQkub3Bl
bgkJPSBudGZzX2Rpcl9vcGVuLAkvKiBPcGVuIGRpcmVjdG9yeS4gKi8KLX07CmRpZmYgLS1naXQg
YS9mcy9udGZzL2Rpci5oIGIvZnMvbnRmcy9kaXIuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMGUzMjY3NTNkZjQwLi4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9kaXIuaAorKysg
L2Rldi9udWxsCkBAIC0xLDM0ICswLDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBH
UEwtMi4wLW9yLWxhdGVyICovCi0vKgotICogZGlyLmggLSBEZWZpbmVzIGZvciBkaXJlY3Rvcnkg
aGFuZGxpbmcgaW4gTlRGUyBMaW51eCBrZXJuZWwgZHJpdmVyLiBQYXJ0IG9mCi0gKgkgICB0aGUg
TGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMi0yMDA0IEFudG9u
IEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfRElSX0gKLSNkZWZpbmUg
X0xJTlVYX05URlNfRElSX0gKLQotI2luY2x1ZGUgImxheW91dC5oIgotI2luY2x1ZGUgImlub2Rl
LmgiCi0jaW5jbHVkZSAidHlwZXMuaCIKLQotLyoKLSAqIG50ZnNfbmFtZSBpcyB1c2VkIHRvIHJl
dHVybiB0aGUgZmlsZSBuYW1lIHRvIHRoZSBjYWxsZXIgb2YKLSAqIG50ZnNfbG9va3VwX2lub2Rl
X2J5X25hbWUoKSBpbiBvcmRlciBmb3IgdGhlIGNhbGxlciAobmFtZWkuYzo6bnRmc19sb29rdXAo
KSkKLSAqIHRvIGJlIGFibGUgdG8gZGVhbCB3aXRoIGRjYWNoZSBhbGlhc2luZyBpc3N1ZXMuCi0g
Ki8KLXR5cGVkZWYgc3RydWN0IHsKLQlNRlRfUkVGIG1yZWY7Ci0JRklMRV9OQU1FX1RZUEVfRkxB
R1MgdHlwZTsKLQl1OCBsZW47Ci0JbnRmc2NoYXIgbmFtZVswXTsKLX0gX19hdHRyaWJ1dGVfXyAo
KF9fcGFja2VkX18pKSBudGZzX25hbWU7Ci0KLS8qIFRoZSBsaXR0bGUgZW5kaWFuIFVuaWNvZGUg
c3RyaW5nICRJMzAgYXMgYSBnbG9iYWwgY29uc3RhbnQuICovCi1leHRlcm4gbnRmc2NoYXIgSTMw
WzVdOwotCi1leHRlcm4gTUZUX1JFRiBudGZzX2xvb2t1cF9pbm9kZV9ieV9uYW1lKG50ZnNfaW5v
ZGUgKmRpcl9uaSwKLQkJY29uc3QgbnRmc2NoYXIgKnVuYW1lLCBjb25zdCBpbnQgdW5hbWVfbGVu
LCBudGZzX25hbWUgKipyZXMpOwotCi0jZW5kaWYgLyogX0xJTlVYX05URlNfRlNfRElSX0ggKi8K
ZGlmZiAtLWdpdCBhL2ZzL250ZnMvZW5kaWFuLmggYi9mcy9udGZzL2VuZGlhbi5oCmRlbGV0ZWQg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCBmMzBjMTM5YmY5YWUuLjAwMDAwMDAwMDAwMAotLS0gYS9m
cy9udGZzL2VuZGlhbi5oCisrKyAvZGV2L251bGwKQEAgLTEsNzkgKzAsMCBAQAotLyogU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBlbmRpYW4uaCAt
IERlZmluZXMgZm9yIGVuZGlhbm5lc3MgaGFuZGxpbmcgaW4gTlRGUyBMaW51eCBrZXJuZWwgZHJp
dmVyLgotICoJICAgICAgUGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENv
cHlyaWdodCAoYykgMjAwMS0yMDA0IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5kZWYg
X0xJTlVYX05URlNfRU5ESUFOX0gKLSNkZWZpbmUgX0xJTlVYX05URlNfRU5ESUFOX0gKLQotI2lu
Y2x1ZGUgPGFzbS9ieXRlb3JkZXIuaD4KLSNpbmNsdWRlICJ0eXBlcy5oIgotCi0vKgotICogU2ln
bmVkIGVuZGlhbm5lc3MgY29udmVyc2lvbiBmdW5jdGlvbnMuCi0gKi8KLQotc3RhdGljIGlubGlu
ZSBzMTYgc2xlMTZfdG9fY3B1KHNsZTE2IHgpCi17Ci0JcmV0dXJuIGxlMTZfdG9fY3B1KChfX2Zv
cmNlIGxlMTYpeCk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgczMyIHNsZTMyX3RvX2NwdShzbGUzMiB4
KQotewotCXJldHVybiBsZTMyX3RvX2NwdSgoX19mb3JjZSBsZTMyKXgpOwotfQotCi1zdGF0aWMg
aW5saW5lIHM2NCBzbGU2NF90b19jcHUoc2xlNjQgeCkKLXsKLQlyZXR1cm4gbGU2NF90b19jcHUo
KF9fZm9yY2UgbGU2NCl4KTsKLX0KLQotc3RhdGljIGlubGluZSBzMTYgc2xlMTZfdG9fY3B1cChz
bGUxNiAqeCkKLXsKLQlyZXR1cm4gbGUxNl90b19jcHUoKihfX2ZvcmNlIGxlMTYqKXgpOwotfQot
Ci1zdGF0aWMgaW5saW5lIHMzMiBzbGUzMl90b19jcHVwKHNsZTMyICp4KQotewotCXJldHVybiBs
ZTMyX3RvX2NwdSgqKF9fZm9yY2UgbGUzMiopeCk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgczY0IHNs
ZTY0X3RvX2NwdXAoc2xlNjQgKngpCi17Ci0JcmV0dXJuIGxlNjRfdG9fY3B1KCooX19mb3JjZSBs
ZTY0Kil4KTsKLX0KLQotc3RhdGljIGlubGluZSBzbGUxNiBjcHVfdG9fc2xlMTYoczE2IHgpCi17
Ci0JcmV0dXJuIChfX2ZvcmNlIHNsZTE2KWNwdV90b19sZTE2KHgpOwotfQotCi1zdGF0aWMgaW5s
aW5lIHNsZTMyIGNwdV90b19zbGUzMihzMzIgeCkKLXsKLQlyZXR1cm4gKF9fZm9yY2Ugc2xlMzIp
Y3B1X3RvX2xlMzIoeCk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgc2xlNjQgY3B1X3RvX3NsZTY0KHM2
NCB4KQotewotCXJldHVybiAoX19mb3JjZSBzbGU2NCljcHVfdG9fbGU2NCh4KTsKLX0KLQotc3Rh
dGljIGlubGluZSBzbGUxNiBjcHVfdG9fc2xlMTZwKHMxNiAqeCkKLXsKLQlyZXR1cm4gKF9fZm9y
Y2Ugc2xlMTYpY3B1X3RvX2xlMTYoKngpOwotfQotCi1zdGF0aWMgaW5saW5lIHNsZTMyIGNwdV90
b19zbGUzMnAoczMyICp4KQotewotCXJldHVybiAoX19mb3JjZSBzbGUzMiljcHVfdG9fbGUzMigq
eCk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgc2xlNjQgY3B1X3RvX3NsZTY0cChzNjQgKngpCi17Ci0J
cmV0dXJuIChfX2ZvcmNlIHNsZTY0KWNwdV90b19sZTY0KCp4KTsKLX0KLQotI2VuZGlmIC8qIF9M
SU5VWF9OVEZTX0VORElBTl9IICovCmRpZmYgLS1naXQgYS9mcy9udGZzL2ZpbGUuYyBiL2ZzL250
ZnMvZmlsZS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAyOTdjMGI5ZGI2MjEuLjAw
MDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2ZpbGUuYworKysgL2Rldi9udWxsCkBAIC0xLDE5OTcg
KzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8q
Ci0gKiBmaWxlLmMgLSBOVEZTIGtlcm5lbCBmaWxlIG9wZXJhdGlvbnMuICBQYXJ0IG9mIHRoZSBM
aW51eC1OVEZTIHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDAxLTIwMTUgQW50b24g
QWx0YXBhcm1ha292IGFuZCBUdXhlcmEgSW5jLgotICovCi0KLSNpbmNsdWRlIDxsaW51eC9ibGtk
ZXYuaD4KLSNpbmNsdWRlIDxsaW51eC9iYWNraW5nLWRldi5oPgotI2luY2x1ZGUgPGxpbnV4L2J1
ZmZlcl9oZWFkLmg+Ci0jaW5jbHVkZSA8bGludXgvZ2ZwLmg+Ci0jaW5jbHVkZSA8bGludXgvcGFn
ZW1hcC5oPgotI2luY2x1ZGUgPGxpbnV4L3BhZ2V2ZWMuaD4KLSNpbmNsdWRlIDxsaW51eC9zY2hl
ZC9zaWduYWwuaD4KLSNpbmNsdWRlIDxsaW51eC9zd2FwLmg+Ci0jaW5jbHVkZSA8bGludXgvdWlv
Lmg+Ci0jaW5jbHVkZSA8bGludXgvd3JpdGViYWNrLmg+Ci0KLSNpbmNsdWRlIDxhc20vcGFnZS5o
PgotI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4KLQotI2luY2x1ZGUgImF0dHJpYi5oIgotI2lu
Y2x1ZGUgImJpdG1hcC5oIgotI2luY2x1ZGUgImlub2RlLmgiCi0jaW5jbHVkZSAiZGVidWcuaCIK
LSNpbmNsdWRlICJsY25hbGxvYy5oIgotI2luY2x1ZGUgIm1hbGxvYy5oIgotI2luY2x1ZGUgIm1m
dC5oIgotI2luY2x1ZGUgIm50ZnMuaCIKLQotLyoqCi0gKiBudGZzX2ZpbGVfb3BlbiAtIGNhbGxl
ZCB3aGVuIGFuIGlub2RlIGlzIGFib3V0IHRvIGJlIG9wZW5lZAotICogQHZpOgkJaW5vZGUgdG8g
YmUgb3BlbmVkCi0gKiBAZmlscDoJZmlsZSBzdHJ1Y3R1cmUgZGVzY3JpYmluZyB0aGUgaW5vZGUK
LSAqCi0gKiBMaW1pdCBmaWxlIHNpemUgdG8gdGhlIHBhZ2UgY2FjaGUgbGltaXQgb24gYXJjaGl0
ZWN0dXJlcyB3aGVyZSB1bnNpZ25lZCBsb25nCi0gKiBpcyAzMi1iaXRzLiBUaGlzIGlzIHRoZSBt
b3N0IHdlIGNhbiBkbyBmb3Igbm93IHdpdGhvdXQgb3ZlcmZsb3dpbmcgdGhlIHBhZ2UKLSAqIGNh
Y2hlIHBhZ2UgaW5kZXguIERvaW5nIGl0IHRoaXMgd2F5IG1lYW5zIHdlIGRvbid0IHJ1biBpbnRv
IHByb2JsZW1zIGJlY2F1c2UKLSAqIG9mIGV4aXN0aW5nIHRvbyBsYXJnZSBmaWxlcy4gSXQgd291
bGQgYmUgYmV0dGVyIHRvIGFsbG93IHRoZSB1c2VyIHRvIHJlYWQKLSAqIHRoZSBiZWdpbm5pbmcg
b2YgdGhlIGZpbGUgYnV0IEkgZG91YnQgdmVyeSBtdWNoIGFueW9uZSBpcyBnb2luZyB0byBoaXQg
dGhpcwotICogY2hlY2sgb24gYSAzMi1iaXQgYXJjaGl0ZWN0dXJlLCBzbyB0aGVyZSBpcyBubyBw
b2ludCBpbiBhZGRpbmcgdGhlIGV4dHJhCi0gKiBjb21wbGV4aXR5IHJlcXVpcmVkIHRvIHN1cHBv
cnQgdGhpcy4KLSAqCi0gKiBPbiA2NC1iaXQgYXJjaGl0ZWN0dXJlcywgdGhlIGNoZWNrIGlzIGhv
cGVmdWxseSBvcHRpbWl6ZWQgYXdheSBieSB0aGUKLSAqIGNvbXBpbGVyLgotICoKLSAqIEFmdGVy
IHRoZSBjaGVjayBwYXNzZXMsIGp1c3QgY2FsbCBnZW5lcmljX2ZpbGVfb3BlbigpIHRvIGRvIGl0
cyB3b3JrLgotICovCi1zdGF0aWMgaW50IG50ZnNfZmlsZV9vcGVuKHN0cnVjdCBpbm9kZSAqdmks
IHN0cnVjdCBmaWxlICpmaWxwKQotewotCWlmIChzaXplb2YodW5zaWduZWQgbG9uZykgPCA4KSB7
Ci0JCWlmIChpX3NpemVfcmVhZCh2aSkgPiBNQVhfTEZTX0ZJTEVTSVpFKQotCQkJcmV0dXJuIC1F
T1ZFUkZMT1c7Ci0JfQotCXJldHVybiBnZW5lcmljX2ZpbGVfb3Blbih2aSwgZmlscCk7Ci19Ci0K
LSNpZmRlZiBOVEZTX1JXCi0KLS8qKgotICogbnRmc19hdHRyX2V4dGVuZF9pbml0aWFsaXplZCAt
IGV4dGVuZCB0aGUgaW5pdGlhbGl6ZWQgc2l6ZSBvZiBhbiBhdHRyaWJ1dGUKLSAqIEBuaToJCQlu
dGZzIGlub2RlIG9mIHRoZSBhdHRyaWJ1dGUgdG8gZXh0ZW5kCi0gKiBAbmV3X2luaXRfc2l6ZToJ
cmVxdWVzdGVkIG5ldyBpbml0aWFsaXplZCBzaXplIGluIGJ5dGVzCi0gKgotICogRXh0ZW5kIHRo
ZSBpbml0aWFsaXplZCBzaXplIG9mIGFuIGF0dHJpYnV0ZSBkZXNjcmliZWQgYnkgdGhlIG50ZnMg
aW5vZGUgQG5pCi0gKiB0byBAbmV3X2luaXRfc2l6ZSBieXRlcy4gIFRoaXMgaW52b2x2ZXMgemVy
b2luZyBhbnkgbm9uLXNwYXJzZSBzcGFjZSBiZXR3ZWVuCi0gKiB0aGUgb2xkIGluaXRpYWxpemVk
IHNpemUgYW5kIEBuZXdfaW5pdF9zaXplIGJvdGggaW4gdGhlIHBhZ2UgY2FjaGUgYW5kIG9uCi0g
KiBkaXNrIChpZiByZWxldmFudCBjb21wbGV0ZSBwYWdlcyBhcmUgYWxyZWFkeSB1cHRvZGF0ZSBp
biB0aGUgcGFnZSBjYWNoZSB0aGVuCi0gKiB0aGVzZSBhcmUgc2ltcGx5IG1hcmtlZCBkaXJ0eSku
Ci0gKgotICogQXMgYSBzaWRlLWVmZmVjdCwgdGhlIGZpbGUgc2l6ZSAodmZzIGlub2RlLT5pX3Np
emUpIG1heSBiZSBpbmNyZW1lbnRlZCBhcywKLSAqIGluIHRoZSByZXNpZGVudCBhdHRyaWJ1dGUg
Y2FzZSwgaXQgaXMgdGllZCB0byB0aGUgaW5pdGlhbGl6ZWQgc2l6ZSBhbmQsIGluCi0gKiB0aGUg
bm9uLXJlc2lkZW50IGF0dHJpYnV0ZSBjYXNlLCBpdCBtYXkgbm90IGZhbGwgYmVsb3cgdGhlIGlu
aXRpYWxpemVkIHNpemUuCi0gKgotICogTm90ZSB0aGF0IGlmIHRoZSBhdHRyaWJ1dGUgaXMgcmVz
aWRlbnQsIHdlIGRvIG5vdCBuZWVkIHRvIHRvdWNoIHRoZSBwYWdlCi0gKiBjYWNoZSBhdCBhbGwu
ICBUaGlzIGlzIGJlY2F1c2UgaWYgdGhlIHBhZ2UgY2FjaGUgcGFnZSBpcyBub3QgdXB0b2RhdGUg
d2UKLSAqIGJyaW5nIGl0IHVwdG9kYXRlIGxhdGVyLCB3aGVuIGRvaW5nIHRoZSB3cml0ZSB0byB0
aGUgbWZ0IHJlY29yZCBzaW5jZSB3ZQotICogdGhlbiBhbHJlYWR5IGhhdmUgdGhlIHBhZ2UgbWFw
cGVkLiAgQW5kIGlmIHRoZSBwYWdlIGlzIHVwdG9kYXRlLCB0aGUKLSAqIG5vbi1pbml0aWFsaXpl
ZCByZWdpb24gd2lsbCBhbHJlYWR5IGhhdmUgYmVlbiB6ZXJvZWQgd2hlbiB0aGUgcGFnZSB3YXMK
LSAqIGJyb3VnaHQgdXB0b2RhdGUgYW5kIHRoZSByZWdpb24gbWF5IGluIGZhY3QgYWxyZWFkeSBo
YXZlIGJlZW4gb3ZlcndyaXR0ZW4KLSAqIHdpdGggbmV3IGRhdGEgdmlhIG1tYXAoKSBiYXNlZCB3
cml0ZXMsIHNvIHdlIGNhbm5vdCBqdXN0IHplcm8gaXQuICBBbmQgc2luY2UKLSAqIFBPU0lYIHNw
ZWNpZmllcyB0aGF0IHRoZSBiZWhhdmlvdXIgb2YgcmVzaXppbmcgYSBmaWxlIHdoaWxzdCBpdCBp
cyBtbWFwKClwZWQKLSAqIGlzIHVuc3BlY2lmaWVkLCB3ZSBjaG9vc2Ugbm90IHRvIGRvIHplcm9p
bmcgYW5kIHRodXMgd2UgZG8gbm90IG5lZWQgdG8gdG91Y2gKLSAqIHRoZSBwYWdlIGF0IGFsbC4g
IEZvciBhIG1vcmUgZGV0YWlsZWQgZXhwbGFuYXRpb24gc2VlIG50ZnNfdHJ1bmNhdGUoKSBpbgot
ICogZnMvbnRmcy9pbm9kZS5jLgotICoKLSAqIFJldHVybiAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJu
byBvbiBlcnJvci4gIEluIHRoZSBjYXNlIHRoYXQgYW4gZXJyb3IgaXMKLSAqIGVuY291bnRlcmVk
IGl0IGlzIHBvc3NpYmxlIHRoYXQgdGhlIGluaXRpYWxpemVkIHNpemUgd2lsbCBhbHJlYWR5IGhh
dmUgYmVlbgotICogaW5jcmVtZW50ZWQgc29tZSB3YXkgdG93YXJkcyBAbmV3X2luaXRfc2l6ZSBi
dXQgaXQgaXMgZ3VhcmFudGVlZCB0aGF0IGlmCi0gKiB0aGlzIGlzIHRoZSBjYXNlLCB0aGUgbmVj
ZXNzYXJ5IHplcm9pbmcgd2lsbCBhbHNvIGhhdmUgaGFwcGVuZWQgYW5kIHRoYXQgYWxsCi0gKiBt
ZXRhZGF0YSBpcyBzZWxmLWNvbnNpc3RlbnQuCi0gKgotICogTG9ja2luZzogaV9tdXRleCBvbiB0
aGUgdmZzIGlub2RlIGNvcnJzZXBvbnNpbmQgdG8gdGhlIG50ZnMgaW5vZGUgQG5pIG11c3QgYmUK
LSAqCSAgICBoZWxkIGJ5IHRoZSBjYWxsZXIuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19hdHRyX2V4
dGVuZF9pbml0aWFsaXplZChudGZzX2lub2RlICpuaSwgY29uc3QgczY0IG5ld19pbml0X3NpemUp
Ci17Ci0JczY0IG9sZF9pbml0X3NpemU7Ci0JbG9mZl90IG9sZF9pX3NpemU7Ci0JcGdvZmZfdCBp
bmRleCwgZW5kX2luZGV4OwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0Jc3RydWN0IGlub2RlICp2
aSA9IFZGU19JKG5pKTsKLQludGZzX2lub2RlICpiYXNlX25pOwotCU1GVF9SRUNPUkQgKm0gPSBO
VUxMOwotCUFUVFJfUkVDT1JEICphOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHggPSBOVUxM
OwotCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nOwotCXN0cnVjdCBwYWdlICpwYWdlID0g
TlVMTDsKLQl1OCAqa2F0dHI7Ci0JaW50IGVycjsKLQl1MzIgYXR0cl9sZW47Ci0KLQlyZWFkX2xv
Y2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCW9sZF9pbml0X3NpemUgPSBuaS0+
aW5pdGlhbGl6ZWRfc2l6ZTsKLQlvbGRfaV9zaXplID0gaV9zaXplX3JlYWQodmkpOwotCUJVR19P
TihuZXdfaW5pdF9zaXplID4gbmktPmFsbG9jYXRlZF9zaXplKTsKLQlyZWFkX3VubG9ja19pcnFy
ZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9y
IGlfaW5vIDB4JWx4LCBhdHRyaWJ1dGUgdHlwZSAweCV4LCAiCi0JCQkib2xkX2luaXRpYWxpemVk
X3NpemUgMHglbGx4LCAiCi0JCQkibmV3X2luaXRpYWxpemVkX3NpemUgMHglbGx4LCBpX3NpemUg
MHglbGx4LiIsCi0JCQl2aS0+aV9pbm8sICh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSks
Ci0JCQkodW5zaWduZWQgbG9uZyBsb25nKW9sZF9pbml0X3NpemUsCi0JCQkodW5zaWduZWQgbG9u
ZyBsb25nKW5ld19pbml0X3NpemUsIG9sZF9pX3NpemUpOwotCWlmICghTklub0F0dHIobmkpKQot
CQliYXNlX25pID0gbmk7Ci0JZWxzZQotCQliYXNlX25pID0gbmktPmV4dC5iYXNlX250ZnNfaW5v
OwotCS8qIFVzZSBnb3RvIHRvIHJlZHVjZSBpbmRlbnRhdGlvbiBhbmQgd2UgbmVlZCB0aGUgbGFi
ZWwgYmVsb3cgYW55d2F5LiAqLwotCWlmIChOSW5vTm9uUmVzaWRlbnQobmkpKQotCQlnb3RvIGRv
X25vbl9yZXNpZGVudF9leHRlbmQ7Ci0JQlVHX09OKG9sZF9pbml0X3NpemUgIT0gb2xkX2lfc2l6
ZSk7Ci0JbSA9IG1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCWlmIChJU19FUlIobSkpIHsKLQkJ
ZXJyID0gUFRSX0VSUihtKTsKLQkJbSA9IE5VTEw7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JY3R4
ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KGJhc2VfbmksIG0pOwotCWlmICh1bmxpa2VseSgh
Y3R4KSkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWVyciA9IG50
ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0JCQlDQVNF
X1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlp
ZiAoZXJyID09IC1FTk9FTlQpCi0JCQllcnIgPSAtRUlPOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQot
CW0gPSBjdHgtPm1yZWM7Ci0JYSA9IGN0eC0+YXR0cjsKLQlCVUdfT04oYS0+bm9uX3Jlc2lkZW50
KTsKLQkvKiBUaGUgdG90YWwgbGVuZ3RoIG9mIHRoZSBhdHRyaWJ1dGUgdmFsdWUuICovCi0JYXR0
cl9sZW4gPSBsZTMyX3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZhbHVlX2xlbmd0aCk7Ci0JQlVH
X09OKG9sZF9pX3NpemUgIT0gKGxvZmZfdClhdHRyX2xlbik7Ci0JLyoKLQkgKiBEbyB0aGUgemVy
b2luZyBpbiB0aGUgbWZ0IHJlY29yZCBhbmQgdXBkYXRlIHRoZSBhdHRyaWJ1dGUgc2l6ZSBpbgot
CSAqIHRoZSBtZnQgcmVjb3JkLgotCSAqLwotCWthdHRyID0gKHU4KilhICsgbGUxNl90b19jcHUo
YS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpOwotCW1lbXNldChrYXR0ciArIGF0dHJfbGVu
LCAwLCBuZXdfaW5pdF9zaXplIC0gYXR0cl9sZW4pOwotCWEtPmRhdGEucmVzaWRlbnQudmFsdWVf
bGVuZ3RoID0gY3B1X3RvX2xlMzIoKHUzMiluZXdfaW5pdF9zaXplKTsKLQkvKiBGaW5hbGx5LCB1
cGRhdGUgdGhlIHNpemVzIGluIHRoZSB2ZnMgYW5kIG50ZnMgaW5vZGVzLiAqLwotCXdyaXRlX2xv
Y2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWlfc2l6ZV93cml0ZSh2aSwgbmV3
X2luaXRfc2l6ZSk7Ci0JbmktPmluaXRpYWxpemVkX3NpemUgPSBuZXdfaW5pdF9zaXplOwotCXdy
aXRlX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JZ290byBkb25l
OwotZG9fbm9uX3Jlc2lkZW50X2V4dGVuZDoKLQkvKgotCSAqIElmIHRoZSBuZXcgaW5pdGlhbGl6
ZWQgc2l6ZSBAbmV3X2luaXRfc2l6ZSBleGNlZWRzIHRoZSBjdXJyZW50IGZpbGUKLQkgKiBzaXpl
ICh2ZnMgaW5vZGUtPmlfc2l6ZSksIHdlIG5lZWQgdG8gZXh0ZW5kIHRoZSBmaWxlIHNpemUgdG8g
dGhlCi0JICogbmV3IGluaXRpYWxpemVkIHNpemUuCi0JICovCi0JaWYgKG5ld19pbml0X3NpemUg
PiBvbGRfaV9zaXplKSB7Ci0JCW0gPSBtYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQkJaWYgKElT
X0VSUihtKSkgewotCQkJZXJyID0gUFRSX0VSUihtKTsKLQkJCW0gPSBOVUxMOwotCQkJZ290byBl
cnJfb3V0OwotCQl9Ci0JCWN0eCA9IG50ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChiYXNlX25pLCBt
KTsKLQkJaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCQllcnIgPSAtRU5PTUVNOwotCQkJZ290byBl
cnJfb3V0OwotCQl9Ci0JCWVyciA9IG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1l
LCBuaS0+bmFtZV9sZW4sCi0JCQkJQ0FTRV9TRU5TSVRJVkUsIDAsIE5VTEwsIDAsIGN0eCk7Ci0J
CWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCQlpZiAoZXJyID09IC1FTk9FTlQpCi0JCQkJZXJyID0g
LUVJTzsKLQkJCWdvdG8gZXJyX291dDsKLQkJfQotCQltID0gY3R4LT5tcmVjOwotCQlhID0gY3R4
LT5hdHRyOwotCQlCVUdfT04oIWEtPm5vbl9yZXNpZGVudCk7Ci0JCUJVR19PTihvbGRfaV9zaXpl
ICE9IChsb2ZmX3QpCi0JCQkJc2xlNjRfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50LmRhdGFf
c2l6ZSkpOwotCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5kYXRhX3NpemUgPSBjcHVfdG9fc2xlNjQo
bmV3X2luaXRfc2l6ZSk7Ci0JCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3JkX3BhZ2UoY3R4LT5udGZz
X2lubyk7Ci0JCW1hcmtfbWZ0X3JlY29yZF9kaXJ0eShjdHgtPm50ZnNfaW5vKTsKLQkJLyogVXBk
YXRlIHRoZSBmaWxlIHNpemUgaW4gdGhlIHZmcyBpbm9kZS4gKi8KLQkJaV9zaXplX3dyaXRlKHZp
LCBuZXdfaW5pdF9zaXplKTsKLQkJbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JCWN0
eCA9IE5VTEw7Ci0JCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0JCW0gPSBOVUxMOwotCX0K
LQltYXBwaW5nID0gdmktPmlfbWFwcGluZzsKLQlpbmRleCA9IG9sZF9pbml0X3NpemUgPj4gUEFH
RV9TSElGVDsKLQllbmRfaW5kZXggPSAobmV3X2luaXRfc2l6ZSArIFBBR0VfU0laRSAtIDEpID4+
IFBBR0VfU0hJRlQ7Ci0JZG8gewotCQkvKgotCQkgKiBSZWFkIHRoZSBwYWdlLiAgSWYgdGhlIHBh
Z2UgaXMgbm90IHByZXNlbnQsIHRoaXMgd2lsbCB6ZXJvCi0JCSAqIHRoZSB1bmluaXRpYWxpemVk
IHJlZ2lvbnMgZm9yIHVzLgotCQkgKi8KLQkJcGFnZSA9IHJlYWRfbWFwcGluZ19wYWdlKG1hcHBp
bmcsIGluZGV4LCBOVUxMKTsKLQkJaWYgKElTX0VSUihwYWdlKSkgewotCQkJZXJyID0gUFRSX0VS
UihwYWdlKTsKLQkJCWdvdG8gaW5pdF9lcnJfb3V0OwotCQl9Ci0JCS8qCi0JCSAqIFVwZGF0ZSB0
aGUgaW5pdGlhbGl6ZWQgc2l6ZSBpbiB0aGUgbnRmcyBpbm9kZS4gIFRoaXMgaXMKLQkJICogZW5v
dWdoIHRvIG1ha2UgbnRmc193cml0ZXBhZ2UoKSB3b3JrLgotCQkgKi8KLQkJd3JpdGVfbG9ja19p
cnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCW5pLT5pbml0aWFsaXplZF9zaXplID0g
KHM2NCkoaW5kZXggKyAxKSA8PCBQQUdFX1NISUZUOwotCQlpZiAobmktPmluaXRpYWxpemVkX3Np
emUgPiBuZXdfaW5pdF9zaXplKQotCQkJbmktPmluaXRpYWxpemVkX3NpemUgPSBuZXdfaW5pdF9z
aXplOwotCQl3cml0ZV91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwot
CQkvKiBTZXQgdGhlIHBhZ2UgZGlydHkgc28gaXQgZ2V0cyB3cml0dGVuIG91dC4gKi8KLQkJc2V0
X3BhZ2VfZGlydHkocGFnZSk7Ci0JCXB1dF9wYWdlKHBhZ2UpOwotCQkvKgotCQkgKiBQbGF5IG5p
Y2Ugd2l0aCB0aGUgdm0gYW5kIHRoZSByZXN0IG9mIHRoZSBzeXN0ZW0uICBUaGlzIGlzCi0JCSAq
IHZlcnkgbXVjaCBuZWVkZWQgYXMgd2UgY2FuIHBvdGVudGlhbGx5IGJlIG1vZGlmeWluZyB0aGUK
LQkJICogaW5pdGlhbGlzZWQgc2l6ZSBmcm9tIGEgdmVyeSBzbWFsbCB2YWx1ZSB0byBhIHJlYWxs
eSBodWdlCi0JCSAqIHZhbHVlLCBlLmcuCi0JCSAqCWYgPSBvcGVuKHNvbWVmaWxlLCBPX1RSVU5D
KTsKLQkJICoJdHJ1bmNhdGUoZiwgMTBHaUIpOwotCQkgKglzZWVrKGYsIDEwR2lCKTsKLQkJICoJ
d3JpdGUoZiwgMSk7Ci0JCSAqIEFuZCB0aGlzIHdvdWxkIG1lYW4gd2Ugd291bGQgYmUgbWFya2lu
ZyBkaXJ0eSBodW5kcmVkcyBvZgotCQkgKiB0aG91c2FuZHMgb2YgcGFnZXMgb3IgYXMgaW4gdGhl
IGFib3ZlIGV4YW1wbGUgbW9yZSB0aGFuCi0JCSAqIHR3byBhbmQgYSBoYWxmIG1pbGxpb24gcGFn
ZXMhCi0JCSAqCi0JCSAqIFRPRE86IEZvciBzcGFyc2UgcGFnZXMgY291bGQgb3B0aW1pemUgdGhp
cyB3b3JrbG9hZCBieSB1c2luZwotCQkgKiB0aGUgRnNNaXNjIC8gTWlzY0ZzIHBhZ2UgYml0IGFz
IGEgIlBhZ2VJc1NwYXJzZSIgYml0LiAgVGhpcwotCQkgKiB3b3VsZCBiZSBzZXQgaW4gcmVhZF9m
b2xpbyBmb3Igc3BhcnNlIHBhZ2VzIGFuZCBoZXJlIHdlIHdvdWxkCi0JCSAqIG5vdCBuZWVkIHRv
IG1hcmsgZGlydHkgYW55IHBhZ2VzIHdoaWNoIGhhdmUgdGhpcyBiaXQgc2V0LgotCQkgKiBUaGUg
b25seSBjYXZlYXQgaXMgdGhhdCB3ZSBoYXZlIHRvIGNsZWFyIHRoZSBiaXQgZXZlcnl3aGVyZQot
CQkgKiB3aGVyZSB3ZSBhbGxvY2F0ZSBhbnkgY2x1c3RlcnMgdGhhdCBsaWUgaW4gdGhlIHBhZ2Ug
b3IgdGhhdAotCQkgKiBjb250YWluIHRoZSBwYWdlLgotCQkgKgotCQkgKiBUT0RPOiBBbiBldmVu
IGdyZWF0ZXIgb3B0aW1pemF0aW9uIHdvdWxkIGJlIGZvciB1cyB0byBvbmx5Ci0JCSAqIGNhbGwg
cmVhZF9mb2xpbygpIG9uIHBhZ2VzIHdoaWNoIGFyZSBub3QgaW4gc3BhcnNlIHJlZ2lvbnMgYXMK
LQkJICogZGV0ZXJtaW5lZCBmcm9tIHRoZSBydW5saXN0LiAgVGhpcyB3b3VsZCBncmVhdGx5IHJl
ZHVjZSB0aGUKLQkJICogbnVtYmVyIG9mIHBhZ2VzIHdlIHJlYWQgYW5kIG1ha2UgZGlydHkgaW4g
dGhlIGNhc2Ugb2Ygc3BhcnNlCi0JCSAqIGZpbGVzLgotCQkgKi8KLQkJYmFsYW5jZV9kaXJ0eV9w
YWdlc19yYXRlbGltaXRlZChtYXBwaW5nKTsKLQkJY29uZF9yZXNjaGVkKCk7Ci0JfSB3aGlsZSAo
KytpbmRleCA8IGVuZF9pbmRleCk7Ci0JcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ss
IGZsYWdzKTsKLQlCVUdfT04obmktPmluaXRpYWxpemVkX3NpemUgIT0gbmV3X2luaXRfc2l6ZSk7
Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCS8qIE5v
dyBicmluZyBpbiBzeW5jIHRoZSBpbml0aWFsaXplZF9zaXplIGluIHRoZSBtZnQgcmVjb3JkLiAq
LwotCW0gPSBtYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQlpZiAoSVNfRVJSKG0pKSB7Ci0JCWVy
ciA9IFBUUl9FUlIobSk7Ci0JCW0gPSBOVUxMOwotCQlnb3RvIGluaXRfZXJyX291dDsKLQl9Ci0J
Y3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KGJhc2VfbmksIG0pOwotCWlmICh1bmxpa2Vs
eSghY3R4KSkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIGluaXRfZXJyX291dDsKLQl9Ci0J
ZXJyID0gbnRmc19hdHRyX2xvb2t1cChuaS0+dHlwZSwgbmktPm5hbWUsIG5pLT5uYW1lX2xlbiwK
LQkJCUNBU0VfU0VOU0lUSVZFLCAwLCBOVUxMLCAwLCBjdHgpOwotCWlmICh1bmxpa2VseShlcnIp
KSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkKLQkJCWVyciA9IC1FSU87Ci0JCWdvdG8gaW5pdF9l
cnJfb3V0OwotCX0KLQltID0gY3R4LT5tcmVjOwotCWEgPSBjdHgtPmF0dHI7Ci0JQlVHX09OKCFh
LT5ub25fcmVzaWRlbnQpOwotCWEtPmRhdGEubm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemUg
PSBjcHVfdG9fc2xlNjQobmV3X2luaXRfc2l6ZSk7Ci1kb25lOgotCWZsdXNoX2RjYWNoZV9tZnRf
cmVjb3JkX3BhZ2UoY3R4LT5udGZzX2lubyk7Ci0JbWFya19tZnRfcmVjb3JkX2RpcnR5KGN0eC0+
bnRmc19pbm8pOwotCWlmIChjdHgpCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwot
CWlmIChtKQotCQl1bm1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCW50ZnNfZGVidWcoIkRvbmUs
IGluaXRpYWxpemVkX3NpemUgMHglbGx4LCBpX3NpemUgMHglbGx4LiIsCi0JCQkodW5zaWduZWQg
bG9uZyBsb25nKW5ld19pbml0X3NpemUsIGlfc2l6ZV9yZWFkKHZpKSk7Ci0JcmV0dXJuIDA7Ci1p
bml0X2Vycl9vdXQ6Ci0Jd3JpdGVfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7
Ci0JbmktPmluaXRpYWxpemVkX3NpemUgPSBvbGRfaW5pdF9zaXplOwotCXdyaXRlX3VubG9ja19p
cnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci1lcnJfb3V0OgotCWlmIChjdHgpCi0J
CW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCWlmIChtKQotCQl1bm1hcF9tZnRfcmVj
b3JkKGJhc2VfbmkpOwotCW50ZnNfZGVidWcoIkZhaWxlZC4gIFJldHVybmluZyBlcnJvciBjb2Rl
ICVpLiIsIGVycik7Ci0JcmV0dXJuIGVycjsKLX0KLQotc3RhdGljIHNzaXplX3QgbnRmc19wcmVw
YXJlX2ZpbGVfZm9yX3dyaXRlKHN0cnVjdCBraW9jYiAqaW9jYiwKLQkJc3RydWN0IGlvdl9pdGVy
ICpmcm9tKQotewotCWxvZmZfdCBwb3M7Ci0JczY0IGVuZCwgbGw7Ci0Jc3NpemVfdCBlcnI7Ci0J
dW5zaWduZWQgbG9uZyBmbGFnczsKLQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IGlvY2ItPmtpX2ZpbHA7
Ci0Jc3RydWN0IGlub2RlICp2aSA9IGZpbGVfaW5vZGUoZmlsZSk7Ci0JbnRmc19pbm9kZSAqbmkg
PSBOVEZTX0kodmkpOwotCW50ZnNfdm9sdW1lICp2b2wgPSBuaS0+dm9sOwotCi0JbnRmc19kZWJ1
ZygiRW50ZXJpbmcgZm9yIGlfaW5vIDB4JWx4LCBhdHRyaWJ1dGUgdHlwZSAweCV4LCBwb3MgIgot
CQkJIjB4JWxseCwgY291bnQgMHglenguIiwgdmktPmlfaW5vLAotCQkJKHVuc2lnbmVkKWxlMzJf
dG9fY3B1KG5pLT50eXBlKSwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpaW9jYi0+a2lfcG9zLAot
CQkJaW92X2l0ZXJfY291bnQoZnJvbSkpOwotCWVyciA9IGdlbmVyaWNfd3JpdGVfY2hlY2tzKGlv
Y2IsIGZyb20pOwotCWlmICh1bmxpa2VseShlcnIgPD0gMCkpCi0JCWdvdG8gb3V0OwotCS8qCi0J
ICogQWxsIGNoZWNrcyBoYXZlIHBhc3NlZC4gIEJlZm9yZSB3ZSBzdGFydCBkb2luZyBhbnkgd3Jp
dGluZyB3ZSB3YW50Ci0JICogdG8gYWJvcnQgYW55IHRvdGFsbHkgaWxsZWdhbCB3cml0ZXMuCi0J
ICovCi0JQlVHX09OKE5Jbm9Nc3RQcm90ZWN0ZWQobmkpKTsKLQlCVUdfT04obmktPnR5cGUgIT0g
QVRfREFUQSk7Ci0JLyogSWYgZmlsZSBpcyBlbmNyeXB0ZWQsIGRlbnkgYWNjZXNzLCBqdXN0IGxp
a2UgTlQ0LiAqLwotCWlmIChOSW5vRW5jcnlwdGVkKG5pKSkgewotCQkvKiBPbmx5ICREQVRBIGF0
dHJpYnV0ZXMgY2FuIGJlIGVuY3J5cHRlZC4gKi8KLQkJLyoKLQkJICogUmVtaW5kZXIgZm9yIGxh
dGVyOiBFbmNyeXB0ZWQgZmlsZXMgYXJlIF9hbHdheXNfCi0JCSAqIG5vbi1yZXNpZGVudCBzbyB0
aGF0IHRoZSBjb250ZW50IGNhbiBhbHdheXMgYmUgZW5jcnlwdGVkLgotCQkgKi8KLQkJbnRmc19k
ZWJ1ZygiRGVueWluZyB3cml0ZSBhY2Nlc3MgdG8gZW5jcnlwdGVkIGZpbGUuIik7Ci0JCWVyciA9
IC1FQUNDRVM7Ci0JCWdvdG8gb3V0OwotCX0KLQlpZiAoTklub0NvbXByZXNzZWQobmkpKSB7Ci0J
CS8qIE9ubHkgdW5uYW1lZCAkREFUQSBhdHRyaWJ1dGUgY2FuIGJlIGNvbXByZXNzZWQuICovCi0J
CUJVR19PTihuaS0+bmFtZV9sZW4pOwotCQkvKgotCQkgKiBSZW1pbmRlciBmb3IgbGF0ZXI6IElm
IHJlc2lkZW50LCB0aGUgZGF0YSBpcyBub3QgYWN0dWFsbHkKLQkJICogY29tcHJlc3NlZC4gIE9u
bHkgb24gdGhlIHN3aXRjaCB0byBub24tcmVzaWRlbnQgZG9lcwotCQkgKiBjb21wcmVzc2lvbiBr
aWNrIGluLiAgVGhpcyBpcyBpbiBjb250cmFzdCB0byBlbmNyeXB0ZWQgZmlsZXMKLQkJICogKHNl
ZSBhYm92ZSkuCi0JCSAqLwotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiV3JpdGluZyB0byBjb21w
cmVzc2VkIGZpbGVzIGlzIG5vdCAiCi0JCQkJImltcGxlbWVudGVkIHlldC4gIFNvcnJ5LiIpOwot
CQllcnIgPSAtRU9QTk9UU1VQUDsKLQkJZ290byBvdXQ7Ci0JfQotCWVyciA9IGZpbGVfcmVtb3Zl
X3ByaXZzKGZpbGUpOwotCWlmICh1bmxpa2VseShlcnIpKQotCQlnb3RvIG91dDsKLQkvKgotCSAq
IE91ciAtPnVwZGF0ZV90aW1lIG1ldGhvZCBhbHdheXMgc3VjY2VlZHMgdGh1cyBmaWxlX3VwZGF0
ZV90aW1lKCkKLQkgKiBjYW5ub3QgZmFpbCBlaXRoZXIgc28gdGhlcmUgaXMgbm8gbmVlZCB0byBj
aGVjayB0aGUgcmV0dXJuIGNvZGUuCi0JICovCi0JZmlsZV91cGRhdGVfdGltZShmaWxlKTsKLQlw
b3MgPSBpb2NiLT5raV9wb3M7Ci0JLyogVGhlIGZpcnN0IGJ5dGUgYWZ0ZXIgdGhlIGxhc3QgY2x1
c3RlciBiZWluZyB3cml0dGVuIHRvLiAqLwotCWVuZCA9IChwb3MgKyBpb3ZfaXRlcl9jb3VudChm
cm9tKSArIHZvbC0+Y2x1c3Rlcl9zaXplX21hc2spICYKLQkJCX4odTY0KXZvbC0+Y2x1c3Rlcl9z
aXplX21hc2s7Ci0JLyoKLQkgKiBJZiB0aGUgd3JpdGUgZ29lcyBiZXlvbmQgdGhlIGFsbG9jYXRl
ZCBzaXplLCBleHRlbmQgdGhlIGFsbG9jYXRpb24KLQkgKiB0byBjb3ZlciB0aGUgd2hvbGUgb2Yg
dGhlIHdyaXRlLCByb3VuZGVkIHVwIHRvIHRoZSBuZWFyZXN0IGNsdXN0ZXIuCi0JICovCi0JcmVh
ZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlsbCA9IG5pLT5hbGxvY2F0
ZWRfc2l6ZTsKLQlyZWFkX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7
Ci0JaWYgKGVuZCA+IGxsKSB7Ci0JCS8qCi0JCSAqIEV4dGVuZCB0aGUgYWxsb2NhdGlvbiB3aXRo
b3V0IGNoYW5naW5nIHRoZSBkYXRhIHNpemUuCi0JCSAqCi0JCSAqIE5vdGUgd2UgZW5zdXJlIHRo
ZSBhbGxvY2F0aW9uIGlzIGJpZyBlbm91Z2ggdG8gYXQgbGVhc3QKLQkJICogd3JpdGUgc29tZSBk
YXRhIGJ1dCB3ZSBkbyBub3QgcmVxdWlyZSB0aGUgYWxsb2NhdGlvbiB0byBiZQotCQkgKiBjb21w
bGV0ZSwgaS5lLiBpdCBtYXkgYmUgcGFydGlhbC4KLQkJICovCi0JCWxsID0gbnRmc19hdHRyX2V4
dGVuZF9hbGxvY2F0aW9uKG5pLCBlbmQsIC0xLCBwb3MpOwotCQlpZiAobGlrZWx5KGxsID49IDAp
KSB7Ci0JCQlCVUdfT04ocG9zID49IGxsKTsKLQkJCS8qIElmIHRoZSBleHRlbnNpb24gd2FzIHBh
cnRpYWwgdHJ1bmNhdGUgdGhlIHdyaXRlLiAqLwotCQkJaWYgKGVuZCA+IGxsKSB7Ci0JCQkJbnRm
c19kZWJ1ZygiVHJ1bmNhdGluZyB3cml0ZSB0byBpbm9kZSAweCVseCwgIgotCQkJCQkJImF0dHJp
YnV0ZSB0eXBlIDB4JXgsIGJlY2F1c2UgIgotCQkJCQkJInRoZSBhbGxvY2F0aW9uIHdhcyBvbmx5
ICIKLQkJCQkJCSJwYXJ0aWFsbHkgZXh0ZW5kZWQuIiwKLQkJCQkJCXZpLT5pX2lubywgKHVuc2ln
bmVkKQotCQkJCQkJbGUzMl90b19jcHUobmktPnR5cGUpKTsKLQkJCQlpb3ZfaXRlcl90cnVuY2F0
ZShmcm9tLCBsbCAtIHBvcyk7Ci0JCQl9Ci0JCX0gZWxzZSB7Ci0JCQllcnIgPSBsbDsKLQkJCXJl
YWRfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCQlsbCA9IG5pLT5hbGxv
Y2F0ZWRfc2l6ZTsKLQkJCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZs
YWdzKTsKLQkJCS8qIFBlcmZvcm0gYSBwYXJ0aWFsIHdyaXRlIGlmIHBvc3NpYmxlIG9yIGZhaWwu
ICovCi0JCQlpZiAocG9zIDwgbGwpIHsKLQkJCQludGZzX2RlYnVnKCJUcnVuY2F0aW5nIHdyaXRl
IHRvIGlub2RlIDB4JWx4ICIKLQkJCQkJCSJhdHRyaWJ1dGUgdHlwZSAweCV4LCBiZWNhdXNlICIK
LQkJCQkJCSJleHRlbmRpbmcgdGhlIGFsbG9jYXRpb24gIgotCQkJCQkJImZhaWxlZCAoZXJyb3Ig
JWQpLiIsCi0JCQkJCQl2aS0+aV9pbm8sICh1bnNpZ25lZCkKLQkJCQkJCWxlMzJfdG9fY3B1KG5p
LT50eXBlKSwKLQkJCQkJCShpbnQpLWVycik7Ci0JCQkJaW92X2l0ZXJfdHJ1bmNhdGUoZnJvbSwg
bGwgLSBwb3MpOwotCQkJfSBlbHNlIHsKLQkJCQlpZiAoZXJyICE9IC1FTk9TUEMpCi0JCQkJCW50
ZnNfZXJyb3IodmktPmlfc2IsICJDYW5ub3QgcGVyZm9ybSAiCi0JCQkJCQkJIndyaXRlIHRvIGlu
b2RlICIKLQkJCQkJCQkiMHglbHgsIGF0dHJpYnV0ZSAiCi0JCQkJCQkJInR5cGUgMHgleCwgYmVj
YXVzZSAiCi0JCQkJCQkJImV4dGVuZGluZyB0aGUgIgotCQkJCQkJCSJhbGxvY2F0aW9uIGZhaWxl
ZCAiCi0JCQkJCQkJIihlcnJvciAlbGQpLiIsCi0JCQkJCQkJdmktPmlfaW5vLCAodW5zaWduZWQp
Ci0JCQkJCQkJbGUzMl90b19jcHUobmktPnR5cGUpLAotCQkJCQkJCShsb25nKS1lcnIpOwotCQkJ
CWVsc2UKLQkJCQkJbnRmc19kZWJ1ZygiQ2Fubm90IHBlcmZvcm0gd3JpdGUgdG8gIgotCQkJCQkJ
CSJpbm9kZSAweCVseCwgIgotCQkJCQkJCSJhdHRyaWJ1dGUgdHlwZSAweCV4LCAiCi0JCQkJCQkJ
ImJlY2F1c2UgdGhlcmUgaXMgbm90ICIKLQkJCQkJCQkic3BhY2UgbGVmdC4iLAotCQkJCQkJCXZp
LT5pX2lubywgKHVuc2lnbmVkKQotCQkJCQkJCWxlMzJfdG9fY3B1KG5pLT50eXBlKSk7Ci0JCQkJ
Z290byBvdXQ7Ci0JCQl9Ci0JCX0KLQl9Ci0JLyoKLQkgKiBJZiB0aGUgd3JpdGUgc3RhcnRzIGJl
eW9uZCB0aGUgaW5pdGlhbGl6ZWQgc2l6ZSwgZXh0ZW5kIGl0IHVwIHRvIHRoZQotCSAqIGJlZ2lu
bmluZyBvZiB0aGUgd3JpdGUgYW5kIGluaXRpYWxpemUgYWxsIG5vbi1zcGFyc2Ugc3BhY2UgYmV0
d2VlbgotCSAqIHRoZSBvbGQgaW5pdGlhbGl6ZWQgc2l6ZSBhbmQgdGhlIG5ldyBvbmUuICBUaGlz
IGF1dG9tYXRpY2FsbHkgYWxzbwotCSAqIGluY3JlbWVudHMgdGhlIHZmcyBpbm9kZS0+aV9zaXpl
IHRvIGtlZXAgaXQgYWJvdmUgb3IgZXF1YWwgdG8gdGhlCi0JICogaW5pdGlhbGl6ZWRfc2l6ZS4K
LQkgKi8KLQlyZWFkX2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWxsID0g
bmktPmluaXRpYWxpemVkX3NpemU7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVf
bG9jaywgZmxhZ3MpOwotCWlmIChwb3MgPiBsbCkgewotCQkvKgotCQkgKiBXYWl0IGZvciBvbmdv
aW5nIGRpcmVjdCBpL28gdG8gY29tcGxldGUgYmVmb3JlIHByb2NlZWRpbmcuCi0JCSAqIE5ldyBk
aXJlY3QgaS9vIGNhbm5vdCBzdGFydCBhcyB3ZSBob2xkIGlfbXV0ZXguCi0JCSAqLwotCQlpbm9k
ZV9kaW9fd2FpdCh2aSk7Ci0JCWVyciA9IG50ZnNfYXR0cl9leHRlbmRfaW5pdGlhbGl6ZWQobmks
IHBvcyk7Ci0JCWlmICh1bmxpa2VseShlcnIgPCAwKSkKLQkJCW50ZnNfZXJyb3IodmktPmlfc2Is
ICJDYW5ub3QgcGVyZm9ybSB3cml0ZSB0byBpbm9kZSAiCi0JCQkJCSIweCVseCwgYXR0cmlidXRl
IHR5cGUgMHgleCwgYmVjYXVzZSAiCi0JCQkJCSJleHRlbmRpbmcgdGhlIGluaXRpYWxpemVkIHNp
emUgIgotCQkJCQkiZmFpbGVkIChlcnJvciAlZCkuIiwgdmktPmlfaW5vLAotCQkJCQkodW5zaWdu
ZWQpbGUzMl90b19jcHUobmktPnR5cGUpLAotCQkJCQkoaW50KS1lcnIpOwotCX0KLW91dDoKLQly
ZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIF9fbnRmc19ncmFiX2NhY2hlX3BhZ2VzIC0gb2J0YWlu
IGEgbnVtYmVyIG9mIGxvY2tlZCBwYWdlcwotICogQG1hcHBpbmc6CWFkZHJlc3Mgc3BhY2UgbWFw
cGluZyBmcm9tIHdoaWNoIHRvIG9idGFpbiBwYWdlIGNhY2hlIHBhZ2VzCi0gKiBAaW5kZXg6CXN0
YXJ0aW5nIGluZGV4IGluIEBtYXBwaW5nIGF0IHdoaWNoIHRvIGJlZ2luIG9idGFpbmluZyBwYWdl
cwotICogQG5yX3BhZ2VzOgludW1iZXIgb2YgcGFnZSBjYWNoZSBwYWdlcyB0byBvYnRhaW4KLSAq
IEBwYWdlczoJYXJyYXkgb2YgcGFnZXMgaW4gd2hpY2ggdG8gcmV0dXJuIHRoZSBvYnRhaW5lZCBw
YWdlIGNhY2hlIHBhZ2VzCi0gKiBAY2FjaGVkX3BhZ2U6IGFsbG9jYXRlZCBidXQgYXMgeWV0IHVu
dXNlZCBwYWdlCi0gKgotICogT2J0YWluIEBucl9wYWdlcyBsb2NrZWQgcGFnZSBjYWNoZSBwYWdl
cyBmcm9tIHRoZSBtYXBwaW5nIEBtYXBwaW5nIGFuZAotICogc3RhcnRpbmcgYXQgaW5kZXggQGlu
ZGV4LgotICoKLSAqIElmIGEgcGFnZSBpcyBuZXdseSBjcmVhdGVkLCBhZGQgaXQgdG8gbHJ1IGxp
c3QKLSAqCi0gKiBOb3RlLCB0aGUgcGFnZSBsb2NrcyBhcmUgb2J0YWluZWQgaW4gYXNjZW5kaW5n
IHBhZ2UgaW5kZXggb3JkZXIuCi0gKi8KLXN0YXRpYyBpbmxpbmUgaW50IF9fbnRmc19ncmFiX2Nh
Y2hlX3BhZ2VzKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLAotCQlwZ29mZl90IGluZGV4
LCBjb25zdCB1bnNpZ25lZCBucl9wYWdlcywgc3RydWN0IHBhZ2UgKipwYWdlcywKLQkJc3RydWN0
IHBhZ2UgKipjYWNoZWRfcGFnZSkKLXsKLQlpbnQgZXJyLCBucjsKLQotCUJVR19PTighbnJfcGFn
ZXMpOwotCWVyciA9IG5yID0gMDsKLQlkbyB7Ci0JCXBhZ2VzW25yXSA9IGZpbmRfZ2V0X3BhZ2Vf
ZmxhZ3MobWFwcGluZywgaW5kZXgsIEZHUF9MT0NLIHwKLQkJCQlGR1BfQUNDRVNTRUQpOwotCQlp
ZiAoIXBhZ2VzW25yXSkgewotCQkJaWYgKCEqY2FjaGVkX3BhZ2UpIHsKLQkJCQkqY2FjaGVkX3Bh
Z2UgPSBwYWdlX2NhY2hlX2FsbG9jKG1hcHBpbmcpOwotCQkJCWlmICh1bmxpa2VseSghKmNhY2hl
ZF9wYWdlKSkgewotCQkJCQllcnIgPSAtRU5PTUVNOwotCQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQkJ
fQotCQkJfQotCQkJZXJyID0gYWRkX3RvX3BhZ2VfY2FjaGVfbHJ1KCpjYWNoZWRfcGFnZSwgbWFw
cGluZywKLQkJCQkgICBpbmRleCwKLQkJCQkgICBtYXBwaW5nX2dmcF9jb25zdHJhaW50KG1hcHBp
bmcsIEdGUF9LRVJORUwpKTsKLQkJCWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCQkJaWYgKGVyciA9
PSAtRUVYSVNUKQotCQkJCQljb250aW51ZTsKLQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCQlw
YWdlc1tucl0gPSAqY2FjaGVkX3BhZ2U7Ci0JCQkqY2FjaGVkX3BhZ2UgPSBOVUxMOwotCQl9Ci0J
CWluZGV4Kys7Ci0JCW5yKys7Ci0JfSB3aGlsZSAobnIgPCBucl9wYWdlcyk7Ci1vdXQ6Ci0JcmV0
dXJuIGVycjsKLWVycl9vdXQ6Ci0Jd2hpbGUgKG5yID4gMCkgewotCQl1bmxvY2tfcGFnZShwYWdl
c1stLW5yXSk7Ci0JCXB1dF9wYWdlKHBhZ2VzW25yXSk7Ci0JfQotCWdvdG8gb3V0OwotfQotCi1z
dGF0aWMgaW5saW5lIHZvaWQgbnRmc19zdWJtaXRfYmhfZm9yX3JlYWQoc3RydWN0IGJ1ZmZlcl9o
ZWFkICpiaCkKLXsKLQlsb2NrX2J1ZmZlcihiaCk7Ci0JZ2V0X2JoKGJoKTsKLQliaC0+Yl9lbmRf
aW8gPSBlbmRfYnVmZmVyX3JlYWRfc3luYzsKLQlzdWJtaXRfYmgoUkVRX09QX1JFQUQsIGJoKTsK
LX0KLQotLyoqCi0gKiBudGZzX3ByZXBhcmVfcGFnZXNfZm9yX25vbl9yZXNpZGVudF93cml0ZSAt
IHByZXBhcmUgcGFnZXMgZm9yIHJlY2VpdmluZyBkYXRhCi0gKiBAcGFnZXM6CWFycmF5IG9mIGRl
c3RpbmF0aW9uIHBhZ2VzCi0gKiBAbnJfcGFnZXM6CW51bWJlciBvZiBwYWdlcyBpbiBAcGFnZXMK
LSAqIEBwb3M6CWJ5dGUgcG9zaXRpb24gaW4gZmlsZSBhdCB3aGljaCB0aGUgd3JpdGUgYmVnaW5z
Ci0gKiBAYnl0ZXM6CW51bWJlciBvZiBieXRlcyB0byBiZSB3cml0dGVuCi0gKgotICogVGhpcyBp
cyBjYWxsZWQgZm9yIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGVzIGZyb20gbnRmc19maWxlX2J1ZmZl
cmVkX3dyaXRlKCkKLSAqIHdpdGggaV9tdXRleCBoZWxkIG9uIHRoZSBpbm9kZSAoQHBhZ2VzWzBd
LT5tYXBwaW5nLT5ob3N0KS4gIFRoZXJlIGFyZQotICogQG5yX3BhZ2VzIHBhZ2VzIGluIEBwYWdl
cyB3aGljaCBhcmUgbG9ja2VkIGJ1dCBub3Qga21hcCgpcGVkLiAgVGhlIHNvdXJjZQotICogZGF0
YSBoYXMgbm90IHlldCBiZWVuIGNvcGllZCBpbnRvIHRoZSBAcGFnZXMuCi0gKiAKLSAqIE5lZWQg
dG8gZmlsbCBhbnkgaG9sZXMgd2l0aCBhY3R1YWwgY2x1c3RlcnMsIGFsbG9jYXRlIGJ1ZmZlcnMg
aWYgbmVjZXNzYXJ5LAotICogZW5zdXJlIGFsbCB0aGUgYnVmZmVycyBhcmUgbWFwcGVkLCBhbmQg
YnJpbmcgdXB0b2RhdGUgYW55IGJ1ZmZlcnMgdGhhdCBhcmUKLSAqIG9ubHkgcGFydGlhbGx5IGJl
aW5nIHdyaXR0ZW4gdG8uCi0gKgotICogSWYgQG5yX3BhZ2VzIGlzIGdyZWF0ZXIgdGhhbiBvbmUs
IHdlIGFyZSBndWFyYW50ZWVkIHRoYXQgdGhlIGNsdXN0ZXIgc2l6ZSBpcwotICogZ3JlYXRlciB0
aGFuIFBBR0VfU0laRSwgdGhhdCBhbGwgcGFnZXMgaW4gQHBhZ2VzIGFyZSBlbnRpcmVseSBpbnNp
ZGUKLSAqIHRoZSBzYW1lIGNsdXN0ZXIgYW5kIHRoYXQgdGhleSBhcmUgdGhlIGVudGlyZXR5IG9m
IHRoYXQgY2x1c3RlciwgYW5kIHRoYXQKLSAqIHRoZSBjbHVzdGVyIGlzIHNwYXJzZSwgaS5lLiB3
ZSBuZWVkIHRvIGFsbG9jYXRlIGEgY2x1c3RlciB0byBmaWxsIHRoZSBob2xlLgotICoKLSAqIGlf
c2l6ZSBpcyBub3QgdG8gYmUgbW9kaWZpZWQgeWV0LgotICoKLSAqIFJldHVybiAwIG9uIHN1Y2Nl
c3Mgb3IgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0aWMgaW50IG50ZnNfcHJlcGFyZV9wYWdl
c19mb3Jfbm9uX3Jlc2lkZW50X3dyaXRlKHN0cnVjdCBwYWdlICoqcGFnZXMsCi0JCXVuc2lnbmVk
IG5yX3BhZ2VzLCBzNjQgcG9zLCBzaXplX3QgYnl0ZXMpCi17Ci0JVkNOIHZjbiwgaGlnaGVzdF92
Y24gPSAwLCBjcG9zLCBjZW5kLCBiaF9jcG9zLCBiaF9jZW5kOwotCUxDTiBsY247Ci0JczY0IGJo
X3BvcywgdmNuX2xlbiwgZW5kLCBpbml0aWFsaXplZF9zaXplOwotCXNlY3Rvcl90IGxjbl9ibG9j
azsKLQlzdHJ1Y3QgZm9saW8gKmZvbGlvOwotCXN0cnVjdCBpbm9kZSAqdmk7Ci0JbnRmc19pbm9k
ZSAqbmksICpiYXNlX25pID0gTlVMTDsKLQludGZzX3ZvbHVtZSAqdm9sOwotCXJ1bmxpc3RfZWxl
bWVudCAqcmwsICpybDI7Ci0Jc3RydWN0IGJ1ZmZlcl9oZWFkICpiaCwgKmhlYWQsICp3YWl0WzJd
LCAqKndhaXRfYmggPSB3YWl0OwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHggPSBOVUxMOwot
CU1GVF9SRUNPUkQgKm0gPSBOVUxMOwotCUFUVFJfUkVDT1JEICphID0gTlVMTDsKLQl1bnNpZ25l
ZCBsb25nIGZsYWdzOwotCXUzMiBhdHRyX3JlY19sZW4gPSAwOwotCXVuc2lnbmVkIGJsb2Nrc2l6
ZSwgdTsKLQlpbnQgZXJyLCBtcF9zaXplOwotCWJvb2wgcmxfd3JpdGVfbG9ja2VkLCB3YXNfaG9s
ZSwgaXNfcmV0cnk7Ci0JdW5zaWduZWQgY2hhciBibG9ja3NpemVfYml0czsKLQlzdHJ1Y3Qgewot
CQl1OCBydW5saXN0X21lcmdlZDoxOwotCQl1OCBtZnRfYXR0cl9tYXBwZWQ6MTsKLQkJdTggbXBf
cmVidWlsdDoxOwotCQl1OCBhdHRyX3N3aXRjaGVkOjE7Ci0JfSBzdGF0dXMgPSB7IDAsIDAsIDAs
IDAgfTsKLQotCUJVR19PTighbnJfcGFnZXMpOwotCUJVR19PTighcGFnZXMpOwotCUJVR19PTigh
KnBhZ2VzKTsKLQl2aSA9IHBhZ2VzWzBdLT5tYXBwaW5nLT5ob3N0OwotCW5pID0gTlRGU19JKHZp
KTsKLQl2b2wgPSBuaS0+dm9sOwotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBpbm9kZSAweCVs
eCwgYXR0cmlidXRlIHR5cGUgMHgleCwgc3RhcnQgcGFnZSAiCi0JCQkiaW5kZXggMHglbHgsIG5y
X3BhZ2VzIDB4JXgsIHBvcyAweCVsbHgsIGJ5dGVzIDB4JXp4LiIsCi0JCQl2aS0+aV9pbm8sIG5p
LT50eXBlLCBwYWdlc1swXS0+aW5kZXgsIG5yX3BhZ2VzLAotCQkJKGxvbmcgbG9uZylwb3MsIGJ5
dGVzKTsKLQlibG9ja3NpemUgPSB2b2wtPnNiLT5zX2Jsb2Nrc2l6ZTsKLQlibG9ja3NpemVfYml0
cyA9IHZvbC0+c2ItPnNfYmxvY2tzaXplX2JpdHM7Ci0Jcmxfd3JpdGVfbG9ja2VkID0gZmFsc2U7
Ci0JcmwgPSBOVUxMOwotCWVyciA9IDA7Ci0JdmNuID0gbGNuID0gLTE7Ci0JdmNuX2xlbiA9IDA7
Ci0JbGNuX2Jsb2NrID0gLTE7Ci0Jd2FzX2hvbGUgPSBmYWxzZTsKLQljcG9zID0gcG9zID4+IHZv
bC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JZW5kID0gcG9zICsgYnl0ZXM7Ci0JY2VuZCA9IChlbmQg
KyB2b2wtPmNsdXN0ZXJfc2l6ZSAtIDEpID4+IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JLyoK
LQkgKiBMb29wIG92ZXIgZWFjaCBidWZmZXIgaW4gZWFjaCBmb2xpby4gIFVzZSBnb3RvIHRvCi0J
ICogcmVkdWNlIGluZGVudGF0aW9uLgotCSAqLwotCXUgPSAwOwotZG9fbmV4dF9mb2xpbzoKLQlm
b2xpbyA9IHBhZ2VfZm9saW8ocGFnZXNbdV0pOwotCWJoX3BvcyA9IGZvbGlvX3Bvcyhmb2xpbyk7
Ci0JaGVhZCA9IGZvbGlvX2J1ZmZlcnMoZm9saW8pOwotCWlmICghaGVhZCkKLQkJLyoKLQkJICog
Y3JlYXRlX2VtcHR5X2J1ZmZlcnMoKSB3aWxsIGNyZWF0ZSB1cHRvZGF0ZS9kaXJ0eQotCQkgKiBi
dWZmZXJzIGlmIHRoZSBmb2xpbyBpcyB1cHRvZGF0ZS9kaXJ0eS4KLQkJICovCi0JCWhlYWQgPSBj
cmVhdGVfZW1wdHlfYnVmZmVycyhmb2xpbywgYmxvY2tzaXplLCAwKTsKLQliaCA9IGhlYWQ7Ci0J
ZG8gewotCQlWQ04gY2RlbHRhOwotCQlzNjQgYmhfZW5kOwotCQl1bnNpZ25lZCBiaF9jb2ZzOwot
Ci0JCS8qIENsZWFyIGJ1ZmZlcl9uZXcgb24gYWxsIGJ1ZmZlcnMgdG8gcmVpbml0aWFsaXNlIHN0
YXRlLiAqLwotCQlpZiAoYnVmZmVyX25ldyhiaCkpCi0JCQljbGVhcl9idWZmZXJfbmV3KGJoKTsK
LQkJYmhfZW5kID0gYmhfcG9zICsgYmxvY2tzaXplOwotCQliaF9jcG9zID0gYmhfcG9zID4+IHZv
bC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JCWJoX2NvZnMgPSBiaF9wb3MgJiB2b2wtPmNsdXN0ZXJf
c2l6ZV9tYXNrOwotCQlpZiAoYnVmZmVyX21hcHBlZChiaCkpIHsKLQkJCS8qCi0JCQkgKiBUaGUg
YnVmZmVyIGlzIGFscmVhZHkgbWFwcGVkLiAgSWYgaXQgaXMgdXB0b2RhdGUsCi0JCQkgKiBpZ25v
cmUgaXQuCi0JCQkgKi8KLQkJCWlmIChidWZmZXJfdXB0b2RhdGUoYmgpKQotCQkJCWNvbnRpbnVl
OwotCQkJLyoKLQkJCSAqIFRoZSBidWZmZXIgaXMgbm90IHVwdG9kYXRlLiAgSWYgdGhlIGZvbGlv
IGlzIHVwdG9kYXRlCi0JCQkgKiBzZXQgdGhlIGJ1ZmZlciB1cHRvZGF0ZSBhbmQgb3RoZXJ3aXNl
IGlnbm9yZSBpdC4KLQkJCSAqLwotCQkJaWYgKGZvbGlvX3Rlc3RfdXB0b2RhdGUoZm9saW8pKSB7
Ci0JCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0JCQkJY29udGludWU7Ci0JCQl9Ci0JCQkv
KgotCQkJICogTmVpdGhlciB0aGUgZm9saW8gbm9yIHRoZSBidWZmZXIgYXJlIHVwdG9kYXRlLiAg
SWYKLQkJCSAqIHRoZSBidWZmZXIgaXMgb25seSBwYXJ0aWFsbHkgYmVpbmcgd3JpdHRlbiB0bywg
d2UKLQkJCSAqIG5lZWQgdG8gcmVhZCBpdCBpbiBiZWZvcmUgdGhlIHdyaXRlLCBpLmUuIG5vdy4K
LQkJCSAqLwotCQkJaWYgKChiaF9wb3MgPCBwb3MgJiYgYmhfZW5kID4gcG9zKSB8fAotCQkJCQko
YmhfcG9zIDwgZW5kICYmIGJoX2VuZCA+IGVuZCkpIHsKLQkJCQkvKgotCQkJCSAqIElmIHRoZSBi
dWZmZXIgaXMgZnVsbHkgb3IgcGFydGlhbGx5IHdpdGhpbgotCQkJCSAqIHRoZSBpbml0aWFsaXpl
ZCBzaXplLCBkbyBhbiBhY3R1YWwgcmVhZC4KLQkJCQkgKiBPdGhlcndpc2UsIHNpbXBseSB6ZXJv
IHRoZSBidWZmZXIuCi0JCQkJICovCi0JCQkJcmVhZF9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQkJCQlpbml0aWFsaXplZF9zaXplID0gbmktPmluaXRpYWxpemVkX3NpemU7
Ci0JCQkJcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQkJ
CWlmIChiaF9wb3MgPCBpbml0aWFsaXplZF9zaXplKSB7Ci0JCQkJCW50ZnNfc3VibWl0X2JoX2Zv
cl9yZWFkKGJoKTsKLQkJCQkJKndhaXRfYmgrKyA9IGJoOwotCQkJCX0gZWxzZSB7Ci0JCQkJCWZv
bGlvX3plcm9fcmFuZ2UoZm9saW8sIGJoX29mZnNldChiaCksCi0JCQkJCQkJYmxvY2tzaXplKTsK
LQkJCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0JCQkJfQotCQkJfQotCQkJY29udGludWU7
Ci0JCX0KLQkJLyogVW5tYXBwZWQgYnVmZmVyLiAgTmVlZCB0byBtYXAgaXQuICovCi0JCWJoLT5i
X2JkZXYgPSB2b2wtPnNiLT5zX2JkZXY7Ci0JCS8qCi0JCSAqIElmIHRoZSBjdXJyZW50IGJ1ZmZl
ciBpcyBpbiB0aGUgc2FtZSBjbHVzdGVycyBhcyB0aGUgbWFwCi0JCSAqIGNhY2hlLCB0aGVyZSBp
cyBubyBuZWVkIHRvIGNoZWNrIHRoZSBydW5saXN0IGFnYWluLiAgVGhlCi0JCSAqIG1hcCBjYWNo
ZSBpcyBtYWRlIHVwIG9mIEB2Y24sIHdoaWNoIGlzIHRoZSBmaXJzdCBjYWNoZWQgZmlsZQotCQkg
KiBjbHVzdGVyLCBAdmNuX2xlbiB3aGljaCBpcyB0aGUgbnVtYmVyIG9mIGNhY2hlZCBmaWxlCi0J
CSAqIGNsdXN0ZXJzLCBAbGNuIGlzIHRoZSBkZXZpY2UgY2x1c3RlciBjb3JyZXNwb25kaW5nIHRv
IEB2Y24sCi0JCSAqIGFuZCBAbGNuX2Jsb2NrIGlzIHRoZSBibG9jayBudW1iZXIgY29ycmVzcG9u
ZGluZyB0byBAbGNuLgotCQkgKi8KLQkJY2RlbHRhID0gYmhfY3BvcyAtIHZjbjsKLQkJaWYgKGxp
a2VseSghY2RlbHRhIHx8IChjZGVsdGEgPiAwICYmIGNkZWx0YSA8IHZjbl9sZW4pKSkgewotbWFw
X2J1ZmZlcl9jYWNoZWQ6Ci0JCQlCVUdfT04obGNuIDwgMCk7Ci0JCQliaC0+Yl9ibG9ja25yID0g
bGNuX2Jsb2NrICsKLQkJCQkJKGNkZWx0YSA8PCAodm9sLT5jbHVzdGVyX3NpemVfYml0cyAtCi0J
CQkJCWJsb2Nrc2l6ZV9iaXRzKSkgKwotCQkJCQkoYmhfY29mcyA+PiBibG9ja3NpemVfYml0cyk7
Ci0JCQlzZXRfYnVmZmVyX21hcHBlZChiaCk7Ci0JCQkvKgotCQkJICogSWYgdGhlIGZvbGlvIGlz
IHVwdG9kYXRlIHNvIGlzIHRoZSBidWZmZXIuICBJZiB0aGUKLQkJCSAqIGJ1ZmZlciBpcyBmdWxs
eSBvdXRzaWRlIHRoZSB3cml0ZSwgd2UgaWdub3JlIGl0IGlmCi0JCQkgKiBpdCB3YXMgYWxyZWFk
eSBhbGxvY2F0ZWQgYW5kIHdlIG1hcmsgaXQgZGlydHkgc28gaXQKLQkJCSAqIGdldHMgd3JpdHRl
biBvdXQgaWYgd2UgYWxsb2NhdGVkIGl0LiAgT24gdGhlIG90aGVyCi0JCQkgKiBoYW5kLCBpZiB3
ZSBhbGxvY2F0ZWQgdGhlIGJ1ZmZlciBidXQgd2UgYXJlIG5vdAotCQkJICogbWFya2luZyBpdCBk
aXJ0eSB3ZSBzZXQgYnVmZmVyX25ldyBzbyB3ZSBjYW4gZG8KLQkJCSAqIGVycm9yIHJlY292ZXJ5
LgotCQkJICovCi0JCQlpZiAoZm9saW9fdGVzdF91cHRvZGF0ZShmb2xpbykpIHsKLQkJCQlpZiAo
IWJ1ZmZlcl91cHRvZGF0ZShiaCkpCi0JCQkJCXNldF9idWZmZXJfdXB0b2RhdGUoYmgpOwotCQkJ
CWlmICh1bmxpa2VseSh3YXNfaG9sZSkpIHsKLQkJCQkJLyogV2UgYWxsb2NhdGVkIHRoZSBidWZm
ZXIuICovCi0JCQkJCWNsZWFuX2JkZXZfYmhfYWxpYXMoYmgpOwotCQkJCQlpZiAoYmhfZW5kIDw9
IHBvcyB8fCBiaF9wb3MgPj0gZW5kKQotCQkJCQkJbWFya19idWZmZXJfZGlydHkoYmgpOwotCQkJ
CQllbHNlCi0JCQkJCQlzZXRfYnVmZmVyX25ldyhiaCk7Ci0JCQkJfQotCQkJCWNvbnRpbnVlOwot
CQkJfQotCQkJLyogUGFnZSBpcyBfbm90XyB1cHRvZGF0ZS4gKi8KLQkJCWlmIChsaWtlbHkoIXdh
c19ob2xlKSkgewotCQkJCS8qCi0JCQkJICogQnVmZmVyIHdhcyBhbHJlYWR5IGFsbG9jYXRlZC4g
IElmIGl0IGlzIG5vdAotCQkJCSAqIHVwdG9kYXRlIGFuZCBpcyBvbmx5IHBhcnRpYWxseSBiZWlu
ZyB3cml0dGVuCi0JCQkJICogdG8sIHdlIG5lZWQgdG8gcmVhZCBpdCBpbiBiZWZvcmUgdGhlIHdy
aXRlLAotCQkJCSAqIGkuZS4gbm93LgotCQkJCSAqLwotCQkJCWlmICghYnVmZmVyX3VwdG9kYXRl
KGJoKSAmJiBiaF9wb3MgPCBlbmQgJiYKLQkJCQkJCWJoX2VuZCA+IHBvcyAmJgotCQkJCQkJKGJo
X3BvcyA8IHBvcyB8fAotCQkJCQkJYmhfZW5kID4gZW5kKSkgewotCQkJCQkvKgotCQkJCQkgKiBJ
ZiB0aGUgYnVmZmVyIGlzIGZ1bGx5IG9yIHBhcnRpYWxseQotCQkJCQkgKiB3aXRoaW4gdGhlIGlu
aXRpYWxpemVkIHNpemUsIGRvIGFuCi0JCQkJCSAqIGFjdHVhbCByZWFkLiAgT3RoZXJ3aXNlLCBz
aW1wbHkgemVybwotCQkJCQkgKiB0aGUgYnVmZmVyLgotCQkJCQkgKi8KLQkJCQkJcmVhZF9sb2Nr
X2lycXNhdmUoJm5pLT5zaXplX2xvY2ssCi0JCQkJCQkJZmxhZ3MpOwotCQkJCQlpbml0aWFsaXpl
ZF9zaXplID0gbmktPmluaXRpYWxpemVkX3NpemU7Ci0JCQkJCXJlYWRfdW5sb2NrX2lycXJlc3Rv
cmUoJm5pLT5zaXplX2xvY2ssCi0JCQkJCQkJZmxhZ3MpOwotCQkJCQlpZiAoYmhfcG9zIDwgaW5p
dGlhbGl6ZWRfc2l6ZSkgewotCQkJCQkJbnRmc19zdWJtaXRfYmhfZm9yX3JlYWQoYmgpOwotCQkJ
CQkJKndhaXRfYmgrKyA9IGJoOwotCQkJCQl9IGVsc2UgewotCQkJCQkJZm9saW9femVyb19yYW5n
ZShmb2xpbywKLQkJCQkJCQkJYmhfb2Zmc2V0KGJoKSwKLQkJCQkJCQkJYmxvY2tzaXplKTsKLQkJ
CQkJCXNldF9idWZmZXJfdXB0b2RhdGUoYmgpOwotCQkJCQl9Ci0JCQkJfQotCQkJCWNvbnRpbnVl
OwotCQkJfQotCQkJLyogV2UgYWxsb2NhdGVkIHRoZSBidWZmZXIuICovCi0JCQljbGVhbl9iZGV2
X2JoX2FsaWFzKGJoKTsKLQkJCS8qCi0JCQkgKiBJZiB0aGUgYnVmZmVyIGlzIGZ1bGx5IG91dHNp
ZGUgdGhlIHdyaXRlLCB6ZXJvIGl0LAotCQkJICogc2V0IGl0IHVwdG9kYXRlLCBhbmQgbWFyayBp
dCBkaXJ0eSBzbyBpdCBnZXRzCi0JCQkgKiB3cml0dGVuIG91dC4gIElmIGl0IGlzIHBhcnRpYWxs
eSBiZWluZyB3cml0dGVuIHRvLAotCQkJICogemVybyByZWdpb24gc3Vycm91bmRpbmcgdGhlIHdy
aXRlIGJ1dCBsZWF2ZSBpdCB0bwotCQkJICogY29tbWl0IHdyaXRlIHRvIGRvIGFueXRoaW5nIGVs
c2UuICBGaW5hbGx5LCBpZiB0aGUKLQkJCSAqIGJ1ZmZlciBpcyBmdWxseSBiZWluZyBvdmVyd3Jp
dHRlbiwgZG8gbm90aGluZy4KLQkJCSAqLwotCQkJaWYgKGJoX2VuZCA8PSBwb3MgfHwgYmhfcG9z
ID49IGVuZCkgewotCQkJCWlmICghYnVmZmVyX3VwdG9kYXRlKGJoKSkgewotCQkJCQlmb2xpb196
ZXJvX3JhbmdlKGZvbGlvLCBiaF9vZmZzZXQoYmgpLAotCQkJCQkJCWJsb2Nrc2l6ZSk7Ci0JCQkJ
CXNldF9idWZmZXJfdXB0b2RhdGUoYmgpOwotCQkJCX0KLQkJCQltYXJrX2J1ZmZlcl9kaXJ0eShi
aCk7Ci0JCQkJY29udGludWU7Ci0JCQl9Ci0JCQlzZXRfYnVmZmVyX25ldyhiaCk7Ci0JCQlpZiAo
IWJ1ZmZlcl91cHRvZGF0ZShiaCkgJiYKLQkJCQkJKGJoX3BvcyA8IHBvcyB8fCBiaF9lbmQgPiBl
bmQpKSB7Ci0JCQkJdTggKmthZGRyOwotCQkJCXVuc2lnbmVkIHBvZnM7Ci0JCQkJCQotCQkJCWth
ZGRyID0ga21hcF9sb2NhbF9mb2xpbyhmb2xpbywgMCk7Ci0JCQkJaWYgKGJoX3BvcyA8IHBvcykg
ewotCQkJCQlwb2ZzID0gYmhfcG9zICYgflBBR0VfTUFTSzsKLQkJCQkJbWVtc2V0KGthZGRyICsg
cG9mcywgMCwgcG9zIC0gYmhfcG9zKTsKLQkJCQl9Ci0JCQkJaWYgKGJoX2VuZCA+IGVuZCkgewot
CQkJCQlwb2ZzID0gZW5kICYgflBBR0VfTUFTSzsKLQkJCQkJbWVtc2V0KGthZGRyICsgcG9mcywg
MCwgYmhfZW5kIC0gZW5kKTsKLQkJCQl9Ci0JCQkJa3VubWFwX2xvY2FsKGthZGRyKTsKLQkJCQlm
bHVzaF9kY2FjaGVfZm9saW8oZm9saW8pOwotCQkJfQotCQkJY29udGludWU7Ci0JCX0KLQkJLyoK
LQkJICogU2xvdyBwYXRoOiB0aGlzIGlzIHRoZSBmaXJzdCBidWZmZXIgaW4gdGhlIGNsdXN0ZXIu
ICBJZiBpdAotCQkgKiBpcyBvdXRzaWRlIGFsbG9jYXRlZCBzaXplIGFuZCBpcyBub3QgdXB0b2Rh
dGUsIHplcm8gaXQgYW5kCi0JCSAqIHNldCBpdCB1cHRvZGF0ZS4KLQkJICovCi0JCXJlYWRfbG9j
a19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCWluaXRpYWxpemVkX3NpemUgPSBu
aS0+YWxsb2NhdGVkX3NpemU7Ci0JCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQkJaWYgKGJoX3BvcyA+IGluaXRpYWxpemVkX3NpemUpIHsKLQkJCWlmIChm
b2xpb190ZXN0X3VwdG9kYXRlKGZvbGlvKSkgewotCQkJCWlmICghYnVmZmVyX3VwdG9kYXRlKGJo
KSkKLQkJCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0JCQl9IGVsc2UgaWYgKCFidWZmZXJf
dXB0b2RhdGUoYmgpKSB7Ci0JCQkJZm9saW9femVyb19yYW5nZShmb2xpbywgYmhfb2Zmc2V0KGJo
KSwKLQkJCQkJCWJsb2Nrc2l6ZSk7Ci0JCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0JCQl9
Ci0JCQljb250aW51ZTsKLQkJfQotCQlpc19yZXRyeSA9IGZhbHNlOwotCQlpZiAoIXJsKSB7Ci0J
CQlkb3duX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotcmV0cnlfcmVtYXA6Ci0JCQlybCA9IG5p
LT5ydW5saXN0LnJsOwotCQl9Ci0JCWlmIChsaWtlbHkocmwgIT0gTlVMTCkpIHsKLQkJCS8qIFNl
ZWsgdG8gZWxlbWVudCBjb250YWluaW5nIHRhcmdldCBjbHVzdGVyLiAqLwotCQkJd2hpbGUgKHJs
LT5sZW5ndGggJiYgcmxbMV0udmNuIDw9IGJoX2Nwb3MpCi0JCQkJcmwrKzsKLQkJCWxjbiA9IG50
ZnNfcmxfdmNuX3RvX2xjbihybCwgYmhfY3Bvcyk7Ci0JCQlpZiAobGlrZWx5KGxjbiA+PSAwKSkg
ewotCQkJCS8qCi0JCQkJICogU3VjY2Vzc2Z1bCByZW1hcCwgc2V0dXAgdGhlIG1hcCBjYWNoZSBh
bmQKLQkJCQkgKiB1c2UgdGhhdCB0byBkZWFsIHdpdGggdGhlIGJ1ZmZlci4KLQkJCQkgKi8KLQkJ
CQl3YXNfaG9sZSA9IGZhbHNlOwotCQkJCXZjbiA9IGJoX2Nwb3M7Ci0JCQkJdmNuX2xlbiA9IHJs
WzFdLnZjbiAtIHZjbjsKLQkJCQlsY25fYmxvY2sgPSBsY24gPDwgKHZvbC0+Y2x1c3Rlcl9zaXpl
X2JpdHMgLQotCQkJCQkJYmxvY2tzaXplX2JpdHMpOwotCQkJCWNkZWx0YSA9IDA7Ci0JCQkJLyoK
LQkJCQkgKiBJZiB0aGUgbnVtYmVyIG9mIHJlbWFpbmluZyBjbHVzdGVycyB0b3VjaGVkCi0JCQkJ
ICogYnkgdGhlIHdyaXRlIGlzIHNtYWxsZXIgb3IgZXF1YWwgdG8gdGhlCi0JCQkJICogbnVtYmVy
IG9mIGNhY2hlZCBjbHVzdGVycywgdW5sb2NrIHRoZQotCQkJCSAqIHJ1bmxpc3QgYXMgdGhlIG1h
cCBjYWNoZSB3aWxsIGJlIHVzZWQgZnJvbQotCQkJCSAqIG5vdyBvbi4KLQkJCQkgKi8KLQkJCQlp
ZiAobGlrZWx5KHZjbiArIHZjbl9sZW4gPj0gY2VuZCkpIHsKLQkJCQkJaWYgKHJsX3dyaXRlX2xv
Y2tlZCkgewotCQkJCQkJdXBfd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotCQkJCQkJcmxfd3Jp
dGVfbG9ja2VkID0gZmFsc2U7Ci0JCQkJCX0gZWxzZQotCQkJCQkJdXBfcmVhZCgmbmktPnJ1bmxp
c3QubG9jayk7Ci0JCQkJCXJsID0gTlVMTDsKLQkJCQl9Ci0JCQkJZ290byBtYXBfYnVmZmVyX2Nh
Y2hlZDsKLQkJCX0KLQkJfSBlbHNlCi0JCQlsY24gPSBMQ05fUkxfTk9UX01BUFBFRDsKLQkJLyoK
LQkJICogSWYgaXQgaXMgbm90IGEgaG9sZSBhbmQgbm90IG91dCBvZiBib3VuZHMsIHRoZSBydW5s
aXN0IGlzCi0JCSAqIHByb2JhYmx5IHVubWFwcGVkIHNvIHRyeSB0byBtYXAgaXQgbm93LgotCQkg
Ki8KLQkJaWYgKHVubGlrZWx5KGxjbiAhPSBMQ05fSE9MRSAmJiBsY24gIT0gTENOX0VOT0VOVCkp
IHsKLQkJCWlmIChsaWtlbHkoIWlzX3JldHJ5ICYmIGxjbiA9PSBMQ05fUkxfTk9UX01BUFBFRCkp
IHsKLQkJCQkvKiBBdHRlbXB0IHRvIG1hcCBydW5saXN0LiAqLwotCQkJCWlmICghcmxfd3JpdGVf
bG9ja2VkKSB7Ci0JCQkJCS8qCi0JCQkJCSAqIFdlIG5lZWQgdGhlIHJ1bmxpc3QgbG9ja2VkIGZv
cgotCQkJCQkgKiB3cml0aW5nLCBzbyBpZiBpdCBpcyBsb2NrZWQgZm9yCi0JCQkJCSAqIHJlYWRp
bmcgcmVsb2NrIGl0IG5vdyBhbmQgcmV0cnkgaW4KLQkJCQkJICogY2FzZSBpdCBjaGFuZ2VkIHdo
aWxzdCB3ZSBkcm9wcGVkCi0JCQkJCSAqIHRoZSBsb2NrLgotCQkJCQkgKi8KLQkJCQkJdXBfcmVh
ZCgmbmktPnJ1bmxpc3QubG9jayk7Ci0JCQkJCWRvd25fd3JpdGUoJm5pLT5ydW5saXN0LmxvY2sp
OwotCQkJCQlybF93cml0ZV9sb2NrZWQgPSB0cnVlOwotCQkJCQlnb3RvIHJldHJ5X3JlbWFwOwot
CQkJCX0KLQkJCQllcnIgPSBudGZzX21hcF9ydW5saXN0X25vbG9jayhuaSwgYmhfY3BvcywKLQkJ
CQkJCU5VTEwpOwotCQkJCWlmIChsaWtlbHkoIWVycikpIHsKLQkJCQkJaXNfcmV0cnkgPSB0cnVl
OwotCQkJCQlnb3RvIHJldHJ5X3JlbWFwOwotCQkJCX0KLQkJCQkvKgotCQkJCSAqIElmIEB2Y24g
aXMgb3V0IG9mIGJvdW5kcywgcHJldGVuZCBAbGNuIGlzCi0JCQkJICogTENOX0VOT0VOVC4gIEFz
IGxvbmcgYXMgdGhlIGJ1ZmZlciBpcyBvdXQKLQkJCQkgKiBvZiBib3VuZHMgdGhpcyB3aWxsIHdv
cmsgZmluZS4KLQkJCQkgKi8KLQkJCQlpZiAoZXJyID09IC1FTk9FTlQpIHsKLQkJCQkJbGNuID0g
TENOX0VOT0VOVDsKLQkJCQkJZXJyID0gMDsKLQkJCQkJZ290byBybF9ub3RfbWFwcGVkX2Vub2Vu
dDsKLQkJCQl9Ci0JCQl9IGVsc2UKLQkJCQllcnIgPSAtRUlPOwotCQkJLyogRmFpbGVkIHRvIG1h
cCB0aGUgYnVmZmVyLCBldmVuIGFmdGVyIHJldHJ5aW5nLiAqLwotCQkJYmgtPmJfYmxvY2tuciA9
IC0xOwotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHdyaXRlIHRvIGlub2RlIDB4
JWx4LCAiCi0JCQkJCSJhdHRyaWJ1dGUgdHlwZSAweCV4LCB2Y24gMHglbGx4LCAiCi0JCQkJCSJ2
Y24gb2Zmc2V0IDB4JXgsIGJlY2F1c2UgaXRzICIKLQkJCQkJImxvY2F0aW9uIG9uIGRpc2sgY291
bGQgbm90IGJlICIKLQkJCQkJImRldGVybWluZWQlcyAoZXJyb3IgY29kZSAlaSkuIiwKLQkJCQkJ
bmktPm1mdF9ubywgbmktPnR5cGUsCi0JCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpYmhfY3BvcywK
LQkJCQkJKHVuc2lnbmVkKWJoX3BvcyAmCi0JCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX21hc2ssCi0J
CQkJCWlzX3JldHJ5ID8gIiBldmVuIGFmdGVyIHJldHJ5aW5nIiA6ICIiLAotCQkJCQllcnIpOwot
CQkJYnJlYWs7Ci0JCX0KLXJsX25vdF9tYXBwZWRfZW5vZW50OgotCQkvKgotCQkgKiBUaGUgYnVm
ZmVyIGlzIGluIGEgaG9sZSBvciBvdXQgb2YgYm91bmRzLiAgV2UgbmVlZCB0byBmaWxsCi0JCSAq
IHRoZSBob2xlLCB1bmxlc3MgdGhlIGJ1ZmZlciBpcyBpbiBhIGNsdXN0ZXIgd2hpY2ggaXMgbm90
Ci0JCSAqIHRvdWNoZWQgYnkgdGhlIHdyaXRlLCBpbiB3aGljaCBjYXNlIHdlIGp1c3QgbGVhdmUg
dGhlIGJ1ZmZlcgotCQkgKiB1bm1hcHBlZC4gIFRoaXMgY2FuIG9ubHkgaGFwcGVuIHdoZW4gdGhl
IGNsdXN0ZXIgc2l6ZSBpcwotCQkgKiBsZXNzIHRoYW4gdGhlIHBhZ2UgY2FjaGUgc2l6ZS4KLQkJ
ICovCi0JCWlmICh1bmxpa2VseSh2b2wtPmNsdXN0ZXJfc2l6ZSA8IFBBR0VfU0laRSkpIHsKLQkJ
CWJoX2NlbmQgPSAoYmhfZW5kICsgdm9sLT5jbHVzdGVyX3NpemUgLSAxKSA+PgotCQkJCQl2b2wt
PmNsdXN0ZXJfc2l6ZV9iaXRzOwotCQkJaWYgKChiaF9jZW5kIDw9IGNwb3MgfHwgYmhfY3BvcyA+
PSBjZW5kKSkgewotCQkJCWJoLT5iX2Jsb2NrbnIgPSAtMTsKLQkJCQkvKgotCQkJCSAqIElmIHRo
ZSBidWZmZXIgaXMgdXB0b2RhdGUgd2Ugc2tpcCBpdC4gIElmIGl0Ci0JCQkJICogaXMgbm90IGJ1
dCB0aGUgZm9saW8gaXMgdXB0b2RhdGUsIHdlIGNhbiBzZXQKLQkJCQkgKiB0aGUgYnVmZmVyIHVw
dG9kYXRlLiAgSWYgdGhlIGZvbGlvIGlzIG5vdAotCQkJCSAqIHVwdG9kYXRlLCB3ZSBjYW4gY2xl
YXIgdGhlIGJ1ZmZlciBhbmQgc2V0IGl0Ci0JCQkJICogdXB0b2RhdGUuICBXaGV0aGVyIHRoaXMg
aXMgd29ydGh3aGlsZSBpcwotCQkJCSAqIGRlYmF0YWJsZSBhbmQgdGhpcyBjb3VsZCBiZSByZW1v
dmVkLgotCQkJCSAqLwotCQkJCWlmIChmb2xpb190ZXN0X3VwdG9kYXRlKGZvbGlvKSkgewotCQkJ
CQlpZiAoIWJ1ZmZlcl91cHRvZGF0ZShiaCkpCi0JCQkJCQlzZXRfYnVmZmVyX3VwdG9kYXRlKGJo
KTsKLQkJCQl9IGVsc2UgaWYgKCFidWZmZXJfdXB0b2RhdGUoYmgpKSB7Ci0JCQkJCWZvbGlvX3pl
cm9fcmFuZ2UoZm9saW8sIGJoX29mZnNldChiaCksCi0JCQkJCQlibG9ja3NpemUpOwotCQkJCQlz
ZXRfYnVmZmVyX3VwdG9kYXRlKGJoKTsKLQkJCQl9Ci0JCQkJY29udGludWU7Ci0JCQl9Ci0JCX0K
LQkJLyoKLQkJICogT3V0IG9mIGJvdW5kcyBidWZmZXIgaXMgaW52YWxpZCBpZiBpdCB3YXMgbm90
IHJlYWxseSBvdXQgb2YKLQkJICogYm91bmRzLgotCQkgKi8KLQkJQlVHX09OKGxjbiAhPSBMQ05f
SE9MRSk7Ci0JCS8qCi0JCSAqIFdlIG5lZWQgdGhlIHJ1bmxpc3QgbG9ja2VkIGZvciB3cml0aW5n
LCBzbyBpZiBpdCBpcyBsb2NrZWQKLQkJICogZm9yIHJlYWRpbmcgcmVsb2NrIGl0IG5vdyBhbmQg
cmV0cnkgaW4gY2FzZSBpdCBjaGFuZ2VkCi0JCSAqIHdoaWxzdCB3ZSBkcm9wcGVkIHRoZSBsb2Nr
LgotCQkgKi8KLQkJQlVHX09OKCFybCk7Ci0JCWlmICghcmxfd3JpdGVfbG9ja2VkKSB7Ci0JCQl1
cF9yZWFkKCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJCWRvd25fd3JpdGUoJm5pLT5ydW5saXN0Lmxv
Y2spOwotCQkJcmxfd3JpdGVfbG9ja2VkID0gdHJ1ZTsKLQkJCWdvdG8gcmV0cnlfcmVtYXA7Ci0J
CX0KLQkJLyogRmluZCB0aGUgcHJldmlvdXMgbGFzdCBhbGxvY2F0ZWQgY2x1c3Rlci4gKi8KLQkJ
QlVHX09OKHJsLT5sY24gIT0gTENOX0hPTEUpOwotCQlsY24gPSAtMTsKLQkJcmwyID0gcmw7Ci0J
CXdoaWxlICgtLXJsMiA+PSBuaS0+cnVubGlzdC5ybCkgewotCQkJaWYgKHJsMi0+bGNuID49IDAp
IHsKLQkJCQlsY24gPSBybDItPmxjbiArIHJsMi0+bGVuZ3RoOwotCQkJCWJyZWFrOwotCQkJfQot
CQl9Ci0JCXJsMiA9IG50ZnNfY2x1c3Rlcl9hbGxvYyh2b2wsIGJoX2Nwb3MsIDEsIGxjbiwgREFU
QV9aT05FLAotCQkJCWZhbHNlKTsKLQkJaWYgKElTX0VSUihybDIpKSB7Ci0JCQllcnIgPSBQVFJf
RVJSKHJsMik7Ci0JCQludGZzX2RlYnVnKCJGYWlsZWQgdG8gYWxsb2NhdGUgY2x1c3RlciwgZXJy
b3IgY29kZSAlaS4iLAotCQkJCQllcnIpOwotCQkJYnJlYWs7Ci0JCX0KLQkJbGNuID0gcmwyLT5s
Y247Ci0JCXJsID0gbnRmc19ydW5saXN0c19tZXJnZShuaS0+cnVubGlzdC5ybCwgcmwyKTsKLQkJ
aWYgKElTX0VSUihybCkpIHsKLQkJCWVyciA9IFBUUl9FUlIocmwpOwotCQkJaWYgKGVyciAhPSAt
RU5PTUVNKQotCQkJCWVyciA9IC1FSU87Ci0JCQlpZiAobnRmc19jbHVzdGVyX2ZyZWVfZnJvbV9y
bCh2b2wsIHJsMikpIHsKLQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gcmVsZWFz
ZSAiCi0JCQkJCQkiYWxsb2NhdGVkIGNsdXN0ZXIgaW4gZXJyb3IgIgotCQkJCQkJImNvZGUgcGF0
aC4gIFJ1biBjaGtkc2sgdG8gIgotCQkJCQkJInJlY292ZXIgdGhlIGxvc3QgY2x1c3Rlci4iKTsK
LQkJCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQl9Ci0JCQludGZzX2ZyZWUocmwyKTsKLQkJCWJy
ZWFrOwotCQl9Ci0JCW5pLT5ydW5saXN0LnJsID0gcmw7Ci0JCXN0YXR1cy5ydW5saXN0X21lcmdl
ZCA9IDE7Ci0JCW50ZnNfZGVidWcoIkFsbG9jYXRlZCBjbHVzdGVyLCBsY24gMHglbGx4LiIsCi0J
CQkJKHVuc2lnbmVkIGxvbmcgbG9uZylsY24pOwotCQkvKiBNYXAgYW5kIGxvY2sgdGhlIG1mdCBy
ZWNvcmQgYW5kIGdldCB0aGUgYXR0cmlidXRlIHJlY29yZC4gKi8KLQkJaWYgKCFOSW5vQXR0cihu
aSkpCi0JCQliYXNlX25pID0gbmk7Ci0JCWVsc2UKLQkJCWJhc2VfbmkgPSBuaS0+ZXh0LmJhc2Vf
bnRmc19pbm87Ci0JCW0gPSBtYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQkJaWYgKElTX0VSUiht
KSkgewotCQkJZXJyID0gUFRSX0VSUihtKTsKLQkJCWJyZWFrOwotCQl9Ci0JCWN0eCA9IG50ZnNf
YXR0cl9nZXRfc2VhcmNoX2N0eChiYXNlX25pLCBtKTsKLQkJaWYgKHVubGlrZWx5KCFjdHgpKSB7
Ci0JCQllcnIgPSAtRU5PTUVNOwotCQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQkJCWJy
ZWFrOwotCQl9Ci0JCXN0YXR1cy5tZnRfYXR0cl9tYXBwZWQgPSAxOwotCQllcnIgPSBudGZzX2F0
dHJfbG9va3VwKG5pLT50eXBlLCBuaS0+bmFtZSwgbmktPm5hbWVfbGVuLAotCQkJCUNBU0VfU0VO
U0lUSVZFLCBiaF9jcG9zLCBOVUxMLCAwLCBjdHgpOwotCQlpZiAodW5saWtlbHkoZXJyKSkgewot
CQkJaWYgKGVyciA9PSAtRU5PRU5UKQotCQkJCWVyciA9IC1FSU87Ci0JCQlicmVhazsKLQkJfQot
CQltID0gY3R4LT5tcmVjOwotCQlhID0gY3R4LT5hdHRyOwotCQkvKgotCQkgKiBGaW5kIHRoZSBy
dW5saXN0IGVsZW1lbnQgd2l0aCB3aGljaCB0aGUgYXR0cmlidXRlIGV4dGVudAotCQkgKiBzdGFy
dHMuICBOb3RlLCB3ZSBjYW5ub3QgdXNlIHRoZSBfYXR0cl8gdmVyc2lvbiBiZWNhdXNlIHdlCi0J
CSAqIGhhdmUgbWFwcGVkIHRoZSBtZnQgcmVjb3JkLiAgVGhhdCBpcyBvayBiZWNhdXNlIHdlIGtu
b3cgdGhlCi0JCSAqIHJ1bmxpc3QgZnJhZ21lbnQgbXVzdCBiZSBtYXBwZWQgYWxyZWFkeSB0byBo
YXZlIGV2ZXIgZ290dGVuCi0JCSAqIGhlcmUsIHNvIHdlIGNhbiBqdXN0IHVzZSB0aGUgX3JsXyB2
ZXJzaW9uLgotCQkgKi8KLQkJdmNuID0gc2xlNjRfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50
Lmxvd2VzdF92Y24pOwotCQlybDIgPSBudGZzX3JsX2ZpbmRfdmNuX25vbG9jayhybCwgdmNuKTsK
LQkJQlVHX09OKCFybDIpOwotCQlCVUdfT04oIXJsMi0+bGVuZ3RoKTsKLQkJQlVHX09OKHJsMi0+
bGNuIDwgTENOX0hPTEUpOwotCQloaWdoZXN0X3ZjbiA9IHNsZTY0X3RvX2NwdShhLT5kYXRhLm5v
bl9yZXNpZGVudC5oaWdoZXN0X3Zjbik7Ci0JCS8qCi0JCSAqIElmIEBoaWdoZXN0X3ZjbiBpcyB6
ZXJvLCBjYWxjdWxhdGUgdGhlIHJlYWwgaGlnaGVzdF92Y24KLQkJICogKHdoaWNoIGNhbiByZWFs
bHkgYmUgemVybykuCi0JCSAqLwotCQlpZiAoIWhpZ2hlc3RfdmNuKQotCQkJaGlnaGVzdF92Y24g
PSAoc2xlNjRfdG9fY3B1KAotCQkJCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5hbGxvY2F0ZWRfc2l6
ZSkgPj4KLQkJCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0cykgLSAxOwotCQkvKgotCQkgKiBEZXRl
cm1pbmUgdGhlIHNpemUgb2YgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgZm9yIHRoZSBuZXcKLQkJ
ICogZXh0ZW50LCBpLmUuIHRoZSBvbGQgZXh0ZW50IHdpdGggdGhlIGhvbGUgZmlsbGVkLgotCQkg
Ki8KLQkJbXBfc2l6ZSA9IG50ZnNfZ2V0X3NpemVfZm9yX21hcHBpbmdfcGFpcnModm9sLCBybDIs
IHZjbiwKLQkJCQloaWdoZXN0X3Zjbik7Ci0JCWlmICh1bmxpa2VseShtcF9zaXplIDw9IDApKSB7
Ci0JCQlpZiAoIShlcnIgPSBtcF9zaXplKSkKLQkJCQllcnIgPSAtRUlPOwotCQkJbnRmc19kZWJ1
ZygiRmFpbGVkIHRvIGdldCBzaXplIGZvciBtYXBwaW5nIHBhaXJzICIKLQkJCQkJImFycmF5LCBl
cnJvciBjb2RlICVpLiIsIGVycik7Ci0JCQlicmVhazsKLQkJfQotCQkvKgotCQkgKiBSZXNpemUg
dGhlIGF0dHJpYnV0ZSByZWNvcmQgdG8gZml0IHRoZSBuZXcgbWFwcGluZyBwYWlycwotCQkgKiBh
cnJheS4KLQkJICovCi0JCWF0dHJfcmVjX2xlbiA9IGxlMzJfdG9fY3B1KGEtPmxlbmd0aCk7Ci0J
CWVyciA9IG50ZnNfYXR0cl9yZWNvcmRfcmVzaXplKG0sIGEsIG1wX3NpemUgKyBsZTE2X3RvX2Nw
dSgKLQkJCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5tYXBwaW5nX3BhaXJzX29mZnNldCkpOwotCQlp
ZiAodW5saWtlbHkoZXJyKSkgewotCQkJQlVHX09OKGVyciAhPSAtRU5PU1BDKTsKLQkJCS8vIFRP
RE86IERlYWwgd2l0aCB0aGlzIGJ5IHVzaW5nIHRoZSBjdXJyZW50IGF0dHJpYnV0ZQotCQkJLy8g
YW5kIGZpbGwgaXQgd2l0aCBhcyBtdWNoIG9mIHRoZSBtYXBwaW5nIHBhaXJzCi0JCQkvLyBhcnJh
eSBhcyBwb3NzaWJsZS4gIFRoZW4gbG9vcCBvdmVyIGVhY2ggYXR0cmlidXRlCi0JCQkvLyBleHRl
bnQgcmV3cml0aW5nIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5cyBhcyB3ZSBnbwotCQkJLy8gYWxv
bmcgYW5kIGlmIHdoZW4gd2UgcmVhY2ggdGhlIGVuZCB3ZSBoYXZlIG5vdAotCQkJLy8gZW5vdWdo
IHNwYWNlLCB0cnkgdG8gcmVzaXplIHRoZSBsYXN0IGF0dHJpYnV0ZQotCQkJLy8gZXh0ZW50IGFu
ZCBpZiBldmVuIHRoYXQgZmFpbHMsIGFkZCBhIG5ldyBhdHRyaWJ1dGUKLQkJCS8vIGV4dGVudC4K
LQkJCS8vIFdlIGNvdWxkIGFsc28gdHJ5IHRvIHJlc2l6ZSBhdCBlYWNoIHN0ZXAgaW4gdGhlIGhv
cGUKLQkJCS8vIHRoYXQgd2Ugd2lsbCBub3QgbmVlZCB0byByZXdyaXRlIGV2ZXJ5IHNpbmdsZSBl
eHRlbnQuCi0JCQkvLyBOb3RlLCB3ZSBtYXkgbmVlZCB0byBkZWNvbXByZXNzIHNvbWUgZXh0ZW50
cyB0byBmaWxsCi0JCQkvLyB0aGUgcnVubGlzdCBhcyB3ZSBhcmUgd2Fsa2luZyB0aGUgZXh0ZW50
cy4uLgotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiTm90IGVub3VnaCBzcGFjZSBpbiB0aGUgbWZ0
ICIKLQkJCQkJInJlY29yZCBmb3IgdGhlIGV4dGVuZGVkIGF0dHJpYnV0ZSAiCi0JCQkJCSJyZWNv
cmQuICBUaGlzIGNhc2UgaXMgbm90ICIKLQkJCQkJImltcGxlbWVudGVkIHlldC4iKTsKLQkJCWVy
ciA9IC1FT1BOT1RTVVBQOwotCQkJYnJlYWsgOwotCQl9Ci0JCXN0YXR1cy5tcF9yZWJ1aWx0ID0g
MTsKLQkJLyoKLQkJICogR2VuZXJhdGUgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgZGlyZWN0bHkg
aW50byB0aGUgYXR0cmlidXRlCi0JCSAqIHJlY29yZC4KLQkJICovCi0JCWVyciA9IG50ZnNfbWFw
cGluZ19wYWlyc19idWlsZCh2b2wsICh1OCopYSArIGxlMTZfdG9fY3B1KAotCQkJCWEtPmRhdGEu
bm9uX3Jlc2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0KSwKLQkJCQltcF9zaXplLCBybDIsIHZj
biwgaGlnaGVzdF92Y24sIE5VTEwpOwotCQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiQ2Fubm90IGZpbGwgaG9sZSBpbiBpbm9kZSAweCVseCwgIgotCQkJCQki
YXR0cmlidXRlIHR5cGUgMHgleCwgYmVjYXVzZSBidWlsZGluZyAiCi0JCQkJCSJ0aGUgbWFwcGlu
ZyBwYWlycyBmYWlsZWQgd2l0aCBlcnJvciAiCi0JCQkJCSJjb2RlICVpLiIsIHZpLT5pX2lubywK
LQkJCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwgZXJyKTsKLQkJCWVyciA9IC1F
SU87Ci0JCQlicmVhazsKLQkJfQotCQkvKiBVcGRhdGUgdGhlIGhpZ2hlc3RfdmNuIGJ1dCBvbmx5
IGlmIGl0IHdhcyBub3Qgc2V0LiAqLwotCQlpZiAodW5saWtlbHkoIWEtPmRhdGEubm9uX3Jlc2lk
ZW50LmhpZ2hlc3RfdmNuKSkKLQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuID0K
LQkJCQkJY3B1X3RvX3NsZTY0KGhpZ2hlc3RfdmNuKTsKLQkJLyoKLQkJICogSWYgdGhlIGF0dHJp
YnV0ZSBpcyBzcGFyc2UvY29tcHJlc3NlZCwgdXBkYXRlIHRoZSBjb21wcmVzc2VkCi0JCSAqIHNp
emUgaW4gdGhlIG50ZnNfaW5vZGUgc3RydWN0dXJlIGFuZCB0aGUgYXR0cmlidXRlIHJlY29yZC4K
LQkJICovCi0JCWlmIChsaWtlbHkoTklub1NwYXJzZShuaSkgfHwgTklub0NvbXByZXNzZWQobmkp
KSkgewotCQkJLyoKLQkJCSAqIElmIHdlIGFyZSBub3QgaW4gdGhlIGZpcnN0IGF0dHJpYnV0ZSBl
eHRlbnQsIHN3aXRjaAotCQkJICogdG8gaXQsIGJ1dCBmaXJzdCBlbnN1cmUgdGhlIGNoYW5nZXMg
d2lsbCBtYWtlIGl0IHRvCi0JCQkgKiBkaXNrIGxhdGVyLgotCQkJICovCi0JCQlpZiAoYS0+ZGF0
YS5ub25fcmVzaWRlbnQubG93ZXN0X3ZjbikgewotCQkJCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3Jk
X3BhZ2UoY3R4LT5udGZzX2lubyk7Ci0JCQkJbWFya19tZnRfcmVjb3JkX2RpcnR5KGN0eC0+bnRm
c19pbm8pOwotCQkJCW50ZnNfYXR0cl9yZWluaXRfc2VhcmNoX2N0eChjdHgpOwotCQkJCWVyciA9
IG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5uYW1lLAotCQkJCQkJbmktPm5hbWVfbGVu
LCBDQVNFX1NFTlNJVElWRSwKLQkJCQkJCTAsIE5VTEwsIDAsIGN0eCk7Ci0JCQkJaWYgKHVubGlr
ZWx5KGVycikpIHsKLQkJCQkJc3RhdHVzLmF0dHJfc3dpdGNoZWQgPSAxOwotCQkJCQlicmVhazsK
LQkJCQl9Ci0JCQkJLyogQG0gaXMgbm90IHVzZWQgYW55IG1vcmUgc28gZG8gbm90IHNldCBpdC4g
Ki8KLQkJCQlhID0gY3R4LT5hdHRyOwotCQkJfQotCQkJd3JpdGVfbG9ja19pcnFzYXZlKCZuaS0+
c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCQluaS0+aXR5cGUuY29tcHJlc3NlZC5zaXplICs9IHZvbC0+
Y2x1c3Rlcl9zaXplOwotCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuY29tcHJlc3NlZF9zaXplID0K
LQkJCQkJY3B1X3RvX3NsZTY0KG5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUpOwotCQkJd3JpdGVf
dW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJfQotCQkvKiBFbnN1
cmUgdGhlIGNoYW5nZXMgbWFrZSBpdCB0byBkaXNrLiAqLwotCQlmbHVzaF9kY2FjaGVfbWZ0X3Jl
Y29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwotCQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5u
dGZzX2lubyk7Ci0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCQl1bm1hcF9tZnRf
cmVjb3JkKGJhc2VfbmkpOwotCQkvKiBTdWNjZXNzZnVsbHkgZmlsbGVkIHRoZSBob2xlLiAqLwot
CQlzdGF0dXMucnVubGlzdF9tZXJnZWQgPSAwOwotCQlzdGF0dXMubWZ0X2F0dHJfbWFwcGVkID0g
MDsKLQkJc3RhdHVzLm1wX3JlYnVpbHQgPSAwOwotCQkvKiBTZXR1cCB0aGUgbWFwIGNhY2hlIGFu
ZCB1c2UgdGhhdCB0byBkZWFsIHdpdGggdGhlIGJ1ZmZlci4gKi8KLQkJd2FzX2hvbGUgPSB0cnVl
OwotCQl2Y24gPSBiaF9jcG9zOwotCQl2Y25fbGVuID0gMTsKLQkJbGNuX2Jsb2NrID0gbGNuIDw8
ICh2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzIC0gYmxvY2tzaXplX2JpdHMpOwotCQljZGVsdGEgPSAw
OwotCQkvKgotCQkgKiBJZiB0aGUgbnVtYmVyIG9mIHJlbWFpbmluZyBjbHVzdGVycyBpbiB0aGUg
QHBhZ2VzIGlzIHNtYWxsZXIKLQkJICogb3IgZXF1YWwgdG8gdGhlIG51bWJlciBvZiBjYWNoZWQg
Y2x1c3RlcnMsIHVubG9jayB0aGUKLQkJICogcnVubGlzdCBhcyB0aGUgbWFwIGNhY2hlIHdpbGwg
YmUgdXNlZCBmcm9tIG5vdyBvbi4KLQkJICovCi0JCWlmIChsaWtlbHkodmNuICsgdmNuX2xlbiA+
PSBjZW5kKSkgewotCQkJdXBfd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotCQkJcmxfd3JpdGVf
bG9ja2VkID0gZmFsc2U7Ci0JCQlybCA9IE5VTEw7Ci0JCX0KLQkJZ290byBtYXBfYnVmZmVyX2Nh
Y2hlZDsKLQl9IHdoaWxlIChiaF9wb3MgKz0gYmxvY2tzaXplLCAoYmggPSBiaC0+Yl90aGlzX3Bh
Z2UpICE9IGhlYWQpOwotCS8qIElmIHRoZXJlIGFyZSBubyBlcnJvcnMsIGRvIHRoZSBuZXh0IHBh
Z2UuICovCi0JaWYgKGxpa2VseSghZXJyICYmICsrdSA8IG5yX3BhZ2VzKSkKLQkJZ290byBkb19u
ZXh0X2ZvbGlvOwotCS8qIElmIHRoZXJlIGFyZSBubyBlcnJvcnMsIHJlbGVhc2UgdGhlIHJ1bmxp
c3QgbG9jayBpZiB3ZSB0b29rIGl0LiAqLwotCWlmIChsaWtlbHkoIWVycikpIHsKLQkJaWYgKHVu
bGlrZWx5KHJsX3dyaXRlX2xvY2tlZCkpIHsKLQkJCXVwX3dyaXRlKCZuaS0+cnVubGlzdC5sb2Nr
KTsKLQkJCXJsX3dyaXRlX2xvY2tlZCA9IGZhbHNlOwotCQl9IGVsc2UgaWYgKHVubGlrZWx5KHJs
KSkKLQkJCXVwX3JlYWQoJm5pLT5ydW5saXN0LmxvY2spOwotCQlybCA9IE5VTEw7Ci0JfQotCS8q
IElmIHdlIGlzc3VlZCByZWFkIHJlcXVlc3RzLCBsZXQgdGhlbSBjb21wbGV0ZS4gKi8KLQlyZWFk
X2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWluaXRpYWxpemVkX3NpemUg
PSBuaS0+aW5pdGlhbGl6ZWRfc2l6ZTsKLQlyZWFkX3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6
ZV9sb2NrLCBmbGFncyk7Ci0Jd2hpbGUgKHdhaXRfYmggPiB3YWl0KSB7Ci0JCWJoID0gKi0td2Fp
dF9iaDsKLQkJd2FpdF9vbl9idWZmZXIoYmgpOwotCQlpZiAobGlrZWx5KGJ1ZmZlcl91cHRvZGF0
ZShiaCkpKSB7Ci0JCQlmb2xpbyA9IGJoLT5iX2ZvbGlvOwotCQkJYmhfcG9zID0gZm9saW9fcG9z
KGZvbGlvKSArIGJoX29mZnNldChiaCk7Ci0JCQkvKgotCQkJICogSWYgdGhlIGJ1ZmZlciBvdmVy
Zmxvd3MgdGhlIGluaXRpYWxpemVkIHNpemUsIG5lZWQKLQkJCSAqIHRvIHplcm8gdGhlIG92ZXJm
bG93aW5nIHJlZ2lvbi4KLQkJCSAqLwotCQkJaWYgKHVubGlrZWx5KGJoX3BvcyArIGJsb2Nrc2l6
ZSA+IGluaXRpYWxpemVkX3NpemUpKSB7Ci0JCQkJaW50IG9mcyA9IDA7Ci0KLQkJCQlpZiAobGlr
ZWx5KGJoX3BvcyA8IGluaXRpYWxpemVkX3NpemUpKQotCQkJCQlvZnMgPSBpbml0aWFsaXplZF9z
aXplIC0gYmhfcG9zOwotCQkJCWZvbGlvX3plcm9fc2VnbWVudChmb2xpbywgYmhfb2Zmc2V0KGJo
KSArIG9mcywKLQkJCQkJCWJsb2Nrc2l6ZSk7Ci0JCQl9Ci0JCX0gZWxzZSAvKiBpZiAodW5saWtl
bHkoIWJ1ZmZlcl91cHRvZGF0ZShiaCkpKSAqLwotCQkJZXJyID0gLUVJTzsKLQl9Ci0JaWYgKGxp
a2VseSghZXJyKSkgewotCQkvKiBDbGVhciBidWZmZXJfbmV3IG9uIGFsbCBidWZmZXJzLiAqLwot
CQl1ID0gMDsKLQkJZG8gewotCQkJYmggPSBoZWFkID0gcGFnZV9idWZmZXJzKHBhZ2VzW3VdKTsK
LQkJCWRvIHsKLQkJCQlpZiAoYnVmZmVyX25ldyhiaCkpCi0JCQkJCWNsZWFyX2J1ZmZlcl9uZXco
YmgpOwotCQkJfSB3aGlsZSAoKGJoID0gYmgtPmJfdGhpc19wYWdlKSAhPSBoZWFkKTsKLQkJfSB3
aGlsZSAoKyt1IDwgbnJfcGFnZXMpOwotCQludGZzX2RlYnVnKCJEb25lLiIpOwotCQlyZXR1cm4g
ZXJyOwotCX0KLQlpZiAoc3RhdHVzLmF0dHJfc3dpdGNoZWQpIHsKLQkJLyogR2V0IGJhY2sgdG8g
dGhlIGF0dHJpYnV0ZSBleHRlbnQgd2UgbW9kaWZpZWQuICovCi0JCW50ZnNfYXR0cl9yZWluaXRf
c2VhcmNoX2N0eChjdHgpOwotCQlpZiAobnRmc19hdHRyX2xvb2t1cChuaS0+dHlwZSwgbmktPm5h
bWUsIG5pLT5uYW1lX2xlbiwKLQkJCQlDQVNFX1NFTlNJVElWRSwgYmhfY3BvcywgTlVMTCwgMCwg
Y3R4KSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGZpbmQgcmVxdWlyZWQg
IgotCQkJCQkiYXR0cmlidXRlIGV4dGVudCBvZiBhdHRyaWJ1dGUgaW4gIgotCQkJCQkiZXJyb3Ig
Y29kZSBwYXRoLiAgUnVuIGNoa2RzayB0byAiCi0JCQkJCSJyZWNvdmVyLiIpOwotCQkJd3JpdGVf
bG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCQluaS0+aXR5cGUuY29tcHJl
c3NlZC5zaXplICs9IHZvbC0+Y2x1c3Rlcl9zaXplOwotCQkJd3JpdGVfdW5sb2NrX2lycXJlc3Rv
cmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3JkX3Bh
Z2UoY3R4LT5udGZzX2lubyk7Ci0JCQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lu
byk7Ci0JCQkvKgotCQkJICogVGhlIG9ubHkgdGhpbmcgdGhhdCBpcyBub3cgd3JvbmcgaXMgdGhl
IGNvbXByZXNzZWQKLQkJCSAqIHNpemUgb2YgdGhlIGJhc2UgYXR0cmlidXRlIGV4dGVudCB3aGlj
aCBjaGtkc2sKLQkJCSAqIHNob3VsZCBiZSBhYmxlIHRvIGZpeC4KLQkJCSAqLwotCQkJTlZvbFNl
dEVycm9ycyh2b2wpOwotCQl9IGVsc2UgewotCQkJbSA9IGN0eC0+bXJlYzsKLQkJCWEgPSBjdHgt
PmF0dHI7Ci0JCQlzdGF0dXMuYXR0cl9zd2l0Y2hlZCA9IDA7Ci0JCX0KLQl9Ci0JLyoKLQkgKiBJ
ZiB0aGUgcnVubGlzdCBoYXMgYmVlbiBtb2RpZmllZCwgbmVlZCB0byByZXN0b3JlIGl0IGJ5IHB1
bmNoaW5nIGEKLQkgKiBob2xlIGludG8gaXQgYW5kIHdlIHRoZW4gbmVlZCB0byBkZWFsbG9jYXRl
IHRoZSBvbi1kaXNrIGNsdXN0ZXIgYXMKLQkgKiB3ZWxsLiAgTm90ZSwgd2Ugb25seSBtb2RpZnkg
dGhlIHJ1bmxpc3QgaWYgd2UgYXJlIGFibGUgdG8gZ2VuZXJhdGUgYQotCSAqIG5ldyBtYXBwaW5n
IHBhaXJzIGFycmF5LCBpLmUuIG9ubHkgd2hlbiB0aGUgbWFwcGVkIGF0dHJpYnV0ZSBleHRlbnQK
LQkgKiBpcyBub3Qgc3dpdGNoZWQuCi0JICovCi0JaWYgKHN0YXR1cy5ydW5saXN0X21lcmdlZCAm
JiAhc3RhdHVzLmF0dHJfc3dpdGNoZWQpIHsKLQkJQlVHX09OKCFybF93cml0ZV9sb2NrZWQpOwot
CQkvKiBNYWtlIHRoZSBmaWxlIGNsdXN0ZXIgd2UgYWxsb2NhdGVkIHNwYXJzZSBpbiB0aGUgcnVu
bGlzdC4gKi8KLQkJaWYgKG50ZnNfcmxfcHVuY2hfbm9sb2NrKHZvbCwgJm5pLT5ydW5saXN0LCBi
aF9jcG9zLCAxKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHB1bmNoIGhv
bGUgaW50byAiCi0JCQkJCSJhdHRyaWJ1dGUgcnVubGlzdCBpbiBlcnJvciBjb2RlICIKLQkJCQkJ
InBhdGguICBSdW4gY2hrZHNrIHRvIHJlY292ZXIgdGhlICIKLQkJCQkJImxvc3QgY2x1c3Rlci4i
KTsKLQkJCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJfSBlbHNlIC8qIGlmIChzdWNjZXNzKSAqLyB7
Ci0JCQlzdGF0dXMucnVubGlzdF9tZXJnZWQgPSAwOwotCQkJLyoKLQkJCSAqIERlYWxsb2NhdGUg
dGhlIG9uLWRpc2sgY2x1c3RlciB3ZSBhbGxvY2F0ZWQgYnV0IG9ubHkKLQkJCSAqIGlmIHdlIHN1
Y2NlZWRlZCBpbiBwdW5jaGluZyBpdHMgdmNuIG91dCBvZiB0aGUKLQkJCSAqIHJ1bmxpc3QuCi0J
CQkgKi8KLQkJCWRvd25fd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2spOwotCQkJaWYgKG50ZnNfYml0
bWFwX2NsZWFyX2JpdCh2b2wtPmxjbmJtcF9pbm8sIGxjbikpIHsKLQkJCQludGZzX2Vycm9yKHZv
bC0+c2IsICJGYWlsZWQgdG8gcmVsZWFzZSAiCi0JCQkJCQkiYWxsb2NhdGVkIGNsdXN0ZXIgaW4g
ZXJyb3IgIgotCQkJCQkJImNvZGUgcGF0aC4gIFJ1biBjaGtkc2sgdG8gIgotCQkJCQkJInJlY292
ZXIgdGhlIGxvc3QgY2x1c3Rlci4iKTsKLQkJCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQl9Ci0J
CQl1cF93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0JCX0KLQl9Ci0JLyoKLQkgKiBSZXNpemUg
dGhlIGF0dHJpYnV0ZSByZWNvcmQgdG8gaXRzIG9sZCBzaXplIGFuZCByZWJ1aWxkIHRoZSBtYXBw
aW5nCi0JICogcGFpcnMgYXJyYXkuICBOb3RlLCB3ZSBvbmx5IGNhbiBkbyB0aGlzIGlmIHRoZSBy
dW5saXN0IGhhcyBiZWVuCi0JICogcmVzdG9yZWQgdG8gaXRzIG9sZCBzdGF0ZSB3aGljaCBhbHNv
IGltcGxpZXMgdGhhdCB0aGUgbWFwcGVkCi0JICogYXR0cmlidXRlIGV4dGVudCBpcyBub3Qgc3dp
dGNoZWQuCi0JICovCi0JaWYgKHN0YXR1cy5tcF9yZWJ1aWx0ICYmICFzdGF0dXMucnVubGlzdF9t
ZXJnZWQpIHsKLQkJaWYgKG50ZnNfYXR0cl9yZWNvcmRfcmVzaXplKG0sIGEsIGF0dHJfcmVjX2xl
bikpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZXN0b3JlIGF0dHJpYnV0
ZSAiCi0JCQkJCSJyZWNvcmQgaW4gZXJyb3IgY29kZSBwYXRoLiAgUnVuICIKLQkJCQkJImNoa2Rz
ayB0byByZWNvdmVyLiIpOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQl9IGVsc2UgLyogaWYg
KHN1Y2Nlc3MpICovIHsKLQkJCWlmIChudGZzX21hcHBpbmdfcGFpcnNfYnVpbGQodm9sLCAodTgq
KWEgKwotCQkJCQlsZTE2X3RvX2NwdShhLT5kYXRhLm5vbl9yZXNpZGVudC4KLQkJCQkJbWFwcGlu
Z19wYWlyc19vZmZzZXQpLCBhdHRyX3JlY19sZW4gLQotCQkJCQlsZTE2X3RvX2NwdShhLT5kYXRh
Lm5vbl9yZXNpZGVudC4KLQkJCQkJbWFwcGluZ19wYWlyc19vZmZzZXQpLCBuaS0+cnVubGlzdC5y
bCwKLQkJCQkJdmNuLCBoaWdoZXN0X3ZjbiwgTlVMTCkpIHsKLQkJCQludGZzX2Vycm9yKHZvbC0+
c2IsICJGYWlsZWQgdG8gcmVzdG9yZSAiCi0JCQkJCQkibWFwcGluZyBwYWlycyBhcnJheSBpbiBl
cnJvciAiCi0JCQkJCQkiY29kZSBwYXRoLiAgUnVuIGNoa2RzayB0byAiCi0JCQkJCQkicmVjb3Zl
ci4iKTsKLQkJCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQl9Ci0JCQlmbHVzaF9kY2FjaGVfbWZ0
X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwotCQkJbWFya19tZnRfcmVjb3JkX2RpcnR5KGN0
eC0+bnRmc19pbm8pOwotCQl9Ci0JfQotCS8qIFJlbGVhc2UgdGhlIG1mdCByZWNvcmQgYW5kIHRo
ZSBhdHRyaWJ1dGUuICovCi0JaWYgKHN0YXR1cy5tZnRfYXR0cl9tYXBwZWQpIHsKLQkJbnRmc19h
dHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0J
fQotCS8qIFJlbGVhc2UgdGhlIHJ1bmxpc3QgbG9jay4gKi8KLQlpZiAocmxfd3JpdGVfbG9ja2Vk
KQotCQl1cF93cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci0JZWxzZSBpZiAocmwpCi0JCXVwX3Jl
YWQoJm5pLT5ydW5saXN0LmxvY2spOwotCS8qCi0JICogWmVybyBvdXQgYW55IG5ld2x5IGFsbG9j
YXRlZCBibG9ja3MgdG8gYXZvaWQgZXhwb3Npbmcgc3RhbGUgZGF0YS4KLQkgKiBJZiBCSF9OZXcg
aXMgc2V0LCB3ZSBrbm93IHRoYXQgdGhlIGJsb2NrIHdhcyBuZXdseSBhbGxvY2F0ZWQgYWJvdmUK
LQkgKiBhbmQgdGhhdCBpdCBoYXMgbm90IGJlZW4gZnVsbHkgemVyb2VkIGFuZCBtYXJrZWQgZGly
dHkgeWV0LgotCSAqLwotCW5yX3BhZ2VzID0gdTsKLQl1ID0gMDsKLQllbmQgPSBiaF9jcG9zIDw8
IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JZG8gewotCQlmb2xpbyA9IHBhZ2VfZm9saW8ocGFn
ZXNbdV0pOwotCQliaCA9IGhlYWQgPSBmb2xpb19idWZmZXJzKGZvbGlvKTsKLQkJZG8gewotCQkJ
aWYgKHUgPT0gbnJfcGFnZXMgJiYKLQkJCSAgICBmb2xpb19wb3MoZm9saW8pICsgYmhfb2Zmc2V0
KGJoKSA+PSBlbmQpCi0JCQkJYnJlYWs7Ci0JCQlpZiAoIWJ1ZmZlcl9uZXcoYmgpKQotCQkJCWNv
bnRpbnVlOwotCQkJY2xlYXJfYnVmZmVyX25ldyhiaCk7Ci0JCQlpZiAoIWJ1ZmZlcl91cHRvZGF0
ZShiaCkpIHsKLQkJCQlpZiAoZm9saW9fdGVzdF91cHRvZGF0ZShmb2xpbykpCi0JCQkJCXNldF9i
dWZmZXJfdXB0b2RhdGUoYmgpOwotCQkJCWVsc2UgewotCQkJCQlmb2xpb196ZXJvX3JhbmdlKGZv
bGlvLCBiaF9vZmZzZXQoYmgpLAotCQkJCQkJCWJsb2Nrc2l6ZSk7Ci0JCQkJCXNldF9idWZmZXJf
dXB0b2RhdGUoYmgpOwotCQkJCX0KLQkJCX0KLQkJCW1hcmtfYnVmZmVyX2RpcnR5KGJoKTsKLQkJ
fSB3aGlsZSAoKGJoID0gYmgtPmJfdGhpc19wYWdlKSAhPSBoZWFkKTsKLQl9IHdoaWxlICgrK3Ug
PD0gbnJfcGFnZXMpOwotCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZC4gIFJldHVybmluZyBl
cnJvciBjb2RlICVpLiIsIGVycik7Ci0JcmV0dXJuIGVycjsKLX0KLQotc3RhdGljIGlubGluZSB2
b2lkIG50ZnNfZmx1c2hfZGNhY2hlX3BhZ2VzKHN0cnVjdCBwYWdlICoqcGFnZXMsCi0JCXVuc2ln
bmVkIG5yX3BhZ2VzKQotewotCUJVR19PTighbnJfcGFnZXMpOwotCS8qCi0JICogV2FybmluZzog
RG8gbm90IGRvIHRoZSBkZWNyZW1lbnQgYXQgdGhlIHNhbWUgdGltZSBhcyB0aGUgY2FsbCB0bwot
CSAqIGZsdXNoX2RjYWNoZV9wYWdlKCkgYmVjYXVzZSBpdCBpcyBhIE5VTEwgbWFjcm8gb24gaTM4
NiBhbmQgaGVuY2UgdGhlCi0JICogZGVjcmVtZW50IG5ldmVyIGhhcHBlbnMgc28gdGhlIGxvb3Ag
bmV2ZXIgdGVybWluYXRlcy4KLQkgKi8KLQlkbyB7Ci0JCS0tbnJfcGFnZXM7Ci0JCWZsdXNoX2Rj
YWNoZV9wYWdlKHBhZ2VzW25yX3BhZ2VzXSk7Ci0JfSB3aGlsZSAobnJfcGFnZXMgPiAwKTsKLX0K
LQotLyoqCi0gKiBudGZzX2NvbW1pdF9wYWdlc19hZnRlcl9ub25fcmVzaWRlbnRfd3JpdGUgLSBj
b21taXQgdGhlIHJlY2VpdmVkIGRhdGEKLSAqIEBwYWdlczoJYXJyYXkgb2YgZGVzdGluYXRpb24g
cGFnZXMKLSAqIEBucl9wYWdlczoJbnVtYmVyIG9mIHBhZ2VzIGluIEBwYWdlcwotICogQHBvczoJ
Ynl0ZSBwb3NpdGlvbiBpbiBmaWxlIGF0IHdoaWNoIHRoZSB3cml0ZSBiZWdpbnMKLSAqIEBieXRl
czoJbnVtYmVyIG9mIGJ5dGVzIHRvIGJlIHdyaXR0ZW4KLSAqCi0gKiBTZWUgZGVzY3JpcHRpb24g
b2YgbnRmc19jb21taXRfcGFnZXNfYWZ0ZXJfd3JpdGUoKSwgYmVsb3cuCi0gKi8KLXN0YXRpYyBp
bmxpbmUgaW50IG50ZnNfY29tbWl0X3BhZ2VzX2FmdGVyX25vbl9yZXNpZGVudF93cml0ZSgKLQkJ
c3RydWN0IHBhZ2UgKipwYWdlcywgY29uc3QgdW5zaWduZWQgbnJfcGFnZXMsCi0JCXM2NCBwb3Ms
IHNpemVfdCBieXRlcykKLXsKLQlzNjQgZW5kLCBpbml0aWFsaXplZF9zaXplOwotCXN0cnVjdCBp
bm9kZSAqdmk7Ci0JbnRmc19pbm9kZSAqbmksICpiYXNlX25pOwotCXN0cnVjdCBidWZmZXJfaGVh
ZCAqYmgsICpoZWFkOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHg7Ci0JTUZUX1JFQ09SRCAq
bTsKLQlBVFRSX1JFQ09SRCAqYTsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwotCXVuc2lnbmVkIGJs
b2Nrc2l6ZSwgdTsKLQlpbnQgZXJyOwotCi0JdmkgPSBwYWdlc1swXS0+bWFwcGluZy0+aG9zdDsK
LQluaSA9IE5URlNfSSh2aSk7Ci0JYmxvY2tzaXplID0gdmktPmlfc2ItPnNfYmxvY2tzaXplOwot
CWVuZCA9IHBvcyArIGJ5dGVzOwotCXUgPSAwOwotCWRvIHsKLQkJczY0IGJoX3BvczsKLQkJc3Ry
dWN0IHBhZ2UgKnBhZ2U7Ci0JCWJvb2wgcGFydGlhbDsKLQotCQlwYWdlID0gcGFnZXNbdV07Ci0J
CWJoX3BvcyA9IChzNjQpcGFnZS0+aW5kZXggPDwgUEFHRV9TSElGVDsKLQkJYmggPSBoZWFkID0g
cGFnZV9idWZmZXJzKHBhZ2UpOwotCQlwYXJ0aWFsID0gZmFsc2U7Ci0JCWRvIHsKLQkJCXM2NCBi
aF9lbmQ7Ci0KLQkJCWJoX2VuZCA9IGJoX3BvcyArIGJsb2Nrc2l6ZTsKLQkJCWlmIChiaF9lbmQg
PD0gcG9zIHx8IGJoX3BvcyA+PSBlbmQpIHsKLQkJCQlpZiAoIWJ1ZmZlcl91cHRvZGF0ZShiaCkp
Ci0JCQkJCXBhcnRpYWwgPSB0cnVlOwotCQkJfSBlbHNlIHsKLQkJCQlzZXRfYnVmZmVyX3VwdG9k
YXRlKGJoKTsKLQkJCQltYXJrX2J1ZmZlcl9kaXJ0eShiaCk7Ci0JCQl9Ci0JCX0gd2hpbGUgKGJo
X3BvcyArPSBibG9ja3NpemUsIChiaCA9IGJoLT5iX3RoaXNfcGFnZSkgIT0gaGVhZCk7Ci0JCS8q
Ci0JCSAqIElmIGFsbCBidWZmZXJzIGFyZSBub3cgdXB0b2RhdGUgYnV0IHRoZSBwYWdlIGlzIG5v
dCwgc2V0IHRoZQotCQkgKiBwYWdlIHVwdG9kYXRlLgotCQkgKi8KLQkJaWYgKCFwYXJ0aWFsICYm
ICFQYWdlVXB0b2RhdGUocGFnZSkpCi0JCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7Ci0JfSB3aGls
ZSAoKyt1IDwgbnJfcGFnZXMpOwotCS8qCi0JICogRmluYWxseSwgaWYgd2UgZG8gbm90IG5lZWQg
dG8gdXBkYXRlIGluaXRpYWxpemVkX3NpemUgb3IgaV9zaXplIHdlCi0JICogYXJlIGZpbmlzaGVk
LgotCSAqLwotCXJlYWRfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JaW5p
dGlhbGl6ZWRfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9zaXplOwotCXJlYWRfdW5sb2NrX2lycXJl
c3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlpZiAoZW5kIDw9IGluaXRpYWxpemVkX3Np
emUpIHsKLQkJbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQkJcmV0dXJuIDA7Ci0JfQotCS8qCi0JICog
VXBkYXRlIGluaXRpYWxpemVkX3NpemUvaV9zaXplIGFzIGFwcHJvcHJpYXRlLCBib3RoIGluIHRo
ZSBpbm9kZSBhbmQKLQkgKiB0aGUgbWZ0IHJlY29yZC4KLQkgKi8KLQlpZiAoIU5Jbm9BdHRyKG5p
KSkKLQkJYmFzZV9uaSA9IG5pOwotCWVsc2UKLQkJYmFzZV9uaSA9IG5pLT5leHQuYmFzZV9udGZz
X2lubzsKLQkvKiBNYXAsIHBpbiwgYW5kIGxvY2sgdGhlIG1mdCByZWNvcmQuICovCi0JbSA9IG1h
cF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCWlmIChJU19FUlIobSkpIHsKLQkJZXJyID0gUFRSX0VS
UihtKTsKLQkJbSA9IE5VTEw7Ci0JCWN0eCA9IE5VTEw7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0J
QlVHX09OKCFOSW5vTm9uUmVzaWRlbnQobmkpKTsKLQljdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJj
aF9jdHgoYmFzZV9uaSwgbSk7Ci0JaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCWVyciA9IC1FTk9N
RU07Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JZXJyID0gbnRmc19hdHRyX2xvb2t1cChuaS0+dHlw
ZSwgbmktPm5hbWUsIG5pLT5uYW1lX2xlbiwKLQkJCUNBU0VfU0VOU0lUSVZFLCAwLCBOVUxMLCAw
LCBjdHgpOwotCWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkKLQkJ
CWVyciA9IC1FSU87Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JYSA9IGN0eC0+YXR0cjsKLQlCVUdf
T04oIWEtPm5vbl9yZXNpZGVudCk7Ci0Jd3JpdGVfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9sb2Nr
LCBmbGFncyk7Ci0JQlVHX09OKGVuZCA+IG5pLT5hbGxvY2F0ZWRfc2l6ZSk7Ci0JbmktPmluaXRp
YWxpemVkX3NpemUgPSBlbmQ7Ci0JYS0+ZGF0YS5ub25fcmVzaWRlbnQuaW5pdGlhbGl6ZWRfc2l6
ZSA9IGNwdV90b19zbGU2NChlbmQpOwotCWlmIChlbmQgPiBpX3NpemVfcmVhZCh2aSkpIHsKLQkJ
aV9zaXplX3dyaXRlKHZpLCBlbmQpOwotCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5kYXRhX3NpemUg
PQotCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemU7Ci0JfQotCXdyaXRl
X3VubG9ja19pcnFyZXN0b3JlKCZuaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JLyogTWFyayB0aGUg
bWZ0IHJlY29yZCBkaXJ0eSwgc28gaXQgZ2V0cyB3cml0dGVuIGJhY2suICovCi0JZmx1c2hfZGNh
Y2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQltYXJrX21mdF9yZWNvcmRfZGly
dHkoY3R4LT5udGZzX2lubyk7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5t
YXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQludGZzX2RlYnVnKCJEb25lLiIpOwotCXJldHVybiAw
OwotZXJyX291dDoKLQlpZiAoY3R4KQotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsK
LQlpZiAobSkKLQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQludGZzX2Vycm9yKHZpLT5p
X3NiLCAiRmFpbGVkIHRvIHVwZGF0ZSBpbml0aWFsaXplZF9zaXplL2lfc2l6ZSAoZXJyb3IgIgot
CQkJImNvZGUgJWkpLiIsIGVycik7Ci0JaWYgKGVyciAhPSAtRU5PTUVNKQotCQlOVm9sU2V0RXJy
b3JzKG5pLT52b2wpOwotCXJldHVybiBlcnI7Ci19Ci0KLS8qKgotICogbnRmc19jb21taXRfcGFn
ZXNfYWZ0ZXJfd3JpdGUgLSBjb21taXQgdGhlIHJlY2VpdmVkIGRhdGEKLSAqIEBwYWdlczoJYXJy
YXkgb2YgZGVzdGluYXRpb24gcGFnZXMKLSAqIEBucl9wYWdlczoJbnVtYmVyIG9mIHBhZ2VzIGlu
IEBwYWdlcwotICogQHBvczoJYnl0ZSBwb3NpdGlvbiBpbiBmaWxlIGF0IHdoaWNoIHRoZSB3cml0
ZSBiZWdpbnMKLSAqIEBieXRlczoJbnVtYmVyIG9mIGJ5dGVzIHRvIGJlIHdyaXR0ZW4KLSAqCi0g
KiBUaGlzIGlzIGNhbGxlZCBmcm9tIG50ZnNfZmlsZV9idWZmZXJlZF93cml0ZSgpIHdpdGggaV9t
dXRleCBoZWxkIG9uIHRoZSBpbm9kZQotICogKEBwYWdlc1swXS0+bWFwcGluZy0+aG9zdCkuICBU
aGVyZSBhcmUgQG5yX3BhZ2VzIHBhZ2VzIGluIEBwYWdlcyB3aGljaCBhcmUKLSAqIGxvY2tlZCBi
dXQgbm90IGttYXAoKXBlZC4gIFRoZSBzb3VyY2UgZGF0YSBoYXMgYWxyZWFkeSBiZWVuIGNvcGll
ZCBpbnRvIHRoZQotICogQHBhZ2UuICBudGZzX3ByZXBhcmVfcGFnZXNfZm9yX25vbl9yZXNpZGVu
dF93cml0ZSgpIGhhcyBiZWVuIGNhbGxlZCBiZWZvcmUKLSAqIHRoZSBkYXRhIHdhcyBjb3BpZWQg
KGZvciBub24tcmVzaWRlbnQgYXR0cmlidXRlcyBvbmx5KSBhbmQgaXQgcmV0dXJuZWQKLSAqIHN1
Y2Nlc3MuCi0gKgotICogTmVlZCB0byBzZXQgdXB0b2RhdGUgYW5kIG1hcmsgZGlydHkgYWxsIGJ1
ZmZlcnMgd2l0aGluIHRoZSBib3VuZGFyeSBvZiB0aGUKLSAqIHdyaXRlLiAgSWYgYWxsIGJ1ZmZl
cnMgaW4gYSBwYWdlIGFyZSB1cHRvZGF0ZSB3ZSBzZXQgdGhlIHBhZ2UgdXB0b2RhdGUsIHRvby4K
LSAqCi0gKiBTZXR0aW5nIHRoZSBidWZmZXJzIGRpcnR5IGVuc3VyZXMgdGhhdCB0aGV5IGdldCB3
cml0dGVuIG91dCBsYXRlciB3aGVuCi0gKiBudGZzX3dyaXRlcGFnZSgpIGlzIGludm9rZWQgYnkg
dGhlIFZNLgotICoKLSAqIEZpbmFsbHksIHdlIG5lZWQgdG8gdXBkYXRlIGlfc2l6ZSBhbmQgaW5p
dGlhbGl6ZWRfc2l6ZSBhcyBhcHByb3ByaWF0ZSBib3RoCi0gKiBpbiB0aGUgaW5vZGUgYW5kIHRo
ZSBtZnQgcmVjb3JkLgotICoKLSAqIFRoaXMgaXMgbW9kZWxsZWQgYWZ0ZXIgZnMvYnVmZmVyLmM6
OmdlbmVyaWNfY29tbWl0X3dyaXRlKCksIHdoaWNoIG1hcmtzCi0gKiBidWZmZXJzIHVwdG9kYXRl
IGFuZCBkaXJ0eSwgc2V0cyB0aGUgcGFnZSB1cHRvZGF0ZSBpZiBhbGwgYnVmZmVycyBpbiB0aGUK
LSAqIHBhZ2UgYXJlIHVwdG9kYXRlLCBhbmQgdXBkYXRlcyBpX3NpemUgaWYgdGhlIGVuZCBvZiBp
byBpcyBiZXlvbmQgaV9zaXplLiAgSW4KLSAqIHRoYXQgY2FzZSwgaXQgYWxzbyBtYXJrcyB0aGUg
aW5vZGUgZGlydHkuCi0gKgotICogSWYgdGhpbmdzIGhhdmUgZ29uZSBhcyBvdXRsaW5lZCBpbgot
ICogbnRmc19wcmVwYXJlX3BhZ2VzX2Zvcl9ub25fcmVzaWRlbnRfd3JpdGUoKSwgd2UgZG8gbm90
IG5lZWQgdG8gZG8gYW55IHBhZ2UKLSAqIGNvbnRlbnQgbW9kaWZpY2F0aW9ucyBoZXJlIGZvciBu
b24tcmVzaWRlbnQgYXR0cmlidXRlcy4gIEZvciByZXNpZGVudAotICogYXR0cmlidXRlcyB3ZSBu
ZWVkIHRvIGRvIHRoZSB1cHRvZGF0ZSBicmluZ2luZyBoZXJlIHdoaWNoIHdlIGNvbWJpbmUgd2l0
aAotICogdGhlIGNvcHlpbmcgaW50byB0aGUgbWZ0IHJlY29yZCB3aGljaCBtZWFucyB3ZSBzYXZl
IG9uZSBhdG9taWMga21hcC4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIG9yIC1lcnJubyBv
biBlcnJvci4KLSAqLwotc3RhdGljIGludCBudGZzX2NvbW1pdF9wYWdlc19hZnRlcl93cml0ZShz
dHJ1Y3QgcGFnZSAqKnBhZ2VzLAotCQljb25zdCB1bnNpZ25lZCBucl9wYWdlcywgczY0IHBvcywg
c2l6ZV90IGJ5dGVzKQotewotCXM2NCBlbmQsIGluaXRpYWxpemVkX3NpemU7Ci0JbG9mZl90IGlf
c2l6ZTsKLQlzdHJ1Y3QgaW5vZGUgKnZpOwotCW50ZnNfaW5vZGUgKm5pLCAqYmFzZV9uaTsKLQlz
dHJ1Y3QgcGFnZSAqcGFnZTsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4OwotCU1GVF9SRUNP
UkQgKm07Ci0JQVRUUl9SRUNPUkQgKmE7Ci0JY2hhciAqa2F0dHIsICprYWRkcjsKLQl1bnNpZ25l
ZCBsb25nIGZsYWdzOwotCXUzMiBhdHRyX2xlbjsKLQlpbnQgZXJyOwotCi0JQlVHX09OKCFucl9w
YWdlcyk7Ci0JQlVHX09OKCFwYWdlcyk7Ci0JcGFnZSA9IHBhZ2VzWzBdOwotCUJVR19PTighcGFn
ZSk7Ci0JdmkgPSBwYWdlLT5tYXBwaW5nLT5ob3N0OwotCW5pID0gTlRGU19JKHZpKTsKLQludGZz
X2RlYnVnKCJFbnRlcmluZyBmb3IgaW5vZGUgMHglbHgsIGF0dHJpYnV0ZSB0eXBlIDB4JXgsIHN0
YXJ0IHBhZ2UgIgotCQkJImluZGV4IDB4JWx4LCBucl9wYWdlcyAweCV4LCBwb3MgMHglbGx4LCBi
eXRlcyAweCV6eC4iLAotCQkJdmktPmlfaW5vLCBuaS0+dHlwZSwgcGFnZS0+aW5kZXgsIG5yX3Bh
Z2VzLAotCQkJKGxvbmcgbG9uZylwb3MsIGJ5dGVzKTsKLQlpZiAoTklub05vblJlc2lkZW50KG5p
KSkKLQkJcmV0dXJuIG50ZnNfY29tbWl0X3BhZ2VzX2FmdGVyX25vbl9yZXNpZGVudF93cml0ZShw
YWdlcywKLQkJCQlucl9wYWdlcywgcG9zLCBieXRlcyk7Ci0JQlVHX09OKG5yX3BhZ2VzID4gMSk7
Ci0JLyoKLQkgKiBBdHRyaWJ1dGUgaXMgcmVzaWRlbnQsIGltcGx5aW5nIGl0IGlzIG5vdCBjb21w
cmVzc2VkLCBlbmNyeXB0ZWQsIG9yCi0JICogc3BhcnNlLgotCSAqLwotCWlmICghTklub0F0dHIo
bmkpKQotCQliYXNlX25pID0gbmk7Ci0JZWxzZQotCQliYXNlX25pID0gbmktPmV4dC5iYXNlX250
ZnNfaW5vOwotCUJVR19PTihOSW5vTm9uUmVzaWRlbnQobmkpKTsKLQkvKiBNYXAsIHBpbiwgYW5k
IGxvY2sgdGhlIG1mdCByZWNvcmQuICovCi0JbSA9IG1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwot
CWlmIChJU19FUlIobSkpIHsKLQkJZXJyID0gUFRSX0VSUihtKTsKLQkJbSA9IE5VTEw7Ci0JCWN0
eCA9IE5VTEw7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFy
Y2hfY3R4KGJhc2VfbmksIG0pOwotCWlmICh1bmxpa2VseSghY3R4KSkgewotCQllcnIgPSAtRU5P
TUVNOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAobmktPnR5
cGUsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0JCQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwg
MCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlpZiAoZXJyID09IC1FTk9FTlQpCi0J
CQllcnIgPSAtRUlPOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWEgPSBjdHgtPmF0dHI7Ci0JQlVH
X09OKGEtPm5vbl9yZXNpZGVudCk7Ci0JLyogVGhlIHRvdGFsIGxlbmd0aCBvZiB0aGUgYXR0cmli
dXRlIHZhbHVlLiAqLwotCWF0dHJfbGVuID0gbGUzMl90b19jcHUoYS0+ZGF0YS5yZXNpZGVudC52
YWx1ZV9sZW5ndGgpOwotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKHZpKTsKLQlCVUdfT04oYXR0cl9s
ZW4gIT0gaV9zaXplKTsKLQlCVUdfT04ocG9zID4gYXR0cl9sZW4pOwotCWVuZCA9IHBvcyArIGJ5
dGVzOwotCUJVR19PTihlbmQgPiBsZTMyX3RvX2NwdShhLT5sZW5ndGgpIC0KLQkJCWxlMTZfdG9f
Y3B1KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0Ja2F0dHIgPSAodTgqKWEgKyBs
ZTE2X3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCk7Ci0Ja2FkZHIgPSBrbWFw
X2F0b21pYyhwYWdlKTsKLQkvKiBDb3B5IHRoZSByZWNlaXZlZCBkYXRhIGZyb20gdGhlIHBhZ2Ug
dG8gdGhlIG1mdCByZWNvcmQuICovCi0JbWVtY3B5KGthdHRyICsgcG9zLCBrYWRkciArIHBvcywg
Ynl0ZXMpOwotCS8qIFVwZGF0ZSB0aGUgYXR0cmlidXRlIGxlbmd0aCBpZiBuZWNlc3NhcnkuICov
Ci0JaWYgKGVuZCA+IGF0dHJfbGVuKSB7Ci0JCWF0dHJfbGVuID0gZW5kOwotCQlhLT5kYXRhLnJl
c2lkZW50LnZhbHVlX2xlbmd0aCA9IGNwdV90b19sZTMyKGF0dHJfbGVuKTsKLQl9Ci0JLyoKLQkg
KiBJZiB0aGUgcGFnZSBpcyBub3QgdXB0b2RhdGUsIGJyaW5nIHRoZSBvdXQgb2YgYm91bmRzIGFy
ZWEocykKLQkgKiB1cHRvZGF0ZSBieSBjb3B5aW5nIGRhdGEgZnJvbSB0aGUgbWZ0IHJlY29yZCB0
byB0aGUgcGFnZS4KLQkgKi8KLQlpZiAoIVBhZ2VVcHRvZGF0ZShwYWdlKSkgewotCQlpZiAocG9z
ID4gMCkKLQkJCW1lbWNweShrYWRkciwga2F0dHIsIHBvcyk7Ci0JCWlmIChlbmQgPCBhdHRyX2xl
bikKLQkJCW1lbWNweShrYWRkciArIGVuZCwga2F0dHIgKyBlbmQsIGF0dHJfbGVuIC0gZW5kKTsK
LQkJLyogWmVybyB0aGUgcmVnaW9uIG91dHNpZGUgdGhlIGVuZCBvZiB0aGUgYXR0cmlidXRlIHZh
bHVlLiAqLwotCQltZW1zZXQoa2FkZHIgKyBhdHRyX2xlbiwgMCwgUEFHRV9TSVpFIC0gYXR0cl9s
ZW4pOwotCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsKLQkJU2V0UGFnZVVwdG9kYXRlKHBhZ2Up
OwotCX0KLQlrdW5tYXBfYXRvbWljKGthZGRyKTsKLQkvKiBVcGRhdGUgaW5pdGlhbGl6ZWRfc2l6
ZS9pX3NpemUgaWYgbmVjZXNzYXJ5LiAqLwotCXJlYWRfbG9ja19pcnFzYXZlKCZuaS0+c2l6ZV9s
b2NrLCBmbGFncyk7Ci0JaW5pdGlhbGl6ZWRfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9zaXplOwot
CUJVR19PTihlbmQgPiBuaS0+YWxsb2NhdGVkX3NpemUpOwotCXJlYWRfdW5sb2NrX2lycXJlc3Rv
cmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlCVUdfT04oaW5pdGlhbGl6ZWRfc2l6ZSAhPSBp
X3NpemUpOwotCWlmIChlbmQgPiBpbml0aWFsaXplZF9zaXplKSB7Ci0JCXdyaXRlX2xvY2tfaXJx
c2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQluaS0+aW5pdGlhbGl6ZWRfc2l6ZSA9IGVu
ZDsKLQkJaV9zaXplX3dyaXRlKHZpLCBlbmQpOwotCQl3cml0ZV91bmxvY2tfaXJxcmVzdG9yZSgm
bmktPnNpemVfbG9jaywgZmxhZ3MpOwotCX0KLQkvKiBNYXJrIHRoZSBtZnQgcmVjb3JkIGRpcnR5
LCBzbyBpdCBnZXRzIHdyaXR0ZW4gYmFjay4gKi8KLQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9w
YWdlKGN0eC0+bnRmc19pbm8pOwotCW1hcmtfbWZ0X3JlY29yZF9kaXJ0eShjdHgtPm50ZnNfaW5v
KTsKLQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQl1bm1hcF9tZnRfcmVjb3JkKGJh
c2VfbmkpOwotCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JcmV0dXJuIDA7Ci1lcnJfb3V0OgotCWlm
IChlcnIgPT0gLUVOT01FTSkgewotCQludGZzX3dhcm5pbmcodmktPmlfc2IsICJFcnJvciBhbGxv
Y2F0aW5nIG1lbW9yeSByZXF1aXJlZCB0byAiCi0JCQkJImNvbW1pdCB0aGUgd3JpdGUuIik7Ci0J
CWlmIChQYWdlVXB0b2RhdGUocGFnZSkpIHsKLQkJCW50ZnNfd2FybmluZyh2aS0+aV9zYiwgIlBh
Z2UgaXMgdXB0b2RhdGUsIHNldHRpbmcgIgotCQkJCQkiZGlydHkgc28gdGhlIHdyaXRlIHdpbGwg
YmUgcmV0cmllZCAiCi0JCQkJCSJsYXRlciBvbiBieSB0aGUgVk0uIik7Ci0JCQkvKgotCQkJICog
UHV0IHRoZSBwYWdlIG9uIG1hcHBpbmctPmRpcnR5X3BhZ2VzLCBidXQgbGVhdmUgaXRzCi0JCQkg
KiBidWZmZXJzJyBkaXJ0eSBzdGF0ZSBhcy1pcy4KLQkJCSAqLwotCQkJX19zZXRfcGFnZV9kaXJ0
eV9ub2J1ZmZlcnMocGFnZSk7Ci0JCQllcnIgPSAwOwotCQl9IGVsc2UKLQkJCW50ZnNfZXJyb3Io
dmktPmlfc2IsICJQYWdlIGlzIG5vdCB1cHRvZGF0ZS4gIFdyaXR0ZW4gIgotCQkJCQkiZGF0YSBo
YXMgYmVlbiBsb3N0LiIpOwotCX0gZWxzZSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJSZXNp
ZGVudCBhdHRyaWJ1dGUgY29tbWl0IHdyaXRlIGZhaWxlZCAiCi0JCQkJIndpdGggZXJyb3IgJWku
IiwgZXJyKTsKLQkJTlZvbFNldEVycm9ycyhuaS0+dm9sKTsKLQl9Ci0JaWYgKGN0eCkKLQkJbnRm
c19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JaWYgKG0pCi0JCXVubWFwX21mdF9yZWNvcmQo
YmFzZV9uaSk7Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoKLSAqIENvcHkgYXMgbXVjaCBhcyB3ZSBj
YW4gaW50byB0aGUgcGFnZXMgYW5kIHJldHVybiB0aGUgbnVtYmVyIG9mIGJ5dGVzIHdoaWNoCi0g
KiB3ZXJlIHN1Y2Nlc3NmdWxseSBjb3BpZWQuICBJZiBhIGZhdWx0IGlzIGVuY291bnRlcmVkIHRo
ZW4gY2xlYXIgdGhlIHBhZ2VzCi0gKiBvdXQgdG8gKG9mcyArIGJ5dGVzKSBhbmQgcmV0dXJuIHRo
ZSBudW1iZXIgb2YgYnl0ZXMgd2hpY2ggd2VyZSBjb3BpZWQuCi0gKi8KLXN0YXRpYyBzaXplX3Qg
bnRmc19jb3B5X2Zyb21fdXNlcl9pdGVyKHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVkIG5y
X3BhZ2VzLAotCQl1bnNpZ25lZCBvZnMsIHN0cnVjdCBpb3ZfaXRlciAqaSwgc2l6ZV90IGJ5dGVz
KQotewotCXN0cnVjdCBwYWdlICoqbGFzdF9wYWdlID0gcGFnZXMgKyBucl9wYWdlczsKLQlzaXpl
X3QgdG90YWwgPSAwOwotCXVuc2lnbmVkIGxlbiwgY29waWVkOwotCi0JZG8gewotCQlsZW4gPSBQ
QUdFX1NJWkUgLSBvZnM7Ci0JCWlmIChsZW4gPiBieXRlcykKLQkJCWxlbiA9IGJ5dGVzOwotCQlj
b3BpZWQgPSBjb3B5X3BhZ2VfZnJvbV9pdGVyX2F0b21pYygqcGFnZXMsIG9mcywgbGVuLCBpKTsK
LQkJdG90YWwgKz0gY29waWVkOwotCQlieXRlcyAtPSBjb3BpZWQ7Ci0JCWlmICghYnl0ZXMpCi0J
CQlicmVhazsKLQkJaWYgKGNvcGllZCA8IGxlbikKLQkJCWdvdG8gZXJyOwotCQlvZnMgPSAwOwot
CX0gd2hpbGUgKCsrcGFnZXMgPCBsYXN0X3BhZ2UpOwotb3V0OgotCXJldHVybiB0b3RhbDsKLWVy
cjoKLQkvKiBaZXJvIHRoZSByZXN0IG9mIHRoZSB0YXJnZXQgbGlrZSBfX2NvcHlfZnJvbV91c2Vy
KCkuICovCi0JbGVuID0gUEFHRV9TSVpFIC0gY29waWVkOwotCWRvIHsKLQkJaWYgKGxlbiA+IGJ5
dGVzKQotCQkJbGVuID0gYnl0ZXM7Ci0JCXplcm9fdXNlcigqcGFnZXMsIGNvcGllZCwgbGVuKTsK
LQkJYnl0ZXMgLT0gbGVuOwotCQljb3BpZWQgPSAwOwotCQlsZW4gPSBQQUdFX1NJWkU7Ci0JfSB3
aGlsZSAoKytwYWdlcyA8IGxhc3RfcGFnZSk7Ci0JZ290byBvdXQ7Ci19Ci0KLS8qKgotICogbnRm
c19wZXJmb3JtX3dyaXRlIC0gcGVyZm9ybSBidWZmZXJlZCB3cml0ZSB0byBhIGZpbGUKLSAqIEBm
aWxlOglmaWxlIHRvIHdyaXRlIHRvCi0gKiBAaToJCWlvdl9pdGVyIHdpdGggZGF0YSB0byB3cml0
ZQotICogQHBvczoJYnl0ZSBvZmZzZXQgaW4gZmlsZSBhdCB3aGljaCB0byBiZWdpbiB3cml0aW5n
IHRvCi0gKi8KLXN0YXRpYyBzc2l6ZV90IG50ZnNfcGVyZm9ybV93cml0ZShzdHJ1Y3QgZmlsZSAq
ZmlsZSwgc3RydWN0IGlvdl9pdGVyICppLAotCQlsb2ZmX3QgcG9zKQotewotCXN0cnVjdCBhZGRy
ZXNzX3NwYWNlICptYXBwaW5nID0gZmlsZS0+Zl9tYXBwaW5nOwotCXN0cnVjdCBpbm9kZSAqdmkg
PSBtYXBwaW5nLT5ob3N0OwotCW50ZnNfaW5vZGUgKm5pID0gTlRGU19JKHZpKTsKLQludGZzX3Zv
bHVtZSAqdm9sID0gbmktPnZvbDsKLQlzdHJ1Y3QgcGFnZSAqcGFnZXNbTlRGU19NQVhfUEFHRVNf
UEVSX0NMVVNURVJdOwotCXN0cnVjdCBwYWdlICpjYWNoZWRfcGFnZSA9IE5VTEw7Ci0JVkNOIGxh
c3RfdmNuOwotCUxDTiBsY247Ci0Jc2l6ZV90IGJ5dGVzOwotCXNzaXplX3Qgc3RhdHVzLCB3cml0
dGVuID0gMDsKLQl1bnNpZ25lZCBucl9wYWdlczsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZv
ciBpX2lubyAweCVseCwgYXR0cmlidXRlIHR5cGUgMHgleCwgcG9zICIKLQkJCSIweCVsbHgsIGNv
dW50IDB4JWx4LiIsIHZpLT5pX2lubywKLQkJCSh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlw
ZSksCi0JCQkodW5zaWduZWQgbG9uZyBsb25nKXBvcywKLQkJCSh1bnNpZ25lZCBsb25nKWlvdl9p
dGVyX2NvdW50KGkpKTsKLQkvKgotCSAqIElmIGEgcHJldmlvdXMgbnRmc190cnVuY2F0ZSgpIGZh
aWxlZCwgcmVwZWF0IGl0IGFuZCBhYm9ydCBpZiBpdAotCSAqIGZhaWxzIGFnYWluLgotCSAqLwot
CWlmICh1bmxpa2VseShOSW5vVHJ1bmNhdGVGYWlsZWQobmkpKSkgewotCQlpbnQgZXJyOwotCi0J
CWlub2RlX2Rpb193YWl0KHZpKTsKLQkJZXJyID0gbnRmc190cnVuY2F0ZSh2aSk7Ci0JCWlmIChl
cnIgfHwgTklub1RydW5jYXRlRmFpbGVkKG5pKSkgewotCQkJaWYgKCFlcnIpCi0JCQkJZXJyID0g
LUVJTzsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCBwZXJmb3JtIHdyaXRlIHRvIGlu
b2RlICIKLQkJCQkJIjB4JWx4LCBhdHRyaWJ1dGUgdHlwZSAweCV4LCBiZWNhdXNlICIKLQkJCQkJ
Im50ZnNfdHJ1bmNhdGUoKSBmYWlsZWQgKGVycm9yIGNvZGUgIgotCQkJCQkiJWkpLiIsIHZpLT5p
X2lubywKLQkJCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBlKSwgZXJyKTsKLQkJCXJl
dHVybiBlcnI7Ci0JCX0KLQl9Ci0JLyoKLQkgKiBEZXRlcm1pbmUgdGhlIG51bWJlciBvZiBwYWdl
cyBwZXIgY2x1c3RlciBmb3Igbm9uLXJlc2lkZW50Ci0JICogYXR0cmlidXRlcy4KLQkgKi8KLQlu
cl9wYWdlcyA9IDE7Ci0JaWYgKHZvbC0+Y2x1c3Rlcl9zaXplID4gUEFHRV9TSVpFICYmIE5Jbm9O
b25SZXNpZGVudChuaSkpCi0JCW5yX3BhZ2VzID0gdm9sLT5jbHVzdGVyX3NpemUgPj4gUEFHRV9T
SElGVDsKLQlsYXN0X3ZjbiA9IC0xOwotCWRvIHsKLQkJVkNOIHZjbjsKLQkJcGdvZmZfdCBzdGFy
dF9pZHg7Ci0JCXVuc2lnbmVkIG9mcywgZG9fcGFnZXMsIHU7Ci0JCXNpemVfdCBjb3BpZWQ7Ci0K
LQkJc3RhcnRfaWR4ID0gcG9zID4+IFBBR0VfU0hJRlQ7Ci0JCW9mcyA9IHBvcyAmIH5QQUdFX01B
U0s7Ci0JCWJ5dGVzID0gUEFHRV9TSVpFIC0gb2ZzOwotCQlkb19wYWdlcyA9IDE7Ci0JCWlmIChu
cl9wYWdlcyA+IDEpIHsKLQkJCXZjbiA9IHBvcyA+PiB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzOwot
CQkJaWYgKHZjbiAhPSBsYXN0X3ZjbikgewotCQkJCWxhc3RfdmNuID0gdmNuOwotCQkJCS8qCi0J
CQkJICogR2V0IHRoZSBsY24gb2YgdGhlIHZjbiB0aGUgd3JpdGUgaXMgaW4uICBJZgotCQkJCSAq
IGl0IGlzIGEgaG9sZSwgbmVlZCB0byBsb2NrIGRvd24gYWxsIHBhZ2VzIGluCi0JCQkJICogdGhl
IGNsdXN0ZXIuCi0JCQkJICovCi0JCQkJZG93bl9yZWFkKCZuaS0+cnVubGlzdC5sb2NrKTsKLQkJ
CQlsY24gPSBudGZzX2F0dHJfdmNuX3RvX2xjbl9ub2xvY2sobmksIHBvcyA+PgotCQkJCQkJdm9s
LT5jbHVzdGVyX3NpemVfYml0cywgZmFsc2UpOwotCQkJCXVwX3JlYWQoJm5pLT5ydW5saXN0Lmxv
Y2spOwotCQkJCWlmICh1bmxpa2VseShsY24gPCBMQ05fSE9MRSkpIHsKLQkJCQkJaWYgKGxjbiA9
PSBMQ05fRU5PTUVNKQotCQkJCQkJc3RhdHVzID0gLUVOT01FTTsKLQkJCQkJZWxzZSB7Ci0JCQkJ
CQlzdGF0dXMgPSAtRUlPOwotCQkJCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiQ2Fubm90ICIKLQkJ
CQkJCQkicGVyZm9ybSB3cml0ZSB0byAiCi0JCQkJCQkJImlub2RlIDB4JWx4LCAiCi0JCQkJCQkJ
ImF0dHJpYnV0ZSB0eXBlIDB4JXgsICIKLQkJCQkJCQkiYmVjYXVzZSB0aGUgYXR0cmlidXRlICIK
LQkJCQkJCQkiaXMgY29ycnVwdC4iLAotCQkJCQkJCXZpLT5pX2lubywgKHVuc2lnbmVkKQotCQkJ
CQkJCWxlMzJfdG9fY3B1KG5pLT50eXBlKSk7Ci0JCQkJCX0KLQkJCQkJYnJlYWs7Ci0JCQkJfQot
CQkJCWlmIChsY24gPT0gTENOX0hPTEUpIHsKLQkJCQkJc3RhcnRfaWR4ID0gKHBvcyAmIH4oczY0
KQotCQkJCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX21hc2spCi0JCQkJCQkJPj4gUEFHRV9TSElGVDsK
LQkJCQkJYnl0ZXMgPSB2b2wtPmNsdXN0ZXJfc2l6ZSAtIChwb3MgJgotCQkJCQkJCXZvbC0+Y2x1
c3Rlcl9zaXplX21hc2spOwotCQkJCQlkb19wYWdlcyA9IG5yX3BhZ2VzOwotCQkJCX0KLQkJCX0K
LQkJfQotCQlpZiAoYnl0ZXMgPiBpb3ZfaXRlcl9jb3VudChpKSkKLQkJCWJ5dGVzID0gaW92X2l0
ZXJfY291bnQoaSk7Ci1hZ2FpbjoKLQkJLyoKLQkJICogQnJpbmcgaW4gdGhlIHVzZXIgcGFnZShz
KSB0aGF0IHdlIHdpbGwgY29weSBmcm9tIF9maXJzdF8uCi0JCSAqIE90aGVyd2lzZSB0aGVyZSBp
cyBhIG5hc3R5IGRlYWRsb2NrIG9uIGNvcHlpbmcgZnJvbSB0aGUgc2FtZQotCQkgKiBwYWdlKHMp
IGFzIHdlIGFyZSB3cml0aW5nIHRvLCB3aXRob3V0IGl0L3RoZW0gYmVpbmcgbWFya2VkCi0JCSAq
IHVwLXRvLWRhdGUuICBOb3RlLCBhdCBwcmVzZW50IHRoZXJlIGlzIG5vdGhpbmcgdG8gc3RvcCB0
aGUKLQkJICogcGFnZXMgYmVpbmcgc3dhcHBlZCBvdXQgYmV0d2VlbiB1cyBicmluZ2luZyB0aGVt
IGludG8gbWVtb3J5Ci0JCSAqIGFuZCBkb2luZyB0aGUgYWN0dWFsIGNvcHlpbmcuCi0JCSAqLwot
CQlpZiAodW5saWtlbHkoZmF1bHRfaW5faW92X2l0ZXJfcmVhZGFibGUoaSwgYnl0ZXMpKSkgewot
CQkJc3RhdHVzID0gLUVGQVVMVDsKLQkJCWJyZWFrOwotCQl9Ci0JCS8qIEdldCBhbmQgbG9jayBA
ZG9fcGFnZXMgc3RhcnRpbmcgYXQgaW5kZXggQHN0YXJ0X2lkeC4gKi8KLQkJc3RhdHVzID0gX19u
dGZzX2dyYWJfY2FjaGVfcGFnZXMobWFwcGluZywgc3RhcnRfaWR4LCBkb19wYWdlcywKLQkJCQlw
YWdlcywgJmNhY2hlZF9wYWdlKTsKLQkJaWYgKHVubGlrZWx5KHN0YXR1cykpCi0JCQlicmVhazsK
LQkJLyoKLQkJICogRm9yIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGVzLCB3ZSBuZWVkIHRvIGZpbGwg
YW55IGhvbGVzIHdpdGgKLQkJICogYWN0dWFsIGNsdXN0ZXJzIGFuZCBlbnN1cmUgYWxsIGJ1ZmZl
cmVzIGFyZSBtYXBwZWQuICBXZSBhbHNvCi0JCSAqIG5lZWQgdG8gYnJpbmcgdXB0b2RhdGUgYW55
IGJ1ZmZlcnMgdGhhdCBhcmUgb25seSBwYXJ0aWFsbHkKLQkJICogYmVpbmcgd3JpdHRlbiB0by4K
LQkJICovCi0JCWlmIChOSW5vTm9uUmVzaWRlbnQobmkpKSB7Ci0JCQlzdGF0dXMgPSBudGZzX3By
ZXBhcmVfcGFnZXNfZm9yX25vbl9yZXNpZGVudF93cml0ZSgKLQkJCQkJcGFnZXMsIGRvX3BhZ2Vz
LCBwb3MsIGJ5dGVzKTsKLQkJCWlmICh1bmxpa2VseShzdGF0dXMpKSB7Ci0JCQkJZG8gewotCQkJ
CQl1bmxvY2tfcGFnZShwYWdlc1stLWRvX3BhZ2VzXSk7Ci0JCQkJCXB1dF9wYWdlKHBhZ2VzW2Rv
X3BhZ2VzXSk7Ci0JCQkJfSB3aGlsZSAoZG9fcGFnZXMpOwotCQkJCWJyZWFrOwotCQkJfQotCQl9
Ci0JCXUgPSAocG9zID4+IFBBR0VfU0hJRlQpIC0gcGFnZXNbMF0tPmluZGV4OwotCQljb3BpZWQg
PSBudGZzX2NvcHlfZnJvbV91c2VyX2l0ZXIocGFnZXMgKyB1LCBkb19wYWdlcyAtIHUsIG9mcywK
LQkJCQkJaSwgYnl0ZXMpOwotCQludGZzX2ZsdXNoX2RjYWNoZV9wYWdlcyhwYWdlcyArIHUsIGRv
X3BhZ2VzIC0gdSk7Ci0JCXN0YXR1cyA9IDA7Ci0JCWlmIChsaWtlbHkoY29waWVkID09IGJ5dGVz
KSkgewotCQkJc3RhdHVzID0gbnRmc19jb21taXRfcGFnZXNfYWZ0ZXJfd3JpdGUocGFnZXMsIGRv
X3BhZ2VzLAotCQkJCQlwb3MsIGJ5dGVzKTsKLQkJfQotCQlkbyB7Ci0JCQl1bmxvY2tfcGFnZShw
YWdlc1stLWRvX3BhZ2VzXSk7Ci0JCQlwdXRfcGFnZShwYWdlc1tkb19wYWdlc10pOwotCQl9IHdo
aWxlIChkb19wYWdlcyk7Ci0JCWlmICh1bmxpa2VseShzdGF0dXMgPCAwKSkgewotCQkJaW92X2l0
ZXJfcmV2ZXJ0KGksIGNvcGllZCk7Ci0JCQlicmVhazsKLQkJfQotCQljb25kX3Jlc2NoZWQoKTsK
LQkJaWYgKHVubGlrZWx5KGNvcGllZCA8IGJ5dGVzKSkgewotCQkJaW92X2l0ZXJfcmV2ZXJ0KGks
IGNvcGllZCk7Ci0JCQlpZiAoY29waWVkKQotCQkJCWJ5dGVzID0gY29waWVkOwotCQkJZWxzZSBp
ZiAoYnl0ZXMgPiBQQUdFX1NJWkUgLSBvZnMpCi0JCQkJYnl0ZXMgPSBQQUdFX1NJWkUgLSBvZnM7
Ci0JCQlnb3RvIGFnYWluOwotCQl9Ci0JCXBvcyArPSBjb3BpZWQ7Ci0JCXdyaXR0ZW4gKz0gY29w
aWVkOwotCQliYWxhbmNlX2RpcnR5X3BhZ2VzX3JhdGVsaW1pdGVkKG1hcHBpbmcpOwotCQlpZiAo
ZmF0YWxfc2lnbmFsX3BlbmRpbmcoY3VycmVudCkpIHsKLQkJCXN0YXR1cyA9IC1FSU5UUjsKLQkJ
CWJyZWFrOwotCQl9Ci0JfSB3aGlsZSAoaW92X2l0ZXJfY291bnQoaSkpOwotCWlmIChjYWNoZWRf
cGFnZSkKLQkJcHV0X3BhZ2UoY2FjaGVkX3BhZ2UpOwotCW50ZnNfZGVidWcoIkRvbmUuICBSZXR1
cm5pbmcgJXMgKHdyaXR0ZW4gMHglbHgsIHN0YXR1cyAlbGkpLiIsCi0JCQl3cml0dGVuID8gIndy
aXR0ZW4iIDogInN0YXR1cyIsICh1bnNpZ25lZCBsb25nKXdyaXR0ZW4sCi0JCQkobG9uZylzdGF0
dXMpOwotCXJldHVybiB3cml0dGVuID8gd3JpdHRlbiA6IHN0YXR1czsKLX0KLQotLyoqCi0gKiBu
dGZzX2ZpbGVfd3JpdGVfaXRlciAtIHNpbXBsZSB3cmFwcGVyIGZvciBudGZzX2ZpbGVfd3JpdGVf
aXRlcl9ub2xvY2soKQotICogQGlvY2I6CUlPIHN0YXRlIHN0cnVjdHVyZQotICogQGZyb206CWlv
dl9pdGVyIHdpdGggZGF0YSB0byB3cml0ZQotICoKLSAqIEJhc2ljYWxseSB0aGUgc2FtZSBhcyBn
ZW5lcmljX2ZpbGVfd3JpdGVfaXRlcigpIGV4Y2VwdCB0aGF0IGl0IGVuZHMgdXAKLSAqIHVwIGNh
bGxpbmcgbnRmc19wZXJmb3JtX3dyaXRlKCkgaW5zdGVhZCBvZiBnZW5lcmljX3BlcmZvcm1fd3Jp
dGUoKSBhbmQgdGhhdAotICogT19ESVJFQ1QgaXMgbm90IGltcGxlbWVudGVkLgotICovCi1zdGF0
aWMgc3NpemVfdCBudGZzX2ZpbGVfd3JpdGVfaXRlcihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVj
dCBpb3ZfaXRlciAqZnJvbSkKLXsKLQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IGlvY2ItPmtpX2ZpbHA7
Ci0Jc3RydWN0IGlub2RlICp2aSA9IGZpbGVfaW5vZGUoZmlsZSk7Ci0Jc3NpemVfdCB3cml0dGVu
ID0gMDsKLQlzc2l6ZV90IGVycjsKLQotCWlub2RlX2xvY2sodmkpOwotCS8qIFdlIGNhbiB3cml0
ZSBiYWNrIHRoaXMgcXVldWUgaW4gcGFnZSByZWNsYWltLiAqLwotCWVyciA9IG50ZnNfcHJlcGFy
ZV9maWxlX2Zvcl93cml0ZShpb2NiLCBmcm9tKTsKLQlpZiAoaW92X2l0ZXJfY291bnQoZnJvbSkg
JiYgIWVycikKLQkJd3JpdHRlbiA9IG50ZnNfcGVyZm9ybV93cml0ZShmaWxlLCBmcm9tLCBpb2Ni
LT5raV9wb3MpOwotCWlub2RlX3VubG9jayh2aSk7Ci0JaW9jYi0+a2lfcG9zICs9IHdyaXR0ZW47
Ci0JaWYgKGxpa2VseSh3cml0dGVuID4gMCkpCi0JCXdyaXR0ZW4gPSBnZW5lcmljX3dyaXRlX3N5
bmMoaW9jYiwgd3JpdHRlbik7Ci0JcmV0dXJuIHdyaXR0ZW4gPyB3cml0dGVuIDogZXJyOwotfQot
Ci0vKioKLSAqIG50ZnNfZmlsZV9mc3luYyAtIHN5bmMgYSBmaWxlIHRvIGRpc2sKLSAqIEBmaWxw
OglmaWxlIHRvIGJlIHN5bmNlZAotICogQGRhdGFzeW5jOglpZiBub24temVybyBvbmx5IGZsdXNo
IHVzZXIgZGF0YSBhbmQgbm90IG1ldGFkYXRhCi0gKgotICogRGF0YSBpbnRlZ3JpdHkgc3luYyBv
ZiBhIGZpbGUgdG8gZGlzay4gIFVzZWQgZm9yIGZzeW5jLCBmZGF0YXN5bmMsIGFuZCBtc3luYwot
ICogc3lzdGVtIGNhbGxzLiAgVGhpcyBmdW5jdGlvbiBpcyBpbnNwaXJlZCBieSBmcy9idWZmZXIu
Yzo6ZmlsZV9mc3luYygpLgotICoKLSAqIElmIEBkYXRhc3luYyBpcyBmYWxzZSwgd3JpdGUgdGhl
IG1mdCByZWNvcmQgYW5kIGFsbCBhc3NvY2lhdGVkIGV4dGVudCBtZnQKLSAqIHJlY29yZHMgYXMg
d2VsbCBhcyB0aGUgJERBVEEgYXR0cmlidXRlIGFuZCB0aGVuIHN5bmMgdGhlIGJsb2NrIGRldmlj
ZS4KLSAqCi0gKiBJZiBAZGF0YXN5bmMgaXMgdHJ1ZSBhbmQgdGhlIGF0dHJpYnV0ZSBpcyBub24t
cmVzaWRlbnQsIHdlIHNraXAgdGhlIHdyaXRpbmcKLSAqIG9mIHRoZSBtZnQgcmVjb3JkIGFuZCBh
bGwgYXNzb2NpYXRlZCBleHRlbnQgbWZ0IHJlY29yZHMgKHRoaXMgbWlnaHQgc3RpbGwKLSAqIGhh
cHBlbiBkdWUgdG8gdGhlIHdyaXRlX2lub2RlX25vdygpIGNhbGwpLgotICoKLSAqIEFsc28sIGlm
IEBkYXRhc3luYyBpcyB0cnVlLCB3ZSBkbyBub3Qgd2FpdCBvbiB0aGUgaW5vZGUgdG8gYmUgd3Jp
dHRlbiBvdXQKLSAqIGJ1dCB3ZSBhbHdheXMgd2FpdCBvbiB0aGUgcGFnZSBjYWNoZSBwYWdlcyB0
byBiZSB3cml0dGVuIG91dC4KLSAqCi0gKiBMb2NraW5nOiBDYWxsZXIgbXVzdCBob2xkIGlfbXV0
ZXggb24gdGhlIGlub2RlLgotICoKLSAqIFRPRE86IFdlIHNob3VsZCBwcm9iYWJseSBhbHNvIHdy
aXRlIGFsbCBhdHRyaWJ1dGUvaW5kZXggaW5vZGVzIGFzc29jaWF0ZWQKLSAqIHdpdGggdGhpcyBp
bm9kZSBidXQgc2luY2Ugd2UgaGF2ZSBubyBzaW1wbGUgd2F5IG9mIGdldHRpbmcgdG8gdGhlbSB3
ZSBpZ25vcmUKLSAqIHRoaXMgcHJvYmxlbSBmb3Igbm93LgotICovCi1zdGF0aWMgaW50IG50ZnNf
ZmlsZV9mc3luYyhzdHJ1Y3QgZmlsZSAqZmlscCwgbG9mZl90IHN0YXJ0LCBsb2ZmX3QgZW5kLAot
CQkJICAgaW50IGRhdGFzeW5jKQotewotCXN0cnVjdCBpbm9kZSAqdmkgPSBmaWxwLT5mX21hcHBp
bmctPmhvc3Q7Ci0JaW50IGVyciwgcmV0ID0gMDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZv
ciBpbm9kZSAweCVseC4iLCB2aS0+aV9pbm8pOwotCi0JZXJyID0gZmlsZV93cml0ZV9hbmRfd2Fp
dF9yYW5nZShmaWxwLCBzdGFydCwgZW5kKTsKLQlpZiAoZXJyKQotCQlyZXR1cm4gZXJyOwotCWlu
b2RlX2xvY2sodmkpOwotCi0JQlVHX09OKFNfSVNESVIodmktPmlfbW9kZSkpOwotCWlmICghZGF0
YXN5bmMgfHwgIU5Jbm9Ob25SZXNpZGVudChOVEZTX0kodmkpKSkKLQkJcmV0ID0gX19udGZzX3dy
aXRlX2lub2RlKHZpLCAxKTsKLQl3cml0ZV9pbm9kZV9ub3codmksICFkYXRhc3luYyk7Ci0JLyoK
LQkgKiBOT1RFOiBJZiB3ZSB3ZXJlIHRvIHVzZSBtYXBwaW5nLT5wcml2YXRlX2xpc3QgKHNlZSBl
eHQyIGFuZAotCSAqIGZzL2J1ZmZlci5jKSBmb3IgZGlydHkgYmxvY2tzIHRoZW4gd2UgY291bGQg
b3B0aW1pemUgdGhlIGJlbG93IHRvIGJlCi0JICogc3luY19tYXBwaW5nX2J1ZmZlcnModmktPmlf
bWFwcGluZykuCi0JICovCi0JZXJyID0gc3luY19ibG9ja2Rldih2aS0+aV9zYi0+c19iZGV2KTsK
LQlpZiAodW5saWtlbHkoZXJyICYmICFyZXQpKQotCQlyZXQgPSBlcnI7Ci0JaWYgKGxpa2VseSgh
cmV0KSkKLQkJbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQllbHNlCi0JCW50ZnNfd2FybmluZyh2aS0+
aV9zYiwgIkZhaWxlZCB0byBmJXNzeW5jIGlub2RlIDB4JWx4LiAgRXJyb3IgIgotCQkJCSIldS4i
LCBkYXRhc3luYyA/ICJkYXRhIiA6ICIiLCB2aS0+aV9pbm8sIC1yZXQpOwotCWlub2RlX3VubG9j
ayh2aSk7Ci0JcmV0dXJuIHJldDsKLX0KLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQotY29uc3Qg
c3RydWN0IGZpbGVfb3BlcmF0aW9ucyBudGZzX2ZpbGVfb3BzID0gewotCS5sbHNlZWsJCT0gZ2Vu
ZXJpY19maWxlX2xsc2VlaywKLQkucmVhZF9pdGVyCT0gZ2VuZXJpY19maWxlX3JlYWRfaXRlciwK
LSNpZmRlZiBOVEZTX1JXCi0JLndyaXRlX2l0ZXIJPSBudGZzX2ZpbGVfd3JpdGVfaXRlciwKLQku
ZnN5bmMJCT0gbnRmc19maWxlX2ZzeW5jLAotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQkubW1hcAkJ
PSBnZW5lcmljX2ZpbGVfbW1hcCwKLQkub3BlbgkJPSBudGZzX2ZpbGVfb3BlbiwKLQkuc3BsaWNl
X3JlYWQJPSBmaWxlbWFwX3NwbGljZV9yZWFkLAotfTsKLQotY29uc3Qgc3RydWN0IGlub2RlX29w
ZXJhdGlvbnMgbnRmc19maWxlX2lub2RlX29wcyA9IHsKLSNpZmRlZiBOVEZTX1JXCi0JLnNldGF0
dHIJPSBudGZzX3NldGF0dHIsCi0jZW5kaWYgLyogTlRGU19SVyAqLwotfTsKLQotY29uc3Qgc3Ry
dWN0IGZpbGVfb3BlcmF0aW9ucyBudGZzX2VtcHR5X2ZpbGVfb3BzID0ge307Ci0KLWNvbnN0IHN0
cnVjdCBpbm9kZV9vcGVyYXRpb25zIG50ZnNfZW1wdHlfaW5vZGVfb3BzID0ge307CmRpZmYgLS1n
aXQgYS9mcy9udGZzL2luZGV4LmMgYi9mcy9udGZzL2luZGV4LmMKZGVsZXRlZCBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IGQ0NmMyYzAzYTAzMi4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvaW5k
ZXguYworKysgL2Rldi9udWxsCkBAIC0xLDQ0MCArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRl
bnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgotLyoKLSAqIGluZGV4LmMgLSBOVEZTIGtlcm5lbCBp
bmRleCBoYW5kbGluZy4gIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4KLSAqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDQtMjAwNSBBbnRvbiBBbHRhcGFybWFrb3YKLSAqLwotCi0jaW5jbHVk
ZSA8bGludXgvc2xhYi5oPgotCi0jaW5jbHVkZSAiYW9wcy5oIgotI2luY2x1ZGUgImNvbGxhdGUu
aCIKLSNpbmNsdWRlICJkZWJ1Zy5oIgotI2luY2x1ZGUgImluZGV4LmgiCi0jaW5jbHVkZSAibnRm
cy5oIgotCi0vKioKLSAqIG50ZnNfaW5kZXhfY3R4X2dldCAtIGFsbG9jYXRlIGFuZCBpbml0aWFs
aXplIGEgbmV3IGluZGV4IGNvbnRleHQKLSAqIEBpZHhfbmk6CW50ZnMgaW5kZXggaW5vZGUgd2l0
aCB3aGljaCB0byBpbml0aWFsaXplIHRoZSBjb250ZXh0Ci0gKgotICogQWxsb2NhdGUgYSBuZXcg
aW5kZXggY29udGV4dCwgaW5pdGlhbGl6ZSBpdCB3aXRoIEBpZHhfbmkgYW5kIHJldHVybiBpdC4K
LSAqIFJldHVybiBOVUxMIGlmIGFsbG9jYXRpb24gZmFpbGVkLgotICoKLSAqIExvY2tpbmc6ICBD
YWxsZXIgbXVzdCBob2xkIGlfbXV0ZXggb24gdGhlIGluZGV4IGlub2RlLgotICovCi1udGZzX2lu
ZGV4X2NvbnRleHQgKm50ZnNfaW5kZXhfY3R4X2dldChudGZzX2lub2RlICppZHhfbmkpCi17Ci0J
bnRmc19pbmRleF9jb250ZXh0ICppY3R4OwotCi0JaWN0eCA9IGttZW1fY2FjaGVfYWxsb2MobnRm
c19pbmRleF9jdHhfY2FjaGUsIEdGUF9OT0ZTKTsKLQlpZiAoaWN0eCkKLQkJKmljdHggPSAobnRm
c19pbmRleF9jb250ZXh0KXsgLmlkeF9uaSA9IGlkeF9uaSB9OwotCXJldHVybiBpY3R4OwotfQot
Ci0vKioKLSAqIG50ZnNfaW5kZXhfY3R4X3B1dCAtIHJlbGVhc2UgYW4gaW5kZXggY29udGV4dAot
ICogQGljdHg6CWluZGV4IGNvbnRleHQgdG8gZnJlZQotICoKLSAqIFJlbGVhc2UgdGhlIGluZGV4
IGNvbnRleHQgQGljdHgsIHJlbGVhc2luZyBhbGwgYXNzb2NpYXRlZCByZXNvdXJjZXMuCi0gKgot
ICogTG9ja2luZzogIENhbGxlciBtdXN0IGhvbGQgaV9tdXRleCBvbiB0aGUgaW5kZXggaW5vZGUu
Ci0gKi8KLXZvaWQgbnRmc19pbmRleF9jdHhfcHV0KG50ZnNfaW5kZXhfY29udGV4dCAqaWN0eCkK
LXsKLQlpZiAoaWN0eC0+ZW50cnkpIHsKLQkJaWYgKGljdHgtPmlzX2luX3Jvb3QpIHsKLQkJCWlm
IChpY3R4LT5hY3R4KQotCQkJCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChpY3R4LT5hY3R4KTsK
LQkJCWlmIChpY3R4LT5iYXNlX25pKQotCQkJCXVubWFwX21mdF9yZWNvcmQoaWN0eC0+YmFzZV9u
aSk7Ci0JCX0gZWxzZSB7Ci0JCQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IGljdHgtPnBhZ2U7Ci0JCQlp
ZiAocGFnZSkgewotCQkJCUJVR19PTighUGFnZUxvY2tlZChwYWdlKSk7Ci0JCQkJdW5sb2NrX3Bh
Z2UocGFnZSk7Ci0JCQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQkJfQotCQl9Ci0JfQotCWtt
ZW1fY2FjaGVfZnJlZShudGZzX2luZGV4X2N0eF9jYWNoZSwgaWN0eCk7Ci0JcmV0dXJuOwotfQot
Ci0vKioKLSAqIG50ZnNfaW5kZXhfbG9va3VwIC0gZmluZCBhIGtleSBpbiBhbiBpbmRleCBhbmQg
cmV0dXJuIGl0cyBpbmRleCBlbnRyeQotICogQGtleToJW0lOXSBrZXkgZm9yIHdoaWNoIHRvIHNl
YXJjaCBpbiB0aGUgaW5kZXgKLSAqIEBrZXlfbGVuOglbSU5dIGxlbmd0aCBvZiBAa2V5IGluIGJ5
dGVzCi0gKiBAaWN0eDoJW0lOL09VVF0gY29udGV4dCBkZXNjcmliaW5nIHRoZSBpbmRleCBhbmQg
dGhlIHJldHVybmVkIGVudHJ5Ci0gKgotICogQmVmb3JlIGNhbGxpbmcgbnRmc19pbmRleF9sb29r
dXAoKSwgQGljdHggbXVzdCBoYXZlIGJlZW4gb2J0YWluZWQgZnJvbSBhCi0gKiBjYWxsIHRvIG50
ZnNfaW5kZXhfY3R4X2dldCgpLgotICoKLSAqIExvb2sgZm9yIHRoZSBAa2V5IGluIHRoZSBpbmRl
eCBzcGVjaWZpZWQgYnkgdGhlIGluZGV4IGxvb2t1cCBjb250ZXh0IEBpY3R4LgotICogbnRmc19p
bmRleF9sb29rdXAoKSB3YWxrcyB0aGUgY29udGVudHMgb2YgdGhlIGluZGV4IGxvb2tpbmcgZm9y
IHRoZSBAa2V5LgotICoKLSAqIElmIHRoZSBAa2V5IGlzIGZvdW5kIGluIHRoZSBpbmRleCwgMCBp
cyByZXR1cm5lZCBhbmQgQGljdHggaXMgc2V0dXAgdG8KLSAqIGRlc2NyaWJlIHRoZSBpbmRleCBl
bnRyeSBjb250YWluaW5nIHRoZSBtYXRjaGluZyBAa2V5LiAgQGljdHgtPmVudHJ5IGlzIHRoZQot
ICogaW5kZXggZW50cnkgYW5kIEBpY3R4LT5kYXRhIGFuZCBAaWN0eC0+ZGF0YV9sZW4gYXJlIHRo
ZSBpbmRleCBlbnRyeSBkYXRhIGFuZAotICogaXRzIGxlbmd0aCBpbiBieXRlcywgcmVzcGVjdGl2
ZWx5LgotICoKLSAqIElmIHRoZSBAa2V5IGlzIG5vdCBmb3VuZCBpbiB0aGUgaW5kZXgsIC1FTk9F
TlQgaXMgcmV0dXJuZWQgYW5kIEBpY3R4IGlzCi0gKiBzZXR1cCB0byBkZXNjcmliZSB0aGUgaW5k
ZXggZW50cnkgd2hvc2Uga2V5IGNvbGxhdGVzIGltbWVkaWF0ZWx5IGFmdGVyIHRoZQotICogc2Vh
cmNoIEBrZXksIGkuZS4gdGhpcyBpcyB0aGUgcG9zaXRpb24gaW4gdGhlIGluZGV4IGF0IHdoaWNo
IGFuIGluZGV4IGVudHJ5Ci0gKiB3aXRoIGEga2V5IG9mIEBrZXkgd291bGQgbmVlZCB0byBiZSBp
bnNlcnRlZC4KLSAqCi0gKiBJZiBhbiBlcnJvciBvY2N1cnMgcmV0dXJuIHRoZSBuZWdhdGl2ZSBl
cnJvciBjb2RlIGFuZCBAaWN0eCBpcyBsZWZ0Ci0gKiB1bnRvdWNoZWQuCi0gKgotICogV2hlbiBm
aW5pc2hlZCB3aXRoIHRoZSBlbnRyeSBhbmQgaXRzIGRhdGEsIGNhbGwgbnRmc19pbmRleF9jdHhf
cHV0KCkgdG8gZnJlZQotICogdGhlIGNvbnRleHQgYW5kIG90aGVyIGFzc29jaWF0ZWQgcmVzb3Vy
Y2VzLgotICoKLSAqIElmIHRoZSBpbmRleCBlbnRyeSB3YXMgbW9kaWZpZWQsIGNhbGwgZmx1c2hf
ZGNhY2hlX2luZGV4X2VudHJ5X3BhZ2UoKQotICogaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIG1vZGlm
aWNhdGlvbiBhbmQgZWl0aGVyIG50ZnNfaW5kZXhfZW50cnlfbWFya19kaXJ0eSgpCi0gKiBvciBu
dGZzX2luZGV4X2VudHJ5X3dyaXRlKCkgYmVmb3JlIHRoZSBjYWxsIHRvIG50ZnNfaW5kZXhfY3R4
X3B1dCgpIHRvCi0gKiBlbnN1cmUgdGhhdCB0aGUgY2hhbmdlcyBhcmUgd3JpdHRlbiB0byBkaXNr
LgotICoKLSAqIExvY2tpbmc6ICAtIENhbGxlciBtdXN0IGhvbGQgaV9tdXRleCBvbiB0aGUgaW5k
ZXggaW5vZGUuCi0gKgkgICAgIC0gRWFjaCBwYWdlIGNhY2hlIHBhZ2UgaW4gdGhlIGluZGV4IGFs
bG9jYXRpb24gbWFwcGluZyBtdXN0IGJlCi0gKgkgICAgICAgbG9ja2VkIHdoaWxzdCBiZWluZyBh
Y2Nlc3NlZCBvdGhlcndpc2Ugd2UgbWF5IGZpbmQgYSBjb3JydXB0Ci0gKgkgICAgICAgcGFnZSBk
dWUgdG8gaXQgYmVpbmcgdW5kZXIgLT53cml0ZXBhZ2UgYXQgdGhlIG1vbWVudCB3aGljaAotICoJ
ICAgICAgIGFwcGxpZXMgdGhlIG1zdCBwcm90ZWN0aW9uIGZpeHVwcyBiZWZvcmUgd3JpdGluZyBv
dXQgYW5kIHRoZW4KLSAqCSAgICAgICByZW1vdmVzIHRoZW0gYWdhaW4gYWZ0ZXIgdGhlIHdyaXRl
IGlzIGNvbXBsZXRlIGFmdGVyIHdoaWNoIGl0IAotICoJICAgICAgIHVubG9ja3MgdGhlIHBhZ2Uu
Ci0gKi8KLWludCBudGZzX2luZGV4X2xvb2t1cChjb25zdCB2b2lkICprZXksIGNvbnN0IGludCBr
ZXlfbGVuLAotCQludGZzX2luZGV4X2NvbnRleHQgKmljdHgpCi17Ci0JVkNOIHZjbiwgb2xkX3Zj
bjsKLQludGZzX2lub2RlICppZHhfbmkgPSBpY3R4LT5pZHhfbmk7Ci0JbnRmc192b2x1bWUgKnZv
bCA9IGlkeF9uaS0+dm9sOwotCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSB2b2wtPnNiOwotCW50
ZnNfaW5vZGUgKmJhc2VfbmkgPSBpZHhfbmktPmV4dC5iYXNlX250ZnNfaW5vOwotCU1GVF9SRUNP
UkQgKm07Ci0JSU5ERVhfUk9PVCAqaXI7Ci0JSU5ERVhfRU5UUlkgKmllOwotCUlOREVYX0FMTE9D
QVRJT04gKmlhOwotCXU4ICppbmRleF9lbmQsICprYWRkcjsKLQludGZzX2F0dHJfc2VhcmNoX2N0
eCAqYWN0eDsKLQlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqaWFfbWFwcGluZzsKLQlzdHJ1Y3QgcGFn
ZSAqcGFnZTsKLQlpbnQgcmMsIGVyciA9IDA7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsK
LQlCVUdfT04oIU5Jbm9BdHRyKGlkeF9uaSkpOwotCUJVR19PTihpZHhfbmktPnR5cGUgIT0gQVRf
SU5ERVhfQUxMT0NBVElPTik7Ci0JQlVHX09OKGlkeF9uaS0+bnJfZXh0ZW50cyAhPSAtMSk7Ci0J
QlVHX09OKCFiYXNlX25pKTsKLQlCVUdfT04oIWtleSk7Ci0JQlVHX09OKGtleV9sZW4gPD0gMCk7
Ci0JaWYgKCFudGZzX2lzX2NvbGxhdGlvbl9ydWxlX3N1cHBvcnRlZCgKLQkJCWlkeF9uaS0+aXR5
cGUuaW5kZXguY29sbGF0aW9uX3J1bGUpKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJJbmRleCB1c2Vz
IHVuc3VwcG9ydGVkIGNvbGxhdGlvbiBydWxlIDB4JXguICAiCi0JCQkJIkFib3J0aW5nIGxvb2t1
cC4iLCBsZTMyX3RvX2NwdSgKLQkJCQlpZHhfbmktPml0eXBlLmluZGV4LmNvbGxhdGlvbl9ydWxl
KSk7Ci0JCXJldHVybiAtRU9QTk9UU1VQUDsKLQl9Ci0JLyogR2V0IGhvbGQgb2YgdGhlIG1mdCBy
ZWNvcmQgZm9yIHRoZSBpbmRleCBpbm9kZS4gKi8KLQltID0gbWFwX21mdF9yZWNvcmQoYmFzZV9u
aSk7Ci0JaWYgKElTX0VSUihtKSkgewotCQludGZzX2Vycm9yKHNiLCAibWFwX21mdF9yZWNvcmQo
KSBmYWlsZWQgd2l0aCBlcnJvciBjb2RlICVsZC4iLAotCQkJCS1QVFJfRVJSKG0pKTsKLQkJcmV0
dXJuIFBUUl9FUlIobSk7Ci0JfQotCWFjdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgoYmFz
ZV9uaSwgbSk7Ci0JaWYgKHVubGlrZWx5KCFhY3R4KSkgewotCQllcnIgPSAtRU5PTUVNOwotCQln
b3RvIGVycl9vdXQ7Ci0JfQotCS8qIEZpbmQgdGhlIGluZGV4IHJvb3QgYXR0cmlidXRlIGluIHRo
ZSBtZnQgcmVjb3JkLiAqLwotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfSU5ERVhfUk9PVCwg
aWR4X25pLT5uYW1lLCBpZHhfbmktPm5hbWVfbGVuLAotCQkJQ0FTRV9TRU5TSVRJVkUsIDAsIE5V
TEwsIDAsIGFjdHgpOwotCWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VO
VCkgewotCQkJbnRmc19lcnJvcihzYiwgIkluZGV4IHJvb3QgYXR0cmlidXRlIG1pc3NpbmcgaW4g
aW5vZGUgIgotCQkJCQkiMHglbHguIiwgaWR4X25pLT5tZnRfbm8pOwotCQkJZXJyID0gLUVJTzsK
LQkJfQotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIEdldCB0byB0aGUgaW5kZXggcm9vdCB2YWx1
ZSAoaXQgaGFzIGJlZW4gdmVyaWZpZWQgaW4gcmVhZF9pbm9kZSkuICovCi0JaXIgPSAoSU5ERVhf
Uk9PVCopKCh1OCopYWN0eC0+YXR0ciArCi0JCQlsZTE2X3RvX2NwdShhY3R4LT5hdHRyLT5kYXRh
LnJlc2lkZW50LnZhbHVlX29mZnNldCkpOwotCWluZGV4X2VuZCA9ICh1OCopJmlyLT5pbmRleCAr
IGxlMzJfdG9fY3B1KGlyLT5pbmRleC5pbmRleF9sZW5ndGgpOwotCS8qIFRoZSBmaXJzdCBpbmRl
eCBlbnRyeS4gKi8KLQlpZSA9IChJTkRFWF9FTlRSWSopKCh1OCopJmlyLT5pbmRleCArCi0JCQls
ZTMyX3RvX2NwdShpci0+aW5kZXguZW50cmllc19vZmZzZXQpKTsKLQkvKgotCSAqIExvb3AgdW50
aWwgd2UgZXhjZWVkIHZhbGlkIG1lbW9yeSAoY29ycnVwdGlvbiBjYXNlKSBvciB1bnRpbCB3ZQot
CSAqIHJlYWNoIHRoZSBsYXN0IGVudHJ5LgotCSAqLwotCWZvciAoOzsgaWUgPSAoSU5ERVhfRU5U
UlkqKSgodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkpKSB7Ci0JCS8qIEJvdW5kcyBj
aGVja3MuICovCi0JCWlmICgodTgqKWllIDwgKHU4KilhY3R4LT5tcmVjIHx8ICh1OCopaWUgKwot
CQkJCXNpemVvZihJTkRFWF9FTlRSWV9IRUFERVIpID4gaW5kZXhfZW5kIHx8Ci0JCQkJKHU4Kilp
ZSArIGxlMTZfdG9fY3B1KGllLT5sZW5ndGgpID4gaW5kZXhfZW5kKQotCQkJZ290byBpZHhfZXJy
X291dDsKLQkJLyoKLQkJICogVGhlIGxhc3QgZW50cnkgY2Fubm90IGNvbnRhaW4gYSBrZXkuICBJ
dCBjYW4gaG93ZXZlciBjb250YWluCi0JCSAqIGEgcG9pbnRlciB0byBhIGNoaWxkIG5vZGUgaW4g
dGhlIEIrdHJlZSBzbyB3ZSBqdXN0IGJyZWFrIG91dC4KLQkJICovCi0JCWlmIChpZS0+ZmxhZ3Mg
JiBJTkRFWF9FTlRSWV9FTkQpCi0JCQlicmVhazsKLQkJLyogRnVydGhlciBib3VuZHMgY2hlY2tz
LiAqLwotCQlpZiAoKHUzMilzaXplb2YoSU5ERVhfRU5UUllfSEVBREVSKSArCi0JCQkJbGUxNl90
b19jcHUoaWUtPmtleV9sZW5ndGgpID4KLQkJCQlsZTE2X3RvX2NwdShpZS0+ZGF0YS52aS5kYXRh
X29mZnNldCkgfHwKLQkJCQkodTMyKWxlMTZfdG9fY3B1KGllLT5kYXRhLnZpLmRhdGFfb2Zmc2V0
KSArCi0JCQkJbGUxNl90b19jcHUoaWUtPmRhdGEudmkuZGF0YV9sZW5ndGgpID4KLQkJCQlsZTE2
X3RvX2NwdShpZS0+bGVuZ3RoKSkKLQkJCWdvdG8gaWR4X2Vycl9vdXQ7Ci0JCS8qIElmIHRoZSBr
ZXlzIG1hdGNoIHBlcmZlY3RseSwgd2Ugc2V0dXAgQGljdHggYW5kIHJldHVybiAwLiAqLwotCQlp
ZiAoKGtleV9sZW4gPT0gbGUxNl90b19jcHUoaWUtPmtleV9sZW5ndGgpKSAmJiAhbWVtY21wKGtl
eSwKLQkJCQkmaWUtPmtleSwga2V5X2xlbikpIHsKLWlyX2RvbmU6Ci0JCQlpY3R4LT5pc19pbl9y
b290ID0gdHJ1ZTsKLQkJCWljdHgtPmlyID0gaXI7Ci0JCQlpY3R4LT5hY3R4ID0gYWN0eDsKLQkJ
CWljdHgtPmJhc2VfbmkgPSBiYXNlX25pOwotCQkJaWN0eC0+aWEgPSBOVUxMOwotCQkJaWN0eC0+
cGFnZSA9IE5VTEw7Ci1kb25lOgotCQkJaWN0eC0+ZW50cnkgPSBpZTsKLQkJCWljdHgtPmRhdGEg
PSAodTgqKWllICsKLQkJCQkJbGUxNl90b19jcHUoaWUtPmRhdGEudmkuZGF0YV9vZmZzZXQpOwot
CQkJaWN0eC0+ZGF0YV9sZW4gPSBsZTE2X3RvX2NwdShpZS0+ZGF0YS52aS5kYXRhX2xlbmd0aCk7
Ci0JCQludGZzX2RlYnVnKCJEb25lLiIpOwotCQkJcmV0dXJuIGVycjsKLQkJfQotCQkvKgotCQkg
KiBOb3QgYSBwZXJmZWN0IG1hdGNoLCBuZWVkIHRvIGRvIGZ1bGwgYmxvd24gY29sbGF0aW9uIHNv
IHdlCi0JCSAqIGtub3cgd2hpY2ggd2F5IGluIHRoZSBCK3RyZWUgd2UgaGF2ZSB0byBnby4KLQkJ
ICovCi0JCXJjID0gbnRmc19jb2xsYXRlKHZvbCwgaWR4X25pLT5pdHlwZS5pbmRleC5jb2xsYXRp
b25fcnVsZSwga2V5LAotCQkJCWtleV9sZW4sICZpZS0+a2V5LCBsZTE2X3RvX2NwdShpZS0+a2V5
X2xlbmd0aCkpOwotCQkvKgotCQkgKiBJZiBAa2V5IGNvbGxhdGVzIGJlZm9yZSB0aGUga2V5IG9m
IHRoZSBjdXJyZW50IGVudHJ5LCB0aGVyZQotCQkgKiBpcyBkZWZpbml0ZWx5IG5vIHN1Y2gga2V5
IGluIHRoaXMgaW5kZXggYnV0IHdlIG1pZ2h0IG5lZWQgdG8KLQkJICogZGVzY2VuZCBpbnRvIHRo
ZSBCK3RyZWUgc28gd2UganVzdCBicmVhayBvdXQgb2YgdGhlIGxvb3AuCi0JCSAqLwotCQlpZiAo
cmMgPT0gLTEpCi0JCQlicmVhazsKLQkJLyoKLQkJICogQSBtYXRjaCBzaG91bGQgbmV2ZXIgaGFw
cGVuIGFzIHRoZSBtZW1jbXAoKSBjYWxsIHNob3VsZCBoYXZlCi0JCSAqIGNvdWdodCBpdCwgYnV0
IHdlIHN0aWxsIHRyZWF0IGl0IGNvcnJlY3RseS4KLQkJICovCi0JCWlmICghcmMpCi0JCQlnb3Rv
IGlyX2RvbmU7Ci0JCS8qIFRoZSBrZXlzIGFyZSBub3QgZXF1YWwsIGNvbnRpbnVlIHRoZSBzZWFy
Y2guICovCi0JfQotCS8qCi0JICogV2UgaGF2ZSBmaW5pc2hlZCB3aXRoIHRoaXMgaW5kZXggd2l0
aG91dCBzdWNjZXNzLiAgQ2hlY2sgZm9yIHRoZQotCSAqIHByZXNlbmNlIG9mIGEgY2hpbGQgbm9k
ZSBhbmQgaWYgbm90IHByZXNlbnQgc2V0dXAgQGljdHggYW5kIHJldHVybgotCSAqIC1FTk9FTlQu
Ci0JICovCi0JaWYgKCEoaWUtPmZsYWdzICYgSU5ERVhfRU5UUllfTk9ERSkpIHsKLQkJbnRmc19k
ZWJ1ZygiRW50cnkgbm90IGZvdW5kLiIpOwotCQllcnIgPSAtRU5PRU5UOwotCQlnb3RvIGlyX2Rv
bmU7Ci0JfSAvKiBDaGlsZCBub2RlIHByZXNlbnQsIGRlc2NlbmQgaW50byBpdC4gKi8KLQkvKiBD
b25zaXN0ZW5jeSBjaGVjazogVmVyaWZ5IHRoYXQgYW4gaW5kZXggYWxsb2NhdGlvbiBleGlzdHMu
ICovCi0JaWYgKCFOSW5vSW5kZXhBbGxvY1ByZXNlbnQoaWR4X25pKSkgewotCQludGZzX2Vycm9y
KHNiLCAiTm8gaW5kZXggYWxsb2NhdGlvbiBhdHRyaWJ1dGUgYnV0IGluZGV4IGVudHJ5ICIKLQkJ
CQkicmVxdWlyZXMgb25lLiAgSW5vZGUgMHglbHggaXMgY29ycnVwdCBvciAiCi0JCQkJImRyaXZl
ciBidWcuIiwgaWR4X25pLT5tZnRfbm8pOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCS8qIEdldCB0
aGUgc3RhcnRpbmcgdmNuIG9mIHRoZSBpbmRleF9ibG9jayBob2xkaW5nIHRoZSBjaGlsZCBub2Rl
LiAqLwotCXZjbiA9IHNsZTY0X3RvX2NwdXAoKHNsZTY0KikoKHU4KilpZSArIGxlMTZfdG9fY3B1
KGllLT5sZW5ndGgpIC0gOCkpOwotCWlhX21hcHBpbmcgPSBWRlNfSShpZHhfbmkpLT5pX21hcHBp
bmc7Ci0JLyoKLQkgKiBXZSBhcmUgZG9uZSB3aXRoIHRoZSBpbmRleCByb290IGFuZCB0aGUgbWZ0
IHJlY29yZC4gIFJlbGVhc2UgdGhlbSwKLQkgKiBvdGhlcndpc2Ugd2UgZGVhZGxvY2sgd2l0aCBu
dGZzX21hcF9wYWdlKCkuCi0JICovCi0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGFjdHgpOwot
CXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0JbSA9IE5VTEw7Ci0JYWN0eCA9IE5VTEw7Ci1k
ZXNjZW5kX2ludG9fY2hpbGRfbm9kZToKLQkvKgotCSAqIENvbnZlcnQgdmNuIHRvIGluZGV4IGlu
dG8gdGhlIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlIGluIHVuaXRzCi0JICogb2YgUEFHRV9T
SVpFIGFuZCBtYXAgdGhlIHBhZ2UgY2FjaGUgcGFnZSwgcmVhZGluZyBpdCBmcm9tCi0JICogZGlz
ayBpZiBuZWNlc3NhcnkuCi0JICovCi0JcGFnZSA9IG50ZnNfbWFwX3BhZ2UoaWFfbWFwcGluZywg
dmNuIDw8Ci0JCQlpZHhfbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPj4gUEFHRV9TSElG
VCk7Ci0JaWYgKElTX0VSUihwYWdlKSkgewotCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIG1h
cCBpbmRleCBwYWdlLCBlcnJvciAlbGQuIiwKLQkJCQktUFRSX0VSUihwYWdlKSk7Ci0JCWVyciA9
IFBUUl9FUlIocGFnZSk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JbG9ja19wYWdlKHBhZ2UpOwot
CWthZGRyID0gKHU4KilwYWdlX2FkZHJlc3MocGFnZSk7Ci1mYXN0X2Rlc2NlbmRfaW50b19jaGls
ZF9ub2RlOgotCS8qIEdldCB0byB0aGUgaW5kZXggYWxsb2NhdGlvbiBibG9jay4gKi8KLQlpYSA9
IChJTkRFWF9BTExPQ0FUSU9OKikoa2FkZHIgKyAoKHZjbiA8PAotCQkJaWR4X25pLT5pdHlwZS5p
bmRleC52Y25fc2l6ZV9iaXRzKSAmIH5QQUdFX01BU0spKTsKLQkvKiBCb3VuZHMgY2hlY2tzLiAq
LwotCWlmICgodTgqKWlhIDwga2FkZHIgfHwgKHU4KilpYSA+IGthZGRyICsgUEFHRV9TSVpFKSB7
Ci0JCW50ZnNfZXJyb3Ioc2IsICJPdXQgb2YgYm91bmRzIGNoZWNrIGZhaWxlZC4gIENvcnJ1cHQg
aW5vZGUgIgotCQkJCSIweCVseCBvciBkcml2ZXIgYnVnLiIsIGlkeF9uaS0+bWZ0X25vKTsKLQkJ
Z290byB1bm1fZXJyX291dDsKLQl9Ci0JLyogQ2F0Y2ggbXVsdGkgc2VjdG9yIHRyYW5zZmVyIGZp
eHVwIGVycm9ycy4gKi8KLQlpZiAodW5saWtlbHkoIW50ZnNfaXNfaW5keF9yZWNvcmQoaWEtPm1h
Z2ljKSkpIHsKLQkJbnRmc19lcnJvcihzYiwgIkluZGV4IHJlY29yZCB3aXRoIHZjbiAweCVsbHgg
aXMgY29ycnVwdC4gICIKLQkJCQkiQ29ycnVwdCBpbm9kZSAweCVseC4gIFJ1biBjaGtkc2suIiwK
LQkJCQkobG9uZyBsb25nKXZjbiwgaWR4X25pLT5tZnRfbm8pOwotCQlnb3RvIHVubV9lcnJfb3V0
OwotCX0KLQlpZiAoc2xlNjRfdG9fY3B1KGlhLT5pbmRleF9ibG9ja192Y24pICE9IHZjbikgewot
CQludGZzX2Vycm9yKHNiLCAiQWN0dWFsIFZDTiAoMHglbGx4KSBvZiBpbmRleCBidWZmZXIgaXMg
IgotCQkJCSJkaWZmZXJlbnQgZnJvbSBleHBlY3RlZCBWQ04gKDB4JWxseCkuICBJbm9kZSAiCi0J
CQkJIjB4JWx4IGlzIGNvcnJ1cHQgb3IgZHJpdmVyIGJ1Zy4iLAotCQkJCSh1bnNpZ25lZCBsb25n
IGxvbmcpCi0JCQkJc2xlNjRfdG9fY3B1KGlhLT5pbmRleF9ibG9ja192Y24pLAotCQkJCSh1bnNp
Z25lZCBsb25nIGxvbmcpdmNuLCBpZHhfbmktPm1mdF9ubyk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7
Ci0JfQotCWlmIChsZTMyX3RvX2NwdShpYS0+aW5kZXguYWxsb2NhdGVkX3NpemUpICsgMHgxOCAh
PQotCQkJaWR4X25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplKSB7Ci0JCW50ZnNfZXJyb3Ioc2Is
ICJJbmRleCBidWZmZXIgKFZDTiAweCVsbHgpIG9mIGlub2RlIDB4JWx4IGhhcyAiCi0JCQkJImEg
c2l6ZSAoJXUpIGRpZmZlcmluZyBmcm9tIHRoZSBpbmRleCAiCi0JCQkJInNwZWNpZmllZCBzaXpl
ICgldSkuICBJbm9kZSBpcyBjb3JydXB0IG9yICIKLQkJCQkiZHJpdmVyIGJ1Zy4iLCAodW5zaWdu
ZWQgbG9uZyBsb25nKXZjbiwKLQkJCQlpZHhfbmktPm1mdF9ubywKLQkJCQlsZTMyX3RvX2NwdShp
YS0+aW5kZXguYWxsb2NhdGVkX3NpemUpICsgMHgxOCwKLQkJCQlpZHhfbmktPml0eXBlLmluZGV4
LmJsb2NrX3NpemUpOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQlpbmRleF9lbmQgPSAodTgq
KWlhICsgaWR4X25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplOwotCWlmIChpbmRleF9lbmQgPiBr
YWRkciArIFBBR0VfU0laRSkgewotCQludGZzX2Vycm9yKHNiLCAiSW5kZXggYnVmZmVyIChWQ04g
MHglbGx4KSBvZiBpbm9kZSAweCVseCAiCi0JCQkJImNyb3NzZXMgcGFnZSBib3VuZGFyeS4gIElt
cG9zc2libGUhICBDYW5ub3QgIgotCQkJCSJhY2Nlc3MhICBUaGlzIGlzIHByb2JhYmx5IGEgYnVn
IGluIHRoZSAiCi0JCQkJImRyaXZlci4iLCAodW5zaWduZWQgbG9uZyBsb25nKXZjbiwKLQkJCQlp
ZHhfbmktPm1mdF9ubyk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCWluZGV4X2VuZCA9ICh1
OCopJmlhLT5pbmRleCArIGxlMzJfdG9fY3B1KGlhLT5pbmRleC5pbmRleF9sZW5ndGgpOwotCWlm
IChpbmRleF9lbmQgPiAodTgqKWlhICsgaWR4X25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplKSB7
Ci0JCW50ZnNfZXJyb3Ioc2IsICJTaXplIG9mIGluZGV4IGJ1ZmZlciAoVkNOIDB4JWxseCkgb2Yg
aW5vZGUgIgotCQkJCSIweCVseCBleGNlZWRzIG1heGltdW0gc2l6ZS4iLAotCQkJCSh1bnNpZ25l
ZCBsb25nIGxvbmcpdmNuLCBpZHhfbmktPm1mdF9ubyk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0J
fQotCS8qIFRoZSBmaXJzdCBpbmRleCBlbnRyeS4gKi8KLQlpZSA9IChJTkRFWF9FTlRSWSopKCh1
OCopJmlhLT5pbmRleCArCi0JCQlsZTMyX3RvX2NwdShpYS0+aW5kZXguZW50cmllc19vZmZzZXQp
KTsKLQkvKgotCSAqIEl0ZXJhdGUgc2ltaWxhciB0byBhYm92ZSBiaWcgbG9vcCBidXQgYXBwbGll
ZCB0byBpbmRleCBidWZmZXIsIHRodXMKLQkgKiBsb29wIHVudGlsIHdlIGV4Y2VlZCB2YWxpZCBt
ZW1vcnkgKGNvcnJ1cHRpb24gY2FzZSkgb3IgdW50aWwgd2UKLQkgKiByZWFjaCB0aGUgbGFzdCBl
bnRyeS4KLQkgKi8KLQlmb3IgKDs7IGllID0gKElOREVYX0VOVFJZKikoKHU4KilpZSArIGxlMTZf
dG9fY3B1KGllLT5sZW5ndGgpKSkgewotCQkvKiBCb3VuZHMgY2hlY2tzLiAqLwotCQlpZiAoKHU4
KilpZSA8ICh1OCopaWEgfHwgKHU4KilpZSArCi0JCQkJc2l6ZW9mKElOREVYX0VOVFJZX0hFQURF
UikgPiBpbmRleF9lbmQgfHwKLQkJCQkodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkg
PiBpbmRleF9lbmQpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICJJbmRleCBlbnRyeSBvdXQgb2YgYm91
bmRzIGluIGlub2RlICIKLQkJCQkJIjB4JWx4LiIsIGlkeF9uaS0+bWZ0X25vKTsKLQkJCWdvdG8g
dW5tX2Vycl9vdXQ7Ci0JCX0KLQkJLyoKLQkJICogVGhlIGxhc3QgZW50cnkgY2Fubm90IGNvbnRh
aW4gYSBrZXkuICBJdCBjYW4gaG93ZXZlciBjb250YWluCi0JCSAqIGEgcG9pbnRlciB0byBhIGNo
aWxkIG5vZGUgaW4gdGhlIEIrdHJlZSBzbyB3ZSBqdXN0IGJyZWFrIG91dC4KLQkJICovCi0JCWlm
IChpZS0+ZmxhZ3MgJiBJTkRFWF9FTlRSWV9FTkQpCi0JCQlicmVhazsKLQkJLyogRnVydGhlciBi
b3VuZHMgY2hlY2tzLiAqLwotCQlpZiAoKHUzMilzaXplb2YoSU5ERVhfRU5UUllfSEVBREVSKSAr
Ci0JCQkJbGUxNl90b19jcHUoaWUtPmtleV9sZW5ndGgpID4KLQkJCQlsZTE2X3RvX2NwdShpZS0+
ZGF0YS52aS5kYXRhX29mZnNldCkgfHwKLQkJCQkodTMyKWxlMTZfdG9fY3B1KGllLT5kYXRhLnZp
LmRhdGFfb2Zmc2V0KSArCi0JCQkJbGUxNl90b19jcHUoaWUtPmRhdGEudmkuZGF0YV9sZW5ndGgp
ID4KLQkJCQlsZTE2X3RvX2NwdShpZS0+bGVuZ3RoKSkgewotCQkJbnRmc19lcnJvcihzYiwgIklu
ZGV4IGVudHJ5IG91dCBvZiBib3VuZHMgaW4gaW5vZGUgIgotCQkJCQkiMHglbHguIiwgaWR4X25p
LT5tZnRfbm8pOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQkvKiBJZiB0aGUga2V5cyBt
YXRjaCBwZXJmZWN0bHksIHdlIHNldHVwIEBpY3R4IGFuZCByZXR1cm4gMC4gKi8KLQkJaWYgKChr
ZXlfbGVuID09IGxlMTZfdG9fY3B1KGllLT5rZXlfbGVuZ3RoKSkgJiYgIW1lbWNtcChrZXksCi0J
CQkJJmllLT5rZXksIGtleV9sZW4pKSB7Ci1pYV9kb25lOgotCQkJaWN0eC0+aXNfaW5fcm9vdCA9
IGZhbHNlOwotCQkJaWN0eC0+YWN0eCA9IE5VTEw7Ci0JCQlpY3R4LT5iYXNlX25pID0gTlVMTDsK
LQkJCWljdHgtPmlhID0gaWE7Ci0JCQlpY3R4LT5wYWdlID0gcGFnZTsKLQkJCWdvdG8gZG9uZTsK
LQkJfQotCQkvKgotCQkgKiBOb3QgYSBwZXJmZWN0IG1hdGNoLCBuZWVkIHRvIGRvIGZ1bGwgYmxv
d24gY29sbGF0aW9uIHNvIHdlCi0JCSAqIGtub3cgd2hpY2ggd2F5IGluIHRoZSBCK3RyZWUgd2Ug
aGF2ZSB0byBnby4KLQkJICovCi0JCXJjID0gbnRmc19jb2xsYXRlKHZvbCwgaWR4X25pLT5pdHlw
ZS5pbmRleC5jb2xsYXRpb25fcnVsZSwga2V5LAotCQkJCWtleV9sZW4sICZpZS0+a2V5LCBsZTE2
X3RvX2NwdShpZS0+a2V5X2xlbmd0aCkpOwotCQkvKgotCQkgKiBJZiBAa2V5IGNvbGxhdGVzIGJl
Zm9yZSB0aGUga2V5IG9mIHRoZSBjdXJyZW50IGVudHJ5LCB0aGVyZQotCQkgKiBpcyBkZWZpbml0
ZWx5IG5vIHN1Y2gga2V5IGluIHRoaXMgaW5kZXggYnV0IHdlIG1pZ2h0IG5lZWQgdG8KLQkJICog
ZGVzY2VuZCBpbnRvIHRoZSBCK3RyZWUgc28gd2UganVzdCBicmVhayBvdXQgb2YgdGhlIGxvb3Au
Ci0JCSAqLwotCQlpZiAocmMgPT0gLTEpCi0JCQlicmVhazsKLQkJLyoKLQkJICogQSBtYXRjaCBz
aG91bGQgbmV2ZXIgaGFwcGVuIGFzIHRoZSBtZW1jbXAoKSBjYWxsIHNob3VsZCBoYXZlCi0JCSAq
IGNvdWdodCBpdCwgYnV0IHdlIHN0aWxsIHRyZWF0IGl0IGNvcnJlY3RseS4KLQkJICovCi0JCWlm
ICghcmMpCi0JCQlnb3RvIGlhX2RvbmU7Ci0JCS8qIFRoZSBrZXlzIGFyZSBub3QgZXF1YWwsIGNv
bnRpbnVlIHRoZSBzZWFyY2guICovCi0JfQotCS8qCi0JICogV2UgaGF2ZSBmaW5pc2hlZCB3aXRo
IHRoaXMgaW5kZXggYnVmZmVyIHdpdGhvdXQgc3VjY2Vzcy4gIENoZWNrIGZvcgotCSAqIHRoZSBw
cmVzZW5jZSBvZiBhIGNoaWxkIG5vZGUgYW5kIGlmIG5vdCBwcmVzZW50IHJldHVybiAtRU5PRU5U
LgotCSAqLwotCWlmICghKGllLT5mbGFncyAmIElOREVYX0VOVFJZX05PREUpKSB7Ci0JCW50ZnNf
ZGVidWcoIkVudHJ5IG5vdCBmb3VuZC4iKTsKLQkJZXJyID0gLUVOT0VOVDsKLQkJZ290byBpYV9k
b25lOwotCX0KLQlpZiAoKGlhLT5pbmRleC5mbGFncyAmIE5PREVfTUFTSykgPT0gTEVBRl9OT0RF
KSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJJbmRleCBlbnRyeSB3aXRoIGNoaWxkIG5vZGUgZm91bmQg
aW4gYSBsZWFmICIKLQkJCQkibm9kZSBpbiBpbm9kZSAweCVseC4iLCBpZHhfbmktPm1mdF9ubyk7
Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qIENoaWxkIG5vZGUgcHJlc2VudCwgZGVzY2Vu
ZCBpbnRvIGl0LiAqLwotCW9sZF92Y24gPSB2Y247Ci0JdmNuID0gc2xlNjRfdG9fY3B1cCgoc2xl
NjQqKSgodTgqKWllICsgbGUxNl90b19jcHUoaWUtPmxlbmd0aCkgLSA4KSk7Ci0JaWYgKHZjbiA+
PSAwKSB7Ci0JCS8qCi0JCSAqIElmIHZjbiBpcyBpbiB0aGUgc2FtZSBwYWdlIGNhY2hlIHBhZ2Ug
YXMgb2xkX3ZjbiB3ZSByZWN5Y2xlCi0JCSAqIHRoZSBtYXBwZWQgcGFnZS4KLQkJICovCi0JCWlm
IChvbGRfdmNuIDw8IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMgPj4KLQkJCQlQQUdFX1NISUZUID09
IHZjbiA8PAotCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMgPj4KLQkJCQlQQUdFX1NISUZUKQot
CQkJZ290byBmYXN0X2Rlc2NlbmRfaW50b19jaGlsZF9ub2RlOwotCQl1bmxvY2tfcGFnZShwYWdl
KTsKLQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQlnb3RvIGRlc2NlbmRfaW50b19jaGlsZF9u
b2RlOwotCX0KLQludGZzX2Vycm9yKHNiLCAiTmVnYXRpdmUgY2hpbGQgbm9kZSB2Y24gaW4gaW5v
ZGUgMHglbHguIiwKLQkJCWlkeF9uaS0+bWZ0X25vKTsKLXVubV9lcnJfb3V0OgotCXVubG9ja19w
YWdlKHBhZ2UpOwotCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLWVycl9vdXQ6Ci0JaWYgKCFlcnIp
Ci0JCWVyciA9IC1FSU87Ci0JaWYgKGFjdHgpCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChh
Y3R4KTsKLQlpZiAobSkKLQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQlyZXR1cm4gZXJy
OwotaWR4X2Vycl9vdXQ6Ci0JbnRmc19lcnJvcihzYiwgIkNvcnJ1cHQgaW5kZXguICBBYm9ydGlu
ZyBsb29rdXAuIik7Ci0JZ290byBlcnJfb3V0OwotfQpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9pbmRl
eC5oIGIvZnMvbnRmcy9pbmRleC5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCBiYjNj
M2FlNTUxMzguLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2luZGV4LmgKKysrIC9kZXYvbnVs
bApAQCAtMSwxMzQgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAt
b3ItbGF0ZXIgKi8KLS8qCi0gKiBpbmRleC5oIC0gRGVmaW5lcyBmb3IgTlRGUyBrZXJuZWwgaW5k
ZXggaGFuZGxpbmcuICBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTCi0gKgkgICAgIHByb2plY3QuCi0g
KgotICogQ29weXJpZ2h0IChjKSAyMDA0IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5k
ZWYgX0xJTlVYX05URlNfSU5ERVhfSAotI2RlZmluZSBfTElOVVhfTlRGU19JTkRFWF9ICi0KLSNp
bmNsdWRlIDxsaW51eC9mcy5oPgotCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJsYXlv
dXQuaCIKLSNpbmNsdWRlICJpbm9kZS5oIgotI2luY2x1ZGUgImF0dHJpYi5oIgotI2luY2x1ZGUg
Im1mdC5oIgotI2luY2x1ZGUgImFvcHMuaCIKLQotLyoqCi0gKiBAaWR4X25pOglpbmRleCBpbm9k
ZSBjb250YWluaW5nIHRoZSBAZW50cnkgZGVzY3JpYmVkIGJ5IHRoaXMgY29udGV4dAotICogQGVu
dHJ5OglpbmRleCBlbnRyeSAocG9pbnRzIGludG8gQGlyIG9yIEBpYSkKLSAqIEBkYXRhOglpbmRl
eCBlbnRyeSBkYXRhIChwb2ludHMgaW50byBAZW50cnkpCi0gKiBAZGF0YV9sZW46CWxlbmd0aCBp
biBieXRlcyBvZiBAZGF0YQotICogQGlzX2luX3Jvb3Q6CSd0cnVlJyBpZiBAZW50cnkgaXMgaW4g
QGlyIGFuZCAnZmFsc2UnIGlmIGl0IGlzIGluIEBpYQotICogQGlyOgkJaW5kZXggcm9vdCBpZiBA
aXNfaW5fcm9vdCBhbmQgTlVMTCBvdGhlcndpc2UKLSAqIEBhY3R4OglhdHRyaWJ1dGUgc2VhcmNo
IGNvbnRleHQgaWYgQGlzX2luX3Jvb3QgYW5kIE5VTEwgb3RoZXJ3aXNlCi0gKiBAYmFzZV9uaToJ
YmFzZSBpbm9kZSBpZiBAaXNfaW5fcm9vdCBhbmQgTlVMTCBvdGhlcndpc2UKLSAqIEBpYToJCWlu
ZGV4IGJsb2NrIGlmIEBpc19pbl9yb290IGlzICdmYWxzZScgYW5kIE5VTEwgb3RoZXJ3aXNlCi0g
KiBAcGFnZToJcGFnZSBpZiBAaXNfaW5fcm9vdCBpcyAnZmFsc2UnIGFuZCBOVUxMIG90aGVyd2lz
ZQotICoKLSAqIEBpZHhfbmkgaXMgdGhlIGluZGV4IGlub2RlIHRoaXMgY29udGV4dCBiZWxvbmdz
IHRvLgotICoKLSAqIEBlbnRyeSBpcyB0aGUgaW5kZXggZW50cnkgZGVzY3JpYmVkIGJ5IHRoaXMg
Y29udGV4dC4gIEBkYXRhIGFuZCBAZGF0YV9sZW4KLSAqIGFyZSB0aGUgaW5kZXggZW50cnkgZGF0
YSBhbmQgaXRzIGxlbmd0aCBpbiBieXRlcywgcmVzcGVjdGl2ZWx5LiAgQGRhdGEKLSAqIHNpbXBs
eSBwb2ludHMgaW50byBAZW50cnkuICBUaGlzIGlzIHByb2JhYmx5IHdoYXQgdGhlIHVzZXIgaXMg
aW50ZXJlc3RlZCBpbi4KLSAqCi0gKiBJZiBAaXNfaW5fcm9vdCBpcyAndHJ1ZScsIEBlbnRyeSBp
cyBpbiB0aGUgaW5kZXggcm9vdCBhdHRyaWJ1dGUgQGlyIGRlc2NyaWJlZAotICogYnkgdGhlIGF0
dHJpYnV0ZSBzZWFyY2ggY29udGV4dCBAYWN0eCBhbmQgdGhlIGJhc2UgaW5vZGUgQGJhc2Vfbmku
ICBAaWEgYW5kCi0gKiBAcGFnZSBhcmUgTlVMTCBpbiB0aGlzIGNhc2UuCi0gKgotICogSWYgQGlz
X2luX3Jvb3QgaXMgJ2ZhbHNlJywgQGVudHJ5IGlzIGluIHRoZSBpbmRleCBhbGxvY2F0aW9uIGF0
dHJpYnV0ZSBhbmQgQGlhCi0gKiBhbmQgQHBhZ2UgcG9pbnQgdG8gdGhlIGluZGV4IGFsbG9jYXRp
b24gYmxvY2sgYW5kIHRoZSBtYXBwZWQsIGxvY2tlZCBwYWdlIGl0Ci0gKiBpcyBpbiwgcmVzcGVj
dGl2ZWx5LiAgQGlyLCBAYWN0eCBhbmQgQGJhc2VfbmkgYXJlIE5VTEwgaW4gdGhpcyBjYXNlLgot
ICoKLSAqIFRvIG9idGFpbiBhIGNvbnRleHQgY2FsbCBudGZzX2luZGV4X2N0eF9nZXQoKS4KLSAq
Ci0gKiBXZSB1c2UgdGhpcyBjb250ZXh0IHRvIGFsbG93IG50ZnNfaW5kZXhfbG9va3VwKCkgdG8g
cmV0dXJuIHRoZSBmb3VuZCBpbmRleAotICogQGVudHJ5IGFuZCBpdHMgQGRhdGEgd2l0aG91dCBo
YXZpbmcgdG8gYWxsb2NhdGUgYSBidWZmZXIgYW5kIGNvcHkgdGhlIEBlbnRyeQotICogYW5kL29y
IGl0cyBAZGF0YSBpbnRvIGl0LgotICoKLSAqIFdoZW4gZmluaXNoZWQgd2l0aCB0aGUgQGVudHJ5
IGFuZCBpdHMgQGRhdGEsIGNhbGwgbnRmc19pbmRleF9jdHhfcHV0KCkgdG8KLSAqIGZyZWUgdGhl
IGNvbnRleHQgYW5kIG90aGVyIGFzc29jaWF0ZWQgcmVzb3VyY2VzLgotICoKLSAqIElmIHRoZSBp
bmRleCBlbnRyeSB3YXMgbW9kaWZpZWQsIGNhbGwgZmx1c2hfZGNhY2hlX2luZGV4X2VudHJ5X3Bh
Z2UoKQotICogaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIG1vZGlmaWNhdGlvbiBhbmQgZWl0aGVyIG50
ZnNfaW5kZXhfZW50cnlfbWFya19kaXJ0eSgpCi0gKiBvciBudGZzX2luZGV4X2VudHJ5X3dyaXRl
KCkgYmVmb3JlIHRoZSBjYWxsIHRvIG50ZnNfaW5kZXhfY3R4X3B1dCgpIHRvCi0gKiBlbnN1cmUg
dGhhdCB0aGUgY2hhbmdlcyBhcmUgd3JpdHRlbiB0byBkaXNrLgotICovCi10eXBlZGVmIHN0cnVj
dCB7Ci0JbnRmc19pbm9kZSAqaWR4X25pOwotCUlOREVYX0VOVFJZICplbnRyeTsKLQl2b2lkICpk
YXRhOwotCXUxNiBkYXRhX2xlbjsKLQlib29sIGlzX2luX3Jvb3Q7Ci0JSU5ERVhfUk9PVCAqaXI7
Ci0JbnRmc19hdHRyX3NlYXJjaF9jdHggKmFjdHg7Ci0JbnRmc19pbm9kZSAqYmFzZV9uaTsKLQlJ
TkRFWF9BTExPQ0FUSU9OICppYTsKLQlzdHJ1Y3QgcGFnZSAqcGFnZTsKLX0gbnRmc19pbmRleF9j
b250ZXh0OwotCi1leHRlcm4gbnRmc19pbmRleF9jb250ZXh0ICpudGZzX2luZGV4X2N0eF9nZXQo
bnRmc19pbm9kZSAqaWR4X25pKTsKLWV4dGVybiB2b2lkIG50ZnNfaW5kZXhfY3R4X3B1dChudGZz
X2luZGV4X2NvbnRleHQgKmljdHgpOwotCi1leHRlcm4gaW50IG50ZnNfaW5kZXhfbG9va3VwKGNv
bnN0IHZvaWQgKmtleSwgY29uc3QgaW50IGtleV9sZW4sCi0JCW50ZnNfaW5kZXhfY29udGV4dCAq
aWN0eCk7Ci0KLSNpZmRlZiBOVEZTX1JXCi0KLS8qKgotICogbnRmc19pbmRleF9lbnRyeV9mbHVz
aF9kY2FjaGVfcGFnZSAtIGZsdXNoX2RjYWNoZV9wYWdlKCkgZm9yIGluZGV4IGVudHJpZXMKLSAq
IEBpY3R4OgludGZzIGluZGV4IGNvbnRleHQgZGVzY3JpYmluZyB0aGUgaW5kZXggZW50cnkKLSAq
Ci0gKiBDYWxsIGZsdXNoX2RjYWNoZV9wYWdlKCkgZm9yIHRoZSBwYWdlIGluIHdoaWNoIGFuIGlu
ZGV4IGVudHJ5IHJlc2lkZXMuCi0gKgotICogVGhpcyBtdXN0IGJlIGNhbGxlZCBldmVyeSB0aW1l
IGFuIGluZGV4IGVudHJ5IGlzIG1vZGlmaWVkLCBqdXN0IGFmdGVyIHRoZQotICogbW9kaWZpY2F0
aW9uLgotICoKLSAqIElmIHRoZSBpbmRleCBlbnRyeSBpcyBpbiB0aGUgaW5kZXggcm9vdCBhdHRy
aWJ1dGUsIHNpbXBseSBmbHVzaCB0aGUgcGFnZQotICogY29udGFpbmluZyB0aGUgbWZ0IHJlY29y
ZCBjb250YWluaW5nIHRoZSBpbmRleCByb290IGF0dHJpYnV0ZS4KLSAqCi0gKiBJZiB0aGUgaW5k
ZXggZW50cnkgaXMgaW4gYW4gaW5kZXggYmxvY2sgYmVsb25naW5nIHRvIHRoZSBpbmRleCBhbGxv
Y2F0aW9uCi0gKiBhdHRyaWJ1dGUsIHNpbXBseSBmbHVzaCB0aGUgcGFnZSBjYWNoZSBwYWdlIGNv
bnRhaW5pbmcgdGhlIGluZGV4IGJsb2NrLgotICovCi1zdGF0aWMgaW5saW5lIHZvaWQgbnRmc19p
bmRleF9lbnRyeV9mbHVzaF9kY2FjaGVfcGFnZShudGZzX2luZGV4X2NvbnRleHQgKmljdHgpCi17
Ci0JaWYgKGljdHgtPmlzX2luX3Jvb3QpCi0JCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3JkX3BhZ2Uo
aWN0eC0+YWN0eC0+bnRmc19pbm8pOwotCWVsc2UKLQkJZmx1c2hfZGNhY2hlX3BhZ2UoaWN0eC0+
cGFnZSk7Ci19Ci0KLS8qKgotICogbnRmc19pbmRleF9lbnRyeV9tYXJrX2RpcnR5IC0gbWFyayBh
biBpbmRleCBlbnRyeSBkaXJ0eQotICogQGljdHg6CW50ZnMgaW5kZXggY29udGV4dCBkZXNjcmli
aW5nIHRoZSBpbmRleCBlbnRyeQotICoKLSAqIE1hcmsgdGhlIGluZGV4IGVudHJ5IGRlc2NyaWJl
ZCBieSB0aGUgaW5kZXggZW50cnkgY29udGV4dCBAaWN0eCBkaXJ0eS4KLSAqCi0gKiBJZiB0aGUg
aW5kZXggZW50cnkgaXMgaW4gdGhlIGluZGV4IHJvb3QgYXR0cmlidXRlLCBzaW1wbHkgbWFyayB0
aGUgbWZ0Ci0gKiByZWNvcmQgY29udGFpbmluZyB0aGUgaW5kZXggcm9vdCBhdHRyaWJ1dGUgZGly
dHkuICBUaGlzIGVuc3VyZXMgdGhlIG1mdAotICogcmVjb3JkLCBhbmQgaGVuY2UgdGhlIGluZGV4
IHJvb3QgYXR0cmlidXRlLCB3aWxsIGJlIHdyaXR0ZW4gb3V0IHRvIGRpc2sKLSAqIGxhdGVyLgot
ICoKLSAqIElmIHRoZSBpbmRleCBlbnRyeSBpcyBpbiBhbiBpbmRleCBibG9jayBiZWxvbmdpbmcg
dG8gdGhlIGluZGV4IGFsbG9jYXRpb24KLSAqIGF0dHJpYnV0ZSwgbWFyayB0aGUgYnVmZmVycyBi
ZWxvbmdpbmcgdG8gdGhlIGluZGV4IHJlY29yZCBhcyB3ZWxsIGFzIHRoZQotICogcGFnZSBjYWNo
ZSBwYWdlIHRoZSBpbmRleCBibG9jayBpcyBpbiBkaXJ0eS4gIFRoaXMgYXV0b21hdGljYWxseSBt
YXJrcyB0aGUKLSAqIFZGUyBpbm9kZSBvZiB0aGUgbnRmcyBpbmRleCBpbm9kZSB0byB3aGljaCB0
aGUgaW5kZXggZW50cnkgYmVsb25ncyBkaXJ0eSwKLSAqIHRvbyAoSV9ESVJUWV9QQUdFUykgYW5k
IHRoaXMgaW4gdHVybiBlbnN1cmVzIHRoZSBwYWdlIGJ1ZmZlcnMsIGFuZCBoZW5jZSB0aGUKLSAq
IGRpcnR5IGluZGV4IGJsb2NrLCB3aWxsIGJlIHdyaXR0ZW4gb3V0IHRvIGRpc2sgbGF0ZXIuCi0g
Ki8KLXN0YXRpYyBpbmxpbmUgdm9pZCBudGZzX2luZGV4X2VudHJ5X21hcmtfZGlydHkobnRmc19p
bmRleF9jb250ZXh0ICppY3R4KQotewotCWlmIChpY3R4LT5pc19pbl9yb290KQotCQltYXJrX21m
dF9yZWNvcmRfZGlydHkoaWN0eC0+YWN0eC0+bnRmc19pbm8pOwotCWVsc2UKLQkJbWFya19udGZz
X3JlY29yZF9kaXJ0eShpY3R4LT5wYWdlLAotCQkJCSh1OCopaWN0eC0+aWEgLSAodTgqKXBhZ2Vf
YWRkcmVzcyhpY3R4LT5wYWdlKSk7Ci19Ci0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0KLSNlbmRp
ZiAvKiBfTElOVVhfTlRGU19JTkRFWF9IICovCmRpZmYgLS1naXQgYS9mcy9udGZzL2lub2RlLmMg
Yi9mcy9udGZzL2lub2RlLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGFiYTFlMjJk
YjRlOS4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvaW5vZGUuYworKysgL2Rldi9udWxsCkBA
IC0xLDMxMDIgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3It
bGF0ZXIKLS8qCi0gKiBpbm9kZS5jIC0gTlRGUyBrZXJuZWwgaW5vZGUgaGFuZGxpbmcuCi0gKgot
ICogQ29weXJpZ2h0IChjKSAyMDAxLTIwMTQgQW50b24gQWx0YXBhcm1ha292IGFuZCBUdXhlcmEg
SW5jLgotICovCi0KLSNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgotI2luY2x1ZGUgPGxp
bnV4L2ZzLmg+Ci0jaW5jbHVkZSA8bGludXgvbW0uaD4KLSNpbmNsdWRlIDxsaW51eC9tb3VudC5o
PgotI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+Ci0jaW5jbHVkZSA8bGludXgvcGFnZW1hcC5oPgot
I2luY2x1ZGUgPGxpbnV4L3F1b3Rhb3BzLmg+Ci0jaW5jbHVkZSA8bGludXgvc2xhYi5oPgotI2lu
Y2x1ZGUgPGxpbnV4L2xvZzIuaD4KLQotI2luY2x1ZGUgImFvcHMuaCIKLSNpbmNsdWRlICJhdHRy
aWIuaCIKLSNpbmNsdWRlICJiaXRtYXAuaCIKLSNpbmNsdWRlICJkaXIuaCIKLSNpbmNsdWRlICJk
ZWJ1Zy5oIgotI2luY2x1ZGUgImlub2RlLmgiCi0jaW5jbHVkZSAibGNuYWxsb2MuaCIKLSNpbmNs
dWRlICJtYWxsb2MuaCIKLSNpbmNsdWRlICJtZnQuaCIKLSNpbmNsdWRlICJ0aW1lLmgiCi0jaW5j
bHVkZSAibnRmcy5oIgotCi0vKioKLSAqIG50ZnNfdGVzdF9pbm9kZSAtIGNvbXBhcmUgdHdvIChw
b3NzaWJseSBmYWtlKSBpbm9kZXMgZm9yIGVxdWFsaXR5Ci0gKiBAdmk6CQl2ZnMgaW5vZGUgd2hp
Y2ggdG8gdGVzdAotICogQGRhdGE6CWRhdGEgd2hpY2ggaXMgYmVpbmcgdGVzdGVkIHdpdGgKLSAq
Ci0gKiBDb21wYXJlIHRoZSBudGZzIGF0dHJpYnV0ZSBlbWJlZGRlZCBpbiB0aGUgbnRmcyBzcGVj
aWZpYyBwYXJ0IG9mIHRoZSB2ZnMKLSAqIGlub2RlIEB2aSBmb3IgZXF1YWxpdHkgd2l0aCB0aGUg
bnRmcyBhdHRyaWJ1dGUgQGRhdGEuCi0gKgotICogSWYgc2VhcmNoaW5nIGZvciB0aGUgbm9ybWFs
IGZpbGUvZGlyZWN0b3J5IGlub2RlLCBzZXQgQG5hLT50eXBlIHRvIEFUX1VOVVNFRC4KLSAqIEBu
YS0+bmFtZSBhbmQgQG5hLT5uYW1lX2xlbiBhcmUgdGhlbiBpZ25vcmVkLgotICoKLSAqIFJldHVy
biAxIGlmIHRoZSBhdHRyaWJ1dGVzIG1hdGNoIGFuZCAwIGlmIG5vdC4KLSAqCi0gKiBOT1RFOiBU
aGlzIGZ1bmN0aW9uIHJ1bnMgd2l0aCB0aGUgaW5vZGVfaGFzaF9sb2NrIHNwaW4gbG9jayBoZWxk
IHNvIGl0IGlzIG5vdAotICogYWxsb3dlZCB0byBzbGVlcC4KLSAqLwotaW50IG50ZnNfdGVzdF9p
bm9kZShzdHJ1Y3QgaW5vZGUgKnZpLCB2b2lkICpkYXRhKQotewotCW50ZnNfYXR0ciAqbmEgPSAo
bnRmc19hdHRyICopZGF0YTsKLQludGZzX2lub2RlICpuaTsKLQotCWlmICh2aS0+aV9pbm8gIT0g
bmEtPm1mdF9ubykKLQkJcmV0dXJuIDA7Ci0JbmkgPSBOVEZTX0kodmkpOwotCS8qIElmICFOSW5v
QXR0cihuaSksIEB2aSBpcyBhIG5vcm1hbCBmaWxlIG9yIGRpcmVjdG9yeSBpbm9kZS4gKi8KLQlp
ZiAobGlrZWx5KCFOSW5vQXR0cihuaSkpKSB7Ci0JCS8qIElmIG5vdCBsb29raW5nIGZvciBhIG5v
cm1hbCBpbm9kZSB0aGlzIGlzIGEgbWlzbWF0Y2guICovCi0JCWlmICh1bmxpa2VseShuYS0+dHlw
ZSAhPSBBVF9VTlVTRUQpKQotCQkJcmV0dXJuIDA7Ci0JfSBlbHNlIHsKLQkJLyogQSBmYWtlIGlu
b2RlIGRlc2NyaWJpbmcgYW4gYXR0cmlidXRlLiAqLwotCQlpZiAobmktPnR5cGUgIT0gbmEtPnR5
cGUpCi0JCQlyZXR1cm4gMDsKLQkJaWYgKG5pLT5uYW1lX2xlbiAhPSBuYS0+bmFtZV9sZW4pCi0J
CQlyZXR1cm4gMDsKLQkJaWYgKG5hLT5uYW1lX2xlbiAmJiBtZW1jbXAobmktPm5hbWUsIG5hLT5u
YW1lLAotCQkJCW5hLT5uYW1lX2xlbiAqIHNpemVvZihudGZzY2hhcikpKQotCQkJcmV0dXJuIDA7
Ci0JfQotCS8qIE1hdGNoISAqLwotCXJldHVybiAxOwotfQotCi0vKioKLSAqIG50ZnNfaW5pdF9s
b2NrZWRfaW5vZGUgLSBpbml0aWFsaXplIGFuIGlub2RlCi0gKiBAdmk6CQl2ZnMgaW5vZGUgdG8g
aW5pdGlhbGl6ZQotICogQGRhdGE6CWRhdGEgd2hpY2ggdG8gaW5pdGlhbGl6ZSBAdmkgdG8KLSAq
Ci0gKiBJbml0aWFsaXplIHRoZSB2ZnMgaW5vZGUgQHZpIHdpdGggdGhlIHZhbHVlcyBmcm9tIHRo
ZSBudGZzIGF0dHJpYnV0ZSBAZGF0YSBpbgotICogb3JkZXIgdG8gZW5hYmxlIG50ZnNfdGVzdF9p
bm9kZSgpIHRvIGRvIGl0cyB3b3JrLgotICoKLSAqIElmIGluaXRpYWxpemluZyB0aGUgbm9ybWFs
IGZpbGUvZGlyZWN0b3J5IGlub2RlLCBzZXQgQG5hLT50eXBlIHRvIEFUX1VOVVNFRC4KLSAqIElu
IHRoYXQgY2FzZSwgQG5hLT5uYW1lIGFuZCBAbmEtPm5hbWVfbGVuIHNob3VsZCBiZSBzZXQgdG8g
TlVMTCBhbmQgMCwKLSAqIHJlc3BlY3RpdmVseS4gQWx0aG91Z2ggdGhhdCBpcyBub3Qgc3RyaWN0
bHkgbmVjZXNzYXJ5IGFzCi0gKiBudGZzX3JlYWRfbG9ja2VkX2lub2RlKCkgd2lsbCBmaWxsIHRo
ZW0gaW4gbGF0ZXIuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVy
cm9yLgotICoKLSAqIE5PVEU6IFRoaXMgZnVuY3Rpb24gcnVucyB3aXRoIHRoZSBpbm9kZS0+aV9s
b2NrIHNwaW4gbG9jayBoZWxkIHNvIGl0IGlzIG5vdAotICogYWxsb3dlZCB0byBzbGVlcC4gKEhl
bmNlIHRoZSBHRlBfQVRPTUlDIGFsbG9jYXRpb24uKQotICovCi1zdGF0aWMgaW50IG50ZnNfaW5p
dF9sb2NrZWRfaW5vZGUoc3RydWN0IGlub2RlICp2aSwgdm9pZCAqZGF0YSkKLXsKLQludGZzX2F0
dHIgKm5hID0gKG50ZnNfYXR0ciAqKWRhdGE7Ci0JbnRmc19pbm9kZSAqbmkgPSBOVEZTX0kodmkp
OwotCi0JdmktPmlfaW5vID0gbmEtPm1mdF9ubzsKLQotCW5pLT50eXBlID0gbmEtPnR5cGU7Ci0J
aWYgKG5hLT50eXBlID09IEFUX0lOREVYX0FMTE9DQVRJT04pCi0JCU5Jbm9TZXRNc3RQcm90ZWN0
ZWQobmkpOwotCi0JbmktPm5hbWUgPSBuYS0+bmFtZTsKLQluaS0+bmFtZV9sZW4gPSBuYS0+bmFt
ZV9sZW47Ci0KLQkvKiBJZiBpbml0aWFsaXppbmcgYSBub3JtYWwgaW5vZGUsIHdlIGFyZSBkb25l
LiAqLwotCWlmIChsaWtlbHkobmEtPnR5cGUgPT0gQVRfVU5VU0VEKSkgewotCQlCVUdfT04obmEt
Pm5hbWUpOwotCQlCVUdfT04obmEtPm5hbWVfbGVuKTsKLQkJcmV0dXJuIDA7Ci0JfQotCi0JLyog
SXQgaXMgYSBmYWtlIGlub2RlLiAqLwotCU5Jbm9TZXRBdHRyKG5pKTsKLQotCS8qCi0JICogV2Ug
aGF2ZSBJMzAgZ2xvYmFsIGNvbnN0YW50IGFzIGFuIG9wdGltaXphdGlvbiBhcyBpdCBpcyB0aGUg
bmFtZQotCSAqIGluID45OS45JSBvZiBuYW1lZCBhdHRyaWJ1dGVzISBUaGUgb3RoZXIgPDAuMSUg
aW5jdXIgYSBHRlBfQVRPTUlDCi0JICogYWxsb2NhdGlvbiBidXQgdGhhdCBpcyBvay4gQW5kIG1v
c3QgYXR0cmlidXRlcyBhcmUgdW5uYW1lZCBhbnl3YXksCi0JICogdGh1cyB0aGUgZnJhY3Rpb24g
b2YgbmFtZWQgYXR0cmlidXRlcyB3aXRoIG5hbWUgIT0gSTMwIGlzIGFjdHVhbGx5Ci0JICogYWJz
b2x1dGVseSB0aW55LgotCSAqLwotCWlmIChuYS0+bmFtZV9sZW4gJiYgbmEtPm5hbWUgIT0gSTMw
KSB7Ci0JCXVuc2lnbmVkIGludCBpOwotCi0JCUJVR19PTighbmEtPm5hbWUpOwotCQlpID0gbmEt
Pm5hbWVfbGVuICogc2l6ZW9mKG50ZnNjaGFyKTsKLQkJbmktPm5hbWUgPSBrbWFsbG9jKGkgKyBz
aXplb2YobnRmc2NoYXIpLCBHRlBfQVRPTUlDKTsKLQkJaWYgKCFuaS0+bmFtZSkKLQkJCXJldHVy
biAtRU5PTUVNOwotCQltZW1jcHkobmktPm5hbWUsIG5hLT5uYW1lLCBpKTsKLQkJbmktPm5hbWVb
bmEtPm5hbWVfbGVuXSA9IDA7Ci0JfQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IG50ZnNf
cmVhZF9sb2NrZWRfaW5vZGUoc3RydWN0IGlub2RlICp2aSk7Ci1zdGF0aWMgaW50IG50ZnNfcmVh
ZF9sb2NrZWRfYXR0cl9pbm9kZShzdHJ1Y3QgaW5vZGUgKmJhc2VfdmksIHN0cnVjdCBpbm9kZSAq
dmkpOwotc3RhdGljIGludCBudGZzX3JlYWRfbG9ja2VkX2luZGV4X2lub2RlKHN0cnVjdCBpbm9k
ZSAqYmFzZV92aSwKLQkJc3RydWN0IGlub2RlICp2aSk7Ci0KLS8qKgotICogbnRmc19pZ2V0IC0g
b2J0YWluIGEgc3RydWN0IGlub2RlIGNvcnJlc3BvbmRpbmcgdG8gYSBzcGVjaWZpYyBub3JtYWwg
aW5vZGUKLSAqIEBzYjoJCXN1cGVyIGJsb2NrIG9mIG1vdW50ZWQgdm9sdW1lCi0gKiBAbWZ0X25v
OgltZnQgcmVjb3JkIG51bWJlciAvIGlub2RlIG51bWJlciB0byBvYnRhaW4KLSAqCi0gKiBPYnRh
aW4gdGhlIHN0cnVjdCBpbm9kZSBjb3JyZXNwb25kaW5nIHRvIGEgc3BlY2lmaWMgbm9ybWFsIGlu
b2RlIChpLmUuIGEKLSAqIGZpbGUgb3IgZGlyZWN0b3J5KS4KLSAqCi0gKiBJZiB0aGUgaW5vZGUg
aXMgaW4gdGhlIGNhY2hlLCBpdCBpcyBqdXN0IHJldHVybmVkIHdpdGggYW4gaW5jcmVhc2VkCi0g
KiByZWZlcmVuY2UgY291bnQuIE90aGVyd2lzZSwgYSBuZXcgc3RydWN0IGlub2RlIGlzIGFsbG9j
YXRlZCBhbmQgaW5pdGlhbGl6ZWQsCi0gKiBhbmQgZmluYWxseSBudGZzX3JlYWRfbG9ja2VkX2lu
b2RlKCkgaXMgY2FsbGVkIHRvIHJlYWQgaW4gdGhlIGlub2RlIGFuZAotICogZmlsbCBpbiB0aGUg
cmVtYWluZGVyIG9mIHRoZSBpbm9kZSBzdHJ1Y3R1cmUuCi0gKgotICogUmV0dXJuIHRoZSBzdHJ1
Y3QgaW5vZGUgb24gc3VjY2Vzcy4gQ2hlY2sgdGhlIHJldHVybiB2YWx1ZSB3aXRoIElTX0VSUigp
IGFuZAotICogaWYgdHJ1ZSwgdGhlIGZ1bmN0aW9uIGZhaWxlZCBhbmQgdGhlIGVycm9yIGNvZGUg
aXMgb2J0YWluZWQgZnJvbSBQVFJfRVJSKCkuCi0gKi8KLXN0cnVjdCBpbm9kZSAqbnRmc19pZ2V0
KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHVuc2lnbmVkIGxvbmcgbWZ0X25vKQotewotCXN0cnVj
dCBpbm9kZSAqdmk7Ci0JaW50IGVycjsKLQludGZzX2F0dHIgbmE7Ci0KLQluYS5tZnRfbm8gPSBt
ZnRfbm87Ci0JbmEudHlwZSA9IEFUX1VOVVNFRDsKLQluYS5uYW1lID0gTlVMTDsKLQluYS5uYW1l
X2xlbiA9IDA7Ci0KLQl2aSA9IGlnZXQ1X2xvY2tlZChzYiwgbWZ0X25vLCBudGZzX3Rlc3RfaW5v
ZGUsCi0JCQludGZzX2luaXRfbG9ja2VkX2lub2RlLCAmbmEpOwotCWlmICh1bmxpa2VseSghdmkp
KQotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKLQotCWVyciA9IDA7Ci0KLQkvKiBJZiB0aGlz
IGlzIGEgZnJlc2hseSBhbGxvY2F0ZWQgaW5vZGUsIG5lZWQgdG8gcmVhZCBpdCBub3cuICovCi0J
aWYgKHZpLT5pX3N0YXRlICYgSV9ORVcpIHsKLQkJZXJyID0gbnRmc19yZWFkX2xvY2tlZF9pbm9k
ZSh2aSk7Ci0JCXVubG9ja19uZXdfaW5vZGUodmkpOwotCX0KLQkvKgotCSAqIFRoZXJlIGlzIG5v
IHBvaW50IGluIGtlZXBpbmcgYmFkIGlub2RlcyBhcm91bmQgaWYgdGhlIGZhaWx1cmUgd2FzCi0J
ICogZHVlIHRvIEVOT01FTS4gV2Ugd2FudCB0byBiZSBhYmxlIHRvIHJldHJ5IGFnYWluIGxhdGVy
LgotCSAqLwotCWlmICh1bmxpa2VseShlcnIgPT0gLUVOT01FTSkpIHsKLQkJaXB1dCh2aSk7Ci0J
CXZpID0gRVJSX1BUUihlcnIpOwotCX0KLQlyZXR1cm4gdmk7Ci19Ci0KLS8qKgotICogbnRmc19h
dHRyX2lnZXQgLSBvYnRhaW4gYSBzdHJ1Y3QgaW5vZGUgY29ycmVzcG9uZGluZyB0byBhbiBhdHRy
aWJ1dGUKLSAqIEBiYXNlX3ZpOgl2ZnMgYmFzZSBpbm9kZSBjb250YWluaW5nIHRoZSBhdHRyaWJ1
dGUKLSAqIEB0eXBlOglhdHRyaWJ1dGUgdHlwZQotICogQG5hbWU6CVVuaWNvZGUgbmFtZSBvZiB0
aGUgYXR0cmlidXRlIChOVUxMIGlmIHVubmFtZWQpCi0gKiBAbmFtZV9sZW46CWxlbmd0aCBvZiBA
bmFtZSBpbiBVbmljb2RlIGNoYXJhY3RlcnMgKDAgaWYgdW5uYW1lZCkKLSAqCi0gKiBPYnRhaW4g
dGhlIChmYWtlKSBzdHJ1Y3QgaW5vZGUgY29ycmVzcG9uZGluZyB0byB0aGUgYXR0cmlidXRlIHNw
ZWNpZmllZCBieQotICogQHR5cGUsIEBuYW1lLCBhbmQgQG5hbWVfbGVuLCB3aGljaCBpcyBwcmVz
ZW50IGluIHRoZSBiYXNlIG1mdCByZWNvcmQKLSAqIHNwZWNpZmllZCBieSB0aGUgdmZzIGlub2Rl
IEBiYXNlX3ZpLgotICoKLSAqIElmIHRoZSBhdHRyaWJ1dGUgaW5vZGUgaXMgaW4gdGhlIGNhY2hl
LCBpdCBpcyBqdXN0IHJldHVybmVkIHdpdGggYW4KLSAqIGluY3JlYXNlZCByZWZlcmVuY2UgY291
bnQuIE90aGVyd2lzZSwgYSBuZXcgc3RydWN0IGlub2RlIGlzIGFsbG9jYXRlZCBhbmQKLSAqIGlu
aXRpYWxpemVkLCBhbmQgZmluYWxseSBudGZzX3JlYWRfbG9ja2VkX2F0dHJfaW5vZGUoKSBpcyBj
YWxsZWQgdG8gcmVhZCB0aGUKLSAqIGF0dHJpYnV0ZSBhbmQgZmlsbCBpbiB0aGUgaW5vZGUgc3Ry
dWN0dXJlLgotICoKLSAqIE5vdGUsIGZvciBpbmRleCBhbGxvY2F0aW9uIGF0dHJpYnV0ZXMsIHlv
dSBuZWVkIHRvIHVzZSBudGZzX2luZGV4X2lnZXQoKQotICogaW5zdGVhZCBvZiBudGZzX2F0dHJf
aWdldCgpIGFzIHdvcmtpbmcgd2l0aCBpbmRpY2VzIGlzIGEgbG90IG1vcmUgY29tcGxleC4KLSAq
Ci0gKiBSZXR1cm4gdGhlIHN0cnVjdCBpbm9kZSBvZiB0aGUgYXR0cmlidXRlIGlub2RlIG9uIHN1
Y2Nlc3MuIENoZWNrIHRoZSByZXR1cm4KLSAqIHZhbHVlIHdpdGggSVNfRVJSKCkgYW5kIGlmIHRy
dWUsIHRoZSBmdW5jdGlvbiBmYWlsZWQgYW5kIHRoZSBlcnJvciBjb2RlIGlzCi0gKiBvYnRhaW5l
ZCBmcm9tIFBUUl9FUlIoKS4KLSAqLwotc3RydWN0IGlub2RlICpudGZzX2F0dHJfaWdldChzdHJ1
Y3QgaW5vZGUgKmJhc2VfdmksIEFUVFJfVFlQRSB0eXBlLAotCQludGZzY2hhciAqbmFtZSwgdTMy
IG5hbWVfbGVuKQotewotCXN0cnVjdCBpbm9kZSAqdmk7Ci0JaW50IGVycjsKLQludGZzX2F0dHIg
bmE7Ci0KLQkvKiBNYWtlIHN1cmUgbm8gb25lIGNhbGxzIG50ZnNfYXR0cl9pZ2V0KCkgZm9yIGlu
ZGljZXMuICovCi0JQlVHX09OKHR5cGUgPT0gQVRfSU5ERVhfQUxMT0NBVElPTik7Ci0KLQluYS5t
ZnRfbm8gPSBiYXNlX3ZpLT5pX2lubzsKLQluYS50eXBlID0gdHlwZTsKLQluYS5uYW1lID0gbmFt
ZTsKLQluYS5uYW1lX2xlbiA9IG5hbWVfbGVuOwotCi0JdmkgPSBpZ2V0NV9sb2NrZWQoYmFzZV92
aS0+aV9zYiwgbmEubWZ0X25vLCBudGZzX3Rlc3RfaW5vZGUsCi0JCQludGZzX2luaXRfbG9ja2Vk
X2lub2RlLCAmbmEpOwotCWlmICh1bmxpa2VseSghdmkpKQotCQlyZXR1cm4gRVJSX1BUUigtRU5P
TUVNKTsKLQotCWVyciA9IDA7Ci0KLQkvKiBJZiB0aGlzIGlzIGEgZnJlc2hseSBhbGxvY2F0ZWQg
aW5vZGUsIG5lZWQgdG8gcmVhZCBpdCBub3cuICovCi0JaWYgKHZpLT5pX3N0YXRlICYgSV9ORVcp
IHsKLQkJZXJyID0gbnRmc19yZWFkX2xvY2tlZF9hdHRyX2lub2RlKGJhc2VfdmksIHZpKTsKLQkJ
dW5sb2NrX25ld19pbm9kZSh2aSk7Ci0JfQotCS8qCi0JICogVGhlcmUgaXMgbm8gcG9pbnQgaW4g
a2VlcGluZyBiYWQgYXR0cmlidXRlIGlub2RlcyBhcm91bmQuIFRoaXMgYWxzbwotCSAqIHNpbXBs
aWZpZXMgdGhpbmdzIGluIHRoYXQgd2UgbmV2ZXIgbmVlZCB0byBjaGVjayBmb3IgYmFkIGF0dHJp
YnV0ZQotCSAqIGlub2RlcyBlbHNld2hlcmUuCi0JICovCi0JaWYgKHVubGlrZWx5KGVycikpIHsK
LQkJaXB1dCh2aSk7Ci0JCXZpID0gRVJSX1BUUihlcnIpOwotCX0KLQlyZXR1cm4gdmk7Ci19Ci0K
LS8qKgotICogbnRmc19pbmRleF9pZ2V0IC0gb2J0YWluIGEgc3RydWN0IGlub2RlIGNvcnJlc3Bv
bmRpbmcgdG8gYW4gaW5kZXgKLSAqIEBiYXNlX3ZpOgl2ZnMgYmFzZSBpbm9kZSBjb250YWluaW5n
IHRoZSBpbmRleCByZWxhdGVkIGF0dHJpYnV0ZXMKLSAqIEBuYW1lOglVbmljb2RlIG5hbWUgb2Yg
dGhlIGluZGV4Ci0gKiBAbmFtZV9sZW46CWxlbmd0aCBvZiBAbmFtZSBpbiBVbmljb2RlIGNoYXJh
Y3RlcnMKLSAqCi0gKiBPYnRhaW4gdGhlIChmYWtlKSBzdHJ1Y3QgaW5vZGUgY29ycmVzcG9uZGlu
ZyB0byB0aGUgaW5kZXggc3BlY2lmaWVkIGJ5IEBuYW1lCi0gKiBhbmQgQG5hbWVfbGVuLCB3aGlj
aCBpcyBwcmVzZW50IGluIHRoZSBiYXNlIG1mdCByZWNvcmQgc3BlY2lmaWVkIGJ5IHRoZSB2ZnMK
LSAqIGlub2RlIEBiYXNlX3ZpLgotICoKLSAqIElmIHRoZSBpbmRleCBpbm9kZSBpcyBpbiB0aGUg
Y2FjaGUsIGl0IGlzIGp1c3QgcmV0dXJuZWQgd2l0aCBhbiBpbmNyZWFzZWQKLSAqIHJlZmVyZW5j
ZSBjb3VudC4gIE90aGVyd2lzZSwgYSBuZXcgc3RydWN0IGlub2RlIGlzIGFsbG9jYXRlZCBhbmQK
LSAqIGluaXRpYWxpemVkLCBhbmQgZmluYWxseSBudGZzX3JlYWRfbG9ja2VkX2luZGV4X2lub2Rl
KCkgaXMgY2FsbGVkIHRvIHJlYWQKLSAqIHRoZSBpbmRleCByZWxhdGVkIGF0dHJpYnV0ZXMgYW5k
IGZpbGwgaW4gdGhlIGlub2RlIHN0cnVjdHVyZS4KLSAqCi0gKiBSZXR1cm4gdGhlIHN0cnVjdCBp
bm9kZSBvZiB0aGUgaW5kZXggaW5vZGUgb24gc3VjY2Vzcy4gQ2hlY2sgdGhlIHJldHVybgotICog
dmFsdWUgd2l0aCBJU19FUlIoKSBhbmQgaWYgdHJ1ZSwgdGhlIGZ1bmN0aW9uIGZhaWxlZCBhbmQg
dGhlIGVycm9yIGNvZGUgaXMKLSAqIG9idGFpbmVkIGZyb20gUFRSX0VSUigpLgotICovCi1zdHJ1
Y3QgaW5vZGUgKm50ZnNfaW5kZXhfaWdldChzdHJ1Y3QgaW5vZGUgKmJhc2VfdmksIG50ZnNjaGFy
ICpuYW1lLAotCQl1MzIgbmFtZV9sZW4pCi17Ci0Jc3RydWN0IGlub2RlICp2aTsKLQlpbnQgZXJy
OwotCW50ZnNfYXR0ciBuYTsKLQotCW5hLm1mdF9ubyA9IGJhc2VfdmktPmlfaW5vOwotCW5hLnR5
cGUgPSBBVF9JTkRFWF9BTExPQ0FUSU9OOwotCW5hLm5hbWUgPSBuYW1lOwotCW5hLm5hbWVfbGVu
ID0gbmFtZV9sZW47Ci0KLQl2aSA9IGlnZXQ1X2xvY2tlZChiYXNlX3ZpLT5pX3NiLCBuYS5tZnRf
bm8sIG50ZnNfdGVzdF9pbm9kZSwKLQkJCW50ZnNfaW5pdF9sb2NrZWRfaW5vZGUsICZuYSk7Ci0J
aWYgKHVubGlrZWx5KCF2aSkpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCi0JZXJyID0g
MDsKLQotCS8qIElmIHRoaXMgaXMgYSBmcmVzaGx5IGFsbG9jYXRlZCBpbm9kZSwgbmVlZCB0byBy
ZWFkIGl0IG5vdy4gKi8KLQlpZiAodmktPmlfc3RhdGUgJiBJX05FVykgewotCQllcnIgPSBudGZz
X3JlYWRfbG9ja2VkX2luZGV4X2lub2RlKGJhc2VfdmksIHZpKTsKLQkJdW5sb2NrX25ld19pbm9k
ZSh2aSk7Ci0JfQotCS8qCi0JICogVGhlcmUgaXMgbm8gcG9pbnQgaW4ga2VlcGluZyBiYWQgaW5k
ZXggaW5vZGVzIGFyb3VuZC4gIFRoaXMgYWxzbwotCSAqIHNpbXBsaWZpZXMgdGhpbmdzIGluIHRo
YXQgd2UgbmV2ZXIgbmVlZCB0byBjaGVjayBmb3IgYmFkIGluZGV4Ci0JICogaW5vZGVzIGVsc2V3
aGVyZS4KLQkgKi8KLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlpcHV0KHZpKTsKLQkJdmkgPSBF
UlJfUFRSKGVycik7Ci0JfQotCXJldHVybiB2aTsKLX0KLQotc3RydWN0IGlub2RlICpudGZzX2Fs
bG9jX2JpZ19pbm9kZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiKQotewotCW50ZnNfaW5vZGUgKm5p
OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JbmkgPSBhbGxvY19pbm9kZV9zYihzYiwg
bnRmc19iaWdfaW5vZGVfY2FjaGUsIEdGUF9OT0ZTKTsKLQlpZiAobGlrZWx5KG5pICE9IE5VTEwp
KSB7Ci0JCW5pLT5zdGF0ZSA9IDA7Ci0JCXJldHVybiBWRlNfSShuaSk7Ci0JfQotCW50ZnNfZXJy
b3Ioc2IsICJBbGxvY2F0aW9uIG9mIE5URlMgYmlnIGlub2RlIHN0cnVjdHVyZSBmYWlsZWQuIik7
Ci0JcmV0dXJuIE5VTEw7Ci19Ci0KLXZvaWQgbnRmc19mcmVlX2JpZ19pbm9kZShzdHJ1Y3QgaW5v
ZGUgKmlub2RlKQotewotCWttZW1fY2FjaGVfZnJlZShudGZzX2JpZ19pbm9kZV9jYWNoZSwgTlRG
U19JKGlub2RlKSk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgbnRmc19pbm9kZSAqbnRmc19hbGxvY19l
eHRlbnRfaW5vZGUodm9pZCkKLXsKLQludGZzX2lub2RlICpuaTsKLQotCW50ZnNfZGVidWcoIkVu
dGVyaW5nLiIpOwotCW5pID0ga21lbV9jYWNoZV9hbGxvYyhudGZzX2lub2RlX2NhY2hlLCBHRlBf
Tk9GUyk7Ci0JaWYgKGxpa2VseShuaSAhPSBOVUxMKSkgewotCQluaS0+c3RhdGUgPSAwOwotCQly
ZXR1cm4gbmk7Ci0JfQotCW50ZnNfZXJyb3IoTlVMTCwgIkFsbG9jYXRpb24gb2YgTlRGUyBpbm9k
ZSBzdHJ1Y3R1cmUgZmFpbGVkLiIpOwotCXJldHVybiBOVUxMOwotfQotCi1zdGF0aWMgdm9pZCBu
dGZzX2Rlc3Ryb3lfZXh0ZW50X2lub2RlKG50ZnNfaW5vZGUgKm5pKQotewotCW50ZnNfZGVidWco
IkVudGVyaW5nLiIpOwotCUJVR19PTihuaS0+cGFnZSk7Ci0JaWYgKCFhdG9taWNfZGVjX2FuZF90
ZXN0KCZuaS0+Y291bnQpKQotCQlCVUcoKTsKLQlrbWVtX2NhY2hlX2ZyZWUobnRmc19pbm9kZV9j
YWNoZSwgbmkpOwotfQotCi0vKgotICogVGhlIGF0dHJpYnV0ZSBydW5saXN0IGxvY2sgaGFzIHNl
cGFyYXRlIGxvY2tpbmcgcnVsZXMgZnJvbSB0aGUKLSAqIG5vcm1hbCBydW5saXN0IGxvY2ssIHNv
IHNwbGl0IHRoZSB0d28gbG9jay1jbGFzc2VzOgotICovCi1zdGF0aWMgc3RydWN0IGxvY2tfY2xh
c3Nfa2V5IGF0dHJfbGlzdF9ybF9sb2NrX2NsYXNzOwotCi0vKioKLSAqIF9fbnRmc19pbml0X2lu
b2RlIC0gaW5pdGlhbGl6ZSBudGZzIHNwZWNpZmljIHBhcnQgb2YgYW4gaW5vZGUKLSAqIEBzYjoJ
CXN1cGVyIGJsb2NrIG9mIG1vdW50ZWQgdm9sdW1lCi0gKiBAbmk6CQlmcmVzaGx5IGFsbG9jYXRl
ZCBudGZzIGlub2RlIHdoaWNoIHRvIGluaXRpYWxpemUKLSAqCi0gKiBJbml0aWFsaXplIGFuIG50
ZnMgaW5vZGUgdG8gZGVmYXVsdHMuCi0gKgotICogTk9URTogbmktPm1mdF9ubywgbmktPnN0YXRl
LCBuaS0+dHlwZSwgbmktPm5hbWUsIGFuZCBuaS0+bmFtZV9sZW4gYXJlIGxlZnQKLSAqIHVudG91
Y2hlZC4gTWFrZSBzdXJlIHRvIGluaXRpYWxpemUgdGhlbSBlbHNld2hlcmUuCi0gKgotICogUmV0
dXJuIHplcm8gb24gc3VjY2VzcyBhbmQgLUVOT01FTSBvbiBlcnJvci4KLSAqLwotdm9pZCBfX250
ZnNfaW5pdF9pbm9kZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBudGZzX2lub2RlICpuaSkKLXsK
LQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQlyd2xvY2tfaW5pdCgmbmktPnNpemVfbG9jayk7
Ci0JbmktPmluaXRpYWxpemVkX3NpemUgPSBuaS0+YWxsb2NhdGVkX3NpemUgPSAwOwotCW5pLT5z
ZXFfbm8gPSAwOwotCWF0b21pY19zZXQoJm5pLT5jb3VudCwgMSk7Ci0JbmktPnZvbCA9IE5URlNf
U0Ioc2IpOwotCW50ZnNfaW5pdF9ydW5saXN0KCZuaS0+cnVubGlzdCk7Ci0JbXV0ZXhfaW5pdCgm
bmktPm1yZWNfbG9jayk7Ci0JbmktPnBhZ2UgPSBOVUxMOwotCW5pLT5wYWdlX29mcyA9IDA7Ci0J
bmktPmF0dHJfbGlzdF9zaXplID0gMDsKLQluaS0+YXR0cl9saXN0ID0gTlVMTDsKLQludGZzX2lu
aXRfcnVubGlzdCgmbmktPmF0dHJfbGlzdF9ybCk7Ci0JbG9ja2RlcF9zZXRfY2xhc3MoJm5pLT5h
dHRyX2xpc3RfcmwubG9jaywKLQkJCQkmYXR0cl9saXN0X3JsX2xvY2tfY2xhc3MpOwotCW5pLT5p
dHlwZS5pbmRleC5ibG9ja19zaXplID0gMDsKLQluaS0+aXR5cGUuaW5kZXgudmNuX3NpemUgPSAw
OwotCW5pLT5pdHlwZS5pbmRleC5jb2xsYXRpb25fcnVsZSA9IDA7Ci0JbmktPml0eXBlLmluZGV4
LmJsb2NrX3NpemVfYml0cyA9IDA7Ci0JbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPSAw
OwotCW11dGV4X2luaXQoJm5pLT5leHRlbnRfbG9jayk7Ci0JbmktPm5yX2V4dGVudHMgPSAwOwot
CW5pLT5leHQuYmFzZV9udGZzX2lubyA9IE5VTEw7Ci19Ci0KLS8qCi0gKiBFeHRlbnQgaW5vZGVz
IGdldCBNRlQtbWFwcGVkIGluIGEgbmVzdGVkIHdheSwgd2hpbGUgdGhlIGJhc2UgaW5vZGUKLSAq
IGlzIHN0aWxsIG1hcHBlZC4gVGVhY2ggdGhpcyBuZXN0aW5nIHRvIHRoZSBsb2NrIHZhbGlkYXRv
ciBieSBjcmVhdGluZwotICogYSBzZXBhcmF0ZSBjbGFzcyBmb3IgbmVzdGVkIGlub2RlJ3MgbXJl
Y19sb2NrJ3M6Ci0gKi8KLXN0YXRpYyBzdHJ1Y3QgbG9ja19jbGFzc19rZXkgZXh0ZW50X2lub2Rl
X21yZWNfbG9ja19rZXk7Ci0KLWlubGluZSBudGZzX2lub2RlICpudGZzX25ld19leHRlbnRfaW5v
ZGUoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKLQkJdW5zaWduZWQgbG9uZyBtZnRfbm8pCi17Ci0J
bnRmc19pbm9kZSAqbmkgPSBudGZzX2FsbG9jX2V4dGVudF9pbm9kZSgpOwotCi0JbnRmc19kZWJ1
ZygiRW50ZXJpbmcuIik7Ci0JaWYgKGxpa2VseShuaSAhPSBOVUxMKSkgewotCQlfX250ZnNfaW5p
dF9pbm9kZShzYiwgbmkpOwotCQlsb2NrZGVwX3NldF9jbGFzcygmbmktPm1yZWNfbG9jaywgJmV4
dGVudF9pbm9kZV9tcmVjX2xvY2tfa2V5KTsKLQkJbmktPm1mdF9ubyA9IG1mdF9ubzsKLQkJbmkt
PnR5cGUgPSBBVF9VTlVTRUQ7Ci0JCW5pLT5uYW1lID0gTlVMTDsKLQkJbmktPm5hbWVfbGVuID0g
MDsKLQl9Ci0JcmV0dXJuIG5pOwotfQotCi0vKioKLSAqIG50ZnNfaXNfZXh0ZW5kZWRfc3lzdGVt
X2ZpbGUgLSBjaGVjayBpZiBhIGZpbGUgaXMgaW4gdGhlICRFeHRlbmQgZGlyZWN0b3J5Ci0gKiBA
Y3R4Oglpbml0aWFsaXplZCBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQKLSAqCi0gKiBTZWFyY2gg
YWxsIGZpbGUgbmFtZSBhdHRyaWJ1dGVzIGluIHRoZSBpbm9kZSBkZXNjcmliZWQgYnkgdGhlIGF0
dHJpYnV0ZQotICogc2VhcmNoIGNvbnRleHQgQGN0eCBhbmQgY2hlY2sgaWYgYW55IG9mIHRoZSBu
YW1lcyBhcmUgaW4gdGhlICRFeHRlbmQgc3lzdGVtCi0gKiBkaXJlY3RvcnkuCi0gKgotICogUmV0
dXJuIHZhbHVlczoKLSAqCSAgIDE6IGZpbGUgaXMgaW4gJEV4dGVuZCBkaXJlY3RvcnkKLSAqCSAg
IDA6IGZpbGUgaXMgbm90IGluICRFeHRlbmQgZGlyZWN0b3J5Ci0gKiAgICAtZXJybm86IGZhaWxl
ZCB0byBkZXRlcm1pbmUgaWYgdGhlIGZpbGUgaXMgaW4gdGhlICRFeHRlbmQgZGlyZWN0b3J5Ci0g
Ki8KLXN0YXRpYyBpbnQgbnRmc19pc19leHRlbmRlZF9zeXN0ZW1fZmlsZShudGZzX2F0dHJfc2Vh
cmNoX2N0eCAqY3R4KQotewotCWludCBucl9saW5rcywgZXJyOwotCi0JLyogUmVzdGFydCBzZWFy
Y2guICovCi0JbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4KGN0eCk7Ci0KLQkvKiBHZXQgbnVt
YmVyIG9mIGhhcmQgbGlua3MuICovCi0JbnJfbGlua3MgPSBsZTE2X3RvX2NwdShjdHgtPm1yZWMt
PmxpbmtfY291bnQpOwotCi0JLyogTG9vcCB0aHJvdWdoIGFsbCBoYXJkIGxpbmtzLiAqLwotCXdo
aWxlICghKGVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfRklMRV9OQU1FLCBOVUxMLCAwLCAwLCAw
LCBOVUxMLCAwLAotCQkJY3R4KSkpIHsKLQkJRklMRV9OQU1FX0FUVFIgKmZpbGVfbmFtZV9hdHRy
OwotCQlBVFRSX1JFQ09SRCAqYXR0ciA9IGN0eC0+YXR0cjsKLQkJdTggKnAsICpwMjsKLQotCQlu
cl9saW5rcy0tOwotCQkvKgotCQkgKiBNYXhpbXVtIHNhbml0eSBjaGVja2luZyBhcyB3ZSBhcmUg
Y2FsbGVkIG9uIGFuIGlub2RlIHRoYXQKLQkJICogd2Ugc3VzcGVjdCBtaWdodCBiZSBjb3JydXB0
LgotCQkgKi8KLQkJcCA9ICh1OCopYXR0ciArIGxlMzJfdG9fY3B1KGF0dHItPmxlbmd0aCk7Ci0J
CWlmIChwIDwgKHU4KiljdHgtPm1yZWMgfHwgKHU4KilwID4gKHU4KiljdHgtPm1yZWMgKwotCQkJ
CWxlMzJfdG9fY3B1KGN0eC0+bXJlYy0+Ynl0ZXNfaW5fdXNlKSkgewotZXJyX2NvcnJ1cHRfYXR0
cjoKLQkJCW50ZnNfZXJyb3IoY3R4LT5udGZzX2luby0+dm9sLT5zYiwgIkNvcnJ1cHQgZmlsZSBu
YW1lICIKLQkJCQkJImF0dHJpYnV0ZS4gWW91IHNob3VsZCBydW4gY2hrZHNrLiIpOwotCQkJcmV0
dXJuIC1FSU87Ci0JCX0KLQkJaWYgKGF0dHItPm5vbl9yZXNpZGVudCkgewotCQkJbnRmc19lcnJv
cihjdHgtPm50ZnNfaW5vLT52b2wtPnNiLCAiTm9uLXJlc2lkZW50IGZpbGUgIgotCQkJCQkibmFt
ZS4gWW91IHNob3VsZCBydW4gY2hrZHNrLiIpOwotCQkJcmV0dXJuIC1FSU87Ci0JCX0KLQkJaWYg
KGF0dHItPmZsYWdzKSB7Ci0JCQludGZzX2Vycm9yKGN0eC0+bnRmc19pbm8tPnZvbC0+c2IsICJG
aWxlIG5hbWUgd2l0aCAiCi0JCQkJCSJpbnZhbGlkIGZsYWdzLiBZb3Ugc2hvdWxkIHJ1biAiCi0J
CQkJCSJjaGtkc2suIik7Ci0JCQlyZXR1cm4gLUVJTzsKLQkJfQotCQlpZiAoIShhdHRyLT5kYXRh
LnJlc2lkZW50LmZsYWdzICYgUkVTSURFTlRfQVRUUl9JU19JTkRFWEVEKSkgewotCQkJbnRmc19l
cnJvcihjdHgtPm50ZnNfaW5vLT52b2wtPnNiLCAiVW5pbmRleGVkIGZpbGUgIgotCQkJCQkibmFt
ZS4gWW91IHNob3VsZCBydW4gY2hrZHNrLiIpOwotCQkJcmV0dXJuIC1FSU87Ci0JCX0KLQkJZmls
ZV9uYW1lX2F0dHIgPSAoRklMRV9OQU1FX0FUVFIqKSgodTgqKWF0dHIgKwotCQkJCWxlMTZfdG9f
Y3B1KGF0dHItPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0JCXAyID0gKHU4ICopZmls
ZV9uYW1lX2F0dHIgKyBsZTMyX3RvX2NwdShhdHRyLT5kYXRhLnJlc2lkZW50LnZhbHVlX2xlbmd0
aCk7Ci0JCWlmIChwMiA8ICh1OCopYXR0ciB8fCBwMiA+IHApCi0JCQlnb3RvIGVycl9jb3JydXB0
X2F0dHI7Ci0JCS8qIFRoaXMgYXR0cmlidXRlIGlzIG9rLCBidXQgaXMgaXQgaW4gdGhlICRFeHRl
bmQgZGlyZWN0b3J5PyAqLwotCQlpZiAoTVJFRl9MRShmaWxlX25hbWVfYXR0ci0+cGFyZW50X2Rp
cmVjdG9yeSkgPT0gRklMRV9FeHRlbmQpCi0JCQlyZXR1cm4gMTsJLyogWUVTLCBpdCdzIGFuIGV4
dGVuZGVkIHN5c3RlbSBmaWxlLiAqLwotCX0KLQlpZiAodW5saWtlbHkoZXJyICE9IC1FTk9FTlQp
KQotCQlyZXR1cm4gZXJyOwotCWlmICh1bmxpa2VseShucl9saW5rcykpIHsKLQkJbnRmc19lcnJv
cihjdHgtPm50ZnNfaW5vLT52b2wtPnNiLCAiSW5vZGUgaGFyZCBsaW5rIGNvdW50ICIKLQkJCQki
ZG9lc24ndCBtYXRjaCBudW1iZXIgb2YgbmFtZSBhdHRyaWJ1dGVzLiBZb3UgIgotCQkJCSJzaG91
bGQgcnVuIGNoa2Rzay4iKTsKLQkJcmV0dXJuIC1FSU87Ci0JfQotCXJldHVybiAwOwkvKiBOTywg
aXQgaXMgbm90IGFuIGV4dGVuZGVkIHN5c3RlbSBmaWxlLiAqLwotfQotCi0vKioKLSAqIG50ZnNf
cmVhZF9sb2NrZWRfaW5vZGUgLSByZWFkIGFuIGlub2RlIGZyb20gaXRzIGRldmljZQotICogQHZp
OgkJaW5vZGUgdG8gcmVhZAotICoKLSAqIG50ZnNfcmVhZF9sb2NrZWRfaW5vZGUoKSBpcyBjYWxs
ZWQgZnJvbSBudGZzX2lnZXQoKSB0byByZWFkIHRoZSBpbm9kZQotICogZGVzY3JpYmVkIGJ5IEB2
aSBpbnRvIG1lbW9yeSBmcm9tIHRoZSBkZXZpY2UuCi0gKgotICogVGhlIG9ubHkgZmllbGRzIGlu
IEB2aSB0aGF0IHdlIG5lZWQgdG8vY2FuIGxvb2sgYXQgd2hlbiB0aGUgZnVuY3Rpb24gaXMKLSAq
IGNhbGxlZCBhcmUgaV9zYiwgcG9pbnRpbmcgdG8gdGhlIG1vdW50ZWQgZGV2aWNlJ3Mgc3VwZXIg
YmxvY2ssIGFuZCBpX2lubywKLSAqIHRoZSBudW1iZXIgb2YgdGhlIGlub2RlIHRvIGxvYWQuCi0g
KgotICogbnRmc19yZWFkX2xvY2tlZF9pbm9kZSgpIG1hcHMsIHBpbnMgYW5kIGxvY2tzIHRoZSBt
ZnQgcmVjb3JkIG51bWJlciBpX2lubwotICogZm9yIHJlYWRpbmcgYW5kIHNldHMgdXAgdGhlIG5l
Y2Vzc2FyeSBAdmkgZmllbGRzIGFzIHdlbGwgYXMgaW5pdGlhbGl6aW5nCi0gKiB0aGUgbnRmcyBp
bm9kZS4KLSAqCi0gKiBROiBXaGF0IGxvY2tzIGFyZSBoZWxkIHdoZW4gdGhlIGZ1bmN0aW9uIGlz
IGNhbGxlZD8KLSAqIEE6IGlfc3RhdGUgaGFzIElfTkVXIHNldCwgaGVuY2UgdGhlIGlub2RlIGlz
IGxvY2tlZCwgYWxzbwotICogICAgaV9jb3VudCBpcyBzZXQgdG8gMSwgc28gaXQgaXMgbm90IGdv
aW5nIHRvIGdvIGF3YXkKLSAqICAgIGlfZmxhZ3MgaXMgc2V0IHRvIDAgYW5kIHdlIGhhdmUgbm8g
YnVzaW5lc3MgdG91Y2hpbmcgaXQuICBPbmx5IGFuIGlvY3RsKCkKLSAqICAgIGlzIGFsbG93ZWQg
dG8gd3JpdGUgdG8gdGhlbS4gV2Ugc2hvdWxkIG9mIGNvdXJzZSBiZSBob25vdXJpbmcgdGhlbSBi
dXQKLSAqICAgIHdlIG5lZWQgdG8gZG8gdGhhdCB1c2luZyB0aGUgSVNfKiBtYWNyb3MgZGVmaW5l
ZCBpbiBpbmNsdWRlL2xpbnV4L2ZzLmguCi0gKiAgICBJbiBhbnkgY2FzZSBudGZzX3JlYWRfbG9j
a2VkX2lub2RlKCkgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBpX2ZsYWdzLgotICoKLSAqIFJldHVy
biAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4gIEluIHRoZSBlcnJvciBjYXNlLCB0
aGUgaW5vZGUgd2lsbAotICogaGF2ZSBoYWQgbWFrZV9iYWRfaW5vZGUoKSBleGVjdXRlZCBvbiBp
dC4KLSAqLwotc3RhdGljIGludCBudGZzX3JlYWRfbG9ja2VkX2lub2RlKHN0cnVjdCBpbm9kZSAq
dmkpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9IE5URlNfU0IodmktPmlfc2IpOwotCW50ZnNfaW5v
ZGUgKm5pOwotCXN0cnVjdCBpbm9kZSAqYnZpOwotCU1GVF9SRUNPUkQgKm07Ci0JQVRUUl9SRUNP
UkQgKmE7Ci0JU1RBTkRBUkRfSU5GT1JNQVRJT04gKnNpOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4
ICpjdHg7Ci0JaW50IGVyciA9IDA7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZyBmb3IgaV9pbm8g
MHglbHguIiwgdmktPmlfaW5vKTsKLQotCS8qIFNldHVwIHRoZSBnZW5lcmljIHZmcyBpbm9kZSBw
YXJ0cyBub3cuICovCi0JdmktPmlfdWlkID0gdm9sLT51aWQ7Ci0JdmktPmlfZ2lkID0gdm9sLT5n
aWQ7Ci0JdmktPmlfbW9kZSA9IDA7Ci0KLQkvKgotCSAqIEluaXRpYWxpemUgdGhlIG50ZnMgc3Bl
Y2lmaWMgcGFydCBvZiBAdmkgc3BlY2lhbCBjYXNpbmcKLQkgKiBGSUxFX01GVCB3aGljaCB3ZSBu
ZWVkIHRvIGRvIGF0IG1vdW50IHRpbWUuCi0JICovCi0JaWYgKHZpLT5pX2lubyAhPSBGSUxFX01G
VCkKLQkJbnRmc19pbml0X2JpZ19pbm9kZSh2aSk7Ci0JbmkgPSBOVEZTX0kodmkpOwotCi0JbSA9
IG1hcF9tZnRfcmVjb3JkKG5pKTsKLQlpZiAoSVNfRVJSKG0pKSB7Ci0JCWVyciA9IFBUUl9FUlIo
bSk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4
KG5pLCBtKTsKLQlpZiAoIWN0eCkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIHVubV9lcnJf
b3V0OwotCX0KLQotCWlmICghKG0tPmZsYWdzICYgTUZUX1JFQ09SRF9JTl9VU0UpKSB7Ci0JCW50
ZnNfZXJyb3IodmktPmlfc2IsICJJbm9kZSBpcyBub3QgaW4gdXNlISIpOwotCQlnb3RvIHVubV9l
cnJfb3V0OwotCX0KLQlpZiAobS0+YmFzZV9tZnRfcmVjb3JkKSB7Ci0JCW50ZnNfZXJyb3Iodmkt
Pmlfc2IsICJJbm9kZSBpcyBhbiBleHRlbnQgaW5vZGUhIik7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7
Ci0JfQotCi0JLyogVHJhbnNmZXIgaW5mb3JtYXRpb24gZnJvbSBtZnQgcmVjb3JkIGludG8gdmZz
IGFuZCBudGZzIGlub2Rlcy4gKi8KLQl2aS0+aV9nZW5lcmF0aW9uID0gbmktPnNlcV9ubyA9IGxl
MTZfdG9fY3B1KG0tPnNlcXVlbmNlX251bWJlcik7Ci0KLQkvKgotCSAqIEZJWE1FOiBLZWVwIGlu
IG1pbmQgdGhhdCBsaW5rX2NvdW50IGlzIHR3byBmb3IgZmlsZXMgd2hpY2ggaGF2ZSBib3RoCi0J
ICogYSBsb25nIGZpbGUgbmFtZSBhbmQgYSBzaG9ydCBmaWxlIG5hbWUgYXMgc2VwYXJhdGUgZW50
cmllcywgc28gaWYKLQkgKiB3ZSBhcmUgaGlkaW5nIHNob3J0IGZpbGUgbmFtZXMgdGhpcyB3aWxs
IGJlIHRvbyBoaWdoLiBFaXRoZXIgd2UgbmVlZAotCSAqIHRvIGFjY291bnQgZm9yIHRoZSBzaG9y
dCBmaWxlIG5hbWVzIGJ5IHN1YnRyYWN0aW5nIHRoZW0gb3Igd2UgbmVlZAotCSAqIHRvIG1ha2Ug
c3VyZSB3ZSBkZWxldGUgZmlsZXMgZXZlbiB0aG91Z2ggaV9ubGluayBpcyBub3QgemVybyB3aGlj
aAotCSAqIG1pZ2h0IGJlIHRyaWNreSBkdWUgdG8gdmZzIGludGVyYWN0aW9ucy4gTmVlZCB0byB0
aGluayBhYm91dCB0aGlzCi0JICogc29tZSBtb3JlIHdoZW4gaW1wbGVtZW50aW5nIHRoZSB1bmxp
bmsgY29tbWFuZC4KLQkgKi8KLQlzZXRfbmxpbmsodmksIGxlMTZfdG9fY3B1KG0tPmxpbmtfY291
bnQpKTsKLQkvKgotCSAqIEZJWE1FOiBSZXBhcnNlIHBvaW50cyBjYW4gaGF2ZSB0aGUgZGlyZWN0
b3J5IGJpdCBzZXQgZXZlbiB0aG91Z2gKLQkgKiB0aGV5IHdvdWxkIGJlIFNfSUZMTksuIE5lZWQg
dG8gZGVhbCB3aXRoIHRoaXMgZnVydGhlciBiZWxvdyB3aGVuIHdlCi0JICogaW1wbGVtZW50IHJl
cGFyc2UgcG9pbnRzIC8gc3ltYm9saWMgbGlua3MgYnV0IGl0IHdpbGwgZG8gZm9yIG5vdy4KLQkg
KiBBbHNvIGlmIG5vdCBhIGRpcmVjdG9yeSwgaXQgY291bGQgYmUgc29tZXRoaW5nIGVsc2UsIHJh
dGhlciB0aGFuCi0JICogYSByZWd1bGFyIGZpbGUuIEJ1dCBhZ2Fpbiwgd2lsbCBkbyBmb3Igbm93
LgotCSAqLwotCS8qIEV2ZXJ5b25lIGdldHMgYWxsIHBlcm1pc3Npb25zLiAqLwotCXZpLT5pX21v
ZGUgfD0gU19JUldYVUdPOwotCS8qIElmIHJlYWQtb25seSwgbm8gb25lIGdldHMgd3JpdGUgcGVy
bWlzc2lvbnMuICovCi0JaWYgKElTX1JET05MWSh2aSkpCi0JCXZpLT5pX21vZGUgJj0gflNfSVdV
R087Ci0JaWYgKG0tPmZsYWdzICYgTUZUX1JFQ09SRF9JU19ESVJFQ1RPUlkpIHsKLQkJdmktPmlf
bW9kZSB8PSBTX0lGRElSOwotCQkvKgotCQkgKiBBcHBseSB0aGUgZGlyZWN0b3J5IHBlcm1pc3Np
b25zIG1hc2sgc2V0IGluIHRoZSBtb3VudAotCQkgKiBvcHRpb25zLgotCQkgKi8KLQkJdmktPmlf
bW9kZSAmPSB+dm9sLT5kbWFzazsKLQkJLyogVGhpbmdzIGJyZWFrIHdpdGhvdXQgdGhpcyBrbHVk
Z2UhICovCi0JCWlmICh2aS0+aV9ubGluayA+IDEpCi0JCQlzZXRfbmxpbmsodmksIDEpOwotCX0g
ZWxzZSB7Ci0JCXZpLT5pX21vZGUgfD0gU19JRlJFRzsKLQkJLyogQXBwbHkgdGhlIGZpbGUgcGVy
bWlzc2lvbnMgbWFzayBzZXQgaW4gdGhlIG1vdW50IG9wdGlvbnMuICovCi0JCXZpLT5pX21vZGUg
Jj0gfnZvbC0+Zm1hc2s7Ci0JfQotCS8qCi0JICogRmluZCB0aGUgc3RhbmRhcmQgaW5mb3JtYXRp
b24gYXR0cmlidXRlIGluIHRoZSBtZnQgcmVjb3JkLiBBdCB0aGlzCi0JICogc3RhZ2Ugd2UgaGF2
ZW4ndCBzZXR1cCB0aGUgYXR0cmlidXRlIGxpc3Qgc3R1ZmYgeWV0LCBzbyB0aGlzIGNvdWxkCi0J
ICogaW4gZmFjdCBmYWlsIGlmIHRoZSBzdGFuZGFyZCBpbmZvcm1hdGlvbiBpcyBpbiBhbiBleHRl
bnQgcmVjb3JkLCBidXQKLQkgKiBJIGRvbid0IHRoaW5rIHRoaXMgYWN0dWFsbHkgZXZlciBoYXBw
ZW5zLgotCSAqLwotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfU1RBTkRBUkRfSU5GT1JNQVRJ
T04sIE5VTEwsIDAsIDAsIDAsIE5VTEwsIDAsCi0JCQljdHgpOwotCWlmICh1bmxpa2VseShlcnIp
KSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkgewotCQkJLyoKLQkJCSAqIFRPRE86IFdlIHNob3Vs
ZCBiZSBwZXJmb3JtaW5nIGEgaG90IGZpeCBoZXJlIChpZiB0aGUKLQkJCSAqIHJlY292ZXIgbW91
bnQgb3B0aW9uIGlzIHNldCkgYnkgY3JlYXRpbmcgYSBuZXcKLQkJCSAqIGF0dHJpYnV0ZS4KLQkJ
CSAqLwotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRTVEFOREFSRF9JTkZPUk1BVElPTiBhdHRy
aWJ1dGUgIgotCQkJCQkiaXMgbWlzc2luZy4iKTsKLQkJfQotCQlnb3RvIHVubV9lcnJfb3V0Owot
CX0KLQlhID0gY3R4LT5hdHRyOwotCS8qIEdldCB0aGUgc3RhbmRhcmQgaW5mb3JtYXRpb24gYXR0
cmlidXRlIHZhbHVlLiAqLwotCWlmICgodTggKilhICsgbGUxNl90b19jcHUoYS0+ZGF0YS5yZXNp
ZGVudC52YWx1ZV9vZmZzZXQpCi0JCQkrIGxlMzJfdG9fY3B1KGEtPmRhdGEucmVzaWRlbnQudmFs
dWVfbGVuZ3RoKSA+Ci0JCQkodTggKiljdHgtPm1yZWMgKyB2b2wtPm1mdF9yZWNvcmRfc2l6ZSkg
ewotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiQ29ycnVwdCBzdGFuZGFyZCBpbmZvcm1hdGlvbiBh
dHRyaWJ1dGUgaW4gaW5vZGUuIik7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCXNpID0gKFNU
QU5EQVJEX0lORk9STUFUSU9OKikoKHU4KilhICsKLQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEucmVz
aWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0KLQkvKiBUcmFuc2ZlciBpbmZvcm1hdGlvbiBmcm9tIHRo
ZSBzdGFuZGFyZCBpbmZvcm1hdGlvbiBpbnRvIHZpLiAqLwotCS8qCi0JICogTm90ZTogVGhlIGlf
P3RpbWVzIGRvIG5vdCBxdWl0ZSBtYXAgcGVyZmVjdGx5IG9udG8gdGhlIE5URlMgdGltZXMsCi0J
ICogYnV0IHRoZXkgYXJlIGNsb3NlIGVub3VnaCwgYW5kIGluIHRoZSBlbmQgaXQgZG9lc24ndCBy
ZWFsbHkgbWF0dGVyCi0JICogdGhhdCBtdWNoLi4uCi0JICovCi0JLyoKLQkgKiBtdGltZSBpcyB0
aGUgbGFzdCBjaGFuZ2Ugb2YgdGhlIGRhdGEgd2l0aGluIHRoZSBmaWxlLiBOb3QgY2hhbmdlZAot
CSAqIHdoZW4gb25seSBtZXRhZGF0YSBpcyBjaGFuZ2VkLCBlLmcuIGEgcmVuYW1lIGRvZXNuJ3Qg
YWZmZWN0IG10aW1lLgotCSAqLwotCWlub2RlX3NldF9tdGltZV90b190cyh2aSwgbnRmczJ1dGMo
c2ktPmxhc3RfZGF0YV9jaGFuZ2VfdGltZSkpOwotCS8qCi0JICogY3RpbWUgaXMgdGhlIGxhc3Qg
Y2hhbmdlIG9mIHRoZSBtZXRhZGF0YSBvZiB0aGUgZmlsZS4gVGhpcyBvYnZpb3VzbHkKLQkgKiBh
bHdheXMgY2hhbmdlcywgd2hlbiBtdGltZSBpcyBjaGFuZ2VkLiBjdGltZSBjYW4gYmUgY2hhbmdl
ZCBvbiBpdHMKLQkgKiBvd24sIG10aW1lIGlzIHRoZW4gbm90IGNoYW5nZWQsIGUuZy4gd2hlbiBh
IGZpbGUgaXMgcmVuYW1lZC4KLQkgKi8KLQlpbm9kZV9zZXRfY3RpbWVfdG9fdHModmksIG50ZnMy
dXRjKHNpLT5sYXN0X21mdF9jaGFuZ2VfdGltZSkpOwotCS8qCi0JICogTGFzdCBhY2Nlc3MgdG8g
dGhlIGRhdGEgd2l0aGluIHRoZSBmaWxlLiBOb3QgY2hhbmdlZCBkdXJpbmcgYSByZW5hbWUKLQkg
KiBmb3IgZXhhbXBsZSBidXQgY2hhbmdlZCB3aGVuZXZlciB0aGUgZmlsZSBpcyB3cml0dGVuIHRv
LgotCSAqLwotCWlub2RlX3NldF9hdGltZV90b190cyh2aSwgbnRmczJ1dGMoc2ktPmxhc3RfYWNj
ZXNzX3RpbWUpKTsKLQotCS8qIEZpbmQgdGhlIGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBpZiBw
cmVzZW50LiAqLwotCW50ZnNfYXR0cl9yZWluaXRfc2VhcmNoX2N0eChjdHgpOwotCWVyciA9IG50
ZnNfYXR0cl9sb29rdXAoQVRfQVRUUklCVVRFX0xJU1QsIE5VTEwsIDAsIDAsIDAsIE5VTEwsIDAs
IGN0eCk7Ci0JaWYgKGVycikgewotCQlpZiAodW5saWtlbHkoZXJyICE9IC1FTk9FTlQpKSB7Ci0J
CQludGZzX2Vycm9yKHZpLT5pX3NiLCAiRmFpbGVkIHRvIGxvb2t1cCBhdHRyaWJ1dGUgbGlzdCAi
Ci0JCQkJCSJhdHRyaWJ1dGUuIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0OwotCQl9Ci0JfSBlbHNl
IC8qIGlmICghZXJyKSAqLyB7Ci0JCWlmICh2aS0+aV9pbm8gPT0gRklMRV9NRlQpCi0JCQlnb3Rv
IHNraXBfYXR0cl9saXN0X2xvYWQ7Ci0JCW50ZnNfZGVidWcoIkF0dHJpYnV0ZSBsaXN0IGZvdW5k
IGluIGlub2RlIDB4JWx4LiIsIHZpLT5pX2lubyk7Ci0JCU5Jbm9TZXRBdHRyTGlzdChuaSk7Ci0J
CWEgPSBjdHgtPmF0dHI7Ci0JCWlmIChhLT5mbGFncyAmIEFUVFJfQ09NUFJFU1NJT05fTUFTSykg
ewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBpcyAi
Ci0JCQkJCSJjb21wcmVzc2VkLiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlpZiAo
YS0+ZmxhZ3MgJiBBVFRSX0lTX0VOQ1JZUFRFRCB8fAotCQkJCWEtPmZsYWdzICYgQVRUUl9JU19T
UEFSU0UpIHsKLQkJCWlmIChhLT5ub25fcmVzaWRlbnQpIHsKLQkJCQludGZzX2Vycm9yKHZpLT5p
X3NiLCAiTm9uLXJlc2lkZW50IGF0dHJpYnV0ZSAiCi0JCQkJCQkibGlzdCBhdHRyaWJ1dGUgaXMg
ZW5jcnlwdGVkLyIKLQkJCQkJCSJzcGFyc2UuIik7Ci0JCQkJZ290byB1bm1fZXJyX291dDsKLQkJ
CX0KLQkJCW50ZnNfd2FybmluZyh2aS0+aV9zYiwgIlJlc2lkZW50IGF0dHJpYnV0ZSBsaXN0ICIK
LQkJCQkJImF0dHJpYnV0ZSBpbiBpbm9kZSAweCVseCBpcyBtYXJrZWQgIgotCQkJCQkiZW5jcnlw
dGVkL3NwYXJzZSB3aGljaCBpcyBub3QgdHJ1ZS4gICIKLQkJCQkJIkhvd2V2ZXIsIFdpbmRvd3Mg
YWxsb3dzIHRoaXMgYW5kICIKLQkJCQkJImNoa2RzayBkb2VzIG5vdCBkZXRlY3Qgb3IgY29ycmVj
dCBpdCAiCi0JCQkJCSJzbyB3ZSB3aWxsIGp1c3QgaWdub3JlIHRoZSBpbnZhbGlkICIKLQkJCQkJ
ImZsYWdzIGFuZCBwcmV0ZW5kIHRoZXkgYXJlIG5vdCBzZXQuIiwKLQkJCQkJdmktPmlfaW5vKTsK
LQkJfQotCQkvKiBOb3cgYWxsb2NhdGUgbWVtb3J5IGZvciB0aGUgYXR0cmlidXRlIGxpc3QuICov
Ci0JCW5pLT5hdHRyX2xpc3Rfc2l6ZSA9ICh1MzIpbnRmc19hdHRyX3NpemUoYSk7Ci0JCW5pLT5h
dHRyX2xpc3QgPSBudGZzX21hbGxvY19ub2ZzKG5pLT5hdHRyX2xpc3Rfc2l6ZSk7Ci0JCWlmICgh
bmktPmF0dHJfbGlzdCkgewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIk5vdCBlbm91Z2ggbWVt
b3J5IHRvIGFsbG9jYXRlICIKLQkJCQkJImJ1ZmZlciBmb3IgYXR0cmlidXRlIGxpc3QuIik7Ci0J
CQllcnIgPSAtRU5PTUVNOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlpZiAoYS0+bm9u
X3Jlc2lkZW50KSB7Ci0JCQlOSW5vU2V0QXR0ckxpc3ROb25SZXNpZGVudChuaSk7Ci0JCQlpZiAo
YS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3ZjbikgewotCQkJCW50ZnNfZXJyb3IodmktPmlf
c2IsICJBdHRyaWJ1dGUgbGlzdCBoYXMgbm9uICIKLQkJCQkJCSJ6ZXJvIGxvd2VzdF92Y24uIik7
Ci0JCQkJZ290byB1bm1fZXJyX291dDsKLQkJCX0KLQkJCS8qCi0JCQkgKiBTZXR1cCB0aGUgcnVu
bGlzdC4gTm8gbmVlZCBmb3IgbG9ja2luZyBhcyB3ZSBoYXZlCi0JCQkgKiBleGNsdXNpdmUgYWNj
ZXNzIHRvIHRoZSBpbm9kZSBhdCB0aGlzIHRpbWUuCi0JCQkgKi8KLQkJCW5pLT5hdHRyX2xpc3Rf
cmwucmwgPSBudGZzX21hcHBpbmdfcGFpcnNfZGVjb21wcmVzcyh2b2wsCi0JCQkJCWEsIE5VTEwp
OwotCQkJaWYgKElTX0VSUihuaS0+YXR0cl9saXN0X3JsLnJsKSkgewotCQkJCWVyciA9IFBUUl9F
UlIobmktPmF0dHJfbGlzdF9ybC5ybCk7Ci0JCQkJbmktPmF0dHJfbGlzdF9ybC5ybCA9IE5VTEw7
Ci0JCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIk1hcHBpbmcgcGFpcnMgIgotCQkJCQkJImRlY29t
cHJlc3Npb24gZmFpbGVkLiIpOwotCQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCQl9Ci0JCQkvKiBO
b3cgbG9hZCB0aGUgYXR0cmlidXRlIGxpc3QuICovCi0JCQlpZiAoKGVyciA9IGxvYWRfYXR0cmli
dXRlX2xpc3Qodm9sLCAmbmktPmF0dHJfbGlzdF9ybCwKLQkJCQkJbmktPmF0dHJfbGlzdCwgbmkt
PmF0dHJfbGlzdF9zaXplLAotCQkJCQlzbGU2NF90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQu
Ci0JCQkJCWluaXRpYWxpemVkX3NpemUpKSkpIHsKLQkJCQludGZzX2Vycm9yKHZpLT5pX3NiLCAi
RmFpbGVkIHRvIGxvYWQgIgotCQkJCQkJImF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZS4iKTsKLQkJ
CQlnb3RvIHVubV9lcnJfb3V0OwotCQkJfQotCQl9IGVsc2UgLyogaWYgKCFhLT5ub25fcmVzaWRl
bnQpICovIHsKLQkJCWlmICgodTgqKWEgKyBsZTE2X3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZh
bHVlX29mZnNldCkKLQkJCQkJKyBsZTMyX3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5yZXNpZGVudC52
YWx1ZV9sZW5ndGgpID4KLQkJCQkJKHU4KiljdHgtPm1yZWMgKyB2b2wtPm1mdF9yZWNvcmRfc2l6
ZSkgewotCQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJDb3JydXB0IGF0dHJpYnV0ZSBsaXN0ICIK
LQkJCQkJCSJpbiBpbm9kZS4iKTsKLQkJCQlnb3RvIHVubV9lcnJfb3V0OwotCQkJfQotCQkJLyog
Tm93IGNvcHkgdGhlIGF0dHJpYnV0ZSBsaXN0LiAqLwotCQkJbWVtY3B5KG5pLT5hdHRyX2xpc3Qs
ICh1OCopYSArIGxlMTZfdG9fY3B1KAotCQkJCQlhLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNl
dCksCi0JCQkJCWxlMzJfdG9fY3B1KAotCQkJCQlhLT5kYXRhLnJlc2lkZW50LnZhbHVlX2xlbmd0
aCkpOwotCQl9Ci0JfQotc2tpcF9hdHRyX2xpc3RfbG9hZDoKLQkvKgotCSAqIElmIGFuIGF0dHJp
YnV0ZSBsaXN0IGlzIHByZXNlbnQgd2Ugbm93IGhhdmUgdGhlIGF0dHJpYnV0ZSBsaXN0IHZhbHVl
Ci0JICogaW4gbnRmc19pbm8tPmF0dHJfbGlzdCBhbmQgaXQgaXMgbnRmc19pbm8tPmF0dHJfbGlz
dF9zaXplIGJ5dGVzLgotCSAqLwotCWlmIChTX0lTRElSKHZpLT5pX21vZGUpKSB7Ci0JCWxvZmZf
dCBidmlfc2l6ZTsKLQkJbnRmc19pbm9kZSAqYm5pOwotCQlJTkRFWF9ST09UICppcjsKLQkJdTgg
KmlyX2VuZCwgKmluZGV4X2VuZDsKLQotCQkvKiBJdCBpcyBhIGRpcmVjdG9yeSwgZmluZCBpbmRl
eCByb290IGF0dHJpYnV0ZS4gKi8KLQkJbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4KGN0eCk7
Ci0JCWVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfSU5ERVhfUk9PVCwgSTMwLCA0LCBDQVNFX1NF
TlNJVElWRSwKLQkJCQkwLCBOVUxMLCAwLCBjdHgpOwotCQlpZiAodW5saWtlbHkoZXJyKSkgewot
CQkJaWYgKGVyciA9PSAtRU5PRU5UKSB7Ci0JCQkJLy8gRklYTUU6IEZpbGUgaXMgY29ycnVwdCEg
SG90LWZpeCB3aXRoIGVtcHR5Ci0JCQkJLy8gaW5kZXggcm9vdCBhdHRyaWJ1dGUgaWYgcmVjb3Zl
cnkgb3B0aW9uIGlzCi0JCQkJLy8gc2V0LgotCQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICIkSU5E
RVhfUk9PVCBhdHRyaWJ1dGUgIgotCQkJCQkJImlzIG1pc3NpbmcuIik7Ci0JCQl9Ci0JCQlnb3Rv
IHVubV9lcnJfb3V0OwotCQl9Ci0JCWEgPSBjdHgtPmF0dHI7Ci0JCS8qIFNldCB1cCB0aGUgc3Rh
dGUuICovCi0JCWlmICh1bmxpa2VseShhLT5ub25fcmVzaWRlbnQpKSB7Ci0JCQludGZzX2Vycm9y
KHZvbC0+c2IsICIkSU5ERVhfUk9PVCBhdHRyaWJ1dGUgaXMgbm90ICIKLQkJCQkJInJlc2lkZW50
LiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQkvKiBFbnN1cmUgdGhlIGF0dHJpYnV0
ZSBuYW1lIGlzIHBsYWNlZCBiZWZvcmUgdGhlIHZhbHVlLiAqLwotCQlpZiAodW5saWtlbHkoYS0+
bmFtZV9sZW5ndGggJiYgKGxlMTZfdG9fY3B1KGEtPm5hbWVfb2Zmc2V0KSA+PQotCQkJCWxlMTZf
dG9fY3B1KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSkpKSB7Ci0JCQludGZzX2Vycm9y
KHZvbC0+c2IsICIkSU5ERVhfUk9PVCBhdHRyaWJ1dGUgbmFtZSBpcyAiCi0JCQkJCSJwbGFjZWQg
YWZ0ZXIgdGhlIGF0dHJpYnV0ZSB2YWx1ZS4iKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCX0K
LQkJLyoKLQkJICogQ29tcHJlc3NlZC9lbmNyeXB0ZWQgaW5kZXggcm9vdCBqdXN0IG1lYW5zIHRo
YXQgdGhlIG5ld2x5Ci0JCSAqIGNyZWF0ZWQgZmlsZXMgaW4gdGhhdCBkaXJlY3Rvcnkgc2hvdWxk
IGJlIGNyZWF0ZWQgY29tcHJlc3NlZC8KLQkJICogZW5jcnlwdGVkLiBIb3dldmVyIGluZGV4IHJv
b3QgY2Fubm90IGJlIGJvdGggY29tcHJlc3NlZCBhbmQKLQkJICogZW5jcnlwdGVkLgotCQkgKi8K
LQkJaWYgKGEtPmZsYWdzICYgQVRUUl9DT01QUkVTU0lPTl9NQVNLKQotCQkJTklub1NldENvbXBy
ZXNzZWQobmkpOwotCQlpZiAoYS0+ZmxhZ3MgJiBBVFRSX0lTX0VOQ1JZUFRFRCkgewotCQkJaWYg
KGEtPmZsYWdzICYgQVRUUl9DT01QUkVTU0lPTl9NQVNLKSB7Ci0JCQkJbnRmc19lcnJvcih2aS0+
aV9zYiwgIkZvdW5kIGVuY3J5cHRlZCBhbmQgIgotCQkJCQkJImNvbXByZXNzZWQgYXR0cmlidXRl
LiIpOwotCQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCQl9Ci0JCQlOSW5vU2V0RW5jcnlwdGVkKG5p
KTsKLQkJfQotCQlpZiAoYS0+ZmxhZ3MgJiBBVFRSX0lTX1NQQVJTRSkKLQkJCU5Jbm9TZXRTcGFy
c2UobmkpOwotCQlpciA9IChJTkRFWF9ST09UKikoKHU4KilhICsKLQkJCQlsZTE2X3RvX2NwdShh
LT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkpOwotCQlpcl9lbmQgPSAodTgqKWlyICsgbGUz
Ml90b19jcHUoYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9sZW5ndGgpOwotCQlpZiAoaXJfZW5kID4g
KHU4KiljdHgtPm1yZWMgKyB2b2wtPm1mdF9yZWNvcmRfc2l6ZSkgewotCQkJbnRmc19lcnJvcih2
aS0+aV9zYiwgIiRJTkRFWF9ST09UIGF0dHJpYnV0ZSBpcyAiCi0JCQkJCSJjb3JydXB0LiIpOwot
CQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlpbmRleF9lbmQgPSAodTgqKSZpci0+aW5kZXgg
KwotCQkJCWxlMzJfdG9fY3B1KGlyLT5pbmRleC5pbmRleF9sZW5ndGgpOwotCQlpZiAoaW5kZXhf
ZW5kID4gaXJfZW5kKSB7Ci0JCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiRGlyZWN0b3J5IGluZGV4
IGlzIGNvcnJ1cHQuIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0OwotCQl9Ci0JCWlmIChpci0+dHlw
ZSAhPSBBVF9GSUxFX05BTUUpIHsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJJbmRleGVkIGF0
dHJpYnV0ZSBpcyBub3QgIgotCQkJCQkiJEZJTEVfTkFNRS4iKTsKLQkJCWdvdG8gdW5tX2Vycl9v
dXQ7Ci0JCX0KLQkJaWYgKGlyLT5jb2xsYXRpb25fcnVsZSAhPSBDT0xMQVRJT05fRklMRV9OQU1F
KSB7Ci0JCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiSW5kZXggY29sbGF0aW9uIHJ1bGUgaXMgbm90
ICIKLQkJCQkJIkNPTExBVElPTl9GSUxFX05BTUUuIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0Owot
CQl9Ci0JCW5pLT5pdHlwZS5pbmRleC5jb2xsYXRpb25fcnVsZSA9IGlyLT5jb2xsYXRpb25fcnVs
ZTsKLQkJbmktPml0eXBlLmluZGV4LmJsb2NrX3NpemUgPSBsZTMyX3RvX2NwdShpci0+aW5kZXhf
YmxvY2tfc2l6ZSk7Ci0JCWlmIChuaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSAmCi0JCQkJKG5p
LT5pdHlwZS5pbmRleC5ibG9ja19zaXplIC0gMSkpIHsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2Is
ICJJbmRleCBibG9jayBzaXplICgldSkgaXMgbm90IGEgIgotCQkJCQkicG93ZXIgb2YgdHdvLiIs
Ci0JCQkJCW5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7
Ci0JCX0KLQkJaWYgKG5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplID4gUEFHRV9TSVpFKSB7Ci0J
CQludGZzX2Vycm9yKHZpLT5pX3NiLCAiSW5kZXggYmxvY2sgc2l6ZSAoJXUpID4gIgotCQkJCQki
UEFHRV9TSVpFICglbGQpIGlzIG5vdCAiCi0JCQkJCSJzdXBwb3J0ZWQuICBTb3JyeS4iLAotCQkJ
CQluaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSwKLQkJCQkJUEFHRV9TSVpFKTsKLQkJCWVyciA9
IC1FT1BOT1RTVVBQOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlpZiAobmktPml0eXBl
LmluZGV4LmJsb2NrX3NpemUgPCBOVEZTX0JMT0NLX1NJWkUpIHsKLQkJCW50ZnNfZXJyb3Iodmkt
Pmlfc2IsICJJbmRleCBibG9jayBzaXplICgldSkgPCAiCi0JCQkJCSJOVEZTX0JMT0NLX1NJWkUg
KCVpKSBpcyBub3QgIgotCQkJCQkic3VwcG9ydGVkLiAgU29ycnkuIiwKLQkJCQkJbmktPml0eXBl
LmluZGV4LmJsb2NrX3NpemUsCi0JCQkJCU5URlNfQkxPQ0tfU0laRSk7Ci0JCQllcnIgPSAtRU9Q
Tk9UU1VQUDsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCX0KLQkJbmktPml0eXBlLmluZGV4LmJs
b2NrX3NpemVfYml0cyA9Ci0JCQkJZmZzKG5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplKSAtIDE7
Ci0JCS8qIERldGVybWluZSB0aGUgc2l6ZSBvZiBhIHZjbiBpbiB0aGUgZGlyZWN0b3J5IGluZGV4
LiAqLwotCQlpZiAodm9sLT5jbHVzdGVyX3NpemUgPD0gbmktPml0eXBlLmluZGV4LmJsb2NrX3Np
emUpIHsKLQkJCW5pLT5pdHlwZS5pbmRleC52Y25fc2l6ZSA9IHZvbC0+Y2x1c3Rlcl9zaXplOwot
CQkJbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPSB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRz
OwotCQl9IGVsc2UgewotCQkJbmktPml0eXBlLmluZGV4LnZjbl9zaXplID0gdm9sLT5zZWN0b3Jf
c2l6ZTsKLQkJCW5pLT5pdHlwZS5pbmRleC52Y25fc2l6ZV9iaXRzID0gdm9sLT5zZWN0b3Jfc2l6
ZV9iaXRzOwotCQl9Ci0KLQkJLyogU2V0dXAgdGhlIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRl
LCBldmVuIGlmIG5vdCBwcmVzZW50LiAqLwotCQlOSW5vU2V0TXN0UHJvdGVjdGVkKG5pKTsKLQkJ
bmktPnR5cGUgPSBBVF9JTkRFWF9BTExPQ0FUSU9OOwotCQluaS0+bmFtZSA9IEkzMDsKLQkJbmkt
Pm5hbWVfbGVuID0gNDsKLQotCQlpZiAoIShpci0+aW5kZXguZmxhZ3MgJiBMQVJHRV9JTkRFWCkp
IHsKLQkJCS8qIE5vIGluZGV4IGFsbG9jYXRpb24uICovCi0JCQl2aS0+aV9zaXplID0gbmktPmlu
aXRpYWxpemVkX3NpemUgPQotCQkJCQluaS0+YWxsb2NhdGVkX3NpemUgPSAwOwotCQkJLyogV2Ug
YXJlIGRvbmUgd2l0aCB0aGUgbWZ0IHJlY29yZCwgc28gd2UgcmVsZWFzZSBpdC4gKi8KLQkJCW50
ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCQkJdW5tYXBfbWZ0X3JlY29yZChuaSk7Ci0J
CQltID0gTlVMTDsKLQkJCWN0eCA9IE5VTEw7Ci0JCQlnb3RvIHNraXBfbGFyZ2VfZGlyX3N0dWZm
OwotCQl9IC8qIExBUkdFX0lOREVYOiBJbmRleCBhbGxvY2F0aW9uIHByZXNlbnQuIFNldHVwIHN0
YXRlLiAqLwotCQlOSW5vU2V0SW5kZXhBbGxvY1ByZXNlbnQobmkpOwotCQkvKiBGaW5kIGluZGV4
IGFsbG9jYXRpb24gYXR0cmlidXRlLiAqLwotCQludGZzX2F0dHJfcmVpbml0X3NlYXJjaF9jdHgo
Y3R4KTsKLQkJZXJyID0gbnRmc19hdHRyX2xvb2t1cChBVF9JTkRFWF9BTExPQ0FUSU9OLCBJMzAs
IDQsCi0JCQkJQ0FTRV9TRU5TSVRJVkUsIDAsIE5VTEwsIDAsIGN0eCk7Ci0JCWlmICh1bmxpa2Vs
eShlcnIpKSB7Ci0JCQlpZiAoZXJyID09IC1FTk9FTlQpCi0JCQkJbnRmc19lcnJvcih2aS0+aV9z
YiwgIiRJTkRFWF9BTExPQ0FUSU9OICIKLQkJCQkJCSJhdHRyaWJ1dGUgaXMgbm90IHByZXNlbnQg
YnV0ICIKLQkJCQkJCSIkSU5ERVhfUk9PVCBpbmRpY2F0ZWQgaXQgaXMuIik7Ci0JCQllbHNlCi0J
CQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZhaWxlZCB0byBsb29rdXAgIgotCQkJCQkJIiRJTkRF
WF9BTExPQ0FUSU9OICIKLQkJCQkJCSJhdHRyaWJ1dGUuIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0
OwotCQl9Ci0JCWEgPSBjdHgtPmF0dHI7Ci0JCWlmICghYS0+bm9uX3Jlc2lkZW50KSB7Ci0JCQlu
dGZzX2Vycm9yKHZpLT5pX3NiLCAiJElOREVYX0FMTE9DQVRJT04gYXR0cmlidXRlICIKLQkJCQkJ
ImlzIHJlc2lkZW50LiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQkvKgotCQkgKiBF
bnN1cmUgdGhlIGF0dHJpYnV0ZSBuYW1lIGlzIHBsYWNlZCBiZWZvcmUgdGhlIG1hcHBpbmcgcGFp
cnMKLQkJICogYXJyYXkuCi0JCSAqLwotCQlpZiAodW5saWtlbHkoYS0+bmFtZV9sZW5ndGggJiYg
KGxlMTZfdG9fY3B1KGEtPm5hbWVfb2Zmc2V0KSA+PQotCQkJCWxlMTZfdG9fY3B1KAotCQkJCWEt
PmRhdGEubm9uX3Jlc2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0KSkpKSB7Ci0JCQludGZzX2Vy
cm9yKHZvbC0+c2IsICIkSU5ERVhfQUxMT0NBVElPTiBhdHRyaWJ1dGUgbmFtZSAiCi0JCQkJCSJp
cyBwbGFjZWQgYWZ0ZXIgdGhlIG1hcHBpbmcgcGFpcnMgIgotCQkJCQkiYXJyYXkuIik7Ci0JCQln
b3RvIHVubV9lcnJfb3V0OwotCQl9Ci0JCWlmIChhLT5mbGFncyAmIEFUVFJfSVNfRU5DUllQVEVE
KSB7Ci0JCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiJElOREVYX0FMTE9DQVRJT04gYXR0cmlidXRl
ICIKLQkJCQkJImlzIGVuY3J5cHRlZC4iKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCX0KLQkJ
aWYgKGEtPmZsYWdzICYgQVRUUl9JU19TUEFSU0UpIHsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2Is
ICIkSU5ERVhfQUxMT0NBVElPTiBhdHRyaWJ1dGUgIgotCQkJCQkiaXMgc3BhcnNlLiIpOwotCQkJ
Z290byB1bm1fZXJyX291dDsKLQkJfQotCQlpZiAoYS0+ZmxhZ3MgJiBBVFRSX0NPTVBSRVNTSU9O
X01BU0spIHsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICIkSU5ERVhfQUxMT0NBVElPTiBhdHRy
aWJ1dGUgIgotCQkJCQkiaXMgY29tcHJlc3NlZC4iKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0J
CX0KLQkJaWYgKGEtPmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92Y24pIHsKLQkJCW50ZnNfZXJy
b3IodmktPmlfc2IsICJGaXJzdCBleHRlbnQgb2YgIgotCQkJCQkiJElOREVYX0FMTE9DQVRJT04g
YXR0cmlidXRlIGhhcyBub24gIgotCQkJCQkiemVybyBsb3dlc3RfdmNuLiIpOwotCQkJZ290byB1
bm1fZXJyX291dDsKLQkJfQotCQl2aS0+aV9zaXplID0gc2xlNjRfdG9fY3B1KGEtPmRhdGEubm9u
X3Jlc2lkZW50LmRhdGFfc2l6ZSk7Ci0JCW5pLT5pbml0aWFsaXplZF9zaXplID0gc2xlNjRfdG9f
Y3B1KAotCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemUpOwotCQluaS0+
YWxsb2NhdGVkX3NpemUgPSBzbGU2NF90b19jcHUoCi0JCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQu
YWxsb2NhdGVkX3NpemUpOwotCQkvKgotCQkgKiBXZSBhcmUgZG9uZSB3aXRoIHRoZSBtZnQgcmVj
b3JkLCBzbyB3ZSByZWxlYXNlIGl0LiBPdGhlcndpc2UKLQkJICogd2Ugd291bGQgZGVhZGxvY2sg
aW4gbnRmc19hdHRyX2lnZXQoKS4KLQkJICovCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChj
dHgpOwotCQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLQkJbSA9IE5VTEw7Ci0JCWN0eCA9IE5VTEw7
Ci0JCS8qIEdldCB0aGUgaW5kZXggYml0bWFwIGF0dHJpYnV0ZSBpbm9kZS4gKi8KLQkJYnZpID0g
bnRmc19hdHRyX2lnZXQodmksIEFUX0JJVE1BUCwgSTMwLCA0KTsKLQkJaWYgKElTX0VSUihidmkp
KSB7Ci0JCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiRmFpbGVkIHRvIGdldCBiaXRtYXAgYXR0cmli
dXRlLiIpOwotCQkJZXJyID0gUFRSX0VSUihidmkpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJ
fQotCQlibmkgPSBOVEZTX0koYnZpKTsKLQkJaWYgKE5Jbm9Db21wcmVzc2VkKGJuaSkgfHwgTklu
b0VuY3J5cHRlZChibmkpIHx8Ci0JCQkJTklub1NwYXJzZShibmkpKSB7Ci0JCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiJEJJVE1BUCBhdHRyaWJ1dGUgaXMgY29tcHJlc3NlZCAiCi0JCQkJCSJhbmQv
b3IgZW5jcnlwdGVkIGFuZC9vciBzcGFyc2UuIik7Ci0JCQlnb3RvIGlwdXRfdW5tX2Vycl9vdXQ7
Ci0JCX0KLQkJLyogQ29uc2lzdGVuY3kgY2hlY2sgYml0bWFwIHNpemUgdnMuIGluZGV4IGFsbG9j
YXRpb24gc2l6ZS4gKi8KLQkJYnZpX3NpemUgPSBpX3NpemVfcmVhZChidmkpOwotCQlpZiAoKGJ2
aV9zaXplIDw8IDMpIDwgKHZpLT5pX3NpemUgPj4KLQkJCQluaS0+aXR5cGUuaW5kZXguYmxvY2tf
c2l6ZV9iaXRzKSkgewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkluZGV4IGJpdG1hcCB0b28g
c21hbGwgKDB4JWxseCkgIgotCQkJCQkiZm9yIGluZGV4IGFsbG9jYXRpb24gKDB4JWxseCkuIiwK
LQkJCQkJYnZpX3NpemUgPDwgMywgdmktPmlfc2l6ZSk7Ci0JCQlnb3RvIGlwdXRfdW5tX2Vycl9v
dXQ7Ci0JCX0KLQkJLyogTm8gbG9uZ2VyIG5lZWQgdGhlIGJpdG1hcCBhdHRyaWJ1dGUgaW5vZGUu
ICovCi0JCWlwdXQoYnZpKTsKLXNraXBfbGFyZ2VfZGlyX3N0dWZmOgotCQkvKiBTZXR1cCB0aGUg
b3BlcmF0aW9ucyBmb3IgdGhpcyBpbm9kZS4gKi8KLQkJdmktPmlfb3AgPSAmbnRmc19kaXJfaW5v
ZGVfb3BzOwotCQl2aS0+aV9mb3AgPSAmbnRmc19kaXJfb3BzOwotCQl2aS0+aV9tYXBwaW5nLT5h
X29wcyA9ICZudGZzX21zdF9hb3BzOwotCX0gZWxzZSB7Ci0JCS8qIEl0IGlzIGEgZmlsZS4gKi8K
LQkJbnRmc19hdHRyX3JlaW5pdF9zZWFyY2hfY3R4KGN0eCk7Ci0KLQkJLyogU2V0dXAgdGhlIGRh
dGEgYXR0cmlidXRlLCBldmVuIGlmIG5vdCBwcmVzZW50LiAqLwotCQluaS0+dHlwZSA9IEFUX0RB
VEE7Ci0JCW5pLT5uYW1lID0gTlVMTDsKLQkJbmktPm5hbWVfbGVuID0gMDsKLQotCQkvKiBGaW5k
IGZpcnN0IGV4dGVudCBvZiB0aGUgdW5uYW1lZCBkYXRhIGF0dHJpYnV0ZS4gKi8KLQkJZXJyID0g
bnRmc19hdHRyX2xvb2t1cChBVF9EQVRBLCBOVUxMLCAwLCAwLCAwLCBOVUxMLCAwLCBjdHgpOwot
CQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJdmktPmlfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9z
aXplID0KLQkJCQkJbmktPmFsbG9jYXRlZF9zaXplID0gMDsKLQkJCWlmIChlcnIgIT0gLUVOT0VO
VCkgewotCQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJGYWlsZWQgdG8gbG9va3VwICREQVRBICIK
LQkJCQkJCSJhdHRyaWJ1dGUuIik7Ci0JCQkJZ290byB1bm1fZXJyX291dDsKLQkJCX0KLQkJCS8q
Ci0JCQkgKiBGSUxFX1NlY3VyZSBkb2VzIG5vdCBoYXZlIGFuIHVubmFtZWQgJERBVEEKLQkJCSAq
IGF0dHJpYnV0ZSwgc28gd2Ugc3BlY2lhbCBjYXNlIGl0IGhlcmUuCi0JCQkgKi8KLQkJCWlmICh2
aS0+aV9pbm8gPT0gRklMRV9TZWN1cmUpCi0JCQkJZ290byBub19kYXRhX2F0dHJfc3BlY2lhbF9j
YXNlOwotCQkJLyoKLQkJCSAqIE1vc3QgaWYgbm90IGFsbCB0aGUgc3lzdGVtIGZpbGVzIGluIHRo
ZSAkRXh0ZW5kCi0JCQkgKiBzeXN0ZW0gZGlyZWN0b3J5IGRvIG5vdCBoYXZlIHVubmFtZWQgZGF0
YQotCQkJICogYXR0cmlidXRlcyBzbyB3ZSBuZWVkIHRvIGNoZWNrIGlmIHRoZSBwYXJlbnQKLQkJ
CSAqIGRpcmVjdG9yeSBvZiB0aGUgZmlsZSBpcyBGSUxFX0V4dGVuZCBhbmQgaWYgaXQgaXMKLQkJ
CSAqIGlnbm9yZSB0aGlzIGVycm9yLiBUbyBkbyB0aGlzIHdlIG5lZWQgdG8gZ2V0IHRoZQotCQkJ
ICogbmFtZSBvZiB0aGlzIGlub2RlIGZyb20gdGhlIG1mdCByZWNvcmQgYXMgdGhlIG5hbWUKLQkJ
CSAqIGNvbnRhaW5zIHRoZSBiYWNrIHJlZmVyZW5jZSB0byB0aGUgcGFyZW50IGRpcmVjdG9yeS4K
LQkJCSAqLwotCQkJaWYgKG50ZnNfaXNfZXh0ZW5kZWRfc3lzdGVtX2ZpbGUoY3R4KSA+IDApCi0J
CQkJZ290byBub19kYXRhX2F0dHJfc3BlY2lhbF9jYXNlOwotCQkJLy8gRklYTUU6IEZpbGUgaXMg
Y29ycnVwdCEgSG90LWZpeCB3aXRoIGVtcHR5IGRhdGEKLQkJCS8vIGF0dHJpYnV0ZSBpZiByZWNv
dmVyeSBvcHRpb24gaXMgc2V0LgotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiREQVRBIGF0dHJp
YnV0ZSBpcyBtaXNzaW5nLiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlhID0gY3R4
LT5hdHRyOwotCQkvKiBTZXR1cCB0aGUgc3RhdGUuICovCi0JCWlmIChhLT5mbGFncyAmIChBVFRS
X0NPTVBSRVNTSU9OX01BU0sgfCBBVFRSX0lTX1NQQVJTRSkpIHsKLQkJCWlmIChhLT5mbGFncyAm
IEFUVFJfQ09NUFJFU1NJT05fTUFTSykgewotCQkJCU5Jbm9TZXRDb21wcmVzc2VkKG5pKTsKLQkJ
CQlpZiAodm9sLT5jbHVzdGVyX3NpemUgPiA0MDk2KSB7Ci0JCQkJCW50ZnNfZXJyb3IodmktPmlf
c2IsICJGb3VuZCAiCi0JCQkJCQkJImNvbXByZXNzZWQgZGF0YSBidXQgIgotCQkJCQkJCSJjb21w
cmVzc2lvbiBpcyAiCi0JCQkJCQkJImRpc2FibGVkIGR1ZSB0byAiCi0JCQkJCQkJImNsdXN0ZXIg
c2l6ZSAoJWkpID4gIgotCQkJCQkJCSI0a2lCLiIsCi0JCQkJCQkJdm9sLT5jbHVzdGVyX3NpemUp
OwotCQkJCQlnb3RvIHVubV9lcnJfb3V0OwotCQkJCX0KLQkJCQlpZiAoKGEtPmZsYWdzICYgQVRU
Ul9DT01QUkVTU0lPTl9NQVNLKQotCQkJCQkJIT0gQVRUUl9JU19DT01QUkVTU0VEKSB7Ci0JCQkJ
CW50ZnNfZXJyb3IodmktPmlfc2IsICJGb3VuZCB1bmtub3duICIKLQkJCQkJCQkiY29tcHJlc3Np
b24gbWV0aG9kICIKLQkJCQkJCQkib3IgY29ycnVwdCBmaWxlLiIpOwotCQkJCQlnb3RvIHVubV9l
cnJfb3V0OwotCQkJCX0KLQkJCX0KLQkJCWlmIChhLT5mbGFncyAmIEFUVFJfSVNfU1BBUlNFKQot
CQkJCU5Jbm9TZXRTcGFyc2UobmkpOwotCQl9Ci0JCWlmIChhLT5mbGFncyAmIEFUVFJfSVNfRU5D
UllQVEVEKSB7Ci0JCQlpZiAoTklub0NvbXByZXNzZWQobmkpKSB7Ci0JCQkJbnRmc19lcnJvcih2
aS0+aV9zYiwgIkZvdW5kIGVuY3J5cHRlZCBhbmQgIgotCQkJCQkJImNvbXByZXNzZWQgZGF0YS4i
KTsKLQkJCQlnb3RvIHVubV9lcnJfb3V0OwotCQkJfQotCQkJTklub1NldEVuY3J5cHRlZChuaSk7
Ci0JCX0KLQkJaWYgKGEtPm5vbl9yZXNpZGVudCkgewotCQkJTklub1NldE5vblJlc2lkZW50KG5p
KTsKLQkJCWlmIChOSW5vQ29tcHJlc3NlZChuaSkgfHwgTklub1NwYXJzZShuaSkpIHsKLQkJCQlp
ZiAoTklub0NvbXByZXNzZWQobmkpICYmIGEtPmRhdGEubm9uX3Jlc2lkZW50LgotCQkJCQkJY29t
cHJlc3Npb25fdW5pdCAhPSA0KSB7Ci0JCQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJGb3VuZCAi
Ci0JCQkJCQkJIm5vbi1zdGFuZGFyZCAiCi0JCQkJCQkJImNvbXByZXNzaW9uIHVuaXQgKCV1ICIK
LQkJCQkJCQkiaW5zdGVhZCBvZiA0KS4gICIKLQkJCQkJCQkiQ2Fubm90IGhhbmRsZSB0aGlzLiIs
Ci0JCQkJCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuCi0JCQkJCQkJY29tcHJlc3Npb25fdW5pdCk7
Ci0JCQkJCWVyciA9IC1FT1BOT1RTVVBQOwotCQkJCQlnb3RvIHVubV9lcnJfb3V0OwotCQkJCX0K
LQkJCQlpZiAoYS0+ZGF0YS5ub25fcmVzaWRlbnQuY29tcHJlc3Npb25fdW5pdCkgewotCQkJCQlu
aS0+aXR5cGUuY29tcHJlc3NlZC5ibG9ja19zaXplID0gMVUgPDwKLQkJCQkJCQkoYS0+ZGF0YS5u
b25fcmVzaWRlbnQuCi0JCQkJCQkJY29tcHJlc3Npb25fdW5pdCArCi0JCQkJCQkJdm9sLT5jbHVz
dGVyX3NpemVfYml0cyk7Ci0JCQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2NrX3NpemVfYml0
cyA9Ci0JCQkJCQkJZmZzKG5pLT5pdHlwZS4KLQkJCQkJCQljb21wcmVzc2VkLgotCQkJCQkJCWJs
b2NrX3NpemUpIC0gMTsKLQkJCQkJbmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tfY2x1c3RlcnMg
PQotCQkJCQkJCTFVIDw8IGEtPmRhdGEuCi0JCQkJCQkJbm9uX3Jlc2lkZW50LgotCQkJCQkJCWNv
bXByZXNzaW9uX3VuaXQ7Ci0JCQkJfSBlbHNlIHsKLQkJCQkJbmktPml0eXBlLmNvbXByZXNzZWQu
YmxvY2tfc2l6ZSA9IDA7Ci0JCQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2NrX3NpemVfYml0
cyA9Ci0JCQkJCQkJMDsKLQkJCQkJbmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tfY2x1c3RlcnMg
PQotCQkJCQkJCTA7Ci0JCQkJfQotCQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUgPSBzbGU2
NF90b19jcHUoCi0JCQkJCQlhLT5kYXRhLm5vbl9yZXNpZGVudC4KLQkJCQkJCWNvbXByZXNzZWRf
c2l6ZSk7Ci0JCQl9Ci0JCQlpZiAoYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3Zjbikgewot
CQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJGaXJzdCBleHRlbnQgb2YgJERBVEEgIgotCQkJCQkJ
ImF0dHJpYnV0ZSBoYXMgbm9uIHplcm8gIgotCQkJCQkJImxvd2VzdF92Y24uIik7Ci0JCQkJZ290
byB1bm1fZXJyX291dDsKLQkJCX0KLQkJCXZpLT5pX3NpemUgPSBzbGU2NF90b19jcHUoCi0JCQkJ
CWEtPmRhdGEubm9uX3Jlc2lkZW50LmRhdGFfc2l6ZSk7Ci0JCQluaS0+aW5pdGlhbGl6ZWRfc2l6
ZSA9IHNsZTY0X3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuaW5pdGlhbGl6ZWRf
c2l6ZSk7Ci0JCQluaS0+YWxsb2NhdGVkX3NpemUgPSBzbGU2NF90b19jcHUoCi0JCQkJCWEtPmRh
dGEubm9uX3Jlc2lkZW50LmFsbG9jYXRlZF9zaXplKTsKLQkJfSBlbHNlIHsgLyogUmVzaWRlbnQg
YXR0cmlidXRlLiAqLwotCQkJdmktPmlfc2l6ZSA9IG5pLT5pbml0aWFsaXplZF9zaXplID0gbGUz
Ml90b19jcHUoCi0JCQkJCWEtPmRhdGEucmVzaWRlbnQudmFsdWVfbGVuZ3RoKTsKLQkJCW5pLT5h
bGxvY2F0ZWRfc2l6ZSA9IGxlMzJfdG9fY3B1KGEtPmxlbmd0aCkgLQotCQkJCQlsZTE2X3RvX2Nw
dSgKLQkJCQkJYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpOwotCQkJaWYgKHZpLT5pX3Np
emUgPiBuaS0+YWxsb2NhdGVkX3NpemUpIHsKLQkJCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiUmVz
aWRlbnQgZGF0YSBhdHRyaWJ1dGUgIgotCQkJCQkJImlzIGNvcnJ1cHQgKHNpemUgZXhjZWVkcyAi
Ci0JCQkJCQkiYWxsb2NhdGlvbikuIik7Ci0JCQkJZ290byB1bm1fZXJyX291dDsKLQkJCX0KLQkJ
fQotbm9fZGF0YV9hdHRyX3NwZWNpYWxfY2FzZToKLQkJLyogV2UgYXJlIGRvbmUgd2l0aCB0aGUg
bWZ0IHJlY29yZCwgc28gd2UgcmVsZWFzZSBpdC4gKi8KLQkJbnRmc19hdHRyX3B1dF9zZWFyY2hf
Y3R4KGN0eCk7Ci0JCXVubWFwX21mdF9yZWNvcmQobmkpOwotCQltID0gTlVMTDsKLQkJY3R4ID0g
TlVMTDsKLQkJLyogU2V0dXAgdGhlIG9wZXJhdGlvbnMgZm9yIHRoaXMgaW5vZGUuICovCi0JCXZp
LT5pX29wID0gJm50ZnNfZmlsZV9pbm9kZV9vcHM7Ci0JCXZpLT5pX2ZvcCA9ICZudGZzX2ZpbGVf
b3BzOwotCQl2aS0+aV9tYXBwaW5nLT5hX29wcyA9ICZudGZzX25vcm1hbF9hb3BzOwotCQlpZiAo
Tklub01zdFByb3RlY3RlZChuaSkpCi0JCQl2aS0+aV9tYXBwaW5nLT5hX29wcyA9ICZudGZzX21z
dF9hb3BzOwotCQllbHNlIGlmIChOSW5vQ29tcHJlc3NlZChuaSkpCi0JCQl2aS0+aV9tYXBwaW5n
LT5hX29wcyA9ICZudGZzX2NvbXByZXNzZWRfYW9wczsKLQl9Ci0JLyoKLQkgKiBUaGUgbnVtYmVy
IG9mIDUxMi1ieXRlIGJsb2NrcyB1c2VkIG9uIGRpc2sgKGZvciBzdGF0KS4gVGhpcyBpcyBpbiBz
bwotCSAqIGZhciBpbmFjY3VyYXRlIGFzIGl0IGRvZXNuJ3QgYWNjb3VudCBmb3IgYW55IG5hbWVk
IHN0cmVhbXMgb3Igb3RoZXIKLQkgKiBzcGVjaWFsIG5vbi1yZXNpZGVudCBhdHRyaWJ1dGVzLCBi
dXQgdGhhdCBpcyBob3cgV2luZG93cyB3b3JrcywgdG9vLAotCSAqIHNvIHdlIGFyZSBhdCBsZWFz
dCBjb25zaXN0ZW50IHdpdGggV2luZG93cywgaWYgbm90IGVudGlyZWx5Ci0JICogY29uc2lzdGVu
dCB3aXRoIHRoZSBMaW51eCBXYXkuIERvaW5nIGl0IHRoZSBMaW51eCBXYXkgd291bGQgY2F1c2Ug
YQotCSAqIHNpZ25pZmljYW50IHNsb3dkb3duIGFzIGl0IHdvdWxkIGludm9sdmUgaXRlcmF0aW5n
IG92ZXIgYWxsCi0JICogYXR0cmlidXRlcyBpbiB0aGUgbWZ0IHJlY29yZCBhbmQgYWRkaW5nIHRo
ZSBhbGxvY2F0ZWQvY29tcHJlc3NlZAotCSAqIHNpemVzIG9mIGFsbCBub24tcmVzaWRlbnQgYXR0
cmlidXRlcyBwcmVzZW50IHRvIGdpdmUgdXMgdGhlIExpbnV4Ci0JICogY29ycmVjdCBzaXplIHRo
YXQgc2hvdWxkIGdvIGludG8gaV9ibG9ja3MgKGFmdGVyIGRpdmlzaW9uIGJ5IDUxMikuCi0JICov
Ci0JaWYgKFNfSVNSRUcodmktPmlfbW9kZSkgJiYgKE5Jbm9Db21wcmVzc2VkKG5pKSB8fCBOSW5v
U3BhcnNlKG5pKSkpCi0JCXZpLT5pX2Jsb2NrcyA9IG5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUg
Pj4gOTsKLQllbHNlCi0JCXZpLT5pX2Jsb2NrcyA9IG5pLT5hbGxvY2F0ZWRfc2l6ZSA+PiA5Owot
CW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JcmV0dXJuIDA7Ci1pcHV0X3VubV9lcnJfb3V0OgotCWlw
dXQoYnZpKTsKLXVubV9lcnJfb3V0OgotCWlmICghZXJyKQotCQllcnIgPSAtRUlPOwotCWlmIChj
dHgpCi0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCWlmIChtKQotCQl1bm1hcF9t
ZnRfcmVjb3JkKG5pKTsKLWVycl9vdXQ6Ci0JbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHdp
dGggZXJyb3IgY29kZSAlaS4gIE1hcmtpbmcgY29ycnVwdCAiCi0JCQkiaW5vZGUgMHglbHggYXMg
YmFkLiAgUnVuIGNoa2Rzay4iLCBlcnIsIHZpLT5pX2lubyk7Ci0JbWFrZV9iYWRfaW5vZGUodmkp
OwotCWlmIChlcnIgIT0gLUVPUE5PVFNVUFAgJiYgZXJyICE9IC1FTk9NRU0pCi0JCU5Wb2xTZXRF
cnJvcnModm9sKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfcmVhZF9sb2NrZWRf
YXR0cl9pbm9kZSAtIHJlYWQgYW4gYXR0cmlidXRlIGlub2RlIGZyb20gaXRzIGJhc2UgaW5vZGUK
LSAqIEBiYXNlX3ZpOgliYXNlIGlub2RlCi0gKiBAdmk6CQlhdHRyaWJ1dGUgaW5vZGUgdG8gcmVh
ZAotICoKLSAqIG50ZnNfcmVhZF9sb2NrZWRfYXR0cl9pbm9kZSgpIGlzIGNhbGxlZCBmcm9tIG50
ZnNfYXR0cl9pZ2V0KCkgdG8gcmVhZCB0aGUKLSAqIGF0dHJpYnV0ZSBpbm9kZSBkZXNjcmliZWQg
YnkgQHZpIGludG8gbWVtb3J5IGZyb20gdGhlIGJhc2UgbWZ0IHJlY29yZAotICogZGVzY3JpYmVk
IGJ5IEBiYXNlX25pLgotICoKLSAqIG50ZnNfcmVhZF9sb2NrZWRfYXR0cl9pbm9kZSgpIG1hcHMs
IHBpbnMgYW5kIGxvY2tzIHRoZSBiYXNlIGlub2RlIGZvcgotICogcmVhZGluZyBhbmQgbG9va3Mg
dXAgdGhlIGF0dHJpYnV0ZSBkZXNjcmliZWQgYnkgQHZpIGJlZm9yZSBzZXR0aW5nIHVwIHRoZQot
ICogbmVjZXNzYXJ5IGZpZWxkcyBpbiBAdmkgYXMgd2VsbCBhcyBpbml0aWFsaXppbmcgdGhlIG50
ZnMgaW5vZGUuCi0gKgotICogUTogV2hhdCBsb2NrcyBhcmUgaGVsZCB3aGVuIHRoZSBmdW5jdGlv
biBpcyBjYWxsZWQ/Ci0gKiBBOiBpX3N0YXRlIGhhcyBJX05FVyBzZXQsIGhlbmNlIHRoZSBpbm9k
ZSBpcyBsb2NrZWQsIGFsc28KLSAqICAgIGlfY291bnQgaXMgc2V0IHRvIDEsIHNvIGl0IGlzIG5v
dCBnb2luZyB0byBnbyBhd2F5Ci0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5v
IG9uIGVycm9yLiAgSW4gdGhlIGVycm9yIGNhc2UsIHRoZSBpbm9kZSB3aWxsCi0gKiBoYXZlIGhh
ZCBtYWtlX2JhZF9pbm9kZSgpIGV4ZWN1dGVkIG9uIGl0LgotICoKLSAqIE5vdGUgdGhpcyBjYW5u
b3QgYmUgY2FsbGVkIGZvciBBVF9JTkRFWF9BTExPQ0FUSU9OLgotICovCi1zdGF0aWMgaW50IG50
ZnNfcmVhZF9sb2NrZWRfYXR0cl9pbm9kZShzdHJ1Y3QgaW5vZGUgKmJhc2VfdmksIHN0cnVjdCBp
bm9kZSAqdmkpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9IE5URlNfU0IodmktPmlfc2IpOwotCW50
ZnNfaW5vZGUgKm5pLCAqYmFzZV9uaTsKLQlNRlRfUkVDT1JEICptOwotCUFUVFJfUkVDT1JEICph
OwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHg7Ci0JaW50IGVyciA9IDA7Ci0KLQludGZzX2Rl
YnVnKCJFbnRlcmluZyBmb3IgaV9pbm8gMHglbHguIiwgdmktPmlfaW5vKTsKLQotCW50ZnNfaW5p
dF9iaWdfaW5vZGUodmkpOwotCi0JbmkJPSBOVEZTX0kodmkpOwotCWJhc2VfbmkgPSBOVEZTX0ko
YmFzZV92aSk7Ci0KLQkvKiBKdXN0IG1pcnJvciB0aGUgdmFsdWVzIGZyb20gdGhlIGJhc2UgaW5v
ZGUuICovCi0JdmktPmlfdWlkCT0gYmFzZV92aS0+aV91aWQ7Ci0JdmktPmlfZ2lkCT0gYmFzZV92
aS0+aV9naWQ7Ci0Jc2V0X25saW5rKHZpLCBiYXNlX3ZpLT5pX25saW5rKTsKLQlpbm9kZV9zZXRf
bXRpbWVfdG9fdHModmksIGlub2RlX2dldF9tdGltZShiYXNlX3ZpKSk7Ci0JaW5vZGVfc2V0X2N0
aW1lX3RvX3RzKHZpLCBpbm9kZV9nZXRfY3RpbWUoYmFzZV92aSkpOwotCWlub2RlX3NldF9hdGlt
ZV90b190cyh2aSwgaW5vZGVfZ2V0X2F0aW1lKGJhc2VfdmkpKTsKLQl2aS0+aV9nZW5lcmF0aW9u
ID0gbmktPnNlcV9ubyA9IGJhc2VfbmktPnNlcV9ubzsKLQotCS8qIFNldCBpbm9kZSB0eXBlIHRv
IHplcm8gYnV0IHByZXNlcnZlIHBlcm1pc3Npb25zLiAqLwotCXZpLT5pX21vZGUJPSBiYXNlX3Zp
LT5pX21vZGUgJiB+U19JRk1UOwotCi0JbSA9IG1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotCWlm
IChJU19FUlIobSkpIHsKLQkJZXJyID0gUFRSX0VSUihtKTsKLQkJZ290byBlcnJfb3V0OwotCX0K
LQljdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgoYmFzZV9uaSwgbSk7Ci0JaWYgKCFjdHgp
IHsKLQkJZXJyID0gLUVOT01FTTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JLyogRmluZCB0
aGUgYXR0cmlidXRlLiAqLwotCWVyciA9IG50ZnNfYXR0cl9sb29rdXAobmktPnR5cGUsIG5pLT5u
YW1lLCBuaS0+bmFtZV9sZW4sCi0JCQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsK
LQlpZiAodW5saWtlbHkoZXJyKSkKLQkJZ290byB1bm1fZXJyX291dDsKLQlhID0gY3R4LT5hdHRy
OwotCWlmIChhLT5mbGFncyAmIChBVFRSX0NPTVBSRVNTSU9OX01BU0sgfCBBVFRSX0lTX1NQQVJT
RSkpIHsKLQkJaWYgKGEtPmZsYWdzICYgQVRUUl9DT01QUkVTU0lPTl9NQVNLKSB7Ci0JCQlOSW5v
U2V0Q29tcHJlc3NlZChuaSk7Ci0JCQlpZiAoKG5pLT50eXBlICE9IEFUX0RBVEEpIHx8IChuaS0+
dHlwZSA9PSBBVF9EQVRBICYmCi0JCQkJCW5pLT5uYW1lX2xlbikpIHsKLQkJCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiRm91bmQgY29tcHJlc3NlZCAiCi0JCQkJCQkibm9uLWRhdGEgb3IgbmFtZWQg
ZGF0YSAiCi0JCQkJCQkiYXR0cmlidXRlLiAgUGxlYXNlIHJlcG9ydCAiCi0JCQkJCQkieW91IHNh
dyB0aGlzIG1lc3NhZ2UgdG8gIgotCQkJCQkJImxpbnV4LW50ZnMtZGV2QGxpc3RzLiIKLQkJCQkJ
CSJzb3VyY2Vmb3JnZS5uZXQiKTsKLQkJCQlnb3RvIHVubV9lcnJfb3V0OwotCQkJfQotCQkJaWYg
KHZvbC0+Y2x1c3Rlcl9zaXplID4gNDA5NikgewotCQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJG
b3VuZCBjb21wcmVzc2VkICIKLQkJCQkJCSJhdHRyaWJ1dGUgYnV0IGNvbXByZXNzaW9uIGlzICIK
LQkJCQkJCSJkaXNhYmxlZCBkdWUgdG8gY2x1c3RlciBzaXplICIKLQkJCQkJCSIoJWkpID4gNGtp
Qi4iLAotCQkJCQkJdm9sLT5jbHVzdGVyX3NpemUpOwotCQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0J
CQl9Ci0JCQlpZiAoKGEtPmZsYWdzICYgQVRUUl9DT01QUkVTU0lPTl9NQVNLKSAhPQotCQkJCQlB
VFRSX0lTX0NPTVBSRVNTRUQpIHsKLQkJCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiRm91bmQgdW5r
bm93biAiCi0JCQkJCQkiY29tcHJlc3Npb24gbWV0aG9kLiIpOwotCQkJCWdvdG8gdW5tX2Vycl9v
dXQ7Ci0JCQl9Ci0JCX0KLQkJLyoKLQkJICogVGhlIGNvbXByZXNzZWQvc3BhcnNlIGZsYWcgc2V0
IGluIGFuIGluZGV4IHJvb3QganVzdCBtZWFucwotCQkgKiB0byBjb21wcmVzcyBhbGwgZmlsZXMu
Ci0JCSAqLwotCQlpZiAoTklub01zdFByb3RlY3RlZChuaSkgJiYgbmktPnR5cGUgIT0gQVRfSU5E
RVhfUk9PVCkgewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZvdW5kIG1zdCBwcm90ZWN0ZWQg
YXR0cmlidXRlICIKLQkJCQkJImJ1dCB0aGUgYXR0cmlidXRlIGlzICVzLiAgUGxlYXNlICIKLQkJ
CQkJInJlcG9ydCB5b3Ugc2F3IHRoaXMgbWVzc2FnZSB0byAiCi0JCQkJCSJsaW51eC1udGZzLWRl
dkBsaXN0cy5zb3VyY2Vmb3JnZS5uZXQiLAotCQkJCQlOSW5vQ29tcHJlc3NlZChuaSkgPyAiY29t
cHJlc3NlZCIgOgotCQkJCQkic3BhcnNlIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0OwotCQl9Ci0J
CWlmIChhLT5mbGFncyAmIEFUVFJfSVNfU1BBUlNFKQotCQkJTklub1NldFNwYXJzZShuaSk7Ci0J
fQotCWlmIChhLT5mbGFncyAmIEFUVFJfSVNfRU5DUllQVEVEKSB7Ci0JCWlmIChOSW5vQ29tcHJl
c3NlZChuaSkpIHsKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJGb3VuZCBlbmNyeXB0ZWQgYW5k
IGNvbXByZXNzZWQgIgotCQkJCQkiZGF0YS4iKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCX0K
LQkJLyoKLQkJICogVGhlIGVuY3J5cHRpb24gZmxhZyBzZXQgaW4gYW4gaW5kZXggcm9vdCBqdXN0
IG1lYW5zIHRvCi0JCSAqIGVuY3J5cHQgYWxsIGZpbGVzLgotCQkgKi8KLQkJaWYgKE5Jbm9Nc3RQ
cm90ZWN0ZWQobmkpICYmIG5pLT50eXBlICE9IEFUX0lOREVYX1JPT1QpIHsKLQkJCW50ZnNfZXJy
b3IodmktPmlfc2IsICJGb3VuZCBtc3QgcHJvdGVjdGVkIGF0dHJpYnV0ZSAiCi0JCQkJCSJidXQg
dGhlIGF0dHJpYnV0ZSBpcyBlbmNyeXB0ZWQuICAiCi0JCQkJCSJQbGVhc2UgcmVwb3J0IHlvdSBz
YXcgdGhpcyBtZXNzYWdlICIKLQkJCQkJInRvIGxpbnV4LW50ZnMtZGV2QGxpc3RzLnNvdXJjZWZv
cmdlLiIKLQkJCQkJIm5ldCIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQlpZiAobmkt
PnR5cGUgIT0gQVRfREFUQSkgewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZvdW5kIGVuY3J5
cHRlZCBub24tZGF0YSAiCi0JCQkJCSJhdHRyaWJ1dGUuIik7Ci0JCQlnb3RvIHVubV9lcnJfb3V0
OwotCQl9Ci0JCU5Jbm9TZXRFbmNyeXB0ZWQobmkpOwotCX0KLQlpZiAoIWEtPm5vbl9yZXNpZGVu
dCkgewotCQkvKiBFbnN1cmUgdGhlIGF0dHJpYnV0ZSBuYW1lIGlzIHBsYWNlZCBiZWZvcmUgdGhl
IHZhbHVlLiAqLwotCQlpZiAodW5saWtlbHkoYS0+bmFtZV9sZW5ndGggJiYgKGxlMTZfdG9fY3B1
KGEtPm5hbWVfb2Zmc2V0KSA+PQotCQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEucmVzaWRlbnQudmFs
dWVfb2Zmc2V0KSkpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJBdHRyaWJ1dGUgbmFtZSBp
cyBwbGFjZWQgYWZ0ZXIgIgotCQkJCQkidGhlIGF0dHJpYnV0ZSB2YWx1ZS4iKTsKLQkJCWdvdG8g
dW5tX2Vycl9vdXQ7Ci0JCX0KLQkJaWYgKE5Jbm9Nc3RQcm90ZWN0ZWQobmkpKSB7Ci0JCQludGZz
X2Vycm9yKHZpLT5pX3NiLCAiRm91bmQgbXN0IHByb3RlY3RlZCBhdHRyaWJ1dGUgIgotCQkJCQki
YnV0IHRoZSBhdHRyaWJ1dGUgaXMgcmVzaWRlbnQuICAiCi0JCQkJCSJQbGVhc2UgcmVwb3J0IHlv
dSBzYXcgdGhpcyBtZXNzYWdlIHRvICIKLQkJCQkJImxpbnV4LW50ZnMtZGV2QGxpc3RzLnNvdXJj
ZWZvcmdlLm5ldCIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCQl2aS0+aV9zaXplID0g
bmktPmluaXRpYWxpemVkX3NpemUgPSBsZTMyX3RvX2NwdSgKLQkJCQlhLT5kYXRhLnJlc2lkZW50
LnZhbHVlX2xlbmd0aCk7Ci0JCW5pLT5hbGxvY2F0ZWRfc2l6ZSA9IGxlMzJfdG9fY3B1KGEtPmxl
bmd0aCkgLQotCQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KTsK
LQkJaWYgKHZpLT5pX3NpemUgPiBuaS0+YWxsb2NhdGVkX3NpemUpIHsKLQkJCW50ZnNfZXJyb3Io
dmktPmlfc2IsICJSZXNpZGVudCBhdHRyaWJ1dGUgaXMgY29ycnVwdCAiCi0JCQkJCSIoc2l6ZSBl
eGNlZWRzIGFsbG9jYXRpb24pLiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQotCX0gZWxz
ZSB7Ci0JCU5Jbm9TZXROb25SZXNpZGVudChuaSk7Ci0JCS8qCi0JCSAqIEVuc3VyZSB0aGUgYXR0
cmlidXRlIG5hbWUgaXMgcGxhY2VkIGJlZm9yZSB0aGUgbWFwcGluZyBwYWlycwotCQkgKiBhcnJh
eS4KLQkJICovCi0JCWlmICh1bmxpa2VseShhLT5uYW1lX2xlbmd0aCAmJiAobGUxNl90b19jcHUo
YS0+bmFtZV9vZmZzZXQpID49Ci0JCQkJbGUxNl90b19jcHUoCi0JCQkJYS0+ZGF0YS5ub25fcmVz
aWRlbnQubWFwcGluZ19wYWlyc19vZmZzZXQpKSkpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkF0dHJpYnV0ZSBuYW1lIGlzIHBsYWNlZCBhZnRlciAiCi0JCQkJCSJ0aGUgbWFwcGluZyBwYWly
cyBhcnJheS4iKTsKLQkJCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JCX0KLQkJaWYgKE5Jbm9Db21wcmVz
c2VkKG5pKSB8fCBOSW5vU3BhcnNlKG5pKSkgewotCQkJaWYgKE5Jbm9Db21wcmVzc2VkKG5pKSAm
JiBhLT5kYXRhLm5vbl9yZXNpZGVudC4KLQkJCQkJY29tcHJlc3Npb25fdW5pdCAhPSA0KSB7Ci0J
CQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZvdW5kIG5vbi1zdGFuZGFyZCAiCi0JCQkJCQkiY29t
cHJlc3Npb24gdW5pdCAoJXUgaW5zdGVhZCAiCi0JCQkJCQkib2YgNCkuICBDYW5ub3QgaGFuZGxl
IHRoaXMuIiwKLQkJCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LgotCQkJCQkJY29tcHJlc3Npb25f
dW5pdCk7Ci0JCQkJZXJyID0gLUVPUE5PVFNVUFA7Ci0JCQkJZ290byB1bm1fZXJyX291dDsKLQkJ
CX0KLQkJCWlmIChhLT5kYXRhLm5vbl9yZXNpZGVudC5jb21wcmVzc2lvbl91bml0KSB7Ci0JCQkJ
bmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tfc2l6ZSA9IDFVIDw8Ci0JCQkJCQkoYS0+ZGF0YS5u
b25fcmVzaWRlbnQuCi0JCQkJCQljb21wcmVzc2lvbl91bml0ICsKLQkJCQkJCXZvbC0+Y2x1c3Rl
cl9zaXplX2JpdHMpOwotCQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLmJsb2NrX3NpemVfYml0cyA9
Ci0JCQkJCQlmZnMobmktPml0eXBlLmNvbXByZXNzZWQuCi0JCQkJCQlibG9ja19zaXplKSAtIDE7
Ci0JCQkJbmktPml0eXBlLmNvbXByZXNzZWQuYmxvY2tfY2x1c3RlcnMgPSAxVSA8PAotCQkJCQkJ
YS0+ZGF0YS5ub25fcmVzaWRlbnQuCi0JCQkJCQljb21wcmVzc2lvbl91bml0OwotCQkJfSBlbHNl
IHsKLQkJCQluaS0+aXR5cGUuY29tcHJlc3NlZC5ibG9ja19zaXplID0gMDsKLQkJCQluaS0+aXR5
cGUuY29tcHJlc3NlZC5ibG9ja19zaXplX2JpdHMgPSAwOwotCQkJCW5pLT5pdHlwZS5jb21wcmVz
c2VkLmJsb2NrX2NsdXN0ZXJzID0gMDsKLQkJCX0KLQkJCW5pLT5pdHlwZS5jb21wcmVzc2VkLnNp
emUgPSBzbGU2NF90b19jcHUoCi0JCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50LmNvbXByZXNzZWRf
c2l6ZSk7Ci0JCX0KLQkJaWYgKGEtPmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92Y24pIHsKLQkJ
CW50ZnNfZXJyb3IodmktPmlfc2IsICJGaXJzdCBleHRlbnQgb2YgYXR0cmlidXRlIGhhcyAiCi0J
CQkJCSJub24temVybyBsb3dlc3RfdmNuLiIpOwotCQkJZ290byB1bm1fZXJyX291dDsKLQkJfQot
CQl2aS0+aV9zaXplID0gc2xlNjRfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50LmRhdGFfc2l6
ZSk7Ci0JCW5pLT5pbml0aWFsaXplZF9zaXplID0gc2xlNjRfdG9fY3B1KAotCQkJCWEtPmRhdGEu
bm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemUpOwotCQluaS0+YWxsb2NhdGVkX3NpemUgPSBz
bGU2NF90b19jcHUoCi0JCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuYWxsb2NhdGVkX3NpemUpOwot
CX0KLQl2aS0+aV9tYXBwaW5nLT5hX29wcyA9ICZudGZzX25vcm1hbF9hb3BzOwotCWlmIChOSW5v
TXN0UHJvdGVjdGVkKG5pKSkKLQkJdmktPmlfbWFwcGluZy0+YV9vcHMgPSAmbnRmc19tc3RfYW9w
czsKLQllbHNlIGlmIChOSW5vQ29tcHJlc3NlZChuaSkpCi0JCXZpLT5pX21hcHBpbmctPmFfb3Bz
ID0gJm50ZnNfY29tcHJlc3NlZF9hb3BzOwotCWlmICgoTklub0NvbXByZXNzZWQobmkpIHx8IE5J
bm9TcGFyc2UobmkpKSAmJiBuaS0+dHlwZSAhPSBBVF9JTkRFWF9ST09UKQotCQl2aS0+aV9ibG9j
a3MgPSBuaS0+aXR5cGUuY29tcHJlc3NlZC5zaXplID4+IDk7Ci0JZWxzZQotCQl2aS0+aV9ibG9j
a3MgPSBuaS0+YWxsb2NhdGVkX3NpemUgPj4gOTsKLQkvKgotCSAqIE1ha2Ugc3VyZSB0aGUgYmFz
ZSBpbm9kZSBkb2VzIG5vdCBnbyBhd2F5IGFuZCBhdHRhY2ggaXQgdG8gdGhlCi0JICogYXR0cmli
dXRlIGlub2RlLgotCSAqLwotCWlncmFiKGJhc2VfdmkpOwotCW5pLT5leHQuYmFzZV9udGZzX2lu
byA9IGJhc2Vfbmk7Ci0JbmktPm5yX2V4dGVudHMgPSAtMTsKLQotCW50ZnNfYXR0cl9wdXRfc2Vh
cmNoX2N0eChjdHgpOwotCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0KLQludGZzX2RlYnVn
KCJEb25lLiIpOwotCXJldHVybiAwOwotCi11bm1fZXJyX291dDoKLQlpZiAoIWVycikKLQkJZXJy
ID0gLUVJTzsKLQlpZiAoY3R4KQotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQl1
bm1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotZXJyX291dDoKLQludGZzX2Vycm9yKHZvbC0+c2Is
ICJGYWlsZWQgd2l0aCBlcnJvciBjb2RlICVpIHdoaWxlIHJlYWRpbmcgYXR0cmlidXRlICIKLQkJ
CSJpbm9kZSAobWZ0X25vIDB4JWx4LCB0eXBlIDB4JXgsIG5hbWVfbGVuICVpKS4gICIKLQkJCSJN
YXJraW5nIGNvcnJ1cHQgaW5vZGUgYW5kIGJhc2UgaW5vZGUgMHglbHggYXMgYmFkLiAgIgotCQkJ
IlJ1biBjaGtkc2suIiwgZXJyLCB2aS0+aV9pbm8sIG5pLT50eXBlLCBuaS0+bmFtZV9sZW4sCi0J
CQliYXNlX3ZpLT5pX2lubyk7Ci0JbWFrZV9iYWRfaW5vZGUodmkpOwotCWlmIChlcnIgIT0gLUVO
T01FTSkKLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCXJldHVybiBlcnI7Ci19Ci0KLS8qKgotICog
bnRmc19yZWFkX2xvY2tlZF9pbmRleF9pbm9kZSAtIHJlYWQgYW4gaW5kZXggaW5vZGUgZnJvbSBp
dHMgYmFzZSBpbm9kZQotICogQGJhc2Vfdmk6CWJhc2UgaW5vZGUKLSAqIEB2aToJCWluZGV4IGlu
b2RlIHRvIHJlYWQKLSAqCi0gKiBudGZzX3JlYWRfbG9ja2VkX2luZGV4X2lub2RlKCkgaXMgY2Fs
bGVkIGZyb20gbnRmc19pbmRleF9pZ2V0KCkgdG8gcmVhZCB0aGUKLSAqIGluZGV4IGlub2RlIGRl
c2NyaWJlZCBieSBAdmkgaW50byBtZW1vcnkgZnJvbSB0aGUgYmFzZSBtZnQgcmVjb3JkIGRlc2Ny
aWJlZAotICogYnkgQGJhc2VfbmkuCi0gKgotICogbnRmc19yZWFkX2xvY2tlZF9pbmRleF9pbm9k
ZSgpIG1hcHMsIHBpbnMgYW5kIGxvY2tzIHRoZSBiYXNlIGlub2RlIGZvcgotICogcmVhZGluZyBh
bmQgbG9va3MgdXAgdGhlIGF0dHJpYnV0ZXMgcmVsYXRpbmcgdG8gdGhlIGluZGV4IGRlc2NyaWJl
ZCBieSBAdmkKLSAqIGJlZm9yZSBzZXR0aW5nIHVwIHRoZSBuZWNlc3NhcnkgZmllbGRzIGluIEB2
aSBhcyB3ZWxsIGFzIGluaXRpYWxpemluZyB0aGUKLSAqIG50ZnMgaW5vZGUuCi0gKgotICogTm90
ZSwgaW5kZXggaW5vZGVzIGFyZSBlc3NlbnRpYWxseSBhdHRyaWJ1dGUgaW5vZGVzIChOSW5vQXR0
cigpIGlzIHRydWUpCi0gKiB3aXRoIHRoZSBhdHRyaWJ1dGUgdHlwZSBzZXQgdG8gQVRfSU5ERVhf
QUxMT0NBVElPTi4gIEFwYXJ0IGZyb20gdGhhdCwgdGhleQotICogYXJlIHNldHVwIGxpa2UgZGly
ZWN0b3J5IGlub2RlcyBzaW5jZSBkaXJlY3RvcmllcyBhcmUgYSBzcGVjaWFsIGNhc2Ugb2YKLSAq
IGluZGljZXMgYW8gdGhleSBuZWVkIHRvIGJlIHRyZWF0ZWQgaW4gbXVjaCB0aGUgc2FtZSB3YXku
ICBNb3N0IGltcG9ydGFudGx5LAotICogZm9yIHNtYWxsIGluZGljZXMgdGhlIGluZGV4IGFsbG9j
YXRpb24gYXR0cmlidXRlIG1pZ2h0IG5vdCBhY3R1YWxseSBleGlzdC4KLSAqIEhvd2V2ZXIsIHRo
ZSBpbmRleCByb290IGF0dHJpYnV0ZSBhbHdheXMgZXhpc3RzIGJ1dCB0aGlzIGRvZXMgbm90IG5l
ZWQgdG8KLSAqIGhhdmUgYW4gaW5vZGUgYXNzb2NpYXRlZCB3aXRoIGl0IGFuZCB0aGlzIGlzIHdo
eSB3ZSBkZWZpbmUgYSBuZXcgaW5vZGUgdHlwZQotICogaW5kZXguICBBbHNvLCBsaWtlIGZvciBk
aXJlY3Rvcmllcywgd2UgbmVlZCB0byBoYXZlIGFuIGF0dHJpYnV0ZSBpbm9kZSBmb3IKLSAqIHRo
ZSBiaXRtYXAgYXR0cmlidXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGluZGV4IGFsbG9jYXRpb24g
YXR0cmlidXRlIGFuZCB3ZQotICogY2FuIHN0b3JlIHRoaXMgaW4gdGhlIGFwcHJvcHJpYXRlIGZp
ZWxkIG9mIHRoZSBpbm9kZSwganVzdCBsaWtlIHdlIGRvIGZvcgotICogbm9ybWFsIGRpcmVjdG9y
eSBpbm9kZXMuCi0gKgotICogUTogV2hhdCBsb2NrcyBhcmUgaGVsZCB3aGVuIHRoZSBmdW5jdGlv
biBpcyBjYWxsZWQ/Ci0gKiBBOiBpX3N0YXRlIGhhcyBJX05FVyBzZXQsIGhlbmNlIHRoZSBpbm9k
ZSBpcyBsb2NrZWQsIGFsc28KLSAqICAgIGlfY291bnQgaXMgc2V0IHRvIDEsIHNvIGl0IGlzIG5v
dCBnb2luZyB0byBnbyBhd2F5Ci0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5v
IG9uIGVycm9yLiAgSW4gdGhlIGVycm9yIGNhc2UsIHRoZSBpbm9kZSB3aWxsCi0gKiBoYXZlIGhh
ZCBtYWtlX2JhZF9pbm9kZSgpIGV4ZWN1dGVkIG9uIGl0LgotICovCi1zdGF0aWMgaW50IG50ZnNf
cmVhZF9sb2NrZWRfaW5kZXhfaW5vZGUoc3RydWN0IGlub2RlICpiYXNlX3ZpLCBzdHJ1Y3QgaW5v
ZGUgKnZpKQotewotCWxvZmZfdCBidmlfc2l6ZTsKLQludGZzX3ZvbHVtZSAqdm9sID0gTlRGU19T
Qih2aS0+aV9zYik7Ci0JbnRmc19pbm9kZSAqbmksICpiYXNlX25pLCAqYm5pOwotCXN0cnVjdCBp
bm9kZSAqYnZpOwotCU1GVF9SRUNPUkQgKm07Ci0JQVRUUl9SRUNPUkQgKmE7Ci0JbnRmc19hdHRy
X3NlYXJjaF9jdHggKmN0eDsKLQlJTkRFWF9ST09UICppcjsKLQl1OCAqaXJfZW5kLCAqaW5kZXhf
ZW5kOwotCWludCBlcnIgPSAwOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIGlfaW5vIDB4
JWx4LiIsIHZpLT5pX2lubyk7Ci0JbnRmc19pbml0X2JpZ19pbm9kZSh2aSk7Ci0JbmkJPSBOVEZT
X0kodmkpOwotCWJhc2VfbmkgPSBOVEZTX0koYmFzZV92aSk7Ci0JLyogSnVzdCBtaXJyb3IgdGhl
IHZhbHVlcyBmcm9tIHRoZSBiYXNlIGlub2RlLiAqLwotCXZpLT5pX3VpZAk9IGJhc2VfdmktPmlf
dWlkOwotCXZpLT5pX2dpZAk9IGJhc2VfdmktPmlfZ2lkOwotCXNldF9ubGluayh2aSwgYmFzZV92
aS0+aV9ubGluayk7Ci0JaW5vZGVfc2V0X210aW1lX3RvX3RzKHZpLCBpbm9kZV9nZXRfbXRpbWUo
YmFzZV92aSkpOwotCWlub2RlX3NldF9jdGltZV90b190cyh2aSwgaW5vZGVfZ2V0X2N0aW1lKGJh
c2VfdmkpKTsKLQlpbm9kZV9zZXRfYXRpbWVfdG9fdHModmksIGlub2RlX2dldF9hdGltZShiYXNl
X3ZpKSk7Ci0JdmktPmlfZ2VuZXJhdGlvbiA9IG5pLT5zZXFfbm8gPSBiYXNlX25pLT5zZXFfbm87
Ci0JLyogU2V0IGlub2RlIHR5cGUgdG8gemVybyBidXQgcHJlc2VydmUgcGVybWlzc2lvbnMuICov
Ci0JdmktPmlfbW9kZQk9IGJhc2VfdmktPmlfbW9kZSAmIH5TX0lGTVQ7Ci0JLyogTWFwIHRoZSBt
ZnQgcmVjb3JkIGZvciB0aGUgYmFzZSBpbm9kZS4gKi8KLQltID0gbWFwX21mdF9yZWNvcmQoYmFz
ZV9uaSk7Ci0JaWYgKElTX0VSUihtKSkgewotCQllcnIgPSBQVFJfRVJSKG0pOwotCQlnb3RvIGVy
cl9vdXQ7Ci0JfQotCWN0eCA9IG50ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChiYXNlX25pLCBtKTsK
LQlpZiAoIWN0eCkgewotCQllcnIgPSAtRU5PTUVNOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0K
LQkvKiBGaW5kIHRoZSBpbmRleCByb290IGF0dHJpYnV0ZS4gKi8KLQllcnIgPSBudGZzX2F0dHJf
bG9va3VwKEFUX0lOREVYX1JPT1QsIG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4sCi0JCQlDQVNFX1NF
TlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlpZiAo
ZXJyID09IC1FTk9FTlQpCi0JCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiJElOREVYX1JPT1QgYXR0
cmlidXRlIGlzICIKLQkJCQkJIm1pc3NpbmcuIik7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQot
CWEgPSBjdHgtPmF0dHI7Ci0JLyogU2V0IHVwIHRoZSBzdGF0ZS4gKi8KLQlpZiAodW5saWtlbHko
YS0+bm9uX3Jlc2lkZW50KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICIkSU5ERVhfUk9PVCBh
dHRyaWJ1dGUgaXMgbm90IHJlc2lkZW50LiIpOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQkv
KiBFbnN1cmUgdGhlIGF0dHJpYnV0ZSBuYW1lIGlzIHBsYWNlZCBiZWZvcmUgdGhlIHZhbHVlLiAq
LwotCWlmICh1bmxpa2VseShhLT5uYW1lX2xlbmd0aCAmJiAobGUxNl90b19jcHUoYS0+bmFtZV9v
ZmZzZXQpID49Ci0JCQlsZTE2X3RvX2NwdShhLT5kYXRhLnJlc2lkZW50LnZhbHVlX29mZnNldCkp
KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICIkSU5ERVhfUk9PVCBhdHRyaWJ1dGUgbmFtZSBp
cyBwbGFjZWQgIgotCQkJCSJhZnRlciB0aGUgYXR0cmlidXRlIHZhbHVlLiIpOwotCQlnb3RvIHVu
bV9lcnJfb3V0OwotCX0KLQkvKgotCSAqIENvbXByZXNzZWQvZW5jcnlwdGVkL3NwYXJzZSBpbmRl
eCByb290IGlzIG5vdCBhbGxvd2VkLCBleGNlcHQgZm9yCi0JICogZGlyZWN0b3JpZXMgb2YgY291
cnNlIGJ1dCB0aG9zZSBhcmUgbm90IGRlYWx0IHdpdGggaGVyZS4KLQkgKi8KLQlpZiAoYS0+Zmxh
Z3MgJiAoQVRUUl9DT01QUkVTU0lPTl9NQVNLIHwgQVRUUl9JU19FTkNSWVBURUQgfAotCQkJQVRU
Ul9JU19TUEFSU0UpKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJGb3VuZCBjb21wcmVzc2Vk
L2VuY3J5cHRlZC9zcGFyc2UgaW5kZXggIgotCQkJCSJyb290IGF0dHJpYnV0ZS4iKTsKLQkJZ290
byB1bm1fZXJyX291dDsKLQl9Ci0JaXIgPSAoSU5ERVhfUk9PVCopKCh1OCopYSArIGxlMTZfdG9f
Y3B1KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0JaXJfZW5kID0gKHU4KilpciAr
IGxlMzJfdG9fY3B1KGEtPmRhdGEucmVzaWRlbnQudmFsdWVfbGVuZ3RoKTsKLQlpZiAoaXJfZW5k
ID4gKHU4KiljdHgtPm1yZWMgKyB2b2wtPm1mdF9yZWNvcmRfc2l6ZSkgewotCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiJElOREVYX1JPT1QgYXR0cmlidXRlIGlzIGNvcnJ1cHQuIik7Ci0JCWdvdG8g
dW5tX2Vycl9vdXQ7Ci0JfQotCWluZGV4X2VuZCA9ICh1OCopJmlyLT5pbmRleCArIGxlMzJfdG9f
Y3B1KGlyLT5pbmRleC5pbmRleF9sZW5ndGgpOwotCWlmIChpbmRleF9lbmQgPiBpcl9lbmQpIHsK
LQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkluZGV4IGlzIGNvcnJ1cHQuIik7Ci0JCWdvdG8gdW5t
X2Vycl9vdXQ7Ci0JfQotCWlmIChpci0+dHlwZSkgewotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAi
SW5kZXggdHlwZSBpcyBub3QgMCAodHlwZSBpcyAweCV4KS4iLAotCQkJCWxlMzJfdG9fY3B1KGly
LT50eXBlKSk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCW5pLT5pdHlwZS5pbmRleC5jb2xs
YXRpb25fcnVsZSA9IGlyLT5jb2xsYXRpb25fcnVsZTsKLQludGZzX2RlYnVnKCJJbmRleCBjb2xs
YXRpb24gcnVsZSBpcyAweCV4LiIsCi0JCQlsZTMyX3RvX2NwdShpci0+Y29sbGF0aW9uX3J1bGUp
KTsKLQluaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSA9IGxlMzJfdG9fY3B1KGlyLT5pbmRleF9i
bG9ja19zaXplKTsKLQlpZiAoIWlzX3Bvd2VyX29mXzIobmktPml0eXBlLmluZGV4LmJsb2NrX3Np
emUpKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJJbmRleCBibG9jayBzaXplICgldSkgaXMg
bm90IGEgcG93ZXIgb2YgIgotCQkJCSJ0d28uIiwgbmktPml0eXBlLmluZGV4LmJsb2NrX3NpemUp
OwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQlpZiAobmktPml0eXBlLmluZGV4LmJsb2NrX3Np
emUgPiBQQUdFX1NJWkUpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkluZGV4IGJsb2NrIHNp
emUgKCV1KSA+IFBBR0VfU0laRSAiCi0JCQkJIiglbGQpIGlzIG5vdCBzdXBwb3J0ZWQuICBTb3Jy
eS4iLAotCQkJCW5pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplLCBQQUdFX1NJWkUpOwotCQllcnIg
PSAtRU9QTk9UU1VQUDsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0JaWYgKG5pLT5pdHlwZS5p
bmRleC5ibG9ja19zaXplIDwgTlRGU19CTE9DS19TSVpFKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlf
c2IsICJJbmRleCBibG9jayBzaXplICgldSkgPCBOVEZTX0JMT0NLX1NJWkUgIgotCQkJCSIoJWkp
IGlzIG5vdCBzdXBwb3J0ZWQuICBTb3JyeS4iLAotCQkJCW5pLT5pdHlwZS5pbmRleC5ibG9ja19z
aXplLCBOVEZTX0JMT0NLX1NJWkUpOwotCQllcnIgPSAtRU9QTk9UU1VQUDsKLQkJZ290byB1bm1f
ZXJyX291dDsKLQl9Ci0JbmktPml0eXBlLmluZGV4LmJsb2NrX3NpemVfYml0cyA9IGZmcyhuaS0+
aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSkgLSAxOwotCS8qIERldGVybWluZSB0aGUgc2l6ZSBvZiBh
IHZjbiBpbiB0aGUgaW5kZXguICovCi0JaWYgKHZvbC0+Y2x1c3Rlcl9zaXplIDw9IG5pLT5pdHlw
ZS5pbmRleC5ibG9ja19zaXplKSB7Ci0JCW5pLT5pdHlwZS5pbmRleC52Y25fc2l6ZSA9IHZvbC0+
Y2x1c3Rlcl9zaXplOwotCQluaS0+aXR5cGUuaW5kZXgudmNuX3NpemVfYml0cyA9IHZvbC0+Y2x1
c3Rlcl9zaXplX2JpdHM7Ci0JfSBlbHNlIHsKLQkJbmktPml0eXBlLmluZGV4LnZjbl9zaXplID0g
dm9sLT5zZWN0b3Jfc2l6ZTsKLQkJbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPSB2b2wt
PnNlY3Rvcl9zaXplX2JpdHM7Ci0JfQotCS8qIENoZWNrIGZvciBwcmVzZW5jZSBvZiBpbmRleCBh
bGxvY2F0aW9uIGF0dHJpYnV0ZS4gKi8KLQlpZiAoIShpci0+aW5kZXguZmxhZ3MgJiBMQVJHRV9J
TkRFWCkpIHsKLQkJLyogTm8gaW5kZXggYWxsb2NhdGlvbi4gKi8KLQkJdmktPmlfc2l6ZSA9IG5p
LT5pbml0aWFsaXplZF9zaXplID0gbmktPmFsbG9jYXRlZF9zaXplID0gMDsKLQkJLyogV2UgYXJl
IGRvbmUgd2l0aCB0aGUgbWZ0IHJlY29yZCwgc28gd2UgcmVsZWFzZSBpdC4gKi8KLQkJbnRmc19h
dHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0J
CW0gPSBOVUxMOwotCQljdHggPSBOVUxMOwotCQlnb3RvIHNraXBfbGFyZ2VfaW5kZXhfc3R1ZmY7
Ci0JfSAvKiBMQVJHRV9JTkRFWDogIEluZGV4IGFsbG9jYXRpb24gcHJlc2VudC4gIFNldHVwIHN0
YXRlLiAqLwotCU5Jbm9TZXRJbmRleEFsbG9jUHJlc2VudChuaSk7Ci0JLyogRmluZCBpbmRleCBh
bGxvY2F0aW9uIGF0dHJpYnV0ZS4gKi8KLQludGZzX2F0dHJfcmVpbml0X3NlYXJjaF9jdHgoY3R4
KTsKLQllcnIgPSBudGZzX2F0dHJfbG9va3VwKEFUX0lOREVYX0FMTE9DQVRJT04sIG5pLT5uYW1l
LCBuaS0+bmFtZV9sZW4sCi0JCQlDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlp
ZiAodW5saWtlbHkoZXJyKSkgewotCQlpZiAoZXJyID09IC1FTk9FTlQpCi0JCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiJElOREVYX0FMTE9DQVRJT04gYXR0cmlidXRlIGlzICIKLQkJCQkJIm5vdCBw
cmVzZW50IGJ1dCAkSU5ERVhfUk9PVCAiCi0JCQkJCSJpbmRpY2F0ZWQgaXQgaXMuIik7Ci0JCWVs
c2UKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJGYWlsZWQgdG8gbG9va3VwICIKLQkJCQkJIiRJ
TkRFWF9BTExPQ0FUSU9OIGF0dHJpYnV0ZS4iKTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0J
YSA9IGN0eC0+YXR0cjsKLQlpZiAoIWEtPm5vbl9yZXNpZGVudCkgewotCQludGZzX2Vycm9yKHZp
LT5pX3NiLCAiJElOREVYX0FMTE9DQVRJT04gYXR0cmlidXRlIGlzICIKLQkJCQkicmVzaWRlbnQu
Iik7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qCi0JICogRW5zdXJlIHRoZSBhdHRyaWJ1
dGUgbmFtZSBpcyBwbGFjZWQgYmVmb3JlIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5LgotCSAqLwot
CWlmICh1bmxpa2VseShhLT5uYW1lX2xlbmd0aCAmJiAobGUxNl90b19jcHUoYS0+bmFtZV9vZmZz
ZXQpID49Ci0JCQlsZTE2X3RvX2NwdSgKLQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50Lm1hcHBpbmdf
cGFpcnNfb2Zmc2V0KSkpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIiRJTkRFWF9BTExPQ0FU
SU9OIGF0dHJpYnV0ZSBuYW1lIGlzICIKLQkJCQkicGxhY2VkIGFmdGVyIHRoZSBtYXBwaW5nIHBh
aXJzIGFycmF5LiIpOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQlpZiAoYS0+ZmxhZ3MgJiBB
VFRSX0lTX0VOQ1JZUFRFRCkgewotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiJElOREVYX0FMTE9D
QVRJT04gYXR0cmlidXRlIGlzICIKLQkJCQkiZW5jcnlwdGVkLiIpOwotCQlnb3RvIHVubV9lcnJf
b3V0OwotCX0KLQlpZiAoYS0+ZmxhZ3MgJiBBVFRSX0lTX1NQQVJTRSkgewotCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiJElOREVYX0FMTE9DQVRJT04gYXR0cmlidXRlIGlzIHNwYXJzZS4iKTsKLQkJ
Z290byB1bm1fZXJyX291dDsKLQl9Ci0JaWYgKGEtPmZsYWdzICYgQVRUUl9DT01QUkVTU0lPTl9N
QVNLKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICIkSU5ERVhfQUxMT0NBVElPTiBhdHRyaWJ1
dGUgaXMgIgotCQkJCSJjb21wcmVzc2VkLiIpOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQlp
ZiAoYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3ZjbikgewotCQludGZzX2Vycm9yKHZpLT5p
X3NiLCAiRmlyc3QgZXh0ZW50IG9mICRJTkRFWF9BTExPQ0FUSU9OICIKLQkJCQkiYXR0cmlidXRl
IGhhcyBub24gemVybyBsb3dlc3RfdmNuLiIpOwotCQlnb3RvIHVubV9lcnJfb3V0OwotCX0KLQl2
aS0+aV9zaXplID0gc2xlNjRfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50LmRhdGFfc2l6ZSk7
Ci0JbmktPmluaXRpYWxpemVkX3NpemUgPSBzbGU2NF90b19jcHUoCi0JCQlhLT5kYXRhLm5vbl9y
ZXNpZGVudC5pbml0aWFsaXplZF9zaXplKTsKLQluaS0+YWxsb2NhdGVkX3NpemUgPSBzbGU2NF90
b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQuYWxsb2NhdGVkX3NpemUpOwotCS8qCi0JICogV2Ug
YXJlIGRvbmUgd2l0aCB0aGUgbWZ0IHJlY29yZCwgc28gd2UgcmVsZWFzZSBpdC4gIE90aGVyd2lz
ZQotCSAqIHdlIHdvdWxkIGRlYWRsb2NrIGluIG50ZnNfYXR0cl9pZ2V0KCkuCi0JICovCi0JbnRm
c19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsK
LQltID0gTlVMTDsKLQljdHggPSBOVUxMOwotCS8qIEdldCB0aGUgaW5kZXggYml0bWFwIGF0dHJp
YnV0ZSBpbm9kZS4gKi8KLQlidmkgPSBudGZzX2F0dHJfaWdldChiYXNlX3ZpLCBBVF9CSVRNQVAs
IG5pLT5uYW1lLCBuaS0+bmFtZV9sZW4pOwotCWlmIChJU19FUlIoYnZpKSkgewotCQludGZzX2Vy
cm9yKHZpLT5pX3NiLCAiRmFpbGVkIHRvIGdldCBiaXRtYXAgYXR0cmlidXRlLiIpOwotCQllcnIg
PSBQVFJfRVJSKGJ2aSk7Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCWJuaSA9IE5URlNfSShi
dmkpOwotCWlmIChOSW5vQ29tcHJlc3NlZChibmkpIHx8IE5Jbm9FbmNyeXB0ZWQoYm5pKSB8fAot
CQkJTklub1NwYXJzZShibmkpKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICIkQklUTUFQIGF0
dHJpYnV0ZSBpcyBjb21wcmVzc2VkIGFuZC9vciAiCi0JCQkJImVuY3J5cHRlZCBhbmQvb3Igc3Bh
cnNlLiIpOwotCQlnb3RvIGlwdXRfdW5tX2Vycl9vdXQ7Ci0JfQotCS8qIENvbnNpc3RlbmN5IGNo
ZWNrIGJpdG1hcCBzaXplIHZzLiBpbmRleCBhbGxvY2F0aW9uIHNpemUuICovCi0JYnZpX3NpemUg
PSBpX3NpemVfcmVhZChidmkpOwotCWlmICgoYnZpX3NpemUgPDwgMykgPCAodmktPmlfc2l6ZSA+
PiBuaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZV9iaXRzKSkgewotCQludGZzX2Vycm9yKHZpLT5p
X3NiLCAiSW5kZXggYml0bWFwIHRvbyBzbWFsbCAoMHglbGx4KSBmb3IgIgotCQkJCSJpbmRleCBh
bGxvY2F0aW9uICgweCVsbHgpLiIsIGJ2aV9zaXplIDw8IDMsCi0JCQkJdmktPmlfc2l6ZSk7Ci0J
CWdvdG8gaXB1dF91bm1fZXJyX291dDsKLQl9Ci0JaXB1dChidmkpOwotc2tpcF9sYXJnZV9pbmRl
eF9zdHVmZjoKLQkvKiBTZXR1cCB0aGUgb3BlcmF0aW9ucyBmb3IgdGhpcyBpbmRleCBpbm9kZS4g
Ki8KLQl2aS0+aV9tYXBwaW5nLT5hX29wcyA9ICZudGZzX21zdF9hb3BzOwotCXZpLT5pX2Jsb2Nr
cyA9IG5pLT5hbGxvY2F0ZWRfc2l6ZSA+PiA5OwotCS8qCi0JICogTWFrZSBzdXJlIHRoZSBiYXNl
IGlub2RlIGRvZXNuJ3QgZ28gYXdheSBhbmQgYXR0YWNoIGl0IHRvIHRoZQotCSAqIGluZGV4IGlu
b2RlLgotCSAqLwotCWlncmFiKGJhc2VfdmkpOwotCW5pLT5leHQuYmFzZV9udGZzX2lubyA9IGJh
c2Vfbmk7Ci0JbmktPm5yX2V4dGVudHMgPSAtMTsKLQotCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0J
cmV0dXJuIDA7Ci1pcHV0X3VubV9lcnJfb3V0OgotCWlwdXQoYnZpKTsKLXVubV9lcnJfb3V0Ogot
CWlmICghZXJyKQotCQllcnIgPSAtRUlPOwotCWlmIChjdHgpCi0JCW50ZnNfYXR0cl9wdXRfc2Vh
cmNoX2N0eChjdHgpOwotCWlmIChtKQotCQl1bm1hcF9tZnRfcmVjb3JkKGJhc2VfbmkpOwotZXJy
X291dDoKLQludGZzX2Vycm9yKHZpLT5pX3NiLCAiRmFpbGVkIHdpdGggZXJyb3IgY29kZSAlaSB3
aGlsZSByZWFkaW5nIGluZGV4ICIKLQkJCSJpbm9kZSAobWZ0X25vIDB4JWx4LCBuYW1lX2xlbiAl
aS4iLCBlcnIsIHZpLT5pX2lubywKLQkJCW5pLT5uYW1lX2xlbik7Ci0JbWFrZV9iYWRfaW5vZGUo
dmkpOwotCWlmIChlcnIgIT0gLUVPUE5PVFNVUFAgJiYgZXJyICE9IC1FTk9NRU0pCi0JCU5Wb2xT
ZXRFcnJvcnModm9sKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKgotICogVGhlIE1GVCBpbm9kZSBo
YXMgc3BlY2lhbCBsb2NraW5nLCBzbyB0ZWFjaCB0aGUgbG9jayB2YWxpZGF0b3IKLSAqIGFib3V0
IHRoaXMgYnkgc3BsaXR0aW5nIG9mZiB0aGUgbG9ja2luZyBydWxlcyBvZiB0aGUgTUZUIGZyb20K
LSAqIHRoZSBsb2NraW5nIHJ1bGVzIG9mIG90aGVyIGlub2Rlcy4gVGhlIE1GVCBpbm9kZSBjYW4g
bmV2ZXIgYmUKLSAqIGFjY2Vzc2VkIGZyb20gdGhlIFZGUyBzaWRlIChvciBldmVuIGludGVybmFs
bHkpLCBvbmx5IGJ5IHRoZQotICogbWFwX21mdCBmdW5jdGlvbnMuCi0gKi8KLXN0YXRpYyBzdHJ1
Y3QgbG9ja19jbGFzc19rZXkgbWZ0X25pX3J1bmxpc3RfbG9ja19rZXksIG1mdF9uaV9tcmVjX2xv
Y2tfa2V5OwotCi0vKioKLSAqIG50ZnNfcmVhZF9pbm9kZV9tb3VudCAtIHNwZWNpYWwgcmVhZF9p
bm9kZSBmb3IgbW91bnQgdGltZSB1c2Ugb25seQotICogQHZpOgkJaW5vZGUgdG8gcmVhZAotICoK
LSAqIFJlYWQgaW5vZGUgRklMRV9NRlQgYXQgbW91bnQgdGltZSwgb25seSBjYWxsZWQgd2l0aCBz
dXBlcl9ibG9jayBsb2NrCi0gKiBoZWxkIGZyb20gd2l0aGluIHRoZSByZWFkX3N1cGVyKCkgY29k
ZSBwYXRoLgotICoKLSAqIFRoaXMgZnVuY3Rpb24gZXhpc3RzIGJlY2F1c2Ugd2hlbiBpdCBpcyBj
YWxsZWQgdGhlIHBhZ2UgY2FjaGUgZm9yICRNRlQvJERBVEEKLSAqIGlzIG5vdCBpbml0aWFsaXpl
ZCBhbmQgaGVuY2Ugd2UgY2Fubm90IGdldCBhdCB0aGUgY29udGVudHMgb2YgbWZ0IHJlY29yZHMK
LSAqIGJ5IGNhbGxpbmcgbWFwX21mdF9yZWNvcmQqKCkuCi0gKgotICogRnVydGhlciBpdCBuZWVk
cyB0byBjb3BlIHdpdGggdGhlIGNpcmN1bGFyIHJlZmVyZW5jZXMgcHJvYmxlbSwgaS5lLiBjYW5u
b3QKLSAqIGxvYWQgYW55IGF0dHJpYnV0ZXMgb3RoZXIgdGhhbiAkQVRUUklCVVRFX0xJU1QgdW50
aWwgJERBVEEgaXMgbG9hZGVkLCBiZWNhdXNlCi0gKiB3ZSBkbyBub3Qga25vdyB3aGVyZSB0aGUg
b3RoZXIgZXh0ZW50IG1mdCByZWNvcmRzIGFyZSB5ZXQgYW5kIGFnYWluLCBiZWNhdXNlCi0gKiB3
ZSBjYW5ub3QgY2FsbCBtYXBfbWZ0X3JlY29yZCooKSB5ZXQuICBPYnZpb3VzbHkgdGhpcyBhcHBs
aWVzIG9ubHkgd2hlbiBhbgotICogYXR0cmlidXRlIGxpc3QgaXMgYWN0dWFsbHkgcHJlc2VudCBp
biAkTUZUIGlub2RlLgotICoKLSAqIFdlIHNvbHZlIHRoZXNlIHByb2JsZW1zIGJ5IHN0YXJ0aW5n
IHdpdGggdGhlICREQVRBIGF0dHJpYnV0ZSBiZWZvcmUgYW55dGhpbmcKLSAqIGVsc2UgYW5kIGl0
ZXJhdGluZyB1c2luZyBudGZzX2F0dHJfbG9va3VwKCREQVRBKSBvdmVyIGFsbCBleHRlbnRzLiAg
QXMgZWFjaAotICogZXh0ZW50IGlzIGZvdW5kLCB3ZSBudGZzX21hcHBpbmdfcGFpcnNfZGVjb21w
cmVzcygpIGluY2x1ZGluZyB0aGUgaW1wbGllZAotICogbnRmc19ydW5saXN0c19tZXJnZSgpLiAg
RWFjaCBzdGVwIG9mIHRoZSBpdGVyYXRpb24gbmVjZXNzYXJpbHkgcHJvdmlkZXMKLSAqIHN1ZmZp
Y2llbnQgaW5mb3JtYXRpb24gZm9yIHRoZSBuZXh0IHN0ZXAgdG8gY29tcGxldGUuCi0gKgotICog
VGhpcyBzaG91bGQgd29yayBidXQgdGhlcmUgYXJlIHR3byBwb3NzaWJsZSBwaXQgZmFsbHMgKHNl
ZSBpbmxpbmUgY29tbWVudHMKLSAqIGJlbG93KSwgYnV0IG9ubHkgdGltZSB3aWxsIHRlbGwgaWYg
dGhleSBhcmUgcmVhbCBwaXRzIG9yIGp1c3Qgc21va2UuLi4KLSAqLwotaW50IG50ZnNfcmVhZF9p
bm9kZV9tb3VudChzdHJ1Y3QgaW5vZGUgKnZpKQotewotCVZDTiBuZXh0X3ZjbiwgbGFzdF92Y24s
IGhpZ2hlc3RfdmNuOwotCXM2NCBibG9jazsKLQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gdmkt
Pmlfc2I7Ci0JbnRmc192b2x1bWUgKnZvbCA9IE5URlNfU0Ioc2IpOwotCXN0cnVjdCBidWZmZXJf
aGVhZCAqYmg7Ci0JbnRmc19pbm9kZSAqbmk7Ci0JTUZUX1JFQ09SRCAqbSA9IE5VTEw7Ci0JQVRU
Ul9SRUNPUkQgKmE7Ci0JbnRmc19hdHRyX3NlYXJjaF9jdHggKmN0eDsKLQl1bnNpZ25lZCBpbnQg
aSwgbnJfYmxvY2tzOwotCWludCBlcnI7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQot
CS8qIEluaXRpYWxpemUgdGhlIG50ZnMgc3BlY2lmaWMgcGFydCBvZiBAdmkuICovCi0JbnRmc19p
bml0X2JpZ19pbm9kZSh2aSk7Ci0KLQluaSA9IE5URlNfSSh2aSk7Ci0KLQkvKiBTZXR1cCB0aGUg
ZGF0YSBhdHRyaWJ1dGUuIEl0IGlzIHNwZWNpYWwgYXMgaXQgaXMgbXN0IHByb3RlY3RlZC4gKi8K
LQlOSW5vU2V0Tm9uUmVzaWRlbnQobmkpOwotCU5Jbm9TZXRNc3RQcm90ZWN0ZWQobmkpOwotCU5J
bm9TZXRTcGFyc2VEaXNhYmxlZChuaSk7Ci0JbmktPnR5cGUgPSBBVF9EQVRBOwotCW5pLT5uYW1l
ID0gTlVMTDsKLQluaS0+bmFtZV9sZW4gPSAwOwotCS8qCi0JICogVGhpcyBzZXRzIHVwIG91ciBs
aXR0bGUgY2hlYXQgYWxsb3dpbmcgdXMgdG8gcmV1c2UgdGhlIGFzeW5jIHJlYWQgaW8KLQkgKiBj
b21wbGV0aW9uIGhhbmRsZXIgZm9yIGRpcmVjdG9yaWVzLgotCSAqLwotCW5pLT5pdHlwZS5pbmRl
eC5ibG9ja19zaXplID0gdm9sLT5tZnRfcmVjb3JkX3NpemU7Ci0JbmktPml0eXBlLmluZGV4LmJs
b2NrX3NpemVfYml0cyA9IHZvbC0+bWZ0X3JlY29yZF9zaXplX2JpdHM7Ci0KLQkvKiBWZXJ5IGlt
cG9ydGFudCEgTmVlZGVkIHRvIGJlIGFibGUgdG8gY2FsbCBtYXBfbWZ0X3JlY29yZCooKS4gKi8K
LQl2b2wtPm1mdF9pbm8gPSB2aTsKLQotCS8qIEFsbG9jYXRlIGVub3VnaCBtZW1vcnkgdG8gcmVh
ZCB0aGUgZmlyc3QgbWZ0IHJlY29yZC4gKi8KLQlpZiAodm9sLT5tZnRfcmVjb3JkX3NpemUgPiA2
NCAqIDEwMjQpIHsKLQkJbnRmc19lcnJvcihzYiwgIlVuc3VwcG9ydGVkIG1mdCByZWNvcmQgc2l6
ZSAlaSAobWF4IDY0a2lCKS4iLAotCQkJCXZvbC0+bWZ0X3JlY29yZF9zaXplKTsKLQkJZ290byBl
cnJfb3V0OwotCX0KLQlpID0gdm9sLT5tZnRfcmVjb3JkX3NpemU7Ci0JaWYgKGkgPCBzYi0+c19i
bG9ja3NpemUpCi0JCWkgPSBzYi0+c19ibG9ja3NpemU7Ci0JbSA9IChNRlRfUkVDT1JEKiludGZz
X21hbGxvY19ub2ZzKGkpOwotCWlmICghbSkgewotCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRv
IGFsbG9jYXRlIGJ1ZmZlciBmb3IgJE1GVCByZWNvcmQgMC4iKTsKLQkJZ290byBlcnJfb3V0Owot
CX0KLQotCS8qIERldGVybWluZSB0aGUgZmlyc3QgYmxvY2sgb2YgdGhlICRNRlQvJERBVEEgYXR0
cmlidXRlLiAqLwotCWJsb2NrID0gdm9sLT5tZnRfbGNuIDw8IHZvbC0+Y2x1c3Rlcl9zaXplX2Jp
dHMgPj4KLQkJCXNiLT5zX2Jsb2Nrc2l6ZV9iaXRzOwotCW5yX2Jsb2NrcyA9IHZvbC0+bWZ0X3Jl
Y29yZF9zaXplID4+IHNiLT5zX2Jsb2Nrc2l6ZV9iaXRzOwotCWlmICghbnJfYmxvY2tzKQotCQlu
cl9ibG9ja3MgPSAxOwotCi0JLyogTG9hZCAkTUZULyREQVRBJ3MgZmlyc3QgbWZ0IHJlY29yZC4g
Ki8KLQlmb3IgKGkgPSAwOyBpIDwgbnJfYmxvY2tzOyBpKyspIHsKLQkJYmggPSBzYl9icmVhZChz
YiwgYmxvY2srKyk7Ci0JCWlmICghYmgpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICJEZXZpY2UgcmVh
ZCBmYWlsZWQuIik7Ci0JCQlnb3RvIGVycl9vdXQ7Ci0JCX0KLQkJbWVtY3B5KChjaGFyKiltICsg
KGkgPDwgc2ItPnNfYmxvY2tzaXplX2JpdHMpLCBiaC0+Yl9kYXRhLAotCQkJCXNiLT5zX2Jsb2Nr
c2l6ZSk7Ci0JCWJyZWxzZShiaCk7Ci0JfQotCi0JaWYgKGxlMzJfdG9fY3B1KG0tPmJ5dGVzX2Fs
bG9jYXRlZCkgIT0gdm9sLT5tZnRfcmVjb3JkX3NpemUpIHsKLQkJbnRmc19lcnJvcihzYiwgIklu
Y29ycmVjdCBtZnQgcmVjb3JkIHNpemUgJXUgaW4gc3VwZXJibG9jaywgc2hvdWxkIGJlICV1LiIs
Ci0JCQkJbGUzMl90b19jcHUobS0+Ynl0ZXNfYWxsb2NhdGVkKSwgdm9sLT5tZnRfcmVjb3JkX3Np
emUpOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCi0JLyogQXBwbHkgdGhlIG1zdCBmaXh1cHMuICov
Ci0JaWYgKHBvc3RfcmVhZF9tc3RfZml4dXAoKE5URlNfUkVDT1JEKiltLCB2b2wtPm1mdF9yZWNv
cmRfc2l6ZSkpIHsKLQkJLyogRklYTUU6IFRyeSB0byB1c2UgdGhlICRNRlRNaXJyIG5vdy4gKi8K
LQkJbnRmc19lcnJvcihzYiwgIk1TVCBmaXh1cCBmYWlsZWQuICRNRlQgaXMgY29ycnVwdC4iKTsK
LQkJZ290byBlcnJfb3V0OwotCX0KLQotCS8qIFNhbml0eSBjaGVjayBvZmZzZXQgdG8gdGhlIGZp
cnN0IGF0dHJpYnV0ZSAqLwotCWlmIChsZTE2X3RvX2NwdShtLT5hdHRyc19vZmZzZXQpID49IGxl
MzJfdG9fY3B1KG0tPmJ5dGVzX2FsbG9jYXRlZCkpIHsKLQkJbnRmc19lcnJvcihzYiwgIkluY29y
cmVjdCBtZnQgb2Zmc2V0IHRvIHRoZSBmaXJzdCBhdHRyaWJ1dGUgJXUgaW4gc3VwZXJibG9jay4i
LAotCQkJICAgICAgIGxlMTZfdG9fY3B1KG0tPmF0dHJzX29mZnNldCkpOwotCQlnb3RvIGVycl9v
dXQ7Ci0JfQotCi0JLyogTmVlZCB0aGlzIHRvIHNhbml0eSBjaGVjayBhdHRyaWJ1dGUgbGlzdCBy
ZWZlcmVuY2VzIHRvICRNRlQuICovCi0JdmktPmlfZ2VuZXJhdGlvbiA9IG5pLT5zZXFfbm8gPSBs
ZTE2X3RvX2NwdShtLT5zZXF1ZW5jZV9udW1iZXIpOwotCi0JLyogUHJvdmlkZXMgcmVhZF9mb2xp
bygpIGZvciBtYXBfbWZ0X3JlY29yZCgpLiAqLwotCXZpLT5pX21hcHBpbmctPmFfb3BzID0gJm50
ZnNfbXN0X2FvcHM7Ci0KLQljdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgobmksIG0pOwot
CWlmICghY3R4KSB7Ci0JCWVyciA9IC1FTk9NRU07Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0KLQkv
KiBGaW5kIHRoZSBhdHRyaWJ1dGUgbGlzdCBhdHRyaWJ1dGUgaWYgcHJlc2VudC4gKi8KLQllcnIg
PSBudGZzX2F0dHJfbG9va3VwKEFUX0FUVFJJQlVURV9MSVNULCBOVUxMLCAwLCAwLCAwLCBOVUxM
LCAwLCBjdHgpOwotCWlmIChlcnIpIHsKLQkJaWYgKHVubGlrZWx5KGVyciAhPSAtRU5PRU5UKSkg
ewotCQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBsb29rdXAgYXR0cmlidXRlIGxpc3QgIgot
CQkJCQkiYXR0cmlidXRlLiBZb3Ugc2hvdWxkIHJ1biBjaGtkc2suIik7Ci0JCQlnb3RvIHB1dF9l
cnJfb3V0OwotCQl9Ci0JfSBlbHNlIC8qIGlmICghZXJyKSAqLyB7Ci0JCUFUVFJfTElTVF9FTlRS
WSAqYWxfZW50cnksICpuZXh0X2FsX2VudHJ5OwotCQl1OCAqYWxfZW5kOwotCQlzdGF0aWMgY29u
c3QgY2hhciAqZXMgPSAiICBOb3QgYWxsb3dlZC4gICRNRlQgaXMgY29ycnVwdC4gICIKLQkJCQki
WW91IHNob3VsZCBydW4gY2hrZHNrLiI7Ci0KLQkJbnRmc19kZWJ1ZygiQXR0cmlidXRlIGxpc3Qg
YXR0cmlidXRlIGZvdW5kIGluICRNRlQuIik7Ci0JCU5Jbm9TZXRBdHRyTGlzdChuaSk7Ci0JCWEg
PSBjdHgtPmF0dHI7Ci0JCWlmIChhLT5mbGFncyAmIEFUVFJfQ09NUFJFU1NJT05fTUFTSykgewot
CQkJbnRmc19lcnJvcihzYiwgIkF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBpcyAiCi0JCQkJCSJj
b21wcmVzc2VkLiVzIiwgZXMpOwotCQkJZ290byBwdXRfZXJyX291dDsKLQkJfQotCQlpZiAoYS0+
ZmxhZ3MgJiBBVFRSX0lTX0VOQ1JZUFRFRCB8fAotCQkJCWEtPmZsYWdzICYgQVRUUl9JU19TUEFS
U0UpIHsKLQkJCWlmIChhLT5ub25fcmVzaWRlbnQpIHsKLQkJCQludGZzX2Vycm9yKHNiLCAiTm9u
LXJlc2lkZW50IGF0dHJpYnV0ZSBsaXN0ICIKLQkJCQkJCSJhdHRyaWJ1dGUgaXMgZW5jcnlwdGVk
LyIKLQkJCQkJCSJzcGFyc2UuJXMiLCBlcyk7Ci0JCQkJZ290byBwdXRfZXJyX291dDsKLQkJCX0K
LQkJCW50ZnNfd2FybmluZyhzYiwgIlJlc2lkZW50IGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSAi
Ci0JCQkJCSJpbiAkTUZUIHN5c3RlbSBmaWxlIGlzIG1hcmtlZCAiCi0JCQkJCSJlbmNyeXB0ZWQv
c3BhcnNlIHdoaWNoIGlzIG5vdCB0cnVlLiAgIgotCQkJCQkiSG93ZXZlciwgV2luZG93cyBhbGxv
d3MgdGhpcyBhbmQgIgotCQkJCQkiY2hrZHNrIGRvZXMgbm90IGRldGVjdCBvciBjb3JyZWN0IGl0
ICIKLQkJCQkJInNvIHdlIHdpbGwganVzdCBpZ25vcmUgdGhlIGludmFsaWQgIgotCQkJCQkiZmxh
Z3MgYW5kIHByZXRlbmQgdGhleSBhcmUgbm90IHNldC4iKTsKLQkJfQotCQkvKiBOb3cgYWxsb2Nh
dGUgbWVtb3J5IGZvciB0aGUgYXR0cmlidXRlIGxpc3QuICovCi0JCW5pLT5hdHRyX2xpc3Rfc2l6
ZSA9ICh1MzIpbnRmc19hdHRyX3NpemUoYSk7Ci0JCWlmICghbmktPmF0dHJfbGlzdF9zaXplKSB7
Ci0JCQludGZzX2Vycm9yKHNiLCAiQXR0cl9saXN0X3NpemUgaXMgemVybyIpOwotCQkJZ290byBw
dXRfZXJyX291dDsKLQkJfQotCQluaS0+YXR0cl9saXN0ID0gbnRmc19tYWxsb2Nfbm9mcyhuaS0+
YXR0cl9saXN0X3NpemUpOwotCQlpZiAoIW5pLT5hdHRyX2xpc3QpIHsKLQkJCW50ZnNfZXJyb3Io
c2IsICJOb3QgZW5vdWdoIG1lbW9yeSB0byBhbGxvY2F0ZSBidWZmZXIgIgotCQkJCQkiZm9yIGF0
dHJpYnV0ZSBsaXN0LiIpOwotCQkJZ290byBwdXRfZXJyX291dDsKLQkJfQotCQlpZiAoYS0+bm9u
X3Jlc2lkZW50KSB7Ci0JCQlOSW5vU2V0QXR0ckxpc3ROb25SZXNpZGVudChuaSk7Ci0JCQlpZiAo
YS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3ZjbikgewotCQkJCW50ZnNfZXJyb3Ioc2IsICJB
dHRyaWJ1dGUgbGlzdCBoYXMgbm9uIHplcm8gIgotCQkJCQkJImxvd2VzdF92Y24uICRNRlQgaXMg
Y29ycnVwdC4gIgotCQkJCQkJIllvdSBzaG91bGQgcnVuIGNoa2Rzay4iKTsKLQkJCQlnb3RvIHB1
dF9lcnJfb3V0OwotCQkJfQotCQkJLyogU2V0dXAgdGhlIHJ1bmxpc3QuICovCi0JCQluaS0+YXR0
cl9saXN0X3JsLnJsID0gbnRmc19tYXBwaW5nX3BhaXJzX2RlY29tcHJlc3Modm9sLAotCQkJCQlh
LCBOVUxMKTsKLQkJCWlmIChJU19FUlIobmktPmF0dHJfbGlzdF9ybC5ybCkpIHsKLQkJCQllcnIg
PSBQVFJfRVJSKG5pLT5hdHRyX2xpc3RfcmwucmwpOwotCQkJCW5pLT5hdHRyX2xpc3Rfcmwucmwg
PSBOVUxMOwotCQkJCW50ZnNfZXJyb3Ioc2IsICJNYXBwaW5nIHBhaXJzIGRlY29tcHJlc3Npb24g
IgotCQkJCQkJImZhaWxlZCB3aXRoIGVycm9yIGNvZGUgJWkuIiwKLQkJCQkJCS1lcnIpOwotCQkJ
CWdvdG8gcHV0X2Vycl9vdXQ7Ci0JCQl9Ci0JCQkvKiBOb3cgbG9hZCB0aGUgYXR0cmlidXRlIGxp
c3QuICovCi0JCQlpZiAoKGVyciA9IGxvYWRfYXR0cmlidXRlX2xpc3Qodm9sLCAmbmktPmF0dHJf
bGlzdF9ybCwKLQkJCQkJbmktPmF0dHJfbGlzdCwgbmktPmF0dHJfbGlzdF9zaXplLAotCQkJCQlz
bGU2NF90b19jcHUoYS0+ZGF0YS4KLQkJCQkJbm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemUp
KSkpIHsKLQkJCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGxvYWQgYXR0cmlidXRlIGxpc3Qg
IgotCQkJCQkJImF0dHJpYnV0ZSB3aXRoIGVycm9yIGNvZGUgJWkuIiwKLQkJCQkJCS1lcnIpOwot
CQkJCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JCQl9Ci0JCX0gZWxzZSAvKiBpZiAoIWN0eC5hdHRyLT5u
b25fcmVzaWRlbnQpICovIHsKLQkJCWlmICgodTgqKWEgKyBsZTE2X3RvX2NwdSgKLQkJCQkJYS0+
ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpICsKLQkJCQkJbGUzMl90b19jcHUoCi0JCQkJCWEt
PmRhdGEucmVzaWRlbnQudmFsdWVfbGVuZ3RoKSA+Ci0JCQkJCSh1OCopY3R4LT5tcmVjICsgdm9s
LT5tZnRfcmVjb3JkX3NpemUpIHsKLQkJCQludGZzX2Vycm9yKHNiLCAiQ29ycnVwdCBhdHRyaWJ1
dGUgbGlzdCAiCi0JCQkJCQkiYXR0cmlidXRlLiIpOwotCQkJCWdvdG8gcHV0X2Vycl9vdXQ7Ci0J
CQl9Ci0JCQkvKiBOb3cgY29weSB0aGUgYXR0cmlidXRlIGxpc3QuICovCi0JCQltZW1jcHkobmkt
PmF0dHJfbGlzdCwgKHU4KilhICsgbGUxNl90b19jcHUoCi0JCQkJCWEtPmRhdGEucmVzaWRlbnQu
dmFsdWVfb2Zmc2V0KSwKLQkJCQkJbGUzMl90b19jcHUoCi0JCQkJCWEtPmRhdGEucmVzaWRlbnQu
dmFsdWVfbGVuZ3RoKSk7Ci0JCX0KLQkJLyogVGhlIGF0dHJpYnV0ZSBsaXN0IGlzIG5vdyBzZXR1
cCBpbiBtZW1vcnkuICovCi0JCS8qCi0JCSAqIEZJWE1FOiBJIGRvbid0IGtub3cgaWYgdGhpcyBj
YXNlIGlzIGFjdHVhbGx5IHBvc3NpYmxlLgotCQkgKiBBY2NvcmRpbmcgdG8gbG9naWMgaXQgaXMg
bm90IHBvc3NpYmxlIGJ1dCBJIGhhdmUgc2VlbiB0b28KLQkJICogbWFueSB3ZWlyZCB0aGluZ3Mg
aW4gTVMgc29mdHdhcmUgdG8gcmVseSBvbiBsb2dpYy4uLiBUaHVzIHdlCi0JCSAqIHBlcmZvcm0g
YSBtYW51YWwgc2VhcmNoIGFuZCBtYWtlIHN1cmUgdGhlIGZpcnN0ICRNRlQvJERBVEEKLQkJICog
ZXh0ZW50IGlzIGluIHRoZSBiYXNlIGlub2RlLiBJZiBpdCBpcyBub3Qgd2UgYWJvcnQgd2l0aCBh
bgotCQkgKiBlcnJvciBhbmQgaWYgd2UgZXZlciBzZWUgYSByZXBvcnQgb2YgdGhpcyBlcnJvciB3
ZSB3aWxsIG5lZWQKLQkJICogdG8gZG8gc29tZSBtYWdpYyBpbiBvcmRlciB0byBoYXZlIHRoZSBu
ZWNlc3NhcnkgbWZ0IHJlY29yZAotCQkgKiBsb2FkZWQgYW5kIGluIHRoZSByaWdodCBwbGFjZSBp
biB0aGUgcGFnZSBjYWNoZS4gQnV0Ci0JCSAqIGhvcGVmdWxseSBsb2dpYyB3aWxsIHByZXZhaWwg
YW5kIHRoaXMgbmV2ZXIgaGFwcGVucy4uLgotCQkgKi8KLQkJYWxfZW50cnkgPSAoQVRUUl9MSVNU
X0VOVFJZKiluaS0+YXR0cl9saXN0OwotCQlhbF9lbmQgPSAodTgqKWFsX2VudHJ5ICsgbmktPmF0
dHJfbGlzdF9zaXplOwotCQlmb3IgKDs7IGFsX2VudHJ5ID0gbmV4dF9hbF9lbnRyeSkgewotCQkJ
LyogT3V0IG9mIGJvdW5kcyBjaGVjay4gKi8KLQkJCWlmICgodTgqKWFsX2VudHJ5IDwgbmktPmF0
dHJfbGlzdCB8fAotCQkJCQkodTgqKWFsX2VudHJ5ID4gYWxfZW5kKQotCQkJCWdvdG8gZW1fcHV0
X2Vycl9vdXQ7Ci0JCQkvKiBDYXRjaCB0aGUgZW5kIG9mIHRoZSBhdHRyaWJ1dGUgbGlzdC4gKi8K
LQkJCWlmICgodTgqKWFsX2VudHJ5ID09IGFsX2VuZCkKLQkJCQlnb3RvIGVtX3B1dF9lcnJfb3V0
OwotCQkJaWYgKCFhbF9lbnRyeS0+bGVuZ3RoKQotCQkJCWdvdG8gZW1fcHV0X2Vycl9vdXQ7Ci0J
CQlpZiAoKHU4KilhbF9lbnRyeSArIDYgPiBhbF9lbmQgfHwgKHU4KilhbF9lbnRyeSArCi0JCQkJ
CWxlMTZfdG9fY3B1KGFsX2VudHJ5LT5sZW5ndGgpID4gYWxfZW5kKQotCQkJCWdvdG8gZW1fcHV0
X2Vycl9vdXQ7Ci0JCQluZXh0X2FsX2VudHJ5ID0gKEFUVFJfTElTVF9FTlRSWSopKCh1OCopYWxf
ZW50cnkgKwotCQkJCQlsZTE2X3RvX2NwdShhbF9lbnRyeS0+bGVuZ3RoKSk7Ci0JCQlpZiAobGUz
Ml90b19jcHUoYWxfZW50cnktPnR5cGUpID4gbGUzMl90b19jcHUoQVRfREFUQSkpCi0JCQkJZ290
byBlbV9wdXRfZXJyX291dDsKLQkJCWlmIChBVF9EQVRBICE9IGFsX2VudHJ5LT50eXBlKQotCQkJ
CWNvbnRpbnVlOwotCQkJLyogV2Ugd2FudCBhbiB1bm5hbWVkIGF0dHJpYnV0ZS4gKi8KLQkJCWlm
IChhbF9lbnRyeS0+bmFtZV9sZW5ndGgpCi0JCQkJZ290byBlbV9wdXRfZXJyX291dDsKLQkJCS8q
IFdhbnQgdGhlIGZpcnN0IGVudHJ5LCBpLmUuIGxvd2VzdF92Y24gPT0gMC4gKi8KLQkJCWlmIChh
bF9lbnRyeS0+bG93ZXN0X3ZjbikKLQkJCQlnb3RvIGVtX3B1dF9lcnJfb3V0OwotCQkJLyogRmly
c3QgZW50cnkgaGFzIHRvIGJlIGluIHRoZSBiYXNlIG1mdCByZWNvcmQuICovCi0JCQlpZiAoTVJF
Rl9MRShhbF9lbnRyeS0+bWZ0X3JlZmVyZW5jZSkgIT0gdmktPmlfaW5vKSB7Ci0JCQkJLyogTUZU
IHJlZmVyZW5jZXMgZG8gbm90IG1hdGNoLCBsb2dpYyBmYWlscy4gKi8KLQkJCQludGZzX2Vycm9y
KHNiLCAiQlVHOiBUaGUgZmlyc3QgJERBVEEgZXh0ZW50ICIKLQkJCQkJCSJvZiAkTUZUIGlzIG5v
dCBpbiB0aGUgYmFzZSAiCi0JCQkJCQkibWZ0IHJlY29yZC4gUGxlYXNlIHJlcG9ydCAiCi0JCQkJ
CQkieW91IHNhdyB0aGlzIG1lc3NhZ2UgdG8gIgotCQkJCQkJImxpbnV4LW50ZnMtZGV2QGxpc3Rz
LiIKLQkJCQkJCSJzb3VyY2Vmb3JnZS5uZXQiKTsKLQkJCQlnb3RvIHB1dF9lcnJfb3V0OwotCQkJ
fSBlbHNlIHsKLQkJCQkvKiBTZXF1ZW5jZSBudW1iZXJzIG11c3QgbWF0Y2guICovCi0JCQkJaWYg
KE1TRVFOT19MRShhbF9lbnRyeS0+bWZ0X3JlZmVyZW5jZSkgIT0KLQkJCQkJCW5pLT5zZXFfbm8p
Ci0JCQkJCWdvdG8gZW1fcHV0X2Vycl9vdXQ7Ci0JCQkJLyogR290IGl0LiBBbGwgaXMgb2suIFdl
IGNhbiBzdG9wIG5vdy4gKi8KLQkJCQlicmVhazsKLQkJCX0KLQkJfQotCX0KLQotCW50ZnNfYXR0
cl9yZWluaXRfc2VhcmNoX2N0eChjdHgpOwotCi0JLyogTm93IGxvYWQgYWxsIGF0dHJpYnV0ZSBl
eHRlbnRzLiAqLwotCWEgPSBOVUxMOwotCW5leHRfdmNuID0gbGFzdF92Y24gPSBoaWdoZXN0X3Zj
biA9IDA7Ci0Jd2hpbGUgKCEoZXJyID0gbnRmc19hdHRyX2xvb2t1cChBVF9EQVRBLCBOVUxMLCAw
LCAwLCBuZXh0X3ZjbiwgTlVMTCwgMCwKLQkJCWN0eCkpKSB7Ci0JCXJ1bmxpc3RfZWxlbWVudCAq
bnJsOwotCi0JCS8qIENhY2hlIHRoZSBjdXJyZW50IGF0dHJpYnV0ZS4gKi8KLQkJYSA9IGN0eC0+
YXR0cjsKLQkJLyogJE1GVCBtdXN0IGJlIG5vbi1yZXNpZGVudC4gKi8KLQkJaWYgKCFhLT5ub25f
cmVzaWRlbnQpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICIkTUZUIG11c3QgYmUgbm9uLXJlc2lkZW50
IGJ1dCBhICIKLQkJCQkJInJlc2lkZW50IGV4dGVudCB3YXMgZm91bmQuICRNRlQgaXMgIgotCQkJ
CQkiY29ycnVwdC4gUnVuIGNoa2Rzay4iKTsKLQkJCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JCX0KLQkJ
LyogJE1GVCBtdXN0IGJlIHVuY29tcHJlc3NlZCBhbmQgdW5lbmNyeXB0ZWQuICovCi0JCWlmIChh
LT5mbGFncyAmIEFUVFJfQ09NUFJFU1NJT05fTUFTSyB8fAotCQkJCWEtPmZsYWdzICYgQVRUUl9J
U19FTkNSWVBURUQgfHwKLQkJCQlhLT5mbGFncyAmIEFUVFJfSVNfU1BBUlNFKSB7Ci0JCQludGZz
X2Vycm9yKHNiLCAiJE1GVCBtdXN0IGJlIHVuY29tcHJlc3NlZCwgIgotCQkJCQkibm9uLXNwYXJz
ZSwgYW5kIHVuZW5jcnlwdGVkIGJ1dCBhICIKLQkJCQkJImNvbXByZXNzZWQvc3BhcnNlL2VuY3J5
cHRlZCBleHRlbnQgIgotCQkJCQkid2FzIGZvdW5kLiAkTUZUIGlzIGNvcnJ1cHQuIFJ1biAiCi0J
CQkJCSJjaGtkc2suIik7Ci0JCQlnb3RvIHB1dF9lcnJfb3V0OwotCQl9Ci0JCS8qCi0JCSAqIERl
Y29tcHJlc3MgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgb2YgdGhpcyBleHRlbnQgYW5kIG1lcmdl
Ci0JCSAqIHRoZSByZXN1bHQgaW50byB0aGUgZXhpc3RpbmcgcnVubGlzdC4gTm8gbmVlZCBmb3Ig
bG9ja2luZwotCQkgKiBhcyB3ZSBoYXZlIGV4Y2x1c2l2ZSBhY2Nlc3MgdG8gdGhlIGlub2RlIGF0
IHRoaXMgdGltZSBhbmQgd2UKLQkJICogYXJlIGEgbW91bnQgaW4gcHJvZ3Jlc3MgdGFzaywgdG9v
LgotCQkgKi8KLQkJbnJsID0gbnRmc19tYXBwaW5nX3BhaXJzX2RlY29tcHJlc3Modm9sLCBhLCBu
aS0+cnVubGlzdC5ybCk7Ci0JCWlmIChJU19FUlIobnJsKSkgewotCQkJbnRmc19lcnJvcihzYiwg
Im50ZnNfbWFwcGluZ19wYWlyc19kZWNvbXByZXNzKCkgIgotCQkJCQkiZmFpbGVkIHdpdGggZXJy
b3IgY29kZSAlbGQuICAkTUZUIGlzICIKLQkJCQkJImNvcnJ1cHQuIiwgUFRSX0VSUihucmwpKTsK
LQkJCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JCX0KLQkJbmktPnJ1bmxpc3QucmwgPSBucmw7Ci0KLQkJ
LyogQXJlIHdlIGluIHRoZSBmaXJzdCBleHRlbnQ/ICovCi0JCWlmICghbmV4dF92Y24pIHsKLQkJ
CWlmIChhLT5kYXRhLm5vbl9yZXNpZGVudC5sb3dlc3RfdmNuKSB7Ci0JCQkJbnRmc19lcnJvcihz
YiwgIkZpcnN0IGV4dGVudCBvZiAkREFUQSAiCi0JCQkJCQkiYXR0cmlidXRlIGhhcyBub24gemVy
byAiCi0JCQkJCQkibG93ZXN0X3Zjbi4gJE1GVCBpcyBjb3JydXB0LiAiCi0JCQkJCQkiWW91IHNo
b3VsZCBydW4gY2hrZHNrLiIpOwotCQkJCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JCQl9Ci0JCQkvKiBH
ZXQgdGhlIGxhc3QgdmNuIGluIHRoZSAkREFUQSBhdHRyaWJ1dGUuICovCi0JCQlsYXN0X3ZjbiA9
IHNsZTY0X3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuYWxsb2NhdGVkX3NpemUp
Ci0JCQkJCT4+IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JCQkvKiBGaWxsIGluIHRoZSBpbm9k
ZSBzaXplLiAqLwotCQkJdmktPmlfc2l6ZSA9IHNsZTY0X3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5u
b25fcmVzaWRlbnQuZGF0YV9zaXplKTsKLQkJCW5pLT5pbml0aWFsaXplZF9zaXplID0gc2xlNjRf
dG9fY3B1KAotCQkJCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5pbml0aWFsaXplZF9zaXplKTsKLQkJ
CW5pLT5hbGxvY2F0ZWRfc2l6ZSA9IHNsZTY0X3RvX2NwdSgKLQkJCQkJYS0+ZGF0YS5ub25fcmVz
aWRlbnQuYWxsb2NhdGVkX3NpemUpOwotCQkJLyoKLQkJCSAqIFZlcmlmeSB0aGUgbnVtYmVyIG9m
IG1mdCByZWNvcmRzIGRvZXMgbm90IGV4Y2VlZAotCQkJICogMl4zMiAtIDEuCi0JCQkgKi8KLQkJ
CWlmICgodmktPmlfc2l6ZSA+PiB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzKSA+PQotCQkJCQko
MVVMTCA8PCAzMikpIHsKLQkJCQludGZzX2Vycm9yKHNiLCAiJE1GVCBpcyB0b28gYmlnISBBYm9y
dGluZy4iKTsKLQkJCQlnb3RvIHB1dF9lcnJfb3V0OwotCQkJfQotCQkJLyoKLQkJCSAqIFdlIGhh
dmUgZ290IHRoZSBmaXJzdCBleHRlbnQgb2YgdGhlIHJ1bmxpc3QgZm9yCi0JCQkgKiAkTUZUIHdo
aWNoIG1lYW5zIGl0IGlzIG5vdyByZWxhdGl2ZWx5IHNhZmUgdG8gY2FsbAotCQkJICogdGhlIG5v
cm1hbCBudGZzX3JlYWRfaW5vZGUoKSBmdW5jdGlvbi4KLQkJCSAqIENvbXBsZXRlIHJlYWRpbmcg
dGhlIGlub2RlLCB0aGlzIHdpbGwgYWN0dWFsbHkKLQkJCSAqIHJlLXJlYWQgdGhlIG1mdCByZWNv
cmQgZm9yICRNRlQsIHRoaXMgdGltZSBlbnRlcmluZwotCQkJICogaXQgaW50byB0aGUgcGFnZSBj
YWNoZSB3aXRoIHdoaWNoIHdlIGNvbXBsZXRlIHRoZQotCQkJICoga2ljayBzdGFydCBvZiB0aGUg
dm9sdW1lLiBJdCBzaG91bGQgYmUgc2FmZSB0byBkbwotCQkJICogdGhpcyBub3cgYXMgdGhlIGZp
cnN0IGV4dGVudCBvZiAkTUZULyREQVRBIGlzCi0JCQkgKiBhbHJlYWR5IGtub3duIGFuZCB3ZSB3
b3VsZCBob3BlIHRoYXQgd2UgZG9uJ3QgbmVlZAotCQkJICogZnVydGhlciBleHRlbnRzIGluIG9y
ZGVyIHRvIGZpbmQgdGhlIG90aGVyCi0JCQkgKiBhdHRyaWJ1dGVzIGJlbG9uZ2luZyB0byAkTUZU
LiBPbmx5IHRpbWUgd2lsbCB0ZWxsIGlmCi0JCQkgKiB0aGlzIGlzIHJlYWxseSB0aGUgY2FzZS4g
SWYgbm90IHdlIHdpbGwgaGF2ZSB0byBwbGF5Ci0JCQkgKiBtYWdpYyBhdCB0aGlzIHBvaW50LCBw
b3NzaWJseSBkdXBsaWNhdGluZyBhIGxvdCBvZgotCQkJICogbnRmc19yZWFkX2lub2RlKCkgYXQg
dGhpcyBwb2ludC4gV2Ugd2lsbCBuZWVkIHRvCi0JCQkgKiBlbnN1cmUgd2UgZG8gZW5vdWdoIG9m
IGl0cyB3b3JrIHRvIGJlIGFibGUgdG8gY2FsbAotCQkJICogbnRmc19yZWFkX2lub2RlKCkgb24g
ZXh0ZW50cyBvZiAkTUZULyREQVRBLiBCdXQgbGV0cwotCQkJICogaG9wZSB0aGlzIG5ldmVyIGhh
cHBlbnMuLi4KLQkJCSAqLwotCQkJbnRmc19yZWFkX2xvY2tlZF9pbm9kZSh2aSk7Ci0JCQlpZiAo
aXNfYmFkX2lub2RlKHZpKSkgewotCQkJCW50ZnNfZXJyb3Ioc2IsICJudGZzX3JlYWRfaW5vZGUo
KSBvZiAkTUZUICIKLQkJCQkJCSJmYWlsZWQuIEJVRyBvciBjb3JydXB0ICRNRlQuICIKLQkJCQkJ
CSJSdW4gY2hrZHNrIGFuZCBpZiBubyBlcnJvcnMgIgotCQkJCQkJImFyZSBmb3VuZCwgcGxlYXNl
IHJlcG9ydCB5b3UgIgotCQkJCQkJInNhdyB0aGlzIG1lc3NhZ2UgdG8gIgotCQkJCQkJImxpbnV4
LW50ZnMtZGV2QGxpc3RzLiIKLQkJCQkJCSJzb3VyY2Vmb3JnZS5uZXQiKTsKLQkJCQludGZzX2F0
dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQkJCQkvKiBSZXZlcnQgdG8gdGhlIHNhZmUgc3VwZXIg
b3BlcmF0aW9ucy4gKi8KLQkJCQludGZzX2ZyZWUobSk7Ci0JCQkJcmV0dXJuIC0xOwotCQkJfQot
CQkJLyoKLQkJCSAqIFJlLWluaXRpYWxpemUgc29tZSBzcGVjaWZpY3MgYWJvdXQgJE1GVCdzIGlu
b2RlIGFzCi0JCQkgKiBudGZzX3JlYWRfaW5vZGUoKSB3aWxsIGhhdmUgc2V0IHVwIHRoZSBkZWZh
dWx0IG9uZXMuCi0JCQkgKi8KLQkJCS8qIFNldCB1aWQgYW5kIGdpZCB0byByb290LiAqLwotCQkJ
dmktPmlfdWlkID0gR0xPQkFMX1JPT1RfVUlEOwotCQkJdmktPmlfZ2lkID0gR0xPQkFMX1JPT1Rf
R0lEOwotCQkJLyogUmVndWxhciBmaWxlLiBObyBhY2Nlc3MgZm9yIGFueW9uZS4gKi8KLQkJCXZp
LT5pX21vZGUgPSBTX0lGUkVHOwotCQkJLyogTm8gVkZTIGluaXRpYXRlZCBvcGVyYXRpb25zIGFs
bG93ZWQgZm9yICRNRlQuICovCi0JCQl2aS0+aV9vcCA9ICZudGZzX2VtcHR5X2lub2RlX29wczsK
LQkJCXZpLT5pX2ZvcCA9ICZudGZzX2VtcHR5X2ZpbGVfb3BzOwotCQl9Ci0KLQkJLyogR2V0IHRo
ZSBsb3dlc3QgdmNuIGZvciB0aGUgbmV4dCBleHRlbnQuICovCi0JCWhpZ2hlc3RfdmNuID0gc2xl
NjRfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuKTsKLQkJbmV4dF92Y24g
PSBoaWdoZXN0X3ZjbiArIDE7Ci0KLQkJLyogT25seSBvbmUgZXh0ZW50IG9yIGVycm9yLCB3aGlj
aCB3ZSBjYXRjaCBiZWxvdy4gKi8KLQkJaWYgKG5leHRfdmNuIDw9IDApCi0JCQlicmVhazsKLQot
CQkvKiBBdm9pZCBlbmRsZXNzIGxvb3BzIGR1ZSB0byBjb3JydXB0aW9uLiAqLwotCQlpZiAobmV4
dF92Y24gPCBzbGU2NF90b19jcHUoCi0JCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3Zj
bikpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICIkTUZUIGhhcyBjb3JydXB0IGF0dHJpYnV0ZSBsaXN0
ICIKLQkJCQkJImF0dHJpYnV0ZS4gUnVuIGNoa2Rzay4iKTsKLQkJCWdvdG8gcHV0X2Vycl9vdXQ7
Ci0JCX0KLQl9Ci0JaWYgKGVyciAhPSAtRU5PRU5UKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJGYWls
ZWQgdG8gbG9va3VwICRNRlQvJERBVEEgYXR0cmlidXRlIGV4dGVudC4gIgotCQkJCSIkTUZUIGlz
IGNvcnJ1cHQuIFJ1biBjaGtkc2suIik7Ci0JCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JfQotCWlmICgh
YSkgewotCQludGZzX2Vycm9yKHNiLCAiJE1GVC8kREFUQSBhdHRyaWJ1dGUgbm90IGZvdW5kLiAk
TUZUIGlzICIKLQkJCQkiY29ycnVwdC4gUnVuIGNoa2Rzay4iKTsKLQkJZ290byBwdXRfZXJyX291
dDsKLQl9Ci0JaWYgKGhpZ2hlc3RfdmNuICYmIGhpZ2hlc3RfdmNuICE9IGxhc3RfdmNuIC0gMSkg
ewotCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGxvYWQgdGhlIGNvbXBsZXRlIHJ1bmxpc3Qg
Zm9yICIKLQkJCQkiJE1GVC8kREFUQS4gRHJpdmVyIGJ1ZyBvciBjb3JydXB0ICRNRlQuICIKLQkJ
CQkiUnVuIGNoa2Rzay4iKTsKLQkJbnRmc19kZWJ1ZygiaGlnaGVzdF92Y24gPSAweCVsbHgsIGxh
c3RfdmNuIC0gMSA9IDB4JWxseCIsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyloaWdoZXN0X3Zj
biwKLQkJCQkodW5zaWduZWQgbG9uZyBsb25nKWxhc3RfdmNuIC0gMSk7Ci0JCWdvdG8gcHV0X2Vy
cl9vdXQ7Ci0JfQotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCW50ZnNfZGVidWco
IkRvbmUuIik7Ci0JbnRmc19mcmVlKG0pOwotCi0JLyoKLQkgKiBTcGxpdCB0aGUgbG9ja2luZyBy
dWxlcyBvZiB0aGUgTUZUIGlub2RlIGZyb20gdGhlCi0JICogbG9ja2luZyBydWxlcyBvZiBvdGhl
ciBpbm9kZXM6Ci0JICovCi0JbG9ja2RlcF9zZXRfY2xhc3MoJm5pLT5ydW5saXN0LmxvY2ssICZt
ZnRfbmlfcnVubGlzdF9sb2NrX2tleSk7Ci0JbG9ja2RlcF9zZXRfY2xhc3MoJm5pLT5tcmVjX2xv
Y2ssICZtZnRfbmlfbXJlY19sb2NrX2tleSk7Ci0KLQlyZXR1cm4gMDsKLQotZW1fcHV0X2Vycl9v
dXQ6Ci0JbnRmc19lcnJvcihzYiwgIkNvdWxkbid0IGZpbmQgZmlyc3QgZXh0ZW50IG9mICREQVRB
IGF0dHJpYnV0ZSBpbiAiCi0JCQkiYXR0cmlidXRlIGxpc3QuICRNRlQgaXMgY29ycnVwdC4gUnVu
IGNoa2Rzay4iKTsKLXB1dF9lcnJfb3V0OgotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgp
OwotZXJyX291dDoKLQludGZzX2Vycm9yKHNiLCAiRmFpbGVkLiBNYXJraW5nIGlub2RlIGFzIGJh
ZC4iKTsKLQltYWtlX2JhZF9pbm9kZSh2aSk7Ci0JbnRmc19mcmVlKG0pOwotCXJldHVybiAtMTsK
LX0KLQotc3RhdGljIHZvaWQgX19udGZzX2NsZWFyX2lub2RlKG50ZnNfaW5vZGUgKm5pKQotewot
CS8qIEZyZWUgYWxsIGFsb2NhdGVkIG1lbW9yeS4gKi8KLQlkb3duX3dyaXRlKCZuaS0+cnVubGlz
dC5sb2NrKTsKLQlpZiAobmktPnJ1bmxpc3QucmwpIHsKLQkJbnRmc19mcmVlKG5pLT5ydW5saXN0
LnJsKTsKLQkJbmktPnJ1bmxpc3QucmwgPSBOVUxMOwotCX0KLQl1cF93cml0ZSgmbmktPnJ1bmxp
c3QubG9jayk7Ci0KLQlpZiAobmktPmF0dHJfbGlzdCkgewotCQludGZzX2ZyZWUobmktPmF0dHJf
bGlzdCk7Ci0JCW5pLT5hdHRyX2xpc3QgPSBOVUxMOwotCX0KLQotCWRvd25fd3JpdGUoJm5pLT5h
dHRyX2xpc3RfcmwubG9jayk7Ci0JaWYgKG5pLT5hdHRyX2xpc3RfcmwucmwpIHsKLQkJbnRmc19m
cmVlKG5pLT5hdHRyX2xpc3RfcmwucmwpOwotCQluaS0+YXR0cl9saXN0X3JsLnJsID0gTlVMTDsK
LQl9Ci0JdXBfd3JpdGUoJm5pLT5hdHRyX2xpc3RfcmwubG9jayk7Ci0KLQlpZiAobmktPm5hbWVf
bGVuICYmIG5pLT5uYW1lICE9IEkzMCkgewotCQkvKiBDYXRjaCBidWdzLi4uICovCi0JCUJVR19P
TighbmktPm5hbWUpOwotCQlrZnJlZShuaS0+bmFtZSk7Ci0JfQotfQotCi12b2lkIG50ZnNfY2xl
YXJfZXh0ZW50X2lub2RlKG50ZnNfaW5vZGUgKm5pKQotewotCW50ZnNfZGVidWcoIkVudGVyaW5n
IGZvciBpbm9kZSAweCVseC4iLCBuaS0+bWZ0X25vKTsKLQotCUJVR19PTihOSW5vQXR0cihuaSkp
OwotCUJVR19PTihuaS0+bnJfZXh0ZW50cyAhPSAtMSk7Ci0KLSNpZmRlZiBOVEZTX1JXCi0JaWYg
KE5Jbm9EaXJ0eShuaSkpIHsKLQkJaWYgKCFpc19iYWRfaW5vZGUoVkZTX0kobmktPmV4dC5iYXNl
X250ZnNfaW5vKSkpCi0JCQludGZzX2Vycm9yKG5pLT52b2wtPnNiLCAiQ2xlYXJpbmcgZGlydHkg
ZXh0ZW50IGlub2RlISAgIgotCQkJCQkiTG9zaW5nIGRhdGEhICBUaGlzIGlzIGEgQlVHISEhIik7
Ci0JCS8vIEZJWE1FOiAgRG8gc29tZXRoaW5nISEhCi0JfQotI2VuZGlmIC8qIE5URlNfUlcgKi8K
LQotCV9fbnRmc19jbGVhcl9pbm9kZShuaSk7Ci0KLQkvKiBCeWUsIGJ5ZS4uLiAqLwotCW50ZnNf
ZGVzdHJveV9leHRlbnRfaW5vZGUobmkpOwotfQotCi0vKioKLSAqIG50ZnNfZXZpY3RfYmlnX2lu
b2RlIC0gY2xlYW4gdXAgdGhlIG50ZnMgc3BlY2lmaWMgcGFydCBvZiBhbiBpbm9kZQotICogQHZp
OgkJdmZzIGlub2RlIHBlbmRpbmcgYW5uaWhpbGF0aW9uCi0gKgotICogV2hlbiB0aGUgVkZTIGlz
IGdvaW5nIHRvIHJlbW92ZSBhbiBpbm9kZSBmcm9tIG1lbW9yeSwgbnRmc19jbGVhcl9iaWdfaW5v
ZGUoKQotICogaXMgY2FsbGVkLCB3aGljaCBkZWFsbG9jYXRlcyBhbGwgbWVtb3J5IGJlbG9uZ2lu
ZyB0byB0aGUgTlRGUyBzcGVjaWZpYyBwYXJ0Ci0gKiBvZiB0aGUgaW5vZGUgYW5kIHJldHVybnMu
Ci0gKgotICogSWYgdGhlIE1GVCByZWNvcmQgaXMgZGlydHksIHdlIGNvbW1pdCBpdCBiZWZvcmUg
ZG9pbmcgYW55dGhpbmcgZWxzZS4KLSAqLwotdm9pZCBudGZzX2V2aWN0X2JpZ19pbm9kZShzdHJ1
Y3QgaW5vZGUgKnZpKQotewotCW50ZnNfaW5vZGUgKm5pID0gTlRGU19JKHZpKTsKLQotCXRydW5j
YXRlX2lub2RlX3BhZ2VzX2ZpbmFsKCZ2aS0+aV9kYXRhKTsKLQljbGVhcl9pbm9kZSh2aSk7Ci0K
LSNpZmRlZiBOVEZTX1JXCi0JaWYgKE5Jbm9EaXJ0eShuaSkpIHsKLQkJYm9vbCB3YXNfYmFkID0g
KGlzX2JhZF9pbm9kZSh2aSkpOwotCi0JCS8qIENvbW1pdHRpbmcgdGhlIGlub2RlIGFsc28gY29t
bWl0cyBhbGwgZXh0ZW50IGlub2Rlcy4gKi8KLQkJbnRmc19jb21taXRfaW5vZGUodmkpOwotCi0J
CWlmICghd2FzX2JhZCAmJiAoaXNfYmFkX2lub2RlKHZpKSB8fCBOSW5vRGlydHkobmkpKSkgewot
CQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkZhaWxlZCB0byBjb21taXQgZGlydHkgaW5vZGUgIgot
CQkJCQkiMHglbHguICBMb3NpbmcgZGF0YSEiLCB2aS0+aV9pbm8pOwotCQkJLy8gRklYTUU6ICBE
byBzb21ldGhpbmchISEKLQkJfQotCX0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0KLQkvKiBObyBu
ZWVkIHRvIGxvY2sgYXQgdGhpcyBzdGFnZSBhcyBubyBvbmUgZWxzZSBoYXMgYSByZWZlcmVuY2Uu
ICovCi0JaWYgKG5pLT5ucl9leHRlbnRzID4gMCkgewotCQlpbnQgaTsKLQotCQlmb3IgKGkgPSAw
OyBpIDwgbmktPm5yX2V4dGVudHM7IGkrKykKLQkJCW50ZnNfY2xlYXJfZXh0ZW50X2lub2RlKG5p
LT5leHQuZXh0ZW50X250ZnNfaW5vc1tpXSk7Ci0JCWtmcmVlKG5pLT5leHQuZXh0ZW50X250ZnNf
aW5vcyk7Ci0JfQotCi0JX19udGZzX2NsZWFyX2lub2RlKG5pKTsKLQotCWlmIChOSW5vQXR0cihu
aSkpIHsKLQkJLyogUmVsZWFzZSB0aGUgYmFzZSBpbm9kZSBpZiB3ZSBhcmUgaG9sZGluZyBpdC4g
Ki8KLQkJaWYgKG5pLT5ucl9leHRlbnRzID09IC0xKSB7Ci0JCQlpcHV0KFZGU19JKG5pLT5leHQu
YmFzZV9udGZzX2lubykpOwotCQkJbmktPm5yX2V4dGVudHMgPSAwOwotCQkJbmktPmV4dC5iYXNl
X250ZnNfaW5vID0gTlVMTDsKLQkJfQotCX0KLQlCVUdfT04obmktPnBhZ2UpOwotCWlmICghYXRv
bWljX2RlY19hbmRfdGVzdCgmbmktPmNvdW50KSkKLQkJQlVHKCk7Ci0JcmV0dXJuOwotfQotCi0v
KioKLSAqIG50ZnNfc2hvd19vcHRpb25zIC0gc2hvdyBtb3VudCBvcHRpb25zIGluIC9wcm9jL21v
dW50cwotICogQHNmOgkJc2VxX2ZpbGUgaW4gd2hpY2ggdG8gd3JpdGUgb3VyIG1vdW50IG9wdGlv
bnMKLSAqIEByb290Oglyb290IG9mIHRoZSBtb3VudGVkIHRyZWUgd2hvc2UgbW91bnQgb3B0aW9u
cyB0byBkaXNwbGF5Ci0gKgotICogQ2FsbGVkIGJ5IHRoZSBWRlMgb25jZSBmb3IgZWFjaCBtb3Vu
dGVkIG50ZnMgdm9sdW1lIHdoZW4gc29tZW9uZSByZWFkcwotICogL3Byb2MvbW91bnRzIGluIG9y
ZGVyIHRvIGRpc3BsYXkgdGhlIE5URlMgc3BlY2lmaWMgbW91bnQgb3B0aW9ucyBvZiBlYWNoCi0g
KiBtb3VudC4gVGhlIG1vdW50IG9wdGlvbnMgb2YgZnMgc3BlY2lmaWVkIGJ5IEByb290IGFyZSB3
cml0dGVuIHRvIHRoZSBzZXEgZmlsZQotICogQHNmIGFuZCBzdWNjZXNzIGlzIHJldHVybmVkLgot
ICovCi1pbnQgbnRmc19zaG93X29wdGlvbnMoc3RydWN0IHNlcV9maWxlICpzZiwgc3RydWN0IGRl
bnRyeSAqcm9vdCkKLXsKLQludGZzX3ZvbHVtZSAqdm9sID0gTlRGU19TQihyb290LT5kX3NiKTsK
LQlpbnQgaTsKLQotCXNlcV9wcmludGYoc2YsICIsdWlkPSVpIiwgZnJvbV9rdWlkX211bmdlZCgm
aW5pdF91c2VyX25zLCB2b2wtPnVpZCkpOwotCXNlcV9wcmludGYoc2YsICIsZ2lkPSVpIiwgZnJv
bV9rZ2lkX211bmdlZCgmaW5pdF91c2VyX25zLCB2b2wtPmdpZCkpOwotCWlmICh2b2wtPmZtYXNr
ID09IHZvbC0+ZG1hc2spCi0JCXNlcV9wcmludGYoc2YsICIsdW1hc2s9MCVvIiwgdm9sLT5mbWFz
ayk7Ci0JZWxzZSB7Ci0JCXNlcV9wcmludGYoc2YsICIsZm1hc2s9MCVvIiwgdm9sLT5mbWFzayk7
Ci0JCXNlcV9wcmludGYoc2YsICIsZG1hc2s9MCVvIiwgdm9sLT5kbWFzayk7Ci0JfQotCXNlcV9w
cmludGYoc2YsICIsbmxzPSVzIiwgdm9sLT5ubHNfbWFwLT5jaGFyc2V0KTsKLQlpZiAoTlZvbENh
c2VTZW5zaXRpdmUodm9sKSkKLQkJc2VxX3ByaW50ZihzZiwgIixjYXNlX3NlbnNpdGl2ZSIpOwot
CWlmIChOVm9sU2hvd1N5c3RlbUZpbGVzKHZvbCkpCi0JCXNlcV9wcmludGYoc2YsICIsc2hvd19z
eXNfZmlsZXMiKTsKLQlpZiAoIU5Wb2xTcGFyc2VFbmFibGVkKHZvbCkpCi0JCXNlcV9wcmludGYo
c2YsICIsZGlzYWJsZV9zcGFyc2UiKTsKLQlmb3IgKGkgPSAwOyBvbl9lcnJvcnNfYXJyW2ldLnZh
bDsgaSsrKSB7Ci0JCWlmIChvbl9lcnJvcnNfYXJyW2ldLnZhbCAmIHZvbC0+b25fZXJyb3JzKQot
CQkJc2VxX3ByaW50ZihzZiwgIixlcnJvcnM9JXMiLCBvbl9lcnJvcnNfYXJyW2ldLnN0cik7Ci0J
fQotCXNlcV9wcmludGYoc2YsICIsbWZ0X3pvbmVfbXVsdGlwbGllcj0laSIsIHZvbC0+bWZ0X3pv
bmVfbXVsdGlwbGllcik7Ci0JcmV0dXJuIDA7Ci19Ci0KLSNpZmRlZiBOVEZTX1JXCi0KLXN0YXRp
YyBjb25zdCBjaGFyICplcyA9ICIgIExlYXZpbmcgaW5jb25zaXN0ZW50IG1ldGFkYXRhLiAgVW5t
b3VudCBhbmQgcnVuICIKLQkJImNoa2Rzay4iOwotCi0vKioKLSAqIG50ZnNfdHJ1bmNhdGUgLSBj
YWxsZWQgd2hlbiB0aGUgaV9zaXplIG9mIGFuIG50ZnMgaW5vZGUgaXMgY2hhbmdlZAotICogQHZp
OgkJaW5vZGUgZm9yIHdoaWNoIHRoZSBpX3NpemUgd2FzIGNoYW5nZWQKLSAqCi0gKiBXZSBvbmx5
IHN1cHBvcnQgaV9zaXplIGNoYW5nZXMgZm9yIG5vcm1hbCBmaWxlcyBhdCBwcmVzZW50LCBpLmUu
IG5vdAotICogY29tcHJlc3NlZCBhbmQgbm90IGVuY3J5cHRlZC4gIFRoaXMgaXMgZW5mb3JjZWQg
aW4gbnRmc19zZXRhdHRyKCksIHNlZQotICogYmVsb3cuCi0gKgotICogVGhlIGtlcm5lbCBndWFy
YW50ZWVzIHRoYXQgQHZpIGlzIGEgcmVndWxhciBmaWxlIChTX0lTUkVHKCkgaXMgdHJ1ZSkgYW5k
Ci0gKiB0aGF0IHRoZSBjaGFuZ2UgaXMgYWxsb3dlZC4KLSAqCi0gKiBUaGlzIGltcGxpZXMgZm9y
IHVzIHRoYXQgQHZpIGlzIGEgZmlsZSBpbm9kZSByYXRoZXIgdGhhbiBhIGRpcmVjdG9yeSwgaW5k
ZXgsCi0gKiBvciBhdHRyaWJ1dGUgaW5vZGUgYXMgd2VsbCBhcyB0aGF0IEB2aSBpcyBhIGJhc2Ug
aW5vZGUuCi0gKgotICogUmV0dXJucyAwIG9uIHN1Y2Nlc3Mgb3IgLWVycm5vIG9uIGVycm9yLgot
ICoKLSAqIENhbGxlZCB3aXRoIC0+aV9tdXRleCBoZWxkLgotICovCi1pbnQgbnRmc190cnVuY2F0
ZShzdHJ1Y3QgaW5vZGUgKnZpKQotewotCXM2NCBuZXdfc2l6ZSwgb2xkX3NpemUsIG5yX2ZyZWVk
LCBuZXdfYWxsb2Nfc2l6ZSwgb2xkX2FsbG9jX3NpemU7Ci0JVkNOIGhpZ2hlc3RfdmNuOwotCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7Ci0JbnRmc19pbm9kZSAqYmFzZV9uaSwgKm5pID0gTlRGU19JKHZp
KTsKLQludGZzX3ZvbHVtZSAqdm9sID0gbmktPnZvbDsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAq
Y3R4OwotCU1GVF9SRUNPUkQgKm07Ci0JQVRUUl9SRUNPUkQgKmE7Ci0JY29uc3QgY2hhciAqdGUg
PSAiICBMZWF2aW5nIGZpbGUgbGVuZ3RoIG91dCBvZiBzeW5jIHdpdGggaV9zaXplLiI7Ci0JaW50
IGVyciwgbXBfc2l6ZSwgc2l6ZV9jaGFuZ2UsIGFsbG9jX2NoYW5nZTsKLQotCW50ZnNfZGVidWco
IkVudGVyaW5nIGZvciBpbm9kZSAweCVseC4iLCB2aS0+aV9pbm8pOwotCUJVR19PTihOSW5vQXR0
cihuaSkpOwotCUJVR19PTihTX0lTRElSKHZpLT5pX21vZGUpKTsKLQlCVUdfT04oTklub01zdFBy
b3RlY3RlZChuaSkpOwotCUJVR19PTihuaS0+bnJfZXh0ZW50cyA8IDApOwotcmV0cnlfdHJ1bmNh
dGU6Ci0JLyoKLQkgKiBMb2NrIHRoZSBydW5saXN0IGZvciB3cml0aW5nIGFuZCBtYXAgdGhlIG1m
dCByZWNvcmQgdG8gZW5zdXJlIGl0IGlzCi0JICogc2FmZSB0byBtZXNzIHdpdGggdGhlIGF0dHJp
YnV0ZSBydW5saXN0IGFuZCBzaXplcy4KLQkgKi8KLQlkb3duX3dyaXRlKCZuaS0+cnVubGlzdC5s
b2NrKTsKLQlpZiAoIU5Jbm9BdHRyKG5pKSkKLQkJYmFzZV9uaSA9IG5pOwotCWVsc2UKLQkJYmFz
ZV9uaSA9IG5pLT5leHQuYmFzZV9udGZzX2lubzsKLQltID0gbWFwX21mdF9yZWNvcmQoYmFzZV9u
aSk7Ci0JaWYgKElTX0VSUihtKSkgewotCQllcnIgPSBQVFJfRVJSKG0pOwotCQludGZzX2Vycm9y
KHZpLT5pX3NiLCAiRmFpbGVkIHRvIG1hcCBtZnQgcmVjb3JkIGZvciBpbm9kZSAweCVseCAiCi0J
CQkJIihlcnJvciBjb2RlICVkKS4lcyIsIHZpLT5pX2lubywgZXJyLCB0ZSk7Ci0JCWN0eCA9IE5V
TEw7Ci0JCW0gPSBOVUxMOwotCQlnb3RvIG9sZF9iYWRfb3V0OwotCX0KLQljdHggPSBudGZzX2F0
dHJfZ2V0X3NlYXJjaF9jdHgoYmFzZV9uaSwgbSk7Ci0JaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0J
CW50ZnNfZXJyb3IodmktPmlfc2IsICJGYWlsZWQgdG8gYWxsb2NhdGUgYSBzZWFyY2ggY29udGV4
dCBmb3IgIgotCQkJCSJpbm9kZSAweCVseCAobm90IGVub3VnaCBtZW1vcnkpLiVzIiwKLQkJCQl2
aS0+aV9pbm8sIHRlKTsKLQkJZXJyID0gLUVOT01FTTsKLQkJZ290byBvbGRfYmFkX291dDsKLQl9
Ci0JZXJyID0gbnRmc19hdHRyX2xvb2t1cChuaS0+dHlwZSwgbmktPm5hbWUsIG5pLT5uYW1lX2xl
biwKLQkJCUNBU0VfU0VOU0lUSVZFLCAwLCBOVUxMLCAwLCBjdHgpOwotCWlmICh1bmxpa2VseShl
cnIpKSB7Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkgewotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwg
Ik9wZW4gYXR0cmlidXRlIGlzIG1pc3NpbmcgZnJvbSAiCi0JCQkJCSJtZnQgcmVjb3JkLiAgSW5v
ZGUgMHglbHggaXMgY29ycnVwdC4gICIKLQkJCQkJIlJ1biBjaGtkc2suJXMiLCB2aS0+aV9pbm8s
IHRlKTsKLQkJCWVyciA9IC1FSU87Ci0JCX0gZWxzZQotCQkJbnRmc19lcnJvcih2aS0+aV9zYiwg
IkZhaWxlZCB0byBsb29rdXAgYXR0cmlidXRlIGluICIKLQkJCQkJImlub2RlIDB4JWx4IChlcnJv
ciBjb2RlICVkKS4lcyIsCi0JCQkJCXZpLT5pX2lubywgZXJyLCB0ZSk7Ci0JCWdvdG8gb2xkX2Jh
ZF9vdXQ7Ci0JfQotCW0gPSBjdHgtPm1yZWM7Ci0JYSA9IGN0eC0+YXR0cjsKLQkvKgotCSAqIFRo
ZSBpX3NpemUgb2YgdGhlIHZmcyBpbm9kZSBpcyB0aGUgbmV3IHNpemUgZm9yIHRoZSBhdHRyaWJ1
dGUgdmFsdWUuCi0JICovCi0JbmV3X3NpemUgPSBpX3NpemVfcmVhZCh2aSk7Ci0JLyogVGhlIGN1
cnJlbnQgc2l6ZSBvZiB0aGUgYXR0cmlidXRlIHZhbHVlIGlzIHRoZSBvbGQgc2l6ZS4gKi8KLQlv
bGRfc2l6ZSA9IG50ZnNfYXR0cl9zaXplKGEpOwotCS8qIENhbGN1bGF0ZSB0aGUgbmV3IGFsbG9j
YXRlZCBzaXplLiAqLwotCWlmIChOSW5vTm9uUmVzaWRlbnQobmkpKQotCQluZXdfYWxsb2Nfc2l6
ZSA9IChuZXdfc2l6ZSArIHZvbC0+Y2x1c3Rlcl9zaXplIC0gMSkgJgotCQkJCX4oczY0KXZvbC0+
Y2x1c3Rlcl9zaXplX21hc2s7Ci0JZWxzZQotCQluZXdfYWxsb2Nfc2l6ZSA9IChuZXdfc2l6ZSAr
IDcpICYgfjc7Ci0JLyogVGhlIGN1cnJlbnQgYWxsb2NhdGVkIHNpemUgaXMgdGhlIG9sZCBhbGxv
Y2F0ZWQgc2l6ZS4gKi8KLQlyZWFkX2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3Mp
OwotCW9sZF9hbGxvY19zaXplID0gbmktPmFsbG9jYXRlZF9zaXplOwotCXJlYWRfdW5sb2NrX2ly
cXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkvKgotCSAqIFRoZSBjaGFuZ2UgaW4g
dGhlIGZpbGUgc2l6ZS4gIFRoaXMgd2lsbCBiZSAwIGlmIG5vIGNoYW5nZSwgPjAgaWYgdGhlCi0J
ICogc2l6ZSBpcyBncm93aW5nLCBhbmQgPDAgaWYgdGhlIHNpemUgaXMgc2hyaW5raW5nLgotCSAq
LwotCXNpemVfY2hhbmdlID0gLTE7Ci0JaWYgKG5ld19zaXplIC0gb2xkX3NpemUgPj0gMCkgewot
CQlzaXplX2NoYW5nZSA9IDE7Ci0JCWlmIChuZXdfc2l6ZSA9PSBvbGRfc2l6ZSkKLQkJCXNpemVf
Y2hhbmdlID0gMDsKLQl9Ci0JLyogQXMgYWJvdmUgZm9yIHRoZSBhbGxvY2F0ZWQgc2l6ZS4gKi8K
LQlhbGxvY19jaGFuZ2UgPSAtMTsKLQlpZiAobmV3X2FsbG9jX3NpemUgLSBvbGRfYWxsb2Nfc2l6
ZSA+PSAwKSB7Ci0JCWFsbG9jX2NoYW5nZSA9IDE7Ci0JCWlmIChuZXdfYWxsb2Nfc2l6ZSA9PSBv
bGRfYWxsb2Nfc2l6ZSkKLQkJCWFsbG9jX2NoYW5nZSA9IDA7Ci0JfQotCS8qCi0JICogSWYgbmVp
dGhlciB0aGUgc2l6ZSBub3IgdGhlIGFsbG9jYXRpb24gYXJlIGJlaW5nIGNoYW5nZWQgdGhlcmUg
aXMKLQkgKiBub3RoaW5nIHRvIGRvLgotCSAqLwotCWlmICghc2l6ZV9jaGFuZ2UgJiYgIWFsbG9j
X2NoYW5nZSkKLQkJZ290byB1bm1fZG9uZTsKLQkvKiBJZiB0aGUgc2l6ZSBpcyBjaGFuZ2luZywg
Y2hlY2sgaWYgbmV3IHNpemUgaXMgYWxsb3dlZCBpbiAkQXR0ckRlZi4gKi8KLQlpZiAoc2l6ZV9j
aGFuZ2UpIHsKLQkJZXJyID0gbnRmc19hdHRyX3NpemVfYm91bmRzX2NoZWNrKHZvbCwgbmktPnR5
cGUsIG5ld19zaXplKTsKLQkJaWYgKHVubGlrZWx5KGVycikpIHsKLQkJCWlmIChlcnIgPT0gLUVS
QU5HRSkgewotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIlRydW5jYXRlIHdvdWxkIGNhdXNlIHRo
ZSAiCi0JCQkJCQkiaW5vZGUgMHglbHggdG8gJXNpbXVtIHNpemUgIgotCQkJCQkJImZvciBpdHMg
YXR0cmlidXRlIHR5cGUgIgotCQkJCQkJIigweCV4KS4gIEFib3J0aW5nIHRydW5jYXRlLiIsCi0J
CQkJCQl2aS0+aV9pbm8sCi0JCQkJCQluZXdfc2l6ZSA+IG9sZF9zaXplID8gImV4Y2VlZCAiCi0J
CQkJCQkidGhlIG1heCIgOiAiZ28gdW5kZXIgdGhlIG1pbiIsCi0JCQkJCQlsZTMyX3RvX2NwdShu
aS0+dHlwZSkpOwotCQkJCWVyciA9IC1FRkJJRzsKLQkJCX0gZWxzZSB7Ci0JCQkJbnRmc19lcnJv
cih2b2wtPnNiLCAiSW5vZGUgMHglbHggaGFzIHVua25vd24gIgotCQkJCQkJImF0dHJpYnV0ZSB0
eXBlIDB4JXguICAiCi0JCQkJCQkiQWJvcnRpbmcgdHJ1bmNhdGUuIiwKLQkJCQkJCXZpLT5pX2lu
bywKLQkJCQkJCWxlMzJfdG9fY3B1KG5pLT50eXBlKSk7Ci0JCQkJZXJyID0gLUVJTzsKLQkJCX0K
LQkJCS8qIFJlc2V0IHRoZSB2ZnMgaW5vZGUgc2l6ZSB0byB0aGUgb2xkIHNpemUuICovCi0JCQlp
X3NpemVfd3JpdGUodmksIG9sZF9zaXplKTsKLQkJCWdvdG8gZXJyX291dDsKLQkJfQotCX0KLQlp
ZiAoTklub0NvbXByZXNzZWQobmkpIHx8IE5Jbm9FbmNyeXB0ZWQobmkpKSB7Ci0JCW50ZnNfd2Fy
bmluZyh2aS0+aV9zYiwgIkNoYW5nZXMgaW4gaW5vZGUgc2l6ZSBhcmUgbm90ICIKLQkJCQkic3Vw
cG9ydGVkIHlldCBmb3IgJXMgZmlsZXMsIGlnbm9yaW5nLiIsCi0JCQkJTklub0NvbXByZXNzZWQo
bmkpID8gImNvbXByZXNzZWQiIDoKLQkJCQkiZW5jcnlwdGVkIik7Ci0JCWVyciA9IC1FT1BOT1RT
VVBQOwotCQlnb3RvIGJhZF9vdXQ7Ci0JfQotCWlmIChhLT5ub25fcmVzaWRlbnQpCi0JCWdvdG8g
ZG9fbm9uX3Jlc2lkZW50X3RydW5jYXRlOwotCUJVR19PTihOSW5vTm9uUmVzaWRlbnQobmkpKTsK
LQkvKiBSZXNpemUgdGhlIGF0dHJpYnV0ZSByZWNvcmQgdG8gYmVzdCBmaXQgdGhlIG5ldyBhdHRy
aWJ1dGUgc2l6ZS4gKi8KLQlpZiAobmV3X3NpemUgPCB2b2wtPm1mdF9yZWNvcmRfc2l6ZSAmJgot
CQkJIW50ZnNfcmVzaWRlbnRfYXR0cl92YWx1ZV9yZXNpemUobSwgYSwgbmV3X3NpemUpKSB7Ci0J
CS8qIFRoZSByZXNpemUgc3VjY2VlZGVkISAqLwotCQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9w
YWdlKGN0eC0+bnRmc19pbm8pOwotCQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lu
byk7Ci0JCXdyaXRlX2xvY2tfaXJxc2F2ZSgmbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQkvKiBV
cGRhdGUgdGhlIHNpemVzIGluIHRoZSBudGZzIGlub2RlIGFuZCBhbGwgaXMgZG9uZS4gKi8KLQkJ
bmktPmFsbG9jYXRlZF9zaXplID0gbGUzMl90b19jcHUoYS0+bGVuZ3RoKSAtCi0JCQkJbGUxNl90
b19jcHUoYS0+ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpOwotCQkvKgotCQkgKiBOb3RlIG50
ZnNfcmVzaWRlbnRfYXR0cl92YWx1ZV9yZXNpemUoKSBoYXMgYWxyZWFkeSBkb25lIGFueQotCQkg
KiBuZWNlc3NhcnkgZGF0YSBjbGVhcmluZyBpbiB0aGUgYXR0cmlidXRlIHJlY29yZC4gIFdoZW4g
dGhlCi0JCSAqIGZpbGUgaXMgYmVpbmcgc2hydW5rIHZtdHJ1bmNhdGUoKSB3aWxsIGFscmVhZHkg
aGF2ZSBjbGVhcmVkCi0JCSAqIHRoZSB0b3AgcGFydCBvZiB0aGUgbGFzdCBwYXJ0aWFsIHBhZ2Us
IGkuZS4gc2luY2UgdGhpcyBpcwotCQkgKiB0aGUgcmVzaWRlbnQgY2FzZSB0aGlzIGlzIHRoZSBw
YWdlIHdpdGggaW5kZXggMC4gIEhvd2V2ZXIsCi0JCSAqIHdoZW4gdGhlIGZpbGUgaXMgYmVpbmcg
ZXhwYW5kZWQsIHRoZSBwYWdlIGNhY2hlIHBhZ2UgZGF0YQotCQkgKiBiZXR3ZWVuIHRoZSBvbGQg
ZGF0YV9zaXplLCBpLmUuIG9sZF9zaXplLCBhbmQgdGhlIG5ld19zaXplCi0JCSAqIGhhcyBub3Qg
YmVlbiB6ZXJvZWQuICBGb3J0dW5hdGVseSwgd2UgZG8gbm90IG5lZWQgdG8gemVybyBpdAotCQkg
KiBlaXRoZXIgc2luY2Ugb24gb25lIGhhbmQgaXQgd2lsbCBlaXRoZXIgYWxyZWFkeSBiZSB6ZXJv
IGR1ZQotCQkgKiB0byBib3RoIHJlYWRfZm9saW8gYW5kIHdyaXRlcGFnZSBjbGVhcmluZyBwYXJ0
aWFsIHBhZ2UgZGF0YQotCQkgKiBiZXlvbmQgaV9zaXplIGluIHdoaWNoIGNhc2UgdGhlcmUgaXMg
bm90aGluZyB0byBkbyBvciBpbiB0aGUKLQkJICogY2FzZSBvZiB0aGUgZmlsZSBiZWluZyBtbWFw
KClwZWQgYXQgdGhlIHNhbWUgdGltZSwgUE9TSVgKLQkJICogc3BlY2lmaWVzIHRoYXQgdGhlIGJl
aGF2aW91ciBpcyB1bnNwZWNpZmllZCB0aHVzIHdlIGRvIG5vdAotCQkgKiBoYXZlIHRvIGRvIGFu
eXRoaW5nLiAgVGhpcyBtZWFucyB0aGF0IGluIG91ciBpbXBsZW1lbnRhdGlvbgotCQkgKiBpbiB0
aGUgcmFyZSBjYXNlIHRoYXQgdGhlIGZpbGUgaXMgbW1hcCgpcGVkIGFuZCBhIHdyaXRlCi0JCSAq
IG9jY3VycmVkIGludG8gdGhlIG1tYXAoKXBlZCByZWdpb24ganVzdCBiZXlvbmQgdGhlIGZpbGUg
c2l6ZQotCQkgKiBhbmQgd3JpdGVwYWdlIGhhcyBub3QgeWV0IGJlZW4gY2FsbGVkIHRvIHdyaXRl
IG91dCB0aGUgcGFnZQotCQkgKiAod2hpY2ggd291bGQgY2xlYXIgdGhlIGFyZWEgYmV5b25kIHRo
ZSBmaWxlIHNpemUpIGFuZCB3ZSBub3cKLQkJICogZXh0ZW5kIHRoZSBmaWxlIHNpemUgdG8gaW5j
b3Jwb3JhdGUgdGhpcyBkaXJ0eSByZWdpb24KLQkJICogb3V0c2lkZSB0aGUgZmlsZSBzaXplLCBh
IHdyaXRlIG9mIHRoZSBwYWdlIHdvdWxkIHJlc3VsdCBpbgotCQkgKiB0aGlzIGRhdGEgYmVpbmcg
d3JpdHRlbiB0byBkaXNrIGluc3RlYWQgb2YgYmVpbmcgY2xlYXJlZC4KLQkJICogR2l2ZW4gYm90
aCBQT1NJWCBhbmQgdGhlIExpbnV4IG1tYXAoMikgbWFuIHBhZ2Ugc3BlY2lmeSB0aGF0Ci0JCSAq
IHRoaXMgY29ybmVyIGNhc2UgaXMgdW5kZWZpbmVkLCB3ZSBjaG9vc2UgdG8gbGVhdmUgaXQgbGlr
ZQotCQkgKiB0aGF0IGFzIHRoaXMgaXMgbXVjaCBzaW1wbGVyIGZvciB1cyBhcyB3ZSBjYW5ub3Qg
bG9jayB0aGUKLQkJICogcmVsZXZhbnQgcGFnZSBub3cgc2luY2Ugd2UgYXJlIGhvbGRpbmcgdG9v
IG1hbnkgbnRmcyBsb2NrcwotCQkgKiB3aGljaCB3b3VsZCByZXN1bHQgaW4gYSBsb2NrIHJldmVy
c2FsIGRlYWRsb2NrLgotCQkgKi8KLQkJbmktPmluaXRpYWxpemVkX3NpemUgPSBuZXdfc2l6ZTsK
LQkJd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJZ290
byB1bm1fZG9uZTsKLQl9Ci0JLyogSWYgdGhlIGFib3ZlIHJlc2l6ZSBmYWlsZWQsIHRoaXMgbXVz
dCBiZSBhbiBhdHRyaWJ1dGUgZXh0ZW5zaW9uLiAqLwotCUJVR19PTihzaXplX2NoYW5nZSA8IDAp
OwotCS8qCi0JICogV2UgaGF2ZSB0byBkcm9wIGFsbCB0aGUgbG9ja3Mgc28gd2UgY2FuIGNhbGwK
LQkgKiBudGZzX2F0dHJfbWFrZV9ub25fcmVzaWRlbnQoKS4gIFRoaXMgY291bGQgYmUgb3B0aW1p
c2VkIGJ5IHRyeS0KLQkgKiBsb2NraW5nIHRoZSBmaXJzdCBwYWdlIGNhY2hlIHBhZ2UgYW5kIG9u
bHkgaWYgdGhhdCBmYWlscyBkcm9wcGluZwotCSAqIHRoZSBsb2NrcywgbG9ja2luZyB0aGUgcGFn
ZSwgYW5kIHJlZG9pbmcgYWxsIHRoZSBsb2NraW5nIGFuZAotCSAqIGxvb2t1cHMuICBXaGlsZSB0
aGlzIHdvdWxkIGJlIGEgaHVnZSBvcHRpbWlzYXRpb24sIGl0IGlzIG5vdCB3b3J0aAotCSAqIGl0
IGFzIHRoaXMgaXMgZGVmaW5pdGVseSBhIHNsb3cgY29kZSBwYXRoIGFzIGl0IG9ubHkgZXZlciBj
YW4gaGFwcGVuCi0JICogb25jZSBmb3IgYW55IGdpdmVuIGZpbGUuCi0JICovCi0JbnRmc19hdHRy
X3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQl1cF93
cml0ZSgmbmktPnJ1bmxpc3QubG9jayk7Ci0JLyoKLQkgKiBOb3QgZW5vdWdoIHNwYWNlIGluIHRo
ZSBtZnQgcmVjb3JkLCB0cnkgdG8gbWFrZSB0aGUgYXR0cmlidXRlCi0JICogbm9uLXJlc2lkZW50
IGFuZCBpZiBzdWNjZXNzZnVsIHJlc3RhcnQgdGhlIHRydW5jYXRpb24gcHJvY2Vzcy4KLQkgKi8K
LQllcnIgPSBudGZzX2F0dHJfbWFrZV9ub25fcmVzaWRlbnQobmksIG9sZF9zaXplKTsKLQlpZiAo
bGlrZWx5KCFlcnIpKQotCQlnb3RvIHJldHJ5X3RydW5jYXRlOwotCS8qCi0JICogQ291bGQgbm90
IG1ha2Ugbm9uLXJlc2lkZW50LiAgSWYgdGhpcyBpcyBkdWUgdG8gdGhpcyBub3QgYmVpbmcKLQkg
KiBwZXJtaXR0ZWQgZm9yIHRoaXMgYXR0cmlidXRlIHR5cGUgb3IgdGhlcmUgbm90IGJlaW5nIGVu
b3VnaCBzcGFjZSwKLQkgKiB0cnkgdG8gbWFrZSBvdGhlciBhdHRyaWJ1dGVzIG5vbi1yZXNpZGVu
dC4gIE90aGVyd2lzZSBmYWlsLgotCSAqLwotCWlmICh1bmxpa2VseShlcnIgIT0gLUVQRVJNICYm
IGVyciAhPSAtRU5PU1BDKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJDYW5ub3QgdHJ1bmNh
dGUgaW5vZGUgMHglbHgsIGF0dHJpYnV0ZSAiCi0JCQkJInR5cGUgMHgleCwgYmVjYXVzZSB0aGUg
Y29udmVyc2lvbiBmcm9tICIKLQkJCQkicmVzaWRlbnQgdG8gbm9uLXJlc2lkZW50IGF0dHJpYnV0
ZSBmYWlsZWQgIgotCQkJCSJ3aXRoIGVycm9yIGNvZGUgJWkuIiwgdmktPmlfaW5vLAotCQkJCSh1
bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSksIGVycik7Ci0JCWlmIChlcnIgIT0gLUVOT01F
TSkKLQkJCWVyciA9IC1FSU87Ci0JCWdvdG8gY29udl9lcnJfb3V0OwotCX0KLQkvKiBUT0RPOiBO
b3QgaW1wbGVtZW50ZWQgZnJvbSBoZXJlLCBhYm9ydC4gKi8KLQlpZiAoZXJyID09IC1FTk9TUEMp
Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk5vdCBlbm91Z2ggc3BhY2UgaW4gdGhlIG1mdCByZWNv
cmQvb24gIgotCQkJCSJkaXNrIGZvciB0aGUgbm9uLXJlc2lkZW50IGF0dHJpYnV0ZSB2YWx1ZS4g
ICIKLQkJCQkiVGhpcyBjYXNlIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuIik7Ci0JZWxzZSAvKiBp
ZiAoZXJyID09IC1FUEVSTSkgKi8KLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiVGhpcyBhdHRyaWJ1
dGUgdHlwZSBtYXkgbm90IGJlICIKLQkJCQkibm9uLXJlc2lkZW50LiAgVGhpcyBjYXNlIGlzIG5v
dCBpbXBsZW1lbnRlZCAiCi0JCQkJInlldC4iKTsKLQllcnIgPSAtRU9QTk9UU1VQUDsKLQlnb3Rv
IGNvbnZfZXJyX291dDsKLSNpZiAwCi0JLy8gVE9ETzogQXR0ZW1wdCB0byBtYWtlIG90aGVyIGF0
dHJpYnV0ZXMgbm9uLXJlc2lkZW50LgotCWlmICghZXJyKQotCQlnb3RvIGRvX3Jlc2lkZW50X2V4
dGVuZDsKLQkvKgotCSAqIEJvdGggdGhlIGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSBhbmQgdGhl
IHN0YW5kYXJkIGluZm9ybWF0aW9uCi0JICogYXR0cmlidXRlIG11c3QgcmVtYWluIGluIHRoZSBi
YXNlIGlub2RlLiAgVGh1cywgaWYgdGhpcyBpcyBvbmUgb2YKLQkgKiB0aGVzZSBhdHRyaWJ1dGVz
LCB3ZSBoYXZlIHRvIHRyeSB0byBtb3ZlIG90aGVyIGF0dHJpYnV0ZXMgb3V0IGludG8KLQkgKiBl
eHRlbnQgbWZ0IHJlY29yZHMgaW5zdGVhZC4KLQkgKi8KLQlpZiAobmktPnR5cGUgPT0gQVRfQVRU
UklCVVRFX0xJU1QgfHwKLQkJCW5pLT50eXBlID09IEFUX1NUQU5EQVJEX0lORk9STUFUSU9OKSB7
Ci0JCS8vIFRPRE86IEF0dGVtcHQgdG8gbW92ZSBvdGhlciBhdHRyaWJ1dGVzIGludG8gZXh0ZW50
IG1mdAotCQkvLyByZWNvcmRzLgotCQllcnIgPSAtRU9QTk9UU1VQUDsKLQkJaWYgKCFlcnIpCi0J
CQlnb3RvIGRvX3Jlc2lkZW50X2V4dGVuZDsKLQkJZ290byBlcnJfb3V0OwotCX0KLQkvLyBUT0RP
OiBBdHRlbXB0IHRvIG1vdmUgdGhpcyBhdHRyaWJ1dGUgdG8gYW4gZXh0ZW50IG1mdCByZWNvcmQs
IGJ1dAotCS8vIG9ubHkgaWYgaXQgaXMgbm90IGFscmVhZHkgdGhlIG9ubHkgYXR0cmlidXRlIGlu
IGFuIG1mdCByZWNvcmQgaW4KLQkvLyB3aGljaCBjYXNlIHRoZXJlIHdvdWxkIGJlIG5vdGhpbmcg
dG8gZ2Fpbi4KLQllcnIgPSAtRU9QTk9UU1VQUDsKLQlpZiAoIWVycikKLQkJZ290byBkb19yZXNp
ZGVudF9leHRlbmQ7Ci0JLyogVGhlcmUgaXMgbm90aGluZyB3ZSBjYW4gZG8gdG8gbWFrZSBlbm91
Z2ggc3BhY2UuICktOiAqLwotCWdvdG8gZXJyX291dDsKLSNlbmRpZgotZG9fbm9uX3Jlc2lkZW50
X3RydW5jYXRlOgotCUJVR19PTighTklub05vblJlc2lkZW50KG5pKSk7Ci0JaWYgKGFsbG9jX2No
YW5nZSA8IDApIHsKLQkJaGlnaGVzdF92Y24gPSBzbGU2NF90b19jcHUoYS0+ZGF0YS5ub25fcmVz
aWRlbnQuaGlnaGVzdF92Y24pOwotCQlpZiAoaGlnaGVzdF92Y24gPiAwICYmCi0JCQkJb2xkX2Fs
bG9jX3NpemUgPj4gdm9sLT5jbHVzdGVyX3NpemVfYml0cyA+Ci0JCQkJaGlnaGVzdF92Y24gKyAx
KSB7Ci0JCQkvKgotCQkJICogVGhpcyBhdHRyaWJ1dGUgaGFzIG11bHRpcGxlIGV4dGVudHMuICBO
b3QgeWV0Ci0JCQkgKiBzdXBwb3J0ZWQuCi0JCQkgKi8KLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkNhbm5vdCB0cnVuY2F0ZSBpbm9kZSAweCVseCwgIgotCQkJCQkiYXR0cmlidXRlIHR5cGUgMHgl
eCwgYmVjYXVzZSB0aGUgIgotCQkJCQkiYXR0cmlidXRlIGlzIGhpZ2hseSBmcmFnbWVudGVkIChp
dCAiCi0JCQkJCSJjb25zaXN0cyBvZiBtdWx0aXBsZSBleHRlbnRzKSBhbmQgIgotCQkJCQkidGhp
cyBjYXNlIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuIiwKLQkJCQkJdmktPmlfaW5vLAotCQkJCQko
dW5zaWduZWQpbGUzMl90b19jcHUobmktPnR5cGUpKTsKLQkJCWVyciA9IC1FT1BOT1RTVVBQOwot
CQkJZ290byBiYWRfb3V0OwotCQl9Ci0JfQotCS8qCi0JICogSWYgdGhlIHNpemUgaXMgc2hyaW5r
aW5nLCBuZWVkIHRvIHJlZHVjZSB0aGUgaW5pdGlhbGl6ZWRfc2l6ZSBhbmQKLQkgKiB0aGUgZGF0
YV9zaXplIGJlZm9yZSByZWR1Y2luZyB0aGUgYWxsb2NhdGlvbi4KLQkgKi8KLQlpZiAoc2l6ZV9j
aGFuZ2UgPCAwKSB7Ci0JCS8qCi0JCSAqIE1ha2UgdGhlIHZhbGlkIHNpemUgc21hbGxlciAoaV9z
aXplIGlzIGFscmVhZHkgdXAtdG8tZGF0ZSkuCi0JCSAqLwotCQl3cml0ZV9sb2NrX2lycXNhdmUo
Jm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJaWYgKG5ld19zaXplIDwgbmktPmluaXRpYWxpemVk
X3NpemUpIHsKLQkJCW5pLT5pbml0aWFsaXplZF9zaXplID0gbmV3X3NpemU7Ci0JCQlhLT5kYXRh
Lm5vbl9yZXNpZGVudC5pbml0aWFsaXplZF9zaXplID0KLQkJCQkJY3B1X3RvX3NsZTY0KG5ld19z
aXplKTsKLQkJfQotCQlhLT5kYXRhLm5vbl9yZXNpZGVudC5kYXRhX3NpemUgPSBjcHVfdG9fc2xl
NjQobmV3X3NpemUpOwotCQl3cml0ZV91bmxvY2tfaXJxcmVzdG9yZSgmbmktPnNpemVfbG9jaywg
ZmxhZ3MpOwotCQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwot
CQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lubyk7Ci0JCS8qIElmIHRoZSBhbGxv
Y2F0ZWQgc2l6ZSBpcyBub3QgY2hhbmdpbmcsIHdlIGFyZSBkb25lLiAqLwotCQlpZiAoIWFsbG9j
X2NoYW5nZSkKLQkJCWdvdG8gdW5tX2RvbmU7Ci0JCS8qCi0JCSAqIElmIHRoZSBzaXplIGlzIHNo
cmlua2luZyBpdCBtYWtlcyBubyBzZW5zZSBmb3IgdGhlCi0JCSAqIGFsbG9jYXRpb24gdG8gYmUg
Z3Jvd2luZy4KLQkJICovCi0JCUJVR19PTihhbGxvY19jaGFuZ2UgPiAwKTsKLQl9IGVsc2UgLyog
aWYgKHNpemVfY2hhbmdlID49IDApICovIHsKLQkJLyoKLQkJICogVGhlIGZpbGUgc2l6ZSBpcyBn
cm93aW5nIG9yIHN0YXlpbmcgdGhlIHNhbWUgYnV0IHRoZQotCQkgKiBhbGxvY2F0aW9uIGNhbiBi
ZSBzaHJpbmtpbmcsIGdyb3dpbmcgb3Igc3RheWluZyB0aGUgc2FtZS4KLQkJICovCi0JCWlmIChh
bGxvY19jaGFuZ2UgPiAwKSB7Ci0JCQkvKgotCQkJICogV2UgbmVlZCB0byBleHRlbmQgdGhlIGFs
bG9jYXRpb24gYW5kIHBvc3NpYmx5IHVwZGF0ZQotCQkJICogdGhlIGRhdGEgc2l6ZS4gIElmIHdl
IGFyZSB1cGRhdGluZyB0aGUgZGF0YSBzaXplLAotCQkJICogc2luY2Ugd2UgYXJlIG5vdCB0b3Vj
aGluZyB0aGUgaW5pdGlhbGl6ZWRfc2l6ZSB3ZSBkbwotCQkJICogbm90IG5lZWQgdG8gd29ycnkg
YWJvdXQgdGhlIGFjdHVhbCBkYXRhIG9uIGRpc2suCi0JCQkgKiBBbmQgYXMgZmFyIGFzIHRoZSBw
YWdlIGNhY2hlIGlzIGNvbmNlcm5lZCwgdGhlcmUKLQkJCSAqIHdpbGwgYmUgbm8gcGFnZXMgYmV5
b25kIHRoZSBvbGQgZGF0YSBzaXplIGFuZCBhbnkKLQkJCSAqIHBhcnRpYWwgcmVnaW9uIGluIHRo
ZSBsYXN0IHBhZ2UgYmV0d2VlbiB0aGUgb2xkIGFuZAotCQkJICogbmV3IGRhdGEgc2l6ZSAob3Ig
dGhlIGVuZCBvZiB0aGUgcGFnZSBpZiB0aGUgbmV3Ci0JCQkgKiBkYXRhIHNpemUgaXMgb3V0c2lk
ZSB0aGUgcGFnZSkgZG9lcyBub3QgbmVlZCB0byBiZQotCQkJICogbW9kaWZpZWQgYXMgZXhwbGFp
bmVkIGFib3ZlIGZvciB0aGUgcmVzaWRlbnQKLQkJCSAqIGF0dHJpYnV0ZSB0cnVuY2F0ZSBjYXNl
LiAgVG8gZG8gdGhpcywgd2Ugc2ltcGx5IGRyb3AKLQkJCSAqIHRoZSBsb2NrcyB3ZSBob2xkIGFu
ZCBsZWF2ZSBhbGwgdGhlIHdvcmsgdG8gb3VyCi0JCQkgKiBmcmllbmRseSBoZWxwZXIgbnRmc19h
dHRyX2V4dGVuZF9hbGxvY2F0aW9uKCkuCi0JCQkgKi8KLQkJCW50ZnNfYXR0cl9wdXRfc2VhcmNo
X2N0eChjdHgpOwotCQkJdW5tYXBfbWZ0X3JlY29yZChiYXNlX25pKTsKLQkJCXVwX3dyaXRlKCZu
aS0+cnVubGlzdC5sb2NrKTsKLQkJCWVyciA9IG50ZnNfYXR0cl9leHRlbmRfYWxsb2NhdGlvbihu
aSwgbmV3X3NpemUsCi0JCQkJCXNpemVfY2hhbmdlID4gMCA/IG5ld19zaXplIDogLTEsIC0xKTsK
LQkJCS8qCi0JCQkgKiBudGZzX2F0dHJfZXh0ZW5kX2FsbG9jYXRpb24oKSB3aWxsIGhhdmUgZG9u
ZSBlcnJvcgotCQkJICogb3V0cHV0IGFscmVhZHkuCi0JCQkgKi8KLQkJCWdvdG8gZG9uZTsKLQkJ
fQotCQlpZiAoIWFsbG9jX2NoYW5nZSkKLQkJCWdvdG8gYWxsb2NfZG9uZTsKLQl9Ci0JLyogYWxs
b2NfY2hhbmdlIDwgMCAqLwotCS8qIEZyZWUgdGhlIGNsdXN0ZXJzLiAqLwotCW5yX2ZyZWVkID0g
bnRmc19jbHVzdGVyX2ZyZWUobmksIG5ld19hbGxvY19zaXplID4+Ci0JCQl2b2wtPmNsdXN0ZXJf
c2l6ZV9iaXRzLCAtMSwgY3R4KTsKLQltID0gY3R4LT5tcmVjOwotCWEgPSBjdHgtPmF0dHI7Ci0J
aWYgKHVubGlrZWx5KG5yX2ZyZWVkIDwgMCkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFp
bGVkIHRvIHJlbGVhc2UgY2x1c3RlcihzKSAoZXJyb3IgY29kZSAiCi0JCQkJIiVsbGkpLiAgVW5t
b3VudCBhbmQgcnVuIGNoa2RzayB0byByZWNvdmVyICIKLQkJCQkidGhlIGxvc3QgY2x1c3Rlcihz
KS4iLCAobG9uZyBsb25nKW5yX2ZyZWVkKTsKLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQlucl9m
cmVlZCA9IDA7Ci0JfQotCS8qIFRydW5jYXRlIHRoZSBydW5saXN0LiAqLwotCWVyciA9IG50ZnNf
cmxfdHJ1bmNhdGVfbm9sb2NrKHZvbCwgJm5pLT5ydW5saXN0LAotCQkJbmV3X2FsbG9jX3NpemUg
Pj4gdm9sLT5jbHVzdGVyX3NpemVfYml0cyk7Ci0JLyoKLQkgKiBJZiB0aGUgcnVubGlzdCB0cnVu
Y2F0aW9uIGZhaWxlZCBhbmQvb3IgdGhlIHNlYXJjaCBjb250ZXh0IGlzIG5vCi0JICogbG9uZ2Vy
IHZhbGlkLCB3ZSBjYW5ub3QgcmVzaXplIHRoZSBhdHRyaWJ1dGUgcmVjb3JkIG9yIGJ1aWxkIHRo
ZQotCSAqIG1hcHBpbmcgcGFpcnMgYXJyYXkgdGh1cyB3ZSBtYXJrIHRoZSBpbm9kZSBiYWQgc28g
dGhhdCBubyBhY2Nlc3MgdG8KLQkgKiB0aGUgZnJlZWQgY2x1c3RlcnMgY2FuIGhhcHBlbi4KLQkg
Ki8KLQlpZiAodW5saWtlbHkoZXJyIHx8IElTX0VSUihtKSkpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvICVzIChlcnJvciBjb2RlICVsaSkuJXMiLAotCQkJCUlTX0VSUihtKSA/
Ci0JCQkJInJlc3RvcmUgYXR0cmlidXRlIHNlYXJjaCBjb250ZXh0IiA6Ci0JCQkJInRydW5jYXRl
IGF0dHJpYnV0ZSBydW5saXN0IiwKLQkJCQlJU19FUlIobSkgPyBQVFJfRVJSKG0pIDogZXJyLCBl
cyk7Ci0JCWVyciA9IC1FSU87Ci0JCWdvdG8gYmFkX291dDsKLQl9Ci0JLyogR2V0IHRoZSBzaXpl
IGZvciB0aGUgc2hydW5rIG1hcHBpbmcgcGFpcnMgYXJyYXkgZm9yIHRoZSBydW5saXN0LiAqLwot
CW1wX3NpemUgPSBudGZzX2dldF9zaXplX2Zvcl9tYXBwaW5nX3BhaXJzKHZvbCwgbmktPnJ1bmxp
c3QucmwsIDAsIC0xKTsKLQlpZiAodW5saWtlbHkobXBfc2l6ZSA8PSAwKSkgewotCQludGZzX2Vy
cm9yKHZvbC0+c2IsICJDYW5ub3Qgc2hyaW5rIGFsbG9jYXRpb24gb2YgaW5vZGUgMHglbHgsICIK
LQkJCQkiYXR0cmlidXRlIHR5cGUgMHgleCwgYmVjYXVzZSBkZXRlcm1pbmluZyB0aGUgIgotCQkJ
CSJzaXplIGZvciB0aGUgbWFwcGluZyBwYWlycyBmYWlsZWQgd2l0aCBlcnJvciAiCi0JCQkJImNv
ZGUgJWkuJXMiLCB2aS0+aV9pbm8sCi0JCQkJKHVuc2lnbmVkKWxlMzJfdG9fY3B1KG5pLT50eXBl
KSwgbXBfc2l6ZSwgZXMpOwotCQllcnIgPSAtRUlPOwotCQlnb3RvIGJhZF9vdXQ7Ci0JfQotCS8q
Ci0JICogU2hyaW5rIHRoZSBhdHRyaWJ1dGUgcmVjb3JkIGZvciB0aGUgbmV3IG1hcHBpbmcgcGFp
cnMgYXJyYXkuICBOb3RlLAotCSAqIHRoaXMgY2Fubm90IGZhaWwgc2luY2Ugd2UgYXJlIG1ha2lu
ZyB0aGUgYXR0cmlidXRlIHNtYWxsZXIgdGh1cyBieQotCSAqIGRlZmluaXRpb24gdGhlcmUgaXMg
ZW5vdWdoIHNwYWNlIHRvIGRvIHNvLgotCSAqLwotCWVyciA9IG50ZnNfYXR0cl9yZWNvcmRfcmVz
aXplKG0sIGEsIG1wX3NpemUgKwotCQkJbGUxNl90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQu
bWFwcGluZ19wYWlyc19vZmZzZXQpKTsKLQlCVUdfT04oZXJyKTsKLQkvKgotCSAqIEdlbmVyYXRl
IHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5IGRpcmVjdGx5IGludG8gdGhlIGF0dHJpYnV0ZSByZWNv
cmQuCi0JICovCi0JZXJyID0gbnRmc19tYXBwaW5nX3BhaXJzX2J1aWxkKHZvbCwgKHU4KilhICsK
LQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0
KSwKLQkJCW1wX3NpemUsIG5pLT5ydW5saXN0LnJsLCAwLCAtMSwgTlVMTCk7Ci0JaWYgKHVubGlr
ZWx5KGVycikpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiQ2Fubm90IHNocmluayBhbGxvY2F0
aW9uIG9mIGlub2RlIDB4JWx4LCAiCi0JCQkJImF0dHJpYnV0ZSB0eXBlIDB4JXgsIGJlY2F1c2Ug
YnVpbGRpbmcgdGhlICIKLQkJCQkibWFwcGluZyBwYWlycyBmYWlsZWQgd2l0aCBlcnJvciBjb2Rl
ICVpLiVzIiwKLQkJCQl2aS0+aV9pbm8sICh1bnNpZ25lZClsZTMyX3RvX2NwdShuaS0+dHlwZSks
Ci0JCQkJZXJyLCBlcyk7Ci0JCWVyciA9IC1FSU87Ci0JCWdvdG8gYmFkX291dDsKLQl9Ci0JLyog
VXBkYXRlIHRoZSBhbGxvY2F0ZWQvY29tcHJlc3NlZCBzaXplIGFzIHdlbGwgYXMgdGhlIGhpZ2hl
c3QgdmNuLiAqLwotCWEtPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuID0gY3B1X3RvX3Ns
ZTY0KChuZXdfYWxsb2Nfc2l6ZSA+PgotCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0cykgLSAxKTsK
LQl3cml0ZV9sb2NrX2lycXNhdmUoJm5pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQluaS0+YWxsb2Nh
dGVkX3NpemUgPSBuZXdfYWxsb2Nfc2l6ZTsKLQlhLT5kYXRhLm5vbl9yZXNpZGVudC5hbGxvY2F0
ZWRfc2l6ZSA9IGNwdV90b19zbGU2NChuZXdfYWxsb2Nfc2l6ZSk7Ci0JaWYgKE5Jbm9TcGFyc2Uo
bmkpIHx8IE5Jbm9Db21wcmVzc2VkKG5pKSkgewotCQlpZiAobnJfZnJlZWQpIHsKLQkJCW5pLT5p
dHlwZS5jb21wcmVzc2VkLnNpemUgLT0gbnJfZnJlZWQgPDwKLQkJCQkJdm9sLT5jbHVzdGVyX3Np
emVfYml0czsKLQkJCUJVR19PTihuaS0+aXR5cGUuY29tcHJlc3NlZC5zaXplIDwgMCk7Ci0JCQlh
LT5kYXRhLm5vbl9yZXNpZGVudC5jb21wcmVzc2VkX3NpemUgPSBjcHVfdG9fc2xlNjQoCi0JCQkJ
CW5pLT5pdHlwZS5jb21wcmVzc2VkLnNpemUpOwotCQkJdmktPmlfYmxvY2tzID0gbmktPml0eXBl
LmNvbXByZXNzZWQuc2l6ZSA+PiA5OwotCQl9Ci0JfSBlbHNlCi0JCXZpLT5pX2Jsb2NrcyA9IG5l
d19hbGxvY19zaXplID4+IDk7Ci0Jd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm5pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQkvKgotCSAqIFdlIGhhdmUgc2hydW5rIHRoZSBhbGxvY2F0aW9uLiAgSWYg
dGhpcyBpcyBhIHNocmlua2luZyB0cnVuY2F0ZSB3ZQotCSAqIGhhdmUgYWxyZWFkeSBkZWFsdCB3
aXRoIHRoZSBpbml0aWFsaXplZF9zaXplIGFuZCB0aGUgZGF0YV9zaXplIGFib3ZlCi0JICogYW5k
IHdlIGFyZSBkb25lLiAgSWYgdGhlIHRydW5jYXRlIGlzIG9ubHkgY2hhbmdpbmcgdGhlIGFsbG9j
YXRpb24KLQkgKiBhbmQgbm90IHRoZSBkYXRhX3NpemUsIHdlIGFyZSBhbHNvIGRvbmUuICBJZiB0
aGlzIGlzIGFuIGV4dGVuZGluZwotCSAqIHRydW5jYXRlLCBuZWVkIHRvIGV4dGVuZCB0aGUgZGF0
YV9zaXplIG5vdyB3aGljaCBpcyBlbnN1cmVkIGJ5IHRoZQotCSAqIGZhY3QgdGhhdCBAc2l6ZV9j
aGFuZ2UgaXMgcG9zaXRpdmUuCi0JICovCi1hbGxvY19kb25lOgotCS8qCi0JICogSWYgdGhlIHNp
emUgaXMgZ3Jvd2luZywgbmVlZCB0byB1cGRhdGUgaXQgbm93LiAgSWYgaXQgaXMgc2hyaW5raW5n
LAotCSAqIHdlIGhhdmUgYWxyZWFkeSB1cGRhdGVkIGl0IGFib3ZlIChiZWZvcmUgdGhlIGFsbG9j
YXRpb24gY2hhbmdlKS4KLQkgKi8KLQlpZiAoc2l6ZV9jaGFuZ2UgPiAwKQotCQlhLT5kYXRhLm5v
bl9yZXNpZGVudC5kYXRhX3NpemUgPSBjcHVfdG9fc2xlNjQobmV3X3NpemUpOwotCS8qIEVuc3Vy
ZSB0aGUgbW9kaWZpZWQgbWZ0IHJlY29yZCBpcyB3cml0dGVuIG91dC4gKi8KLQlmbHVzaF9kY2Fj
aGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwotCW1hcmtfbWZ0X3JlY29yZF9kaXJ0
eShjdHgtPm50ZnNfaW5vKTsKLXVubV9kb25lOgotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChj
dHgpOwotCXVubWFwX21mdF9yZWNvcmQoYmFzZV9uaSk7Ci0JdXBfd3JpdGUoJm5pLT5ydW5saXN0
LmxvY2spOwotZG9uZToKLQkvKiBVcGRhdGUgdGhlIG10aW1lIGFuZCBjdGltZSBvbiB0aGUgYmFz
ZSBpbm9kZS4gKi8KLQkvKiBub3JtYWxseSAtPnRydW5jYXRlIHNob3VsZG4ndCB1cGRhdGUgY3Rp
bWUgb3IgbXRpbWUsCi0JICogYnV0IG50ZnMgZGlkIGJlZm9yZSBzbyBpdCBnb3QgYSBjb3B5ICYg
cGFzdGUgdmVyc2lvbgotCSAqIG9mIGZpbGVfdXBkYXRlX3RpbWUuICBvbmUgZGF5IHNvbWVvbmUg
c2hvdWxkIGZpeCB0aGlzCi0JICogZm9yIHJlYWwuCi0JICovCi0JaWYgKCFJU19OT0NNVElNRShW
RlNfSShiYXNlX25pKSkgJiYgIUlTX1JET05MWShWRlNfSShiYXNlX25pKSkpIHsKLQkJc3RydWN0
IHRpbWVzcGVjNjQgbm93ID0gY3VycmVudF90aW1lKFZGU19JKGJhc2VfbmkpKTsKLQkJc3RydWN0
IHRpbWVzcGVjNjQgY3RpbWUgPSBpbm9kZV9nZXRfY3RpbWUoVkZTX0koYmFzZV9uaSkpOwotCQlz
dHJ1Y3QgdGltZXNwZWM2NCBtdGltZSA9IGlub2RlX2dldF9tdGltZShWRlNfSShiYXNlX25pKSk7
Ci0JCWludCBzeW5jX2l0ID0gMDsKLQotCQlpZiAoIXRpbWVzcGVjNjRfZXF1YWwoJm10aW1lLCAm
bm93KSB8fAotCQkgICAgIXRpbWVzcGVjNjRfZXF1YWwoJmN0aW1lLCAmbm93KSkKLQkJCXN5bmNf
aXQgPSAxOwotCQlpbm9kZV9zZXRfY3RpbWVfdG9fdHMoVkZTX0koYmFzZV9uaSksIG5vdyk7Ci0J
CWlub2RlX3NldF9tdGltZV90b190cyhWRlNfSShiYXNlX25pKSwgbm93KTsKLQotCQlpZiAoc3lu
Y19pdCkKLQkJCW1hcmtfaW5vZGVfZGlydHlfc3luYyhWRlNfSShiYXNlX25pKSk7Ci0JfQotCi0J
aWYgKGxpa2VseSghZXJyKSkgewotCQlOSW5vQ2xlYXJUcnVuY2F0ZUZhaWxlZChuaSk7Ci0JCW50
ZnNfZGVidWcoIkRvbmUuIik7Ci0JfQotCXJldHVybiBlcnI7Ci1vbGRfYmFkX291dDoKLQlvbGRf
c2l6ZSA9IC0xOwotYmFkX291dDoKLQlpZiAoZXJyICE9IC1FTk9NRU0gJiYgZXJyICE9IC1FT1BO
T1RTVVBQKQotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JaWYgKGVyciAhPSAtRU9QTk9UU1VQUCkK
LQkJTklub1NldFRydW5jYXRlRmFpbGVkKG5pKTsKLQllbHNlIGlmIChvbGRfc2l6ZSA+PSAwKQot
CQlpX3NpemVfd3JpdGUodmksIG9sZF9zaXplKTsKLWVycl9vdXQ6Ci0JaWYgKGN0eCkKLQkJbnRm
c19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JaWYgKG0pCi0JCXVubWFwX21mdF9yZWNvcmQo
YmFzZV9uaSk7Ci0JdXBfd3JpdGUoJm5pLT5ydW5saXN0LmxvY2spOwotb3V0OgotCW50ZnNfZGVi
dWcoIkZhaWxlZC4gIFJldHVybmluZyBlcnJvciBjb2RlICVpLiIsIGVycik7Ci0JcmV0dXJuIGVy
cjsKLWNvbnZfZXJyX291dDoKLQlpZiAoZXJyICE9IC1FTk9NRU0gJiYgZXJyICE9IC1FT1BOT1RT
VVBQKQotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JaWYgKGVyciAhPSAtRU9QTk9UU1VQUCkKLQkJ
Tklub1NldFRydW5jYXRlRmFpbGVkKG5pKTsKLQllbHNlCi0JCWlfc2l6ZV93cml0ZSh2aSwgb2xk
X3NpemUpOwotCWdvdG8gb3V0OwotfQotCi0vKioKLSAqIG50ZnNfdHJ1bmNhdGVfdmZzIC0gd3Jh
cHBlciBmb3IgbnRmc190cnVuY2F0ZSgpIHRoYXQgaGFzIG5vIHJldHVybiB2YWx1ZQotICogQHZp
OgkJaW5vZGUgZm9yIHdoaWNoIHRoZSBpX3NpemUgd2FzIGNoYW5nZWQKLSAqCi0gKiBXcmFwcGVy
IGZvciBudGZzX3RydW5jYXRlKCkgdGhhdCBoYXMgbm8gcmV0dXJuIHZhbHVlLgotICoKLSAqIFNl
ZSBudGZzX3RydW5jYXRlKCkgZGVzY3JpcHRpb24gYWJvdmUgZm9yIGRldGFpbHMuCi0gKi8KLSNp
ZmRlZiBOVEZTX1JXCi12b2lkIG50ZnNfdHJ1bmNhdGVfdmZzKHN0cnVjdCBpbm9kZSAqdmkpIHsK
LQludGZzX3RydW5jYXRlKHZpKTsKLX0KLSNlbmRpZgotCi0vKioKLSAqIG50ZnNfc2V0YXR0ciAt
IGNhbGxlZCBmcm9tIG5vdGlmeV9jaGFuZ2UoKSB3aGVuIGFuIGF0dHJpYnV0ZSBpcyBiZWluZyBj
aGFuZ2VkCi0gKiBAaWRtYXA6CWlkbWFwIG9mIHRoZSBtb3VudCB0aGUgaW5vZGUgd2FzIGZvdW5k
IGZyb20KLSAqIEBkZW50cnk6CWRlbnRyeSB3aG9zZSBhdHRyaWJ1dGVzIHRvIGNoYW5nZQotICog
QGF0dHI6CXN0cnVjdHVyZSBkZXNjcmliaW5nIHRoZSBhdHRyaWJ1dGVzIGFuZCB0aGUgY2hhbmdl
cwotICoKLSAqIFdlIGhhdmUgdG8gdHJhcCBWRlMgYXR0ZW1wdHMgdG8gdHJ1bmNhdGUgdGhlIGZp
bGUgZGVzY3JpYmVkIGJ5IEBkZW50cnkgYXMKLSAqIHNvb24gYXMgcG9zc2libGUsIGJlY2F1c2Ug
d2UgZG8gbm90IGltcGxlbWVudCBjaGFuZ2VzIGluIGlfc2l6ZSB5ZXQuICBTbyB3ZQotICogYWJv
cnQgYWxsIGlfc2l6ZSBjaGFuZ2VzIGhlcmUuCi0gKgotICogV2UgYWxzbyBhYm9ydCBhbGwgY2hh
bmdlcyBvZiB1c2VyLCBncm91cCwgYW5kIG1vZGUgYXMgd2UgZG8gbm90IGltcGxlbWVudAotICog
dGhlIE5URlMgQUNMcyB5ZXQuCi0gKgotICogQ2FsbGVkIHdpdGggLT5pX211dGV4IGhlbGQuCi0g
Ki8KLWludCBudGZzX3NldGF0dHIoc3RydWN0IG1udF9pZG1hcCAqaWRtYXAsIHN0cnVjdCBkZW50
cnkgKmRlbnRyeSwKLQkJIHN0cnVjdCBpYXR0ciAqYXR0cikKLXsKLQlzdHJ1Y3QgaW5vZGUgKnZp
ID0gZF9pbm9kZShkZW50cnkpOwotCWludCBlcnI7Ci0JdW5zaWduZWQgaW50IGlhX3ZhbGlkID0g
YXR0ci0+aWFfdmFsaWQ7Ci0KLQllcnIgPSBzZXRhdHRyX3ByZXBhcmUoJm5vcF9tbnRfaWRtYXAs
IGRlbnRyeSwgYXR0cik7Ci0JaWYgKGVycikKLQkJZ290byBvdXQ7Ci0JLyogV2UgZG8gbm90IHN1
cHBvcnQgTlRGUyBBQ0xzIHlldC4gKi8KLQlpZiAoaWFfdmFsaWQgJiAoQVRUUl9VSUQgfCBBVFRS
X0dJRCB8IEFUVFJfTU9ERSkpIHsKLQkJbnRmc193YXJuaW5nKHZpLT5pX3NiLCAiQ2hhbmdlcyBp
biB1c2VyL2dyb3VwL21vZGUgYXJlIG5vdCAiCi0JCQkJInN1cHBvcnRlZCB5ZXQsIGlnbm9yaW5n
LiIpOwotCQllcnIgPSAtRU9QTk9UU1VQUDsKLQkJZ290byBvdXQ7Ci0JfQotCWlmIChpYV92YWxp
ZCAmIEFUVFJfU0laRSkgewotCQlpZiAoYXR0ci0+aWFfc2l6ZSAhPSBpX3NpemVfcmVhZCh2aSkp
IHsKLQkJCW50ZnNfaW5vZGUgKm5pID0gTlRGU19JKHZpKTsKLQkJCS8qCi0JCQkgKiBGSVhNRTog
Rm9yIG5vdyB3ZSBkbyBub3Qgc3VwcG9ydCByZXNpemluZyBvZgotCQkJICogY29tcHJlc3NlZCBv
ciBlbmNyeXB0ZWQgZmlsZXMgeWV0LgotCQkJICovCi0JCQlpZiAoTklub0NvbXByZXNzZWQobmkp
IHx8IE5Jbm9FbmNyeXB0ZWQobmkpKSB7Ci0JCQkJbnRmc193YXJuaW5nKHZpLT5pX3NiLCAiQ2hh
bmdlcyBpbiBpbm9kZSBzaXplICIKLQkJCQkJCSJhcmUgbm90IHN1cHBvcnRlZCB5ZXQgZm9yICIK
LQkJCQkJCSIlcyBmaWxlcywgaWdub3JpbmcuIiwKLQkJCQkJCU5Jbm9Db21wcmVzc2VkKG5pKSA/
Ci0JCQkJCQkiY29tcHJlc3NlZCIgOiAiZW5jcnlwdGVkIik7Ci0JCQkJZXJyID0gLUVPUE5PVFNV
UFA7Ci0JCQl9IGVsc2UgewotCQkJCXRydW5jYXRlX3NldHNpemUodmksIGF0dHItPmlhX3NpemUp
OwotCQkJCW50ZnNfdHJ1bmNhdGVfdmZzKHZpKTsKLQkJCX0KLQkJCWlmIChlcnIgfHwgaWFfdmFs
aWQgPT0gQVRUUl9TSVpFKQotCQkJCWdvdG8gb3V0OwotCQl9IGVsc2UgewotCQkJLyoKLQkJCSAq
IFdlIHNraXBwZWQgdGhlIHRydW5jYXRlIGJ1dCBtdXN0IHN0aWxsIHVwZGF0ZQotCQkJICogdGlt
ZXN0YW1wcy4KLQkJCSAqLwotCQkJaWFfdmFsaWQgfD0gQVRUUl9NVElNRSB8IEFUVFJfQ1RJTUU7
Ci0JCX0KLQl9Ci0JaWYgKGlhX3ZhbGlkICYgQVRUUl9BVElNRSkKLQkJaW5vZGVfc2V0X2F0aW1l
X3RvX3RzKHZpLCBhdHRyLT5pYV9hdGltZSk7Ci0JaWYgKGlhX3ZhbGlkICYgQVRUUl9NVElNRSkK
LQkJaW5vZGVfc2V0X210aW1lX3RvX3RzKHZpLCBhdHRyLT5pYV9tdGltZSk7Ci0JaWYgKGlhX3Zh
bGlkICYgQVRUUl9DVElNRSkKLQkJaW5vZGVfc2V0X2N0aW1lX3RvX3RzKHZpLCBhdHRyLT5pYV9j
dGltZSk7Ci0JbWFya19pbm9kZV9kaXJ0eSh2aSk7Ci1vdXQ6Ci0JcmV0dXJuIGVycjsKLX0KLQot
LyoqCi0gKiBfX250ZnNfd3JpdGVfaW5vZGUgLSB3cml0ZSBvdXQgYSBkaXJ0eSBpbm9kZQotICog
QHZpOgkJaW5vZGUgdG8gd3JpdGUgb3V0Ci0gKiBAc3luYzoJaWYgdHJ1ZSwgd3JpdGUgb3V0IHN5
bmNocm9ub3VzbHkKLSAqCi0gKiBXcml0ZSBvdXQgYSBkaXJ0eSBpbm9kZSB0byBkaXNrIGluY2x1
ZGluZyBhbnkgZXh0ZW50IGlub2RlcyBpZiBwcmVzZW50LgotICoKLSAqIElmIEBzeW5jIGlzIHRy
dWUsIGNvbW1pdCB0aGUgaW5vZGUgdG8gZGlzayBhbmQgd2FpdCBmb3IgaW8gY29tcGxldGlvbi4g
IFRoaXMKLSAqIGlzIGRvbmUgdXNpbmcgd3JpdGVfbWZ0X3JlY29yZCgpLgotICoKLSAqIElmIEBz
eW5jIGlzIGZhbHNlLCBqdXN0IHNjaGVkdWxlIHRoZSB3cml0ZSB0byBoYXBwZW4gYnV0IGRvIG5v
dCB3YWl0IGZvciBpL28KLSAqIGNvbXBsZXRpb24uICBJbiAyLjYga2VybmVscywgc2NoZWR1bGlu
ZyB1c3VhbGx5IGhhcHBlbnMganVzdCBieSB2aXJ0dWUgb2YKLSAqIG1hcmtpbmcgdGhlIHBhZ2Ug
KGFuZCBpbiB0aGlzIGNhc2UgbWZ0IHJlY29yZCkgZGlydHkgYnV0IHdlIGRvIG5vdCBpbXBsZW1l
bnQKLSAqIHRoaXMgeWV0IGFzIHdyaXRlX21mdF9yZWNvcmQoKSBsYXJnZWx5IGlnbm9yZXMgdGhl
IEBzeW5jIHBhcmFtZXRlciBhbmQKLSAqIGFsd2F5cyBwZXJmb3JtcyBzeW5jaHJvbm91cyB3cml0
ZXMuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICov
Ci1pbnQgX19udGZzX3dyaXRlX2lub2RlKHN0cnVjdCBpbm9kZSAqdmksIGludCBzeW5jKQotewot
CXNsZTY0IG50OwotCW50ZnNfaW5vZGUgKm5pID0gTlRGU19JKHZpKTsKLQludGZzX2F0dHJfc2Vh
cmNoX2N0eCAqY3R4OwotCU1GVF9SRUNPUkQgKm07Ci0JU1RBTkRBUkRfSU5GT1JNQVRJT04gKnNp
OwotCWludCBlcnIgPSAwOwotCWJvb2wgbW9kaWZpZWQgPSBmYWxzZTsKLQotCW50ZnNfZGVidWco
IkVudGVyaW5nIGZvciAlc2lub2RlIDB4JWx4LiIsIE5Jbm9BdHRyKG5pKSA/ICJhdHRyICIgOiAi
IiwKLQkJCXZpLT5pX2lubyk7Ci0JLyoKLQkgKiBEaXJ0eSBhdHRyaWJ1dGUgaW5vZGVzIGFyZSB3
cml0dGVuIHZpYSB0aGVpciByZWFsIGlub2RlcyBzbyBqdXN0Ci0JICogY2xlYW4gdGhlbSBoZXJl
LiAgQWNjZXNzIHRpbWUgdXBkYXRlcyBhcmUgdGFrZW4gY2FyZSBvZmYgd2hlbiB0aGUKLQkgKiBy
ZWFsIGlub2RlIGlzIHdyaXR0ZW4uCi0JICovCi0JaWYgKE5Jbm9BdHRyKG5pKSkgewotCQlOSW5v
Q2xlYXJEaXJ0eShuaSk7Ci0JCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JCXJldHVybiAwOwotCX0K
LQkvKiBNYXAsIHBpbiwgYW5kIGxvY2sgdGhlIG1mdCByZWNvcmQgYmVsb25naW5nIHRvIHRoZSBp
bm9kZS4gKi8KLQltID0gbWFwX21mdF9yZWNvcmQobmkpOwotCWlmIChJU19FUlIobSkpIHsKLQkJ
ZXJyID0gUFRSX0VSUihtKTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQkvKiBVcGRhdGUgdGhlIGFj
Y2VzcyB0aW1lcyBpbiB0aGUgc3RhbmRhcmQgaW5mb3JtYXRpb24gYXR0cmlidXRlLiAqLwotCWN0
eCA9IG50ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChuaSwgbSk7Ci0JaWYgKHVubGlrZWx5KCFjdHgp
KSB7Ci0JCWVyciA9IC1FTk9NRU07Ci0JCWdvdG8gdW5tX2Vycl9vdXQ7Ci0JfQotCWVyciA9IG50
ZnNfYXR0cl9sb29rdXAoQVRfU1RBTkRBUkRfSU5GT1JNQVRJT04sIE5VTEwsIDAsCi0JCQlDQVNF
X1NFTlNJVElWRSwgMCwgTlVMTCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJyKSkgewotCQlu
dGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQkJZ290byB1bm1fZXJyX291dDsKLQl9Ci0J
c2kgPSAoU1RBTkRBUkRfSU5GT1JNQVRJT04qKSgodTgqKWN0eC0+YXR0ciArCi0JCQlsZTE2X3Rv
X2NwdShjdHgtPmF0dHItPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0JLyogVXBkYXRl
IHRoZSBhY2Nlc3MgdGltZXMgaWYgdGhleSBoYXZlIGNoYW5nZWQuICovCi0JbnQgPSB1dGMybnRm
cyhpbm9kZV9nZXRfbXRpbWUodmkpKTsKLQlpZiAoc2ktPmxhc3RfZGF0YV9jaGFuZ2VfdGltZSAh
PSBudCkgewotCQludGZzX2RlYnVnKCJVcGRhdGluZyBtdGltZSBmb3IgaW5vZGUgMHglbHg6IG9s
ZCA9IDB4JWxseCwgIgotCQkJCSJuZXcgPSAweCVsbHgiLCB2aS0+aV9pbm8sIChsb25nIGxvbmcp
Ci0JCQkJc2xlNjRfdG9fY3B1KHNpLT5sYXN0X2RhdGFfY2hhbmdlX3RpbWUpLAotCQkJCShsb25n
IGxvbmcpc2xlNjRfdG9fY3B1KG50KSk7Ci0JCXNpLT5sYXN0X2RhdGFfY2hhbmdlX3RpbWUgPSBu
dDsKLQkJbW9kaWZpZWQgPSB0cnVlOwotCX0KLQludCA9IHV0YzJudGZzKGlub2RlX2dldF9jdGlt
ZSh2aSkpOwotCWlmIChzaS0+bGFzdF9tZnRfY2hhbmdlX3RpbWUgIT0gbnQpIHsKLQkJbnRmc19k
ZWJ1ZygiVXBkYXRpbmcgY3RpbWUgZm9yIGlub2RlIDB4JWx4OiBvbGQgPSAweCVsbHgsICIKLQkJ
CQkibmV3ID0gMHglbGx4IiwgdmktPmlfaW5vLCAobG9uZyBsb25nKQotCQkJCXNsZTY0X3RvX2Nw
dShzaS0+bGFzdF9tZnRfY2hhbmdlX3RpbWUpLAotCQkJCShsb25nIGxvbmcpc2xlNjRfdG9fY3B1
KG50KSk7Ci0JCXNpLT5sYXN0X21mdF9jaGFuZ2VfdGltZSA9IG50OwotCQltb2RpZmllZCA9IHRy
dWU7Ci0JfQotCW50ID0gdXRjMm50ZnMoaW5vZGVfZ2V0X2F0aW1lKHZpKSk7Ci0JaWYgKHNpLT5s
YXN0X2FjY2Vzc190aW1lICE9IG50KSB7Ci0JCW50ZnNfZGVidWcoIlVwZGF0aW5nIGF0aW1lIGZv
ciBpbm9kZSAweCVseDogb2xkID0gMHglbGx4LCAiCi0JCQkJIm5ldyA9IDB4JWxseCIsIHZpLT5p
X2lubywKLQkJCQkobG9uZyBsb25nKXNsZTY0X3RvX2NwdShzaS0+bGFzdF9hY2Nlc3NfdGltZSks
Ci0JCQkJKGxvbmcgbG9uZylzbGU2NF90b19jcHUobnQpKTsKLQkJc2ktPmxhc3RfYWNjZXNzX3Rp
bWUgPSBudDsKLQkJbW9kaWZpZWQgPSB0cnVlOwotCX0KLQkvKgotCSAqIElmIHdlIGp1c3QgbW9k
aWZpZWQgdGhlIHN0YW5kYXJkIGluZm9ybWF0aW9uIGF0dHJpYnV0ZSB3ZSBuZWVkIHRvCi0JICog
bWFyayB0aGUgbWZ0IHJlY29yZCBpdCBpcyBpbiBkaXJ0eS4gIFdlIGRvIHRoaXMgbWFudWFsbHkg
c28gdGhhdAotCSAqIG1hcmtfaW5vZGVfZGlydHkoKSBpcyBub3QgY2FsbGVkIHdoaWNoIHdvdWxk
IHJlZGlydHkgdGhlIGlub2RlIGFuZAotCSAqIGhlbmNlIHJlc3VsdCBpbiBhbiBpbmZpbml0ZSBs
b29wIG9mIHRyeWluZyB0byB3cml0ZSB0aGUgaW5vZGUuCi0JICogVGhlcmUgaXMgbm8gbmVlZCB0
byBtYXJrIHRoZSBiYXNlIGlub2RlIG5vciB0aGUgYmFzZSBtZnQgcmVjb3JkCi0JICogZGlydHks
IHNpbmNlIHdlIGFyZSBnb2luZyB0byB3cml0ZSB0aGlzIG1mdCByZWNvcmQgYmVsb3cgaW4gYW55
IGNhc2UKLQkgKiBhbmQgdGhlIGJhc2UgbWZ0IHJlY29yZCBtYXkgYWN0dWFsbHkgbm90IGhhdmUg
YmVlbiBtb2RpZmllZCBzbyBpdAotCSAqIG1pZ2h0IG5vdCBuZWVkIHRvIGJlIHdyaXR0ZW4gb3V0
LgotCSAqIE5PVEU6IEl0IGlzIG5vdCBhIHByb2JsZW0gd2hlbiB0aGUgaW5vZGUgZm9yICRNRlQg
aXRzZWxmIGlzIGJlaW5nCi0JICogd3JpdHRlbiBvdXQgYXMgbWFya19udGZzX3JlY29yZF9kaXJ0
eSgpIHdpbGwgb25seSBzZXQgSV9ESVJUWV9QQUdFUwotCSAqIG9uIHRoZSAkTUZUIGlub2RlIGFu
ZCBoZW5jZSBfX250ZnNfd3JpdGVfaW5vZGUoKSB3aWxsIG5vdCBiZQotCSAqIHJlLWludm9rZWQg
YmVjYXVzZSBvZiBpdCB3aGljaCBpbiB0dXJuIGlzIG9rIHNpbmNlIHRoZSBkaXJ0aWVkIG1mdAot
CSAqIHJlY29yZCB3aWxsIGJlIGNsZWFuZWQgYW5kIHdyaXR0ZW4gb3V0IHRvIGRpc2sgYmVsb3cs
IGkuZS4gYmVmb3JlCi0JICogdGhpcyBmdW5jdGlvbiByZXR1cm5zLgotCSAqLwotCWlmIChtb2Rp
ZmllZCkgewotCQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwot
CQlpZiAoIU5Jbm9UZXN0U2V0RGlydHkoY3R4LT5udGZzX2lubykpCi0JCQltYXJrX250ZnNfcmVj
b3JkX2RpcnR5KGN0eC0+bnRmc19pbm8tPnBhZ2UsCi0JCQkJCWN0eC0+bnRmc19pbm8tPnBhZ2Vf
b2ZzKTsKLQl9Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JLyogTm93IHRoZSBh
Y2Nlc3MgdGltZXMgYXJlIHVwZGF0ZWQsIHdyaXRlIHRoZSBiYXNlIG1mdCByZWNvcmQuICovCi0J
aWYgKE5Jbm9EaXJ0eShuaSkpCi0JCWVyciA9IHdyaXRlX21mdF9yZWNvcmQobmksIG0sIHN5bmMp
OwotCS8qIFdyaXRlIGFsbCBhdHRhY2hlZCBleHRlbnQgbWZ0IHJlY29yZHMuICovCi0JbXV0ZXhf
bG9jaygmbmktPmV4dGVudF9sb2NrKTsKLQlpZiAobmktPm5yX2V4dGVudHMgPiAwKSB7Ci0JCW50
ZnNfaW5vZGUgKipleHRlbnRfbmlzID0gbmktPmV4dC5leHRlbnRfbnRmc19pbm9zOwotCQlpbnQg
aTsKLQotCQludGZzX2RlYnVnKCJXcml0aW5nICVpIGV4dGVudCBpbm9kZXMuIiwgbmktPm5yX2V4
dGVudHMpOwotCQlmb3IgKGkgPSAwOyBpIDwgbmktPm5yX2V4dGVudHM7IGkrKykgewotCQkJbnRm
c19pbm9kZSAqdG5pID0gZXh0ZW50X25pc1tpXTsKLQotCQkJaWYgKE5Jbm9EaXJ0eSh0bmkpKSB7
Ci0JCQkJTUZUX1JFQ09SRCAqdG0gPSBtYXBfbWZ0X3JlY29yZCh0bmkpOwotCQkJCWludCByZXQ7
Ci0KLQkJCQlpZiAoSVNfRVJSKHRtKSkgewotCQkJCQlpZiAoIWVyciB8fCBlcnIgPT0gLUVOT01F
TSkKLQkJCQkJCWVyciA9IFBUUl9FUlIodG0pOwotCQkJCQljb250aW51ZTsKLQkJCQl9Ci0JCQkJ
cmV0ID0gd3JpdGVfbWZ0X3JlY29yZCh0bmksIHRtLCBzeW5jKTsKLQkJCQl1bm1hcF9tZnRfcmVj
b3JkKHRuaSk7Ci0JCQkJaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJCQkJaWYgKCFlcnIgfHwgZXJy
ID09IC1FTk9NRU0pCi0JCQkJCQllcnIgPSByZXQ7Ci0JCQkJfQotCQkJfQotCQl9Ci0JfQotCW11
dGV4X3VubG9jaygmbmktPmV4dGVudF9sb2NrKTsKLQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLQlp
ZiAodW5saWtlbHkoZXJyKSkKLQkJZ290byBlcnJfb3V0OwotCW50ZnNfZGVidWcoIkRvbmUuIik7
Ci0JcmV0dXJuIDA7Ci11bm1fZXJyX291dDoKLQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLWVycl9v
dXQ6Ci0JaWYgKGVyciA9PSAtRU5PTUVNKSB7Ci0JCW50ZnNfd2FybmluZyh2aS0+aV9zYiwgIk5v
dCBlbm91Z2ggbWVtb3J5IHRvIHdyaXRlIGlub2RlLiAgIgotCQkJCSJNYXJraW5nIHRoZSBpbm9k
ZSBkaXJ0eSBhZ2Fpbiwgc28gdGhlIFZGUyAiCi0JCQkJInJldHJpZXMgbGF0ZXIuIik7Ci0JCW1h
cmtfaW5vZGVfZGlydHkodmkpOwotCX0gZWxzZSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJG
YWlsZWQgKGVycm9yICVpKTogIFJ1biBjaGtkc2suIiwgLWVycik7Ci0JCU5Wb2xTZXRFcnJvcnMo
bmktPnZvbCk7Ci0JfQotCXJldHVybiBlcnI7Ci19Ci0KLSNlbmRpZiAvKiBOVEZTX1JXICovCmRp
ZmYgLS1naXQgYS9mcy9udGZzL2lub2RlLmggYi9mcy9udGZzL2lub2RlLmgKZGVsZXRlZCBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDE0N2VmNGRkYjY5MS4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250
ZnMvaW5vZGUuaAorKysgL2Rldi9udWxsCkBAIC0xLDMxMCArMCwwIEBACi0vKiBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlciAqLwotLyoKLSAqIGlub2RlLmggLSBEZWZp
bmVzIGZvciBpbm9kZSBzdHJ1Y3R1cmVzIE5URlMgTGludXgga2VybmVsIGRyaXZlci4gUGFydCBv
ZgotICoJICAgICB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykg
MjAwMS0yMDA3IEFudG9uIEFsdGFwYXJtYWtvdgotICogQ29weXJpZ2h0IChjKSAyMDAyIFJpY2hh
cmQgUnVzc29uCi0gKi8KLQotI2lmbmRlZiBfTElOVVhfTlRGU19JTk9ERV9ICi0jZGVmaW5lIF9M
SU5VWF9OVEZTX0lOT0RFX0gKLQotI2luY2x1ZGUgPGxpbnV4L2F0b21pYy5oPgotCi0jaW5jbHVk
ZSA8bGludXgvZnMuaD4KLSNpbmNsdWRlIDxsaW51eC9saXN0Lmg+Ci0jaW5jbHVkZSA8bGludXgv
bW0uaD4KLSNpbmNsdWRlIDxsaW51eC9tdXRleC5oPgotI2luY2x1ZGUgPGxpbnV4L3NlcV9maWxl
Lmg+Ci0KLSNpbmNsdWRlICJsYXlvdXQuaCIKLSNpbmNsdWRlICJ2b2x1bWUuaCIKLSNpbmNsdWRl
ICJ0eXBlcy5oIgotI2luY2x1ZGUgInJ1bmxpc3QuaCIKLSNpbmNsdWRlICJkZWJ1Zy5oIgotCi10
eXBlZGVmIHN0cnVjdCBfbnRmc19pbm9kZSBudGZzX2lub2RlOwotCi0vKgotICogVGhlIE5URlMg
aW4tbWVtb3J5IGlub2RlIHN0cnVjdHVyZS4gSXQgaXMganVzdCB1c2VkIGFzIGFuIGV4dGVuc2lv
biB0byB0aGUKLSAqIGZpZWxkcyBhbHJlYWR5IHByb3ZpZGVkIGluIHRoZSBWRlMgaW5vZGUuCi0g
Ki8KLXN0cnVjdCBfbnRmc19pbm9kZSB7Ci0Jcndsb2NrX3Qgc2l6ZV9sb2NrOwkvKiBMb2NrIHNl
cmlhbGl6aW5nIGFjY2VzcyB0byBpbm9kZSBzaXplcy4gKi8KLQlzNjQgaW5pdGlhbGl6ZWRfc2l6
ZTsJLyogQ29weSBmcm9tIHRoZSBhdHRyaWJ1dGUgcmVjb3JkLiAqLwotCXM2NCBhbGxvY2F0ZWRf
c2l6ZTsJLyogQ29weSBmcm9tIHRoZSBhdHRyaWJ1dGUgcmVjb3JkLiAqLwotCXVuc2lnbmVkIGxv
bmcgc3RhdGU7CS8qIE5URlMgc3BlY2lmaWMgZmxhZ3MgZGVzY3JpYmluZyB0aGlzIGlub2RlLgot
CQkJCSAgIFNlZSBudGZzX2lub2RlX3N0YXRlX2JpdHMgYmVsb3cuICovCi0JdW5zaWduZWQgbG9u
ZyBtZnRfbm87CS8qIE51bWJlciBvZiB0aGUgbWZ0IHJlY29yZCAvIGlub2RlLiAqLwotCXUxNiBz
ZXFfbm87CQkvKiBTZXF1ZW5jZSBudW1iZXIgb2YgdGhlIG1mdCByZWNvcmQuICovCi0JYXRvbWlj
X3QgY291bnQ7CQkvKiBJbm9kZSByZWZlcmVuY2UgY291bnQgZm9yIGJvb2sga2VlcGluZy4gKi8K
LQludGZzX3ZvbHVtZSAqdm9sOwkvKiBQb2ludGVyIHRvIHRoZSBudGZzIHZvbHVtZSBvZiB0aGlz
IGlub2RlLiAqLwotCS8qCi0JICogSWYgTklub0F0dHIoKSBpcyB0cnVlLCB0aGUgYmVsb3cgZmll
bGRzIGRlc2NyaWJlIHRoZSBhdHRyaWJ1dGUgd2hpY2gKLQkgKiB0aGlzIGZha2UgaW5vZGUgYmVs
b25ncyB0by4gVGhlIGFjdHVhbCBpbm9kZSBvZiB0aGlzIGF0dHJpYnV0ZSBpcwotCSAqIHBvaW50
ZWQgdG8gYnkgYmFzZV9udGZzX2lubyBhbmQgbnJfZXh0ZW50cyBpcyBhbHdheXMgc2V0IHRvIC0x
IChzZWUKLQkgKiBiZWxvdykuIEZvciByZWFsIGlub2Rlcywgd2UgYWxzbyBzZXQgdGhlIHR5cGUg
KEFUX0RBVEEgZm9yIGZpbGVzIGFuZAotCSAqIEFUX0lOREVYX0FMTE9DQVRJT04gZm9yIGRpcmVj
dG9yaWVzKSwgd2l0aCB0aGUgbmFtZSA9IE5VTEwgYW5kCi0JICogbmFtZV9sZW4gPSAwIGZvciBm
aWxlcyBhbmQgbmFtZSA9IEkzMCAoZ2xvYmFsIGNvbnN0YW50KSBhbmQKLQkgKiBuYW1lX2xlbiA9
IDQgZm9yIGRpcmVjdG9yaWVzLgotCSAqLwotCUFUVFJfVFlQRSB0eXBlOwkvKiBBdHRyaWJ1dGUg
dHlwZSBvZiB0aGlzIGZha2UgaW5vZGUuICovCi0JbnRmc2NoYXIgKm5hbWU7CQkvKiBBdHRyaWJ1
dGUgbmFtZSBvZiB0aGlzIGZha2UgaW5vZGUuICovCi0JdTMyIG5hbWVfbGVuOwkJLyogQXR0cmli
dXRlIG5hbWUgbGVuZ3RoIG9mIHRoaXMgZmFrZSBpbm9kZS4gKi8KLQlydW5saXN0IHJ1bmxpc3Q7
CS8qIElmIHN0YXRlIGhhcyB0aGUgTklfTm9uUmVzaWRlbnQgYml0IHNldCwKLQkJCQkgICB0aGUg
cnVubGlzdCBvZiB0aGUgdW5uYW1lZCBkYXRhIGF0dHJpYnV0ZQotCQkJCSAgIChpZiBhIGZpbGUp
IG9yIG9mIHRoZSBpbmRleCBhbGxvY2F0aW9uCi0JCQkJICAgYXR0cmlidXRlIChkaXJlY3Rvcnkp
IG9yIG9mIHRoZSBhdHRyaWJ1dGUKLQkJCQkgICBkZXNjcmliZWQgYnkgdGhlIGZha2UgaW5vZGUg
KGlmIE5Jbm9BdHRyKCkpLgotCQkJCSAgIElmIHJ1bmxpc3QucmwgaXMgTlVMTCwgdGhlIHJ1bmxp
c3QgaGFzIG5vdAotCQkJCSAgIGJlZW4gcmVhZCBpbiB5ZXQgb3IgaGFzIGJlZW4gdW5tYXBwZWQu
IElmCi0JCQkJICAgTklfTm9uUmVzaWRlbnQgaXMgY2xlYXIsIHRoZSBhdHRyaWJ1dGUgaXMKLQkJ
CQkgICByZXNpZGVudCAoZmlsZSBhbmQgZmFrZSBpbm9kZSkgb3IgdGhlcmUgaXMKLQkJCQkgICBu
byAkSTMwIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlCi0JCQkJICAgKHNtYWxsIGRpcmVjdG9y
eSkuIEluIHRoZSBsYXR0ZXIgY2FzZQotCQkJCSAgIHJ1bmxpc3QucmwgaXMgYWx3YXlzIE5VTEwu
Ki8KLQkvKgotCSAqIFRoZSBmb2xsb3dpbmcgZmllbGRzIGFyZSBvbmx5IHZhbGlkIGZvciByZWFs
IGlub2RlcyBhbmQgZXh0ZW50Ci0JICogaW5vZGVzLgotCSAqLwotCXN0cnVjdCBtdXRleCBtcmVj
X2xvY2s7CS8qIExvY2sgZm9yIHNlcmlhbGl6aW5nIGFjY2VzcyB0byB0aGUKLQkJCQkgICBtZnQg
cmVjb3JkIGJlbG9uZ2luZyB0byB0aGlzIGlub2RlLiAqLwotCXN0cnVjdCBwYWdlICpwYWdlOwkv
KiBUaGUgcGFnZSBjb250YWluaW5nIHRoZSBtZnQgcmVjb3JkIG9mIHRoZQotCQkJCSAgIGlub2Rl
LiBUaGlzIHNob3VsZCBvbmx5IGJlIHRvdWNoZWQgYnkgdGhlCi0JCQkJICAgKHVuKW1hcF9tZnRf
cmVjb3JkKigpIGZ1bmN0aW9ucy4gKi8KLQlpbnQgcGFnZV9vZnM7CQkvKiBPZmZzZXQgaW50byB0
aGUgcGFnZSBhdCB3aGljaCB0aGUgbWZ0IHJlY29yZAotCQkJCSAgIGJlZ2lucy4gVGhpcyBzaG91
bGQgb25seSBiZSB0b3VjaGVkIGJ5IHRoZQotCQkJCSAgICh1biltYXBfbWZ0X3JlY29yZCooKSBm
dW5jdGlvbnMuICovCi0JLyoKLQkgKiBBdHRyaWJ1dGUgbGlzdCBzdXBwb3J0IChvbmx5IGZvciB1
c2UgYnkgdGhlIGF0dHJpYnV0ZSBsb29rdXAKLQkgKiBmdW5jdGlvbnMpLiBTZXR1cCBkdXJpbmcg
cmVhZF9pbm9kZSBmb3IgYWxsIGlub2RlcyB3aXRoIGF0dHJpYnV0ZQotCSAqIGxpc3RzLiBPbmx5
IHZhbGlkIGlmIE5JX0F0dHJMaXN0IGlzIHNldCBpbiBzdGF0ZSwgYW5kIGF0dHJfbGlzdF9ybCBp
cwotCSAqIGZ1cnRoZXIgb25seSB2YWxpZCBpZiBOSV9BdHRyTGlzdE5vblJlc2lkZW50IGlzIHNl
dC4KLQkgKi8KLQl1MzIgYXR0cl9saXN0X3NpemU7CS8qIExlbmd0aCBvZiBhdHRyaWJ1dGUgbGlz
dCB2YWx1ZSBpbiBieXRlcy4gKi8KLQl1OCAqYXR0cl9saXN0OwkJLyogQXR0cmlidXRlIGxpc3Qg
dmFsdWUgaXRzZWxmLiAqLwotCXJ1bmxpc3QgYXR0cl9saXN0X3JsOwkvKiBSdW4gbGlzdCBmb3Ig
dGhlIGF0dHJpYnV0ZSBsaXN0IHZhbHVlLiAqLwotCXVuaW9uIHsKLQkJc3RydWN0IHsgLyogSXQg
aXMgYSBkaXJlY3RvcnksICRNRlQsIG9yIGFuIGluZGV4IGlub2RlLiAqLwotCQkJdTMyIGJsb2Nr
X3NpemU7CQkvKiBTaXplIG9mIGFuIGluZGV4IGJsb2NrLiAqLwotCQkJdTMyIHZjbl9zaXplOwkJ
LyogU2l6ZSBvZiBhIHZjbiBpbiB0aGlzCi0JCQkJCQkgICBpbmRleC4gKi8KLQkJCUNPTExBVElP
Tl9SVUxFIGNvbGxhdGlvbl9ydWxlOyAvKiBUaGUgY29sbGF0aW9uIHJ1bGUKLQkJCQkJCSAgIGZv
ciB0aGUgaW5kZXguICovCi0JCQl1OCBibG9ja19zaXplX2JpdHM7IAkvKiBMb2cyIG9mIHRoZSBh
Ym92ZS4gKi8KLQkJCXU4IHZjbl9zaXplX2JpdHM7CS8qIExvZzIgb2YgdGhlIGFib3ZlLiAqLwot
CQl9IGluZGV4OwotCQlzdHJ1Y3QgeyAvKiBJdCBpcyBhIGNvbXByZXNzZWQvc3BhcnNlIGZpbGUv
YXR0cmlidXRlIGlub2RlLiAqLwotCQkJczY0IHNpemU7CQkvKiBDb3B5IG9mIGNvbXByZXNzZWRf
c2l6ZSBmcm9tCi0JCQkJCQkgICAkREFUQS4gKi8KLQkJCXUzMiBibG9ja19zaXplOwkJLyogU2l6
ZSBvZiBhIGNvbXByZXNzaW9uIGJsb2NrCi0JCQkJCQkgICAoY2IpLiAqLwotCQkJdTggYmxvY2tf
c2l6ZV9iaXRzOwkvKiBMb2cyIG9mIHRoZSBzaXplIG9mIGEgY2IuICovCi0JCQl1OCBibG9ja19j
bHVzdGVyczsJLyogTnVtYmVyIG9mIGNsdXN0ZXJzIHBlciBjYi4gKi8KLQkJfSBjb21wcmVzc2Vk
OwotCX0gaXR5cGU7Ci0Jc3RydWN0IG11dGV4IGV4dGVudF9sb2NrOwkvKiBMb2NrIGZvciBhY2Nl
c3NpbmcvbW9kaWZ5aW5nIHRoZQotCQkJCQkgICBiZWxvdyAuICovCi0JczMyIG5yX2V4dGVudHM7
CS8qIEZvciBhIGJhc2UgbWZ0IHJlY29yZCwgdGhlIG51bWJlciBvZiBhdHRhY2hlZCBleHRlbnQK
LQkJCSAgIGlub2RlcyAoMCBpZiBub25lKSwgZm9yIGV4dGVudCByZWNvcmRzIGFuZCBmb3IgZmFr
ZQotCQkJICAgaW5vZGVzIGRlc2NyaWJpbmcgYW4gYXR0cmlidXRlIHRoaXMgaXMgLTEuICovCi0J
dW5pb24gewkJLyogVGhpcyB1bmlvbiBpcyBvbmx5IHVzZWQgaWYgbnJfZXh0ZW50cyAhPSAwLiAq
LwotCQludGZzX2lub2RlICoqZXh0ZW50X250ZnNfaW5vczsJLyogRm9yIG5yX2V4dGVudHMgPiAw
LCBhcnJheSBvZgotCQkJCQkJICAgdGhlIG50ZnMgaW5vZGVzIG9mIHRoZSBleHRlbnQKLQkJCQkJ
CSAgIG1mdCByZWNvcmRzIGJlbG9uZ2luZyB0bwotCQkJCQkJICAgdGhpcyBiYXNlIGlub2RlIHdo
aWNoIGhhdmUKLQkJCQkJCSAgIGJlZW4gbG9hZGVkLiAqLwotCQludGZzX2lub2RlICpiYXNlX250
ZnNfaW5vOwkvKiBGb3IgbnJfZXh0ZW50cyA9PSAtMSwgdGhlCi0JCQkJCQkgICBudGZzIGlub2Rl
IG9mIHRoZSBiYXNlIG1mdAotCQkJCQkJICAgcmVjb3JkLiBGb3IgZmFrZSBpbm9kZXMsIHRoZQot
CQkJCQkJICAgcmVhbCAoYmFzZSkgaW5vZGUgdG8gd2hpY2gKLQkJCQkJCSAgIHRoZSBhdHRyaWJ1
dGUgYmVsb25ncy4gKi8KLQl9IGV4dDsKLX07Ci0KLS8qCi0gKiBEZWZpbmVkIGJpdHMgZm9yIHRo
ZSBzdGF0ZSBmaWVsZCBpbiB0aGUgbnRmc19pbm9kZSBzdHJ1Y3R1cmUuCi0gKiAoZikgPSBmaWxl
cyBvbmx5LCAoZCkgPSBkaXJlY3RvcmllcyBvbmx5LCAoYSkgPSBhdHRyaWJ1dGVzL2Zha2UgaW5v
ZGVzIG9ubHkKLSAqLwotdHlwZWRlZiBlbnVtIHsKLQlOSV9EaXJ0eSwJCS8qIDE6IE1mdCByZWNv
cmQgbmVlZHMgdG8gYmUgd3JpdHRlbiB0byBkaXNrLiAqLwotCU5JX0F0dHJMaXN0LAkJLyogMTog
TWZ0IHJlY29yZCBjb250YWlucyBhbiBhdHRyaWJ1dGUgbGlzdC4gKi8KLQlOSV9BdHRyTGlzdE5v
blJlc2lkZW50LAkvKiAxOiBBdHRyaWJ1dGUgbGlzdCBpcyBub24tcmVzaWRlbnQuIEltcGxpZXMK
LQkJCQkgICAgICBOSV9BdHRyTGlzdCBpcyBzZXQuICovCi0KLQlOSV9BdHRyLAkJLyogMTogRmFr
ZSBpbm9kZSBmb3IgYXR0cmlidXRlIGkvby4KLQkJCQkgICAwOiBSZWFsIGlub2RlIG9yIGV4dGVu
dCBpbm9kZS4gKi8KLQotCU5JX01zdFByb3RlY3RlZCwJLyogMTogQXR0cmlidXRlIGlzIHByb3Rl
Y3RlZCBieSBNU1QgZml4dXBzLgotCQkJCSAgIDA6IEF0dHJpYnV0ZSBpcyBub3QgcHJvdGVjdGVk
IGJ5IGZpeHVwcy4gKi8KLQlOSV9Ob25SZXNpZGVudCwJCS8qIDE6IFVubmFtZWQgZGF0YSBhdHRy
IGlzIG5vbi1yZXNpZGVudCAoZikuCi0JCQkJICAgMTogQXR0cmlidXRlIGlzIG5vbi1yZXNpZGVu
dCAoYSkuICovCi0JTklfSW5kZXhBbGxvY1ByZXNlbnQgPSBOSV9Ob25SZXNpZGVudCwJLyogMTog
JEkzMCBpbmRleCBhbGxvYyBhdHRyIGlzCi0JCQkJCQkgICBwcmVzZW50IChkKS4gKi8KLQlOSV9D
b21wcmVzc2VkLAkJLyogMTogVW5uYW1lZCBkYXRhIGF0dHIgaXMgY29tcHJlc3NlZCAoZikuCi0J
CQkJICAgMTogQ3JlYXRlIGNvbXByZXNzZWQgZmlsZXMgYnkgZGVmYXVsdCAoZCkuCi0JCQkJICAg
MTogQXR0cmlidXRlIGlzIGNvbXByZXNzZWQgKGEpLiAqLwotCU5JX0VuY3J5cHRlZCwJCS8qIDE6
IFVubmFtZWQgZGF0YSBhdHRyIGlzIGVuY3J5cHRlZCAoZikuCi0JCQkJICAgMTogQ3JlYXRlIGVu
Y3J5cHRlZCBmaWxlcyBieSBkZWZhdWx0IChkKS4KLQkJCQkgICAxOiBBdHRyaWJ1dGUgaXMgZW5j
cnlwdGVkIChhKS4gKi8KLQlOSV9TcGFyc2UsCQkvKiAxOiBVbm5hbWVkIGRhdGEgYXR0ciBpcyBz
cGFyc2UgKGYpLgotCQkJCSAgIDE6IENyZWF0ZSBzcGFyc2UgZmlsZXMgYnkgZGVmYXVsdCAoZCku
Ci0JCQkJICAgMTogQXR0cmlidXRlIGlzIHNwYXJzZSAoYSkuICovCi0JTklfU3BhcnNlRGlzYWJs
ZWQsCS8qIDE6IE1heSBub3QgY3JlYXRlIHNwYXJzZSByZWdpb25zLiAqLwotCU5JX1RydW5jYXRl
RmFpbGVkLAkvKiAxOiBMYXN0IG50ZnNfdHJ1bmNhdGUoKSBjYWxsIGZhaWxlZC4gKi8KLX0gbnRm
c19pbm9kZV9zdGF0ZV9iaXRzOwotCi0vKgotICogTk9URTogV2Ugc2hvdWxkIGJlIGFkZGluZyBk
aXJ0eSBtZnQgcmVjb3JkcyB0byBhIGxpc3Qgc29tZXdoZXJlIGFuZCB0aGV5Ci0gKiBzaG91bGQg
YmUgaW5kZXBlbmRlbnQgb2YgdGhlIChudGZzL3ZmcykgaW5vZGUgc3RydWN0dXJlIHNvIHRoYXQg
YW4gaW5vZGUgY2FuCi0gKiBiZSByZW1vdmVkIGJ1dCB0aGUgcmVjb3JkIGNhbiBiZSBsZWZ0IGRp
cnR5IGZvciBzeW5jaW5nIGxhdGVyLgotICovCi0KLS8qCi0gKiBNYWNybyB0cmlja3MgdG8gZXhw
YW5kIHRoZSBOSW5vRm9vKCksIE5Jbm9TZXRGb28oKSwgYW5kIE5Jbm9DbGVhckZvbygpCi0gKiBm
dW5jdGlvbnMuCi0gKi8KLSNkZWZpbmUgTklOT19GTlMoZmxhZykJCQkJCVwKLXN0YXRpYyBpbmxp
bmUgaW50IE5Jbm8jI2ZsYWcobnRmc19pbm9kZSAqbmkpCQlcCi17CQkJCQkJCVwKLQlyZXR1cm4g
dGVzdF9iaXQoTklfIyNmbGFnLCAmKG5pKS0+c3RhdGUpOwlcCi19CQkJCQkJCVwKLXN0YXRpYyBp
bmxpbmUgdm9pZCBOSW5vU2V0IyNmbGFnKG50ZnNfaW5vZGUgKm5pKQlcCi17CQkJCQkJCVwKLQlz
ZXRfYml0KE5JXyMjZmxhZywgJihuaSktPnN0YXRlKTsJCVwKLX0JCQkJCQkJXAotc3RhdGljIGlu
bGluZSB2b2lkIE5Jbm9DbGVhciMjZmxhZyhudGZzX2lub2RlICpuaSkJXAotewkJCQkJCQlcCi0J
Y2xlYXJfYml0KE5JXyMjZmxhZywgJihuaSktPnN0YXRlKTsJCVwKLX0KLQotLyoKLSAqIEFzIGFi
b3ZlIGZvciBOSW5vVGVzdFNldEZvbygpIGFuZCBOSW5vVGVzdENsZWFyRm9vKCkuCi0gKi8KLSNk
ZWZpbmUgVEFTX05JTk9fRk5TKGZsYWcpCQkJCQlcCi1zdGF0aWMgaW5saW5lIGludCBOSW5vVGVz
dFNldCMjZmxhZyhudGZzX2lub2RlICpuaSkJCVwKLXsJCQkJCQkJCVwKLQlyZXR1cm4gdGVzdF9h
bmRfc2V0X2JpdChOSV8jI2ZsYWcsICYobmkpLT5zdGF0ZSk7CVwKLX0JCQkJCQkJCVwKLXN0YXRp
YyBpbmxpbmUgaW50IE5Jbm9UZXN0Q2xlYXIjI2ZsYWcobnRmc19pbm9kZSAqbmkpCQlcCi17CQkJ
CQkJCQlcCi0JcmV0dXJuIHRlc3RfYW5kX2NsZWFyX2JpdChOSV8jI2ZsYWcsICYobmkpLT5zdGF0
ZSk7CVwKLX0KLQotLyogRW1pdCB0aGUgbnRmcyBpbm9kZSBiaXRvcHMgZnVuY3Rpb25zLiAqLwot
TklOT19GTlMoRGlydHkpCi1UQVNfTklOT19GTlMoRGlydHkpCi1OSU5PX0ZOUyhBdHRyTGlzdCkK
LU5JTk9fRk5TKEF0dHJMaXN0Tm9uUmVzaWRlbnQpCi1OSU5PX0ZOUyhBdHRyKQotTklOT19GTlMo
TXN0UHJvdGVjdGVkKQotTklOT19GTlMoTm9uUmVzaWRlbnQpCi1OSU5PX0ZOUyhJbmRleEFsbG9j
UHJlc2VudCkKLU5JTk9fRk5TKENvbXByZXNzZWQpCi1OSU5PX0ZOUyhFbmNyeXB0ZWQpCi1OSU5P
X0ZOUyhTcGFyc2UpCi1OSU5PX0ZOUyhTcGFyc2VEaXNhYmxlZCkKLU5JTk9fRk5TKFRydW5jYXRl
RmFpbGVkKQotCi0vKgotICogVGhlIGZ1bGwgc3RydWN0dXJlIGNvbnRhaW5pbmcgYSBudGZzX2lu
b2RlIGFuZCBhIHZmcyBzdHJ1Y3QgaW5vZGUuIFVzZWQgZm9yCi0gKiBhbGwgcmVhbCBhbmQgZmFr
ZSBpbm9kZXMgYnV0IG5vdCBmb3IgZXh0ZW50IGlub2RlcyB3aGljaCBsYWNrIHRoZSB2ZnMgc3Ry
dWN0Ci0gKiBpbm9kZS4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCW50ZnNfaW5vZGUgbnRmc19p
bm9kZTsKLQlzdHJ1Y3QgaW5vZGUgdmZzX2lub2RlOwkJLyogVGhlIHZmcyBpbm9kZSBzdHJ1Y3R1
cmUuICovCi19IGJpZ19udGZzX2lub2RlOwotCi0vKioKLSAqIE5URlNfSSAtIHJldHVybiB0aGUg
bnRmcyBpbm9kZSBnaXZlbiBhIHZmcyBpbm9kZQotICogQGlub2RlOglWRlMgaW5vZGUKLSAqCi0g
KiBOVEZTX0koKSByZXR1cm5zIHRoZSBudGZzIGlub2RlIGFzc29jaWF0ZWQgd2l0aCB0aGUgVkZT
IEBpbm9kZS4KLSAqLwotc3RhdGljIGlubGluZSBudGZzX2lub2RlICpOVEZTX0koc3RydWN0IGlu
b2RlICppbm9kZSkKLXsKLQlyZXR1cm4gKG50ZnNfaW5vZGUgKiljb250YWluZXJfb2YoaW5vZGUs
IGJpZ19udGZzX2lub2RlLCB2ZnNfaW5vZGUpOwotfQotCi1zdGF0aWMgaW5saW5lIHN0cnVjdCBp
bm9kZSAqVkZTX0kobnRmc19pbm9kZSAqbmkpCi17Ci0JcmV0dXJuICYoKGJpZ19udGZzX2lub2Rl
ICopbmkpLT52ZnNfaW5vZGU7Ci19Ci0KLS8qKgotICogbnRmc19hdHRyIC0gbnRmcyBpbiBtZW1v
cnkgYXR0cmlidXRlIHN0cnVjdHVyZQotICogQG1mdF9ubzoJbWZ0IHJlY29yZCBudW1iZXIgb2Yg
dGhlIGJhc2UgbWZ0IHJlY29yZCBvZiB0aGlzIGF0dHJpYnV0ZQotICogQG5hbWU6CVVuaWNvZGUg
bmFtZSBvZiB0aGUgYXR0cmlidXRlIChOVUxMIGlmIHVubmFtZWQpCi0gKiBAbmFtZV9sZW46CWxl
bmd0aCBvZiBAbmFtZSBpbiBVbmljb2RlIGNoYXJhY3RlcnMgKDAgaWYgdW5uYW1lZCkKLSAqIEB0
eXBlOglhdHRyaWJ1dGUgdHlwZSAoc2VlIGxheW91dC5oKQotICoKLSAqIFRoaXMgc3RydWN0dXJl
IGV4aXN0cyBvbmx5IHRvIHByb3ZpZGUgYSBzbWFsbCBzdHJ1Y3R1cmUgZm9yIHRoZQotICogbnRm
c197YXR0cl99aWdldCgpL250ZnNfdGVzdF9pbm9kZSgpL250ZnNfaW5pdF9sb2NrZWRfaW5vZGUo
KSBtZWNoYW5pc20uCi0gKgotICogTk9URTogRWxlbWVudHMgYXJlIG9yZGVyZWQgYnkgc2l6ZSB0
byBtYWtlIHRoZSBzdHJ1Y3R1cmUgYXMgY29tcGFjdCBhcwotICogcG9zc2libGUgb24gYWxsIGFy
Y2hpdGVjdHVyZXMuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLQl1bnNpZ25lZCBsb25nIG1mdF9u
bzsKLQludGZzY2hhciAqbmFtZTsKLQl1MzIgbmFtZV9sZW47Ci0JQVRUUl9UWVBFIHR5cGU7Ci19
IG50ZnNfYXR0cjsKLQotZXh0ZXJuIGludCBudGZzX3Rlc3RfaW5vZGUoc3RydWN0IGlub2RlICp2
aSwgdm9pZCAqZGF0YSk7Ci0KLWV4dGVybiBzdHJ1Y3QgaW5vZGUgKm50ZnNfaWdldChzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnNiLCB1bnNpZ25lZCBsb25nIG1mdF9ubyk7Ci1leHRlcm4gc3RydWN0IGlu
b2RlICpudGZzX2F0dHJfaWdldChzdHJ1Y3QgaW5vZGUgKmJhc2VfdmksIEFUVFJfVFlQRSB0eXBl
LAotCQludGZzY2hhciAqbmFtZSwgdTMyIG5hbWVfbGVuKTsKLWV4dGVybiBzdHJ1Y3QgaW5vZGUg
Km50ZnNfaW5kZXhfaWdldChzdHJ1Y3QgaW5vZGUgKmJhc2VfdmksIG50ZnNjaGFyICpuYW1lLAot
CQl1MzIgbmFtZV9sZW4pOwotCi1leHRlcm4gc3RydWN0IGlub2RlICpudGZzX2FsbG9jX2JpZ19p
bm9kZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiKTsKLWV4dGVybiB2b2lkIG50ZnNfZnJlZV9iaWdf
aW5vZGUoc3RydWN0IGlub2RlICppbm9kZSk7Ci1leHRlcm4gdm9pZCBudGZzX2V2aWN0X2JpZ19p
bm9kZShzdHJ1Y3QgaW5vZGUgKnZpKTsKLQotZXh0ZXJuIHZvaWQgX19udGZzX2luaXRfaW5vZGUo
c3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgbnRmc19pbm9kZSAqbmkpOwotCi1zdGF0aWMgaW5saW5l
IHZvaWQgbnRmc19pbml0X2JpZ19pbm9kZShzdHJ1Y3QgaW5vZGUgKnZpKQotewotCW50ZnNfaW5v
ZGUgKm5pID0gTlRGU19JKHZpKTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCV9fbnRm
c19pbml0X2lub2RlKHZpLT5pX3NiLCBuaSk7Ci0JbmktPm1mdF9ubyA9IHZpLT5pX2lubzsKLX0K
LQotZXh0ZXJuIG50ZnNfaW5vZGUgKm50ZnNfbmV3X2V4dGVudF9pbm9kZShzdHJ1Y3Qgc3VwZXJf
YmxvY2sgKnNiLAotCQl1bnNpZ25lZCBsb25nIG1mdF9ubyk7Ci1leHRlcm4gdm9pZCBudGZzX2Ns
ZWFyX2V4dGVudF9pbm9kZShudGZzX2lub2RlICpuaSk7Ci0KLWV4dGVybiBpbnQgbnRmc19yZWFk
X2lub2RlX21vdW50KHN0cnVjdCBpbm9kZSAqdmkpOwotCi1leHRlcm4gaW50IG50ZnNfc2hvd19v
cHRpb25zKHN0cnVjdCBzZXFfZmlsZSAqc2YsIHN0cnVjdCBkZW50cnkgKnJvb3QpOwotCi0jaWZk
ZWYgTlRGU19SVwotCi1leHRlcm4gaW50IG50ZnNfdHJ1bmNhdGUoc3RydWN0IGlub2RlICp2aSk7
Ci1leHRlcm4gdm9pZCBudGZzX3RydW5jYXRlX3ZmcyhzdHJ1Y3QgaW5vZGUgKnZpKTsKLQotZXh0
ZXJuIGludCBudGZzX3NldGF0dHIoc3RydWN0IG1udF9pZG1hcCAqaWRtYXAsCi0JCQlzdHJ1Y3Qg
ZGVudHJ5ICpkZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cik7Ci0KLWV4dGVybiBpbnQgX19udGZz
X3dyaXRlX2lub2RlKHN0cnVjdCBpbm9kZSAqdmksIGludCBzeW5jKTsKLQotc3RhdGljIGlubGlu
ZSB2b2lkIG50ZnNfY29tbWl0X2lub2RlKHN0cnVjdCBpbm9kZSAqdmkpCi17Ci0JaWYgKCFpc19i
YWRfaW5vZGUodmkpKQotCQlfX250ZnNfd3JpdGVfaW5vZGUodmksIDEpOwotCXJldHVybjsKLX0K
LQotI2Vsc2UKLQotc3RhdGljIGlubGluZSB2b2lkIG50ZnNfdHJ1bmNhdGVfdmZzKHN0cnVjdCBp
bm9kZSAqdmkpIHt9Ci0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0KLSNlbmRpZiAvKiBfTElOVVhf
TlRGU19JTk9ERV9IICovCmRpZmYgLS1naXQgYS9mcy9udGZzL2xheW91dC5oIGIvZnMvbnRmcy9s
YXlvdXQuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNWQ0YmY3YTMyNTlmLi4wMDAw
MDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9sYXlvdXQuaAorKysgL2Rldi9udWxsCkBAIC0xLDI0MjEg
KzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8K
LS8qCi0gKiBsYXlvdXQuaCAtIEFsbCBOVEZTIGFzc29jaWF0ZWQgb24tZGlzayBzdHJ1Y3R1cmVz
LiBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTCi0gKgkgICAgICBwcm9qZWN0LgotICoKLSAqIENvcHly
aWdodCAoYykgMjAwMS0yMDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICogQ29weXJpZ2h0IChjKSAy
MDAyIFJpY2hhcmQgUnVzc29uCi0gKi8KLQotI2lmbmRlZiBfTElOVVhfTlRGU19MQVlPVVRfSAot
I2RlZmluZSBfTElOVVhfTlRGU19MQVlPVVRfSAotCi0jaW5jbHVkZSA8bGludXgvdHlwZXMuaD4K
LSNpbmNsdWRlIDxsaW51eC9iaXRvcHMuaD4KLSNpbmNsdWRlIDxsaW51eC9saXN0Lmg+Ci0jaW5j
bHVkZSA8YXNtL2J5dGVvcmRlci5oPgotCi0jaW5jbHVkZSAidHlwZXMuaCIKLQotLyogVGhlIE5U
RlMgb2VtX2lkICJOVEZTICAgICIgKi8KLSNkZWZpbmUgbWFnaWNOVEZTCWNwdV90b19sZTY0KDB4
MjAyMDIwMjA1MzQ2NTQ0ZVVMTCkKLQotLyoKLSAqIExvY2F0aW9uIG9mIGJvb3RzZWN0b3Igb24g
cGFydGl0aW9uOgotICoJVGhlIHN0YW5kYXJkIE5URlNfQk9PVF9TRUNUT1IgaXMgb24gc2VjdG9y
IDAgb2YgdGhlIHBhcnRpdGlvbi4KLSAqCU9uIE5UNCBhbmQgYWJvdmUgdGhlcmUgaXMgb25lIGJh
Y2t1cCBjb3B5IG9mIHRoZSBib290IHNlY3RvciB0bwotICoJYmUgZm91bmQgb24gdGhlIGxhc3Qg
c2VjdG9yIG9mIHRoZSBwYXJ0aXRpb24gKG5vdCBub3JtYWxseSBhY2Nlc3NpYmxlCi0gKglmcm9t
IHdpdGhpbiBXaW5kb3dzIGFzIHRoZSBib290c2VjdG9yIGNvbnRhaW5lZCBudW1iZXIgb2Ygc2Vj
dG9ycwotICoJdmFsdWUgaXMgb25lIGxlc3MgdGhhbiB0aGUgYWN0dWFsIHZhbHVlISkuCi0gKglP
biB2ZXJzaW9ucyBvZiBOVCAzLjUxIGFuZCBlYXJsaWVyLCB0aGUgYmFja3VwIGNvcHkgd2FzIGxv
Y2F0ZWQgYXQKLSAqCW51bWJlciBvZiBzZWN0b3JzLzIgKGludGVnZXIgZGl2aWRlKSwgaS5lLiBp
biB0aGUgbWlkZGxlIG9mIHRoZSB2b2x1bWUuCi0gKi8KLQotLyoKLSAqIEJJT1MgcGFyYW1ldGVy
IGJsb2NrIChicGIpIHN0cnVjdHVyZS4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCWxlMTYgYnl0
ZXNfcGVyX3NlY3RvcjsJCS8qIFNpemUgb2YgYSBzZWN0b3IgaW4gYnl0ZXMuICovCi0JdTggIHNl
Y3RvcnNfcGVyX2NsdXN0ZXI7CS8qIFNpemUgb2YgYSBjbHVzdGVyIGluIHNlY3RvcnMuICovCi0J
bGUxNiByZXNlcnZlZF9zZWN0b3JzOwkJLyogemVybyAqLwotCXU4ICBmYXRzOwkJCS8qIHplcm8g
Ki8KLQlsZTE2IHJvb3RfZW50cmllczsJCS8qIHplcm8gKi8KLQlsZTE2IHNlY3RvcnM7CQkJLyog
emVybyAqLwotCXU4ICBtZWRpYV90eXBlOwkJCS8qIDB4ZjggPSBoYXJkIGRpc2sgKi8KLQlsZTE2
IHNlY3RvcnNfcGVyX2ZhdDsJCS8qIHplcm8gKi8KLQlsZTE2IHNlY3RvcnNfcGVyX3RyYWNrOwkJ
LyogaXJyZWxldmFudCAqLwotCWxlMTYgaGVhZHM7CQkJLyogaXJyZWxldmFudCAqLwotCWxlMzIg
aGlkZGVuX3NlY3RvcnM7CQkvKiB6ZXJvICovCi0JbGUzMiBsYXJnZV9zZWN0b3JzOwkJLyogemVy
byAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIEJJT1NfUEFSQU1FVEVSX0JMT0NL
OwotCi0vKgotICogTlRGUyBib290IHNlY3RvciBzdHJ1Y3R1cmUuCi0gKi8KLXR5cGVkZWYgc3Ry
dWN0IHsKLQl1OCAganVtcFszXTsJCQkvKiBJcnJlbGV2YW50IChqdW1wIHRvIGJvb3QgdXAgY29k
ZSkuKi8KLQlsZTY0IG9lbV9pZDsJCQkvKiBNYWdpYyAiTlRGUyAgICAiLiAqLwotCUJJT1NfUEFS
QU1FVEVSX0JMT0NLIGJwYjsJLyogU2VlIEJJT1NfUEFSQU1FVEVSX0JMT0NLLiAqLwotCXU4ICB1
bnVzZWRbNF07CQkJLyogemVybywgTlRGUyBkaXNrZWRpdC5leGUgc3RhdGVzIHRoYXQKLQkJCQkJ
ICAgdGhpcyBpcyBhY3R1YWxseToKLQkJCQkJCV9fdTggcGh5c2ljYWxfZHJpdmU7CS8vIDB4ODAK
LQkJCQkJCV9fdTggY3VycmVudF9oZWFkOwkvLyB6ZXJvCi0JCQkJCQlfX3U4IGV4dGVuZGVkX2Jv
b3Rfc2lnbmF0dXJlOwotCQkJCQkJCQkJLy8gMHg4MAotCQkJCQkJX191OCB1bnVzZWQ7CQkvLyB6
ZXJvCi0JCQkJCSAqLwotLyoweDI4Ki9zbGU2NCBudW1iZXJfb2Zfc2VjdG9yczsJLyogTnVtYmVy
IG9mIHNlY3RvcnMgaW4gdm9sdW1lLiBHaXZlcwotCQkJCQkgICBtYXhpbXVtIHZvbHVtZSBzaXpl
IG9mIDJeNjMgc2VjdG9ycy4KLQkJCQkJICAgQXNzdW1pbmcgc3RhbmRhcmQgc2VjdG9yIHNpemUg
b2YgNTEyCi0JCQkJCSAgIGJ5dGVzLCB0aGUgbWF4aW11bSBieXRlIHNpemUgaXMKLQkJCQkJICAg
YXBwcm94LiA0Ljd4MTBeMjEgYnl0ZXMuICgtOyAqLwotCXNsZTY0IG1mdF9sY247CQkJLyogQ2x1
c3RlciBsb2NhdGlvbiBvZiBtZnQgZGF0YS4gKi8KLQlzbGU2NCBtZnRtaXJyX2xjbjsJCS8qIENs
dXN0ZXIgbG9jYXRpb24gb2YgY29weSBvZiBtZnQuICovCi0JczggIGNsdXN0ZXJzX3Blcl9tZnRf
cmVjb3JkOwkvKiBNZnQgcmVjb3JkIHNpemUgaW4gY2x1c3RlcnMuICovCi0JdTggIHJlc2VydmVk
MFszXTsJCS8qIHplcm8gKi8KLQlzOCAgY2x1c3RlcnNfcGVyX2luZGV4X3JlY29yZDsJLyogSW5k
ZXggYmxvY2sgc2l6ZSBpbiBjbHVzdGVycy4gKi8KLQl1OCAgcmVzZXJ2ZWQxWzNdOwkJLyogemVy
byAqLwotCWxlNjQgdm9sdW1lX3NlcmlhbF9udW1iZXI7CS8qIElycmVsZXZhbnQgKHNlcmlhbCBu
dW1iZXIpLiAqLwotCWxlMzIgY2hlY2tzdW07CQkJLyogQm9vdCBzZWN0b3IgY2hlY2tzdW0uICov
Ci0vKjB4NTQqL3U4ICBib290c3RyYXBbNDI2XTsJCS8qIElycmVsZXZhbnQgKGJvb3QgdXAgY29k
ZSkuICovCi0JbGUxNiBlbmRfb2Zfc2VjdG9yX21hcmtlcjsJLyogRW5kIG9mIGJvb3RzZWN0b3Ig
bWFnaWMuIEFsd2F5cyBpcwotCQkJCQkgICAweGFhNTUgaW4gbGl0dGxlIGVuZGlhbi4gKi8KLS8q
IHNpemVvZigpID0gNTEyICgweDIwMCkgYnl0ZXMgKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFj
a2VkX18pKSBOVEZTX0JPT1RfU0VDVE9SOwotCi0vKgotICogTWFnaWMgaWRlbnRpZmllcnMgcHJl
c2VudCBhdCB0aGUgYmVnaW5uaW5nIG9mIGFsbCBudGZzIHJlY29yZCBjb250YWluaW5nCi0gKiBy
ZWNvcmRzIChsaWtlIG1mdCByZWNvcmRzIGZvciBleGFtcGxlKS4KLSAqLwotZW51bSB7Ci0JLyog
Rm91bmQgaW4gJE1GVC8kREFUQS4gKi8KLQltYWdpY19GSUxFID0gY3B1X3RvX2xlMzIoMHg0NTRj
NDk0NiksIC8qIE1mdCBlbnRyeS4gKi8KLQltYWdpY19JTkRYID0gY3B1X3RvX2xlMzIoMHg1ODQ0
NGU0OSksIC8qIEluZGV4IGJ1ZmZlci4gKi8KLQltYWdpY19IT0xFID0gY3B1X3RvX2xlMzIoMHg0
NTRjNGY0OCksIC8qID8gKE5URlMgMy4wKz8pICovCi0KLQkvKiBGb3VuZCBpbiAkTG9nRmlsZS8k
REFUQS4gKi8KLQltYWdpY19SU1RSID0gY3B1X3RvX2xlMzIoMHg1MjU0NTM1MiksIC8qIFJlc3Rh
cnQgcGFnZS4gKi8KLQltYWdpY19SQ1JEID0gY3B1X3RvX2xlMzIoMHg0NDUyNDM1MiksIC8qIExv
ZyByZWNvcmQgcGFnZS4gKi8KLQotCS8qIEZvdW5kIGluICRMb2dGaWxlLyREQVRBLiAgKE1heSBi
ZSBmb3VuZCBpbiAkTUZULyREQVRBLCBhbHNvPykgKi8KLQltYWdpY19DSEtEID0gY3B1X3RvX2xl
MzIoMHg0NDRiNDg0MyksIC8qIE1vZGlmaWVkIGJ5IGNoa2Rzay4gKi8KLQotCS8qIEZvdW5kIGlu
IGFsbCBudGZzIHJlY29yZCBjb250YWluaW5nIHJlY29yZHMuICovCi0JbWFnaWNfQkFBRCA9IGNw
dV90b19sZTMyKDB4NDQ0MTQxNDIpLCAvKiBGYWlsZWQgbXVsdGkgc2VjdG9yCi0JCQkJCQkgICAg
ICAgdHJhbnNmZXIgd2FzIGRldGVjdGVkLiAqLwotCS8qCi0JICogRm91bmQgaW4gJExvZ0ZpbGUv
JERBVEEgd2hlbiBhIHBhZ2UgaXMgZnVsbCBvZiAweGZmIGJ5dGVzIGFuZCBpcwotCSAqIHRodXMg
bm90IGluaXRpYWxpemVkLiAgUGFnZSBtdXN0IGJlIGluaXRpYWxpemVkIGJlZm9yZSB1c2luZyBp
dC4KLQkgKi8KLQltYWdpY19lbXB0eSA9IGNwdV90b19sZTMyKDB4ZmZmZmZmZmYpIC8qIFJlY29y
ZCBpcyBlbXB0eS4gKi8KLX07Ci0KLXR5cGVkZWYgbGUzMiBOVEZTX1JFQ09SRF9UWVBFOwotCi0v
KgotICogR2VuZXJpYyBtYWdpYyBjb21wYXJpc29uIG1hY3Jvcy4gRmluYWxseSBmb3VuZCBhIHVz
ZSBmb3IgdGhlICMjIHByZXByb2Nlc3NvcgotICogb3BlcmF0b3IhICgtOAotICovCi0KLXN0YXRp
YyBpbmxpbmUgYm9vbCBfX250ZnNfaXNfbWFnaWMobGUzMiB4LCBOVEZTX1JFQ09SRF9UWVBFIHIp
Ci17Ci0JcmV0dXJuICh4ID09IHIpOwotfQotI2RlZmluZSBudGZzX2lzX21hZ2ljKHgsIG0pCV9f
bnRmc19pc19tYWdpYyh4LCBtYWdpY18jI20pCi0KLXN0YXRpYyBpbmxpbmUgYm9vbCBfX250ZnNf
aXNfbWFnaWNwKGxlMzIgKnAsIE5URlNfUkVDT1JEX1RZUEUgcikKLXsKLQlyZXR1cm4gKCpwID09
IHIpOwotfQotI2RlZmluZSBudGZzX2lzX21hZ2ljcChwLCBtKQlfX250ZnNfaXNfbWFnaWNwKHAs
IG1hZ2ljXyMjbSkKLQotLyoKLSAqIFNwZWNpYWxpc2VkIG1hZ2ljIGNvbXBhcmlzb24gbWFjcm9z
IGZvciB0aGUgTlRGU19SRUNPUkRfVFlQRXMgZGVmaW5lZCBhYm92ZS4KLSAqLwotI2RlZmluZSBu
dGZzX2lzX2ZpbGVfcmVjb3JkKHgpCQkoIG50ZnNfaXNfbWFnaWMgKHgsIEZJTEUpICkKLSNkZWZp
bmUgbnRmc19pc19maWxlX3JlY29yZHAocCkJCSggbnRmc19pc19tYWdpY3AocCwgRklMRSkgKQot
I2RlZmluZSBudGZzX2lzX21mdF9yZWNvcmQoeCkJCSggbnRmc19pc19maWxlX3JlY29yZCAoeCkg
KQotI2RlZmluZSBudGZzX2lzX21mdF9yZWNvcmRwKHApCQkoIG50ZnNfaXNfZmlsZV9yZWNvcmRw
KHApICkKLSNkZWZpbmUgbnRmc19pc19pbmR4X3JlY29yZCh4KQkJKCBudGZzX2lzX21hZ2ljICh4
LCBJTkRYKSApCi0jZGVmaW5lIG50ZnNfaXNfaW5keF9yZWNvcmRwKHApCQkoIG50ZnNfaXNfbWFn
aWNwKHAsIElORFgpICkKLSNkZWZpbmUgbnRmc19pc19ob2xlX3JlY29yZCh4KQkJKCBudGZzX2lz
X21hZ2ljICh4LCBIT0xFKSApCi0jZGVmaW5lIG50ZnNfaXNfaG9sZV9yZWNvcmRwKHApCQkoIG50
ZnNfaXNfbWFnaWNwKHAsIEhPTEUpICkKLQotI2RlZmluZSBudGZzX2lzX3JzdHJfcmVjb3JkKHgp
CQkoIG50ZnNfaXNfbWFnaWMgKHgsIFJTVFIpICkKLSNkZWZpbmUgbnRmc19pc19yc3RyX3JlY29y
ZHAocCkJCSggbnRmc19pc19tYWdpY3AocCwgUlNUUikgKQotI2RlZmluZSBudGZzX2lzX3JjcmRf
cmVjb3JkKHgpCQkoIG50ZnNfaXNfbWFnaWMgKHgsIFJDUkQpICkKLSNkZWZpbmUgbnRmc19pc19y
Y3JkX3JlY29yZHAocCkJCSggbnRmc19pc19tYWdpY3AocCwgUkNSRCkgKQotCi0jZGVmaW5lIG50
ZnNfaXNfY2hrZF9yZWNvcmQoeCkJCSggbnRmc19pc19tYWdpYyAoeCwgQ0hLRCkgKQotI2RlZmlu
ZSBudGZzX2lzX2Noa2RfcmVjb3JkcChwKQkJKCBudGZzX2lzX21hZ2ljcChwLCBDSEtEKSApCi0K
LSNkZWZpbmUgbnRmc19pc19iYWFkX3JlY29yZCh4KQkJKCBudGZzX2lzX21hZ2ljICh4LCBCQUFE
KSApCi0jZGVmaW5lIG50ZnNfaXNfYmFhZF9yZWNvcmRwKHApCQkoIG50ZnNfaXNfbWFnaWNwKHAs
IEJBQUQpICkKLQotI2RlZmluZSBudGZzX2lzX2VtcHR5X3JlY29yZCh4KQkJKCBudGZzX2lzX21h
Z2ljICh4LCBlbXB0eSkgKQotI2RlZmluZSBudGZzX2lzX2VtcHR5X3JlY29yZHAocCkJKCBudGZz
X2lzX21hZ2ljcChwLCBlbXB0eSkgKQotCi0vKgotICogVGhlIFVwZGF0ZSBTZXF1ZW5jZSBBcnJh
eSAodXNhKSBpcyBhbiBhcnJheSBvZiB0aGUgbGUxNiB2YWx1ZXMgd2hpY2ggYmVsb25nCi0gKiB0
byB0aGUgZW5kIG9mIGVhY2ggc2VjdG9yIHByb3RlY3RlZCBieSB0aGUgdXBkYXRlIHNlcXVlbmNl
IHJlY29yZCBpbiB3aGljaAotICogdGhpcyBhcnJheSBpcyBjb250YWluZWQuIE5vdGUgdGhhdCB0
aGUgZmlyc3QgZW50cnkgaXMgdGhlIFVwZGF0ZSBTZXF1ZW5jZQotICogTnVtYmVyICh1c24pLCBh
IGN5Y2xpYyBjb3VudGVyIG9mIGhvdyBtYW55IHRpbWVzIHRoZSBwcm90ZWN0ZWQgcmVjb3JkIGhh
cwotICogYmVlbiB3cml0dGVuIHRvIGRpc2suIFRoZSB2YWx1ZXMgMCBhbmQgLTEgKGllLiAweGZm
ZmYpIGFyZSBub3QgdXNlZC4gQWxsCi0gKiBsYXN0IGxlMTYncyBvZiBlYWNoIHNlY3RvciBoYXZl
IHRvIGJlIGVxdWFsIHRvIHRoZSB1c24gKGR1cmluZyByZWFkaW5nKSBvcgotICogYXJlIHNldCB0
byBpdCAoZHVyaW5nIHdyaXRpbmcpLiBJZiB0aGV5IGFyZSBub3QsIGFuIGluY29tcGxldGUgbXVs
dGkgc2VjdG9yCi0gKiB0cmFuc2ZlciBoYXMgb2NjdXJyZWQgd2hlbiB0aGUgZGF0YSB3YXMgd3Jp
dHRlbi4KLSAqIFRoZSBtYXhpbXVtIHNpemUgZm9yIHRoZSB1cGRhdGUgc2VxdWVuY2UgYXJyYXkg
aXMgZml4ZWQgdG86Ci0gKgltYXhpbXVtIHNpemUgPSB1c2Ffb2ZzICsgKHVzYV9jb3VudCAqIDIp
ID0gNTEwIGJ5dGVzCi0gKiBUaGUgNTEwIGJ5dGVzIGNvbWVzIGZyb20gdGhlIGZhY3QgdGhhdCB0
aGUgbGFzdCBsZTE2IGluIHRoZSBhcnJheSBoYXMgdG8KLSAqIChvYnZpb3VzbHkpIGZpbmlzaCBi
ZWZvcmUgdGhlIGxhc3QgbGUxNiBvZiB0aGUgZmlyc3QgNTEyLWJ5dGUgc2VjdG9yLgotICogVGhp
cyBmb3JtdWxhIGNhbiBiZSB1c2VkIGFzIGEgY29uc2lzdGVuY3kgY2hlY2sgaW4gdGhhdCB1c2Ff
b2ZzICsKLSAqICh1c2FfY291bnQgKiAyKSBoYXMgdG8gYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRv
IDUxMC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCU5URlNfUkVDT1JEX1RZUEUgbWFnaWM7CS8q
IEEgZm91ci1ieXRlIG1hZ2ljIGlkZW50aWZ5aW5nIHRoZSByZWNvcmQKLQkJCQkgICB0eXBlIGFu
ZC9vciBzdGF0dXMuICovCi0JbGUxNiB1c2Ffb2ZzOwkJLyogT2Zmc2V0IHRvIHRoZSBVcGRhdGUg
U2VxdWVuY2UgQXJyYXkgKHVzYSkKLQkJCQkgICBmcm9tIHRoZSBzdGFydCBvZiB0aGUgbnRmcyBy
ZWNvcmQuICovCi0JbGUxNiB1c2FfY291bnQ7CQkvKiBOdW1iZXIgb2YgbGUxNiBzaXplZCBlbnRy
aWVzIGluIHRoZSB1c2EKLQkJCQkgICBpbmNsdWRpbmcgdGhlIFVwZGF0ZSBTZXF1ZW5jZSBOdW1i
ZXIgKHVzbiksCi0JCQkJICAgdGh1cyB0aGUgbnVtYmVyIG9mIGZpeHVwcyBpcyB0aGUgdXNhX2Nv
dW50Ci0JCQkJICAgbWludXMgMS4gKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBO
VEZTX1JFQ09SRDsKLQotLyoKLSAqIFN5c3RlbSBmaWxlcyBtZnQgcmVjb3JkIG51bWJlcnMuIEFs
bCB0aGVzZSBmaWxlcyBhcmUgYWx3YXlzIG1hcmtlZCBhcyB1c2VkCi0gKiBpbiB0aGUgYml0bWFw
IGF0dHJpYnV0ZSBvZiB0aGUgbWZ0OyBwcmVzdW1hYmx5IGluIG9yZGVyIHRvIGF2b2lkIGFjY2lk
ZW50YWwKLSAqIGFsbG9jYXRpb24gZm9yIHJhbmRvbSBvdGhlciBtZnQgcmVjb3Jkcy4gQWxzbywg
dGhlIHNlcXVlbmNlIG51bWJlciBmb3IgZWFjaAotICogb2YgdGhlIHN5c3RlbSBmaWxlcyBpcyBh
bHdheXMgZXF1YWwgdG8gdGhlaXIgbWZ0IHJlY29yZCBudW1iZXIgYW5kIGl0IGlzCi0gKiBuZXZl
ciBtb2RpZmllZC4KLSAqLwotdHlwZWRlZiBlbnVtIHsKLQlGSUxFX01GVCAgICAgICA9IDAsCS8q
IE1hc3RlciBmaWxlIHRhYmxlIChtZnQpLiBEYXRhIGF0dHJpYnV0ZQotCQkJCSAgIGNvbnRhaW5z
IHRoZSBlbnRyaWVzIGFuZCBiaXRtYXAgYXR0cmlidXRlCi0JCQkJICAgcmVjb3JkcyB3aGljaCBv
bmVzIGFyZSBpbiB1c2UgKGJpdD09MSkuICovCi0JRklMRV9NRlRNaXJyICAgPSAxLAkvKiBNZnQg
bWlycm9yOiBjb3B5IG9mIGZpcnN0IGZvdXIgbWZ0IHJlY29yZHMKLQkJCQkgICBpbiBkYXRhIGF0
dHJpYnV0ZS4gSWYgY2x1c3RlciBzaXplID4gNGtpQiwKLQkJCQkgICBjb3B5IG9mIGZpcnN0IE4g
bWZ0IHJlY29yZHMsIHdpdGgKLQkJCQkJTiA9IGNsdXN0ZXJfc2l6ZSAvIG1mdF9yZWNvcmRfc2l6
ZS4gKi8KLQlGSUxFX0xvZ0ZpbGUgICA9IDIsCS8qIEpvdXJuYWxsaW5nIGxvZyBpbiBkYXRhIGF0
dHJpYnV0ZS4gKi8KLQlGSUxFX1ZvbHVtZSAgICA9IDMsCS8qIFZvbHVtZSBuYW1lIGF0dHJpYnV0
ZSBhbmQgdm9sdW1lIGluZm9ybWF0aW9uCi0JCQkJICAgYXR0cmlidXRlIChmbGFncyBhbmQgbnRm
cyB2ZXJzaW9uKS4gV2luZG93cwotCQkJCSAgIHJlZmVycyB0byB0aGlzIGZpbGUgYXMgdm9sdW1l
IERBU0QgKERpcmVjdAotCQkJCSAgIEFjY2VzcyBTdG9yYWdlIERldmljZSkuICovCi0JRklMRV9B
dHRyRGVmICAgPSA0LAkvKiBBcnJheSBvZiBhdHRyaWJ1dGUgZGVmaW5pdGlvbnMgaW4gZGF0YQot
CQkJCSAgIGF0dHJpYnV0ZS4gKi8KLQlGSUxFX3Jvb3QgICAgICA9IDUsCS8qIFJvb3QgZGlyZWN0
b3J5LiAqLwotCUZJTEVfQml0bWFwICAgID0gNiwJLyogQWxsb2NhdGlvbiBiaXRtYXAgb2YgYWxs
IGNsdXN0ZXJzIChsY25zKSBpbgotCQkJCSAgIGRhdGEgYXR0cmlidXRlLiAqLwotCUZJTEVfQm9v
dCAgICAgID0gNywJLyogQm9vdCBzZWN0b3IgKGFsd2F5cyBhdCBjbHVzdGVyIDApIGluIGRhdGEK
LQkJCQkgICBhdHRyaWJ1dGUuICovCi0JRklMRV9CYWRDbHVzICAgPSA4LAkvKiBDb250YWlucyBh
bGwgYmFkIGNsdXN0ZXJzIGluIHRoZSBub24tcmVzaWRlbnQKLQkJCQkgICBkYXRhIGF0dHJpYnV0
ZS4gKi8KLQlGSUxFX1NlY3VyZSAgICA9IDksCS8qIFNoYXJlZCBzZWN1cml0eSBkZXNjcmlwdG9y
cyBpbiBkYXRhIGF0dHJpYnV0ZQotCQkJCSAgIGFuZCB0d28gaW5kZXhlcyBpbnRvIHRoZSBkZXNj
cmlwdG9ycy4KLQkJCQkgICBBcHBlYXJlZCBpbiBXaW5kb3dzIDIwMDAuIEJlZm9yZSB0aGF0LCB0
aGlzCi0JCQkJICAgZmlsZSB3YXMgbmFtZWQgJFF1b3RhIGJ1dCB3YXMgdW51c2VkLiAqLwotCUZJ
TEVfVXBDYXNlICAgID0gMTAsCS8qIFVwcGVyY2FzZSBlcXVpdmFsZW50cyBvZiBhbGwgNjU1MzYg
VW5pY29kZQotCQkJCSAgIGNoYXJhY3RlcnMgaW4gZGF0YSBhdHRyaWJ1dGUuICovCi0JRklMRV9F
eHRlbmQgICAgPSAxMSwJLyogRGlyZWN0b3J5IGNvbnRhaW5pbmcgb3RoZXIgc3lzdGVtIGZpbGVz
IChlZy4KLQkJCQkgICAkT2JqSWQsICRRdW90YSwgJFJlcGFyc2UgYW5kICRVc25Kcm5sKS4gVGhp
cwotCQkJCSAgIGlzIG5ldyB0byBOVEZTMy4wLiAqLwotCUZJTEVfcmVzZXJ2ZWQxMiA9IDEyLAkv
KiBSZXNlcnZlZCBmb3IgZnV0dXJlIHVzZSAocmVjb3JkcyAxMi0xNSkuICovCi0JRklMRV9yZXNl
cnZlZDEzID0gMTMsCi0JRklMRV9yZXNlcnZlZDE0ID0gMTQsCi0JRklMRV9yZXNlcnZlZDE1ID0g
MTUsCi0JRklMRV9maXJzdF91c2VyID0gMTYsCS8qIEZpcnN0IHVzZXIgZmlsZSwgdXNlZCBhcyB0
ZXN0IGxpbWl0IGZvcgotCQkJCSAgIHdoZXRoZXIgdG8gYWxsb3cgb3BlbmluZyBhIGZpbGUgb3Ig
bm90LiAqLwotfSBOVEZTX1NZU1RFTV9GSUxFUzsKLQotLyoKLSAqIFRoZXNlIGFyZSB0aGUgc28g
ZmFyIGtub3duIE1GVF9SRUNPUkRfKiBmbGFncyAoMTYtYml0KSB3aGljaCBjb250YWluCi0gKiBp
bmZvcm1hdGlvbiBhYm91dCB0aGUgbWZ0IHJlY29yZCBpbiB3aGljaCB0aGV5IGFyZSBwcmVzZW50
LgotICovCi1lbnVtIHsKLQlNRlRfUkVDT1JEX0lOX1VTRQk9IGNwdV90b19sZTE2KDB4MDAwMSks
Ci0JTUZUX1JFQ09SRF9JU19ESVJFQ1RPUlkgPSBjcHVfdG9fbGUxNigweDAwMDIpLAotfSBfX2F0
dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpOwotCi10eXBlZGVmIGxlMTYgTUZUX1JFQ09SRF9GTEFH
UzsKLQotLyoKLSAqIG1mdCByZWZlcmVuY2VzIChha2EgZmlsZSByZWZlcmVuY2VzIG9yIGZpbGUg
cmVjb3JkIHNlZ21lbnQgcmVmZXJlbmNlcykgYXJlCi0gKiB1c2VkIHdoZW5ldmVyIGEgc3RydWN0
dXJlIG5lZWRzIHRvIHJlZmVyIHRvIGEgcmVjb3JkIGluIHRoZSBtZnQuCi0gKgotICogQSByZWZl
cmVuY2UgY29uc2lzdHMgb2YgYSA0OC1iaXQgaW5kZXggaW50byB0aGUgbWZ0IGFuZCBhIDE2LWJp
dCBzZXF1ZW5jZQotICogbnVtYmVyIHVzZWQgdG8gZGV0ZWN0IHN0YWxlIHJlZmVyZW5jZXMuCi0g
KgotICogRm9yIGVycm9yIHJlcG9ydGluZyBwdXJwb3NlcyB3ZSB0cmVhdCB0aGUgNDgtYml0IGlu
ZGV4IGFzIGEgc2lnbmVkIHF1YW50aXR5LgotICoKLSAqIFRoZSBzZXF1ZW5jZSBudW1iZXIgaXMg
YSBjaXJjdWxhciBjb3VudGVyIChza2lwcGluZyAwKSBkZXNjcmliaW5nIGhvdyBtYW55Ci0gKiB0
aW1lcyB0aGUgcmVmZXJlbmNlZCBtZnQgcmVjb3JkIGhhcyBiZWVuIChyZSl1c2VkLiBUaGlzIGhh
cyB0byBtYXRjaCB0aGUKLSAqIHNlcXVlbmNlIG51bWJlciBvZiB0aGUgbWZ0IHJlY29yZCBiZWlu
ZyByZWZlcmVuY2VkLCBvdGhlcndpc2UgdGhlIHJlZmVyZW5jZQotICogaXMgY29uc2lkZXJlZCBz
dGFsZSBhbmQgcmVtb3ZlZCAoRklYTUU6IG9ubHkgbnRmc2NrIG9yIHRoZSBkcml2ZXIgaXRzZWxm
PykuCi0gKgotICogSWYgdGhlIHNlcXVlbmNlIG51bWJlciBpcyB6ZXJvIGl0IGlzIGFzc3VtZWQg
dGhhdCBubyBzZXF1ZW5jZSBudW1iZXIKLSAqIGNvbnNpc3RlbmN5IGNoZWNraW5nIHNob3VsZCBi
ZSBwZXJmb3JtZWQuCi0gKgotICogRklYTUU6IFNpbmNlIGlub2RlcyBhcmUgMzItYml0IGFzIG9m
IG5vdywgdGhlIGRyaXZlciBuZWVkcyB0byBhbHdheXMgY2hlY2sKLSAqIGZvciBoaWdoX3BhcnQg
YmVpbmcgMCBhbmQgaWYgbm90IGVpdGhlciBCVUcoKSwgY2F1c2UgYSBwYW5pYygpIG9yIGhhbmRs
ZQotICogdGhlIHNpdHVhdGlvbiBpbiBzb21lIG90aGVyIHdheS4gVGhpcyBzaG91bGRuJ3QgYmUg
YSBwcm9ibGVtIGFzIGEgdm9sdW1lIGhhcwotICogdG8gYmVjb21lIEhVR0UgaW4gb3JkZXIgdG8g
bmVlZCBtb3JlIHRoYW4gMzItYml0cyB3b3J0aCBvZiBtZnQgcmVjb3Jkcy4KLSAqIEFzc3VtaW5n
IHRoZSBzdGFuZGFyZCBtZnQgcmVjb3JkIHNpemUgb2YgMWtiIG9ubHkgdGhlIHJlY29yZHMgKG5l
dmVyIG1pbmQKLSAqIHRoZSBub24tcmVzaWRlbnQgYXR0cmlidXRlcywgZXRjLikgd291bGQgcmVx
dWlyZSA0VGIgb2Ygc3BhY2Ugb24gdGhlaXIgb3duCi0gKiBmb3IgdGhlIGZpcnN0IDMyIGJpdHMg
d29ydGggb2YgcmVjb3Jkcy4gVGhpcyBpcyBvbmx5IGlmIHNvbWUgc3RyYW5nZSBwZXJzb24KLSAq
IGRvZXNuJ3QgZGVjaWRlIHRvIGZvdWwgcGxheSBhbmQgbWFrZSB0aGUgbWZ0IHNwYXJzZSB3aGlj
aCB3b3VsZCBiZSBhIHJlYWxseQotICogaG9ycmlibGUgdGhpbmcgdG8gZG8gYXMgaXQgd291bGQg
dHJhc2ggb3VyIGN1cnJlbnQgZHJpdmVyIGltcGxlbWVudGF0aW9uLiApLToKLSAqIERvIEkgaGVh
ciBzY3JlYW1zICJ3ZSB3YW50IDY0LWJpdCBpbm9kZXMhIiA/IT8gKC07Ci0gKgotICogRklYTUU6
IFRoZSBtZnQgem9uZSBpcyBkZWZpbmVkIGFzIHRoZSBmaXJzdCAxMiUgb2YgdGhlIHZvbHVtZS4g
VGhpcyBzcGFjZSBpcwotICogcmVzZXJ2ZWQgc28gdGhhdCB0aGUgbWZ0IGNhbiBncm93IGNvbnRp
Z3VvdXNseSBhbmQgaGVuY2UgZG9lc24ndCBiZWNvbWUKLSAqIGZyYWdtZW50ZWQuIFZvbHVtZSBm
cmVlIHNwYWNlIGluY2x1ZGVzIHRoZSBlbXB0eSBwYXJ0IG9mIHRoZSBtZnQgem9uZSBhbmQKLSAq
IHdoZW4gdGhlIHZvbHVtZSdzIGZyZWUgODglIGFyZSB1c2VkIHVwLCB0aGUgbWZ0IHpvbmUgaXMg
c2hydW5rIGJ5IGEgZmFjdG9yCi0gKiBvZiAyLCB0aHVzIG1ha2luZyBtb3JlIHNwYWNlIGF2YWls
YWJsZSBmb3IgbW9yZSBmaWxlcy9kYXRhLiBUaGlzIHByb2Nlc3MgaXMKLSAqIHJlcGVhdGVkIGV2
ZXJ5IHRpbWUgdGhlcmUgaXMgbm8gbW9yZSBmcmVlIHNwYWNlIGV4Y2VwdCBmb3IgdGhlIG1mdCB6
b25lIHVudGlsCi0gKiB0aGVyZSByZWFsbHkgaXMgbm8gbW9yZSBmcmVlIHNwYWNlLgotICovCi0K
LS8qCi0gKiBUeXBlZGVmIHRoZSBNRlRfUkVGIGFzIGEgNjQtYml0IHZhbHVlIGZvciBlYXNpZXIg
aGFuZGxpbmcuCi0gKiBBbHNvIGRlZmluZSB0d28gdW5wYWNraW5nIG1hY3JvcyB0byBnZXQgdG8g
dGhlIHJlZmVyZW5jZSAoTVJFRikgYW5kCi0gKiBzZXF1ZW5jZSBudW1iZXIgKE1TRVFOTykgcmVz
cGVjdGl2ZWx5LgotICogVGhlIF9MRSB2ZXJzaW9ucyBhcmUgdG8gYmUgYXBwbGllZCBvbiBsaXR0
bGUgZW5kaWFuIE1GVF9SRUZzLgotICogTm90ZTogVGhlIF9MRSB2ZXJzaW9ucyB3aWxsIHJldHVy
biBhIENQVSBlbmRpYW4gZm9ybWF0dGVkIHZhbHVlIQotICovCi0jZGVmaW5lIE1GVF9SRUZfTUFT
S19DUFUgMHgwMDAwZmZmZmZmZmZmZmZmVUxMCi0jZGVmaW5lIE1GVF9SRUZfTUFTS19MRSBjcHVf
dG9fbGU2NChNRlRfUkVGX01BU0tfQ1BVKQotCi10eXBlZGVmIHU2NCBNRlRfUkVGOwotdHlwZWRl
ZiBsZTY0IGxlTUZUX1JFRjsKLQotI2RlZmluZSBNS19NUkVGKG0sIHMpCSgoTUZUX1JFRikoKChN
RlRfUkVGKShzKSA8PCA0OCkgfAkJXAotCQkJCQkoKE1GVF9SRUYpKG0pICYgTUZUX1JFRl9NQVNL
X0NQVSkpKQotI2RlZmluZSBNS19MRV9NUkVGKG0sIHMpIGNwdV90b19sZTY0KE1LX01SRUYobSwg
cykpCi0KLSNkZWZpbmUgTVJFRih4KQkJKCh1bnNpZ25lZCBsb25nKSgoeCkgJiBNRlRfUkVGX01B
U0tfQ1BVKSkKLSNkZWZpbmUgTVNFUU5PKHgpCSgodTE2KSgoKHgpID4+IDQ4KSAmIDB4ZmZmZikp
Ci0jZGVmaW5lIE1SRUZfTEUoeCkJKCh1bnNpZ25lZCBsb25nKShsZTY0X3RvX2NwdSh4KSAmIE1G
VF9SRUZfTUFTS19DUFUpKQotI2RlZmluZSBNU0VRTk9fTEUoeCkJKCh1MTYpKChsZTY0X3RvX2Nw
dSh4KSA+PiA0OCkgJiAweGZmZmYpKQotCi0jZGVmaW5lIElTX0VSUl9NUkVGKHgpCSgoKHgpICYg
MHgwMDAwODAwMDAwMDAwMDAwVUxMKSA/IHRydWUgOiBmYWxzZSkKLSNkZWZpbmUgRVJSX01SRUYo
eCkJKCh1NjQpKChzNjQpKHgpKSkKLSNkZWZpbmUgTVJFRl9FUlIoeCkJKChpbnQpKChzNjQpKHgp
KSkKLQotLyoKLSAqIFRoZSBtZnQgcmVjb3JkIGhlYWRlciBwcmVzZW50IGF0IHRoZSBiZWdpbm5p
bmcgb2YgZXZlcnkgcmVjb3JkIGluIHRoZSBtZnQuCi0gKiBUaGlzIGlzIGZvbGxvd2VkIGJ5IGEg
c2VxdWVuY2Ugb2YgdmFyaWFibGUgbGVuZ3RoIGF0dHJpYnV0ZSByZWNvcmRzIHdoaWNoCi0gKiBp
cyB0ZXJtaW5hdGVkIGJ5IGFuIGF0dHJpYnV0ZSBvZiB0eXBlIEFUX0VORCB3aGljaCBpcyBhIHRy
dW5jYXRlZCBhdHRyaWJ1dGUKLSAqIGluIHRoYXQgaXQgb25seSBjb25zaXN0cyBvZiB0aGUgYXR0
cmlidXRlIHR5cGUgY29kZSBBVF9FTkQgYW5kIG5vbmUgb2YgdGhlCi0gKiBvdGhlciBtZW1iZXJz
IG9mIHRoZSBhdHRyaWJ1dGUgc3RydWN0dXJlIGFyZSBwcmVzZW50LgotICovCi10eXBlZGVmIHN0
cnVjdCB7Ci0vKk9mcyovCi0vKiAgMAlOVEZTX1JFQ09SRDsgLS0gVW5mb2xkZWQgaGVyZSBhcyBn
Y2MgZG9lc24ndCBsaWtlIHVubmFtZWQgc3RydWN0cy4gKi8KLQlOVEZTX1JFQ09SRF9UWVBFIG1h
Z2ljOwkvKiBVc3VhbGx5IHRoZSBtYWdpYyBpcyAiRklMRSIuICovCi0JbGUxNiB1c2Ffb2ZzOwkJ
LyogU2VlIE5URlNfUkVDT1JEIGRlZmluaXRpb24gYWJvdmUuICovCi0JbGUxNiB1c2FfY291bnQ7
CQkvKiBTZWUgTlRGU19SRUNPUkQgZGVmaW5pdGlvbiBhYm92ZS4gKi8KLQotLyogIDgqLwlsZTY0
IGxzbjsJCS8qICRMb2dGaWxlIHNlcXVlbmNlIG51bWJlciBmb3IgdGhpcyByZWNvcmQuCi0JCQkJ
ICAgQ2hhbmdlZCBldmVyeSB0aW1lIHRoZSByZWNvcmQgaXMgbW9kaWZpZWQuICovCi0vKiAxNiov
CWxlMTYgc2VxdWVuY2VfbnVtYmVyOwkvKiBOdW1iZXIgb2YgdGltZXMgdGhpcyBtZnQgcmVjb3Jk
IGhhcyBiZWVuCi0JCQkJICAgcmV1c2VkLiAoU2VlIGRlc2NyaXB0aW9uIGZvciBNRlRfUkVGCi0J
CQkJICAgYWJvdmUuKSBOT1RFOiBUaGUgaW5jcmVtZW50IChza2lwcGluZyB6ZXJvKQotCQkJCSAg
IGlzIGRvbmUgd2hlbiB0aGUgZmlsZSBpcyBkZWxldGVkLiBOT1RFOiBJZgotCQkJCSAgIHRoaXMg
aXMgemVybyBpdCBpcyBsZWZ0IHplcm8uICovCi0vKiAxOCovCWxlMTYgbGlua19jb3VudDsJLyog
TnVtYmVyIG9mIGhhcmQgbGlua3MsIGkuZS4gdGhlIG51bWJlciBvZgotCQkJCSAgIGRpcmVjdG9y
eSBlbnRyaWVzIHJlZmVyZW5jaW5nIHRoaXMgcmVjb3JkLgotCQkJCSAgIE5PVEU6IE9ubHkgdXNl
ZCBpbiBtZnQgYmFzZSByZWNvcmRzLgotCQkJCSAgIE5PVEU6IFdoZW4gZGVsZXRpbmcgYSBkaXJl
Y3RvcnkgZW50cnkgd2UKLQkJCQkgICBjaGVjayB0aGUgbGlua19jb3VudCBhbmQgaWYgaXQgaXMg
MSB3ZQotCQkJCSAgIGRlbGV0ZSB0aGUgZmlsZS4gT3RoZXJ3aXNlIHdlIGRlbGV0ZSB0aGUKLQkJ
CQkgICBGSUxFX05BTUVfQVRUUiBiZWluZyByZWZlcmVuY2VkIGJ5IHRoZQotCQkJCSAgIGRpcmVj
dG9yeSBlbnRyeSBmcm9tIHRoZSBtZnQgcmVjb3JkIGFuZAotCQkJCSAgIGRlY3JlbWVudCB0aGUg
bGlua19jb3VudC4KLQkJCQkgICBGSVhNRTogQ2FyZWZ1bCB3aXRoIFdpbjMyICsgRE9TIG5hbWVz
ISAqLwotLyogMjAqLwlsZTE2IGF0dHJzX29mZnNldDsJLyogQnl0ZSBvZmZzZXQgdG8gdGhlIGZp
cnN0IGF0dHJpYnV0ZSBpbiB0aGlzCi0JCQkJICAgbWZ0IHJlY29yZCBmcm9tIHRoZSBzdGFydCBv
ZiB0aGUgbWZ0IHJlY29yZC4KLQkJCQkgICBOT1RFOiBNdXN0IGJlIGFsaWduZWQgdG8gOC1ieXRl
IGJvdW5kYXJ5LiAqLwotLyogMjIqLwlNRlRfUkVDT1JEX0ZMQUdTIGZsYWdzOwkvKiBCaXQgYXJy
YXkgb2YgTUZUX1JFQ09SRF9GTEFHUy4gV2hlbiBhIGZpbGUKLQkJCQkgICBpcyBkZWxldGVkLCB0
aGUgTUZUX1JFQ09SRF9JTl9VU0UgZmxhZyBpcwotCQkJCSAgIHNldCB0byB6ZXJvLiAqLwotLyog
MjQqLwlsZTMyIGJ5dGVzX2luX3VzZTsJLyogTnVtYmVyIG9mIGJ5dGVzIHVzZWQgaW4gdGhpcyBt
ZnQgcmVjb3JkLgotCQkJCSAgIE5PVEU6IE11c3QgYmUgYWxpZ25lZCB0byA4LWJ5dGUgYm91bmRh
cnkuICovCi0vKiAyOCovCWxlMzIgYnl0ZXNfYWxsb2NhdGVkOwkvKiBOdW1iZXIgb2YgYnl0ZXMg
YWxsb2NhdGVkIGZvciB0aGlzIG1mdAotCQkJCSAgIHJlY29yZC4gVGhpcyBzaG91bGQgYmUgZXF1
YWwgdG8gdGhlIG1mdAotCQkJCSAgIHJlY29yZCBzaXplLiAqLwotLyogMzIqLwlsZU1GVF9SRUYg
YmFzZV9tZnRfcmVjb3JkOy8qIFRoaXMgaXMgemVybyBmb3IgYmFzZSBtZnQgcmVjb3Jkcy4KLQkJ
CQkgICBXaGVuIGl0IGlzIG5vdCB6ZXJvIGl0IGlzIGEgbWZ0IHJlZmVyZW5jZQotCQkJCSAgIHBv
aW50aW5nIHRvIHRoZSBiYXNlIG1mdCByZWNvcmQgdG8gd2hpY2gKLQkJCQkgICB0aGlzIHJlY29y
ZCBiZWxvbmdzICh0aGlzIGlzIHRoZW4gdXNlZCB0bwotCQkJCSAgIGxvY2F0ZSB0aGUgYXR0cmli
dXRlIGxpc3QgYXR0cmlidXRlIHByZXNlbnQKLQkJCQkgICBpbiB0aGUgYmFzZSByZWNvcmQgd2hp
Y2ggZGVzY3JpYmVzIHRoaXMKLQkJCQkgICBleHRlbnNpb24gcmVjb3JkIGFuZCBoZW5jZSBtaWdo
dCBuZWVkCi0JCQkJICAgbW9kaWZpY2F0aW9uIHdoZW4gdGhlIGV4dGVuc2lvbiByZWNvcmQKLQkJ
CQkgICBpdHNlbGYgaXMgbW9kaWZpZWQsIGFsc28gbG9jYXRpbmcgdGhlCi0JCQkJICAgYXR0cmli
dXRlIGxpc3QgYWxzbyBtZWFucyBmaW5kaW5nIHRoZSBvdGhlcgotCQkJCSAgIHBvdGVudGlhbCBl
eHRlbnRzLCBiZWxvbmdpbmcgdG8gdGhlIG5vbi1iYXNlCi0JCQkJICAgbWZ0IHJlY29yZCkuICov
Ci0vKiA0MCovCWxlMTYgbmV4dF9hdHRyX2luc3RhbmNlOy8qIFRoZSBpbnN0YW5jZSBudW1iZXIg
dGhhdCB3aWxsIGJlIGFzc2lnbmVkIHRvCi0JCQkJICAgdGhlIG5leHQgYXR0cmlidXRlIGFkZGVk
IHRvIHRoaXMgbWZ0IHJlY29yZC4KLQkJCQkgICBOT1RFOiBJbmNyZW1lbnRlZCBlYWNoIHRpbWUg
YWZ0ZXIgaXQgaXMgdXNlZC4KLQkJCQkgICBOT1RFOiBFdmVyeSB0aW1lIHRoZSBtZnQgcmVjb3Jk
IGlzIHJldXNlZAotCQkJCSAgIHRoaXMgbnVtYmVyIGlzIHNldCB0byB6ZXJvLiAgTk9URTogVGhl
IGZpcnN0Ci0JCQkJICAgaW5zdGFuY2UgbnVtYmVyIGlzIGFsd2F5cyAwLiAqLwotLyogVGhlIGJl
bG93IGZpZWxkcyBhcmUgc3BlY2lmaWMgdG8gTlRGUyAzLjErIChXaW5kb3dzIFhQIGFuZCBhYm92
ZSk6ICovCi0vKiA0MiovIGxlMTYgcmVzZXJ2ZWQ7CQkvKiBSZXNlcnZlZC9hbGlnbm1lbnQuICov
Ci0vKiA0NCovIGxlMzIgbWZ0X3JlY29yZF9udW1iZXI7CS8qIE51bWJlciBvZiB0aGlzIG1mdCBy
ZWNvcmQuICovCi0vKiBzaXplb2YoKSA9IDQ4IGJ5dGVzICovCi0vKgotICogV2hlbiAocmUpdXNp
bmcgdGhlIG1mdCByZWNvcmQsIHdlIHBsYWNlIHRoZSB1cGRhdGUgc2VxdWVuY2UgYXJyYXkgYXQg
dGhpcwotICogb2Zmc2V0LCBpLmUuIGJlZm9yZSB3ZSBzdGFydCB3aXRoIHRoZSBhdHRyaWJ1dGVz
LiAgVGhpcyBhbHNvIG1ha2VzIHNlbnNlLAotICogb3RoZXJ3aXNlIHdlIGNvdWxkIHJ1biBpbnRv
IHByb2JsZW1zIHdpdGggdGhlIHVwZGF0ZSBzZXF1ZW5jZSBhcnJheQotICogY29udGFpbmluZyBp
biBpdHNlbGYgdGhlIGxhc3QgdHdvIGJ5dGVzIG9mIGEgc2VjdG9yIHdoaWNoIHdvdWxkIG1lYW4g
dGhhdAotICogbXVsdGkgc2VjdG9yIHRyYW5zZmVyIHByb3RlY3Rpb24gd291bGRuJ3Qgd29yay4g
IEFzIHlvdSBjYW4ndCBwcm90ZWN0IGRhdGEKLSAqIGJ5IG92ZXJ3cml0aW5nIGl0IHNpbmNlIHlv
dSB0aGVuIGNhbid0IGdldCBpdCBiYWNrLi4uCi0gKiBXaGVuIHJlYWRpbmcgd2Ugb2J2aW91c2x5
IHVzZSB0aGUgZGF0YSBmcm9tIHRoZSBudGZzIHJlY29yZCBoZWFkZXIuCi0gKi8KLX0gX19hdHRy
aWJ1dGVfXyAoKF9fcGFja2VkX18pKSBNRlRfUkVDT1JEOwotCi0vKiBUaGlzIGlzIHRoZSB2ZXJz
aW9uIHdpdGhvdXQgdGhlIE5URlMgMy4xKyBzcGVjaWZpYyBmaWVsZHMuICovCi10eXBlZGVmIHN0
cnVjdCB7Ci0vKk9mcyovCi0vKiAgMAlOVEZTX1JFQ09SRDsgLS0gVW5mb2xkZWQgaGVyZSBhcyBn
Y2MgZG9lc24ndCBsaWtlIHVubmFtZWQgc3RydWN0cy4gKi8KLQlOVEZTX1JFQ09SRF9UWVBFIG1h
Z2ljOwkvKiBVc3VhbGx5IHRoZSBtYWdpYyBpcyAiRklMRSIuICovCi0JbGUxNiB1c2Ffb2ZzOwkJ
LyogU2VlIE5URlNfUkVDT1JEIGRlZmluaXRpb24gYWJvdmUuICovCi0JbGUxNiB1c2FfY291bnQ7
CQkvKiBTZWUgTlRGU19SRUNPUkQgZGVmaW5pdGlvbiBhYm92ZS4gKi8KLQotLyogIDgqLwlsZTY0
IGxzbjsJCS8qICRMb2dGaWxlIHNlcXVlbmNlIG51bWJlciBmb3IgdGhpcyByZWNvcmQuCi0JCQkJ
ICAgQ2hhbmdlZCBldmVyeSB0aW1lIHRoZSByZWNvcmQgaXMgbW9kaWZpZWQuICovCi0vKiAxNiov
CWxlMTYgc2VxdWVuY2VfbnVtYmVyOwkvKiBOdW1iZXIgb2YgdGltZXMgdGhpcyBtZnQgcmVjb3Jk
IGhhcyBiZWVuCi0JCQkJICAgcmV1c2VkLiAoU2VlIGRlc2NyaXB0aW9uIGZvciBNRlRfUkVGCi0J
CQkJICAgYWJvdmUuKSBOT1RFOiBUaGUgaW5jcmVtZW50IChza2lwcGluZyB6ZXJvKQotCQkJCSAg
IGlzIGRvbmUgd2hlbiB0aGUgZmlsZSBpcyBkZWxldGVkLiBOT1RFOiBJZgotCQkJCSAgIHRoaXMg
aXMgemVybyBpdCBpcyBsZWZ0IHplcm8uICovCi0vKiAxOCovCWxlMTYgbGlua19jb3VudDsJLyog
TnVtYmVyIG9mIGhhcmQgbGlua3MsIGkuZS4gdGhlIG51bWJlciBvZgotCQkJCSAgIGRpcmVjdG9y
eSBlbnRyaWVzIHJlZmVyZW5jaW5nIHRoaXMgcmVjb3JkLgotCQkJCSAgIE5PVEU6IE9ubHkgdXNl
ZCBpbiBtZnQgYmFzZSByZWNvcmRzLgotCQkJCSAgIE5PVEU6IFdoZW4gZGVsZXRpbmcgYSBkaXJl
Y3RvcnkgZW50cnkgd2UKLQkJCQkgICBjaGVjayB0aGUgbGlua19jb3VudCBhbmQgaWYgaXQgaXMg
MSB3ZQotCQkJCSAgIGRlbGV0ZSB0aGUgZmlsZS4gT3RoZXJ3aXNlIHdlIGRlbGV0ZSB0aGUKLQkJ
CQkgICBGSUxFX05BTUVfQVRUUiBiZWluZyByZWZlcmVuY2VkIGJ5IHRoZQotCQkJCSAgIGRpcmVj
dG9yeSBlbnRyeSBmcm9tIHRoZSBtZnQgcmVjb3JkIGFuZAotCQkJCSAgIGRlY3JlbWVudCB0aGUg
bGlua19jb3VudC4KLQkJCQkgICBGSVhNRTogQ2FyZWZ1bCB3aXRoIFdpbjMyICsgRE9TIG5hbWVz
ISAqLwotLyogMjAqLwlsZTE2IGF0dHJzX29mZnNldDsJLyogQnl0ZSBvZmZzZXQgdG8gdGhlIGZp
cnN0IGF0dHJpYnV0ZSBpbiB0aGlzCi0JCQkJICAgbWZ0IHJlY29yZCBmcm9tIHRoZSBzdGFydCBv
ZiB0aGUgbWZ0IHJlY29yZC4KLQkJCQkgICBOT1RFOiBNdXN0IGJlIGFsaWduZWQgdG8gOC1ieXRl
IGJvdW5kYXJ5LiAqLwotLyogMjIqLwlNRlRfUkVDT1JEX0ZMQUdTIGZsYWdzOwkvKiBCaXQgYXJy
YXkgb2YgTUZUX1JFQ09SRF9GTEFHUy4gV2hlbiBhIGZpbGUKLQkJCQkgICBpcyBkZWxldGVkLCB0
aGUgTUZUX1JFQ09SRF9JTl9VU0UgZmxhZyBpcwotCQkJCSAgIHNldCB0byB6ZXJvLiAqLwotLyog
MjQqLwlsZTMyIGJ5dGVzX2luX3VzZTsJLyogTnVtYmVyIG9mIGJ5dGVzIHVzZWQgaW4gdGhpcyBt
ZnQgcmVjb3JkLgotCQkJCSAgIE5PVEU6IE11c3QgYmUgYWxpZ25lZCB0byA4LWJ5dGUgYm91bmRh
cnkuICovCi0vKiAyOCovCWxlMzIgYnl0ZXNfYWxsb2NhdGVkOwkvKiBOdW1iZXIgb2YgYnl0ZXMg
YWxsb2NhdGVkIGZvciB0aGlzIG1mdAotCQkJCSAgIHJlY29yZC4gVGhpcyBzaG91bGQgYmUgZXF1
YWwgdG8gdGhlIG1mdAotCQkJCSAgIHJlY29yZCBzaXplLiAqLwotLyogMzIqLwlsZU1GVF9SRUYg
YmFzZV9tZnRfcmVjb3JkOy8qIFRoaXMgaXMgemVybyBmb3IgYmFzZSBtZnQgcmVjb3Jkcy4KLQkJ
CQkgICBXaGVuIGl0IGlzIG5vdCB6ZXJvIGl0IGlzIGEgbWZ0IHJlZmVyZW5jZQotCQkJCSAgIHBv
aW50aW5nIHRvIHRoZSBiYXNlIG1mdCByZWNvcmQgdG8gd2hpY2gKLQkJCQkgICB0aGlzIHJlY29y
ZCBiZWxvbmdzICh0aGlzIGlzIHRoZW4gdXNlZCB0bwotCQkJCSAgIGxvY2F0ZSB0aGUgYXR0cmli
dXRlIGxpc3QgYXR0cmlidXRlIHByZXNlbnQKLQkJCQkgICBpbiB0aGUgYmFzZSByZWNvcmQgd2hp
Y2ggZGVzY3JpYmVzIHRoaXMKLQkJCQkgICBleHRlbnNpb24gcmVjb3JkIGFuZCBoZW5jZSBtaWdo
dCBuZWVkCi0JCQkJICAgbW9kaWZpY2F0aW9uIHdoZW4gdGhlIGV4dGVuc2lvbiByZWNvcmQKLQkJ
CQkgICBpdHNlbGYgaXMgbW9kaWZpZWQsIGFsc28gbG9jYXRpbmcgdGhlCi0JCQkJICAgYXR0cmli
dXRlIGxpc3QgYWxzbyBtZWFucyBmaW5kaW5nIHRoZSBvdGhlcgotCQkJCSAgIHBvdGVudGlhbCBl
eHRlbnRzLCBiZWxvbmdpbmcgdG8gdGhlIG5vbi1iYXNlCi0JCQkJICAgbWZ0IHJlY29yZCkuICov
Ci0vKiA0MCovCWxlMTYgbmV4dF9hdHRyX2luc3RhbmNlOy8qIFRoZSBpbnN0YW5jZSBudW1iZXIg
dGhhdCB3aWxsIGJlIGFzc2lnbmVkIHRvCi0JCQkJICAgdGhlIG5leHQgYXR0cmlidXRlIGFkZGVk
IHRvIHRoaXMgbWZ0IHJlY29yZC4KLQkJCQkgICBOT1RFOiBJbmNyZW1lbnRlZCBlYWNoIHRpbWUg
YWZ0ZXIgaXQgaXMgdXNlZC4KLQkJCQkgICBOT1RFOiBFdmVyeSB0aW1lIHRoZSBtZnQgcmVjb3Jk
IGlzIHJldXNlZAotCQkJCSAgIHRoaXMgbnVtYmVyIGlzIHNldCB0byB6ZXJvLiAgTk9URTogVGhl
IGZpcnN0Ci0JCQkJICAgaW5zdGFuY2UgbnVtYmVyIGlzIGFsd2F5cyAwLiAqLwotLyogc2l6ZW9m
KCkgPSA0MiBieXRlcyAqLwotLyoKLSAqIFdoZW4gKHJlKXVzaW5nIHRoZSBtZnQgcmVjb3JkLCB3
ZSBwbGFjZSB0aGUgdXBkYXRlIHNlcXVlbmNlIGFycmF5IGF0IHRoaXMKLSAqIG9mZnNldCwgaS5l
LiBiZWZvcmUgd2Ugc3RhcnQgd2l0aCB0aGUgYXR0cmlidXRlcy4gIFRoaXMgYWxzbyBtYWtlcyBz
ZW5zZSwKLSAqIG90aGVyd2lzZSB3ZSBjb3VsZCBydW4gaW50byBwcm9ibGVtcyB3aXRoIHRoZSB1
cGRhdGUgc2VxdWVuY2UgYXJyYXkKLSAqIGNvbnRhaW5pbmcgaW4gaXRzZWxmIHRoZSBsYXN0IHR3
byBieXRlcyBvZiBhIHNlY3RvciB3aGljaCB3b3VsZCBtZWFuIHRoYXQKLSAqIG11bHRpIHNlY3Rv
ciB0cmFuc2ZlciBwcm90ZWN0aW9uIHdvdWxkbid0IHdvcmsuICBBcyB5b3UgY2FuJ3QgcHJvdGVj
dCBkYXRhCi0gKiBieSBvdmVyd3JpdGluZyBpdCBzaW5jZSB5b3UgdGhlbiBjYW4ndCBnZXQgaXQg
YmFjay4uLgotICogV2hlbiByZWFkaW5nIHdlIG9idmlvdXNseSB1c2UgdGhlIGRhdGEgZnJvbSB0
aGUgbnRmcyByZWNvcmQgaGVhZGVyLgotICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9f
KSkgTUZUX1JFQ09SRF9PTEQ7Ci0KLS8qCi0gKiBTeXN0ZW0gZGVmaW5lZCBhdHRyaWJ1dGVzICgz
Mi1iaXQpLiAgRWFjaCBhdHRyaWJ1dGUgdHlwZSBoYXMgYSBjb3JyZXNwb25kaW5nCi0gKiBhdHRy
aWJ1dGUgbmFtZSAoVW5pY29kZSBzdHJpbmcgb2YgbWF4aW11bSA2NCBjaGFyYWN0ZXIgbGVuZ3Ro
KSBhcyBkZXNjcmliZWQKLSAqIGJ5IHRoZSBhdHRyaWJ1dGUgZGVmaW5pdGlvbnMgcHJlc2VudCBp
biB0aGUgZGF0YSBhdHRyaWJ1dGUgb2YgdGhlICRBdHRyRGVmCi0gKiBzeXN0ZW0gZmlsZS4gIE9u
IE5URlMgMy4wIHZvbHVtZXMgdGhlIG5hbWVzIGFyZSBqdXN0IGFzIHRoZSB0eXBlcyBhcmUgbmFt
ZWQKLSAqIGluIHRoZSBiZWxvdyBkZWZpbmVzIGV4Y2hhbmdpbmcgQVRfIGZvciB0aGUgZG9sbGFy
IHNpZ24gKCQpLiAgSWYgdGhhdCBpcyBub3QKLSAqIGEgcmV2ZWFsaW5nIGNob2ljZSBvZiBzeW1i
b2wgSSBkbyBub3Qga25vdyB3aGF0IGlzLi4uICgtOwotICovCi1lbnVtIHsKLQlBVF9VTlVTRUQJ
CQk9IGNwdV90b19sZTMyKCAgICAgICAgIDApLAotCUFUX1NUQU5EQVJEX0lORk9STUFUSU9OCQk9
IGNwdV90b19sZTMyKCAgICAgIDB4MTApLAotCUFUX0FUVFJJQlVURV9MSVNUCQk9IGNwdV90b19s
ZTMyKCAgICAgIDB4MjApLAotCUFUX0ZJTEVfTkFNRQkJCT0gY3B1X3RvX2xlMzIoICAgICAgMHgz
MCksCi0JQVRfT0JKRUNUX0lECQkJPSBjcHVfdG9fbGUzMiggICAgICAweDQwKSwKLQlBVF9TRUNV
UklUWV9ERVNDUklQVE9SCQk9IGNwdV90b19sZTMyKCAgICAgIDB4NTApLAotCUFUX1ZPTFVNRV9O
QU1FCQkJPSBjcHVfdG9fbGUzMiggICAgICAweDYwKSwKLQlBVF9WT0xVTUVfSU5GT1JNQVRJT04J
CT0gY3B1X3RvX2xlMzIoICAgICAgMHg3MCksCi0JQVRfREFUQQkJCQk9IGNwdV90b19sZTMyKCAg
ICAgIDB4ODApLAotCUFUX0lOREVYX1JPT1QJCQk9IGNwdV90b19sZTMyKCAgICAgIDB4OTApLAot
CUFUX0lOREVYX0FMTE9DQVRJT04JCT0gY3B1X3RvX2xlMzIoICAgICAgMHhhMCksCi0JQVRfQklU
TUFQCQkJPSBjcHVfdG9fbGUzMiggICAgICAweGIwKSwKLQlBVF9SRVBBUlNFX1BPSU5UCQk9IGNw
dV90b19sZTMyKCAgICAgIDB4YzApLAotCUFUX0VBX0lORk9STUFUSU9OCQk9IGNwdV90b19sZTMy
KCAgICAgIDB4ZDApLAotCUFUX0VBCQkJCT0gY3B1X3RvX2xlMzIoICAgICAgMHhlMCksCi0JQVRf
UFJPUEVSVFlfU0VUCQkJPSBjcHVfdG9fbGUzMiggICAgICAweGYwKSwKLQlBVF9MT0dHRURfVVRJ
TElUWV9TVFJFQU0JPSBjcHVfdG9fbGUzMiggICAgIDB4MTAwKSwKLQlBVF9GSVJTVF9VU0VSX0RF
RklORURfQVRUUklCVVRFCT0gY3B1X3RvX2xlMzIoICAgIDB4MTAwMCksCi0JQVRfRU5ECQkJCT0g
Y3B1X3RvX2xlMzIoMHhmZmZmZmZmZikKLX07Ci0KLXR5cGVkZWYgbGUzMiBBVFRSX1RZUEU7Ci0K
LS8qCi0gKiBUaGUgY29sbGF0aW9uIHJ1bGVzIGZvciBzb3J0aW5nIHZpZXdzL2luZGV4ZXMvZXRj
ICgzMi1iaXQpLgotICoKLSAqIENPTExBVElPTl9CSU5BUlkgLSBDb2xsYXRlIGJ5IGJpbmFyeSBj
b21wYXJlIHdoZXJlIHRoZSBmaXJzdCBieXRlIGlzIG1vc3QKLSAqCXNpZ25pZmljYW50LgotICog
Q09MTEFUSU9OX1VOSUNPREVfU1RSSU5HIC0gQ29sbGF0ZSBVbmljb2RlIHN0cmluZ3MgYnkgY29t
cGFyaW5nIHRoZWlyIGJpbmFyeQotICoJVW5pY29kZSB2YWx1ZXMsIGV4Y2VwdCB0aGF0IHdoZW4g
YSBjaGFyYWN0ZXIgY2FuIGJlIHVwcGVyY2FzZWQsIHRoZQotICoJdXBwZXIgY2FzZSB2YWx1ZSBj
b2xsYXRlcyBiZWZvcmUgdGhlIGxvd2VyIGNhc2Ugb25lLgotICogQ09MTEFUSU9OX0ZJTEVfTkFN
RSAtIENvbGxhdGUgZmlsZSBuYW1lcyBhcyBVbmljb2RlIHN0cmluZ3MuIFRoZSBjb2xsYXRpb24K
LSAqCWlzIGRvbmUgdmVyeSBtdWNoIGxpa2UgQ09MTEFUSU9OX1VOSUNPREVfU1RSSU5HLiBJbiBm
YWN0IEkgaGF2ZSBubyBpZGVhCi0gKgl3aGF0IHRoZSBkaWZmZXJlbmNlIGlzLiBQZXJoYXBzIHRo
ZSBkaWZmZXJlbmNlIGlzIHRoYXQgZmlsZSBuYW1lcwotICoJd291bGQgdHJlYXQgc29tZSBzcGVj
aWFsIGNoYXJhY3RlcnMgaW4gYW4gb2RkIHdheSAoc2VlCi0gKgl1bmlzdHIuYzo6bnRmc19jb2xs
YXRlX25hbWVzKCkgYW5kIHVuaXN0ci5jOjpsZWdhbF9hbnNpX2NoYXJfYXJyYXlbXQotICoJZm9y
IHdoYXQgSSBtZWFuIGJ1dCBDT0xMQVRJT05fVU5JQ09ERV9TVFJJTkcgd291bGQgbm90IGdpdmUg
YW55IHNwZWNpYWwKLSAqCXRyZWF0bWVudCB0byBhbnkgY2hhcmFjdGVycyBhdCBhbGwsIGJ1dCB0
aGlzIGlzIHNwZWN1bGF0aW9uLgotICogQ09MTEFUSU9OX05UT0ZTX1VMT05HIC0gU29ydGluZyBp
cyBkb25lIGFjY29yZGluZyB0byBhc2NlbmRpbmcgbGUzMiBrZXkKLSAqCXZhbHVlcy4gRS5nLiB1
c2VkIGZvciAkU0lJIGluZGV4IGluIEZJTEVfU2VjdXJlLCB3aGljaCBzb3J0cyBieQotICoJc2Vj
dXJpdHlfaWQgKGxlMzIpLgotICogQ09MTEFUSU9OX05UT0ZTX1NJRCAtIFNvcnRpbmcgaXMgZG9u
ZSBhY2NvcmRpbmcgdG8gYXNjZW5kaW5nIFNJRCB2YWx1ZXMuCi0gKglFLmcuIHVzZWQgZm9yICRP
IGluZGV4IGluIEZJTEVfRXh0ZW5kLyRRdW90YS4KLSAqIENPTExBVElPTl9OVE9GU19TRUNVUklU
WV9IQVNIIC0gU29ydGluZyBpcyBkb25lIGZpcnN0IGJ5IGFzY2VuZGluZyBoYXNoCi0gKgl2YWx1
ZXMgYW5kIHNlY29uZCBieSBhc2NlbmRpbmcgc2VjdXJpdHlfaWQgdmFsdWVzLiBFLmcuIHVzZWQg
Zm9yICRTREgKLSAqCWluZGV4IGluIEZJTEVfU2VjdXJlLgotICogQ09MTEFUSU9OX05UT0ZTX1VM
T05HUyAtIFNvcnRpbmcgaXMgZG9uZSBhY2NvcmRpbmcgdG8gYSBzZXF1ZW5jZSBvZiBhc2NlbmRp
bmcKLSAqCWxlMzIga2V5IHZhbHVlcy4gRS5nLiB1c2VkIGZvciAkTyBpbmRleCBpbiBGSUxFX0V4
dGVuZC8kT2JqSWQsIHdoaWNoCi0gKglzb3J0cyBieSBvYmplY3RfaWQgKDE2LWJ5dGUpLCBieSBz
cGxpdHRpbmcgdXAgdGhlIG9iamVjdF9pZCBpbiBmb3VyCi0gKglsZTMyIHZhbHVlcyBhbmQgdXNp
bmcgdGhlbSBhcyBpbmRpdmlkdWFsIGtleXMuIEUuZy4gdGFrZSB0aGUgZm9sbG93aW5nCi0gKgl0
d28gc2VjdXJpdHlfaWRzLCBzdG9yZWQgYXMgZm9sbG93cyBvbiBkaXNrOgotICoJCTFzdDogYTEg
NjEgNjUgYjcgNjUgN2IgZDQgMTEgOWUgM2QgMDAgZTAgODEgMTAgNDIgNTkKLSAqCQkybmQ6IDM4
IDE0IDM3IGQyIGQyIGYzIGQ0IDExIGE1IDIxIGM4IDZiIDc5IGIxIDk3IDQ1Ci0gKglUbyBjb21w
YXJlIHRoZW0sIHRoZXkgYXJlIHNwbGl0IGludG8gZm91ciBsZTMyIHZhbHVlcyBlYWNoLCBsaWtl
IHNvOgotICoJCTFzdDogMHhiNzY1NjFhMSAweDExZDQ3YjY1IDB4ZTAwMDNkOWUgMHg1OTQyMTA4
MQotICoJCTJuZDogMHhkMjM3MTQzOCAweDExZDRmM2QyIDB4NmJjODIxYTUgMHg0NTk3YjE3OQot
ICoJTm93LCBpdCBpcyBhcHBhcmVudCB3aHkgdGhlIDJuZCBvYmplY3RfaWQgY29sbGF0ZXMgYWZ0
ZXIgdGhlIDFzdDogdGhlCi0gKglmaXJzdCBsZTMyIHZhbHVlIG9mIHRoZSAxc3Qgb2JqZWN0X2lk
IGlzIGxlc3MgdGhhbiB0aGUgZmlyc3QgbGUzMiBvZgotICoJdGhlIDJuZCBvYmplY3RfaWQuIElm
IHRoZSBmaXJzdCBsZTMyIHZhbHVlcyBvZiBib3RoIG9iamVjdF9pZHMgd2VyZQotICoJZXF1YWwg
dGhlbiB0aGUgc2Vjb25kIGxlMzIgdmFsdWVzIHdvdWxkIGJlIGNvbXBhcmVkLCBldGMuCi0gKi8K
LWVudW0gewotCUNPTExBVElPTl9CSU5BUlkJCT0gY3B1X3RvX2xlMzIoMHgwMCksCi0JQ09MTEFU
SU9OX0ZJTEVfTkFNRQkJPSBjcHVfdG9fbGUzMigweDAxKSwKLQlDT0xMQVRJT05fVU5JQ09ERV9T
VFJJTkcJPSBjcHVfdG9fbGUzMigweDAyKSwKLQlDT0xMQVRJT05fTlRPRlNfVUxPTkcJCT0gY3B1
X3RvX2xlMzIoMHgxMCksCi0JQ09MTEFUSU9OX05UT0ZTX1NJRAkJPSBjcHVfdG9fbGUzMigweDEx
KSwKLQlDT0xMQVRJT05fTlRPRlNfU0VDVVJJVFlfSEFTSAk9IGNwdV90b19sZTMyKDB4MTIpLAot
CUNPTExBVElPTl9OVE9GU19VTE9OR1MJCT0gY3B1X3RvX2xlMzIoMHgxMyksCi19OwotCi10eXBl
ZGVmIGxlMzIgQ09MTEFUSU9OX1JVTEU7Ci0KLS8qCi0gKiBUaGUgZmxhZ3MgKDMyLWJpdCkgZGVz
Y3JpYmluZyBhdHRyaWJ1dGUgcHJvcGVydGllcyBpbiB0aGUgYXR0cmlidXRlCi0gKiBkZWZpbml0
aW9uIHN0cnVjdHVyZS4gIEZJWE1FOiBUaGlzIGluZm9ybWF0aW9uIGlzIGJhc2VkIG9uIFJlZ2lz
J3MKLSAqIGluZm9ybWF0aW9uIGFuZCwgYWNjb3JkaW5nIHRvIGhpbSwgaXQgaXMgbm90IGNlcnRh
aW4gYW5kIHByb2JhYmx5Ci0gKiBpbmNvbXBsZXRlLiAgVGhlIElOREVYQUJMRSBmbGFnIGlzIGZh
aXJseSBjZXJ0YWlubHkgY29ycmVjdCBhcyBvbmx5IHRoZSBmaWxlCi0gKiBuYW1lIGF0dHJpYnV0
ZSBoYXMgdGhpcyBmbGFnIHNldCBhbmQgdGhpcyBpcyB0aGUgb25seSBhdHRyaWJ1dGUgaW5kZXhl
ZCBpbgotICogTlQ0LgotICovCi1lbnVtIHsKLQlBVFRSX0RFRl9JTkRFWEFCTEUJPSBjcHVfdG9f
bGUzMigweDAyKSwgLyogQXR0cmlidXRlIGNhbiBiZQotCQkJCQlpbmRleGVkLiAqLwotCUFUVFJf
REVGX01VTFRJUExFCT0gY3B1X3RvX2xlMzIoMHgwNCksIC8qIEF0dHJpYnV0ZSB0eXBlCi0JCQkJ
CWNhbiBiZSBwcmVzZW50IG11bHRpcGxlIHRpbWVzIGluIHRoZQotCQkJCQltZnQgcmVjb3JkcyBv
ZiBhbiBpbm9kZS4gKi8KLQlBVFRSX0RFRl9OT1RfWkVSTwk9IGNwdV90b19sZTMyKDB4MDgpLCAv
KiBBdHRyaWJ1dGUgdmFsdWUKLQkJCQkJbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBub24temVy
bwotCQkJCQlieXRlLiAqLwotCUFUVFJfREVGX0lOREVYRURfVU5JUVVFCT0gY3B1X3RvX2xlMzIo
MHgxMCksIC8qIEF0dHJpYnV0ZSBtdXN0IGJlCi0JCQkJCWluZGV4ZWQgYW5kIHRoZSBhdHRyaWJ1
dGUgdmFsdWUgbXVzdCBiZQotCQkJCQl1bmlxdWUgZm9yIHRoZSBhdHRyaWJ1dGUgdHlwZSBpbiBh
bGwgb2YKLQkJCQkJdGhlIG1mdCByZWNvcmRzIG9mIGFuIGlub2RlLiAqLwotCUFUVFJfREVGX05B
TUVEX1VOSVFVRQk9IGNwdV90b19sZTMyKDB4MjApLCAvKiBBdHRyaWJ1dGUgbXVzdCBiZQotCQkJ
CQluYW1lZCBhbmQgdGhlIG5hbWUgbXVzdCBiZSB1bmlxdWUgZm9yCi0JCQkJCXRoZSBhdHRyaWJ1
dGUgdHlwZSBpbiBhbGwgb2YgdGhlIG1mdAotCQkJCQlyZWNvcmRzIG9mIGFuIGlub2RlLiAqLwot
CUFUVFJfREVGX1JFU0lERU5UCT0gY3B1X3RvX2xlMzIoMHg0MCksIC8qIEF0dHJpYnV0ZSBtdXN0
IGJlCi0JCQkJCXJlc2lkZW50LiAqLwotCUFUVFJfREVGX0FMV0FZU19MT0cJPSBjcHVfdG9fbGUz
MigweDgwKSwgLyogQWx3YXlzIGxvZwotCQkJCQltb2RpZmljYXRpb25zIHRvIHRoaXMgYXR0cmli
dXRlLAotCQkJCQlyZWdhcmRsZXNzIG9mIHdoZXRoZXIgaXQgaXMgcmVzaWRlbnQgb3IKLQkJCQkJ
bm9uLXJlc2lkZW50LiAgV2l0aG91dCB0aGlzLCBvbmx5IGxvZwotCQkJCQltb2RpZmljYXRpb25z
IGlmIHRoZSBhdHRyaWJ1dGUgaXMKLQkJCQkJcmVzaWRlbnQuICovCi19OwotCi10eXBlZGVmIGxl
MzIgQVRUUl9ERUZfRkxBR1M7Ci0KLS8qCi0gKiBUaGUgZGF0YSBhdHRyaWJ1dGUgb2YgRklMRV9B
dHRyRGVmIGNvbnRhaW5zIGEgc2VxdWVuY2Ugb2YgYXR0cmlidXRlCi0gKiBkZWZpbml0aW9ucyBm
b3IgdGhlIE5URlMgdm9sdW1lLiBXaXRoIHRoaXMsIGl0IGlzIHN1cHBvc2VkIHRvIGJlIHNhZmUg
Zm9yIGFuCi0gKiBvbGRlciBOVEZTIGRyaXZlciB0byBtb3VudCBhIHZvbHVtZSBjb250YWluaW5n
IGEgbmV3ZXIgTlRGUyB2ZXJzaW9uIHdpdGhvdXQKLSAqIGRhbWFnaW5nIGl0ICh0aGF0J3MgdGhl
IHRoZW9yeS4gSW4gcHJhY3RpY2UgaXQnczogbm90IGRhbWFnaW5nIGl0IHRvbyBtdWNoKS4KLSAq
IEVudHJpZXMgYXJlIHNvcnRlZCBieSBhdHRyaWJ1dGUgdHlwZS4gVGhlIGZsYWdzIGRlc2NyaWJl
IHdoZXRoZXIgdGhlCi0gKiBhdHRyaWJ1dGUgY2FuIGJlIHJlc2lkZW50L25vbi1yZXNpZGVudCBh
bmQgcG9zc2libHkgb3RoZXIgdGhpbmdzLCBidXQgdGhlCi0gKiBhY3R1YWwgYml0cyBhcmUgdW5r
bm93bi4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotLypoZXggb2ZzKi8KLS8qICAwKi8JbnRmc2No
YXIgbmFtZVsweDQwXTsJCS8qIFVuaWNvZGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlLiBaZXJvCi0J
CQkJCSAgIHRlcm1pbmF0ZWQuICovCi0vKiA4MCovCUFUVFJfVFlQRSB0eXBlOwkJCS8qIFR5cGUg
b2YgdGhlIGF0dHJpYnV0ZS4gKi8KLS8qIDg0Ki8JbGUzMiBkaXNwbGF5X3J1bGU7CQkvKiBEZWZh
dWx0IGRpc3BsYXkgcnVsZS4KLQkJCQkJICAgRklYTUU6IFdoYXQgZG9lcyBpdCBtZWFuPyAoQUlB
KSAqLwotLyogODgqLyBDT0xMQVRJT05fUlVMRSBjb2xsYXRpb25fcnVsZTsJLyogRGVmYXVsdCBj
b2xsYXRpb24gcnVsZS4gKi8KLS8qIDhjKi8JQVRUUl9ERUZfRkxBR1MgZmxhZ3M7CQkvKiBGbGFn
cyBkZXNjcmliaW5nIHRoZSBhdHRyaWJ1dGUuICovCi0vKiA5MCovCXNsZTY0IG1pbl9zaXplOwkJ
CS8qIE9wdGlvbmFsIG1pbmltdW0gYXR0cmlidXRlIHNpemUuICovCi0vKiA5OCovCXNsZTY0IG1h
eF9zaXplOwkJCS8qIE1heGltdW0gc2l6ZSBvZiBhdHRyaWJ1dGUuICovCi0vKiBzaXplb2YoKSA9
IDB4YTAgb3IgMTYwIGJ5dGVzICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgQVRU
Ul9ERUY7Ci0KLS8qCi0gKiBBdHRyaWJ1dGUgZmxhZ3MgKDE2LWJpdCkuCi0gKi8KLWVudW0gewot
CUFUVFJfSVNfQ09NUFJFU1NFRCAgICA9IGNwdV90b19sZTE2KDB4MDAwMSksCi0JQVRUUl9DT01Q
UkVTU0lPTl9NQVNLID0gY3B1X3RvX2xlMTYoMHgwMGZmKSwgLyogQ29tcHJlc3Npb24gbWV0aG9k
Ci0JCQkJCQkJICAgICAgbWFzay4gIEFsc28sIGZpcnN0Ci0JCQkJCQkJICAgICAgaWxsZWdhbCB2
YWx1ZS4gKi8KLQlBVFRSX0lTX0VOQ1JZUFRFRCAgICAgPSBjcHVfdG9fbGUxNigweDQwMDApLAot
CUFUVFJfSVNfU1BBUlNFCSAgICAgID0gY3B1X3RvX2xlMTYoMHg4MDAwKSwKLX0gX19hdHRyaWJ1
dGVfXyAoKF9fcGFja2VkX18pKTsKLQotdHlwZWRlZiBsZTE2IEFUVFJfRkxBR1M7Ci0KLS8qCi0g
KiBBdHRyaWJ1dGUgY29tcHJlc3Npb24uCi0gKgotICogT25seSB0aGUgZGF0YSBhdHRyaWJ1dGUg
aXMgZXZlciBjb21wcmVzc2VkIGluIHRoZSBjdXJyZW50IG50ZnMgZHJpdmVyIGluCi0gKiBXaW5k
b3dzLiBGdXJ0aGVyLCBjb21wcmVzc2lvbiBpcyBvbmx5IGFwcGxpZWQgd2hlbiB0aGUgZGF0YSBh
dHRyaWJ1dGUgaXMKLSAqIG5vbi1yZXNpZGVudC4gRmluYWxseSwgdG8gdXNlIGNvbXByZXNzaW9u
LCB0aGUgbWF4aW11bSBhbGxvd2VkIGNsdXN0ZXIgc2l6ZQotICogb24gYSB2b2x1bWUgaXMgNGtp
Yi4KLSAqCi0gKiBUaGUgY29tcHJlc3Npb24gbWV0aG9kIGlzIGJhc2VkIG9uIGluZGVwZW5kZW50
bHkgY29tcHJlc3NpbmcgYmxvY2tzIG9mIFgKLSAqIGNsdXN0ZXJzLCB3aGVyZSBYIGlzIGRldGVy
bWluZWQgZnJvbSB0aGUgY29tcHJlc3Npb25fdW5pdCB2YWx1ZSBmb3VuZCBpbiB0aGUKLSAqIG5v
bi1yZXNpZGVudCBhdHRyaWJ1dGUgcmVjb3JkIGhlYWRlciAobW9yZSBwcmVjaXNlbHk6IFggPSAy
XmNvbXByZXNzaW9uX3VuaXQKLSAqIGNsdXN0ZXJzKS4gT24gV2luZG93cyBOVC8yaywgWCBhbHdh
eXMgaXMgMTYgY2x1c3RlcnMgKGNvbXByZXNzaW9uX3VuaXQgPSA0KS4KLSAqCi0gKiBUaGVyZSBh
cmUgdGhyZWUgZGlmZmVyZW50IGNhc2VzIG9mIGhvdyBhIGNvbXByZXNzaW9uIGJsb2NrIG9mIFgg
Y2x1c3RlcnMKLSAqIGNhbiBiZSBzdG9yZWQ6Ci0gKgotICogICAxKSBUaGUgZGF0YSBpbiB0aGUg
YmxvY2sgaXMgYWxsIHplcm8gKGEgc3BhcnNlIGJsb2NrKToKLSAqCSAgVGhpcyBpcyBzdG9yZWQg
YXMgYSBzcGFyc2UgYmxvY2sgaW4gdGhlIHJ1bmxpc3QsIGkuZS4gdGhlIHJ1bmxpc3QKLSAqCSAg
ZW50cnkgaGFzIGxlbmd0aCA9IFggYW5kIGxjbiA9IC0xLiBUaGUgbWFwcGluZyBwYWlycyBhcnJh
eSBhY3R1YWxseQotICoJICB1c2VzIGEgZGVsdGFfbGNuIHZhbHVlIGxlbmd0aCBvZiAwLCBpLmUu
IGRlbHRhX2xjbiBpcyBub3QgcHJlc2VudCBhdAotICoJICBhbGwsIHdoaWNoIGlzIHRoZW4gaW50
ZXJwcmV0ZWQgYnkgdGhlIGRyaXZlciBhcyBsY24gPSAtMS4KLSAqCSAgTk9URTogRXZlbiB1bmNv
bXByZXNzZWQgZmlsZXMgY2FuIGJlIHNwYXJzZSBvbiBOVEZTIDMuMCB2b2x1bWVzLCB0aGVuCi0g
KgkgIHRoZSBzYW1lIHByaW5jaXBsZXMgYXBwbHkgYXMgYWJvdmUsIGV4Y2VwdCB0aGF0IHRoZSBs
ZW5ndGggaXMgbm90Ci0gKgkgIHJlc3RyaWN0ZWQgdG8gYmVpbmcgYW55IHBhcnRpY3VsYXIgdmFs
dWUuCi0gKgotICogICAyKSBUaGUgZGF0YSBpbiB0aGUgYmxvY2sgaXMgbm90IGNvbXByZXNzZWQ6
Ci0gKgkgIFRoaXMgaGFwcGVucyB3aGVuIGNvbXByZXNzaW9uIGRvZXNuJ3QgcmVkdWNlIHRoZSBz
aXplIG9mIHRoZSBibG9jawotICoJICBpbiBjbHVzdGVycy4gSS5lLiBpZiBjb21wcmVzc2lvbiBo
YXMgYSBzbWFsbCBlZmZlY3Qgc28gdGhhdCB0aGUKLSAqCSAgY29tcHJlc3NlZCBkYXRhIHN0aWxs
IG9jY3VwaWVzIFggY2x1c3RlcnMsIHRoZW4gdGhlIHVuY29tcHJlc3NlZCBkYXRhCi0gKgkgIGlz
IHN0b3JlZCBpbiB0aGUgYmxvY2suCi0gKgkgIFRoaXMgY2FzZSBpcyByZWNvZ25pc2VkIGJ5IHRo
ZSBmYWN0IHRoYXQgdGhlIHJ1bmxpc3QgZW50cnkgaGFzCi0gKgkgIGxlbmd0aCA9IFggYW5kIGxj
biA+PSAwLiBUaGUgbWFwcGluZyBwYWlycyBhcnJheSBzdG9yZXMgdGhpcyBhcwotICoJICBub3Jt
YWwgd2l0aCBhIHJ1biBsZW5ndGggb2YgWCBhbmQgc29tZSBzcGVjaWZpYyBkZWx0YV9sY24sIGku
ZS4KLSAqCSAgZGVsdGFfbGNuIGhhcyB0byBiZSBwcmVzZW50LgotICoKLSAqICAgMykgVGhlIGRh
dGEgaW4gdGhlIGJsb2NrIGlzIGNvbXByZXNzZWQ6Ci0gKgkgIFRoZSBjb21tb24gY2FzZS4gVGhp
cyBjYXNlIGlzIHJlY29nbmlzZWQgYnkgdGhlIGZhY3QgdGhhdCB0aGUgcnVuCi0gKgkgIGxpc3Qg
ZW50cnkgaGFzIGxlbmd0aCBMIDwgWCBhbmQgbGNuID49IDAuIFRoZSBtYXBwaW5nIHBhaXJzIGFy
cmF5Ci0gKgkgIHN0b3JlcyB0aGlzIGFzIG5vcm1hbCB3aXRoIGEgcnVuIGxlbmd0aCBvZiBYIGFu
ZCBzb21lIHNwZWNpZmljCi0gKgkgIGRlbHRhX2xjbiwgaS5lLiBkZWx0YV9sY24gaGFzIHRvIGJl
IHByZXNlbnQuIFRoaXMgcnVubGlzdCBlbnRyeSBpcwotICoJICBpbW1lZGlhdGVseSBmb2xsb3dl
ZCBieSBhIHNwYXJzZSBlbnRyeSB3aXRoIGxlbmd0aCA9IFggLSBMIGFuZAotICoJICBsY24gPSAt
MS4gVGhlIGxhdHRlciBlbnRyeSBpcyB0byBtYWtlIHVwIHRoZSB2Y24gY291bnRpbmcgdG8gdGhl
Ci0gKgkgIGZ1bGwgY29tcHJlc3Npb24gYmxvY2sgc2l6ZSBYLgotICoKLSAqIEluIGZhY3QsIGxp
ZmUgaXMgbW9yZSBjb21wbGljYXRlZCBiZWNhdXNlIGFkamFjZW50IGVudHJpZXMgb2YgdGhlIHNh
bWUgdHlwZQotICogY2FuIGJlIGNvYWxlc2NlZC4gVGhpcyBtZWFucyB0aGF0IG9uZSBoYXMgdG8g
a2VlcCB0cmFjayBvZiB0aGUgbnVtYmVyIG9mCi0gKiBjbHVzdGVycyBoYW5kbGVkIGFuZCB3b3Jr
IG9uIGEgYmFzaXMgb2YgWCBjbHVzdGVycyBhdCBhIHRpbWUgYmVpbmcgb25lCi0gKiBibG9jay4g
QW4gZXhhbXBsZTogaWYgbGVuZ3RoIEwgPiBYIHRoaXMgbWVhbnMgdGhhdCB0aGlzIHBhcnRpY3Vs
YXIgcnVubGlzdAotICogZW50cnkgY29udGFpbnMgYSBibG9jayBvZiBsZW5ndGggWCBhbmQgcGFy
dCBvZiBvbmUgb3IgbW9yZSBibG9ja3Mgb2YgbGVuZ3RoCi0gKiBMIC0gWC4gQW5vdGhlciBleGFt
cGxlOiBpZiBsZW5ndGggTCA8IFgsIHRoaXMgZG9lcyBub3QgbmVjZXNzYXJpbHkgbWVhbiB0aGF0
Ci0gKiB0aGUgYmxvY2sgaXMgY29tcHJlc3NlZCBhcyBpdCBtaWdodCBiZSB0aGF0IHRoZSBsY24g
Y2hhbmdlcyBpbnNpZGUgdGhlIGJsb2NrCi0gKiBhbmQgaGVuY2UgdGhlIGZvbGxvd2luZyBydW5s
aXN0IGVudHJ5IGRlc2NyaWJlcyB0aGUgY29udGludWF0aW9uIG9mIHRoZQotICogcG90ZW50aWFs
bHkgY29tcHJlc3NlZCBibG9jay4gVGhlIGJsb2NrIHdvdWxkIGJlIGNvbXByZXNzZWQgaWYgdGhl
Ci0gKiBmb2xsb3dpbmcgcnVubGlzdCBlbnRyeSBkZXNjcmliZXMgYXQgbGVhc3QgWCAtIEwgc3Bh
cnNlIGNsdXN0ZXJzLCB0aHVzCi0gKiBtYWtpbmcgdXAgdGhlIGNvbXByZXNzaW9uIGJsb2NrIGxl
bmd0aCBhcyBkZXNjcmliZWQgaW4gcG9pbnQgMyBhYm92ZS4gKE9mCi0gKiBjb3Vyc2UsIHRoZXJl
IGNhbiBiZSBzZXZlcmFsIHJ1bmxpc3QgZW50cmllcyB3aXRoIHNtYWxsIGxlbmd0aHMgc28gdGhh
dCB0aGUKLSAqIHNwYXJzZSBlbnRyeSBkb2VzIG5vdCBmb2xsb3cgdGhlIGZpcnN0IGRhdGEgY29u
dGFpbmluZyBlbnRyeSB3aXRoCi0gKiBsZW5ndGggPCBYLikKLSAqCi0gKiBOT1RFOiBBdCB0aGUg
ZW5kIG9mIHRoZSBjb21wcmVzc2VkIGF0dHJpYnV0ZSB2YWx1ZSwgdGhlcmUgbW9zdCBsaWtlbHkg
aXMgbm90Ci0gKiBqdXN0IHRoZSByaWdodCBhbW91bnQgb2YgZGF0YSB0byBtYWtlIHVwIGEgY29t
cHJlc3Npb24gYmxvY2ssIHRodXMgdGhpcyBkYXRhCi0gKiBpcyBub3QgZXZlbiBhdHRlbXB0ZWQg
dG8gYmUgY29tcHJlc3NlZC4gSXQgaXMganVzdCBzdG9yZWQgYXMgaXMsIHVubGVzcwotICogdGhl
IG51bWJlciBvZiBjbHVzdGVycyBpdCBvY2N1cGllcyBpcyByZWR1Y2VkIHdoZW4gY29tcHJlc3Nl
ZCBpbiB3aGljaCBjYXNlCi0gKiBpdCBpcyBzdG9yZWQgYXMgYSBjb21wcmVzc2VkIGNvbXByZXNz
aW9uIGJsb2NrLCBjb21wbGV0ZSB3aXRoIHNwYXJzZQotICogY2x1c3RlcnMgYXQgdGhlIGVuZC4K
LSAqLwotCi0vKgotICogRmxhZ3Mgb2YgcmVzaWRlbnQgYXR0cmlidXRlcyAoOC1iaXQpLgotICov
Ci1lbnVtIHsKLQlSRVNJREVOVF9BVFRSX0lTX0lOREVYRUQgPSAweDAxLCAvKiBBdHRyaWJ1dGUg
aXMgcmVmZXJlbmNlZCBpbiBhbiBpbmRleAotCQkJCQkgICAgKGhhcyBpbXBsaWNhdGlvbnMgZm9y
IGRlbGV0aW5nIGFuZAotCQkJCQkgICAgbW9kaWZ5aW5nIHRoZSBhdHRyaWJ1dGUpLiAqLwotfSBf
X2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpOwotCi10eXBlZGVmIHU4IFJFU0lERU5UX0FUVFJf
RkxBR1M7Ci0KLS8qCi0gKiBBdHRyaWJ1dGUgcmVjb3JkIGhlYWRlci4gQWx3YXlzIGFsaWduZWQg
dG8gOC1ieXRlIGJvdW5kYXJ5LgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0vKk9mcyovCi0vKiAg
MCovCUFUVFJfVFlQRSB0eXBlOwkJLyogVGhlICgzMi1iaXQpIHR5cGUgb2YgdGhlIGF0dHJpYnV0
ZS4gKi8KLS8qICA0Ki8JbGUzMiBsZW5ndGg7CQkvKiBCeXRlIHNpemUgb2YgdGhlIHJlc2lkZW50
IHBhcnQgb2YgdGhlCi0JCQkJICAgYXR0cmlidXRlIChhbGlnbmVkIHRvIDgtYnl0ZSBib3VuZGFy
eSkuCi0JCQkJICAgVXNlZCB0byBnZXQgdG8gdGhlIG5leHQgYXR0cmlidXRlLiAqLwotLyogIDgq
Lwl1OCBub25fcmVzaWRlbnQ7CS8qIElmIDAsIGF0dHJpYnV0ZSBpcyByZXNpZGVudC4KLQkJCQkg
ICBJZiAxLCBhdHRyaWJ1dGUgaXMgbm9uLXJlc2lkZW50LiAqLwotLyogIDkqLwl1OCBuYW1lX2xl
bmd0aDsJCS8qIFVuaWNvZGUgY2hhcmFjdGVyIHNpemUgb2YgbmFtZSBvZiBhdHRyaWJ1dGUuCi0J
CQkJICAgMCBpZiB1bm5hbWVkLiAqLwotLyogMTAqLwlsZTE2IG5hbWVfb2Zmc2V0OwkvKiBJZiBu
YW1lX2xlbmd0aCAhPSAwLCB0aGUgYnl0ZSBvZmZzZXQgdG8gdGhlCi0JCQkJICAgYmVnaW5uaW5n
IG9mIHRoZSBuYW1lIGZyb20gdGhlIGF0dHJpYnV0ZQotCQkJCSAgIHJlY29yZC4gTm90ZSB0aGF0
IHRoZSBuYW1lIGlzIHN0b3JlZCBhcyBhCi0JCQkJICAgVW5pY29kZSBzdHJpbmcuIFdoZW4gY3Jl
YXRpbmcsIHBsYWNlIG9mZnNldAotCQkJCSAgIGp1c3QgYXQgdGhlIGVuZCBvZiB0aGUgcmVjb3Jk
IGhlYWRlci4gVGhlbiwKLQkJCQkgICBmb2xsb3cgd2l0aCBhdHRyaWJ1dGUgdmFsdWUgb3IgbWFw
cGluZyBwYWlycwotCQkJCSAgIGFycmF5LCByZXNpZGVudCBhbmQgbm9uLXJlc2lkZW50IGF0dHJp
YnV0ZXMKLQkJCQkgICByZXNwZWN0aXZlbHksIGFsaWduaW5nIHRvIGFuIDgtYnl0ZQotCQkJCSAg
IGJvdW5kYXJ5LiAqLwotLyogMTIqLwlBVFRSX0ZMQUdTIGZsYWdzOwkvKiBGbGFncyBkZXNjcmli
aW5nIHRoZSBhdHRyaWJ1dGUuICovCi0vKiAxNCovCWxlMTYgaW5zdGFuY2U7CQkvKiBUaGUgaW5z
dGFuY2Ugb2YgdGhpcyBhdHRyaWJ1dGUgcmVjb3JkLiBUaGlzCi0JCQkJICAgbnVtYmVyIGlzIHVu
aXF1ZSB3aXRoaW4gdGhpcyBtZnQgcmVjb3JkIChzZWUKLQkJCQkgICBNRlRfUkVDT1JEL25leHRf
YXR0cmlidXRlX2luc3RhbmNlIG5vdGVzIGluCi0JCQkJICAgbWZ0LmggZm9yIG1vcmUgZGV0YWls
cykuICovCi0vKiAxNiovCXVuaW9uIHsKLQkJLyogUmVzaWRlbnQgYXR0cmlidXRlcy4gKi8KLQkJ
c3RydWN0IHsKLS8qIDE2ICovCQlsZTMyIHZhbHVlX2xlbmd0aDsvKiBCeXRlIHNpemUgb2YgYXR0
cmlidXRlIHZhbHVlLiAqLwotLyogMjAgKi8JCWxlMTYgdmFsdWVfb2Zmc2V0Oy8qIEJ5dGUgb2Zm
c2V0IG9mIHRoZSBhdHRyaWJ1dGUKLQkJCQkJICAgICB2YWx1ZSBmcm9tIHRoZSBzdGFydCBvZiB0
aGUKLQkJCQkJICAgICBhdHRyaWJ1dGUgcmVjb3JkLiBXaGVuIGNyZWF0aW5nLAotCQkJCQkgICAg
IGFsaWduIHRvIDgtYnl0ZSBib3VuZGFyeSBpZiB3ZQotCQkJCQkgICAgIGhhdmUgYSBuYW1lIHBy
ZXNlbnQgYXMgdGhpcyBtaWdodAotCQkJCQkgICAgIG5vdCBoYXZlIGEgbGVuZ3RoIG9mIGEgbXVs
dGlwbGUKLQkJCQkJICAgICBvZiA4LWJ5dGVzLiAqLwotLyogMjIgKi8JCVJFU0lERU5UX0FUVFJf
RkxBR1MgZmxhZ3M7IC8qIFNlZSBhYm92ZS4gKi8KLS8qIDIzICovCQlzOCByZXNlcnZlZDsJICAv
KiBSZXNlcnZlZC9hbGlnbm1lbnQgdG8gOC1ieXRlCi0JCQkJCSAgICAgYm91bmRhcnkuICovCi0J
CX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSByZXNpZGVudDsKLQkJLyogTm9uLXJlc2lk
ZW50IGF0dHJpYnV0ZXMuICovCi0JCXN0cnVjdCB7Ci0vKiAxNiovCQkJbGVWQ04gbG93ZXN0X3Zj
bjsvKiBMb3dlc3QgdmFsaWQgdmlydHVhbCBjbHVzdGVyIG51bWJlcgotCQkJCWZvciB0aGlzIHBv
cnRpb24gb2YgdGhlIGF0dHJpYnV0ZSB2YWx1ZSBvcgotCQkJCTAgaWYgdGhpcyBpcyB0aGUgb25s
eSBleHRlbnQgKHVzdWFsbHkgdGhlCi0JCQkJY2FzZSkuIC0gT25seSB3aGVuIGFuIGF0dHJpYnV0
ZSBsaXN0IGlzIHVzZWQKLQkJCQlkb2VzIGxvd2VzdF92Y24gIT0gMCBldmVyIG9jY3VyLiAqLwot
LyogMjQqLwkJCWxlVkNOIGhpZ2hlc3RfdmNuOy8qIEhpZ2hlc3QgdmFsaWQgdmNuIG9mIHRoaXMg
ZXh0ZW50IG9mCi0JCQkJdGhlIGF0dHJpYnV0ZSB2YWx1ZS4gLSBVc3VhbGx5IHRoZXJlIGlzIG9u
bHkgb25lCi0JCQkJcG9ydGlvbiwgc28gdGhpcyB1c3VhbGx5IGVxdWFscyB0aGUgYXR0cmlidXRl
Ci0JCQkJdmFsdWUgc2l6ZSBpbiBjbHVzdGVycyBtaW51cyAxLiBDYW4gYmUgLTEgZm9yCi0JCQkJ
emVybyBsZW5ndGggZmlsZXMuIENhbiBiZSAwIGZvciAic2luZ2xlIGV4dGVudCIKLQkJCQlhdHRy
aWJ1dGVzLiAqLwotLyogMzIqLwkJCWxlMTYgbWFwcGluZ19wYWlyc19vZmZzZXQ7IC8qIEJ5dGUg
b2Zmc2V0IGZyb20gdGhlCi0JCQkJYmVnaW5uaW5nIG9mIHRoZSBzdHJ1Y3R1cmUgdG8gdGhlIG1h
cHBpbmcgcGFpcnMKLQkJCQlhcnJheSB3aGljaCBjb250YWlucyB0aGUgbWFwcGluZ3MgYmV0d2Vl
biB0aGUKLQkJCQl2Y25zIGFuZCB0aGUgbG9naWNhbCBjbHVzdGVyIG51bWJlcnMgKGxjbnMpLgot
CQkJCVdoZW4gY3JlYXRpbmcsIHBsYWNlIHRoaXMgYXQgdGhlIGVuZCBvZiB0aGlzCi0JCQkJcmVj
b3JkIGhlYWRlciBhbGlnbmVkIHRvIDgtYnl0ZSBib3VuZGFyeS4gKi8KLS8qIDM0Ki8JCQl1OCBj
b21wcmVzc2lvbl91bml0OyAvKiBUaGUgY29tcHJlc3Npb24gdW5pdCBleHByZXNzZWQKLQkJCQlh
cyB0aGUgbG9nIHRvIHRoZSBiYXNlIDIgb2YgdGhlIG51bWJlciBvZgotCQkJCWNsdXN0ZXJzIGlu
IGEgY29tcHJlc3Npb24gdW5pdC4gIDAgbWVhbnMgbm90Ci0JCQkJY29tcHJlc3NlZC4gIChUaGlz
IGVmZmVjdGl2ZWx5IGxpbWl0cyB0aGUKLQkJCQljb21wcmVzc2lvbiB1bml0IHNpemUgdG8gYmUg
YSBwb3dlciBvZiB0d28KLQkJCQljbHVzdGVycy4pICBXaW5OVDQgb25seSB1c2VzIGEgdmFsdWUg
b2YgNC4KLQkJCQlTcGFyc2UgZmlsZXMgaGF2ZSB0aGlzIHNldCB0byAwIG9uIFhQU1AyLiAqLwot
LyogMzUqLwkJCXU4IHJlc2VydmVkWzVdOwkJLyogQWxpZ24gdG8gOC1ieXRlIGJvdW5kYXJ5LiAq
LwotLyogVGhlIHNpemVzIGJlbG93IGFyZSBvbmx5IHVzZWQgd2hlbiBsb3dlc3RfdmNuIGlzIHpl
cm8sIGFzIG90aGVyd2lzZSBpdCB3b3VsZAotICAgYmUgZGlmZmljdWx0IHRvIGtlZXAgdGhlbSB1
cC10by1kYXRlLiovCi0vKiA0MCovCQkJc2xlNjQgYWxsb2NhdGVkX3NpemU7CS8qIEJ5dGUgc2l6
ZSBvZiBkaXNrIHNwYWNlCi0JCQkJYWxsb2NhdGVkIHRvIGhvbGQgdGhlIGF0dHJpYnV0ZSB2YWx1
ZS4gQWx3YXlzCi0JCQkJaXMgYSBtdWx0aXBsZSBvZiB0aGUgY2x1c3RlciBzaXplLiBXaGVuIGEg
ZmlsZQotCQkJCWlzIGNvbXByZXNzZWQsIHRoaXMgZmllbGQgaXMgYSBtdWx0aXBsZSBvZiB0aGUK
LQkJCQljb21wcmVzc2lvbiBibG9jayBzaXplICgyXmNvbXByZXNzaW9uX3VuaXQpIGFuZAotCQkJ
CWl0IHJlcHJlc2VudHMgdGhlIGxvZ2ljYWxseSBhbGxvY2F0ZWQgc3BhY2UKLQkJCQlyYXRoZXIg
dGhhbiB0aGUgYWN0dWFsIG9uIGRpc2sgdXNhZ2UuIEZvciB0aGlzCi0JCQkJdXNlIHRoZSBjb21w
cmVzc2VkX3NpemUgKHNlZSBiZWxvdykuICovCi0vKiA0OCovCQkJc2xlNjQgZGF0YV9zaXplOwkv
KiBCeXRlIHNpemUgb2YgdGhlIGF0dHJpYnV0ZQotCQkJCXZhbHVlLiBDYW4gYmUgbGFyZ2VyIHRo
YW4gYWxsb2NhdGVkX3NpemUgaWYKLQkJCQlhdHRyaWJ1dGUgdmFsdWUgaXMgY29tcHJlc3NlZCBv
ciBzcGFyc2UuICovCi0vKiA1NiovCQkJc2xlNjQgaW5pdGlhbGl6ZWRfc2l6ZTsJLyogQnl0ZSBz
aXplIG9mIGluaXRpYWxpemVkCi0JCQkJcG9ydGlvbiBvZiB0aGUgYXR0cmlidXRlIHZhbHVlLiBV
c3VhbGx5IGVxdWFscwotCQkJCWRhdGFfc2l6ZS4gKi8KLS8qIHNpemVvZih1bmNvbXByZXNzZWQg
YXR0cikgPSA2NCovCi0vKiA2NCovCQkJc2xlNjQgY29tcHJlc3NlZF9zaXplOwkvKiBCeXRlIHNp
emUgb2YgdGhlIGF0dHJpYnV0ZQotCQkJCXZhbHVlIGFmdGVyIGNvbXByZXNzaW9uLiAgT25seSBw
cmVzZW50IHdoZW4KLQkJCQljb21wcmVzc2VkIG9yIHNwYXJzZS4gIEFsd2F5cyBpcyBhIG11bHRp
cGxlIG9mCi0JCQkJdGhlIGNsdXN0ZXIgc2l6ZS4gIFJlcHJlc2VudHMgdGhlIGFjdHVhbCBhbW91
bnQKLQkJCQlvZiBkaXNrIHNwYWNlIGJlaW5nIHVzZWQgb24gdGhlIGRpc2suICovCi0vKiBzaXpl
b2YoY29tcHJlc3NlZCBhdHRyKSA9IDcyKi8KLQkJfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRf
XykpIG5vbl9yZXNpZGVudDsKLQl9IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgZGF0YTsK
LX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBBVFRSX1JFQ09SRDsKLQotdHlwZWRlZiBB
VFRSX1JFQ09SRCBBVFRSX1JFQzsKLQotLyoKLSAqIEZpbGUgYXR0cmlidXRlIGZsYWdzICgzMi1i
aXQpIGFwcGVhcmluZyBpbiB0aGUgZmlsZV9hdHRyaWJ1dGVzIGZpZWxkcyBvZiB0aGUKLSAqIFNU
QU5EQVJEX0lORk9STUFUSU9OIGF0dHJpYnV0ZSBvZiBNRlRfUkVDT1JEcyBhbmQgdGhlIEZJTEVO
QU1FX0FUVFIKLSAqIGF0dHJpYnV0ZXMgb2YgTUZUX1JFQ09SRHMgYW5kIGRpcmVjdG9yeSBpbmRl
eCBlbnRyaWVzLgotICoKLSAqIEFsbCBvZiB0aGUgYmVsb3cgZmxhZ3MgYXBwZWFyIGluIHRoZSBk
aXJlY3RvcnkgaW5kZXggZW50cmllcyBidXQgb25seSBzb21lCi0gKiBhcHBlYXIgaW4gdGhlIFNU
QU5EQVJEX0lORk9STUFUSU9OIGF0dHJpYnV0ZSB3aGlsc3Qgb25seSBzb21lIG90aGVycyBhcHBl
YXIKLSAqIGluIHRoZSBGSUxFTkFNRV9BVFRSIGF0dHJpYnV0ZSBvZiBNRlRfUkVDT1JEcy4gIFVu
bGVzcyBvdGhlcndpc2Ugc3RhdGVkIHRoZQotICogZmxhZ3MgYXBwZWFyIGluIGFsbCBvZiB0aGUg
YWJvdmUuCi0gKi8KLWVudW0gewotCUZJTEVfQVRUUl9SRUFET05MWQkJPSBjcHVfdG9fbGUzMigw
eDAwMDAwMDAxKSwKLQlGSUxFX0FUVFJfSElEREVOCQk9IGNwdV90b19sZTMyKDB4MDAwMDAwMDIp
LAotCUZJTEVfQVRUUl9TWVNURU0JCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwNCksCi0JLyogT2xk
IERPUyB2b2xpZC4gVW51c2VkIGluIE5ULgk9IGNwdV90b19sZTMyKDB4MDAwMDAwMDgpLCAqLwot
Ci0JRklMRV9BVFRSX0RJUkVDVE9SWQkJPSBjcHVfdG9fbGUzMigweDAwMDAwMDEwKSwKLQkvKiBO
b3RlLCBGSUxFX0FUVFJfRElSRUNUT1JZIGlzIG5vdCBjb25zaWRlcmVkIHZhbGlkIGluIE5ULiAg
SXQgaXMKLQkgICByZXNlcnZlZCBmb3IgdGhlIERPUyBTVUJESVJFQ1RPUlkgZmxhZy4gKi8KLQlG
SUxFX0FUVFJfQVJDSElWRQkJPSBjcHVfdG9fbGUzMigweDAwMDAwMDIwKSwKLQlGSUxFX0FUVFJf
REVWSUNFCQk9IGNwdV90b19sZTMyKDB4MDAwMDAwNDApLAotCUZJTEVfQVRUUl9OT1JNQUwJCT0g
Y3B1X3RvX2xlMzIoMHgwMDAwMDA4MCksCi0KLQlGSUxFX0FUVFJfVEVNUE9SQVJZCQk9IGNwdV90
b19sZTMyKDB4MDAwMDAxMDApLAotCUZJTEVfQVRUUl9TUEFSU0VfRklMRQkJPSBjcHVfdG9fbGUz
MigweDAwMDAwMjAwKSwKLQlGSUxFX0FUVFJfUkVQQVJTRV9QT0lOVAkJPSBjcHVfdG9fbGUzMigw
eDAwMDAwNDAwKSwKLQlGSUxFX0FUVFJfQ09NUFJFU1NFRAkJPSBjcHVfdG9fbGUzMigweDAwMDAw
ODAwKSwKLQotCUZJTEVfQVRUUl9PRkZMSU5FCQk9IGNwdV90b19sZTMyKDB4MDAwMDEwMDApLAot
CUZJTEVfQVRUUl9OT1RfQ09OVEVOVF9JTkRFWEVECT0gY3B1X3RvX2xlMzIoMHgwMDAwMjAwMCks
Ci0JRklMRV9BVFRSX0VOQ1JZUFRFRAkJPSBjcHVfdG9fbGUzMigweDAwMDA0MDAwKSwKLQotCUZJ
TEVfQVRUUl9WQUxJRF9GTEFHUwkJPSBjcHVfdG9fbGUzMigweDAwMDA3ZmI3KSwKLQkvKiBOb3Rl
LCBGSUxFX0FUVFJfVkFMSURfRkxBR1MgbWFza3Mgb3V0IHRoZSBvbGQgRE9TIFZvbElkIGFuZCB0
aGUKLQkgICBGSUxFX0FUVFJfREVWSUNFIGFuZCBwcmVzZXJ2ZXMgZXZlcnl0aGluZyBlbHNlLiAg
VGhpcyBtYXNrIGlzIHVzZWQKLQkgICB0byBvYnRhaW4gYWxsIGZsYWdzIHRoYXQgYXJlIHZhbGlk
IGZvciByZWFkaW5nLiAqLwotCUZJTEVfQVRUUl9WQUxJRF9TRVRfRkxBR1MJPSBjcHVfdG9fbGUz
MigweDAwMDAzMWE3KSwKLQkvKiBOb3RlLCBGSUxFX0FUVFJfVkFMSURfU0VUX0ZMQUdTIG1hc2tz
IG91dCB0aGUgb2xkIERPUyBWb2xJZCwgdGhlCi0JICAgRl9BX0RFVklDRSwgRl9BX0RJUkVDVE9S
WSwgRl9BX1NQQVJTRV9GSUxFLCBGX0FfUkVQQVJTRV9QT0lOVCwKLQkgICBGX0FfQ09NUFJFU1NF
RCwgYW5kIEZfQV9FTkNSWVBURUQgYW5kIHByZXNlcnZlcyB0aGUgcmVzdC4gIFRoaXMgbWFzawot
CSAgIGlzIHVzZWQgdG8gb2J0YWluIGFsbCBmbGFncyB0aGF0IGFyZSB2YWxpZCBmb3Igc2V0dGlu
Zy4gKi8KLQkvKgotCSAqIFRoZSBmbGFnIEZJTEVfQVRUUl9EVVBfRklMRU5BTUVfSU5ERVhfUFJF
U0VOVCBpcyBwcmVzZW50IGluIGFsbAotCSAqIEZJTEVOQU1FX0FUVFIgYXR0cmlidXRlcyBidXQg
bm90IGluIHRoZSBTVEFOREFSRF9JTkZPUk1BVElPTgotCSAqIGF0dHJpYnV0ZSBvZiBhbiBtZnQg
cmVjb3JkLgotCSAqLwotCUZJTEVfQVRUUl9EVVBfRklMRV9OQU1FX0lOREVYX1BSRVNFTlQJPSBj
cHVfdG9fbGUzMigweDEwMDAwMDAwKSwKLQkvKiBOb3RlLCB0aGlzIGlzIGEgY29weSBvZiB0aGUg
Y29ycmVzcG9uZGluZyBiaXQgZnJvbSB0aGUgbWZ0IHJlY29yZCwKLQkgICB0ZWxsaW5nIHVzIHdo
ZXRoZXIgdGhpcyBpcyBhIGRpcmVjdG9yeSBvciBub3QsIGkuZS4gd2hldGhlciBpdCBoYXMKLQkg
ICBhbiBpbmRleCByb290IGF0dHJpYnV0ZSBvciBub3QuICovCi0JRklMRV9BVFRSX0RVUF9WSUVX
X0lOREVYX1BSRVNFTlQJPSBjcHVfdG9fbGUzMigweDIwMDAwMDAwKSwKLQkvKiBOb3RlLCB0aGlz
IGlzIGEgY29weSBvZiB0aGUgY29ycmVzcG9uZGluZyBiaXQgZnJvbSB0aGUgbWZ0IHJlY29yZCwK
LQkgICB0ZWxsaW5nIHVzIHdoZXRoZXIgdGhpcyBmaWxlIGhhcyBhIHZpZXcgaW5kZXggcHJlc2Vu
dCAoZWcuIG9iamVjdCBpZAotCSAgIGluZGV4LCBxdW90YSBpbmRleCwgb25lIG9mIHRoZSBzZWN1
cml0eSBpbmRleGVzIG9yIHRoZSBlbmNyeXB0aW5nCi0JICAgZmlsZXN5c3RlbSByZWxhdGVkIGlu
ZGV4ZXMpLiAqLwotfTsKLQotdHlwZWRlZiBsZTMyIEZJTEVfQVRUUl9GTEFHUzsKLQotLyoKLSAq
IE5PVEUgb24gdGltZXMgaW4gTlRGUzogQWxsIHRpbWVzIGFyZSBpbiBNUyBzdGFuZGFyZCB0aW1l
IGZvcm1hdCwgaS5lLiB0aGV5Ci0gKiBhcmUgdGhlIG51bWJlciBvZiAxMDAtbmFub3NlY29uZCBp
bnRlcnZhbHMgc2luY2UgMXN0IEphbnVhcnkgMTYwMSwgMDA6MDA6MDAKLSAqIHVuaXZlcnNhbCBj
b29yZGluYXRlZCB0aW1lIChVVEMpLiAoSW4gTGludXggdGltZSBzdGFydHMgMXN0IEphbnVhcnkg
MTk3MCwKLSAqIDAwOjAwOjAwIFVUQyBhbmQgaXMgc3RvcmVkIGFzIHRoZSBudW1iZXIgb2YgMS1z
ZWNvbmQgaW50ZXJ2YWxzIHNpbmNlIHRoZW4uKQotICovCi0KLS8qCi0gKiBBdHRyaWJ1dGU6IFN0
YW5kYXJkIGluZm9ybWF0aW9uICgweDEwKS4KLSAqCi0gKiBOT1RFOiBBbHdheXMgcmVzaWRlbnQu
Ci0gKiBOT1RFOiBQcmVzZW50IGluIGFsbCBiYXNlIGZpbGUgcmVjb3JkcyBvbiBhIHZvbHVtZS4K
LSAqIE5PVEU6IFRoZXJlIGlzIGNvbmZsaWN0aW5nIGluZm9ybWF0aW9uIGFib3V0IHRoZSBtZWFu
aW5nIG9mIGVhY2ggb2YgdGhlIHRpbWUKLSAqCSBmaWVsZHMgYnV0IHRoZSBtZWFuaW5nIGFzIGRl
ZmluZWQgYmVsb3cgaGFzIGJlZW4gdmVyaWZpZWQgdG8gYmUKLSAqCSBjb3JyZWN0IGJ5IHByYWN0
aWNhbCBleHBlcmltZW50YXRpb24gb24gV2luZG93cyBOVDQgU1A2YSBhbmQgaXMgaGVuY2UKLSAq
CSBhc3N1bWVkIHRvIGJlIHRoZSBvbmUgYW5kIG9ubHkgY29ycmVjdCBpbnRlcnByZXRhdGlvbi4K
LSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotLypPZnMqLwotLyogIDAqLwlzbGU2NCBjcmVhdGlvbl90
aW1lOwkJLyogVGltZSBmaWxlIHdhcyBjcmVhdGVkLiBVcGRhdGVkIHdoZW4KLQkJCQkJICAgYSBm
aWxlbmFtZSBpcyBjaGFuZ2VkKD8pLiAqLwotLyogIDgqLwlzbGU2NCBsYXN0X2RhdGFfY2hhbmdl
X3RpbWU7CS8qIFRpbWUgdGhlIGRhdGEgYXR0cmlidXRlIHdhcyBsYXN0Ci0JCQkJCSAgIG1vZGlm
aWVkLiAqLwotLyogMTYqLwlzbGU2NCBsYXN0X21mdF9jaGFuZ2VfdGltZTsJLyogVGltZSB0aGlz
IG1mdCByZWNvcmQgd2FzIGxhc3QKLQkJCQkJICAgbW9kaWZpZWQuICovCi0vKiAyNCovCXNsZTY0
IGxhc3RfYWNjZXNzX3RpbWU7CQkvKiBBcHByb3hpbWF0ZSB0aW1lIHdoZW4gdGhlIGZpbGUgd2Fz
Ci0JCQkJCSAgIGxhc3QgYWNjZXNzZWQgKG9idmlvdXNseSB0aGlzIGlzIG5vdAotCQkJCQkgICB1
cGRhdGVkIG9uIHJlYWQtb25seSB2b2x1bWVzKS4gSW4KLQkJCQkJICAgV2luZG93cyB0aGlzIGlz
IG9ubHkgdXBkYXRlZCB3aGVuCi0JCQkJCSAgIGFjY2Vzc2VkIGlmIHNvbWUgdGltZSBkZWx0YSBo
YXMKLQkJCQkJICAgcGFzc2VkIHNpbmNlIHRoZSBsYXN0IHVwZGF0ZS4gQWxzbywKLQkJCQkJICAg
bGFzdCBhY2Nlc3MgdGltZSB1cGRhdGVzIGNhbiBiZQotCQkJCQkgICBkaXNhYmxlZCBhbHRvZ2V0
aGVyIGZvciBzcGVlZC4gKi8KLS8qIDMyKi8JRklMRV9BVFRSX0ZMQUdTIGZpbGVfYXR0cmlidXRl
czsgLyogRmxhZ3MgZGVzY3JpYmluZyB0aGUgZmlsZS4gKi8KLS8qIDM2Ki8JdW5pb24gewotCS8q
IE5URlMgMS4yICovCi0JCXN0cnVjdCB7Ci0JCS8qIDM2Ki8JdTggcmVzZXJ2ZWQxMlsxMl07CS8q
IFJlc2VydmVkL2FsaWdubWVudCB0byA4LWJ5dGUKLQkJCQkJCSAgIGJvdW5kYXJ5LiAqLwotCQl9
IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgdjE7Ci0JLyogc2l6ZW9mKCkgPSA0OCBieXRl
cyAqLwotCS8qIE5URlMgMy54ICovCi0JCXN0cnVjdCB7Ci0vKgotICogSWYgYSB2b2x1bWUgaGFz
IGJlZW4gdXBncmFkZWQgZnJvbSBhIHByZXZpb3VzIE5URlMgdmVyc2lvbiwgdGhlbiB0aGVzZQot
ICogZmllbGRzIGFyZSBwcmVzZW50IG9ubHkgaWYgdGhlIGZpbGUgaGFzIGJlZW4gYWNjZXNzZWQg
c2luY2UgdGhlIHVwZ3JhZGUuCi0gKiBSZWNvZ25pemUgdGhlIGRpZmZlcmVuY2UgYnkgY29tcGFy
aW5nIHRoZSBsZW5ndGggb2YgdGhlIHJlc2lkZW50IGF0dHJpYnV0ZQotICogdmFsdWUuIElmIGl0
IGlzIDQ4LCB0aGVuIHRoZSBmb2xsb3dpbmcgZmllbGRzIGFyZSBtaXNzaW5nLiBJZiBpdCBpcyA3
MiB0aGVuCi0gKiB0aGUgZmllbGRzIGFyZSBwcmVzZW50LiBNYXliZSBqdXN0IGNoZWNrIGxpa2Ug
dGhpczoKLSAqCWlmIChyZXNpZGVudC5WYWx1ZUxlbmd0aCA8IHNpemVvZihTVEFOREFSRF9JTkZP
Uk1BVElPTikpIHsKLSAqCQlBc3N1bWUgTlRGUyAxLjItIGZvcm1hdC4KLSAqCQlJZiAodm9sdW1l
IHZlcnNpb24gaXMgMy54KQotICoJCQlVcGdyYWRlIGF0dHJpYnV0ZSB0byBOVEZTIDMueCBmb3Jt
YXQuCi0gKgkJZWxzZQotICoJCQlVc2UgTlRGUyAxLjItIGZvcm1hdCBmb3IgYWNjZXNzLgotICoJ
fSBlbHNlCi0gKgkJVXNlIE5URlMgMy54IGZvcm1hdCBmb3IgYWNjZXNzLgotICogT25seSBwcm9i
bGVtIGlzIHRoYXQgaXQgbWlnaHQgYmUgbGVnYWwgdG8gc2V0IHRoZSBsZW5ndGggb2YgdGhlIHZh
bHVlIHRvCi0gKiBhcmJpdHJhcmlseSBsYXJnZSB2YWx1ZXMgdGh1cyBzcG9pbGluZyB0aGlzIGNo
ZWNrLiAtIEJ1dCBjaGtkc2sgcHJvYmFibHkKLSAqIHZpZXdzIHRoYXQgYXMgYSBjb3JydXB0aW9u
LCBhc3N1bWluZyB0aGF0IGl0IGJlaGF2ZXMgbGlrZSB0aGlzIGZvciBhbGwKLSAqIGF0dHJpYnV0
ZXMuCi0gKi8KLQkJLyogMzYqLwlsZTMyIG1heGltdW1fdmVyc2lvbnM7CS8qIE1heGltdW0gYWxs
b3dlZCB2ZXJzaW9ucyBmb3IKLQkJCQlmaWxlLiBaZXJvIGlmIHZlcnNpb24gbnVtYmVyaW5nIGlz
IGRpc2FibGVkLiAqLwotCQkvKiA0MCovCWxlMzIgdmVyc2lvbl9udW1iZXI7CS8qIFRoaXMgZmls
ZSdzIHZlcnNpb24gKGlmIGFueSkuCi0JCQkJU2V0IHRvIHplcm8gaWYgbWF4aW11bV92ZXJzaW9u
cyBpcyB6ZXJvLiAqLwotCQkvKiA0NCovCWxlMzIgY2xhc3NfaWQ7CQkvKiBDbGFzcyBpZCBmcm9t
IGJpZGlyZWN0aW9uYWwKLQkJCQljbGFzcyBpZCBpbmRleCAoPykuICovCi0JCS8qIDQ4Ki8JbGUz
MiBvd25lcl9pZDsJCS8qIE93bmVyX2lkIG9mIHRoZSB1c2VyIG93bmluZwotCQkJCXRoZSBmaWxl
LiBUcmFuc2xhdGUgdmlhICRRIGluZGV4IGluIEZJTEVfRXh0ZW5kCi0JCQkJLyRRdW90YSB0byB0
aGUgcXVvdGEgY29udHJvbCBlbnRyeSBmb3IgdGhlIHVzZXIKLQkJCQlvd25pbmcgdGhlIGZpbGUu
IFplcm8gaWYgcXVvdGFzIGFyZSBkaXNhYmxlZC4gKi8KLQkJLyogNTIqLwlsZTMyIHNlY3VyaXR5
X2lkOwkvKiBTZWN1cml0eV9pZCBmb3IgdGhlIGZpbGUuCi0JCQkJVHJhbnNsYXRlIHZpYSAkU0lJ
IGluZGV4IGFuZCAkU0RTIGRhdGEgc3RyZWFtCi0JCQkJaW4gRklMRV9TZWN1cmUgdG8gdGhlIHNl
Y3VyaXR5IGRlc2NyaXB0b3IuICovCi0JCS8qIDU2Ki8JbGU2NCBxdW90YV9jaGFyZ2VkOwkvKiBC
eXRlIHNpemUgb2YgdGhlIGNoYXJnZSB0bwotCQkJCXRoZSBxdW90YSBmb3IgYWxsIHN0cmVhbXMg
b2YgdGhlIGZpbGUuIE5vdGU6IElzCi0JCQkJemVybyBpZiBxdW90YXMgYXJlIGRpc2FibGVkLiAq
LwotCQkvKiA2NCovCWxlVVNOIHVzbjsJCS8qIExhc3QgdXBkYXRlIHNlcXVlbmNlIG51bWJlcgot
CQkJCW9mIHRoZSBmaWxlLiAgVGhpcyBpcyBhIGRpcmVjdCBpbmRleCBpbnRvIHRoZQotCQkJCXRy
YW5zYWN0aW9uIGxvZyBmaWxlICgkVXNuSnJubCkuICBJdCBpcyB6ZXJvIGlmCi0JCQkJdGhlIHVz
biBqb3VybmFsIGlzIGRpc2FibGVkIG9yIHRoaXMgZmlsZSBoYXMKLQkJCQlub3QgYmVlbiBzdWJq
ZWN0IHRvIGxvZ2dpbmcgeWV0LiAgU2VlIHVzbmpybmwuaAotCQkJCWZvciBkZXRhaWxzLiAqLwot
CQl9IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgdjM7Ci0JLyogc2l6ZW9mKCkgPSA3MiBi
eXRlcyAoTlRGUyAzLngpICovCi0JfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIHZlcjsK
LX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBTVEFOREFSRF9JTkZPUk1BVElPTjsKLQot
LyoKLSAqIEF0dHJpYnV0ZTogQXR0cmlidXRlIGxpc3QgKDB4MjApLgotICoKLSAqIC0gQ2FuIGJl
IGVpdGhlciByZXNpZGVudCBvciBub24tcmVzaWRlbnQuCi0gKiAtIFZhbHVlIGNvbnNpc3RzIG9m
IGEgc2VxdWVuY2Ugb2YgdmFyaWFibGUgbGVuZ3RoLCA4LWJ5dGUgYWxpZ25lZCwKLSAqIEFUVFJf
TElTVF9FTlRSWSByZWNvcmRzLgotICogLSBUaGUgbGlzdCBpcyBub3QgdGVybWluYXRlZCBieSBh
bnl0aGluZyBhdCBhbGwhIFRoZSBvbmx5IHdheSB0byBrbm93IHdoZW4KLSAqIHRoZSBlbmQgaXMg
cmVhY2hlZCBpcyB0byBrZWVwIHRyYWNrIG9mIHRoZSBjdXJyZW50IG9mZnNldCBhbmQgY29tcGFy
ZSBpdCB0bwotICogdGhlIGF0dHJpYnV0ZSB2YWx1ZSBzaXplLgotICogLSBUaGUgYXR0cmlidXRl
IGxpc3QgYXR0cmlidXRlIGNvbnRhaW5zIG9uZSBlbnRyeSBmb3IgZWFjaCBhdHRyaWJ1dGUgb2YK
LSAqIHRoZSBmaWxlIGluIHdoaWNoIHRoZSBsaXN0IGlzIGxvY2F0ZWQsIGV4Y2VwdCBmb3IgdGhl
IGxpc3QgYXR0cmlidXRlCi0gKiBpdHNlbGYuIFRoZSBsaXN0IGlzIHNvcnRlZDogZmlyc3QgYnkg
YXR0cmlidXRlIHR5cGUsIHNlY29uZCBieSBhdHRyaWJ1dGUKLSAqIG5hbWUgKGlmIHByZXNlbnQp
LCB0aGlyZCBieSBpbnN0YW5jZSBudW1iZXIuIFRoZSBleHRlbnRzIG9mIG9uZQotICogbm9uLXJl
c2lkZW50IGF0dHJpYnV0ZSAoaWYgcHJlc2VudCkgaW1tZWRpYXRlbHkgZm9sbG93IGFmdGVyIHRo
ZSBpbml0aWFsCi0gKiBleHRlbnQuIFRoZXkgYXJlIG9yZGVyZWQgYnkgbG93ZXN0X3ZjbiBhbmQg
aGF2ZSB0aGVpciBpbnN0YWNlIHNldCB0byB6ZXJvLgotICogSXQgaXMgbm90IGFsbG93ZWQgdG8g
aGF2ZSB0d28gYXR0cmlidXRlcyB3aXRoIGFsbCBzb3J0aW5nIGtleXMgZXF1YWwuCi0gKiAtIEZ1
cnRoZXIgcmVzdHJpY3Rpb25zOgotICoJLSBJZiBub3QgcmVzaWRlbnQsIHRoZSB2Y24gdG8gbGNu
IG1hcHBpbmcgYXJyYXkgaGFzIHRvIGZpdCBpbnNpZGUgdGhlCi0gKgkgIGJhc2UgbWZ0IHJlY29y
ZC4KLSAqCS0gVGhlIGF0dHJpYnV0ZSBsaXN0IGF0dHJpYnV0ZSB2YWx1ZSBoYXMgYSBtYXhpbXVt
IHNpemUgb2YgMjU2a2IuIFRoaXMKLSAqCSAgaXMgaW1wb3NlZCBieSB0aGUgV2luZG93cyBjYWNo
ZSBtYW5hZ2VyLgotICogLSBBdHRyaWJ1dGUgbGlzdHMgYXJlIG9ubHkgdXNlZCB3aGVuIHRoZSBh
dHRyaWJ1dGVzIG9mIG1mdCByZWNvcmQgZG8gbm90Ci0gKiBmaXQgaW5zaWRlIHRoZSBtZnQgcmVj
b3JkIGRlc3BpdGUgYWxsIGF0dHJpYnV0ZXMgKHRoYXQgY2FuIGJlIG1hZGUKLSAqIG5vbi1yZXNp
ZGVudCkgaGF2aW5nIGJlZW4gbWFkZSBub24tcmVzaWRlbnQuIFRoaXMgY2FuIGhhcHBlbiBlLmcu
IHdoZW46Ci0gKgktIEZpbGUgaGFzIGEgbGFyZ2UgbnVtYmVyIG9mIGhhcmQgbGlua3MgKGxvdHMg
b2YgZmlsZSBuYW1lCi0gKgkgIGF0dHJpYnV0ZXMgcHJlc2VudCkuCi0gKgktIFRoZSBtYXBwaW5n
IHBhaXJzIGFycmF5IG9mIHNvbWUgbm9uLXJlc2lkZW50IGF0dHJpYnV0ZSBiZWNvbWVzIHNvCi0g
KgkgIGxhcmdlIGR1ZSB0byBmcmFnbWVudGF0aW9uIHRoYXQgaXQgb3ZlcmZsb3dzIHRoZSBtZnQg
cmVjb3JkLgotICoJLSBUaGUgc2VjdXJpdHkgZGVzY3JpcHRvciBpcyB2ZXJ5IGNvbXBsZXggKG5v
dCBhcHBsaWNhYmxlIHRvCi0gKgkgIE5URlMgMy4wIHZvbHVtZXMpLgotICoJLSBUaGVyZSBhcmUg
bWFueSBuYW1lZCBzdHJlYW1zLgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0vKk9mcyovCi0vKiAg
MCovCUFUVFJfVFlQRSB0eXBlOwkJLyogVHlwZSBvZiByZWZlcmVuY2VkIGF0dHJpYnV0ZS4gKi8K
LS8qICA0Ki8JbGUxNiBsZW5ndGg7CQkvKiBCeXRlIHNpemUgb2YgdGhpcyBlbnRyeSAoOC1ieXRl
IGFsaWduZWQpLiAqLwotLyogIDYqLwl1OCBuYW1lX2xlbmd0aDsJCS8qIFNpemUgaW4gVW5pY29k
ZSBjaGFycyBvZiB0aGUgbmFtZSBvZiB0aGUKLQkJCQkgICBhdHRyaWJ1dGUgb3IgMCBpZiB1bm5h
bWVkLiAqLwotLyogIDcqLwl1OCBuYW1lX29mZnNldDsJCS8qIEJ5dGUgb2Zmc2V0IHRvIGJlZ2lu
bmluZyBvZiBhdHRyaWJ1dGUgbmFtZQotCQkJCSAgIChhbHdheXMgc2V0IHRoaXMgdG8gd2hlcmUg
dGhlIG5hbWUgd291bGQKLQkJCQkgICBzdGFydCBldmVuIGlmIHVubmFtZWQpLiAqLwotLyogIDgq
LwlsZVZDTiBsb3dlc3RfdmNuOwkvKiBMb3dlc3QgdmlydHVhbCBjbHVzdGVyIG51bWJlciBvZiB0
aGlzIHBvcnRpb24KLQkJCQkgICBvZiB0aGUgYXR0cmlidXRlIHZhbHVlLiBUaGlzIGlzIHVzdWFs
bHkgMC4gSXQKLQkJCQkgICBpcyBub24temVybyBmb3IgdGhlIGNhc2Ugd2hlcmUgb25lIGF0dHJp
YnV0ZQotCQkJCSAgIGRvZXMgbm90IGZpdCBpbnRvIG9uZSBtZnQgcmVjb3JkIGFuZCB0aHVzCi0J
CQkJICAgc2V2ZXJhbCBtZnQgcmVjb3JkcyBhcmUgYWxsb2NhdGVkIHRvIGhvbGQKLQkJCQkgICB0
aGlzIGF0dHJpYnV0ZS4gSW4gdGhlIGxhdHRlciBjYXNlLCBlYWNoIG1mdAotCQkJCSAgIHJlY29y
ZCBob2xkcyBvbmUgZXh0ZW50IG9mIHRoZSBhdHRyaWJ1dGUgYW5kCi0JCQkJICAgdGhlcmUgaXMg
b25lIGF0dHJpYnV0ZSBsaXN0IGVudHJ5IGZvciBlYWNoCi0JCQkJICAgZXh0ZW50LiBOT1RFOiBU
aGlzIGlzIERFRklOSVRFTFkgYSBzaWduZWQKLQkJCQkgICB2YWx1ZSEgVGhlIHdpbmRvd3MgZHJp
dmVyIHVzZXMgY21wLCBmb2xsb3dlZAotCQkJCSAgIGJ5IGpnIHdoZW4gY29tcGFyaW5nIHRoaXMs
IHRodXMgaXQgdHJlYXRzIGl0Ci0JCQkJICAgYXMgc2lnbmVkLiAqLwotLyogMTYqLwlsZU1GVF9S
RUYgbWZ0X3JlZmVyZW5jZTsvKiBUaGUgcmVmZXJlbmNlIG9mIHRoZSBtZnQgcmVjb3JkIGhvbGRp
bmcKLQkJCQkgICB0aGUgQVRUUl9SRUNPUkQgZm9yIHRoaXMgcG9ydGlvbiBvZiB0aGUKLQkJCQkg
ICBhdHRyaWJ1dGUgdmFsdWUuICovCi0vKiAyNCovCWxlMTYgaW5zdGFuY2U7CQkvKiBJZiBsb3dl
c3RfdmNuID0gMCwgdGhlIGluc3RhbmNlIG9mIHRoZQotCQkJCSAgIGF0dHJpYnV0ZSBiZWluZyBy
ZWZlcmVuY2VkOyBvdGhlcndpc2UgMC4gKi8KLS8qIDI2Ki8JbnRmc2NoYXIgbmFtZVswXTsJLyog
VXNlIHdoZW4gY3JlYXRpbmcgb25seS4gV2hlbiByZWFkaW5nIHVzZQotCQkJCSAgIG5hbWVfb2Zm
c2V0IHRvIGRldGVybWluZSB0aGUgbG9jYXRpb24gb2YgdGhlCi0JCQkJICAgbmFtZS4gKi8KLS8q
IHNpemVvZigpID0gMjYgKyAoYXR0cmlidXRlX25hbWVfbGVuZ3RoICogMikgYnl0ZXMgKi8KLX0g
X19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBBVFRSX0xJU1RfRU5UUlk7Ci0KLS8qCi0gKiBU
aGUgbWF4aW11bSBhbGxvd2VkIGxlbmd0aCBmb3IgYSBmaWxlIG5hbWUuCi0gKi8KLSNkZWZpbmUg
TUFYSU1VTV9GSUxFX05BTUVfTEVOR1RICTI1NQotCi0vKgotICogUG9zc2libGUgbmFtZXNwYWNl
cyBmb3IgZmlsZW5hbWVzIGluIG50ZnMgKDgtYml0KS4KLSAqLwotZW51bSB7Ci0JRklMRV9OQU1F
X1BPU0lYCQk9IDB4MDAsCi0JLyogVGhpcyBpcyB0aGUgbGFyZ2VzdCBuYW1lc3BhY2UuIEl0IGlz
IGNhc2Ugc2Vuc2l0aXZlIGFuZCBhbGxvd3MgYWxsCi0JICAgVW5pY29kZSBjaGFyYWN0ZXJzIGV4
Y2VwdCBmb3I6ICdcMCcgYW5kICcvJy4gIEJld2FyZSB0aGF0IGluCi0JICAgV2luTlQvMmsvMjAw
MyBieSBkZWZhdWx0IGZpbGVzIHdoaWNoIGVnIGhhdmUgdGhlIHNhbWUgbmFtZSBleGNlcHQKLQkg
ICBmb3IgdGhlaXIgY2FzZSB3aWxsIG5vdCBiZSBkaXN0aW5ndWlzaGVkIGJ5IHRoZSBzdGFuZGFy
ZCB1dGlsaXRpZXMKLQkgICBhbmQgdGh1cyBhICJkZWwgZmlsZW5hbWUiIHdpbGwgZGVsZXRlIGJv
dGggImZpbGVuYW1lIiBhbmQgImZpbGVOYW1lIgotCSAgIHdpdGhvdXQgd2FybmluZy4gIEhvd2V2
ZXIgaWYgZm9yIGV4YW1wbGUgU2VydmljZXMgRm9yIFVuaXggKFNGVSkgYXJlCi0JICAgaW5zdGFs
bGVkIGFuZCB0aGUgY2FzZSBzZW5zaXRpdmUgb3B0aW9uIHdhcyBlbmFibGVkIGF0IGluc3RhbGxh
dGlvbgotCSAgIHRpbWUsIHRoZW4geW91IGNhbiBjcmVhdGUvYWNjZXNzL2RlbGV0ZSBzdWNoIGZp
bGVzLgotCSAgIE5vdGUgdGhhdCBldmVuIFNGVSBwbGFjZXMgcmVzdHJpY3Rpb25zIG9uIHRoZSBm
aWxlbmFtZXMgYmV5b25kIHRoZQotCSAgICdcMCcgYW5kICcvJyBhbmQgaW4gcGFydGljdWxhciB0
aGUgZm9sbG93aW5nIHNldCBvZiBjaGFyYWN0ZXJzIGlzCi0JICAgbm90IGFsbG93ZWQ6ICciJywg
Jy8nLCAnPCcsICc+JywgJ1wnLiAgQWxsIG90aGVyIGNoYXJhY3RlcnMsCi0JICAgaW5jbHVkaW5n
IHRoZSBvbmVzIG5vIGFsbG93ZWQgaW4gV0lOMzIgbmFtZXNwYWNlIGFyZSBhbGxvd2VkLgotCSAg
IFRlc3RlZCB3aXRoIFNGVSAzLjUgKHRoaXMgaXMgbm93IGZyZWUpIHJ1bm5pbmcgb24gV2luZG93
cyBYUC4gKi8KLQlGSUxFX05BTUVfV0lOMzIJCT0gMHgwMSwKLQkvKiBUaGUgc3RhbmRhcmQgV2lu
TlQvMmsgTlRGUyBsb25nIGZpbGVuYW1lcy4gQ2FzZSBpbnNlbnNpdGl2ZS4gIEFsbAotCSAgIFVu
aWNvZGUgY2hhcnMgZXhjZXB0OiAnXDAnLCAnIicsICcqJywgJy8nLCAnOicsICc8JywgJz4nLCAn
PycsICdcJywKLQkgICBhbmQgJ3wnLiAgRnVydGhlciwgbmFtZXMgY2Fubm90IGVuZCB3aXRoIGEg
Jy4nIG9yIGEgc3BhY2UuICovCi0JRklMRV9OQU1FX0RPUwkJPSAweDAyLAotCS8qIFRoZSBzdGFu
ZGFyZCBET1MgZmlsZW5hbWVzICg4LjMgZm9ybWF0KS4gVXBwZXJjYXNlIG9ubHkuICBBbGwgOC1i
aXQKLQkgICBjaGFyYWN0ZXJzIGdyZWF0ZXIgc3BhY2UsIGV4Y2VwdDogJyInLCAnKicsICcrJywg
JywnLCAnLycsICc6JywgJzsnLAotCSAgICc8JywgJz0nLCAnPicsICc/JywgYW5kICdcJy4gKi8K
LQlGSUxFX05BTUVfV0lOMzJfQU5EX0RPUwk9IDB4MDMsCi0JLyogMyBtZWFucyB0aGF0IGJvdGgg
dGhlIFdpbjMyIGFuZCB0aGUgRE9TIGZpbGVuYW1lcyBhcmUgaWRlbnRpY2FsIGFuZAotCSAgIGhl
bmNlIGhhdmUgYmVlbiBzYXZlZCBpbiB0aGlzIHNpbmdsZSBmaWxlbmFtZSByZWNvcmQuICovCi19
IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSk7Ci0KLXR5cGVkZWYgdTggRklMRV9OQU1FX1RZ
UEVfRkxBR1M7Ci0KLS8qCi0gKiBBdHRyaWJ1dGU6IEZpbGVuYW1lICgweDMwKS4KLSAqCi0gKiBO
T1RFOiBBbHdheXMgcmVzaWRlbnQuCi0gKiBOT1RFOiBBbGwgZmllbGRzLCBleGNlcHQgdGhlIHBh
cmVudF9kaXJlY3RvcnksIGFyZSBvbmx5IHVwZGF0ZWQgd2hlbiB0aGUKLSAqCSBmaWxlbmFtZSBp
cyBjaGFuZ2VkLiBVbnRpbCB0aGVuLCB0aGV5IGp1c3QgYmVjb21lIG91dCBvZiBzeW5jIHdpdGgK
LSAqCSByZWFsaXR5IGFuZCB0aGUgbW9yZSB1cCB0byBkYXRlIHZhbHVlcyBhcmUgcHJlc2VudCBp
biB0aGUgc3RhbmRhcmQKLSAqCSBpbmZvcm1hdGlvbiBhdHRyaWJ1dGUuCi0gKiBOT1RFOiBUaGVy
ZSBpcyBjb25mbGljdGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbWVhbmluZyBvZiBlYWNoIG9m
IHRoZSB0aW1lCi0gKgkgZmllbGRzIGJ1dCB0aGUgbWVhbmluZyBhcyBkZWZpbmVkIGJlbG93IGhh
cyBiZWVuIHZlcmlmaWVkIHRvIGJlCi0gKgkgY29ycmVjdCBieSBwcmFjdGljYWwgZXhwZXJpbWVu
dGF0aW9uIG9uIFdpbmRvd3MgTlQ0IFNQNmEgYW5kIGlzIGhlbmNlCi0gKgkgYXNzdW1lZCB0byBi
ZSB0aGUgb25lIGFuZCBvbmx5IGNvcnJlY3QgaW50ZXJwcmV0YXRpb24uCi0gKi8KLXR5cGVkZWYg
c3RydWN0IHsKLS8qaGV4IG9mcyovCi0vKiAgMCovCWxlTUZUX1JFRiBwYXJlbnRfZGlyZWN0b3J5
OwkvKiBEaXJlY3RvcnkgdGhpcyBmaWxlbmFtZSBpcwotCQkJCQkgICByZWZlcmVuY2VkIGZyb20u
ICovCi0vKiAgOCovCXNsZTY0IGNyZWF0aW9uX3RpbWU7CQkvKiBUaW1lIGZpbGUgd2FzIGNyZWF0
ZWQuICovCi0vKiAxMCovCXNsZTY0IGxhc3RfZGF0YV9jaGFuZ2VfdGltZTsJLyogVGltZSB0aGUg
ZGF0YSBhdHRyaWJ1dGUgd2FzIGxhc3QKLQkJCQkJICAgbW9kaWZpZWQuICovCi0vKiAxOCovCXNs
ZTY0IGxhc3RfbWZ0X2NoYW5nZV90aW1lOwkvKiBUaW1lIHRoaXMgbWZ0IHJlY29yZCB3YXMgbGFz
dAotCQkJCQkgICBtb2RpZmllZC4gKi8KLS8qIDIwKi8Jc2xlNjQgbGFzdF9hY2Nlc3NfdGltZTsJ
CS8qIFRpbWUgdGhpcyBtZnQgcmVjb3JkIHdhcyBsYXN0Ci0JCQkJCSAgIGFjY2Vzc2VkLiAqLwot
LyogMjgqLwlzbGU2NCBhbGxvY2F0ZWRfc2l6ZTsJCS8qIEJ5dGUgc2l6ZSBvZiBvbi1kaXNrIGFs
bG9jYXRlZCBzcGFjZQotCQkJCQkgICBmb3IgdGhlIHVubmFtZWQgZGF0YSBhdHRyaWJ1dGUuICBT
bwotCQkJCQkgICBmb3Igbm9ybWFsICREQVRBLCB0aGlzIGlzIHRoZQotCQkJCQkgICBhbGxvY2F0
ZWRfc2l6ZSBmcm9tIHRoZSB1bm5hbWVkCi0JCQkJCSAgICREQVRBIGF0dHJpYnV0ZSBhbmQgZm9y
IGNvbXByZXNzZWQKLQkJCQkJICAgYW5kL29yIHNwYXJzZSAkREFUQSwgdGhpcyBpcyB0aGUKLQkJ
CQkJICAgY29tcHJlc3NlZF9zaXplIGZyb20gdGhlIHVubmFtZWQKLQkJCQkJICAgJERBVEEgYXR0
cmlidXRlLiAgRm9yIGEgZGlyZWN0b3J5IG9yCi0JCQkJCSAgIG90aGVyIGlub2RlIHdpdGhvdXQg
YW4gdW5uYW1lZCAkREFUQQotCQkJCQkgICBhdHRyaWJ1dGUsIHRoaXMgaXMgYWx3YXlzIDAuICBO
T1RFOgotCQkJCQkgICBUaGlzIGlzIGEgbXVsdGlwbGUgb2YgdGhlIGNsdXN0ZXIKLQkJCQkJICAg
c2l6ZS4gKi8KLS8qIDMwKi8Jc2xlNjQgZGF0YV9zaXplOwkJLyogQnl0ZSBzaXplIG9mIGFjdHVh
bCBkYXRhIGluIHVubmFtZWQKLQkJCQkJICAgZGF0YSBhdHRyaWJ1dGUuICBGb3IgYSBkaXJlY3Rv
cnkgb3IKLQkJCQkJICAgb3RoZXIgaW5vZGUgd2l0aG91dCBhbiB1bm5hbWVkICREQVRBCi0JCQkJ
CSAgIGF0dHJpYnV0ZSwgdGhpcyBpcyBhbHdheXMgMC4gKi8KLS8qIDM4Ki8JRklMRV9BVFRSX0ZM
QUdTIGZpbGVfYXR0cmlidXRlczsJLyogRmxhZ3MgZGVzY3JpYmluZyB0aGUgZmlsZS4gKi8KLS8q
IDNjKi8JdW5pb24gewotCS8qIDNjKi8Jc3RydWN0IHsKLQkJLyogM2MqLwlsZTE2IHBhY2tlZF9l
YV9zaXplOwkvKiBTaXplIG9mIHRoZSBidWZmZXIgbmVlZGVkIHRvCi0JCQkJCQkgICBwYWNrIHRo
ZSBleHRlbmRlZCBhdHRyaWJ1dGVzCi0JCQkJCQkgICAoRUFzKSwgaWYgc3VjaCBhcmUgcHJlc2Vu
dC4qLwotCQkvKiAzZSovCWxlMTYgcmVzZXJ2ZWQ7CQkvKiBSZXNlcnZlZCBmb3IgYWxpZ25tZW50
LiAqLwotCQl9IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgZWE7Ci0JLyogM2MqLwlzdHJ1
Y3QgewotCQkvKiAzYyovCWxlMzIgcmVwYXJzZV9wb2ludF90YWc7CS8qIFR5cGUgb2YgcmVwYXJz
ZSBwb2ludCwKLQkJCQkJCSAgIHByZXNlbnQgb25seSBpbiByZXBhcnNlCi0JCQkJCQkgICBwb2lu
dHMgYW5kIG9ubHkgaWYgdGhlcmUgYXJlCi0JCQkJCQkgICBubyBFQXMuICovCi0JCX0gX19hdHRy
aWJ1dGVfXyAoKF9fcGFja2VkX18pKSBycDsKLQl9IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9f
KSkgdHlwZTsKLS8qIDQwKi8JdTggZmlsZV9uYW1lX2xlbmd0aDsJCQkvKiBMZW5ndGggb2YgZmls
ZSBuYW1lIGluCi0JCQkJCQkgICAoVW5pY29kZSkgY2hhcmFjdGVycy4gKi8KLS8qIDQxKi8JRklM
RV9OQU1FX1RZUEVfRkxBR1MgZmlsZV9uYW1lX3R5cGU7CS8qIE5hbWVzcGFjZSBvZiB0aGUgZmls
ZSBuYW1lLiovCi0vKiA0MiovCW50ZnNjaGFyIGZpbGVfbmFtZVswXTsJCQkvKiBGaWxlIG5hbWUg
aW4gVW5pY29kZS4gKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBGSUxFX05BTUVf
QVRUUjsKLQotLyoKLSAqIEdVSUQgc3RydWN0dXJlcyBzdG9yZSBnbG9iYWxseSB1bmlxdWUgaWRl
bnRpZmllcnMgKEdVSUQpLiBBIEdVSUQgaXMgYQotICogMTI4LWJpdCB2YWx1ZSBjb25zaXN0aW5n
IG9mIG9uZSBncm91cCBvZiBlaWdodCBoZXhhZGVjaW1hbCBkaWdpdHMsIGZvbGxvd2VkCi0gKiBi
eSB0aHJlZSBncm91cHMgb2YgZm91ciBoZXhhZGVjaW1hbCBkaWdpdHMgZWFjaCwgZm9sbG93ZWQg
Ynkgb25lIGdyb3VwIG9mCi0gKiB0d2VsdmUgaGV4YWRlY2ltYWwgZGlnaXRzLiBHVUlEcyBhcmUg
TWljcm9zb2Z0J3MgaW1wbGVtZW50YXRpb24gb2YgdGhlCi0gKiBkaXN0cmlidXRlZCBjb21wdXRp
bmcgZW52aXJvbm1lbnQgKERDRSkgdW5pdmVyc2FsbHkgdW5pcXVlIGlkZW50aWZpZXIgKFVVSUQp
LgotICogRXhhbXBsZSBvZiBhIEdVSUQ6Ci0gKgkxRjAxMDc2OC01QTczLUJDOTEtMDAxMEE1MjIx
NkE3Ci0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLQlsZTMyIGRhdGExOwkvKiBUaGUgZmlyc3QgZWln
aHQgaGV4YWRlY2ltYWwgZGlnaXRzIG9mIHRoZSBHVUlELiAqLwotCWxlMTYgZGF0YTI7CS8qIFRo
ZSBmaXJzdCBncm91cCBvZiBmb3VyIGhleGFkZWNpbWFsIGRpZ2l0cy4gKi8KLQlsZTE2IGRhdGEz
OwkvKiBUaGUgc2Vjb25kIGdyb3VwIG9mIGZvdXIgaGV4YWRlY2ltYWwgZGlnaXRzLiAqLwotCXU4
IGRhdGE0WzhdOwkvKiBUaGUgZmlyc3QgdHdvIGJ5dGVzIGFyZSB0aGUgdGhpcmQgZ3JvdXAgb2Yg
Zm91cgotCQkJICAgaGV4YWRlY2ltYWwgZGlnaXRzLiBUaGUgcmVtYWluaW5nIHNpeCBieXRlcyBh
cmUgdGhlCi0JCQkgICBmaW5hbCAxMiBoZXhhZGVjaW1hbCBkaWdpdHMuICovCi19IF9fYXR0cmli
dXRlX18gKChfX3BhY2tlZF9fKSkgR1VJRDsKLQotLyoKLSAqIEZJTEVfRXh0ZW5kLyRPYmpJZCBj
b250YWlucyBhbiBpbmRleCBuYW1lZCAkTy4gVGhpcyBpbmRleCBjb250YWlucyBhbGwKLSAqIG9i
amVjdF9pZHMgcHJlc2VudCBvbiB0aGUgdm9sdW1lIGFzIHRoZSBpbmRleCBrZXlzIGFuZCB0aGUg
Y29ycmVzcG9uZGluZwotICogbWZ0X3JlY29yZCBudW1iZXJzIGFzIHRoZSBpbmRleCBlbnRyeSBk
YXRhIHBhcnRzLiBUaGUgZGF0YSBwYXJ0IChkZWZpbmVkCi0gKiBiZWxvdykgYWxzbyBjb250YWlu
cyB0aHJlZSBvdGhlciBvYmplY3RfaWRzOgotICoJYmlydGhfdm9sdW1lX2lkIC0gb2JqZWN0X2lk
IG9mIEZJTEVfVm9sdW1lIG9uIHdoaWNoIHRoZSBmaWxlIHdhcyBmaXJzdAotICoJCQkgIGNyZWF0
ZWQuIE9wdGlvbmFsIChpLmUuIGNhbiBiZSB6ZXJvKS4KLSAqCWJpcnRoX29iamVjdF9pZCAtIG9i
amVjdF9pZCBvZiBmaWxlIHdoZW4gaXQgd2FzIGZpcnN0IGNyZWF0ZWQuIFVzdWFsbHkKLSAqCQkJ
ICBlcXVhbHMgdGhlIG9iamVjdF9pZC4gT3B0aW9uYWwgKGkuZS4gY2FuIGJlIHplcm8pLgotICoJ
ZG9tYWluX2lkCS0gUmVzZXJ2ZWQgKGFsd2F5cyB6ZXJvKS4KLSAqLwotdHlwZWRlZiBzdHJ1Y3Qg
ewotCWxlTUZUX1JFRiBtZnRfcmVmZXJlbmNlOy8qIE1mdCByZWNvcmQgY29udGFpbmluZyB0aGUg
b2JqZWN0X2lkIGluCi0JCQkJICAgdGhlIGluZGV4IGVudHJ5IGtleS4gKi8KLQl1bmlvbiB7Ci0J
CXN0cnVjdCB7Ci0JCQlHVUlEIGJpcnRoX3ZvbHVtZV9pZDsKLQkJCUdVSUQgYmlydGhfb2JqZWN0
X2lkOwotCQkJR1VJRCBkb21haW5faWQ7Ci0JCX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18p
KSBvcmlnaW47Ci0JCXU4IGV4dGVuZGVkX2luZm9bNDhdOwotCX0gX19hdHRyaWJ1dGVfXyAoKF9f
cGFja2VkX18pKSBvcHQ7Ci19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgT0JKX0lEX0lO
REVYX0RBVEE7Ci0KLS8qCi0gKiBBdHRyaWJ1dGU6IE9iamVjdCBpZCAoTlRGUyAzLjArKSAoMHg0
MCkuCi0gKgotICogTk9URTogQWx3YXlzIHJlc2lkZW50LgotICovCi10eXBlZGVmIHN0cnVjdCB7
Ci0JR1VJRCBvYmplY3RfaWQ7CQkJCS8qIFVuaXF1ZSBpZCBhc3NpZ25lZCB0byB0aGUKLQkJCQkJ
CSAgIGZpbGUuKi8KLQkvKiBUaGUgZm9sbG93aW5nIGZpZWxkcyBhcmUgb3B0aW9uYWwuIFRoZSBh
dHRyaWJ1dGUgdmFsdWUgc2l6ZSBpcyAxNgotCSAgIGJ5dGVzLCBpLmUuIHNpemVvZihHVUlEKSwg
aWYgdGhlc2UgYXJlIG5vdCBwcmVzZW50IGF0IGFsbC4gTm90ZSwKLQkgICB0aGUgZW50cmllcyBj
YW4gYmUgcHJlc2VudCBidXQgb25lIG9yIG1vcmUgKG9yIGFsbCkgY2FuIGJlIHplcm8KLQkgICBt
ZWFuaW5nIHRoYXQgdGhhdCBwYXJ0aWN1bGFyIHZhbHVlKHMpIGlzKGFyZSkgbm90IGRlZmluZWQu
ICovCi0JdW5pb24gewotCQlzdHJ1Y3QgewotCQkJR1VJRCBiaXJ0aF92b2x1bWVfaWQ7CS8qIFVu
aXF1ZSBpZCBvZiB2b2x1bWUgb24gd2hpY2gKLQkJCQkJCSAgIHRoZSBmaWxlIHdhcyBmaXJzdCBj
cmVhdGVkLiovCi0JCQlHVUlEIGJpcnRoX29iamVjdF9pZDsJLyogVW5pcXVlIGlkIG9mIGZpbGUg
d2hlbiBpdCB3YXMKLQkJCQkJCSAgIGZpcnN0IGNyZWF0ZWQuICovCi0JCQlHVUlEIGRvbWFpbl9p
ZDsJCS8qIFJlc2VydmVkLCB6ZXJvLiAqLwotCQl9IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9f
KSkgb3JpZ2luOwotCQl1OCBleHRlbmRlZF9pbmZvWzQ4XTsKLQl9IF9fYXR0cmlidXRlX18gKChf
X3BhY2tlZF9fKSkgb3B0OwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIE9CSkVDVF9J
RF9BVFRSOwotCi0vKgotICogVGhlIHByZS1kZWZpbmVkIElERU5USUZJRVJfQVVUSE9SSVRJRVMg
dXNlZCBhcyBTSURfSURFTlRJRklFUl9BVVRIT1JJVFkgaW4KLSAqIHRoZSBTSUQgc3RydWN0dXJl
IChzZWUgYmVsb3cpLgotICovCi0vL3R5cGVkZWYgZW51bSB7CQkJCQkvKiBTSUQgc3RyaW5nIHBy
ZWZpeC4gKi8KLS8vCVNFQ1VSSVRZX05VTExfU0lEX0FVVEhPUklUWQk9IHswLCAwLCAwLCAwLCAw
LCAwfSwJLyogUy0xLTAgKi8KLS8vCVNFQ1VSSVRZX1dPUkxEX1NJRF9BVVRIT1JJVFkJPSB7MCwg
MCwgMCwgMCwgMCwgMX0sCS8qIFMtMS0xICovCi0vLwlTRUNVUklUWV9MT0NBTF9TSURfQVVUSE9S
SVRZCT0gezAsIDAsIDAsIDAsIDAsIDJ9LAkvKiBTLTEtMiAqLwotLy8JU0VDVVJJVFlfQ1JFQVRP
Ul9TSURfQVVUSE9SSVRZCT0gezAsIDAsIDAsIDAsIDAsIDN9LAkvKiBTLTEtMyAqLwotLy8JU0VD
VVJJVFlfTk9OX1VOSVFVRV9BVVRIT1JJVFkJPSB7MCwgMCwgMCwgMCwgMCwgNH0sCS8qIFMtMS00
ICovCi0vLwlTRUNVUklUWV9OVF9TSURfQVVUSE9SSVRZCT0gezAsIDAsIDAsIDAsIDAsIDV9LAkv
KiBTLTEtNSAqLwotLy99IElERU5USUZJRVJfQVVUSE9SSVRJRVM7Ci0KLS8qCi0gKiBUaGVzZSBy
ZWxhdGl2ZSBpZGVudGlmaWVycyAoUklEcykgYXJlIHVzZWQgd2l0aCB0aGUgYWJvdmUgaWRlbnRp
ZmllcgotICogYXV0aG9yaXRpZXMgdG8gbWFrZSB1cCB1bml2ZXJzYWwgd2VsbC1rbm93biBTSURz
LgotICoKLSAqIE5vdGU6IFRoZSByZWxhdGl2ZSBpZGVudGlmaWVyIChSSUQpIHJlZmVycyB0byB0
aGUgcG9ydGlvbiBvZiBhIFNJRCwgd2hpY2gKLSAqIGlkZW50aWZpZXMgYSB1c2VyIG9yIGdyb3Vw
IGluIHJlbGF0aW9uIHRvIHRoZSBhdXRob3JpdHkgdGhhdCBpc3N1ZWQgdGhlIFNJRC4KLSAqIEZv
ciBleGFtcGxlLCB0aGUgdW5pdmVyc2FsIHdlbGwta25vd24gU0lEIENyZWF0b3IgT3duZXIgSUQg
KFMtMS0zLTApIGlzCi0gKiBtYWRlIHVwIG9mIHRoZSBpZGVudGlmaWVyIGF1dGhvcml0eSBTRUNV
UklUWV9DUkVBVE9SX1NJRF9BVVRIT1JJVFkgKDMpIGFuZAotICogdGhlIHJlbGF0aXZlIGlkZW50
aWZpZXIgU0VDVVJJVFlfQ1JFQVRPUl9PV05FUl9SSUQgKDApLgotICovCi10eXBlZGVmIGVudW0g
ewkJCQkJLyogSWRlbnRpZmllciBhdXRob3JpdHkuICovCi0JU0VDVVJJVFlfTlVMTF9SSUQJCSAg
PSAwLAkvKiBTLTEtMCAqLwotCVNFQ1VSSVRZX1dPUkxEX1JJRAkJICA9IDAsCS8qIFMtMS0xICov
Ci0JU0VDVVJJVFlfTE9DQUxfUklECQkgID0gMCwJLyogUy0xLTIgKi8KLQotCVNFQ1VSSVRZX0NS
RUFUT1JfT1dORVJfUklECSAgPSAwLAkvKiBTLTEtMyAqLwotCVNFQ1VSSVRZX0NSRUFUT1JfR1JP
VVBfUklECSAgPSAxLAkvKiBTLTEtMyAqLwotCi0JU0VDVVJJVFlfQ1JFQVRPUl9PV05FUl9TRVJW
RVJfUklEID0gMiwJLyogUy0xLTMgKi8KLQlTRUNVUklUWV9DUkVBVE9SX0dST1VQX1NFUlZFUl9S
SUQgPSAzLAkvKiBTLTEtMyAqLwotCi0JU0VDVVJJVFlfRElBTFVQX1JJRAkJICA9IDEsCi0JU0VD
VVJJVFlfTkVUV09SS19SSUQJCSAgPSAyLAotCVNFQ1VSSVRZX0JBVENIX1JJRAkJICA9IDMsCi0J
U0VDVVJJVFlfSU5URVJBQ1RJVkVfUklECSAgPSA0LAotCVNFQ1VSSVRZX1NFUlZJQ0VfUklECQkg
ID0gNiwKLQlTRUNVUklUWV9BTk9OWU1PVVNfTE9HT05fUklECSAgPSA3LAotCVNFQ1VSSVRZX1BS
T1hZX1JJRAkJICA9IDgsCi0JU0VDVVJJVFlfRU5URVJQUklTRV9DT05UUk9MTEVSU19SSUQ9OSwK
LQlTRUNVUklUWV9TRVJWRVJfTE9HT05fUklECSAgPSA5LAotCVNFQ1VSSVRZX1BSSU5DSVBBTF9T
RUxGX1JJRAkgID0gMHhhLAotCVNFQ1VSSVRZX0FVVEhFTlRJQ0FURURfVVNFUl9SSUQJICA9IDB4
YiwKLQlTRUNVUklUWV9SRVNUUklDVEVEX0NPREVfUklECSAgPSAweGMsCi0JU0VDVVJJVFlfVEVS
TUlOQUxfU0VSVkVSX1JJRAkgID0gMHhkLAotCi0JU0VDVVJJVFlfTE9HT05fSURTX1JJRAkJICA9
IDUsCi0JU0VDVVJJVFlfTE9HT05fSURTX1JJRF9DT1VOVAkgID0gMywKLQotCVNFQ1VSSVRZX0xP
Q0FMX1NZU1RFTV9SSUQJICA9IDB4MTIsCi0KLQlTRUNVUklUWV9OVF9OT05fVU5JUVVFCQkgID0g
MHgxNSwKLQotCVNFQ1VSSVRZX0JVSUxUSU5fRE9NQUlOX1JJRAkgID0gMHgyMCwKLQotCS8qCi0J
ICogV2VsbC1rbm93biBkb21haW4gcmVsYXRpdmUgc3ViLWF1dGhvcml0eSB2YWx1ZXMgKFJJRHMp
LgotCSAqLwotCi0JLyogVXNlcnMuICovCi0JRE9NQUlOX1VTRVJfUklEX0FETUlOCQkgID0gMHgx
ZjQsCi0JRE9NQUlOX1VTRVJfUklEX0dVRVNUCQkgID0gMHgxZjUsCi0JRE9NQUlOX1VTRVJfUklE
X0tSQlRHVAkJICA9IDB4MWY2LAotCi0JLyogR3JvdXBzLiAqLwotCURPTUFJTl9HUk9VUF9SSURf
QURNSU5TCQkgID0gMHgyMDAsCi0JRE9NQUlOX0dST1VQX1JJRF9VU0VSUwkJICA9IDB4MjAxLAot
CURPTUFJTl9HUk9VUF9SSURfR1VFU1RTCQkgID0gMHgyMDIsCi0JRE9NQUlOX0dST1VQX1JJRF9D
T01QVVRFUlMJICA9IDB4MjAzLAotCURPTUFJTl9HUk9VUF9SSURfQ09OVFJPTExFUlMJICA9IDB4
MjA0LAotCURPTUFJTl9HUk9VUF9SSURfQ0VSVF9BRE1JTlMJICA9IDB4MjA1LAotCURPTUFJTl9H
Uk9VUF9SSURfU0NIRU1BX0FETUlOUwkgID0gMHgyMDYsCi0JRE9NQUlOX0dST1VQX1JJRF9FTlRF
UlBSSVNFX0FETUlOUz0gMHgyMDcsCi0JRE9NQUlOX0dST1VQX1JJRF9QT0xJQ1lfQURNSU5TCSAg
PSAweDIwOCwKLQotCS8qIEFsaWFzZXMuICovCi0JRE9NQUlOX0FMSUFTX1JJRF9BRE1JTlMJCSAg
PSAweDIyMCwKLQlET01BSU5fQUxJQVNfUklEX1VTRVJTCQkgID0gMHgyMjEsCi0JRE9NQUlOX0FM
SUFTX1JJRF9HVUVTVFMJCSAgPSAweDIyMiwKLQlET01BSU5fQUxJQVNfUklEX1BPV0VSX1VTRVJT
CSAgPSAweDIyMywKLQotCURPTUFJTl9BTElBU19SSURfQUNDT1VOVF9PUFMJICA9IDB4MjI0LAot
CURPTUFJTl9BTElBU19SSURfU1lTVEVNX09QUwkgID0gMHgyMjUsCi0JRE9NQUlOX0FMSUFTX1JJ
RF9QUklOVF9PUFMJICA9IDB4MjI2LAotCURPTUFJTl9BTElBU19SSURfQkFDS1VQX09QUwkgID0g
MHgyMjcsCi0KLQlET01BSU5fQUxJQVNfUklEX1JFUExJQ0FUT1IJICA9IDB4MjI4LAotCURPTUFJ
Tl9BTElBU19SSURfUkFTX1NFUlZFUlMJICA9IDB4MjI5LAotCURPTUFJTl9BTElBU19SSURfUFJF
VzJLQ09NUEFDQ0VTUyA9IDB4MjJhLAotfSBSRUxBVElWRV9JREVOVElGSUVSUzsKLQotLyoKLSAq
IFRoZSB1bml2ZXJzYWwgd2VsbC1rbm93biBTSURzOgotICoKLSAqCU5VTExfU0lECQkJUy0xLTAt
MAotICoJV09STERfU0lECQkJUy0xLTEtMAotICoJTE9DQUxfU0lECQkJUy0xLTItMAotICoJQ1JF
QVRPUl9PV05FUl9TSUQJCVMtMS0zLTAKLSAqCUNSRUFUT1JfR1JPVVBfU0lECQlTLTEtMy0xCi0g
KglDUkVBVE9SX09XTkVSX1NFUlZFUl9TSUQJUy0xLTMtMgotICoJQ1JFQVRPUl9HUk9VUF9TRVJW
RVJfU0lECVMtMS0zLTMKLSAqCi0gKgkoTm9uLXVuaXF1ZSBJRHMpCQlTLTEtNAotICoKLSAqIE5U
IHdlbGwta25vd24gU0lEczoKLSAqCi0gKglOVF9BVVRIT1JJVFlfU0lECVMtMS01Ci0gKglESUFM
VVBfU0lECQlTLTEtNS0xCi0gKgotICoJTkVUV09SRF9TSUQJCVMtMS01LTIKLSAqCUJBVENIX1NJ
RAkJUy0xLTUtMwotICoJSU5URVJBQ1RJVkVfU0lECQlTLTEtNS00Ci0gKglTRVJWSUNFX1NJRAkJ
Uy0xLTUtNgotICoJQU5PTllNT1VTX0xPR09OX1NJRAlTLTEtNS03CQkoYWthIG51bGwgbG9nb24g
c2Vzc2lvbikKLSAqCVBST1hZX1NJRAkJUy0xLTUtOAotICoJU0VSVkVSX0xPR09OX1NJRAlTLTEt
NS05CQkoYWthIGRvbWFpbiBjb250cm9sbGVyIGFjY291bnQpCi0gKglTRUxGX1NJRAkJUy0xLTUt
MTAJKHNlbGYgUklEKQotICoJQVVUSEVOVElDQVRFRF9VU0VSX1NJRAlTLTEtNS0xMQotICoJUkVT
VFJJQ1RFRF9DT0RFX1NJRAlTLTEtNS0xMgkocnVubmluZyByZXN0cmljdGVkIGNvZGUpCi0gKglU
RVJNSU5BTF9TRVJWRVJfU0lECVMtMS01LTEzCShydW5uaW5nIG9uIHRlcm1pbmFsIHNlcnZlcikK
LSAqCi0gKgkoTG9nb24gSURzKQkJUy0xLTUtNS1YLVkKLSAqCi0gKgkoTlQgbm9uLXVuaXF1ZSBJ
RHMpCVMtMS01LTB4MTUtLi4uCi0gKgotICoJKEJ1aWx0LWluIGRvbWFpbikJUy0xLTUtMHgyMAot
ICovCi0KLS8qCi0gKiBUaGUgU0lEX0lERU5USUZJRVJfQVVUSE9SSVRZIGlzIGEgNDgtYml0IHZh
bHVlIHVzZWQgaW4gdGhlIFNJRCBzdHJ1Y3R1cmUuCi0gKgotICogTk9URTogVGhpcyBpcyBzdG9y
ZWQgYXMgYSBiaWcgZW5kaWFuIG51bWJlciwgaGVuY2UgdGhlIGhpZ2hfcGFydCBjb21lcwotICog
YmVmb3JlIHRoZSBsb3dfcGFydC4KLSAqLwotdHlwZWRlZiB1bmlvbiB7Ci0Jc3RydWN0IHsKLQkJ
dTE2IGhpZ2hfcGFydDsJLyogSGlnaCAxNi1iaXRzLiAqLwotCQl1MzIgbG93X3BhcnQ7CS8qIExv
dyAzMi1iaXRzLiAqLwotCX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBwYXJ0czsKLQl1
OCB2YWx1ZVs2XTsJCS8qIFZhbHVlIGFzIGluZGl2aWR1YWwgYnl0ZXMuICovCi19IF9fYXR0cmli
dXRlX18gKChfX3BhY2tlZF9fKSkgU0lEX0lERU5USUZJRVJfQVVUSE9SSVRZOwotCi0vKgotICog
VGhlIFNJRCBzdHJ1Y3R1cmUgaXMgYSB2YXJpYWJsZS1sZW5ndGggc3RydWN0dXJlIHVzZWQgdG8g
dW5pcXVlbHkgaWRlbnRpZnkKLSAqIHVzZXJzIG9yIGdyb3Vwcy4gU0lEIHN0YW5kcyBmb3Igc2Vj
dXJpdHkgaWRlbnRpZmllci4KLSAqCi0gKiBUaGUgc3RhbmRhcmQgdGV4dHVhbCByZXByZXNlbnRh
dGlvbiBvZiB0aGUgU0lEIGlzIG9mIHRoZSBmb3JtOgotICoJUy1SLUktUy1TLi4uCi0gKiBXaGVy
ZToKLSAqICAgIC0gVGhlIGZpcnN0ICJTIiBpcyB0aGUgbGl0ZXJhbCBjaGFyYWN0ZXIgJ1MnIGlk
ZW50aWZ5aW5nIHRoZSBmb2xsb3dpbmcKLSAqCWRpZ2l0cyBhcyBhIFNJRC4KLSAqICAgIC0gUiBp
cyB0aGUgcmV2aXNpb24gbGV2ZWwgb2YgdGhlIFNJRCBleHByZXNzZWQgYXMgYSBzZXF1ZW5jZSBv
ZiBkaWdpdHMKLSAqCWVpdGhlciBpbiBkZWNpbWFsIG9yIGhleGFkZWNpbWFsIChpZiB0aGUgbGF0
ZXIsIHByZWZpeGVkIGJ5ICIweCIpLgotICogICAgLSBJIGlzIHRoZSA0OC1iaXQgaWRlbnRpZmll
cl9hdXRob3JpdHksIGV4cHJlc3NlZCBhcyBkaWdpdHMgYXMgUiBhYm92ZS4KLSAqICAgIC0gUy4u
LiBpcyBvbmUgb3IgbW9yZSBzdWJfYXV0aG9yaXR5IHZhbHVlcywgZXhwcmVzc2VkIGFzIGRpZ2l0
cyBhcyBhYm92ZS4KLSAqCi0gKiBFeGFtcGxlIFNJRDsgdGhlIGRvbWFpbi1yZWxhdGl2ZSBTSUQg
b2YgdGhlIGxvY2FsIEFkbWluaXN0cmF0b3JzIGdyb3VwIG9uCi0gKiBXaW5kb3dzIE5ULzJrOgot
ICoJUy0xLTUtMzItNTQ0Ci0gKiBUaGlzIHRyYW5zbGF0ZXMgdG8gYSBTSUQgd2l0aDoKLSAqCXJl
dmlzaW9uID0gMSwKLSAqCXN1Yl9hdXRob3JpdHlfY291bnQgPSAyLAotICoJaWRlbnRpZmllcl9h
dXRob3JpdHkgPSB7MCwwLDAsMCwwLDV9LAkvLyBTRUNVUklUWV9OVF9BVVRIT1JJVFkKLSAqCXN1
Yl9hdXRob3JpdHlbMF0gPSAzMiwJCQkvLyBTRUNVUklUWV9CVUlMVElOX0RPTUFJTl9SSUQKLSAq
CXN1Yl9hdXRob3JpdHlbMV0gPSA1NDQJCQkvLyBET01BSU5fQUxJQVNfUklEX0FETUlOUwotICov
Ci10eXBlZGVmIHN0cnVjdCB7Ci0JdTggcmV2aXNpb247Ci0JdTggc3ViX2F1dGhvcml0eV9jb3Vu
dDsKLQlTSURfSURFTlRJRklFUl9BVVRIT1JJVFkgaWRlbnRpZmllcl9hdXRob3JpdHk7Ci0JbGUz
MiBzdWJfYXV0aG9yaXR5WzFdOwkJLyogQXQgbGVhc3Qgb25lIHN1Yl9hdXRob3JpdHkuICovCi19
IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgU0lEOwotCi0vKgotICogQ3VycmVudCBjb25z
dGFudHMgZm9yIFNJRHMuCi0gKi8KLXR5cGVkZWYgZW51bSB7Ci0JU0lEX1JFVklTSU9OCQkJPSAg
MSwJLyogQ3VycmVudCByZXZpc2lvbiBsZXZlbC4gKi8KLQlTSURfTUFYX1NVQl9BVVRIT1JJVElF
UwkJPSAxNSwJLyogTWF4aW11bSBudW1iZXIgb2YgdGhvc2UuICovCi0JU0lEX1JFQ09NTUVOREVE
X1NVQl9BVVRIT1JJVElFUwk9ICAxLAkvKiBXaWxsIGNoYW5nZSB0byBhcm91bmQgNiBpbgotCQkJ
CQkJICAgYSBmdXR1cmUgcmV2aXNpb24uICovCi19IFNJRF9DT05TVEFOVFM7Ci0KLS8qCi0gKiBU
aGUgcHJlZGVmaW5lZCBBQ0UgdHlwZXMgKDgtYml0LCBzZWUgYmVsb3cpLgotICovCi1lbnVtIHsK
LQlBQ0NFU1NfTUlOX01TX0FDRV9UWVBFCQk9IDAsCi0JQUNDRVNTX0FMTE9XRURfQUNFX1RZUEUJ
CT0gMCwKLQlBQ0NFU1NfREVOSUVEX0FDRV9UWVBFCQk9IDEsCi0JU1lTVEVNX0FVRElUX0FDRV9U
WVBFCQk9IDIsCi0JU1lTVEVNX0FMQVJNX0FDRV9UWVBFCQk9IDMsIC8qIE5vdCBpbXBsZW1lbnRl
ZCBhcyBvZiBXaW4yay4gKi8KLQlBQ0NFU1NfTUFYX01TX1YyX0FDRV9UWVBFCT0gMywKLQotCUFD
Q0VTU19BTExPV0VEX0NPTVBPVU5EX0FDRV9UWVBFPSA0LAotCUFDQ0VTU19NQVhfTVNfVjNfQUNF
X1RZUEUJPSA0LAotCi0JLyogVGhlIGZvbGxvd2luZyBhcmUgV2luMmsgb25seS4gKi8KLQlBQ0NF
U1NfTUlOX01TX09CSkVDVF9BQ0VfVFlQRQk9IDUsCi0JQUNDRVNTX0FMTE9XRURfT0JKRUNUX0FD
RV9UWVBFCT0gNSwKLQlBQ0NFU1NfREVOSUVEX09CSkVDVF9BQ0VfVFlQRQk9IDYsCi0JU1lTVEVN
X0FVRElUX09CSkVDVF9BQ0VfVFlQRQk9IDcsCi0JU1lTVEVNX0FMQVJNX09CSkVDVF9BQ0VfVFlQ
RQk9IDgsCi0JQUNDRVNTX01BWF9NU19PQkpFQ1RfQUNFX1RZUEUJPSA4LAotCi0JQUNDRVNTX01B
WF9NU19WNF9BQ0VfVFlQRQk9IDgsCi0KLQkvKiBUaGlzIG9uZSBpcyBmb3IgV2luTlQvMmsuICov
Ci0JQUNDRVNTX01BWF9NU19BQ0VfVFlQRQkJPSA4LAotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNr
ZWRfXykpOwotCi10eXBlZGVmIHU4IEFDRV9UWVBFUzsKLQotLyoKLSAqIFRoZSBBQ0UgZmxhZ3Mg
KDgtYml0KSBmb3IgYXVkaXQgYW5kIGluaGVyaXRhbmNlIChzZWUgYmVsb3cpLgotICoKLSAqIFNV
Q0NFU1NGVUxfQUNDRVNTX0FDRV9GTEFHIGlzIG9ubHkgdXNlZCB3aXRoIHN5c3RlbSBhdWRpdCBh
bmQgYWxhcm0gQUNFCi0gKiB0eXBlcyB0byBpbmRpY2F0ZSB0aGF0IGEgbWVzc2FnZSBpcyBnZW5l
cmF0ZWQgKGluIFdpbmRvd3MhKSBmb3Igc3VjY2Vzc2Z1bAotICogYWNjZXNzZXMuCi0gKgotICog
RkFJTEVEX0FDQ0VTU19BQ0VfRkxBRyBpcyBvbmx5IHVzZWQgd2l0aCBzeXN0ZW0gYXVkaXQgYW5k
IGFsYXJtIEFDRSB0eXBlcwotICogdG8gaW5kaWNhdGUgdGhhdCBhIG1lc3NhZ2UgaXMgZ2VuZXJh
dGVkIChpbiBXaW5kb3dzISkgZm9yIGZhaWxlZCBhY2Nlc3Nlcy4KLSAqLwotZW51bSB7Ci0JLyog
VGhlIGluaGVyaXRhbmNlIGZsYWdzLiAqLwotCU9CSkVDVF9JTkhFUklUX0FDRQkJPSAweDAxLAot
CUNPTlRBSU5FUl9JTkhFUklUX0FDRQkJPSAweDAyLAotCU5PX1BST1BBR0FURV9JTkhFUklUX0FD
RQk9IDB4MDQsCi0JSU5IRVJJVF9PTkxZX0FDRQkJPSAweDA4LAotCUlOSEVSSVRFRF9BQ0UJCQk9
IDB4MTAsCS8qIFdpbjJrIG9ubHkuICovCi0JVkFMSURfSU5IRVJJVF9GTEFHUwkJPSAweDFmLAot
Ci0JLyogVGhlIGF1ZGl0IGZsYWdzLiAqLwotCVNVQ0NFU1NGVUxfQUNDRVNTX0FDRV9GTEFHCT0g
MHg0MCwKLQlGQUlMRURfQUNDRVNTX0FDRV9GTEFHCQk9IDB4ODAsCi19IF9fYXR0cmlidXRlX18g
KChfX3BhY2tlZF9fKSk7Ci0KLXR5cGVkZWYgdTggQUNFX0ZMQUdTOwotCi0vKgotICogQW4gQUNF
IGlzIGFuIGFjY2Vzcy1jb250cm9sIGVudHJ5IGluIGFuIGFjY2Vzcy1jb250cm9sIGxpc3QgKEFD
TCkuCi0gKiBBbiBBQ0UgZGVmaW5lcyBhY2Nlc3MgdG8gYW4gb2JqZWN0IGZvciBhIHNwZWNpZmlj
IHVzZXIgb3IgZ3JvdXAgb3IgZGVmaW5lcwotICogdGhlIHR5cGVzIG9mIGFjY2VzcyB0aGF0IGdl
bmVyYXRlIHN5c3RlbS1hZG1pbmlzdHJhdGlvbiBtZXNzYWdlcyBvciBhbGFybXMKLSAqIGZvciBh
IHNwZWNpZmljIHVzZXIgb3IgZ3JvdXAuIFRoZSB1c2VyIG9yIGdyb3VwIGlzIGlkZW50aWZpZWQg
YnkgYSBzZWN1cml0eQotICogaWRlbnRpZmllciAoU0lEKS4KLSAqCi0gKiBFYWNoIEFDRSBzdGFy
dHMgd2l0aCBhbiBBQ0VfSEVBREVSIHN0cnVjdHVyZSAoYWxpZ25lZCBvbiA0LWJ5dGUgYm91bmRh
cnkpLAotICogd2hpY2ggc3BlY2lmaWVzIHRoZSB0eXBlIGFuZCBzaXplIG9mIHRoZSBBQ0UuIFRo
ZSBmb3JtYXQgb2YgdGhlIHN1YnNlcXVlbnQKLSAqIGRhdGEgZGVwZW5kcyBvbiB0aGUgQUNFIHR5
cGUuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLS8qT2ZzKi8KLS8qICAwKi8JQUNFX1RZUEVTIHR5
cGU7CQkvKiBUeXBlIG9mIHRoZSBBQ0UuICovCi0vKiAgMSovCUFDRV9GTEFHUyBmbGFnczsJLyog
RmxhZ3MgZGVzY3JpYmluZyB0aGUgQUNFLiAqLwotLyogIDIqLwlsZTE2IHNpemU7CQkvKiBTaXpl
IGluIGJ5dGVzIG9mIHRoZSBBQ0UuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkg
QUNFX0hFQURFUjsKLQotLyoKLSAqIFRoZSBhY2Nlc3MgbWFzayAoMzItYml0KS4gRGVmaW5lcyB0
aGUgYWNjZXNzIHJpZ2h0cy4KLSAqCi0gKiBUaGUgc3BlY2lmaWMgcmlnaHRzIChiaXRzIDAgdG8g
MTUpLiAgVGhlc2UgZGVwZW5kIG9uIHRoZSB0eXBlIG9mIHRoZSBvYmplY3QKLSAqIGJlaW5nIHNl
Y3VyZWQgYnkgdGhlIEFDRS4KLSAqLwotZW51bSB7Ci0JLyogU3BlY2lmaWMgcmlnaHRzIGZvciBm
aWxlcyBhbmQgZGlyZWN0b3JpZXMgYXJlIGFzIGZvbGxvd3M6ICovCi0KLQkvKiBSaWdodCB0byBy
ZWFkIGRhdGEgZnJvbSB0aGUgZmlsZS4gKEZJTEUpICovCi0JRklMRV9SRUFEX0RBVEEJCQk9IGNw
dV90b19sZTMyKDB4MDAwMDAwMDEpLAotCS8qIFJpZ2h0IHRvIGxpc3QgY29udGVudHMgb2YgYSBk
aXJlY3RvcnkuIChESVJFQ1RPUlkpICovCi0JRklMRV9MSVNUX0RJUkVDVE9SWQkJPSBjcHVfdG9f
bGUzMigweDAwMDAwMDAxKSwKLQotCS8qIFJpZ2h0IHRvIHdyaXRlIGRhdGEgdG8gdGhlIGZpbGUu
IChGSUxFKSAqLwotCUZJTEVfV1JJVEVfREFUQQkJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwMiks
Ci0JLyogUmlnaHQgdG8gY3JlYXRlIGEgZmlsZSBpbiB0aGUgZGlyZWN0b3J5LiAoRElSRUNUT1JZ
KSAqLwotCUZJTEVfQUREX0ZJTEUJCQk9IGNwdV90b19sZTMyKDB4MDAwMDAwMDIpLAotCi0JLyog
UmlnaHQgdG8gYXBwZW5kIGRhdGEgdG8gdGhlIGZpbGUuIChGSUxFKSAqLwotCUZJTEVfQVBQRU5E
X0RBVEEJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwNCksCi0JLyogUmlnaHQgdG8gY3JlYXRlIGEg
c3ViZGlyZWN0b3J5LiAoRElSRUNUT1JZKSAqLwotCUZJTEVfQUREX1NVQkRJUkVDVE9SWQkJPSBj
cHVfdG9fbGUzMigweDAwMDAwMDA0KSwKLQotCS8qIFJpZ2h0IHRvIHJlYWQgZXh0ZW5kZWQgYXR0
cmlidXRlcy4gKEZJTEUvRElSRUNUT1JZKSAqLwotCUZJTEVfUkVBRF9FQQkJCT0gY3B1X3RvX2xl
MzIoMHgwMDAwMDAwOCksCi0KLQkvKiBSaWdodCB0byB3cml0ZSBleHRlbmRlZCBhdHRyaWJ1dGVz
LiAoRklMRS9ESVJFQ1RPUlkpICovCi0JRklMRV9XUklURV9FQQkJCT0gY3B1X3RvX2xlMzIoMHgw
MDAwMDAxMCksCi0KLQkvKiBSaWdodCB0byBleGVjdXRlIGEgZmlsZS4gKEZJTEUpICovCi0JRklM
RV9FWEVDVVRFCQkJPSBjcHVfdG9fbGUzMigweDAwMDAwMDIwKSwKLQkvKiBSaWdodCB0byB0cmF2
ZXJzZSB0aGUgZGlyZWN0b3J5LiAoRElSRUNUT1JZKSAqLwotCUZJTEVfVFJBVkVSU0UJCQk9IGNw
dV90b19sZTMyKDB4MDAwMDAwMjApLAotCi0JLyoKLQkgKiBSaWdodCB0byBkZWxldGUgYSBkaXJl
Y3RvcnkgYW5kIGFsbCB0aGUgZmlsZXMgaXQgY29udGFpbnMgKGl0cwotCSAqIGNoaWxkcmVuKSwg
ZXZlbiBpZiB0aGUgZmlsZXMgYXJlIHJlYWQtb25seS4gKERJUkVDVE9SWSkKLQkgKi8KLQlGSUxF
X0RFTEVURV9DSElMRAkJPSBjcHVfdG9fbGUzMigweDAwMDAwMDQwKSwKLQotCS8qIFJpZ2h0IHRv
IHJlYWQgZmlsZSBhdHRyaWJ1dGVzLiAoRklMRS9ESVJFQ1RPUlkpICovCi0JRklMRV9SRUFEX0FU
VFJJQlVURVMJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDA4MCksCi0KLQkvKiBSaWdodCB0byBjaGFu
Z2UgZmlsZSBhdHRyaWJ1dGVzLiAoRklMRS9ESVJFQ1RPUlkpICovCi0JRklMRV9XUklURV9BVFRS
SUJVVEVTCQk9IGNwdV90b19sZTMyKDB4MDAwMDAxMDApLAotCi0JLyoKLQkgKiBUaGUgc3RhbmRh
cmQgcmlnaHRzIChiaXRzIDE2IHRvIDIzKS4gIFRoZXNlIGFyZSBpbmRlcGVuZGVudCBvZiB0aGUK
LQkgKiB0eXBlIG9mIG9iamVjdCBiZWluZyBzZWN1cmVkLgotCSAqLwotCi0JLyogUmlnaHQgdG8g
ZGVsZXRlIHRoZSBvYmplY3QuICovCi0JREVMRVRFCQkJCT0gY3B1X3RvX2xlMzIoMHgwMDAxMDAw
MCksCi0KLQkvKgotCSAqIFJpZ2h0IHRvIHJlYWQgdGhlIGluZm9ybWF0aW9uIGluIHRoZSBvYmpl
Y3QncyBzZWN1cml0eSBkZXNjcmlwdG9yLAotCSAqIG5vdCBpbmNsdWRpbmcgdGhlIGluZm9ybWF0
aW9uIGluIHRoZSBTQUNMLCBpLmUuIHJpZ2h0IHRvIHJlYWQgdGhlCi0JICogc2VjdXJpdHkgZGVz
Y3JpcHRvciBhbmQgb3duZXIuCi0JICovCi0JUkVBRF9DT05UUk9MCQkJPSBjcHVfdG9fbGUzMigw
eDAwMDIwMDAwKSwKLQotCS8qIFJpZ2h0IHRvIG1vZGlmeSB0aGUgREFDTCBpbiB0aGUgb2JqZWN0
J3Mgc2VjdXJpdHkgZGVzY3JpcHRvci4gKi8KLQlXUklURV9EQUMJCQk9IGNwdV90b19sZTMyKDB4
MDAwNDAwMDApLAotCi0JLyogUmlnaHQgdG8gY2hhbmdlIHRoZSBvd25lciBpbiB0aGUgb2JqZWN0
J3Mgc2VjdXJpdHkgZGVzY3JpcHRvci4gKi8KLQlXUklURV9PV05FUgkJCT0gY3B1X3RvX2xlMzIo
MHgwMDA4MDAwMCksCi0KLQkvKgotCSAqIFJpZ2h0IHRvIHVzZSB0aGUgb2JqZWN0IGZvciBzeW5j
aHJvbml6YXRpb24uICBFbmFibGVzIGEgcHJvY2VzcyB0bwotCSAqIHdhaXQgdW50aWwgdGhlIG9i
amVjdCBpcyBpbiB0aGUgc2lnbmFsbGVkIHN0YXRlLiAgU29tZSBvYmplY3QgdHlwZXMKLQkgKiBk
byBub3Qgc3VwcG9ydCB0aGlzIGFjY2VzcyByaWdodC4KLQkgKi8KLQlTWU5DSFJPTklaRQkJCT0g
Y3B1X3RvX2xlMzIoMHgwMDEwMDAwMCksCi0KLQkvKgotCSAqIFRoZSBmb2xsb3dpbmcgU1RBTkRB
UkRfUklHSFRTXyogYXJlIGNvbWJpbmF0aW9ucyBvZiB0aGUgYWJvdmUgZm9yCi0JICogY29udmVu
aWVuY2UgYW5kIGFyZSBkZWZpbmVkIGJ5IHRoZSBXaW4zMiBBUEkuCi0JICovCi0KLQkvKiBUaGVz
ZSBhcmUgY3VycmVudGx5IGRlZmluZWQgdG8gUkVBRF9DT05UUk9MLiAqLwotCVNUQU5EQVJEX1JJ
R0hUU19SRUFECQk9IGNwdV90b19sZTMyKDB4MDAwMjAwMDApLAotCVNUQU5EQVJEX1JJR0hUU19X
UklURQkJPSBjcHVfdG9fbGUzMigweDAwMDIwMDAwKSwKLQlTVEFOREFSRF9SSUdIVFNfRVhFQ1VU
RQkJPSBjcHVfdG9fbGUzMigweDAwMDIwMDAwKSwKLQotCS8qIENvbWJpbmVzIERFTEVURSwgUkVB
RF9DT05UUk9MLCBXUklURV9EQUMsIGFuZCBXUklURV9PV05FUiBhY2Nlc3MuICovCi0JU1RBTkRB
UkRfUklHSFRTX1JFUVVJUkVECT0gY3B1X3RvX2xlMzIoMHgwMDBmMDAwMCksCi0KLQkvKgotCSAq
IENvbWJpbmVzIERFTEVURSwgUkVBRF9DT05UUk9MLCBXUklURV9EQUMsIFdSSVRFX09XTkVSLCBh
bmQKLQkgKiBTWU5DSFJPTklaRSBhY2Nlc3MuCi0JICovCi0JU1RBTkRBUkRfUklHSFRTX0FMTAkJ
PSBjcHVfdG9fbGUzMigweDAwMWYwMDAwKSwKLQotCS8qCi0JICogVGhlIGFjY2VzcyBzeXN0ZW0g
QUNMIGFuZCBtYXhpbXVtIGFsbG93ZWQgYWNjZXNzIHR5cGVzIChiaXRzIDI0IHRvCi0JICogMjUs
IGJpdHMgMjYgdG8gMjcgYXJlIHJlc2VydmVkKS4KLQkgKi8KLQlBQ0NFU1NfU1lTVEVNX1NFQ1VS
SVRZCQk9IGNwdV90b19sZTMyKDB4MDEwMDAwMDApLAotCU1BWElNVU1fQUxMT1dFRAkJCT0gY3B1
X3RvX2xlMzIoMHgwMjAwMDAwMCksCi0KLQkvKgotCSAqIFRoZSBnZW5lcmljIHJpZ2h0cyAoYml0
cyAyOCB0byAzMSkuICBUaGVzZSBtYXAgb250byB0aGUgc3RhbmRhcmQgYW5kCi0JICogc3BlY2lm
aWMgcmlnaHRzLgotCSAqLwotCi0JLyogUmVhZCwgd3JpdGUsIGFuZCBleGVjdXRlIGFjY2Vzcy4g
Ki8KLQlHRU5FUklDX0FMTAkJCT0gY3B1X3RvX2xlMzIoMHgxMDAwMDAwMCksCi0KLQkvKiBFeGVj
dXRlIGFjY2Vzcy4gKi8KLQlHRU5FUklDX0VYRUNVVEUJCQk9IGNwdV90b19sZTMyKDB4MjAwMDAw
MDApLAotCi0JLyoKLQkgKiBXcml0ZSBhY2Nlc3MuICBGb3IgZmlsZXMsIHRoaXMgbWFwcyBvbnRv
OgotCSAqCUZJTEVfQVBQRU5EX0RBVEEgfCBGSUxFX1dSSVRFX0FUVFJJQlVURVMgfCBGSUxFX1dS
SVRFX0RBVEEgfAotCSAqCUZJTEVfV1JJVEVfRUEgfCBTVEFOREFSRF9SSUdIVFNfV1JJVEUgfCBT
WU5DSFJPTklaRQotCSAqIEZvciBkaXJlY3RvcmllcywgdGhlIG1hcHBpbmcgaGFzIHRoZSBzYW1l
IG51bWVyaWNhbCB2YWx1ZS4gIFNlZQotCSAqIGFib3ZlIGZvciB0aGUgZGVzY3JpcHRpb25zIG9m
IHRoZSByaWdodHMgZ3JhbnRlZC4KLQkgKi8KLQlHRU5FUklDX1dSSVRFCQkJPSBjcHVfdG9fbGUz
MigweDQwMDAwMDAwKSwKLQotCS8qCi0JICogUmVhZCBhY2Nlc3MuICBGb3IgZmlsZXMsIHRoaXMg
bWFwcyBvbnRvOgotCSAqCUZJTEVfUkVBRF9BVFRSSUJVVEVTIHwgRklMRV9SRUFEX0RBVEEgfCBG
SUxFX1JFQURfRUEgfAotCSAqCVNUQU5EQVJEX1JJR0hUU19SRUFEIHwgU1lOQ0hST05JWkUKLQkg
KiBGb3IgZGlyZWN0b3JpZXMsIHRoZSBtYXBwaW5nIGhhcyB0aGUgc2FtZSBudW1iZXJpY2FsIHZh
bHVlLiAgU2VlCi0JICogYWJvdmUgZm9yIHRoZSBkZXNjcmlwdGlvbnMgb2YgdGhlIHJpZ2h0cyBn
cmFudGVkLgotCSAqLwotCUdFTkVSSUNfUkVBRAkJCT0gY3B1X3RvX2xlMzIoMHg4MDAwMDAwMCks
Ci19OwotCi10eXBlZGVmIGxlMzIgQUNDRVNTX01BU0s7Ci0KLS8qCi0gKiBUaGUgZ2VuZXJpYyBt
YXBwaW5nIGFycmF5LiBVc2VkIHRvIGRlbm90ZSB0aGUgbWFwcGluZyBvZiBlYWNoIGdlbmVyaWMK
LSAqIGFjY2VzcyByaWdodCB0byBhIHNwZWNpZmljIGFjY2VzcyBtYXNrLgotICoKLSAqIEZJWE1F
OiBXaGF0IGV4YWN0bHkgaXMgdGhpcyBhbmQgd2hhdCBpcyBpdCBmb3I/IChBSUEpCi0gKi8KLXR5
cGVkZWYgc3RydWN0IHsKLQlBQ0NFU1NfTUFTSyBnZW5lcmljX3JlYWQ7Ci0JQUNDRVNTX01BU0sg
Z2VuZXJpY193cml0ZTsKLQlBQ0NFU1NfTUFTSyBnZW5lcmljX2V4ZWN1dGU7Ci0JQUNDRVNTX01B
U0sgZ2VuZXJpY19hbGw7Ci19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgR0VORVJJQ19N
QVBQSU5HOwotCi0vKgotICogVGhlIHByZWRlZmluZWQgQUNFIHR5cGUgc3RydWN0dXJlcyBhcmUg
YXMgZGVmaW5lZCBiZWxvdy4KLSAqLwotCi0vKgotICogQUNDRVNTX0FMTE9XRURfQUNFLCBBQ0NF
U1NfREVOSUVEX0FDRSwgU1lTVEVNX0FVRElUX0FDRSwgU1lTVEVNX0FMQVJNX0FDRQotICovCi10
eXBlZGVmIHN0cnVjdCB7Ci0vKiAgMAlBQ0VfSEVBREVSOyAtLSBVbmZvbGRlZCBoZXJlIGFzIGdj
YyBkb2Vzbid0IGxpa2UgdW5uYW1lZCBzdHJ1Y3RzLiAqLwotCUFDRV9UWVBFUyB0eXBlOwkJLyog
VHlwZSBvZiB0aGUgQUNFLiAqLwotCUFDRV9GTEFHUyBmbGFnczsJLyogRmxhZ3MgZGVzY3JpYmlu
ZyB0aGUgQUNFLiAqLwotCWxlMTYgc2l6ZTsJCS8qIFNpemUgaW4gYnl0ZXMgb2YgdGhlIEFDRS4g
Ki8KLS8qICA0Ki8JQUNDRVNTX01BU0sgbWFzazsJLyogQWNjZXNzIG1hc2sgYXNzb2NpYXRlZCB3
aXRoIHRoZSBBQ0UuICovCi0KLS8qICA4Ki8JU0lEIHNpZDsJCS8qIFRoZSBTSUQgYXNzb2NpYXRl
ZCB3aXRoIHRoZSBBQ0UuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgQUNDRVNT
X0FMTE9XRURfQUNFLCBBQ0NFU1NfREVOSUVEX0FDRSwKLQkJCSAgICAgICBTWVNURU1fQVVESVRf
QUNFLCBTWVNURU1fQUxBUk1fQUNFOwotCi0vKgotICogVGhlIG9iamVjdCBBQ0UgZmxhZ3MgKDMy
LWJpdCkuCi0gKi8KLWVudW0gewotCUFDRV9PQkpFQ1RfVFlQRV9QUkVTRU5UCQkJPSBjcHVfdG9f
bGUzMigxKSwKLQlBQ0VfSU5IRVJJVEVEX09CSkVDVF9UWVBFX1BSRVNFTlQJPSBjcHVfdG9fbGUz
MigyKSwKLX07Ci0KLXR5cGVkZWYgbGUzMiBPQkpFQ1RfQUNFX0ZMQUdTOwotCi10eXBlZGVmIHN0
cnVjdCB7Ci0vKiAgMAlBQ0VfSEVBREVSOyAtLSBVbmZvbGRlZCBoZXJlIGFzIGdjYyBkb2Vzbid0
IGxpa2UgdW5uYW1lZCBzdHJ1Y3RzLiAqLwotCUFDRV9UWVBFUyB0eXBlOwkJLyogVHlwZSBvZiB0
aGUgQUNFLiAqLwotCUFDRV9GTEFHUyBmbGFnczsJLyogRmxhZ3MgZGVzY3JpYmluZyB0aGUgQUNF
LiAqLwotCWxlMTYgc2l6ZTsJCS8qIFNpemUgaW4gYnl0ZXMgb2YgdGhlIEFDRS4gKi8KLS8qICA0
Ki8JQUNDRVNTX01BU0sgbWFzazsJLyogQWNjZXNzIG1hc2sgYXNzb2NpYXRlZCB3aXRoIHRoZSBB
Q0UuICovCi0KLS8qICA4Ki8JT0JKRUNUX0FDRV9GTEFHUyBvYmplY3RfZmxhZ3M7CS8qIEZsYWdz
IGRlc2NyaWJpbmcgdGhlIG9iamVjdCBBQ0UuICovCi0vKiAxMiovCUdVSUQgb2JqZWN0X3R5cGU7
Ci0vKiAyOCovCUdVSUQgaW5oZXJpdGVkX29iamVjdF90eXBlOwotCi0vKiA0NCovCVNJRCBzaWQ7
CQkvKiBUaGUgU0lEIGFzc29jaWF0ZWQgd2l0aCB0aGUgQUNFLiAqLwotfSBfX2F0dHJpYnV0ZV9f
ICgoX19wYWNrZWRfXykpIEFDQ0VTU19BTExPV0VEX09CSkVDVF9BQ0UsCi0JCQkgICAgICAgQUND
RVNTX0RFTklFRF9PQkpFQ1RfQUNFLAotCQkJICAgICAgIFNZU1RFTV9BVURJVF9PQkpFQ1RfQUNF
LAotCQkJICAgICAgIFNZU1RFTV9BTEFSTV9PQkpFQ1RfQUNFOwotCi0vKgotICogQW4gQUNMIGlz
IGFuIGFjY2Vzcy1jb250cm9sIGxpc3QgKEFDTCkuCi0gKiBBbiBBQ0wgc3RhcnRzIHdpdGggYW4g
QUNMIGhlYWRlciBzdHJ1Y3R1cmUsIHdoaWNoIHNwZWNpZmllcyB0aGUgc2l6ZSBvZgotICogdGhl
IEFDTCBhbmQgdGhlIG51bWJlciBvZiBBQ0VzIGl0IGNvbnRhaW5zLiBUaGUgQUNMIGhlYWRlciBp
cyBmb2xsb3dlZCBieQotICogemVybyBvciBtb3JlIGFjY2VzcyBjb250cm9sIGVudHJpZXMgKEFD
RXMpLiBUaGUgQUNMIGFzIHdlbGwgYXMgZWFjaCBBQ0UKLSAqIGFyZSBhbGlnbmVkIG9uIDQtYnl0
ZSBib3VuZGFyaWVzLgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JdTggcmV2aXNpb247CS8qIFJl
dmlzaW9uIG9mIHRoaXMgQUNMLiAqLwotCXU4IGFsaWdubWVudDE7Ci0JbGUxNiBzaXplOwkvKiBB
bGxvY2F0ZWQgc3BhY2UgaW4gYnl0ZXMgZm9yIEFDTC4gSW5jbHVkZXMgdGhpcwotCQkJICAgaGVh
ZGVyLCB0aGUgQUNFcyBhbmQgdGhlIHJlbWFpbmluZyBmcmVlIHNwYWNlLiAqLwotCWxlMTYgYWNl
X2NvdW50OwkvKiBOdW1iZXIgb2YgQUNFcyBpbiB0aGUgQUNMLiAqLwotCWxlMTYgYWxpZ25tZW50
MjsKLS8qIHNpemVvZigpID0gOCBieXRlcyAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRf
XykpIEFDTDsKLQotLyoKLSAqIEN1cnJlbnQgY29uc3RhbnRzIGZvciBBQ0xzLgotICovCi10eXBl
ZGVmIGVudW0gewotCS8qIEN1cnJlbnQgcmV2aXNpb24uICovCi0JQUNMX1JFVklTSU9OCQk9IDIs
Ci0JQUNMX1JFVklTSU9OX0RTCQk9IDQsCi0KLQkvKiBIaXN0b3J5IG9mIHJldmlzaW9ucy4gKi8K
LQlBQ0xfUkVWSVNJT04xCQk9IDEsCi0JTUlOX0FDTF9SRVZJU0lPTgk9IDIsCi0JQUNMX1JFVklT
SU9OMgkJPSAyLAotCUFDTF9SRVZJU0lPTjMJCT0gMywKLQlBQ0xfUkVWSVNJT040CQk9IDQsCi0J
TUFYX0FDTF9SRVZJU0lPTgk9IDQsCi19IEFDTF9DT05TVEFOVFM7Ci0KLS8qCi0gKiBUaGUgc2Vj
dXJpdHkgZGVzY3JpcHRvciBjb250cm9sIGZsYWdzICgxNi1iaXQpLgotICoKLSAqIFNFX09XTkVS
X0RFRkFVTFRFRCAtIFRoaXMgYm9vbGVhbiBmbGFnLCB3aGVuIHNldCwgaW5kaWNhdGVzIHRoYXQg
dGhlIFNJRAotICoJcG9pbnRlZCB0byBieSB0aGUgT3duZXIgZmllbGQgd2FzIHByb3ZpZGVkIGJ5
IGEgZGVmYXVsdGluZyBtZWNoYW5pc20KLSAqCXJhdGhlciB0aGFuIGV4cGxpY2l0bHkgcHJvdmlk
ZWQgYnkgdGhlIG9yaWdpbmFsIHByb3ZpZGVyIG9mIHRoZQotICoJc2VjdXJpdHkgZGVzY3JpcHRv
ci4gIFRoaXMgbWF5IGFmZmVjdCB0aGUgdHJlYXRtZW50IG9mIHRoZSBTSUQgd2l0aAotICoJcmVz
cGVjdCB0byBpbmhlcml0YW5jZSBvZiBhbiBvd25lci4KLSAqCi0gKiBTRV9HUk9VUF9ERUZBVUxU
RUQgLSBUaGlzIGJvb2xlYW4gZmxhZywgd2hlbiBzZXQsIGluZGljYXRlcyB0aGF0IHRoZSBTSUQg
aW4KLSAqCXRoZSBHcm91cCBmaWVsZCB3YXMgcHJvdmlkZWQgYnkgYSBkZWZhdWx0aW5nIG1lY2hh
bmlzbSByYXRoZXIgdGhhbgotICoJZXhwbGljaXRseSBwcm92aWRlZCBieSB0aGUgb3JpZ2luYWwg
cHJvdmlkZXIgb2YgdGhlIHNlY3VyaXR5Ci0gKglkZXNjcmlwdG9yLiAgVGhpcyBtYXkgYWZmZWN0
IHRoZSB0cmVhdG1lbnQgb2YgdGhlIFNJRCB3aXRoIHJlc3BlY3QgdG8KLSAqCWluaGVyaXRhbmNl
IG9mIGEgcHJpbWFyeSBncm91cC4KLSAqCi0gKiBTRV9EQUNMX1BSRVNFTlQgLSBUaGlzIGJvb2xl
YW4gZmxhZywgd2hlbiBzZXQsIGluZGljYXRlcyB0aGF0IHRoZSBzZWN1cml0eQotICoJZGVzY3Jp
cHRvciBjb250YWlucyBhIGRpc2NyZXRpb25hcnkgQUNMLiAgSWYgdGhpcyBmbGFnIGlzIHNldCBh
bmQgdGhlCi0gKglEYWNsIGZpZWxkIG9mIHRoZSBTRUNVUklUWV9ERVNDUklQVE9SIGlzIG51bGws
IHRoZW4gYSBudWxsIEFDTCBpcwotICoJZXhwbGljaXRseSBiZWluZyBzcGVjaWZpZWQuCi0gKgot
ICogU0VfREFDTF9ERUZBVUxURUQgLSBUaGlzIGJvb2xlYW4gZmxhZywgd2hlbiBzZXQsIGluZGlj
YXRlcyB0aGF0IHRoZSBBQ0wKLSAqCXBvaW50ZWQgdG8gYnkgdGhlIERhY2wgZmllbGQgd2FzIHBy
b3ZpZGVkIGJ5IGEgZGVmYXVsdGluZyBtZWNoYW5pc20KLSAqCXJhdGhlciB0aGFuIGV4cGxpY2l0
bHkgcHJvdmlkZWQgYnkgdGhlIG9yaWdpbmFsIHByb3ZpZGVyIG9mIHRoZQotICoJc2VjdXJpdHkg
ZGVzY3JpcHRvci4gIFRoaXMgbWF5IGFmZmVjdCB0aGUgdHJlYXRtZW50IG9mIHRoZSBBQ0wgd2l0
aAotICoJcmVzcGVjdCB0byBpbmhlcml0YW5jZSBvZiBhbiBBQ0wuICBUaGlzIGZsYWcgaXMgaWdu
b3JlZCBpZiB0aGUKLSAqCURhY2xQcmVzZW50IGZsYWcgaXMgbm90IHNldC4KLSAqCi0gKiBTRV9T
QUNMX1BSRVNFTlQgLSBUaGlzIGJvb2xlYW4gZmxhZywgd2hlbiBzZXQsICBpbmRpY2F0ZXMgdGhh
dCB0aGUgc2VjdXJpdHkKLSAqCWRlc2NyaXB0b3IgY29udGFpbnMgYSBzeXN0ZW0gQUNMIHBvaW50
ZWQgdG8gYnkgdGhlIFNhY2wgZmllbGQuICBJZiB0aGlzCi0gKglmbGFnIGlzIHNldCBhbmQgdGhl
IFNhY2wgZmllbGQgb2YgdGhlIFNFQ1VSSVRZX0RFU0NSSVBUT1IgaXMgbnVsbCwgdGhlbgotICoJ
YW4gZW1wdHkgKGJ1dCBwcmVzZW50KSBBQ0wgaXMgYmVpbmcgc3BlY2lmaWVkLgotICoKLSAqIFNF
X1NBQ0xfREVGQVVMVEVEIC0gVGhpcyBib29sZWFuIGZsYWcsIHdoZW4gc2V0LCBpbmRpY2F0ZXMg
dGhhdCB0aGUgQUNMCi0gKglwb2ludGVkIHRvIGJ5IHRoZSBTYWNsIGZpZWxkIHdhcyBwcm92aWRl
ZCBieSBhIGRlZmF1bHRpbmcgbWVjaGFuaXNtCi0gKglyYXRoZXIgdGhhbiBleHBsaWNpdGx5IHBy
b3ZpZGVkIGJ5IHRoZSBvcmlnaW5hbCBwcm92aWRlciBvZiB0aGUKLSAqCXNlY3VyaXR5IGRlc2Ny
aXB0b3IuICBUaGlzIG1heSBhZmZlY3QgdGhlIHRyZWF0bWVudCBvZiB0aGUgQUNMIHdpdGgKLSAq
CXJlc3BlY3QgdG8gaW5oZXJpdGFuY2Ugb2YgYW4gQUNMLiAgVGhpcyBmbGFnIGlzIGlnbm9yZWQg
aWYgdGhlCi0gKglTYWNsUHJlc2VudCBmbGFnIGlzIG5vdCBzZXQuCi0gKgotICogU0VfU0VMRl9S
RUxBVElWRSAtIFRoaXMgYm9vbGVhbiBmbGFnLCB3aGVuIHNldCwgaW5kaWNhdGVzIHRoYXQgdGhl
IHNlY3VyaXR5Ci0gKglkZXNjcmlwdG9yIGlzIGluIHNlbGYtcmVsYXRpdmUgZm9ybS4gIEluIHRo
aXMgZm9ybSwgYWxsIGZpZWxkcyBvZiB0aGUKLSAqCXNlY3VyaXR5IGRlc2NyaXB0b3IgYXJlIGNv
bnRpZ3VvdXMgaW4gbWVtb3J5IGFuZCBhbGwgcG9pbnRlciBmaWVsZHMgYXJlCi0gKglleHByZXNz
ZWQgYXMgb2Zmc2V0cyBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgdGhlIHNlY3VyaXR5IGRlc2NyaXB0
b3IuCi0gKi8KLWVudW0gewotCVNFX09XTkVSX0RFRkFVTFRFRAkJPSBjcHVfdG9fbGUxNigweDAw
MDEpLAotCVNFX0dST1VQX0RFRkFVTFRFRAkJPSBjcHVfdG9fbGUxNigweDAwMDIpLAotCVNFX0RB
Q0xfUFJFU0VOVAkJCT0gY3B1X3RvX2xlMTYoMHgwMDA0KSwKLQlTRV9EQUNMX0RFRkFVTFRFRAkJ
PSBjcHVfdG9fbGUxNigweDAwMDgpLAotCi0JU0VfU0FDTF9QUkVTRU5UCQkJPSBjcHVfdG9fbGUx
NigweDAwMTApLAotCVNFX1NBQ0xfREVGQVVMVEVECQk9IGNwdV90b19sZTE2KDB4MDAyMCksCi0K
LQlTRV9EQUNMX0FVVE9fSU5IRVJJVF9SRVEJPSBjcHVfdG9fbGUxNigweDAxMDApLAotCVNFX1NB
Q0xfQVVUT19JTkhFUklUX1JFUQk9IGNwdV90b19sZTE2KDB4MDIwMCksCi0JU0VfREFDTF9BVVRP
X0lOSEVSSVRFRAkJPSBjcHVfdG9fbGUxNigweDA0MDApLAotCVNFX1NBQ0xfQVVUT19JTkhFUklU
RUQJCT0gY3B1X3RvX2xlMTYoMHgwODAwKSwKLQotCVNFX0RBQ0xfUFJPVEVDVEVECQk9IGNwdV90
b19sZTE2KDB4MTAwMCksCi0JU0VfU0FDTF9QUk9URUNURUQJCT0gY3B1X3RvX2xlMTYoMHgyMDAw
KSwKLQlTRV9STV9DT05UUk9MX1ZBTElECQk9IGNwdV90b19sZTE2KDB4NDAwMCksCi0JU0VfU0VM
Rl9SRUxBVElWRQkJPSBjcHVfdG9fbGUxNigweDgwMDApCi19IF9fYXR0cmlidXRlX18gKChfX3Bh
Y2tlZF9fKSk7Ci0KLXR5cGVkZWYgbGUxNiBTRUNVUklUWV9ERVNDUklQVE9SX0NPTlRST0w7Ci0K
LS8qCi0gKiBTZWxmLXJlbGF0aXZlIHNlY3VyaXR5IGRlc2NyaXB0b3IuIENvbnRhaW5zIHRoZSBv
d25lciBhbmQgZ3JvdXAgU0lEcyBhcyB3ZWxsCi0gKiBhcyB0aGUgc2FjbCBhbmQgZGFjbCBBQ0xz
IGluc2lkZSB0aGUgc2VjdXJpdHkgZGVzY3JpcHRvciBpdHNlbGYuCi0gKi8KLXR5cGVkZWYgc3Ry
dWN0IHsKLQl1OCByZXZpc2lvbjsJLyogUmV2aXNpb24gbGV2ZWwgb2YgdGhlIHNlY3VyaXR5IGRl
c2NyaXB0b3IuICovCi0JdTggYWxpZ25tZW50OwotCVNFQ1VSSVRZX0RFU0NSSVBUT1JfQ09OVFJP
TCBjb250cm9sOyAvKiBGbGFncyBxdWFsaWZ5aW5nIHRoZSB0eXBlIG9mCi0JCQkgICB0aGUgZGVz
Y3JpcHRvciBhcyB3ZWxsIGFzIHRoZSBmb2xsb3dpbmcgZmllbGRzLiAqLwotCWxlMzIgb3duZXI7
CS8qIEJ5dGUgb2Zmc2V0IHRvIGEgU0lEIHJlcHJlc2VudGluZyBhbiBvYmplY3QncwotCQkJICAg
b3duZXIuIElmIHRoaXMgaXMgTlVMTCwgbm8gb3duZXIgU0lEIGlzIHByZXNlbnQgaW4KLQkJCSAg
IHRoZSBkZXNjcmlwdG9yLiAqLwotCWxlMzIgZ3JvdXA7CS8qIEJ5dGUgb2Zmc2V0IHRvIGEgU0lE
IHJlcHJlc2VudGluZyBhbiBvYmplY3QncwotCQkJICAgcHJpbWFyeSBncm91cC4gSWYgdGhpcyBp
cyBOVUxMLCBubyBwcmltYXJ5IGdyb3VwCi0JCQkgICBTSUQgaXMgcHJlc2VudCBpbiB0aGUgZGVz
Y3JpcHRvci4gKi8KLQlsZTMyIHNhY2w7CS8qIEJ5dGUgb2Zmc2V0IHRvIGEgc3lzdGVtIEFDTC4g
T25seSB2YWxpZCwgaWYKLQkJCSAgIFNFX1NBQ0xfUFJFU0VOVCBpcyBzZXQgaW4gdGhlIGNvbnRy
b2wgZmllbGQuIElmCi0JCQkgICBTRV9TQUNMX1BSRVNFTlQgaXMgc2V0IGJ1dCBzYWNsIGlzIE5V
TEwsIGEgTlVMTCBBQ0wKLQkJCSAgIGlzIHNwZWNpZmllZC4gKi8KLQlsZTMyIGRhY2w7CS8qIEJ5
dGUgb2Zmc2V0IHRvIGEgZGlzY3JldGlvbmFyeSBBQ0wuIE9ubHkgdmFsaWQsIGlmCi0JCQkgICBT
RV9EQUNMX1BSRVNFTlQgaXMgc2V0IGluIHRoZSBjb250cm9sIGZpZWxkLiBJZgotCQkJICAgU0Vf
REFDTF9QUkVTRU5UIGlzIHNldCBidXQgZGFjbCBpcyBOVUxMLCBhIE5VTEwgQUNMCi0JCQkgICAo
dW5jb25kaXRpb25hbGx5IGdyYW50aW5nIGFjY2VzcykgaXMgc3BlY2lmaWVkLiAqLwotLyogc2l6
ZW9mKCkgPSAweDE0IGJ5dGVzICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgU0VD
VVJJVFlfREVTQ1JJUFRPUl9SRUxBVElWRTsKLQotLyoKLSAqIEFic29sdXRlIHNlY3VyaXR5IGRl
c2NyaXB0b3IuIERvZXMgbm90IGNvbnRhaW4gdGhlIG93bmVyIGFuZCBncm91cCBTSURzLCBub3IK
LSAqIHRoZSBzYWNsIGFuZCBkYWNsIEFDTHMgaW5zaWRlIHRoZSBzZWN1cml0eSBkZXNjcmlwdG9y
LiBJbnN0ZWFkLCBpdCBjb250YWlucwotICogcG9pbnRlcnMgdG8gdGhlc2Ugc3RydWN0dXJlcyBp
biBtZW1vcnkuIE9idmlvdXNseSwgYWJzb2x1dGUgc2VjdXJpdHkKLSAqIGRlc2NyaXB0b3JzIGFy
ZSBvbmx5IHVzZWZ1bCBmb3IgaW4gbWVtb3J5IHJlcHJlc2VudGF0aW9ucyBvZiBzZWN1cml0eQot
ICogZGVzY3JpcHRvcnMuIE9uIGRpc2ssIGEgc2VsZi1yZWxhdGl2ZSBzZWN1cml0eSBkZXNjcmlw
dG9yIGlzIHVzZWQuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLQl1OCByZXZpc2lvbjsJLyogUmV2
aXNpb24gbGV2ZWwgb2YgdGhlIHNlY3VyaXR5IGRlc2NyaXB0b3IuICovCi0JdTggYWxpZ25tZW50
OwotCVNFQ1VSSVRZX0RFU0NSSVBUT1JfQ09OVFJPTCBjb250cm9sOwkvKiBGbGFncyBxdWFsaWZ5
aW5nIHRoZSB0eXBlIG9mCi0JCQkgICB0aGUgZGVzY3JpcHRvciBhcyB3ZWxsIGFzIHRoZSBmb2xs
b3dpbmcgZmllbGRzLiAqLwotCVNJRCAqb3duZXI7CS8qIFBvaW50cyB0byBhIFNJRCByZXByZXNl
bnRpbmcgYW4gb2JqZWN0J3Mgb3duZXIuIElmCi0JCQkgICB0aGlzIGlzIE5VTEwsIG5vIG93bmVy
IFNJRCBpcyBwcmVzZW50IGluIHRoZQotCQkJICAgZGVzY3JpcHRvci4gKi8KLQlTSUQgKmdyb3Vw
OwkvKiBQb2ludHMgdG8gYSBTSUQgcmVwcmVzZW50aW5nIGFuIG9iamVjdCdzIHByaW1hcnkKLQkJ
CSAgIGdyb3VwLiBJZiB0aGlzIGlzIE5VTEwsIG5vIHByaW1hcnkgZ3JvdXAgU0lEIGlzCi0JCQkg
ICBwcmVzZW50IGluIHRoZSBkZXNjcmlwdG9yLiAqLwotCUFDTCAqc2FjbDsJLyogUG9pbnRzIHRv
IGEgc3lzdGVtIEFDTC4gT25seSB2YWxpZCwgaWYKLQkJCSAgIFNFX1NBQ0xfUFJFU0VOVCBpcyBz
ZXQgaW4gdGhlIGNvbnRyb2wgZmllbGQuIElmCi0JCQkgICBTRV9TQUNMX1BSRVNFTlQgaXMgc2V0
IGJ1dCBzYWNsIGlzIE5VTEwsIGEgTlVMTCBBQ0wKLQkJCSAgIGlzIHNwZWNpZmllZC4gKi8KLQlB
Q0wgKmRhY2w7CS8qIFBvaW50cyB0byBhIGRpc2NyZXRpb25hcnkgQUNMLiBPbmx5IHZhbGlkLCBp
ZgotCQkJICAgU0VfREFDTF9QUkVTRU5UIGlzIHNldCBpbiB0aGUgY29udHJvbCBmaWVsZC4gSWYK
LQkJCSAgIFNFX0RBQ0xfUFJFU0VOVCBpcyBzZXQgYnV0IGRhY2wgaXMgTlVMTCwgYSBOVUxMIEFD
TAotCQkJICAgKHVuY29uZGl0aW9uYWxseSBncmFudGluZyBhY2Nlc3MpIGlzIHNwZWNpZmllZC4g
Ki8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBTRUNVUklUWV9ERVNDUklQVE9SOwot
Ci0vKgotICogQ3VycmVudCBjb25zdGFudHMgZm9yIHNlY3VyaXR5IGRlc2NyaXB0b3JzLgotICov
Ci10eXBlZGVmIGVudW0gewotCS8qIEN1cnJlbnQgcmV2aXNpb24uICovCi0JU0VDVVJJVFlfREVT
Q1JJUFRPUl9SRVZJU0lPTgk9IDEsCi0JU0VDVVJJVFlfREVTQ1JJUFRPUl9SRVZJU0lPTjEJPSAx
LAotCi0JLyogVGhlIHNpemVzIG9mIGJvdGggdGhlIGFic29sdXRlIGFuZCByZWxhdGl2ZSBzZWN1
cml0eSBkZXNjcmlwdG9ycyBpcwotCSAgIHRoZSBzYW1lIGFzIHBvaW50ZXJzLCBhdCBsZWFzdCBv
biBpYTMyIGFyY2hpdGVjdHVyZSBhcmUgMzItYml0LiAqLwotCVNFQ1VSSVRZX0RFU0NSSVBUT1Jf
TUlOX0xFTkdUSAk9IHNpemVvZihTRUNVUklUWV9ERVNDUklQVE9SKSwKLX0gU0VDVVJJVFlfREVT
Q1JJUFRPUl9DT05TVEFOVFM7Ci0KLS8qCi0gKiBBdHRyaWJ1dGU6IFNlY3VyaXR5IGRlc2NyaXB0
b3IgKDB4NTApLiBBIHN0YW5kYXJkIHNlbGYtcmVsYXRpdmUgc2VjdXJpdHkKLSAqIGRlc2NyaXB0
b3IuCi0gKgotICogTk9URTogQ2FuIGJlIHJlc2lkZW50IG9yIG5vbi1yZXNpZGVudC4KLSAqIE5P
VEU6IE5vdCB1c2VkIGluIE5URlMgMy4wKywgYXMgc2VjdXJpdHkgZGVzY3JpcHRvcnMgYXJlIHN0
b3JlZCBjZW50cmFsbHkKLSAqIGluIEZJTEVfU2VjdXJlIGFuZCB0aGUgY29ycmVjdCBkZXNjcmlw
dG9yIGlzIGZvdW5kIHVzaW5nIHRoZSBzZWN1cml0eV9pZAotICogZnJvbSB0aGUgc3RhbmRhcmQg
aW5mb3JtYXRpb24gYXR0cmlidXRlLgotICovCi10eXBlZGVmIFNFQ1VSSVRZX0RFU0NSSVBUT1Jf
UkVMQVRJVkUgU0VDVVJJVFlfREVTQ1JJUFRPUl9BVFRSOwotCi0vKgotICogT24gTlRGUyAzLjAr
LCBhbGwgc2VjdXJpdHkgZGVzY3JpcHRvcnMgYXJlIHN0b3JlZCBpbiBGSUxFX1NlY3VyZS4gT25s
eSBvbmUKLSAqIHJlZmVyZW5jZWQgaW5zdGFuY2Ugb2YgZWFjaCB1bmlxdWUgc2VjdXJpdHkgZGVz
Y3JpcHRvciBpcyBzdG9yZWQuCi0gKgotICogRklMRV9TZWN1cmUgY29udGFpbnMgbm8gdW5uYW1l
ZCBkYXRhIGF0dHJpYnV0ZSwgaS5lLiBpdCBoYXMgemVybyBsZW5ndGguIEl0Ci0gKiBkb2VzLCBo
b3dldmVyLCBjb250YWluIHR3byBpbmRleGVzICgkU0RIIGFuZCAkU0lJKSBhcyB3ZWxsIGFzIGEg
bmFtZWQgZGF0YQotICogc3RyZWFtICgkU0RTKS4KLSAqCi0gKiBFdmVyeSB1bmlxdWUgc2VjdXJp
dHkgZGVzY3JpcHRvciBpcyBhc3NpZ25lZCBhIHVuaXF1ZSBzZWN1cml0eSBpZGVudGlmaWVyCi0g
KiAoc2VjdXJpdHlfaWQsIG5vdCB0byBiZSBjb25mdXNlZCB3aXRoIGEgU0lEKS4gVGhlIHNlY3Vy
aXR5X2lkIGlzIHVuaXF1ZSBmb3IKLSAqIHRoZSBOVEZTIHZvbHVtZSBhbmQgaXMgdXNlZCBhcyBh
biBpbmRleCBpbnRvIHRoZSAkU0lJIGluZGV4LCB3aGljaCBtYXBzCi0gKiBzZWN1cml0eV9pZHMg
dG8gdGhlIHNlY3VyaXR5IGRlc2NyaXB0b3IncyBzdG9yYWdlIGxvY2F0aW9uIHdpdGhpbiB0aGUg
JFNEUwotICogZGF0YSBhdHRyaWJ1dGUuIFRoZSAkU0lJIGluZGV4IGlzIHNvcnRlZCBieSBhc2Nl
bmRpbmcgc2VjdXJpdHlfaWQuCi0gKgotICogQSBzaW1wbGUgaGFzaCBpcyBjb21wdXRlZCBmcm9t
IGVhY2ggc2VjdXJpdHkgZGVzY3JpcHRvci4gVGhpcyBoYXNoIGlzIHVzZWQKLSAqIGFzIGFuIGlu
ZGV4IGludG8gdGhlICRTREggaW5kZXgsIHdoaWNoIG1hcHMgc2VjdXJpdHkgZGVzY3JpcHRvciBo
YXNoZXMgdG8KLSAqIHRoZSBzZWN1cml0eSBkZXNjcmlwdG9yJ3Mgc3RvcmFnZSBsb2NhdGlvbiB3
aXRoaW4gdGhlICRTRFMgZGF0YSBhdHRyaWJ1dGUuCi0gKiBUaGUgJFNESCBpbmRleCBpcyBzb3J0
ZWQgYnkgc2VjdXJpdHkgZGVzY3JpcHRvciBoYXNoIGFuZCBpcyBzdG9yZWQgaW4gYSBCKwotICog
dHJlZS4gV2hlbiBzZWFyY2hpbmcgJFNESCAod2l0aCB0aGUgaW50ZW50IG9mIGRldGVybWluaW5n
IHdoZXRoZXIgb3Igbm90IGEKLSAqIG5ldyBzZWN1cml0eSBkZXNjcmlwdG9yIGlzIGFscmVhZHkg
cHJlc2VudCBpbiB0aGUgJFNEUyBkYXRhIHN0cmVhbSksIGlmIGEKLSAqIG1hdGNoaW5nIGhhc2gg
aXMgZm91bmQsIGJ1dCB0aGUgc2VjdXJpdHkgZGVzY3JpcHRvcnMgZG8gbm90IG1hdGNoLCB0aGUK
LSAqIHNlYXJjaCBpbiB0aGUgJFNESCBpbmRleCBpcyBjb250aW51ZWQsIHNlYXJjaGluZyBmb3Ig
YSBuZXh0IG1hdGNoaW5nIGhhc2guCi0gKgotICogV2hlbiBhIHByZWNpc2UgbWF0Y2ggaXMgZm91
bmQsIHRoZSBzZWN1cml0eV9pZCBjb3Jlc3BvbmRpbmcgdG8gdGhlIHNlY3VyaXR5Ci0gKiBkZXNj
cmlwdG9yIGluIHRoZSAkU0RTIGF0dHJpYnV0ZSBpcyByZWFkIGZyb20gdGhlIGZvdW5kICRTREgg
aW5kZXggZW50cnkgYW5kCi0gKiBpcyBzdG9yZWQgaW4gdGhlICRTVEFOREFSRF9JTkZPUk1BVElP
TiBhdHRyaWJ1dGUgb2YgdGhlIGZpbGUvZGlyZWN0b3J5IHRvCi0gKiB3aGljaCB0aGUgc2VjdXJp
dHkgZGVzY3JpcHRvciBpcyBiZWluZyBhcHBsaWVkLiBUaGUgJFNUQU5EQVJEX0lORk9STUFUSU9O
Ci0gKiBhdHRyaWJ1dGUgaXMgcHJlc2VudCBpbiBhbGwgYmFzZSBtZnQgcmVjb3JkcyAoaS5lLiBp
biBhbGwgZmlsZXMgYW5kCi0gKiBkaXJlY3RvcmllcykuCi0gKgotICogSWYgYSBtYXRjaCBpcyBu
b3QgZm91bmQsIHRoZSBzZWN1cml0eSBkZXNjcmlwdG9yIGlzIGFzc2lnbmVkIGEgbmV3IHVuaXF1
ZQotICogc2VjdXJpdHlfaWQgYW5kIGlzIGFkZGVkIHRvIHRoZSAkU0RTIGRhdGEgYXR0cmlidXRl
LiBUaGVuLCBlbnRyaWVzCi0gKiByZWZlcmVuY2luZyB0aGUgdGhpcyBzZWN1cml0eSBkZXNjcmlw
dG9yIGluIHRoZSAkU0RTIGRhdGEgYXR0cmlidXRlIGFyZQotICogYWRkZWQgdG8gdGhlICRTREgg
YW5kICRTSUkgaW5kZXhlcy4KLSAqCi0gKiBOb3RlOiBFbnRyaWVzIGFyZSBuZXZlciBkZWxldGVk
IGZyb20gRklMRV9TZWN1cmUsIGV2ZW4gaWYgbm90aGluZwotICogcmVmZXJlbmNlcyBhbiBlbnRy
eSBhbnkgbW9yZS4KLSAqLwotCi0vKgotICogVGhpcyBoZWFkZXIgcHJlY2VkZXMgZWFjaCBzZWN1
cml0eSBkZXNjcmlwdG9yIGluIHRoZSAkU0RTIGRhdGEgc3RyZWFtLgotICogVGhpcyBpcyBhbHNv
IHRoZSBpbmRleCBlbnRyeSBkYXRhIHBhcnQgb2YgYm90aCB0aGUgJFNJSSBhbmQgJFNESCBpbmRl
eGVzLgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JbGUzMiBoYXNoOwkgIC8qIEhhc2ggb2YgdGhl
IHNlY3VyaXR5IGRlc2NyaXB0b3IuICovCi0JbGUzMiBzZWN1cml0eV9pZDsgLyogVGhlIHNlY3Vy
aXR5X2lkIGFzc2lnbmVkIHRvIHRoZSBkZXNjcmlwdG9yLiAqLwotCWxlNjQgb2Zmc2V0OwkgIC8q
IEJ5dGUgb2Zmc2V0IG9mIHRoaXMgZW50cnkgaW4gdGhlICRTRFMgc3RyZWFtLiAqLwotCWxlMzIg
bGVuZ3RoOwkgIC8qIFNpemUgaW4gYnl0ZXMgb2YgdGhpcyBlbnRyeSBpbiAkU0RTIHN0cmVhbS4g
Ki8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBTRUNVUklUWV9ERVNDUklQVE9SX0hF
QURFUjsKLQotLyoKLSAqIFRoZSAkU0RTIGRhdGEgc3RyZWFtIGNvbnRhaW5zIHRoZSBzZWN1cml0
eSBkZXNjcmlwdG9ycywgYWxpZ25lZCBvbiAxNi1ieXRlCi0gKiBib3VuZGFyaWVzLCBzb3J0ZWQg
Ynkgc2VjdXJpdHlfaWQgaW4gYSBCKyB0cmVlLiBTZWN1cml0eSBkZXNjcmlwdG9ycyBjYW5ub3QK
LSAqIGNyb3NzIDI1NmtpYiBib3VuZGFyaWVzICh0aGlzIHJlc3RyaWN0aW9uIGlzIGltcG9zZWQg
YnkgdGhlIFdpbmRvd3MgY2FjaGUKLSAqIG1hbmFnZXIpLiBFYWNoIHNlY3VyaXR5IGRlc2NyaXB0
b3IgaXMgY29udGFpbmVkIGluIGEgU0RTX0VOVFJZIHN0cnVjdHVyZS4KLSAqIEFsc28sIGVhY2gg
c2VjdXJpdHkgZGVzY3JpcHRvciBpcyBzdG9yZWQgdHdpY2UgaW4gdGhlICRTRFMgc3RyZWFtIHdp
dGggYQotICogZml4ZWQgb2Zmc2V0IG9mIDB4NDAwMDAgYnl0ZXMgKDI1NmtpYiwgdGhlIFdpbmRv
d3MgY2FjaGUgbWFuYWdlcidzIG1heCBzaXplKQotICogYmV0d2VlbiB0aGVtOyBpLmUuIGlmIGEg
U0RTX0VOVFJZIHNwZWNpZmllcyBhbiBvZmZzZXQgb2YgMHg1MWQwLCB0aGVuIHRoZQotICogZmly
c3QgY29weSBvZiB0aGUgc2VjdXJpdHkgZGVzY3JpcHRvciB3aWxsIGJlIGF0IG9mZnNldCAweDUx
ZDAgaW4gdGhlCi0gKiAkU0RTIGRhdGEgc3RyZWFtIGFuZCB0aGUgc2Vjb25kIGNvcHkgd2lsbCBi
ZSBhdCBvZmZzZXQgMHg0NTFkMC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotLypPZnMqLwotLyog
IDAJU0VDVVJJVFlfREVTQ1JJUFRPUl9IRUFERVI7IC0tIFVuZm9sZGVkIGhlcmUgYXMgZ2NjIGRv
ZXNuJ3QgbGlrZQotCQkJCSAgICAgICB1bm5hbWVkIHN0cnVjdHMuICovCi0JbGUzMiBoYXNoOwkg
IC8qIEhhc2ggb2YgdGhlIHNlY3VyaXR5IGRlc2NyaXB0b3IuICovCi0JbGUzMiBzZWN1cml0eV9p
ZDsgLyogVGhlIHNlY3VyaXR5X2lkIGFzc2lnbmVkIHRvIHRoZSBkZXNjcmlwdG9yLiAqLwotCWxl
NjQgb2Zmc2V0OwkgIC8qIEJ5dGUgb2Zmc2V0IG9mIHRoaXMgZW50cnkgaW4gdGhlICRTRFMgc3Ry
ZWFtLiAqLwotCWxlMzIgbGVuZ3RoOwkgIC8qIFNpemUgaW4gYnl0ZXMgb2YgdGhpcyBlbnRyeSBp
biAkU0RTIHN0cmVhbS4gKi8KLS8qIDIwKi8JU0VDVVJJVFlfREVTQ1JJUFRPUl9SRUxBVElWRSBz
aWQ7IC8qIFRoZSBzZWxmLXJlbGF0aXZlIHNlY3VyaXR5Ci0JCQkJCSAgICAgZGVzY3JpcHRvci4g
Ki8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBTRFNfRU5UUlk7Ci0KLS8qCi0gKiBU
aGUgaW5kZXggZW50cnkga2V5IHVzZWQgaW4gdGhlICRTSUkgaW5kZXguIFRoZSBjb2xsYXRpb24g
dHlwZSBpcwotICogQ09MTEFUSU9OX05UT0ZTX1VMT05HLgotICovCi10eXBlZGVmIHN0cnVjdCB7
Ci0JbGUzMiBzZWN1cml0eV9pZDsgLyogVGhlIHNlY3VyaXR5X2lkIGFzc2lnbmVkIHRvIHRoZSBk
ZXNjcmlwdG9yLiAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIFNJSV9JTkRFWF9L
RVk7Ci0KLS8qCi0gKiBUaGUgaW5kZXggZW50cnkga2V5IHVzZWQgaW4gdGhlICRTREggaW5kZXgu
IFRoZSBrZXlzIGFyZSBzb3J0ZWQgZmlyc3QgYnkKLSAqIGhhc2ggYW5kIHRoZW4gYnkgc2VjdXJp
dHlfaWQuIFRoZSBjb2xsYXRpb24gcnVsZSBpcwotICogQ09MTEFUSU9OX05UT0ZTX1NFQ1VSSVRZ
X0hBU0guCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLQlsZTMyIGhhc2g7CSAgLyogSGFzaCBvZiB0
aGUgc2VjdXJpdHkgZGVzY3JpcHRvci4gKi8KLQlsZTMyIHNlY3VyaXR5X2lkOyAvKiBUaGUgc2Vj
dXJpdHlfaWQgYXNzaWduZWQgdG8gdGhlIGRlc2NyaXB0b3IuICovCi19IF9fYXR0cmlidXRlX18g
KChfX3BhY2tlZF9fKSkgU0RIX0lOREVYX0tFWTsKLQotLyoKLSAqIEF0dHJpYnV0ZTogVm9sdW1l
IG5hbWUgKDB4NjApLgotICoKLSAqIE5PVEU6IEFsd2F5cyByZXNpZGVudC4KLSAqIE5PVEU6IFBy
ZXNlbnQgb25seSBpbiBGSUxFX1ZvbHVtZS4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCW50ZnNj
aGFyIG5hbWVbMF07CS8qIFRoZSBuYW1lIG9mIHRoZSB2b2x1bWUgaW4gVW5pY29kZS4gKi8KLX0g
X19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBWT0xVTUVfTkFNRTsKLQotLyoKLSAqIFBvc3Np
YmxlIGZsYWdzIGZvciB0aGUgdm9sdW1lICgxNi1iaXQpLgotICovCi1lbnVtIHsKLQlWT0xVTUVf
SVNfRElSVFkJCQk9IGNwdV90b19sZTE2KDB4MDAwMSksCi0JVk9MVU1FX1JFU0laRV9MT0dfRklM
RQkJPSBjcHVfdG9fbGUxNigweDAwMDIpLAotCVZPTFVNRV9VUEdSQURFX09OX01PVU5UCQk9IGNw
dV90b19sZTE2KDB4MDAwNCksCi0JVk9MVU1FX01PVU5URURfT05fTlQ0CQk9IGNwdV90b19sZTE2
KDB4MDAwOCksCi0KLQlWT0xVTUVfREVMRVRFX1VTTl9VTkRFUldBWQk9IGNwdV90b19sZTE2KDB4
MDAxMCksCi0JVk9MVU1FX1JFUEFJUl9PQkpFQ1RfSUQJCT0gY3B1X3RvX2xlMTYoMHgwMDIwKSwK
LQotCVZPTFVNRV9DSEtEU0tfVU5ERVJXQVkJCT0gY3B1X3RvX2xlMTYoMHg0MDAwKSwKLQlWT0xV
TUVfTU9ESUZJRURfQllfQ0hLRFNLCT0gY3B1X3RvX2xlMTYoMHg4MDAwKSwKLQotCVZPTFVNRV9G
TEFHU19NQVNLCQk9IGNwdV90b19sZTE2KDB4YzAzZiksCi0KLQkvKiBUbyBtYWtlIG91ciBsaWZl
IGVhc2llciB3aGVuIGNoZWNraW5nIGlmIHdlIG11c3QgbW91bnQgcmVhZC1vbmx5LiAqLwotCVZP
TFVNRV9NVVNUX01PVU5UX1JPX01BU0sJPSBjcHVfdG9fbGUxNigweGMwMjcpLAotfSBfX2F0dHJp
YnV0ZV9fICgoX19wYWNrZWRfXykpOwotCi10eXBlZGVmIGxlMTYgVk9MVU1FX0ZMQUdTOwotCi0v
KgotICogQXR0cmlidXRlOiBWb2x1bWUgaW5mb3JtYXRpb24gKDB4NzApLgotICoKLSAqIE5PVEU6
IEFsd2F5cyByZXNpZGVudC4KLSAqIE5PVEU6IFByZXNlbnQgb25seSBpbiBGSUxFX1ZvbHVtZS4K
LSAqIE5PVEU6IFdpbmRvd3MgMjAwMCB1c2VzIE5URlMgMy4wIHdoaWxlIFdpbmRvd3MgTlQ0IHNl
cnZpY2UgcGFjayA2YSB1c2VzCi0gKgkgTlRGUyAxLjIuIEkgaGF2ZW4ndCBwZXJzb25hbGx5IHNl
ZW4gb3RoZXIgdmFsdWVzIHlldC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCWxlNjQgcmVzZXJ2
ZWQ7CQkvKiBOb3QgdXNlZCAoeWV0PykuICovCi0JdTggbWFqb3JfdmVyOwkJLyogTWFqb3IgdmVy
c2lvbiBvZiB0aGUgbnRmcyBmb3JtYXQuICovCi0JdTggbWlub3JfdmVyOwkJLyogTWlub3IgdmVy
c2lvbiBvZiB0aGUgbnRmcyBmb3JtYXQuICovCi0JVk9MVU1FX0ZMQUdTIGZsYWdzOwkvKiBCaXQg
YXJyYXkgb2YgVk9MVU1FXyogZmxhZ3MuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9f
KSkgVk9MVU1FX0lORk9STUFUSU9OOwotCi0vKgotICogQXR0cmlidXRlOiBEYXRhIGF0dHJpYnV0
ZSAoMHg4MCkuCi0gKgotICogTk9URTogQ2FuIGJlIHJlc2lkZW50IG9yIG5vbi1yZXNpZGVudC4K
LSAqCi0gKiBEYXRhIGNvbnRlbnRzIG9mIGEgZmlsZSAoaS5lLiB0aGUgdW5uYW1lZCBzdHJlYW0p
IG9yIG9mIGEgbmFtZWQgc3RyZWFtLgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JdTggZGF0YVsw
XTsJCS8qIFRoZSBmaWxlJ3MgZGF0YSBjb250ZW50cy4gKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9f
cGFja2VkX18pKSBEQVRBX0FUVFI7Ci0KLS8qCi0gKiBJbmRleCBoZWFkZXIgZmxhZ3MgKDgtYml0
KS4KLSAqLwotZW51bSB7Ci0JLyoKLQkgKiBXaGVuIGluZGV4IGhlYWRlciBpcyBpbiBhbiBpbmRl
eCByb290IGF0dHJpYnV0ZToKLQkgKi8KLQlTTUFMTF9JTkRFWCA9IDAsIC8qIFRoZSBpbmRleCBp
cyBzbWFsbCBlbm91Z2ggdG8gZml0IGluc2lkZSB0aGUgaW5kZXgKLQkJCSAgICByb290IGF0dHJp
YnV0ZSBhbmQgdGhlcmUgaXMgbm8gaW5kZXggYWxsb2NhdGlvbgotCQkJICAgIGF0dHJpYnV0ZSBw
cmVzZW50LiAqLwotCUxBUkdFX0lOREVYID0gMSwgLyogVGhlIGluZGV4IGlzIHRvbyBsYXJnZSB0
byBmaXQgaW4gdGhlIGluZGV4IHJvb3QKLQkJCSAgICBhdHRyaWJ1dGUgYW5kL29yIGFuIGluZGV4
IGFsbG9jYXRpb24gYXR0cmlidXRlIGlzCi0JCQkgICAgcHJlc2VudC4gKi8KLQkvKgotCSAqIFdo
ZW4gaW5kZXggaGVhZGVyIGlzIGluIGFuIGluZGV4IGJsb2NrLCBpLmUuIGlzIHBhcnQgb2YgaW5k
ZXgKLQkgKiBhbGxvY2F0aW9uIGF0dHJpYnV0ZToKLQkgKi8KLQlMRUFGX05PREUgID0gMCwgLyog
VGhpcyBpcyBhIGxlYWYgbm9kZSwgaS5lLiB0aGVyZSBhcmUgbm8gbW9yZSBub2RlcwotCQkJICAg
YnJhbmNoaW5nIG9mZiBpdC4gKi8KLQlJTkRFWF9OT0RFID0gMSwgLyogVGhpcyBub2RlIGluZGV4
ZXMgb3RoZXIgbm9kZXMsIGkuZS4gaXQgaXMgbm90IGEgbGVhZgotCQkJICAgbm9kZS4gKi8KLQlO
T0RFX01BU0sgID0gMSwgLyogTWFzayBmb3IgYWNjZXNzaW5nIHRoZSAqX05PREUgYml0cy4gKi8K
LX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKTsKLQotdHlwZWRlZiB1OCBJTkRFWF9IRUFE
RVJfRkxBR1M7Ci0KLS8qCi0gKiBUaGlzIGlzIHRoZSBoZWFkZXIgZm9yIGluZGV4ZXMsIGRlc2Ny
aWJpbmcgdGhlIElOREVYX0VOVFJZIHJlY29yZHMsIHdoaWNoCi0gKiBmb2xsb3cgdGhlIElOREVY
X0hFQURFUi4gVG9nZXRoZXIgdGhlIGluZGV4IGhlYWRlciBhbmQgdGhlIGluZGV4IGVudHJpZXMK
LSAqIG1ha2UgdXAgYSBjb21wbGV0ZSBpbmRleC4KLSAqCi0gKiBJTVBPUlRBTlQgTk9URTogVGhl
IG9mZnNldCwgbGVuZ3RoIGFuZCBzaXplIHN0cnVjdHVyZSBtZW1iZXJzIGFyZSBjb3VudGVkCi0g
KiByZWxhdGl2ZSB0byB0aGUgc3RhcnQgb2YgdGhlIGluZGV4IGhlYWRlciBzdHJ1Y3R1cmUgYW5k
IG5vdCByZWxhdGl2ZSB0byB0aGUKLSAqIHN0YXJ0IG9mIHRoZSBpbmRleCByb290IG9yIGluZGV4
IGFsbG9jYXRpb24gc3RydWN0dXJlcyB0aGVtc2VsdmVzLgotICovCi10eXBlZGVmIHN0cnVjdCB7
Ci0JbGUzMiBlbnRyaWVzX29mZnNldDsJCS8qIEJ5dGUgb2Zmc2V0IHRvIGZpcnN0IElOREVYX0VO
VFJZCi0JCQkJCSAgIGFsaWduZWQgdG8gOC1ieXRlIGJvdW5kYXJ5LiAqLwotCWxlMzIgaW5kZXhf
bGVuZ3RoOwkJLyogRGF0YSBzaXplIG9mIHRoZSBpbmRleCBpbiBieXRlcywKLQkJCQkJICAgaS5l
LiBieXRlcyB1c2VkIGZyb20gYWxsb2NhdGVkCi0JCQkJCSAgIHNpemUsIGFsaWduZWQgdG8gOC1i
eXRlIGJvdW5kYXJ5LiAqLwotCWxlMzIgYWxsb2NhdGVkX3NpemU7CQkvKiBCeXRlIHNpemUgb2Yg
dGhpcyBpbmRleCAoYmxvY2spLAotCQkJCQkgICBtdWx0aXBsZSBvZiA4IGJ5dGVzLiAqLwotCS8q
IE5PVEU6IEZvciB0aGUgaW5kZXggcm9vdCBhdHRyaWJ1dGUsIHRoZSBhYm92ZSB0d28gbnVtYmVy
cyBhcmUgYWx3YXlzCi0JICAgZXF1YWwsIGFzIHRoZSBhdHRyaWJ1dGUgaXMgcmVzaWRlbnQgYW5k
IGl0IGlzIHJlc2l6ZWQgYXMgbmVlZGVkLiBJbgotCSAgIHRoZSBjYXNlIG9mIHRoZSBpbmRleCBh
bGxvY2F0aW9uIGF0dHJpYnV0ZSB0aGUgYXR0cmlidXRlIGlzIG5vdAotCSAgIHJlc2lkZW50IGFu
ZCBoZW5jZSB0aGUgYWxsb2NhdGVkX3NpemUgaXMgYSBmaXhlZCB2YWx1ZSBhbmQgbXVzdAotCSAg
IGVxdWFsIHRoZSBpbmRleF9ibG9ja19zaXplIHNwZWNpZmllZCBieSB0aGUgSU5ERVhfUk9PVCBh
dHRyaWJ1dGUKLQkgICBjb3JyZXNwb25kaW5nIHRvIHRoZSBJTkRFWF9BTExPQ0FUSU9OIGF0dHJp
YnV0ZSB0aGlzIElOREVYX0JMT0NLCi0JICAgYmVsb25ncyB0by4gKi8KLQlJTkRFWF9IRUFERVJf
RkxBR1MgZmxhZ3M7CS8qIEJpdCBmaWVsZCBvZiBJTkRFWF9IRUFERVJfRkxBR1MuICovCi0JdTgg
cmVzZXJ2ZWRbM107CQkJLyogUmVzZXJ2ZWQvYWxpZ24gdG8gOC1ieXRlIGJvdW5kYXJ5LiAqLwot
fSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIElOREVYX0hFQURFUjsKLQotLyoKLSAqIEF0
dHJpYnV0ZTogSW5kZXggcm9vdCAoMHg5MCkuCi0gKgotICogTk9URTogQWx3YXlzIHJlc2lkZW50
LgotICoKLSAqIFRoaXMgaXMgZm9sbG93ZWQgYnkgYSBzZXF1ZW5jZSBvZiBpbmRleCBlbnRyaWVz
IChJTkRFWF9FTlRSWSBzdHJ1Y3R1cmVzKQotICogYXMgZGVzY3JpYmVkIGJ5IHRoZSBpbmRleCBo
ZWFkZXIuCi0gKgotICogV2hlbiBhIGRpcmVjdG9yeSBpcyBzbWFsbCBlbm91Z2ggdG8gZml0IGlu
c2lkZSB0aGUgaW5kZXggcm9vdCB0aGVuIHRoaXMKLSAqIGlzIHRoZSBvbmx5IGF0dHJpYnV0ZSBk
ZXNjcmliaW5nIHRoZSBkaXJlY3RvcnkuIFdoZW4gdGhlIGRpcmVjdG9yeSBpcyB0b28KLSAqIGxh
cmdlIHRvIGZpdCBpbiB0aGUgaW5kZXggcm9vdCwgb24gdGhlIG90aGVyIGhhbmQsIHR3byBhZGRp
dGlvbmFsIGF0dHJpYnV0ZXMKLSAqIGFyZSBwcmVzZW50OiBhbiBpbmRleCBhbGxvY2F0aW9uIGF0
dHJpYnV0ZSwgY29udGFpbmluZyBzdWItbm9kZXMgb2YgdGhlIEIrCi0gKiBkaXJlY3RvcnkgdHJl
ZSAoc2VlIGJlbG93KSwgYW5kIGEgYml0bWFwIGF0dHJpYnV0ZSwgZGVzY3JpYmluZyB3aGljaCB2
aXJ0dWFsCi0gKiBjbHVzdGVyIG51bWJlcnMgKHZjbnMpIGluIHRoZSBpbmRleCBhbGxvY2F0aW9u
IGF0dHJpYnV0ZSBhcmUgaW4gdXNlIGJ5IGFuCi0gKiBpbmRleCBibG9jay4KLSAqCi0gKiBOT1RF
OiBUaGUgcm9vdCBkaXJlY3RvcnkgKEZJTEVfcm9vdCkgY29udGFpbnMgYW4gZW50cnkgZm9yIGl0
c2VsZi4gT3RoZXIKLSAqIGRpcmVjdG9yaWVzIGRvIG5vdCBjb250YWluIGVudHJpZXMgZm9yIHRo
ZW1zZWx2ZXMsIHRob3VnaC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCUFUVFJfVFlQRSB0eXBl
OwkJCS8qIFR5cGUgb2YgdGhlIGluZGV4ZWQgYXR0cmlidXRlLiBJcwotCQkJCQkgICAkRklMRV9O
QU1FIGZvciBkaXJlY3RvcmllcywgemVybwotCQkJCQkgICBmb3IgdmlldyBpbmRleGVzLiBObyBv
dGhlciB2YWx1ZXMKLQkJCQkJICAgYWxsb3dlZC4gKi8KLQlDT0xMQVRJT05fUlVMRSBjb2xsYXRp
b25fcnVsZTsJLyogQ29sbGF0aW9uIHJ1bGUgdXNlZCB0byBzb3J0IHRoZQotCQkJCQkgICBpbmRl
eCBlbnRyaWVzLiBJZiB0eXBlIGlzICRGSUxFX05BTUUsCi0JCQkJCSAgIHRoaXMgbXVzdCBiZSBD
T0xMQVRJT05fRklMRV9OQU1FLiAqLwotCWxlMzIgaW5kZXhfYmxvY2tfc2l6ZTsJCS8qIFNpemUg
b2YgZWFjaCBpbmRleCBibG9jayBpbiBieXRlcyAoaW4KLQkJCQkJICAgdGhlIGluZGV4IGFsbG9j
YXRpb24gYXR0cmlidXRlKS4gKi8KLQl1OCBjbHVzdGVyc19wZXJfaW5kZXhfYmxvY2s7CS8qIENs
dXN0ZXIgc2l6ZSBvZiBlYWNoIGluZGV4IGJsb2NrIChpbgotCQkJCQkgICB0aGUgaW5kZXggYWxs
b2NhdGlvbiBhdHRyaWJ1dGUpLCB3aGVuCi0JCQkJCSAgIGFuIGluZGV4IGJsb2NrIGlzID49IHRo
YW4gYSBjbHVzdGVyLAotCQkJCQkgICBvdGhlcndpc2UgdGhpcyB3aWxsIGJlIHRoZSBsb2cgb2YK
LQkJCQkJICAgdGhlIHNpemUgKGxpa2UgaG93IHRoZSBlbmNvZGluZyBvZgotCQkJCQkgICB0aGUg
bWZ0IHJlY29yZCBzaXplIGFuZCB0aGUgaW5kZXgKLQkJCQkJICAgcmVjb3JkIHNpemUgZm91bmQg
aW4gdGhlIGJvb3Qgc2VjdG9yCi0JCQkJCSAgIHdvcmspLiBIYXMgdG8gYmUgYSBwb3dlciBvZiAy
LiAqLwotCXU4IHJlc2VydmVkWzNdOwkJCS8qIFJlc2VydmVkL2FsaWduIHRvIDgtYnl0ZSBib3Vu
ZGFyeS4gKi8KLQlJTkRFWF9IRUFERVIgaW5kZXg7CQkvKiBJbmRleCBoZWFkZXIgZGVzY3JpYmlu
ZyB0aGUKLQkJCQkJICAgZm9sbG93aW5nIGluZGV4IGVudHJpZXMuICovCi19IF9fYXR0cmlidXRl
X18gKChfX3BhY2tlZF9fKSkgSU5ERVhfUk9PVDsKLQotLyoKLSAqIEF0dHJpYnV0ZTogSW5kZXgg
YWxsb2NhdGlvbiAoMHhhMCkuCi0gKgotICogTk9URTogQWx3YXlzIG5vbi1yZXNpZGVudCAoZG9l
c24ndCBtYWtlIHNlbnNlIHRvIGJlIHJlc2lkZW50IGFueXdheSEpLgotICoKLSAqIFRoaXMgaXMg
YW4gYXJyYXkgb2YgaW5kZXggYmxvY2tzLiBFYWNoIGluZGV4IGJsb2NrIHN0YXJ0cyB3aXRoIGFu
Ci0gKiBJTkRFWF9CTE9DSyBzdHJ1Y3R1cmUgY29udGFpbmluZyBhbiBpbmRleCBoZWFkZXIsIGZv
bGxvd2VkIGJ5IGEgc2VxdWVuY2Ugb2YKLSAqIGluZGV4IGVudHJpZXMgKElOREVYX0VOVFJZIHN0
cnVjdHVyZXMpLCBhcyBkZXNjcmliZWQgYnkgdGhlIElOREVYX0hFQURFUi4KLSAqLwotdHlwZWRl
ZiBzdHJ1Y3QgewotLyogIDAJTlRGU19SRUNPUkQ7IC0tIFVuZm9sZGVkIGhlcmUgYXMgZ2NjIGRv
ZXNuJ3QgbGlrZSB1bm5hbWVkIHN0cnVjdHMuICovCi0JTlRGU19SRUNPUkRfVFlQRSBtYWdpYzsJ
LyogTWFnaWMgaXMgIklORFgiLiAqLwotCWxlMTYgdXNhX29mczsJCS8qIFNlZSBOVEZTX1JFQ09S
RCBkZWZpbml0aW9uLiAqLwotCWxlMTYgdXNhX2NvdW50OwkJLyogU2VlIE5URlNfUkVDT1JEIGRl
ZmluaXRpb24uICovCi0KLS8qICA4Ki8Jc2xlNjQgbHNuOwkJLyogJExvZ0ZpbGUgc2VxdWVuY2Ug
bnVtYmVyIG9mIHRoZSBsYXN0Ci0JCQkJICAgbW9kaWZpY2F0aW9uIG9mIHRoaXMgaW5kZXggYmxv
Y2suICovCi0vKiAxNiovCWxlVkNOIGluZGV4X2Jsb2NrX3ZjbjsJLyogVmlydHVhbCBjbHVzdGVy
IG51bWJlciBvZiB0aGUgaW5kZXggYmxvY2suCi0JCQkJICAgSWYgdGhlIGNsdXN0ZXJfc2l6ZSBv
biB0aGUgdm9sdW1lIGlzIDw9IHRoZQotCQkJCSAgIGluZGV4X2Jsb2NrX3NpemUgb2YgdGhlIGRp
cmVjdG9yeSwKLQkJCQkgICBpbmRleF9ibG9ja192Y24gY291bnRzIGluIHVuaXRzIG9mIGNsdXN0
ZXJzLAotCQkJCSAgIGFuZCBpbiB1bml0cyBvZiBzZWN0b3JzIG90aGVyd2lzZS4gKi8KLS8qIDI0
Ki8JSU5ERVhfSEVBREVSIGluZGV4OwkvKiBEZXNjcmliZXMgdGhlIGZvbGxvd2luZyBpbmRleCBl
bnRyaWVzLiAqLwotLyogc2l6ZW9mKCk9IDQwICgweDI4KSBieXRlcyAqLwotLyoKLSAqIFdoZW4g
Y3JlYXRpbmcgdGhlIGluZGV4IGJsb2NrLCB3ZSBwbGFjZSB0aGUgdXBkYXRlIHNlcXVlbmNlIGFy
cmF5IGF0IHRoaXMKLSAqIG9mZnNldCwgaS5lLiBiZWZvcmUgd2Ugc3RhcnQgd2l0aCB0aGUgaW5k
ZXggZW50cmllcy4gVGhpcyBhbHNvIG1ha2VzIHNlbnNlLAotICogb3RoZXJ3aXNlIHdlIGNvdWxk
IHJ1biBpbnRvIHByb2JsZW1zIHdpdGggdGhlIHVwZGF0ZSBzZXF1ZW5jZSBhcnJheQotICogY29u
dGFpbmluZyBpbiBpdHNlbGYgdGhlIGxhc3QgdHdvIGJ5dGVzIG9mIGEgc2VjdG9yIHdoaWNoIHdv
dWxkIG1lYW4gdGhhdAotICogbXVsdGkgc2VjdG9yIHRyYW5zZmVyIHByb3RlY3Rpb24gd291bGRu
J3Qgd29yay4gQXMgeW91IGNhbid0IHByb3RlY3QgZGF0YQotICogYnkgb3ZlcndyaXRpbmcgaXQg
c2luY2UgeW91IHRoZW4gY2FuJ3QgZ2V0IGl0IGJhY2suLi4KLSAqIFdoZW4gcmVhZGluZyB1c2Ug
dGhlIGRhdGEgZnJvbSB0aGUgbnRmcyByZWNvcmQgaGVhZGVyLgotICovCi19IF9fYXR0cmlidXRl
X18gKChfX3BhY2tlZF9fKSkgSU5ERVhfQkxPQ0s7Ci0KLXR5cGVkZWYgSU5ERVhfQkxPQ0sgSU5E
RVhfQUxMT0NBVElPTjsKLQotLyoKLSAqIFRoZSBzeXN0ZW0gZmlsZSBGSUxFX0V4dGVuZC8kUmVw
YXJzZSBjb250YWlucyBhbiBpbmRleCBuYW1lZCAkUiBsaXN0aW5nCi0gKiBhbGwgcmVwYXJzZSBw
b2ludHMgb24gdGhlIHZvbHVtZS4gVGhlIGluZGV4IGVudHJ5IGtleXMgYXJlIGFzIGRlZmluZWQK
LSAqIGJlbG93LiBOb3RlLCB0aGF0IHRoZXJlIGlzIG5vIGluZGV4IGRhdGEgYXNzb2NpYXRlZCB3
aXRoIHRoZSBpbmRleCBlbnRyaWVzLgotICoKLSAqIFRoZSBpbmRleCBlbnRyaWVzIGFyZSBzb3J0
ZWQgYnkgdGhlIGluZGV4IGtleSBmaWxlX2lkLiBUaGUgY29sbGF0aW9uIHJ1bGUgaXMKLSAqIENP
TExBVElPTl9OVE9GU19VTE9OR1MuIEZJWE1FOiBWZXJpZnkgd2hldGhlciB0aGUgcmVwYXJzZV90
YWcgaXMgbm90IHRoZQotICogcHJpbWFyeSBrZXkgLyBpcyBub3QgYSBrZXkgYXQgYWxsLiAoQUlB
KQotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JbGUzMiByZXBhcnNlX3RhZzsJLyogUmVwYXJzZSBw
b2ludCB0eXBlIChpbmMuIGZsYWdzKS4gKi8KLQlsZU1GVF9SRUYgZmlsZV9pZDsJLyogTWZ0IHJl
Y29yZCBvZiB0aGUgZmlsZSBjb250YWluaW5nIHRoZQotCQkJCSAgIHJlcGFyc2UgcG9pbnQgYXR0
cmlidXRlLiAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIFJFUEFSU0VfSU5ERVhf
S0VZOwotCi0vKgotICogUXVvdGEgZmxhZ3MgKDMyLWJpdCkuCi0gKgotICogVGhlIHVzZXIgcXVv
dGEgZmxhZ3MuICBOYW1lcyBleHBsYWluIG1lYW5pbmcuCi0gKi8KLWVudW0gewotCVFVT1RBX0ZM
QUdfREVGQVVMVF9MSU1JVFMJPSBjcHVfdG9fbGUzMigweDAwMDAwMDAxKSwKLQlRVU9UQV9GTEFH
X0xJTUlUX1JFQUNIRUQJPSBjcHVfdG9fbGUzMigweDAwMDAwMDAyKSwKLQlRVU9UQV9GTEFHX0lE
X0RFTEVURUQJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwNCksCi0KLQlRVU9UQV9GTEFHX1VTRVJf
TUFTSwkJPSBjcHVfdG9fbGUzMigweDAwMDAwMDA3KSwKLQkvKiBUaGlzIGlzIGEgYml0IG1hc2sg
Zm9yIHRoZSB1c2VyIHF1b3RhIGZsYWdzLiAqLwotCi0JLyoKLQkgKiBUaGVzZSBmbGFncyBhcmUg
b25seSBwcmVzZW50IGluIHRoZSBxdW90YSBkZWZhdWx0cyBpbmRleCBlbnRyeSwgaS5lLgotCSAq
IGluIHRoZSBlbnRyeSB3aGVyZSBvd25lcl9pZCA9IFFVT1RBX0RFRkFVTFRTX0lELgotCSAqLwot
CVFVT1RBX0ZMQUdfVFJBQ0tJTkdfRU5BQkxFRAk9IGNwdV90b19sZTMyKDB4MDAwMDAwMTApLAot
CVFVT1RBX0ZMQUdfRU5GT1JDRU1FTlRfRU5BQkxFRAk9IGNwdV90b19sZTMyKDB4MDAwMDAwMjAp
LAotCVFVT1RBX0ZMQUdfVFJBQ0tJTkdfUkVRVUVTVEVECT0gY3B1X3RvX2xlMzIoMHgwMDAwMDA0
MCksCi0JUVVPVEFfRkxBR19MT0dfVEhSRVNIT0xECT0gY3B1X3RvX2xlMzIoMHgwMDAwMDA4MCks
Ci0KLQlRVU9UQV9GTEFHX0xPR19MSU1JVAkJPSBjcHVfdG9fbGUzMigweDAwMDAwMTAwKSwKLQlR
VU9UQV9GTEFHX09VVF9PRl9EQVRFCQk9IGNwdV90b19sZTMyKDB4MDAwMDAyMDApLAotCVFVT1RB
X0ZMQUdfQ09SUlVQVAkJPSBjcHVfdG9fbGUzMigweDAwMDAwNDAwKSwKLQlRVU9UQV9GTEFHX1BF
TkRJTkdfREVMRVRFUwk9IGNwdV90b19sZTMyKDB4MDAwMDA4MDApLAotfTsKLQotdHlwZWRlZiBs
ZTMyIFFVT1RBX0ZMQUdTOwotCi0vKgotICogVGhlIHN5c3RlbSBmaWxlIEZJTEVfRXh0ZW5kLyRR
dW90YSBjb250YWlucyB0d28gaW5kZXhlcyAkTyBhbmQgJFEuIFF1b3RhcwotICogYXJlIG9uIGEg
cGVyIHZvbHVtZSBhbmQgcGVyIHVzZXIgYmFzaXMuCi0gKgotICogVGhlICRRIGluZGV4IGNvbnRh
aW5zIG9uZSBlbnRyeSBmb3IgZWFjaCBleGlzdGluZyB1c2VyX2lkIG9uIHRoZSB2b2x1bWUuIFRo
ZQotICogaW5kZXgga2V5IGlzIHRoZSB1c2VyX2lkIG9mIHRoZSB1c2VyL2dyb3VwIG93bmluZyB0
aGlzIHF1b3RhIGNvbnRyb2wgZW50cnksCi0gKiBpLmUuIHRoZSBrZXkgaXMgdGhlIG93bmVyX2lk
LiBUaGUgdXNlcl9pZCBvZiB0aGUgb3duZXIgb2YgYSBmaWxlLCBpLmUuIHRoZQotICogb3duZXJf
aWQsIGlzIGZvdW5kIGluIHRoZSBzdGFuZGFyZCBpbmZvcm1hdGlvbiBhdHRyaWJ1dGUuIFRoZSBj
b2xsYXRpb24gcnVsZQotICogZm9yICRRIGlzIENPTExBVElPTl9OVE9GU19VTE9ORy4KLSAqCi0g
KiBUaGUgJE8gaW5kZXggY29udGFpbnMgb25lIGVudHJ5IGZvciBlYWNoIHVzZXIvZ3JvdXAgd2hv
IGhhcyBiZWVuIGFzc2lnbmVkCi0gKiBhIHF1b3RhIG9uIHRoYXQgdm9sdW1lLiBUaGUgaW5kZXgg
a2V5IGhvbGRzIHRoZSBTSUQgb2YgdGhlIHVzZXJfaWQgdGhlCi0gKiBlbnRyeSBiZWxvbmdzIHRv
LCBpLmUuIHRoZSBvd25lcl9pZC4gVGhlIGNvbGxhdGlvbiBydWxlIGZvciAkTyBpcwotICogQ09M
TEFUSU9OX05UT0ZTX1NJRC4KLSAqCi0gKiBUaGUgJE8gaW5kZXggZW50cnkgZGF0YSBpcyB0aGUg
dXNlcl9pZCBvZiB0aGUgdXNlciBjb3JyZXNwb25kaW5nIHRvIHRoZSBTSUQuCi0gKiBUaGlzIHVz
ZXJfaWQgaXMgdXNlZCBhcyBhbiBpbmRleCBpbnRvICRRIHRvIGZpbmQgdGhlIHF1b3RhIGNvbnRy
b2wgZW50cnkKLSAqIGFzc29jaWF0ZWQgd2l0aCB0aGUgU0lELgotICoKLSAqIFRoZSAkUSBpbmRl
eCBlbnRyeSBkYXRhIGlzIHRoZSBxdW90YSBjb250cm9sIGVudHJ5IGFuZCBpcyBkZWZpbmVkIGJl
bG93LgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JbGUzMiB2ZXJzaW9uOwkJLyogQ3VycmVudGx5
IGVxdWFscyAyLiAqLwotCVFVT1RBX0ZMQUdTIGZsYWdzOwkvKiBGbGFncyBkZXNjcmliaW5nIHRo
aXMgcXVvdGEgZW50cnkuICovCi0JbGU2NCBieXRlc191c2VkOwkvKiBIb3cgbWFueSBieXRlcyBv
ZiB0aGUgcXVvdGEgYXJlIGluIHVzZS4gKi8KLQlzbGU2NCBjaGFuZ2VfdGltZTsJLyogTGFzdCB0
aW1lIHRoaXMgcXVvdGEgZW50cnkgd2FzIGNoYW5nZWQuICovCi0Jc2xlNjQgdGhyZXNob2xkOwkv
KiBTb2Z0IHF1b3RhICgtMSBpZiBub3QgbGltaXRlZCkuICovCi0Jc2xlNjQgbGltaXQ7CQkvKiBI
YXJkIHF1b3RhICgtMSBpZiBub3QgbGltaXRlZCkuICovCi0Jc2xlNjQgZXhjZWVkZWRfdGltZTsJ
LyogSG93IGxvbmcgdGhlIHNvZnQgcXVvdGEgaGFzIGJlZW4gZXhjZWVkZWQuICovCi0JU0lEIHNp
ZDsJCS8qIFRoZSBTSUQgb2YgdGhlIHVzZXIvb2JqZWN0IGFzc29jaWF0ZWQgd2l0aAotCQkJCSAg
IHRoaXMgcXVvdGEgZW50cnkuICBFcXVhbHMgemVybyBmb3IgdGhlIHF1b3RhCi0JCQkJICAgZGVm
YXVsdHMgZW50cnkgKGFuZCBpbiBmYWN0IG9uIGEgV2luWFAKLQkJCQkgICB2b2x1bWUsIGl0IGlz
IG5vdCBwcmVzZW50IGF0IGFsbCkuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkg
UVVPVEFfQ09OVFJPTF9FTlRSWTsKLQotLyoKLSAqIFByZWRlZmluZWQgb3duZXJfaWQgdmFsdWVz
ICgzMi1iaXQpLgotICovCi1lbnVtIHsKLQlRVU9UQV9JTlZBTElEX0lECT0gY3B1X3RvX2xlMzIo
MHgwMDAwMDAwMCksCi0JUVVPVEFfREVGQVVMVFNfSUQJPSBjcHVfdG9fbGUzMigweDAwMDAwMDAx
KSwKLQlRVU9UQV9GSVJTVF9VU0VSX0lECT0gY3B1X3RvX2xlMzIoMHgwMDAwMDEwMCksCi19Owot
Ci0vKgotICogQ3VycmVudCBjb25zdGFudHMgZm9yIHF1b3RhIGNvbnRyb2wgZW50cmllcy4KLSAq
LwotdHlwZWRlZiBlbnVtIHsKLQkvKiBDdXJyZW50IHZlcnNpb24uICovCi0JUVVPVEFfVkVSU0lP
Tgk9IDIsCi19IFFVT1RBX0NPTlRST0xfRU5UUllfQ09OU1RBTlRTOwotCi0vKgotICogSW5kZXgg
ZW50cnkgZmxhZ3MgKDE2LWJpdCkuCi0gKi8KLWVudW0gewotCUlOREVYX0VOVFJZX05PREUgPSBj
cHVfdG9fbGUxNigxKSwgLyogVGhpcyBlbnRyeSBjb250YWlucyBhCi0JCQlzdWItbm9kZSwgaS5l
LiBhIHJlZmVyZW5jZSB0byBhbiBpbmRleCBibG9jayBpbiBmb3JtIG9mCi0JCQlhIHZpcnR1YWwg
Y2x1c3RlciBudW1iZXIgKHNlZSBiZWxvdykuICovCi0JSU5ERVhfRU5UUllfRU5EICA9IGNwdV90
b19sZTE2KDIpLCAvKiBUaGlzIHNpZ25pZmllcyB0aGUgbGFzdAotCQkJZW50cnkgaW4gYW4gaW5k
ZXggYmxvY2suICBUaGUgaW5kZXggZW50cnkgZG9lcyBub3QKLQkJCXJlcHJlc2VudCBhIGZpbGUg
YnV0IGl0IGNhbiBwb2ludCB0byBhIHN1Yi1ub2RlLiAqLwotCi0JSU5ERVhfRU5UUllfU1BBQ0Vf
RklMTEVSID0gY3B1X3RvX2xlMTYoMHhmZmZmKSwgLyogZ2NjOiBGb3JjZQotCQkJZW51bSBiaXQg
d2lkdGggdG8gMTYtYml0LiAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpOwotCi10
eXBlZGVmIGxlMTYgSU5ERVhfRU5UUllfRkxBR1M7Ci0KLS8qCi0gKiBUaGlzIHRoZSBpbmRleCBl
bnRyeSBoZWFkZXIgKHNlZSBiZWxvdykuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLS8qICAwKi8J
dW5pb24gewotCQlzdHJ1Y3QgeyAvKiBPbmx5IHZhbGlkIHdoZW4gSU5ERVhfRU5UUllfRU5EIGlz
IG5vdCBzZXQuICovCi0JCQlsZU1GVF9SRUYgaW5kZXhlZF9maWxlOwkvKiBUaGUgbWZ0IHJlZmVy
ZW5jZSBvZiB0aGUgZmlsZQotCQkJCQkJICAgZGVzY3JpYmVkIGJ5IHRoaXMgaW5kZXgKLQkJCQkJ
CSAgIGVudHJ5LiBVc2VkIGZvciBkaXJlY3RvcnkKLQkJCQkJCSAgIGluZGV4ZXMuICovCi0JCX0g
X19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBkaXI7Ci0JCXN0cnVjdCB7IC8qIFVzZWQgZm9y
IHZpZXdzL2luZGV4ZXMgdG8gZmluZCB0aGUgZW50cnkncyBkYXRhLiAqLwotCQkJbGUxNiBkYXRh
X29mZnNldDsJLyogRGF0YSBieXRlIG9mZnNldCBmcm9tIHRoaXMKLQkJCQkJCSAgIElOREVYX0VO
VFJZLiBGb2xsb3dzIHRoZQotCQkJCQkJICAgaW5kZXgga2V5LiAqLwotCQkJbGUxNiBkYXRhX2xl
bmd0aDsJLyogRGF0YSBsZW5ndGggaW4gYnl0ZXMuICovCi0JCQlsZTMyIHJlc2VydmVkVjsJCS8q
IFJlc2VydmVkICh6ZXJvKS4gKi8KLQkJfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIHZp
OwotCX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBkYXRhOwotLyogIDgqLwlsZTE2IGxl
bmd0aDsJCSAvKiBCeXRlIHNpemUgb2YgdGhpcyBpbmRleCBlbnRyeSwgbXVsdGlwbGUgb2YKLQkJ
CQkgICAgOC1ieXRlcy4gKi8KLS8qIDEwKi8JbGUxNiBrZXlfbGVuZ3RoOwkgLyogQnl0ZSBzaXpl
IG9mIHRoZSBrZXkgdmFsdWUsIHdoaWNoIGlzIGluIHRoZQotCQkJCSAgICBpbmRleCBlbnRyeS4g
SXQgZm9sbG93cyBmaWVsZCByZXNlcnZlZC4gTm90Ci0JCQkJICAgIG11bHRpcGxlIG9mIDgtYnl0
ZXMuICovCi0vKiAxMiovCUlOREVYX0VOVFJZX0ZMQUdTIGZsYWdzOyAvKiBCaXQgZmllbGQgb2Yg
SU5ERVhfRU5UUllfKiBmbGFncy4gKi8KLS8qIDE0Ki8JbGUxNiByZXNlcnZlZDsJCSAvKiBSZXNl
cnZlZC9hbGlnbiB0byA4LWJ5dGUgYm91bmRhcnkuICovCi0vKiBzaXplb2YoKSA9IDE2IGJ5dGVz
ICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgSU5ERVhfRU5UUllfSEVBREVSOwot
Ci0vKgotICogVGhpcyBpcyBhbiBpbmRleCBlbnRyeS4gQSBzZXF1ZW5jZSBvZiBzdWNoIGVudHJp
ZXMgZm9sbG93cyBlYWNoIElOREVYX0hFQURFUgotICogc3RydWN0dXJlLiBUb2dldGhlciB0aGV5
IG1ha2UgdXAgYSBjb21wbGV0ZSBpbmRleC4gVGhlIGluZGV4IGZvbGxvd3MgZWl0aGVyCi0gKiBh
biBpbmRleCByb290IGF0dHJpYnV0ZSBvciBhbiBpbmRleCBhbGxvY2F0aW9uIGF0dHJpYnV0ZS4K
LSAqCi0gKiBOT1RFOiBCZWZvcmUgTlRGUyAzLjAgb25seSBmaWxlbmFtZSBhdHRyaWJ1dGVzIHdl
cmUgaW5kZXhlZC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotLypPZnMqLwotLyogIDAJSU5ERVhf
RU5UUllfSEVBREVSOyAtLSBVbmZvbGRlZCBoZXJlIGFzIGdjYyBkaXNsaWtlcyB1bm5hbWVkIHN0
cnVjdHMuICovCi0JdW5pb24gewotCQlzdHJ1Y3QgeyAvKiBPbmx5IHZhbGlkIHdoZW4gSU5ERVhf
RU5UUllfRU5EIGlzIG5vdCBzZXQuICovCi0JCQlsZU1GVF9SRUYgaW5kZXhlZF9maWxlOwkvKiBU
aGUgbWZ0IHJlZmVyZW5jZSBvZiB0aGUgZmlsZQotCQkJCQkJICAgZGVzY3JpYmVkIGJ5IHRoaXMg
aW5kZXgKLQkJCQkJCSAgIGVudHJ5LiBVc2VkIGZvciBkaXJlY3RvcnkKLQkJCQkJCSAgIGluZGV4
ZXMuICovCi0JCX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBkaXI7Ci0JCXN0cnVjdCB7
IC8qIFVzZWQgZm9yIHZpZXdzL2luZGV4ZXMgdG8gZmluZCB0aGUgZW50cnkncyBkYXRhLiAqLwot
CQkJbGUxNiBkYXRhX29mZnNldDsJLyogRGF0YSBieXRlIG9mZnNldCBmcm9tIHRoaXMKLQkJCQkJ
CSAgIElOREVYX0VOVFJZLiBGb2xsb3dzIHRoZQotCQkJCQkJICAgaW5kZXgga2V5LiAqLwotCQkJ
bGUxNiBkYXRhX2xlbmd0aDsJLyogRGF0YSBsZW5ndGggaW4gYnl0ZXMuICovCi0JCQlsZTMyIHJl
c2VydmVkVjsJCS8qIFJlc2VydmVkICh6ZXJvKS4gKi8KLQkJfSBfX2F0dHJpYnV0ZV9fICgoX19w
YWNrZWRfXykpIHZpOwotCX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBkYXRhOwotCWxl
MTYgbGVuZ3RoOwkJIC8qIEJ5dGUgc2l6ZSBvZiB0aGlzIGluZGV4IGVudHJ5LCBtdWx0aXBsZSBv
ZgotCQkJCSAgICA4LWJ5dGVzLiAqLwotCWxlMTYga2V5X2xlbmd0aDsJIC8qIEJ5dGUgc2l6ZSBv
ZiB0aGUga2V5IHZhbHVlLCB3aGljaCBpcyBpbiB0aGUKLQkJCQkgICAgaW5kZXggZW50cnkuIEl0
IGZvbGxvd3MgZmllbGQgcmVzZXJ2ZWQuIE5vdAotCQkJCSAgICBtdWx0aXBsZSBvZiA4LWJ5dGVz
LiAqLwotCUlOREVYX0VOVFJZX0ZMQUdTIGZsYWdzOyAvKiBCaXQgZmllbGQgb2YgSU5ERVhfRU5U
UllfKiBmbGFncy4gKi8KLQlsZTE2IHJlc2VydmVkOwkJIC8qIFJlc2VydmVkL2FsaWduIHRvIDgt
Ynl0ZSBib3VuZGFyeS4gKi8KLQotLyogMTYqLwl1bmlvbiB7CQkvKiBUaGUga2V5IG9mIHRoZSBp
bmRleGVkIGF0dHJpYnV0ZS4gTk9URTogT25seSBwcmVzZW50Ci0JCQkgICBpZiBJTkRFWF9FTlRS
WV9FTkQgYml0IGluIGZsYWdzIGlzIG5vdCBzZXQuIE5PVEU6IE9uCi0JCQkgICBOVEZTIHZlcnNp
b25zIGJlZm9yZSAzLjAgdGhlIG9ubHkgdmFsaWQga2V5IGlzIHRoZQotCQkJICAgRklMRV9OQU1F
X0FUVFIuIE9uIE5URlMgMy4wKyB0aGUgZm9sbG93aW5nCi0JCQkgICBhZGRpdGlvbmFsIGluZGV4
IGtleXMgYXJlIGRlZmluZWQ6ICovCi0JCUZJTEVfTkFNRV9BVFRSIGZpbGVfbmFtZTsvKiAkSTMw
IGluZGV4IGluIGRpcmVjdG9yaWVzLiAqLwotCQlTSUlfSU5ERVhfS0VZIHNpaTsJLyogJFNJSSBp
bmRleCBpbiAkU2VjdXJlLiAqLwotCQlTREhfSU5ERVhfS0VZIHNkaDsJLyogJFNESCBpbmRleCBp
biAkU2VjdXJlLiAqLwotCQlHVUlEIG9iamVjdF9pZDsJCS8qICRPIGluZGV4IGluIEZJTEVfRXh0
ZW5kLyRPYmpJZDogVGhlCi0JCQkJCSAgIG9iamVjdF9pZCBvZiB0aGUgbWZ0IHJlY29yZCBmb3Vu
ZCBpbgotCQkJCQkgICB0aGUgZGF0YSBwYXJ0IG9mIHRoZSBpbmRleC4gKi8KLQkJUkVQQVJTRV9J
TkRFWF9LRVkgcmVwYXJzZTsJLyogJFIgaW5kZXggaW4KLQkJCQkJCSAgIEZJTEVfRXh0ZW5kLyRS
ZXBhcnNlLiAqLwotCQlTSUQgc2lkOwkJLyogJE8gaW5kZXggaW4gRklMRV9FeHRlbmQvJFF1b3Rh
OgotCQkJCQkgICBTSUQgb2YgdGhlIG93bmVyIG9mIHRoZSB1c2VyX2lkLiAqLwotCQlsZTMyIG93
bmVyX2lkOwkJLyogJFEgaW5kZXggaW4gRklMRV9FeHRlbmQvJFF1b3RhOgotCQkJCQkgICB1c2Vy
X2lkIG9mIHRoZSBvd25lciBvZiB0aGUgcXVvdGEKLQkJCQkJICAgY29udHJvbCBlbnRyeSBpbiB0
aGUgZGF0YSBwYXJ0IG9mCi0JCQkJCSAgIHRoZSBpbmRleC4gKi8KLQl9IF9fYXR0cmlidXRlX18g
KChfX3BhY2tlZF9fKSkga2V5OwotCS8qIFRoZSAob3B0aW9uYWwpIGluZGV4IGRhdGEgaXMgaW5z
ZXJ0ZWQgaGVyZSB3aGVuIGNyZWF0aW5nLiAqLwotCS8vIGxlVkNOIHZjbjsJLyogSWYgSU5ERVhf
RU5UUllfTk9ERSBiaXQgaW4gZmxhZ3MgaXMgc2V0LCB0aGUgbGFzdAotCS8vCQkgICBlaWdodCBi
eXRlcyBvZiB0aGlzIGluZGV4IGVudHJ5IGNvbnRhaW4gdGhlIHZpcnR1YWwKLQkvLwkJICAgY2x1
c3RlciBudW1iZXIgb2YgdGhlIGluZGV4IGJsb2NrIHRoYXQgaG9sZHMgdGhlCi0JLy8JCSAgIGVu
dHJpZXMgaW1tZWRpYXRlbHkgcHJlY2VkaW5nIHRoZSBjdXJyZW50IGVudHJ5ICh0aGUKLQkvLwkJ
ICAgdmNuIHJlZmVyZW5jZXMgdGhlIGNvcnJlc3BvbmRpbmcgY2x1c3RlciBpbiB0aGUgZGF0YQot
CS8vCQkgICBvZiB0aGUgbm9uLXJlc2lkZW50IGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlKS4g
SWYKLQkvLwkJICAgdGhlIGtleV9sZW5ndGggaXMgemVybywgdGhlbiB0aGUgdmNuIGltbWVkaWF0
ZWx5Ci0JLy8JCSAgIGZvbGxvd3MgdGhlIElOREVYX0VOVFJZX0hFQURFUi4gUmVnYXJkbGVzcyBv
ZgotCS8vCQkgICBrZXlfbGVuZ3RoLCB0aGUgYWRkcmVzcyBvZiB0aGUgOC1ieXRlIGJvdW5kYXJ5
Ci0JLy8JCSAgIGFsaWduZWQgdmNuIG9mIElOREVYX0VOVFJZe19IRUFERVJ9ICppZSBpcyBnaXZl
biBieQotCS8vCQkgICAoY2hhciopaWUgKyBsZTE2X3RvX2NwdShpZSopLT5sZW5ndGgpIC0gc2l6
ZW9mKFZDTiksCi0JLy8JCSAgIHdoZXJlIHNpemVvZihWQ04pIGNhbiBiZSBoYXJkY29kZWQgYXMg
OCBpZiB3YW50ZWQuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgSU5ERVhfRU5U
Ulk7Ci0KLS8qCi0gKiBBdHRyaWJ1dGU6IEJpdG1hcCAoMHhiMCkuCi0gKgotICogQ29udGFpbnMg
YW4gYXJyYXkgb2YgYml0cyAoYWthIGEgYml0ZmllbGQpLgotICoKLSAqIFdoZW4gdXNlZCBpbiBj
b25qdW5jdGlvbiB3aXRoIHRoZSBpbmRleCBhbGxvY2F0aW9uIGF0dHJpYnV0ZSwgZWFjaCBiaXQK
LSAqIGNvcnJlc3BvbmRzIHRvIG9uZSBpbmRleCBibG9jayB3aXRoaW4gdGhlIGluZGV4IGFsbG9j
YXRpb24gYXR0cmlidXRlLiBUaHVzCi0gKiB0aGUgbnVtYmVyIG9mIGJpdHMgaW4gdGhlIGJpdG1h
cCAqIGluZGV4IGJsb2NrIHNpemUgLyBjbHVzdGVyIHNpemUgaXMgdGhlCi0gKiBudW1iZXIgb2Yg
Y2x1c3RlcnMgaW4gdGhlIGluZGV4IGFsbG9jYXRpb24gYXR0cmlidXRlLgotICovCi10eXBlZGVm
IHN0cnVjdCB7Ci0JdTggYml0bWFwWzBdOwkJCS8qIEFycmF5IG9mIGJpdHMuICovCi19IF9fYXR0
cmlidXRlX18gKChfX3BhY2tlZF9fKSkgQklUTUFQX0FUVFI7Ci0KLS8qCi0gKiBUaGUgcmVwYXJz
ZSBwb2ludCB0YWcgZGVmaW5lcyB0aGUgdHlwZSBvZiB0aGUgcmVwYXJzZSBwb2ludC4gSXQgYWxz
bwotICogaW5jbHVkZXMgc2V2ZXJhbCBmbGFncywgd2hpY2ggZnVydGhlciBkZXNjcmliZSB0aGUg
cmVwYXJzZSBwb2ludC4KLSAqCi0gKiBUaGUgcmVwYXJzZSBwb2ludCB0YWcgaXMgYW4gdW5zaWdu
ZWQgMzItYml0IHZhbHVlIGRpdmlkZWQgaW4gdGhyZWUgcGFydHM6Ci0gKgotICogMS4gVGhlIGxl
YXN0IHNpZ25pZmljYW50IDE2IGJpdHMgKGkuZS4gYml0cyAwIHRvIDE1KSBzcGVjaWZpeSB0aGUg
dHlwZSBvZgotICogICAgdGhlIHJlcGFyc2UgcG9pbnQuCi0gKiAyLiBUaGUgMTMgYml0cyBhZnRl
ciB0aGlzIChpLmUuIGJpdHMgMTYgdG8gMjgpIGFyZSByZXNlcnZlZCBmb3IgZnV0dXJlIHVzZS4K
LSAqIDMuIFRoZSBtb3N0IHNpZ25pZmljYW50IHRocmVlIGJpdHMgYXJlIGZsYWdzIGRlc2NyaWJp
bmcgdGhlIHJlcGFyc2UgcG9pbnQuCi0gKiAgICBUaGV5IGFyZSBkZWZpbmVkIGFzIGZvbGxvd3M6
Ci0gKgliaXQgMjk6IE5hbWUgc3Vycm9nYXRlIGJpdC4gSWYgc2V0LCB0aGUgZmlsZW5hbWUgaXMg
YW4gYWxpYXMgZm9yCi0gKgkJYW5vdGhlciBvYmplY3QgaW4gdGhlIHN5c3RlbS4KLSAqCWJpdCAz
MDogSGlnaC1sYXRlbmN5IGJpdC4gSWYgc2V0LCBhY2Nlc3NpbmcgdGhlIGZpcnN0IGJ5dGUgb2Yg
ZGF0YSB3aWxsCi0gKgkJYmUgc2xvdy4gKEUuZy4gdGhlIGRhdGEgaXMgc3RvcmVkIG9uIGEgdGFw
ZSBkcml2ZS4pCi0gKgliaXQgMzE6IE1pY3Jvc29mdCBiaXQuIElmIHNldCwgdGhlIHRhZyBpcyBv
d25lZCBieSBNaWNyb3NvZnQuIFVzZXIKLSAqCQlkZWZpbmVkIHRhZ3MgaGF2ZSB0byB1c2UgemVy
byBoZXJlLgotICoKLSAqIFRoZXNlIGFyZSB0aGUgcHJlZGVmaW5lZCByZXBhcnNlIHBvaW50IHRh
Z3M6Ci0gKi8KLWVudW0gewotCUlPX1JFUEFSU0VfVEFHX0lTX0FMSUFTCQk9IGNwdV90b19sZTMy
KDB4MjAwMDAwMDApLAotCUlPX1JFUEFSU0VfVEFHX0lTX0hJR0hfTEFURU5DWQk9IGNwdV90b19s
ZTMyKDB4NDAwMDAwMDApLAotCUlPX1JFUEFSU0VfVEFHX0lTX01JQ1JPU09GVAk9IGNwdV90b19s
ZTMyKDB4ODAwMDAwMDApLAotCi0JSU9fUkVQQVJTRV9UQUdfUkVTRVJWRURfWkVSTwk9IGNwdV90
b19sZTMyKDB4MDAwMDAwMDApLAotCUlPX1JFUEFSU0VfVEFHX1JFU0VSVkVEX09ORQk9IGNwdV90
b19sZTMyKDB4MDAwMDAwMDEpLAotCUlPX1JFUEFSU0VfVEFHX1JFU0VSVkVEX1JBTkdFCT0gY3B1
X3RvX2xlMzIoMHgwMDAwMDAwMSksCi0KLQlJT19SRVBBUlNFX1RBR19OU1MJCT0gY3B1X3RvX2xl
MzIoMHg2ODAwMDAwNSksCi0JSU9fUkVQQVJTRV9UQUdfTlNTX1JFQ09WRVIJPSBjcHVfdG9fbGUz
MigweDY4MDAwMDA2KSwKLQlJT19SRVBBUlNFX1RBR19TSVMJCT0gY3B1X3RvX2xlMzIoMHg2ODAw
MDAwNyksCi0JSU9fUkVQQVJTRV9UQUdfREZTCQk9IGNwdV90b19sZTMyKDB4NjgwMDAwMDgpLAot
Ci0JSU9fUkVQQVJTRV9UQUdfTU9VTlRfUE9JTlQJPSBjcHVfdG9fbGUzMigweDg4MDAwMDAzKSwK
LQotCUlPX1JFUEFSU0VfVEFHX0hTTQkJPSBjcHVfdG9fbGUzMigweGE4MDAwMDA0KSwKLQotCUlP
X1JFUEFSU0VfVEFHX1NZTUJPTElDX0xJTksJPSBjcHVfdG9fbGUzMigweGU4MDAwMDAwKSwKLQot
CUlPX1JFUEFSU0VfVEFHX1ZBTElEX1ZBTFVFUwk9IGNwdV90b19sZTMyKDB4ZTAwMGZmZmYpLAot
fTsKLQotLyoKLSAqIEF0dHJpYnV0ZTogUmVwYXJzZSBwb2ludCAoMHhjMCkuCi0gKgotICogTk9U
RTogQ2FuIGJlIHJlc2lkZW50IG9yIG5vbi1yZXNpZGVudC4KLSAqLwotdHlwZWRlZiBzdHJ1Y3Qg
ewotCWxlMzIgcmVwYXJzZV90YWc7CQkvKiBSZXBhcnNlIHBvaW50IHR5cGUgKGluYy4gZmxhZ3Mp
LiAqLwotCWxlMTYgcmVwYXJzZV9kYXRhX2xlbmd0aDsJLyogQnl0ZSBzaXplIG9mIHJlcGFyc2Ug
ZGF0YS4gKi8KLQlsZTE2IHJlc2VydmVkOwkJCS8qIEFsaWduIHRvIDgtYnl0ZSBib3VuZGFyeS4g
Ki8KLQl1OCByZXBhcnNlX2RhdGFbMF07CQkvKiBNZWFuaW5nIGRlcGVuZHMgb24gcmVwYXJzZV90
YWcuICovCi19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgUkVQQVJTRV9QT0lOVDsKLQot
LyoKLSAqIEF0dHJpYnV0ZTogRXh0ZW5kZWQgYXR0cmlidXRlIChFQSkgaW5mb3JtYXRpb24gKDB4
ZDApLgotICoKLSAqIE5PVEU6IEFsd2F5cyByZXNpZGVudC4gKElzIHRoaXMgdHJ1ZT8/PykKLSAq
LwotdHlwZWRlZiBzdHJ1Y3QgewotCWxlMTYgZWFfbGVuZ3RoOwkJLyogQnl0ZSBzaXplIG9mIHRo
ZSBwYWNrZWQgZXh0ZW5kZWQKLQkJCQkgICBhdHRyaWJ1dGVzLiAqLwotCWxlMTYgbmVlZF9lYV9j
b3VudDsJLyogVGhlIG51bWJlciBvZiBleHRlbmRlZCBhdHRyaWJ1dGVzIHdoaWNoIGhhdmUKLQkJ
CQkgICB0aGUgTkVFRF9FQSBiaXQgc2V0LiAqLwotCWxlMzIgZWFfcXVlcnlfbGVuZ3RoOwkvKiBC
eXRlIHNpemUgb2YgdGhlIGJ1ZmZlciByZXF1aXJlZCB0byBxdWVyeQotCQkJCSAgIHRoZSBleHRl
bmRlZCBhdHRyaWJ1dGVzIHdoZW4gY2FsbGluZwotCQkJCSAgIFp3UXVlcnlFYUZpbGUoKSBpbiBX
aW5kb3dzIE5ULzJrLiBJLmUuIHRoZQotCQkJCSAgIGJ5dGUgc2l6ZSBvZiB0aGUgdW5wYWNrZWQg
ZXh0ZW5kZWQKLQkJCQkgICBhdHRyaWJ1dGVzLiAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNr
ZWRfXykpIEVBX0lORk9STUFUSU9OOwotCi0vKgotICogRXh0ZW5kZWQgYXR0cmlidXRlIGZsYWdz
ICg4LWJpdCkuCi0gKi8KLWVudW0gewotCU5FRURfRUEJPSAweDgwCQkvKiBJZiBzZXQgdGhlIGZp
bGUgdG8gd2hpY2ggdGhlIEVBIGJlbG9uZ3MKLQkJCQkgICBjYW5ub3QgYmUgaW50ZXJwcmV0ZWQg
d2l0aG91dCB1bmRlcnN0YW5kaW5nCi0JCQkJICAgdGhlIGFzc29jaWF0ZXMgZXh0ZW5kZWQgYXR0
cmlidXRlcy4gKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKTsKLQotdHlwZWRlZiB1
OCBFQV9GTEFHUzsKLQotLyoKLSAqIEF0dHJpYnV0ZTogRXh0ZW5kZWQgYXR0cmlidXRlIChFQSkg
KDB4ZTApLgotICoKLSAqIE5PVEU6IENhbiBiZSByZXNpZGVudCBvciBub24tcmVzaWRlbnQuCi0g
KgotICogTGlrZSB0aGUgYXR0cmlidXRlIGxpc3QgYW5kIHRoZSBpbmRleCBidWZmZXIgbGlzdCwg
dGhlIEVBIGF0dHJpYnV0ZSB2YWx1ZSBpcwotICogYSBzZXF1ZW5jZSBvZiBFQV9BVFRSIHZhcmlh
YmxlIGxlbmd0aCByZWNvcmRzLgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JbGUzMiBuZXh0X2Vu
dHJ5X29mZnNldDsJLyogT2Zmc2V0IHRvIHRoZSBuZXh0IEVBX0FUVFIuICovCi0JRUFfRkxBR1Mg
ZmxhZ3M7CQkvKiBGbGFncyBkZXNjcmliaW5nIHRoZSBFQS4gKi8KLQl1OCBlYV9uYW1lX2xlbmd0
aDsJLyogTGVuZ3RoIG9mIHRoZSBuYW1lIG9mIHRoZSBFQSBpbiBieXRlcwotCQkJCSAgIGV4Y2x1
ZGluZyB0aGUgJ1wwJyBieXRlIHRlcm1pbmF0b3IuICovCi0JbGUxNiBlYV92YWx1ZV9sZW5ndGg7
CS8qIEJ5dGUgc2l6ZSBvZiB0aGUgRUEncyB2YWx1ZS4gKi8KLQl1OCBlYV9uYW1lWzBdOwkJLyog
TmFtZSBvZiB0aGUgRUEuICBOb3RlIHRoaXMgaXMgQVNDSUksIG5vdAotCQkJCSAgIFVuaWNvZGUg
YW5kIGl0IGlzIHplcm8gdGVybWluYXRlZC4gKi8KLQl1OCBlYV92YWx1ZVswXTsJCS8qIFRoZSB2
YWx1ZSBvZiB0aGUgRUEuICBJbW1lZGlhdGVseSBmb2xsb3dzCi0JCQkJICAgdGhlIG5hbWUuICov
Ci19IF9fYXR0cmlidXRlX18gKChfX3BhY2tlZF9fKSkgRUFfQVRUUjsKLQotLyoKLSAqIEF0dHJp
YnV0ZTogUHJvcGVydHkgc2V0ICgweGYwKS4KLSAqCi0gKiBJbnRlbmRlZCB0byBzdXBwb3J0IE5h
dGl2ZSBTdHJ1Y3R1cmUgU3RvcmFnZSAoTlNTKSAtIGEgZmVhdHVyZSByZW1vdmVkIGZyb20KLSAq
IE5URlMgMy4wIGR1cmluZyBiZXRhIHRlc3RpbmcuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLQkv
KiBJcnJlbGV2YW50IGFzIGZlYXR1cmUgdW51c2VkLiAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19w
YWNrZWRfXykpIFBST1BFUlRZX1NFVDsKLQotLyoKLSAqIEF0dHJpYnV0ZTogTG9nZ2VkIHV0aWxp
dHkgc3RyZWFtICgweDEwMCkuCi0gKgotICogTk9URTogQ2FuIGJlIHJlc2lkZW50IG9yIG5vbi1y
ZXNpZGVudC4KLSAqCi0gKiBPcGVyYXRpb25zIG9uIHRoaXMgYXR0cmlidXRlIGFyZSBsb2dnZWQg
dG8gdGhlIGpvdXJuYWwgKCRMb2dGaWxlKSBsaWtlCi0gKiBub3JtYWwgbWV0YWRhdGEgY2hhbmdl
cy4KLSAqCi0gKiBVc2VkIGJ5IHRoZSBFbmNyeXB0aW5nIEZpbGUgU3lzdGVtIChFRlMpLiBBbGwg
ZW5jcnlwdGVkIGZpbGVzIGhhdmUgdGhpcwotICogYXR0cmlidXRlIHdpdGggdGhlIG5hbWUgJEVG
Uy4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCS8qIENhbiBiZSBhbnl0aGluZyB0aGUgY3JlYXRv
ciBjaG9vc2VzLiAqLwotCS8qIEVGUyB1c2VzIGl0IGFzIGZvbGxvd3M6ICovCi0JLy8gRklYTUU6
IFR5cGUgdGhpcyBpbmZvLCB2ZXJpZnlpbmcgaXQgYWxvbmcgdGhlIHdheS4gKEFJQSkKLX0gX19h
dHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBMT0dHRURfVVRJTElUWV9TVFJFQU0sIEVGU19BVFRS
OwotCi0jZW5kaWYgLyogX0xJTlVYX05URlNfTEFZT1VUX0ggKi8KZGlmZiAtLWdpdCBhL2ZzL250
ZnMvbGNuYWxsb2MuYyBiL2ZzL250ZnMvbGNuYWxsb2MuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggZWRhOTk3MmU2MTU5Li4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9sY25hbGxv
Yy5jCisrKyAvZGV2L251bGwKQEAgLTEsMTAwMCArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRl
bnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgotLyoKLSAqIGxjbmFsbG9jLmMgLSBDbHVzdGVyIChk
ZSlhbGxvY2F0aW9uIGNvZGUuICBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTIHByb2plY3QuCi0gKgot
ICogQ29weXJpZ2h0IChjKSAyMDA0LTIwMDUgQW50b24gQWx0YXBhcm1ha292Ci0gKi8KLQotI2lm
ZGVmIE5URlNfUlcKLQotI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KLQotI2luY2x1ZGUgImxj
bmFsbG9jLmgiCi0jaW5jbHVkZSAiZGVidWcuaCIKLSNpbmNsdWRlICJiaXRtYXAuaCIKLSNpbmNs
dWRlICJpbm9kZS5oIgotI2luY2x1ZGUgInZvbHVtZS5oIgotI2luY2x1ZGUgImF0dHJpYi5oIgot
I2luY2x1ZGUgIm1hbGxvYy5oIgotI2luY2x1ZGUgImFvcHMuaCIKLSNpbmNsdWRlICJudGZzLmgi
Ci0KLS8qKgotICogbnRmc19jbHVzdGVyX2ZyZWVfZnJvbV9ybF9ub2xvY2sgLSBmcmVlIGNsdXN0
ZXJzIGZyb20gcnVubGlzdAotICogQHZvbDoJbW91bnRlZCBudGZzIHZvbHVtZSBvbiB3aGljaCB0
byBmcmVlIHRoZSBjbHVzdGVycwotICogQHJsOgkJcnVubGlzdCBkZXNjcmliaW5nIHRoZSBjbHVz
dGVycyB0byBmcmVlCi0gKgotICogRnJlZSBhbGwgdGhlIGNsdXN0ZXJzIGRlc2NyaWJlZCBieSB0
aGUgcnVubGlzdCBAcmwgb24gdGhlIHZvbHVtZSBAdm9sLiAgSW4KLSAqIHRoZSBjYXNlIG9mIGFu
IGVycm9yIGJlaW5nIHJldHVybmVkLCBhdCBsZWFzdCBzb21lIG9mIHRoZSBjbHVzdGVycyB3ZXJl
IG5vdAotICogZnJlZWQuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9u
IGVycm9yLgotICoKLSAqIExvY2tpbmc6IC0gVGhlIHZvbHVtZSBsY24gYml0bWFwIG11c3QgYmUg
bG9ja2VkIGZvciB3cml0aW5nIG9uIGVudHJ5IGFuZCBpcwotICoJICAgICAgbGVmdCBsb2NrZWQg
b24gcmV0dXJuLgotICovCi1pbnQgbnRmc19jbHVzdGVyX2ZyZWVfZnJvbV9ybF9ub2xvY2sobnRm
c192b2x1bWUgKnZvbCwKLQkJY29uc3QgcnVubGlzdF9lbGVtZW50ICpybCkKLXsKLQlzdHJ1Y3Qg
aW5vZGUgKmxjbmJtcF92aSA9IHZvbC0+bGNuYm1wX2lubzsKLQlpbnQgcmV0ID0gMDsKLQotCW50
ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCWlmICghcmwpCi0JCXJldHVybiAwOwotCWZvciAoOyBy
bC0+bGVuZ3RoOyBybCsrKSB7Ci0JCWludCBlcnI7Ci0KLQkJaWYgKHJsLT5sY24gPCAwKQotCQkJ
Y29udGludWU7Ci0JCWVyciA9IG50ZnNfYml0bWFwX2NsZWFyX3J1bihsY25ibXBfdmksIHJsLT5s
Y24sIHJsLT5sZW5ndGgpOwotCQlpZiAodW5saWtlbHkoZXJyICYmICghcmV0IHx8IHJldCA9PSAt
RU5PTUVNKSAmJiByZXQgIT0gZXJyKSkKLQkJCXJldCA9IGVycjsKLQl9Ci0JbnRmc19kZWJ1Zygi
RG9uZS4iKTsKLQlyZXR1cm4gcmV0OwotfQotCi0vKioKLSAqIG50ZnNfY2x1c3Rlcl9hbGxvYyAt
IGFsbG9jYXRlIGNsdXN0ZXJzIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAdm9sOgltb3VudGVkIG50
ZnMgdm9sdW1lIG9uIHdoaWNoIHRvIGFsbG9jYXRlIHRoZSBjbHVzdGVycwotICogQHN0YXJ0X3Zj
bjoJdmNuIHRvIHVzZSBmb3IgdGhlIGZpcnN0IGFsbG9jYXRlZCBjbHVzdGVyCi0gKiBAY291bnQ6
CW51bWJlciBvZiBjbHVzdGVycyB0byBhbGxvY2F0ZQotICogQHN0YXJ0X2xjbjoJc3RhcnRpbmcg
bGNuIGF0IHdoaWNoIHRvIGFsbG9jYXRlIHRoZSBjbHVzdGVycyAob3IgLTEgaWYgbm9uZSkKLSAq
IEB6b25lOgl6b25lIGZyb20gd2hpY2ggdG8gYWxsb2NhdGUgdGhlIGNsdXN0ZXJzCi0gKiBAaXNf
ZXh0ZW5zaW9uOglpZiAndHJ1ZScsIHRoaXMgaXMgYW4gYXR0cmlidXRlIGV4dGVuc2lvbgotICoK
LSAqIEFsbG9jYXRlIEBjb3VudCBjbHVzdGVycyBwcmVmZXJhYmx5IHN0YXJ0aW5nIGF0IGNsdXN0
ZXIgQHN0YXJ0X2xjbiBvciBhdCB0aGUKLSAqIGN1cnJlbnQgYWxsb2NhdG9yIHBvc2l0aW9uIGlm
IEBzdGFydF9sY24gaXMgLTEsIG9uIHRoZSBtb3VudGVkIG50ZnMgdm9sdW1lCi0gKiBAdm9sLiBA
em9uZSBpcyBlaXRoZXIgREFUQV9aT05FIGZvciBhbGxvY2F0aW9uIG9mIG5vcm1hbCBjbHVzdGVy
cyBvcgotICogTUZUX1pPTkUgZm9yIGFsbG9jYXRpb24gb2YgY2x1c3RlcnMgZm9yIHRoZSBtYXN0
ZXIgZmlsZSB0YWJsZSwgaS5lLiB0aGUKLSAqICRNRlQvJERBVEEgYXR0cmlidXRlLgotICoKLSAq
IEBzdGFydF92Y24gc3BlY2lmaWVzIHRoZSB2Y24gb2YgdGhlIGZpcnN0IGFsbG9jYXRlZCBjbHVz
dGVyLiAgVGhpcyBtYWtlcwotICogbWVyZ2luZyB0aGUgcmVzdWx0aW5nIHJ1bmxpc3Qgd2l0aCB0
aGUgb2xkIHJ1bmxpc3QgZWFzaWVyLgotICoKLSAqIElmIEBpc19leHRlbnNpb24gaXMgJ3RydWUn
LCB0aGUgY2FsbGVyIGlzIGFsbG9jYXRpbmcgY2x1c3RlcnMgdG8gZXh0ZW5kIGFuCi0gKiBhdHRy
aWJ1dGUgYW5kIGlmIGl0IGlzICdmYWxzZScsIHRoZSBjYWxsZXIgaXMgYWxsb2NhdGluZyBjbHVz
dGVycyB0byBmaWxsIGEKLSAqIGhvbGUgaW4gYW4gYXR0cmlidXRlLiAgUHJhY3RpY2FsbHkgdGhl
IGRpZmZlcmVuY2UgaXMgdGhhdCBpZiBAaXNfZXh0ZW5zaW9uCi0gKiBpcyAndHJ1ZScgdGhlIHJl
dHVybmVkIHJ1bmxpc3Qgd2lsbCBiZSB0ZXJtaW5hdGVkIHdpdGggTENOX0VOT0VOVCBhbmQgaWYK
LSAqIEBpc19leHRlbnNpb24gaXMgJ2ZhbHNlJyB0aGUgcnVubGlzdCB3aWxsIGJlIHRlcm1pbmF0
ZWQgd2l0aAotICogTENOX1JMX05PVF9NQVBQRUQuCi0gKgotICogWW91IG5lZWQgdG8gY2hlY2sg
dGhlIHJldHVybiB2YWx1ZSB3aXRoIElTX0VSUigpLiAgSWYgdGhpcyBpcyBmYWxzZSwgdGhlCi0g
KiBmdW5jdGlvbiB3YXMgc3VjY2Vzc2Z1bCBhbmQgdGhlIHJldHVybiB2YWx1ZSBpcyBhIHJ1bmxp
c3QgZGVzY3JpYmluZyB0aGUKLSAqIGFsbG9jYXRlZCBjbHVzdGVyKHMpLiAgSWYgSVNfRVJSKCkg
aXMgdHJ1ZSwgdGhlIGZ1bmN0aW9uIGZhaWxlZCBhbmQKLSAqIFBUUl9FUlIoKSBnaXZlcyB5b3Ug
dGhlIGVycm9yIGNvZGUuCi0gKgotICogTm90ZXMgb24gdGhlIGFsbG9jYXRpb24gYWxnb3JpdGht
Ci0gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLSAqCi0gKiBUaGVyZSBhcmUg
dHdvIGRhdGEgem9uZXMuICBGaXJzdCBpcyB0aGUgYXJlYSBiZXR3ZWVuIHRoZSBlbmQgb2YgdGhl
IG1mdCB6b25lCi0gKiBhbmQgdGhlIGVuZCBvZiB0aGUgdm9sdW1lLCBhbmQgc2Vjb25kIGlzIHRo
ZSBhcmVhIGJldHdlZW4gdGhlIHN0YXJ0IG9mIHRoZQotICogdm9sdW1lIGFuZCB0aGUgc3RhcnQg
b2YgdGhlIG1mdCB6b25lLiAgT24gdW5tb2RpZmllZC9zdGFuZGFyZCBOVEZTIDEueAotICogdm9s
dW1lcywgdGhlIHNlY29uZCBkYXRhIHpvbmUgZG9lcyBub3QgZXhpc3QgZHVlIHRvIHRoZSBtZnQg
em9uZSBiZWluZwotICogZXhwYW5kZWQgdG8gY292ZXIgdGhlIHN0YXJ0IG9mIHRoZSB2b2x1bWUg
aW4gb3JkZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlCi0gKiBtZnQgYml0bWFwIGF0dHJpYnV0
ZS4KLSAqCi0gKiBUaGlzIGlzIG5vdCB0aGUgcHJldHRpZXN0IGZ1bmN0aW9uIGJ1dCB0aGUgY29t
cGxleGl0eSBzdGVtcyBmcm9tIHRoZSBuZWVkIG9mCi0gKiBpbXBsZW1lbnRpbmcgdGhlIG1mdCB2
cyBkYXRhIHpvbmVkIGFwcHJvYWNoIGFuZCBmcm9tIHRoZSBmYWN0IHRoYXQgd2UgaGF2ZQotICog
YWNjZXNzIHRvIHRoZSBsY24gYml0bWFwIGluIHBvcnRpb25zIG9mIHVwIHRvIDgxOTIgYnl0ZXMg
YXQgYSB0aW1lLCBzbyB3ZQotICogbmVlZCB0byBjb3BlIHdpdGggY3Jvc3Npbmcgb3ZlciBib3Vu
ZGFyaWVzIG9mIHR3byBidWZmZXJzLiAgRnVydGhlciwgdGhlCi0gKiBmYWN0IHRoYXQgdGhlIGFs
bG9jYXRvciBhbGxvd3MgZm9yIGNhbGxlciBzdXBwbGllZCBoaW50cyBhcyB0byB0aGUgbG9jYXRp
b24KLSAqIG9mIHdoZXJlIGFsbG9jYXRpb24gc2hvdWxkIGJlZ2luIGFuZCB0aGUgZmFjdCB0aGF0
IHRoZSBhbGxvY2F0b3Iga2VlcHMgdHJhY2sKLSAqIG9mIHdoZXJlIGluIHRoZSBkYXRhIHpvbmVz
IHRoZSBuZXh0IG5hdHVyYWwgYWxsb2NhdGlvbiBzaG91bGQgb2NjdXIsCi0gKiBjb250cmlidXRl
IHRvIHRoZSBjb21wbGV4aXR5IG9mIHRoZSBmdW5jdGlvbi4gIEJ1dCBpdCBzaG91bGQgYWxsIGJl
Ci0gKiB3b3J0aHdoaWxlLCBiZWNhdXNlIHRoaXMgYWxsb2NhdG9yIHNob3VsZDogMSkgYmUgYSBm
dWxsIGltcGxlbWVudGF0aW9uIG9mCi0gKiB0aGUgTUZUIHpvbmUgYXBwcm9hY2ggdXNlZCBieSBX
aW5kb3dzIE5ULCAyKSBjYXVzZSByZWR1Y3Rpb24gaW4KLSAqIGZyYWdtZW50YXRpb24sIGFuZCAz
KSBiZSBzcGVlZHkgaW4gYWxsb2NhdGlvbnMgKHRoZSBjb2RlIGlzIG5vdCBvcHRpbWl6ZWQKLSAq
IGZvciBzcGVlZCwgYnV0IHRoZSBhbGdvcml0aG0gaXMsIHNvIGZ1cnRoZXIgc3BlZWQgaW1wcm92
ZW1lbnRzIGFyZSBwcm9iYWJseQotICogcG9zc2libGUpLgotICoKLSAqIEZJWE1FOiBXZSBzaG91
bGQgYmUgbW9uaXRvcmluZyBjbHVzdGVyIGFsbG9jYXRpb24gYW5kIGluY3JlbWVudCB0aGUgTUZU
IHpvbmUKLSAqIHNpemUgZHluYW1pY2FsbHkgYnV0IHRoaXMgaXMgc29tZXRoaW5nIGZvciB0aGUg
ZnV0dXJlLiAgV2Ugd2lsbCBqdXN0IGNhdXNlCi0gKiBoZWF2aWVyIGZyYWdtZW50YXRpb24gYnkg
bm90IGRvaW5nIGl0IGFuZCBJIGFtIG5vdCBldmVuIHN1cmUgV2luZG93cyB3b3VsZAotICogZ3Jv
dyB0aGUgTUZUIHpvbmUgZHluYW1pY2FsbHksIHNvIGl0IG1pZ2h0IGV2ZW4gYmUgY29ycmVjdCBu
b3QgdG8gZG8gdGhpcy4KLSAqIFRoZSBvdmVyaGVhZCBpbiBkb2luZyBkeW5hbWljIE1GVCB6b25l
IGV4cGFuc2lvbiB3b3VsZCBiZSB2ZXJ5IGxhcmdlIGFuZAotICogdW5saWtlbHkgd29ydGggdGhl
IGVmZm9ydC4gKEFJQSkKLSAqCi0gKiBUT0RPOiBJIGhhdmUgYWRkZWQgaW4gZG91YmxlIHRoZSBy
ZXF1aXJlZCB6b25lIHBvc2l0aW9uIHBvaW50ZXIgd3JhcCBhcm91bmQKLSAqIGxvZ2ljIHdoaWNo
IGNhbiBiZSBvcHRpbWl6ZWQgdG8gaGF2aW5nIG9ubHkgb25lIG9mIHRoZSB0d28gbG9naWMgc2V0
cy4KLSAqIEhvd2V2ZXIsIGhhdmluZyB0aGUgZG91YmxlIGxvZ2ljIHdpbGwgd29yayBmaW5lLCBi
dXQgaWYgd2UgaGF2ZSBvbmx5IG9uZSBvZgotICogdGhlIHNldHMgYW5kIHdlIGdldCBpdCB3cm9u
ZyBzb21ld2hlcmUsIHRoZW4gd2UgZ2V0IGludG8gdHJvdWJsZSwgc28KLSAqIHJlbW92aW5nIHRo
ZSBkdXBsaWNhdGUgbG9naWMgcmVxdWlyZXMgX3ZlcnlfIGNhcmVmdWwgY29uc2lkZXJhdGlvbiBv
ZiBfYWxsXwotICogcG9zc2libGUgY29kZSBwYXRocy4gIFNvIGF0IGxlYXN0IGZvciBub3csIEkg
YW0gbGVhdmluZyB0aGUgZG91YmxlIGxvZ2ljIC0KLSAqIGJldHRlciBzYWZlIHRoYW4gc29ycnku
Li4gKEFJQSkKLSAqCi0gKiBMb2NraW5nOiAtIFRoZSB2b2x1bWUgbGNuIGJpdG1hcCBtdXN0IGJl
IHVubG9ja2VkIG9uIGVudHJ5IGFuZCBpcyB1bmxvY2tlZAotICoJICAgICAgb24gcmV0dXJuLgot
ICoJICAgIC0gVGhpcyBmdW5jdGlvbiB0YWtlcyB0aGUgdm9sdW1lIGxjbiBiaXRtYXAgbG9jayBm
b3Igd3JpdGluZyBhbmQKLSAqCSAgICAgIG1vZGlmaWVzIHRoZSBiaXRtYXAgY29udGVudHMuCi0g
Ki8KLXJ1bmxpc3RfZWxlbWVudCAqbnRmc19jbHVzdGVyX2FsbG9jKG50ZnNfdm9sdW1lICp2b2ws
IGNvbnN0IFZDTiBzdGFydF92Y24sCi0JCWNvbnN0IHM2NCBjb3VudCwgY29uc3QgTENOIHN0YXJ0
X2xjbiwKLQkJY29uc3QgTlRGU19DTFVTVEVSX0FMTE9DQVRJT05fWk9ORVMgem9uZSwKLQkJY29u
c3QgYm9vbCBpc19leHRlbnNpb24pCi17Ci0JTENOIHpvbmVfc3RhcnQsIHpvbmVfZW5kLCBibXBf
cG9zLCBibXBfaW5pdGlhbF9wb3MsIGxhc3RfcmVhZF9wb3MsIGxjbjsKLQlMQ04gcHJldl9sY24g
PSAwLCBwcmV2X3J1bl9sZW4gPSAwLCBtZnRfem9uZV9zaXplOwotCXM2NCBjbHVzdGVyczsKLQls
b2ZmX3QgaV9zaXplOwotCXN0cnVjdCBpbm9kZSAqbGNuYm1wX3ZpOwotCXJ1bmxpc3RfZWxlbWVu
dCAqcmwgPSBOVUxMOwotCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nOwotCXN0cnVjdCBw
YWdlICpwYWdlID0gTlVMTDsKLQl1OCAqYnVmLCAqYnl0ZTsKLQlpbnQgZXJyID0gMCwgcmxwb3Ms
IHJsc2l6ZSwgYnVmX3NpemU7Ci0JdTggcGFzcywgZG9uZV96b25lcywgc2VhcmNoX3pvbmUsIG5l
ZWRfd3JpdGViYWNrID0gMCwgYml0OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIHN0YXJ0
X3ZjbiAweCVsbHgsIGNvdW50IDB4JWxseCwgc3RhcnRfbGNuICIKLQkJCSIweCVsbHgsIHpvbmUg
JXNfWk9ORS4iLCAodW5zaWduZWQgbG9uZyBsb25nKXN0YXJ0X3ZjbiwKLQkJCSh1bnNpZ25lZCBs
b25nIGxvbmcpY291bnQsCi0JCQkodW5zaWduZWQgbG9uZyBsb25nKXN0YXJ0X2xjbiwKLQkJCXpv
bmUgPT0gTUZUX1pPTkUgPyAiTUZUIiA6ICJEQVRBIik7Ci0JQlVHX09OKCF2b2wpOwotCWxjbmJt
cF92aSA9IHZvbC0+bGNuYm1wX2lubzsKLQlCVUdfT04oIWxjbmJtcF92aSk7Ci0JQlVHX09OKHN0
YXJ0X3ZjbiA8IDApOwotCUJVR19PTihjb3VudCA8IDApOwotCUJVR19PTihzdGFydF9sY24gPCAt
MSk7Ci0JQlVHX09OKHpvbmUgPCBGSVJTVF9aT05FKTsKLQlCVUdfT04oem9uZSA+IExBU1RfWk9O
RSk7Ci0KLQkvKiBSZXR1cm4gTlVMTCBpZiBAY291bnQgaXMgemVyby4gKi8KLQlpZiAoIWNvdW50
KQotCQlyZXR1cm4gTlVMTDsKLQkvKiBUYWtlIHRoZSBsY25ibXAgbG9jayBmb3Igd3JpdGluZy4g
Ki8KLQlkb3duX3dyaXRlKCZ2b2wtPmxjbmJtcF9sb2NrKTsKLQkvKgotCSAqIElmIG5vIHNwZWNp
ZmljIEBzdGFydF9sY24gd2FzIHJlcXVlc3RlZCwgdXNlIHRoZSBjdXJyZW50IGRhdGEgem9uZQot
CSAqIHBvc2l0aW9uLCBvdGhlcndpc2UgdXNlIHRoZSByZXF1ZXN0ZWQgQHN0YXJ0X2xjbiBidXQg
bWFrZSBzdXJlIGl0Ci0JICogbGllcyBvdXRzaWRlIHRoZSBtZnQgem9uZS4gIEFsc28gc2V0IGRv
bmVfem9uZXMgdG8gMCAobm8gem9uZXMgZG9uZSkKLQkgKiBhbmQgcGFzcyBkZXBlbmRpbmcgb24g
d2hldGhlciB3ZSBhcmUgc3RhcnRpbmcgaW5zaWRlIGEgem9uZSAoMSkgb3IKLQkgKiBhdCB0aGUg
YmVnaW5uaW5nIG9mIGEgem9uZSAoMikuICBJZiByZXF1ZXN0aW5nIGZyb20gdGhlIE1GVF9aT05F
LAotCSAqIHdlIGVpdGhlciBzdGFydCBhdCB0aGUgY3VycmVudCBwb3NpdGlvbiB3aXRoaW4gdGhl
IG1mdCB6b25lIG9yIGF0Ci0JICogdGhlIHNwZWNpZmllZCBwb3NpdGlvbi4gIElmIHRoZSBsYXR0
ZXIgaXMgb3V0IG9mIGJvdW5kcyB0aGVuIHdlIHN0YXJ0Ci0JICogYXQgdGhlIGJlZ2lubmluZyBv
ZiB0aGUgTUZUX1pPTkUuCi0JICovCi0JZG9uZV96b25lcyA9IDA7Ci0JcGFzcyA9IDE7Ci0JLyoK
LQkgKiB6b25lX3N0YXJ0IGFuZCB6b25lX2VuZCBhcmUgdGhlIGN1cnJlbnQgc2VhcmNoIHJhbmdl
LiAgc2VhcmNoX3pvbmUKLQkgKiBpcyAxIGZvciBtZnQgem9uZSwgMiBmb3IgZGF0YSB6b25lIDEg
KGVuZCBvZiBtZnQgem9uZSB0aWxsIGVuZCBvZgotCSAqIHZvbHVtZSkgYW5kIDQgZm9yIGRhdGEg
em9uZSAyIChzdGFydCBvZiB2b2x1bWUgdGlsbCBzdGFydCBvZiBtZnQKLQkgKiB6b25lKS4KLQkg
Ki8KLQl6b25lX3N0YXJ0ID0gc3RhcnRfbGNuOwotCWlmICh6b25lX3N0YXJ0IDwgMCkgewotCQlp
ZiAoem9uZSA9PSBEQVRBX1pPTkUpCi0JCQl6b25lX3N0YXJ0ID0gdm9sLT5kYXRhMV96b25lX3Bv
czsKLQkJZWxzZQotCQkJem9uZV9zdGFydCA9IHZvbC0+bWZ0X3pvbmVfcG9zOwotCQlpZiAoIXpv
bmVfc3RhcnQpIHsKLQkJCS8qCi0JCQkgKiBab25lIHN0YXJ0cyBhdCBiZWdpbm5pbmcgb2Ygdm9s
dW1lIHdoaWNoIG1lYW5zIGEKLQkJCSAqIHNpbmdsZSBwYXNzIGlzIHN1ZmZpY2llbnQuCi0JCQkg
Ki8KLQkJCXBhc3MgPSAyOwotCQl9Ci0JfSBlbHNlIGlmICh6b25lID09IERBVEFfWk9ORSAmJiB6
b25lX3N0YXJ0ID49IHZvbC0+bWZ0X3pvbmVfc3RhcnQgJiYKLQkJCXpvbmVfc3RhcnQgPCB2b2wt
Pm1mdF96b25lX2VuZCkgewotCQl6b25lX3N0YXJ0ID0gdm9sLT5tZnRfem9uZV9lbmQ7Ci0JCS8q
Ci0JCSAqIFN0YXJ0aW5nIGF0IGJlZ2lubmluZyBvZiBkYXRhMV96b25lIHdoaWNoIG1lYW5zIGEg
c2luZ2xlCi0JCSAqIHBhc3MgaW4gdGhpcyB6b25lIGlzIHN1ZmZpY2llbnQuCi0JCSAqLwotCQlw
YXNzID0gMjsKLQl9IGVsc2UgaWYgKHpvbmUgPT0gTUZUX1pPTkUgJiYgKHpvbmVfc3RhcnQgPCB2
b2wtPm1mdF96b25lX3N0YXJ0IHx8Ci0JCQl6b25lX3N0YXJ0ID49IHZvbC0+bWZ0X3pvbmVfZW5k
KSkgewotCQl6b25lX3N0YXJ0ID0gdm9sLT5tZnRfbGNuOwotCQlpZiAoIXZvbC0+bWZ0X3pvbmVf
ZW5kKQotCQkJem9uZV9zdGFydCA9IDA7Ci0JCS8qCi0JCSAqIFN0YXJ0aW5nIGF0IGJlZ2lubmlu
ZyBvZiB2b2x1bWUgd2hpY2ggbWVhbnMgYSBzaW5nbGUgcGFzcwotCQkgKiBpcyBzdWZmaWNpZW50
LgotCQkgKi8KLQkJcGFzcyA9IDI7Ci0JfQotCWlmICh6b25lID09IE1GVF9aT05FKSB7Ci0JCXpv
bmVfZW5kID0gdm9sLT5tZnRfem9uZV9lbmQ7Ci0JCXNlYXJjaF96b25lID0gMTsKLQl9IGVsc2Ug
LyogaWYgKHpvbmUgPT0gREFUQV9aT05FKSAqLyB7Ci0JCS8qIFNraXAgc2VhcmNoaW5nIHRoZSBt
ZnQgem9uZS4gKi8KLQkJZG9uZV96b25lcyB8PSAxOwotCQlpZiAoem9uZV9zdGFydCA+PSB2b2wt
Pm1mdF96b25lX2VuZCkgewotCQkJem9uZV9lbmQgPSB2b2wtPm5yX2NsdXN0ZXJzOwotCQkJc2Vh
cmNoX3pvbmUgPSAyOwotCQl9IGVsc2UgewotCQkJem9uZV9lbmQgPSB2b2wtPm1mdF96b25lX3N0
YXJ0OwotCQkJc2VhcmNoX3pvbmUgPSA0OwotCQl9Ci0JfQotCS8qCi0JICogYm1wX3BvcyBpcyB0
aGUgY3VycmVudCBiaXQgcG9zaXRpb24gaW5zaWRlIHRoZSBiaXRtYXAuICBXZSB1c2UKLQkgKiBi
bXBfaW5pdGlhbF9wb3MgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgb3Igbm90IHRvIGRvIGEgem9uZSBz
d2l0Y2guCi0JICovCi0JYm1wX3BvcyA9IGJtcF9pbml0aWFsX3BvcyA9IHpvbmVfc3RhcnQ7Ci0K
LQkvKiBMb29wIHVudGlsIGFsbCBjbHVzdGVycyBhcmUgYWxsb2NhdGVkLCBpLmUuIGNsdXN0ZXJz
ID09IDAuICovCi0JY2x1c3RlcnMgPSBjb3VudDsKLQlybHBvcyA9IHJsc2l6ZSA9IDA7Ci0JbWFw
cGluZyA9IGxjbmJtcF92aS0+aV9tYXBwaW5nOwotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKGxjbmJt
cF92aSk7Ci0Jd2hpbGUgKDEpIHsKLQkJbnRmc19kZWJ1ZygiU3RhcnQgb2Ygb3V0ZXIgd2hpbGUg
bG9vcDogZG9uZV96b25lcyAweCV4LCAiCi0JCQkJInNlYXJjaF96b25lICVpLCBwYXNzICVpLCB6
b25lX3N0YXJ0IDB4JWxseCwgIgotCQkJCSJ6b25lX2VuZCAweCVsbHgsIGJtcF9pbml0aWFsX3Bv
cyAweCVsbHgsICIKLQkJCQkiYm1wX3BvcyAweCVsbHgsIHJscG9zICVpLCBybHNpemUgJWkuIiwK
LQkJCQlkb25lX3pvbmVzLCBzZWFyY2hfem9uZSwgcGFzcywKLQkJCQkodW5zaWduZWQgbG9uZyBs
b25nKXpvbmVfc3RhcnQsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl6b25lX2VuZCwKLQkJCQko
dW5zaWduZWQgbG9uZyBsb25nKWJtcF9pbml0aWFsX3BvcywKLQkJCQkodW5zaWduZWQgbG9uZyBs
b25nKWJtcF9wb3MsIHJscG9zLCBybHNpemUpOwotCQkvKiBMb29wIHVudGlsIHdlIHJ1biBvdXQg
b2YgZnJlZSBjbHVzdGVycy4gKi8KLQkJbGFzdF9yZWFkX3BvcyA9IGJtcF9wb3MgPj4gMzsKLQkJ
bnRmc19kZWJ1ZygibGFzdF9yZWFkX3BvcyAweCVsbHguIiwKLQkJCQkodW5zaWduZWQgbG9uZyBs
b25nKWxhc3RfcmVhZF9wb3MpOwotCQlpZiAobGFzdF9yZWFkX3BvcyA+IGlfc2l6ZSkgewotCQkJ
bnRmc19kZWJ1ZygiRW5kIG9mIGF0dHJpYnV0ZSByZWFjaGVkLiAgIgotCQkJCQkiU2tpcHBpbmcg
dG8gem9uZV9wYXNzX2RvbmUuIik7Ci0JCQlnb3RvIHpvbmVfcGFzc19kb25lOwotCQl9Ci0JCWlm
IChsaWtlbHkocGFnZSkpIHsKLQkJCWlmIChuZWVkX3dyaXRlYmFjaykgewotCQkJCW50ZnNfZGVi
dWcoIk1hcmtpbmcgcGFnZSBkaXJ0eS4iKTsKLQkJCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsK
LQkJCQlzZXRfcGFnZV9kaXJ0eShwYWdlKTsKLQkJCQluZWVkX3dyaXRlYmFjayA9IDA7Ci0JCQl9
Ci0JCQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JCX0KLQkJcGFnZSA9IG50ZnNfbWFwX3BhZ2Uo
bWFwcGluZywgbGFzdF9yZWFkX3BvcyA+PgotCQkJCVBBR0VfU0hJRlQpOwotCQlpZiAoSVNfRVJS
KHBhZ2UpKSB7Ci0JCQllcnIgPSBQVFJfRVJSKHBhZ2UpOwotCQkJbnRmc19lcnJvcih2b2wtPnNi
LCAiRmFpbGVkIHRvIG1hcCBwYWdlLiIpOwotCQkJZ290byBvdXQ7Ci0JCX0KLQkJYnVmX3NpemUg
PSBsYXN0X3JlYWRfcG9zICYgflBBR0VfTUFTSzsKLQkJYnVmID0gcGFnZV9hZGRyZXNzKHBhZ2Up
ICsgYnVmX3NpemU7Ci0JCWJ1Zl9zaXplID0gUEFHRV9TSVpFIC0gYnVmX3NpemU7Ci0JCWlmICh1
bmxpa2VseShsYXN0X3JlYWRfcG9zICsgYnVmX3NpemUgPiBpX3NpemUpKQotCQkJYnVmX3NpemUg
PSBpX3NpemUgLSBsYXN0X3JlYWRfcG9zOwotCQlidWZfc2l6ZSA8PD0gMzsKLQkJbGNuID0gYm1w
X3BvcyAmIDc7Ci0JCWJtcF9wb3MgJj0gfihMQ04pNzsKLQkJbnRmc19kZWJ1ZygiQmVmb3JlIGlu
bmVyIHdoaWxlIGxvb3A6IGJ1Zl9zaXplICVpLCBsY24gMHglbGx4LCAiCi0JCQkJImJtcF9wb3Mg
MHglbGx4LCBuZWVkX3dyaXRlYmFjayAlaS4iLCBidWZfc2l6ZSwKLQkJCQkodW5zaWduZWQgbG9u
ZyBsb25nKWxjbiwKLQkJCQkodW5zaWduZWQgbG9uZyBsb25nKWJtcF9wb3MsIG5lZWRfd3JpdGVi
YWNrKTsKLQkJd2hpbGUgKGxjbiA8IGJ1Zl9zaXplICYmIGxjbiArIGJtcF9wb3MgPCB6b25lX2Vu
ZCkgewotCQkJYnl0ZSA9IGJ1ZiArIChsY24gPj4gMyk7Ci0JCQludGZzX2RlYnVnKCJJbiBpbm5l
ciB3aGlsZSBsb29wOiBidWZfc2l6ZSAlaSwgIgotCQkJCQkibGNuIDB4JWxseCwgYm1wX3BvcyAw
eCVsbHgsICIKLQkJCQkJIm5lZWRfd3JpdGViYWNrICVpLCBieXRlIG9mcyAweCV4LCAiCi0JCQkJ
CSIqYnl0ZSAweCV4LiIsIGJ1Zl9zaXplLAotCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKWxjbiwK
LQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylibXBfcG9zLAotCQkJCQluZWVkX3dyaXRlYmFjaywK
LQkJCQkJKHVuc2lnbmVkIGludCkobGNuID4+IDMpLAotCQkJCQkodW5zaWduZWQgaW50KSpieXRl
KTsKLQkJCS8qIFNraXAgZnVsbCBieXRlcy4gKi8KLQkJCWlmICgqYnl0ZSA9PSAweGZmKSB7Ci0J
CQkJbGNuID0gKGxjbiArIDgpICYgfihMQ04pNzsKLQkJCQludGZzX2RlYnVnKCJDb250aW51aW5n
IHdoaWxlIGxvb3AgMS4iKTsKLQkJCQljb250aW51ZTsKLQkJCX0KLQkJCWJpdCA9IDEgPDwgKGxj
biAmIDcpOwotCQkJbnRmc19kZWJ1ZygiYml0IDB4JXguIiwgYml0KTsKLQkJCS8qIElmIHRoZSBi
aXQgaXMgYWxyZWFkeSBzZXQsIGdvIG9udG8gdGhlIG5leHQgb25lLiAqLwotCQkJaWYgKCpieXRl
ICYgYml0KSB7Ci0JCQkJbGNuKys7Ci0JCQkJbnRmc19kZWJ1ZygiQ29udGludWluZyB3aGlsZSBs
b29wIDIuIik7Ci0JCQkJY29udGludWU7Ci0JCQl9Ci0JCQkvKgotCQkJICogQWxsb2NhdGUgbW9y
ZSBtZW1vcnkgaWYgbmVlZGVkLCBpbmNsdWRpbmcgc3BhY2UgZm9yCi0JCQkgKiB0aGUgdGVybWlu
YXRvciBlbGVtZW50LgotCQkJICogbnRmc19tYWxsb2Nfbm9mcygpIG9wZXJhdGVzIG9uIHdob2xl
IHBhZ2VzIG9ubHkuCi0JCQkgKi8KLQkJCWlmICgocmxwb3MgKyAyKSAqIHNpemVvZigqcmwpID4g
cmxzaXplKSB7Ci0JCQkJcnVubGlzdF9lbGVtZW50ICpybDI7Ci0KLQkJCQludGZzX2RlYnVnKCJS
ZWFsbG9jYXRpbmcgbWVtb3J5LiIpOwotCQkJCWlmICghcmwpCi0JCQkJCW50ZnNfZGVidWcoIkZp
cnN0IGZyZWUgYml0IGlzIGF0IExDTiAiCi0JCQkJCQkJIjB4JWxseC4iLAotCQkJCQkJCSh1bnNp
Z25lZCBsb25nIGxvbmcpCi0JCQkJCQkJKGxjbiArIGJtcF9wb3MpKTsKLQkJCQlybDIgPSBudGZz
X21hbGxvY19ub2ZzKHJsc2l6ZSArIChpbnQpUEFHRV9TSVpFKTsKLQkJCQlpZiAodW5saWtlbHko
IXJsMikpIHsKLQkJCQkJZXJyID0gLUVOT01FTTsKLQkJCQkJbnRmc19lcnJvcih2b2wtPnNiLCAi
RmFpbGVkIHRvICIKLQkJCQkJCQkiYWxsb2NhdGUgbWVtb3J5LiIpOwotCQkJCQlnb3RvIG91dDsK
LQkJCQl9Ci0JCQkJbWVtY3B5KHJsMiwgcmwsIHJsc2l6ZSk7Ci0JCQkJbnRmc19mcmVlKHJsKTsK
LQkJCQlybCA9IHJsMjsKLQkJCQlybHNpemUgKz0gUEFHRV9TSVpFOwotCQkJCW50ZnNfZGVidWco
IlJlYWxsb2NhdGVkIG1lbW9yeSwgcmxzaXplIDB4JXguIiwKLQkJCQkJCXJsc2l6ZSk7Ci0JCQl9
Ci0JCQkvKiBBbGxvY2F0ZSB0aGUgYml0bWFwIGJpdC4gKi8KLQkJCSpieXRlIHw9IGJpdDsKLQkJ
CS8qIFdlIG5lZWQgdG8gd3JpdGUgdGhpcyBiaXRtYXAgcGFnZSB0byBkaXNrLiAqLwotCQkJbmVl
ZF93cml0ZWJhY2sgPSAxOwotCQkJbnRmc19kZWJ1ZygiKmJ5dGUgMHgleCwgbmVlZF93cml0ZWJh
Y2sgaXMgc2V0LiIsCi0JCQkJCSh1bnNpZ25lZCBpbnQpKmJ5dGUpOwotCQkJLyoKLQkJCSAqIENv
YWxlc2NlIHdpdGggcHJldmlvdXMgcnVuIGlmIGFkamFjZW50IExDTnMuCi0JCQkgKiBPdGhlcndp
c2UsIGFwcGVuZCBhIG5ldyBydW4uCi0JCQkgKi8KLQkJCW50ZnNfZGVidWcoIkFkZGluZyBydW4g
KGxjbiAweCVsbHgsIGxlbiAweCVsbHgpLCAiCi0JCQkJCSJwcmV2X2xjbiAweCVsbHgsIGxjbiAw
eCVsbHgsICIKLQkJCQkJImJtcF9wb3MgMHglbGx4LCBwcmV2X3J1bl9sZW4gMHglbGx4LCAiCi0J
CQkJCSJybHBvcyAlaS4iLAotCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKShsY24gKyBibXBfcG9z
KSwKLQkJCQkJMVVMTCwgKHVuc2lnbmVkIGxvbmcgbG9uZylwcmV2X2xjbiwKLQkJCQkJKHVuc2ln
bmVkIGxvbmcgbG9uZylsY24sCi0JCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpYm1wX3BvcywKLQkJ
CQkJKHVuc2lnbmVkIGxvbmcgbG9uZylwcmV2X3J1bl9sZW4sCi0JCQkJCXJscG9zKTsKLQkJCWlm
IChwcmV2X2xjbiA9PSBsY24gKyBibXBfcG9zIC0gcHJldl9ydW5fbGVuICYmIHJscG9zKSB7Ci0J
CQkJbnRmc19kZWJ1ZygiQ29hbGVzY2luZyB0byBydW4gKGxjbiAweCVsbHgsICIKLQkJCQkJCSJs
ZW4gMHglbGx4KS4iLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCXJsW3JscG9z
IC0gMV0ubGNuLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCXJsW3JscG9zIC0g
MV0ubGVuZ3RoKTsKLQkJCQlybFtybHBvcyAtIDFdLmxlbmd0aCA9ICsrcHJldl9ydW5fbGVuOwot
CQkJCW50ZnNfZGVidWcoIlJ1biBub3cgKGxjbiAweCVsbHgsIGxlbiAweCVsbHgpLCAiCi0JCQkJ
CQkicHJldl9ydW5fbGVuIDB4JWxseC4iLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJ
CQkJCXJsW3JscG9zIC0gMV0ubGNuLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJ
CXJsW3JscG9zIC0gMV0ubGVuZ3RoLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJ
CXByZXZfcnVuX2xlbik7Ci0JCQl9IGVsc2UgewotCQkJCWlmIChsaWtlbHkocmxwb3MpKSB7Ci0J
CQkJCW50ZnNfZGVidWcoIkFkZGluZyBuZXcgcnVuLCAocHJldmlvdXMgIgotCQkJCQkJCSJydW4g
bGNuIDB4JWxseCwgIgotCQkJCQkJCSJsZW4gMHglbGx4KS4iLAotCQkJCQkJCSh1bnNpZ25lZCBs
b25nIGxvbmcpCi0JCQkJCQkJcmxbcmxwb3MgLSAxXS5sY24sCi0JCQkJCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZykKLQkJCQkJCQlybFtybHBvcyAtIDFdLmxlbmd0aCk7Ci0JCQkJCXJsW3JscG9zXS52
Y24gPSBybFtybHBvcyAtIDFdLnZjbiArCi0JCQkJCQkJcHJldl9ydW5fbGVuOwotCQkJCX0gZWxz
ZSB7Ci0JCQkJCW50ZnNfZGVidWcoIkFkZGluZyBuZXcgcnVuLCBpcyBmaXJzdCAiCi0JCQkJCQkJ
InJ1bi4iKTsKLQkJCQkJcmxbcmxwb3NdLnZjbiA9IHN0YXJ0X3ZjbjsKLQkJCQl9Ci0JCQkJcmxb
cmxwb3NdLmxjbiA9IHByZXZfbGNuID0gbGNuICsgYm1wX3BvczsKLQkJCQlybFtybHBvc10ubGVu
Z3RoID0gcHJldl9ydW5fbGVuID0gMTsKLQkJCQlybHBvcysrOwotCQkJfQotCQkJLyogRG9uZT8g
Ki8KLQkJCWlmICghLS1jbHVzdGVycykgewotCQkJCUxDTiB0YzsKLQkJCQkvKgotCQkJCSAqIFVw
ZGF0ZSB0aGUgY3VycmVudCB6b25lIHBvc2l0aW9uLiAgUG9zaXRpb25zCi0JCQkJICogb2YgYWxy
ZWFkeSBzY2FubmVkIHpvbmVzIGhhdmUgYmVlbiB1cGRhdGVkCi0JCQkJICogZHVyaW5nIHRoZSBy
ZXNwZWN0aXZlIHpvbmUgc3dpdGNoZXMuCi0JCQkJICovCi0JCQkJdGMgPSBsY24gKyBibXBfcG9z
ICsgMTsKLQkJCQludGZzX2RlYnVnKCJEb25lLiBVcGRhdGluZyBjdXJyZW50IHpvbmUgIgotCQkJ
CQkJInBvc2l0aW9uLCB0YyAweCVsbHgsICIKLQkJCQkJCSJzZWFyY2hfem9uZSAlaS4iLAotCQkJ
CQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl0YywKLQkJCQkJCXNlYXJjaF96b25lKTsKLQkJCQlzd2l0
Y2ggKHNlYXJjaF96b25lKSB7Ci0JCQkJY2FzZSAxOgotCQkJCQludGZzX2RlYnVnKCJCZWZvcmUg
Y2hlY2tzLCAiCi0JCQkJCQkJInZvbC0+bWZ0X3pvbmVfcG9zICIKLQkJCQkJCQkiMHglbGx4LiIs
Ci0JCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCQl2b2wtPm1mdF96b25lX3Bvcyk7
Ci0JCQkJCWlmICh0YyA+PSB2b2wtPm1mdF96b25lX2VuZCkgewotCQkJCQkJdm9sLT5tZnRfem9u
ZV9wb3MgPQotCQkJCQkJCQl2b2wtPm1mdF9sY247Ci0JCQkJCQlpZiAoIXZvbC0+bWZ0X3pvbmVf
ZW5kKQotCQkJCQkJCXZvbC0+bWZ0X3pvbmVfcG9zID0gMDsKLQkJCQkJfSBlbHNlIGlmICgoYm1w
X2luaXRpYWxfcG9zID49Ci0JCQkJCQkJdm9sLT5tZnRfem9uZV9wb3MgfHwKLQkJCQkJCQl0YyA+
IHZvbC0+bWZ0X3pvbmVfcG9zKQotCQkJCQkJCSYmIHRjID49IHZvbC0+bWZ0X2xjbikKLQkJCQkJ
CXZvbC0+bWZ0X3pvbmVfcG9zID0gdGM7Ci0JCQkJCW50ZnNfZGVidWcoIkFmdGVyIGNoZWNrcywg
IgotCQkJCQkJCSJ2b2wtPm1mdF96b25lX3BvcyAiCi0JCQkJCQkJIjB4JWxseC4iLAotCQkJCQkJ
CSh1bnNpZ25lZCBsb25nIGxvbmcpCi0JCQkJCQkJdm9sLT5tZnRfem9uZV9wb3MpOwotCQkJCQli
cmVhazsKLQkJCQljYXNlIDI6Ci0JCQkJCW50ZnNfZGVidWcoIkJlZm9yZSBjaGVja3MsICIKLQkJ
CQkJCQkidm9sLT5kYXRhMV96b25lX3BvcyAiCi0JCQkJCQkJIjB4JWxseC4iLAotCQkJCQkJCSh1
bnNpZ25lZCBsb25nIGxvbmcpCi0JCQkJCQkJdm9sLT5kYXRhMV96b25lX3Bvcyk7Ci0JCQkJCWlm
ICh0YyA+PSB2b2wtPm5yX2NsdXN0ZXJzKQotCQkJCQkJdm9sLT5kYXRhMV96b25lX3BvcyA9Ci0J
CQkJCQkJICAgICB2b2wtPm1mdF96b25lX2VuZDsKLQkJCQkJZWxzZSBpZiAoKGJtcF9pbml0aWFs
X3BvcyA+PQotCQkJCQkJICAgIHZvbC0+ZGF0YTFfem9uZV9wb3MgfHwKLQkJCQkJCSAgICB0YyA+
IHZvbC0+ZGF0YTFfem9uZV9wb3MpCi0JCQkJCQkgICAgJiYgdGMgPj0gdm9sLT5tZnRfem9uZV9l
bmQpCi0JCQkJCQl2b2wtPmRhdGExX3pvbmVfcG9zID0gdGM7Ci0JCQkJCW50ZnNfZGVidWcoIkFm
dGVyIGNoZWNrcywgIgotCQkJCQkJCSJ2b2wtPmRhdGExX3pvbmVfcG9zICIKLQkJCQkJCQkiMHgl
bGx4LiIsCi0JCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCQl2b2wtPmRhdGExX3pv
bmVfcG9zKTsKLQkJCQkJYnJlYWs7Ci0JCQkJY2FzZSA0OgotCQkJCQludGZzX2RlYnVnKCJCZWZv
cmUgY2hlY2tzLCAiCi0JCQkJCQkJInZvbC0+ZGF0YTJfem9uZV9wb3MgIgotCQkJCQkJCSIweCVs
bHguIiwKLQkJCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKQotCQkJCQkJCXZvbC0+ZGF0YTJfem9u
ZV9wb3MpOwotCQkJCQlpZiAodGMgPj0gdm9sLT5tZnRfem9uZV9zdGFydCkKLQkJCQkJCXZvbC0+
ZGF0YTJfem9uZV9wb3MgPSAwOwotCQkJCQllbHNlIGlmIChibXBfaW5pdGlhbF9wb3MgPj0KLQkJ
CQkJCSAgICAgIHZvbC0+ZGF0YTJfem9uZV9wb3MgfHwKLQkJCQkJCSAgICAgIHRjID4gdm9sLT5k
YXRhMl96b25lX3BvcykKLQkJCQkJCXZvbC0+ZGF0YTJfem9uZV9wb3MgPSB0YzsKLQkJCQkJbnRm
c19kZWJ1ZygiQWZ0ZXIgY2hlY2tzLCAiCi0JCQkJCQkJInZvbC0+ZGF0YTJfem9uZV9wb3MgIgot
CQkJCQkJCSIweCVsbHguIiwKLQkJCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKQotCQkJCQkJCXZv
bC0+ZGF0YTJfem9uZV9wb3MpOwotCQkJCQlicmVhazsKLQkJCQlkZWZhdWx0OgotCQkJCQlCVUco
KTsKLQkJCQl9Ci0JCQkJbnRmc19kZWJ1ZygiRmluaXNoZWQuICBHb2luZyB0byBvdXQuIik7Ci0J
CQkJZ290byBvdXQ7Ci0JCQl9Ci0JCQlsY24rKzsKLQkJfQotCQlibXBfcG9zICs9IGJ1Zl9zaXpl
OwotCQludGZzX2RlYnVnKCJBZnRlciBpbm5lciB3aGlsZSBsb29wOiBidWZfc2l6ZSAweCV4LCBs
Y24gIgotCQkJCSIweCVsbHgsIGJtcF9wb3MgMHglbGx4LCBuZWVkX3dyaXRlYmFjayAlaS4iLAot
CQkJCWJ1Zl9zaXplLCAodW5zaWduZWQgbG9uZyBsb25nKWxjbiwKLQkJCQkodW5zaWduZWQgbG9u
ZyBsb25nKWJtcF9wb3MsIG5lZWRfd3JpdGViYWNrKTsKLQkJaWYgKGJtcF9wb3MgPCB6b25lX2Vu
ZCkgewotCQkJbnRmc19kZWJ1ZygiQ29udGludWluZyBvdXRlciB3aGlsZSBsb29wLCAiCi0JCQkJ
CSJibXBfcG9zIDB4JWxseCwgem9uZV9lbmQgMHglbGx4LiIsCi0JCQkJCSh1bnNpZ25lZCBsb25n
IGxvbmcpYm1wX3BvcywKLQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl6b25lX2VuZCk7Ci0JCQlj
b250aW51ZTsKLQkJfQotem9uZV9wYXNzX2RvbmU6CS8qIEZpbmlzaGVkIHdpdGggdGhlIGN1cnJl
bnQgem9uZSBwYXNzLiAqLwotCQludGZzX2RlYnVnKCJBdCB6b25lX3Bhc3NfZG9uZSwgcGFzcyAl
aS4iLCBwYXNzKTsKLQkJaWYgKHBhc3MgPT0gMSkgewotCQkJLyoKLQkJCSAqIE5vdyBkbyBwYXNz
IDIsIHNjYW5uaW5nIHRoZSBmaXJzdCBwYXJ0IG9mIHRoZSB6b25lCi0JCQkgKiB3ZSBvbWl0dGVk
IGluIHBhc3MgMS4KLQkJCSAqLwotCQkJcGFzcyA9IDI7Ci0JCQl6b25lX2VuZCA9IHpvbmVfc3Rh
cnQ7Ci0JCQlzd2l0Y2ggKHNlYXJjaF96b25lKSB7Ci0JCQljYXNlIDE6IC8qIG1mdF96b25lICov
Ci0JCQkJem9uZV9zdGFydCA9IHZvbC0+bWZ0X3pvbmVfc3RhcnQ7Ci0JCQkJYnJlYWs7Ci0JCQlj
YXNlIDI6IC8qIGRhdGExX3pvbmUgKi8KLQkJCQl6b25lX3N0YXJ0ID0gdm9sLT5tZnRfem9uZV9l
bmQ7Ci0JCQkJYnJlYWs7Ci0JCQljYXNlIDQ6IC8qIGRhdGEyX3pvbmUgKi8KLQkJCQl6b25lX3N0
YXJ0ID0gMDsKLQkJCQlicmVhazsKLQkJCWRlZmF1bHQ6Ci0JCQkJQlVHKCk7Ci0JCQl9Ci0JCQkv
KiBTYW5pdHkgY2hlY2suICovCi0JCQlpZiAoem9uZV9lbmQgPCB6b25lX3N0YXJ0KQotCQkJCXpv
bmVfZW5kID0gem9uZV9zdGFydDsKLQkJCWJtcF9wb3MgPSB6b25lX3N0YXJ0OwotCQkJbnRmc19k
ZWJ1ZygiQ29udGludWluZyBvdXRlciB3aGlsZSBsb29wLCBwYXNzIDIsICIKLQkJCQkJInpvbmVf
c3RhcnQgMHglbGx4LCB6b25lX2VuZCAweCVsbHgsICIKLQkJCQkJImJtcF9wb3MgMHglbGx4LiIs
Ci0JCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpem9uZV9zdGFydCwKLQkJCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZyl6b25lX2VuZCwKLQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylibXBfcG9zKTsKLQkJ
CWNvbnRpbnVlOwotCQl9IC8qIHBhc3MgPT0gMiAqLwotZG9uZV96b25lc19jaGVjazoKLQkJbnRm
c19kZWJ1ZygiQXQgZG9uZV96b25lc19jaGVjaywgc2VhcmNoX3pvbmUgJWksIGRvbmVfem9uZXMg
IgotCQkJCSJiZWZvcmUgMHgleCwgZG9uZV96b25lcyBhZnRlciAweCV4LiIsCi0JCQkJc2VhcmNo
X3pvbmUsIGRvbmVfem9uZXMsCi0JCQkJZG9uZV96b25lcyB8IHNlYXJjaF96b25lKTsKLQkJZG9u
ZV96b25lcyB8PSBzZWFyY2hfem9uZTsKLQkJaWYgKGRvbmVfem9uZXMgPCA3KSB7Ci0JCQludGZz
X2RlYnVnKCJTd2l0Y2hpbmcgem9uZS4iKTsKLQkJCS8qIE5vdyBzd2l0Y2ggdG8gdGhlIG5leHQg
em9uZSB3ZSBoYXZlbid0IGRvbmUgeWV0LiAqLwotCQkJcGFzcyA9IDE7Ci0JCQlzd2l0Y2ggKHNl
YXJjaF96b25lKSB7Ci0JCQljYXNlIDE6Ci0JCQkJbnRmc19kZWJ1ZygiU3dpdGNoaW5nIGZyb20g
bWZ0IHpvbmUgdG8gZGF0YTEgIgotCQkJCQkJInpvbmUuIik7Ci0JCQkJLyogVXBkYXRlIG1mdCB6
b25lIHBvc2l0aW9uLiAqLwotCQkJCWlmIChybHBvcykgewotCQkJCQlMQ04gdGM7Ci0KLQkJCQkJ
bnRmc19kZWJ1ZygiQmVmb3JlIGNoZWNrcywgIgotCQkJCQkJCSJ2b2wtPm1mdF96b25lX3BvcyAi
Ci0JCQkJCQkJIjB4JWxseC4iLAotCQkJCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpCi0JCQkJCQkJ
dm9sLT5tZnRfem9uZV9wb3MpOwotCQkJCQl0YyA9IHJsW3JscG9zIC0gMV0ubGNuICsKLQkJCQkJ
CQlybFtybHBvcyAtIDFdLmxlbmd0aDsKLQkJCQkJaWYgKHRjID49IHZvbC0+bWZ0X3pvbmVfZW5k
KSB7Ci0JCQkJCQl2b2wtPm1mdF96b25lX3BvcyA9Ci0JCQkJCQkJCXZvbC0+bWZ0X2xjbjsKLQkJ
CQkJCWlmICghdm9sLT5tZnRfem9uZV9lbmQpCi0JCQkJCQkJdm9sLT5tZnRfem9uZV9wb3MgPSAw
OwotCQkJCQl9IGVsc2UgaWYgKChibXBfaW5pdGlhbF9wb3MgPj0KLQkJCQkJCQl2b2wtPm1mdF96
b25lX3BvcyB8fAotCQkJCQkJCXRjID4gdm9sLT5tZnRfem9uZV9wb3MpCi0JCQkJCQkJJiYgdGMg
Pj0gdm9sLT5tZnRfbGNuKQotCQkJCQkJdm9sLT5tZnRfem9uZV9wb3MgPSB0YzsKLQkJCQkJbnRm
c19kZWJ1ZygiQWZ0ZXIgY2hlY2tzLCAiCi0JCQkJCQkJInZvbC0+bWZ0X3pvbmVfcG9zICIKLQkJ
CQkJCQkiMHglbGx4LiIsCi0JCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCQl2b2wt
Pm1mdF96b25lX3Bvcyk7Ci0JCQkJfQotCQkJCS8qIFN3aXRjaCBmcm9tIG1mdCB6b25lIHRvIGRh
dGExIHpvbmUuICovCi1zd2l0Y2hfdG9fZGF0YTFfem9uZToJCXNlYXJjaF96b25lID0gMjsKLQkJ
CQl6b25lX3N0YXJ0ID0gYm1wX2luaXRpYWxfcG9zID0KLQkJCQkJCXZvbC0+ZGF0YTFfem9uZV9w
b3M7Ci0JCQkJem9uZV9lbmQgPSB2b2wtPm5yX2NsdXN0ZXJzOwotCQkJCWlmICh6b25lX3N0YXJ0
ID09IHZvbC0+bWZ0X3pvbmVfZW5kKQotCQkJCQlwYXNzID0gMjsKLQkJCQlpZiAoem9uZV9zdGFy
dCA+PSB6b25lX2VuZCkgewotCQkJCQl2b2wtPmRhdGExX3pvbmVfcG9zID0gem9uZV9zdGFydCA9
Ci0JCQkJCQkJdm9sLT5tZnRfem9uZV9lbmQ7Ci0JCQkJCXBhc3MgPSAyOwotCQkJCX0KLQkJCQli
cmVhazsKLQkJCWNhc2UgMjoKLQkJCQludGZzX2RlYnVnKCJTd2l0Y2hpbmcgZnJvbSBkYXRhMSB6
b25lIHRvICIKLQkJCQkJCSJkYXRhMiB6b25lLiIpOwotCQkJCS8qIFVwZGF0ZSBkYXRhMSB6b25l
IHBvc2l0aW9uLiAqLwotCQkJCWlmIChybHBvcykgewotCQkJCQlMQ04gdGM7Ci0KLQkJCQkJbnRm
c19kZWJ1ZygiQmVmb3JlIGNoZWNrcywgIgotCQkJCQkJCSJ2b2wtPmRhdGExX3pvbmVfcG9zICIK
LQkJCQkJCQkiMHglbGx4LiIsCi0JCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCQl2
b2wtPmRhdGExX3pvbmVfcG9zKTsKLQkJCQkJdGMgPSBybFtybHBvcyAtIDFdLmxjbiArCi0JCQkJ
CQkJcmxbcmxwb3MgLSAxXS5sZW5ndGg7Ci0JCQkJCWlmICh0YyA+PSB2b2wtPm5yX2NsdXN0ZXJz
KQotCQkJCQkJdm9sLT5kYXRhMV96b25lX3BvcyA9Ci0JCQkJCQkJICAgICB2b2wtPm1mdF96b25l
X2VuZDsKLQkJCQkJZWxzZSBpZiAoKGJtcF9pbml0aWFsX3BvcyA+PQotCQkJCQkJICAgIHZvbC0+
ZGF0YTFfem9uZV9wb3MgfHwKLQkJCQkJCSAgICB0YyA+IHZvbC0+ZGF0YTFfem9uZV9wb3MpCi0J
CQkJCQkgICAgJiYgdGMgPj0gdm9sLT5tZnRfem9uZV9lbmQpCi0JCQkJCQl2b2wtPmRhdGExX3pv
bmVfcG9zID0gdGM7Ci0JCQkJCW50ZnNfZGVidWcoIkFmdGVyIGNoZWNrcywgIgotCQkJCQkJCSJ2
b2wtPmRhdGExX3pvbmVfcG9zICIKLQkJCQkJCQkiMHglbGx4LiIsCi0JCQkJCQkJKHVuc2lnbmVk
IGxvbmcgbG9uZykKLQkJCQkJCQl2b2wtPmRhdGExX3pvbmVfcG9zKTsKLQkJCQl9Ci0JCQkJLyog
U3dpdGNoIGZyb20gZGF0YTEgem9uZSB0byBkYXRhMiB6b25lLiAqLwotCQkJCXNlYXJjaF96b25l
ID0gNDsKLQkJCQl6b25lX3N0YXJ0ID0gYm1wX2luaXRpYWxfcG9zID0KLQkJCQkJCXZvbC0+ZGF0
YTJfem9uZV9wb3M7Ci0JCQkJem9uZV9lbmQgPSB2b2wtPm1mdF96b25lX3N0YXJ0OwotCQkJCWlm
ICghem9uZV9zdGFydCkKLQkJCQkJcGFzcyA9IDI7Ci0JCQkJaWYgKHpvbmVfc3RhcnQgPj0gem9u
ZV9lbmQpIHsKLQkJCQkJdm9sLT5kYXRhMl96b25lX3BvcyA9IHpvbmVfc3RhcnQgPQotCQkJCQkJ
CWJtcF9pbml0aWFsX3BvcyA9IDA7Ci0JCQkJCXBhc3MgPSAyOwotCQkJCX0KLQkJCQlicmVhazsK
LQkJCWNhc2UgNDoKLQkJCQludGZzX2RlYnVnKCJTd2l0Y2hpbmcgZnJvbSBkYXRhMiB6b25lIHRv
ICIKLQkJCQkJCSJkYXRhMSB6b25lLiIpOwotCQkJCS8qIFVwZGF0ZSBkYXRhMiB6b25lIHBvc2l0
aW9uLiAqLwotCQkJCWlmIChybHBvcykgewotCQkJCQlMQ04gdGM7Ci0KLQkJCQkJbnRmc19kZWJ1
ZygiQmVmb3JlIGNoZWNrcywgIgotCQkJCQkJCSJ2b2wtPmRhdGEyX3pvbmVfcG9zICIKLQkJCQkJ
CQkiMHglbGx4LiIsCi0JCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCQl2b2wtPmRh
dGEyX3pvbmVfcG9zKTsKLQkJCQkJdGMgPSBybFtybHBvcyAtIDFdLmxjbiArCi0JCQkJCQkJcmxb
cmxwb3MgLSAxXS5sZW5ndGg7Ci0JCQkJCWlmICh0YyA+PSB2b2wtPm1mdF96b25lX3N0YXJ0KQot
CQkJCQkJdm9sLT5kYXRhMl96b25lX3BvcyA9IDA7Ci0JCQkJCWVsc2UgaWYgKGJtcF9pbml0aWFs
X3BvcyA+PQotCQkJCQkJICAgICAgdm9sLT5kYXRhMl96b25lX3BvcyB8fAotCQkJCQkJICAgICAg
dGMgPiB2b2wtPmRhdGEyX3pvbmVfcG9zKQotCQkJCQkJdm9sLT5kYXRhMl96b25lX3BvcyA9IHRj
OwotCQkJCQludGZzX2RlYnVnKCJBZnRlciBjaGVja3MsICIKLQkJCQkJCQkidm9sLT5kYXRhMl96
b25lX3BvcyAiCi0JCQkJCQkJIjB4JWxseC4iLAotCQkJCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcp
Ci0JCQkJCQkJdm9sLT5kYXRhMl96b25lX3Bvcyk7Ci0JCQkJfQotCQkJCS8qIFN3aXRjaCBmcm9t
IGRhdGEyIHpvbmUgdG8gZGF0YTEgem9uZS4gKi8KLQkJCQlnb3RvIHN3aXRjaF90b19kYXRhMV96
b25lOwotCQkJZGVmYXVsdDoKLQkJCQlCVUcoKTsKLQkJCX0KLQkJCW50ZnNfZGVidWcoIkFmdGVy
IHpvbmUgc3dpdGNoLCBzZWFyY2hfem9uZSAlaSwgIgotCQkJCQkicGFzcyAlaSwgYm1wX2luaXRp
YWxfcG9zIDB4JWxseCwgIgotCQkJCQkiem9uZV9zdGFydCAweCVsbHgsIHpvbmVfZW5kIDB4JWxs
eC4iLAotCQkJCQlzZWFyY2hfem9uZSwgcGFzcywKLQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyli
bXBfaW5pdGlhbF9wb3MsCi0JCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpem9uZV9zdGFydCwKLQkJ
CQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl6b25lX2VuZCk7Ci0JCQlibXBfcG9zID0gem9uZV9zdGFy
dDsKLQkJCWlmICh6b25lX3N0YXJ0ID09IHpvbmVfZW5kKSB7Ci0JCQkJbnRmc19kZWJ1ZygiRW1w
dHkgem9uZSwgZ29pbmcgdG8gIgotCQkJCQkJImRvbmVfem9uZXNfY2hlY2suIik7Ci0JCQkJLyog
RW1wdHkgem9uZS4gRG9uJ3QgYm90aGVyIHNlYXJjaGluZyBpdC4gKi8KLQkJCQlnb3RvIGRvbmVf
em9uZXNfY2hlY2s7Ci0JCQl9Ci0JCQludGZzX2RlYnVnKCJDb250aW51aW5nIG91dGVyIHdoaWxl
IGxvb3AuIik7Ci0JCQljb250aW51ZTsKLQkJfSAvKiBkb25lX3pvbmVzID09IDcgKi8KLQkJbnRm
c19kZWJ1ZygiQWxsIHpvbmVzIGFyZSBmaW5pc2hlZC4iKTsKLQkJLyoKLQkJICogQWxsIHpvbmVz
IGFyZSBmaW5pc2hlZCEgIElmIERBVEFfWk9ORSwgc2hyaW5rIG1mdCB6b25lLiAgSWYKLQkJICog
TUZUX1pPTkUsIHdlIGhhdmUgcmVhbGx5IHJ1biBvdXQgb2Ygc3BhY2UuCi0JCSAqLwotCQltZnRf
em9uZV9zaXplID0gdm9sLT5tZnRfem9uZV9lbmQgLSB2b2wtPm1mdF96b25lX3N0YXJ0OwotCQlu
dGZzX2RlYnVnKCJ2b2wtPm1mdF96b25lX3N0YXJ0IDB4JWxseCwgdm9sLT5tZnRfem9uZV9lbmQg
IgotCQkJCSIweCVsbHgsIG1mdF96b25lX3NpemUgMHglbGx4LiIsCi0JCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZyl2b2wtPm1mdF96b25lX3N0YXJ0LAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdm9s
LT5tZnRfem9uZV9lbmQsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyltZnRfem9uZV9zaXplKTsK
LQkJaWYgKHpvbmUgPT0gTUZUX1pPTkUgfHwgbWZ0X3pvbmVfc2l6ZSA8PSAwKSB7Ci0JCQludGZz
X2RlYnVnKCJObyBmcmVlIGNsdXN0ZXJzIGxlZnQsIGdvaW5nIHRvIG91dC4iKTsKLQkJCS8qIFJl
YWxseSBubyBtb3JlIHNwYWNlIGxlZnQgb24gZGV2aWNlLiAqLwotCQkJZXJyID0gLUVOT1NQQzsK
LQkJCWdvdG8gb3V0OwotCQl9IC8qIHpvbmUgPT0gREFUQV9aT05FICYmIG1mdF96b25lX3NpemUg
PiAwICovCi0JCW50ZnNfZGVidWcoIlNocmlua2luZyBtZnQgem9uZS4iKTsKLQkJem9uZV9lbmQg
PSB2b2wtPm1mdF96b25lX2VuZDsKLQkJbWZ0X3pvbmVfc2l6ZSA+Pj0gMTsKLQkJaWYgKG1mdF96
b25lX3NpemUgPiAwKQotCQkJdm9sLT5tZnRfem9uZV9lbmQgPSB2b2wtPm1mdF96b25lX3N0YXJ0
ICsgbWZ0X3pvbmVfc2l6ZTsKLQkJZWxzZSAvKiBtZnQgem9uZSBhbmQgZGF0YTIgem9uZSBubyBs
b25nZXIgZXhpc3QuICovCi0JCQl2b2wtPmRhdGEyX3pvbmVfcG9zID0gdm9sLT5tZnRfem9uZV9z
dGFydCA9Ci0JCQkJCXZvbC0+bWZ0X3pvbmVfZW5kID0gMDsKLQkJaWYgKHZvbC0+bWZ0X3pvbmVf
cG9zID49IHZvbC0+bWZ0X3pvbmVfZW5kKSB7Ci0JCQl2b2wtPm1mdF96b25lX3BvcyA9IHZvbC0+
bWZ0X2xjbjsKLQkJCWlmICghdm9sLT5tZnRfem9uZV9lbmQpCi0JCQkJdm9sLT5tZnRfem9uZV9w
b3MgPSAwOwotCQl9Ci0JCWJtcF9wb3MgPSB6b25lX3N0YXJ0ID0gYm1wX2luaXRpYWxfcG9zID0K
LQkJCQl2b2wtPmRhdGExX3pvbmVfcG9zID0gdm9sLT5tZnRfem9uZV9lbmQ7Ci0JCXNlYXJjaF96
b25lID0gMjsKLQkJcGFzcyA9IDI7Ci0JCWRvbmVfem9uZXMgJj0gfjI7Ci0JCW50ZnNfZGVidWco
IkFmdGVyIHNocmlua2luZyBtZnQgem9uZSwgbWZ0X3pvbmVfc2l6ZSAweCVsbHgsICIKLQkJCQki
dm9sLT5tZnRfem9uZV9zdGFydCAweCVsbHgsICIKLQkJCQkidm9sLT5tZnRfem9uZV9lbmQgMHgl
bGx4LCAiCi0JCQkJInZvbC0+bWZ0X3pvbmVfcG9zIDB4JWxseCwgc2VhcmNoX3pvbmUgMiwgIgot
CQkJCSJwYXNzIDIsIGRvbmVzX3pvbmVzIDB4JXgsIHpvbmVfc3RhcnQgMHglbGx4LCAiCi0JCQkJ
InpvbmVfZW5kIDB4JWxseCwgdm9sLT5kYXRhMV96b25lX3BvcyAweCVsbHgsICIKLQkJCQkiY29u
dGludWluZyBvdXRlciB3aGlsZSBsb29wLiIsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyltZnRf
em9uZV9zaXplLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdm9sLT5tZnRfem9uZV9zdGFydCwK
LQkJCQkodW5zaWduZWQgbG9uZyBsb25nKXZvbC0+bWZ0X3pvbmVfZW5kLAotCQkJCSh1bnNpZ25l
ZCBsb25nIGxvbmcpdm9sLT5tZnRfem9uZV9wb3MsCi0JCQkJZG9uZV96b25lcywgKHVuc2lnbmVk
IGxvbmcgbG9uZyl6b25lX3N0YXJ0LAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpem9uZV9lbmQs
Ci0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2b2wtPmRhdGExX3pvbmVfcG9zKTsKLQl9Ci0JbnRm
c19kZWJ1ZygiQWZ0ZXIgb3V0ZXIgd2hpbGUgbG9vcC4iKTsKLW91dDoKLQludGZzX2RlYnVnKCJB
dCBvdXQuIik7Ci0JLyogQWRkIHJ1bmxpc3QgdGVybWluYXRvciBlbGVtZW50LiAqLwotCWlmIChs
aWtlbHkocmwpKSB7Ci0JCXJsW3JscG9zXS52Y24gPSBybFtybHBvcyAtIDFdLnZjbiArIHJsW3Js
cG9zIC0gMV0ubGVuZ3RoOwotCQlybFtybHBvc10ubGNuID0gaXNfZXh0ZW5zaW9uID8gTENOX0VO
T0VOVCA6IExDTl9STF9OT1RfTUFQUEVEOwotCQlybFtybHBvc10ubGVuZ3RoID0gMDsKLQl9Ci0J
aWYgKGxpa2VseShwYWdlICYmICFJU19FUlIocGFnZSkpKSB7Ci0JCWlmIChuZWVkX3dyaXRlYmFj
aykgewotCQkJbnRmc19kZWJ1ZygiTWFya2luZyBwYWdlIGRpcnR5LiIpOwotCQkJZmx1c2hfZGNh
Y2hlX3BhZ2UocGFnZSk7Ci0JCQlzZXRfcGFnZV9kaXJ0eShwYWdlKTsKLQkJCW5lZWRfd3JpdGVi
YWNrID0gMDsKLQkJfQotCQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JfQotCWlmIChsaWtlbHko
IWVycikpIHsKLQkJdXBfd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2spOwotCQludGZzX2RlYnVnKCJE
b25lLiIpOwotCQlyZXR1cm4gcmw7Ci0JfQotCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0
byBhbGxvY2F0ZSBjbHVzdGVycywgYWJvcnRpbmcgIgotCQkJIihlcnJvciAlaSkuIiwgZXJyKTsK
LQlpZiAocmwpIHsKLQkJaW50IGVycjI7Ci0KLQkJaWYgKGVyciA9PSAtRU5PU1BDKQotCQkJbnRm
c19kZWJ1ZygiTm90IGVub3VnaCBzcGFjZSB0byBjb21wbGV0ZSBhbGxvY2F0aW9uLCAiCi0JCQkJ
CSJlcnIgLUVOT1NQQywgZmlyc3QgZnJlZSBsY24gMHglbGx4LCAiCi0JCQkJCSJjb3VsZCBhbGxv
Y2F0ZSB1cCB0byAweCVsbHggIgotCQkJCQkiY2x1c3RlcnMuIiwKLQkJCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZylybFswXS5sY24sCi0JCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpKGNvdW50IC0gY2x1
c3RlcnMpKTsKLQkJLyogRGVhbGxvY2F0ZSBhbGwgYWxsb2NhdGVkIGNsdXN0ZXJzLiAqLwotCQlu
dGZzX2RlYnVnKCJBdHRlbXB0aW5nIHJvbGxiYWNrLi4uIik7Ci0JCWVycjIgPSBudGZzX2NsdXN0
ZXJfZnJlZV9mcm9tX3JsX25vbG9jayh2b2wsIHJsKTsKLQkJaWYgKGVycjIpIHsKLQkJCW50ZnNf
ZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByb2xsYmFjayAoZXJyb3IgJWkpLiAgIgotCQkJCQki
TGVhdmluZyBpbmNvbnNpc3RlbnQgbWV0YWRhdGEhICAiCi0JCQkJCSJVbm1vdW50IGFuZCBydW4g
Y2hrZHNrLiIsIGVycjIpOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQl9Ci0JCS8qIEZyZWUg
dGhlIHJ1bmxpc3QuICovCi0JCW50ZnNfZnJlZShybCk7Ci0JfSBlbHNlIGlmIChlcnIgPT0gLUVO
T1NQQykKLQkJbnRmc19kZWJ1ZygiTm8gc3BhY2UgbGVmdCBhdCBhbGwsIGVyciA9IC1FTk9TUEMs
IGZpcnN0IGZyZWUgIgotCQkJCSJsY24gPSAweCVsbHguIiwKLQkJCQkobG9uZyBsb25nKXZvbC0+
ZGF0YTFfem9uZV9wb3MpOwotCXVwX3dyaXRlKCZ2b2wtPmxjbmJtcF9sb2NrKTsKLQlyZXR1cm4g
RVJSX1BUUihlcnIpOwotfQotCi0vKioKLSAqIF9fbnRmc19jbHVzdGVyX2ZyZWUgLSBmcmVlIGNs
dXN0ZXJzIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAbmk6CQludGZzIGlub2RlIHdob3NlIHJ1bmxp
c3QgZGVzY3JpYmVzIHRoZSBjbHVzdGVycyB0byBmcmVlCi0gKiBAc3RhcnRfdmNuOgl2Y24gaW4g
dGhlIHJ1bmxpc3Qgb2YgQG5pIGF0IHdoaWNoIHRvIHN0YXJ0IGZyZWVpbmcgY2x1c3RlcnMKLSAq
IEBjb3VudDoJbnVtYmVyIG9mIGNsdXN0ZXJzIHRvIGZyZWUgb3IgLTEgZm9yIGFsbCBjbHVzdGVy
cwotICogQGN0eDoJYWN0aXZlIGF0dHJpYnV0ZSBzZWFyY2ggY29udGV4dCBpZiBwcmVzZW50IG9y
IE5VTEwgaWYgbm90Ci0gKiBAaXNfcm9sbGJhY2s6CXRydWUgaWYgdGhpcyBpcyBhIHJvbGxiYWNr
IG9wZXJhdGlvbgotICoKLSAqIEZyZWUgQGNvdW50IGNsdXN0ZXJzIHN0YXJ0aW5nIGF0IHRoZSBj
bHVzdGVyIEBzdGFydF92Y24gaW4gdGhlIHJ1bmxpc3QKLSAqIGRlc2NyaWJlZCBieSB0aGUgdmZz
IGlub2RlIEBuaS4KLSAqCi0gKiBJZiBAY291bnQgaXMgLTEsIGFsbCBjbHVzdGVycyBmcm9tIEBz
dGFydF92Y24gdG8gdGhlIGVuZCBvZiB0aGUgcnVubGlzdCBhcmUKLSAqIGRlYWxsb2NhdGVkLiAg
VGh1cywgdG8gY29tcGxldGVseSBmcmVlIGFsbCBjbHVzdGVycyBpbiBhIHJ1bmxpc3QsIHVzZQot
ICogQHN0YXJ0X3ZjbiA9IDAgYW5kIEBjb3VudCA9IC0xLgotICoKLSAqIElmIEBjdHggaXMgc3Bl
Y2lmaWVkLCBpdCBpcyBhbiBhY3RpdmUgc2VhcmNoIGNvbnRleHQgb2YgQG5pIGFuZCBpdHMgYmFz
ZSBtZnQKLSAqIHJlY29yZC4gIFRoaXMgaXMgbmVlZGVkIHdoZW4gX19udGZzX2NsdXN0ZXJfZnJl
ZSgpIGVuY291bnRlcnMgdW5tYXBwZWQKLSAqIHJ1bmxpc3QgZnJhZ21lbnRzIGFuZCBhbGxvd3Mg
dGhlaXIgbWFwcGluZy4gIElmIHlvdSBkbyBub3QgaGF2ZSB0aGUgbWZ0Ci0gKiByZWNvcmQgbWFw
cGVkLCB5b3UgY2FuIHNwZWNpZnkgQGN0eCBhcyBOVUxMIGFuZCBfX250ZnNfY2x1c3Rlcl9mcmVl
KCkgd2lsbAotICogcGVyZm9ybSB0aGUgbmVjZXNzYXJ5IG1hcHBpbmcgYW5kIHVubWFwcGluZy4K
LSAqCi0gKiBOb3RlLCBfX250ZnNfY2x1c3Rlcl9mcmVlKCkgc2F2ZXMgdGhlIHN0YXRlIG9mIEBj
dHggb24gZW50cnkgYW5kIHJlc3RvcmVzIGl0Ci0gKiBiZWZvcmUgcmV0dXJuaW5nLiAgVGh1cywg
QGN0eCB3aWxsIGJlIGxlZnQgcG9pbnRpbmcgdG8gdGhlIHNhbWUgYXR0cmlidXRlIG9uCi0gKiBy
ZXR1cm4gYXMgb24gZW50cnkuICBIb3dldmVyLCB0aGUgYWN0dWFsIHBvaW50ZXJzIGluIEBjdHgg
bWF5IHBvaW50IHRvCi0gKiBkaWZmZXJlbnQgbWVtb3J5IGxvY2F0aW9ucyBvbiByZXR1cm4sIHNv
IHlvdSBtdXN0IHJlbWVtYmVyIHRvIHJlc2V0IGFueQotICogY2FjaGVkIHBvaW50ZXJzIGZyb20g
dGhlIEBjdHgsIGkuZS4gYWZ0ZXIgdGhlIGNhbGwgdG8gX19udGZzX2NsdXN0ZXJfZnJlZSgpLAot
ICogeW91IHdpbGwgcHJvYmFibHkgd2FudCB0byBkbzoKLSAqCW0gPSBjdHgtPm1yZWM7Ci0gKglh
ID0gY3R4LT5hdHRyOwotICogQXNzdW1pbmcgeW91IGNhY2hlIGN0eC0+YXR0ciBpbiBhIHZhcmlh
YmxlIEBhIG9mIHR5cGUgQVRUUl9SRUNPUkQgKiBhbmQgdGhhdAotICogeW91IGNhY2hlIGN0eC0+
bXJlYyBpbiBhIHZhcmlhYmxlIEBtIG9mIHR5cGUgTUZUX1JFQ09SRCAqLgotICoKLSAqIEBpc19y
b2xsYmFjayBzaG91bGQgYWx3YXlzIGJlICdmYWxzZScsIGl0IGlzIGZvciBpbnRlcm5hbCB1c2Ug
dG8gcm9sbGJhY2sKLSAqIGVycm9ycy4gIFlvdSBwcm9iYWJseSB3YW50IHRvIHVzZSBudGZzX2Ns
dXN0ZXJfZnJlZSgpIGluc3RlYWQuCi0gKgotICogTm90ZSwgX19udGZzX2NsdXN0ZXJfZnJlZSgp
IGRvZXMgbm90IG1vZGlmeSB0aGUgcnVubGlzdCwgc28geW91IGhhdmUgdG8KLSAqIHJlbW92ZSBm
cm9tIHRoZSBydW5saXN0IG9yIG1hcmsgc3BhcnNlIHRoZSBmcmVlZCBydW5zIGxhdGVyLgotICoK
LSAqIFJldHVybiB0aGUgbnVtYmVyIG9mIGRlYWxsb2NhdGVkIGNsdXN0ZXJzIChub3QgY291bnRp
bmcgc3BhcnNlIG9uZXMpIG9uCi0gKiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3IuCi0gKgot
ICogV0FSTklORzogSWYgQGN0eCBpcyBzdXBwbGllZCwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHN1
Y2Nlc3Mgb3IgZmFpbHVyZSBpcwotICoJICAgIHJldHVybmVkLCB5b3UgbmVlZCB0byBjaGVjayBJ
U19FUlIoQGN0eC0+bXJlYykgYW5kIGlmICd0cnVlJyB0aGUgQGN0eAotICoJICAgIGlzIG5vIGxv
bmdlciB2YWxpZCwgaS5lLiB5b3UgbmVlZCB0byBlaXRoZXIgY2FsbAotICoJICAgIG50ZnNfYXR0
cl9yZWluaXRfc2VhcmNoX2N0eCgpIG9yIG50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eCgpIG9uIGl0
LgotICoJICAgIEluIHRoYXQgY2FzZSBQVFJfRVJSKEBjdHgtPm1yZWMpIHdpbGwgZ2l2ZSB5b3Ug
dGhlIGVycm9yIGNvZGUgZm9yCi0gKgkgICAgd2h5IHRoZSBtYXBwaW5nIG9mIHRoZSBvbGQgaW5v
ZGUgZmFpbGVkLgotICoKLSAqIExvY2tpbmc6IC0gVGhlIHJ1bmxpc3QgZGVzY3JpYmVkIGJ5IEBu
aSBtdXN0IGJlIGxvY2tlZCBmb3Igd3JpdGluZyBvbiBlbnRyeQotICoJICAgICAgYW5kIGlzIGxv
Y2tlZCBvbiByZXR1cm4uICBOb3RlIHRoZSBydW5saXN0IG1heSBiZSBtb2RpZmllZCB3aGVuCi0g
KgkgICAgICBuZWVkZWQgcnVubGlzdCBmcmFnbWVudHMgbmVlZCB0byBiZSBtYXBwZWQuCi0gKgkg
ICAgLSBUaGUgdm9sdW1lIGxjbiBiaXRtYXAgbXVzdCBiZSB1bmxvY2tlZCBvbiBlbnRyeSBhbmQg
aXMgdW5sb2NrZWQKLSAqCSAgICAgIG9uIHJldHVybi4KLSAqCSAgICAtIFRoaXMgZnVuY3Rpb24g
dGFrZXMgdGhlIHZvbHVtZSBsY24gYml0bWFwIGxvY2sgZm9yIHdyaXRpbmcgYW5kCi0gKgkgICAg
ICBtb2RpZmllcyB0aGUgYml0bWFwIGNvbnRlbnRzLgotICoJICAgIC0gSWYgQGN0eCBpcyBOVUxM
LCB0aGUgYmFzZSBtZnQgcmVjb3JkIG9mIEBuaSBtdXN0IG5vdCBiZSBtYXBwZWQgb24KLSAqCSAg
ICAgIGVudHJ5IGFuZCBpdCB3aWxsIGJlIGxlZnQgdW5tYXBwZWQgb24gcmV0dXJuLgotICoJICAg
IC0gSWYgQGN0eCBpcyBub3QgTlVMTCwgdGhlIGJhc2UgbWZ0IHJlY29yZCBtdXN0IGJlIG1hcHBl
ZCBvbiBlbnRyeQotICoJICAgICAgYW5kIGl0IHdpbGwgYmUgbGVmdCBtYXBwZWQgb24gcmV0dXJu
LgotICovCi1zNjQgX19udGZzX2NsdXN0ZXJfZnJlZShudGZzX2lub2RlICpuaSwgY29uc3QgVkNO
IHN0YXJ0X3ZjbiwgczY0IGNvdW50LAotCQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4LCBjb25z
dCBib29sIGlzX3JvbGxiYWNrKQotewotCXM2NCBkZWx0YSwgdG9fZnJlZSwgdG90YWxfZnJlZWQs
IHJlYWxfZnJlZWQ7Ci0JbnRmc192b2x1bWUgKnZvbDsKLQlzdHJ1Y3QgaW5vZGUgKmxjbmJtcF92
aTsKLQlydW5saXN0X2VsZW1lbnQgKnJsOwotCWludCBlcnI7Ci0KLQlCVUdfT04oIW5pKTsKLQlu
dGZzX2RlYnVnKCJFbnRlcmluZyBmb3IgaV9pbm8gMHglbHgsIHN0YXJ0X3ZjbiAweCVsbHgsIGNv
dW50ICIKLQkJCSIweCVsbHguJXMiLCBuaS0+bWZ0X25vLCAodW5zaWduZWQgbG9uZyBsb25nKXN0
YXJ0X3ZjbiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpY291bnQsCi0JCQlpc19yb2xsYmFjayA/
ICIgKHJvbGxiYWNrKSIgOiAiIik7Ci0Jdm9sID0gbmktPnZvbDsKLQlsY25ibXBfdmkgPSB2b2wt
PmxjbmJtcF9pbm87Ci0JQlVHX09OKCFsY25ibXBfdmkpOwotCUJVR19PTihzdGFydF92Y24gPCAw
KTsKLQlCVUdfT04oY291bnQgPCAtMSk7Ci0JLyoKLQkgKiBMb2NrIHRoZSBsY24gYml0bWFwIGZv
ciB3cml0aW5nIGJ1dCBvbmx5IGlmIG5vdCByb2xsaW5nIGJhY2suICBXZQotCSAqIG11c3QgaG9s
ZCB0aGUgbG9jayBhbGwgdGhlIHdheSBpbmNsdWRpbmcgdGhyb3VnaCByb2xsYmFjayBvdGhlcndp
c2UKLQkgKiByb2xsYmFjayBpcyBub3QgcG9zc2libGUgYmVjYXVzZSBvbmNlIHdlIGhhdmUgY2xl
YXJlZCBhIGJpdCBhbmQKLQkgKiBkcm9wcGVkIHRoZSBsb2NrLCBhbnlvbmUgY291bGQgaGF2ZSBz
ZXQgdGhlIGJpdCBhZ2FpbiwgdGh1cwotCSAqIGFsbG9jYXRpbmcgdGhlIGNsdXN0ZXIgZm9yIGFu
b3RoZXIgdXNlLgotCSAqLwotCWlmIChsaWtlbHkoIWlzX3JvbGxiYWNrKSkKLQkJZG93bl93cml0
ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0KLQl0b3RhbF9mcmVlZCA9IHJlYWxfZnJlZWQgPSAwOwot
Ci0JcmwgPSBudGZzX2F0dHJfZmluZF92Y25fbm9sb2NrKG5pLCBzdGFydF92Y24sIGN0eCk7Ci0J
aWYgKElTX0VSUihybCkpIHsKLQkJaWYgKCFpc19yb2xsYmFjaykKLQkJCW50ZnNfZXJyb3Iodm9s
LT5zYiwgIkZhaWxlZCB0byBmaW5kIGZpcnN0IHJ1bmxpc3QgIgotCQkJCQkiZWxlbWVudCAoZXJy
b3IgJWxpKSwgYWJvcnRpbmcuIiwKLQkJCQkJUFRSX0VSUihybCkpOwotCQllcnIgPSBQVFJfRVJS
KHJsKTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQlpZiAodW5saWtlbHkocmwtPmxjbiA8IExDTl9I
T0xFKSkgewotCQlpZiAoIWlzX3JvbGxiYWNrKQotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmly
c3QgcnVubGlzdCBlbGVtZW50IGhhcyAiCi0JCQkJCSJpbnZhbGlkIGxjbiwgYWJvcnRpbmcuIik7
Ci0JCWVyciA9IC1FSU87Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JLyogRmluZCB0aGUgc3RhcnRp
bmcgY2x1c3RlciBpbnNpZGUgdGhlIHJ1biB0aGF0IG5lZWRzIGZyZWVpbmcuICovCi0JZGVsdGEg
PSBzdGFydF92Y24gLSBybC0+dmNuOwotCi0JLyogVGhlIG51bWJlciBvZiBjbHVzdGVycyBpbiB0
aGlzIHJ1biB0aGF0IG5lZWQgZnJlZWluZy4gKi8KLQl0b19mcmVlID0gcmwtPmxlbmd0aCAtIGRl
bHRhOwotCWlmIChjb3VudCA+PSAwICYmIHRvX2ZyZWUgPiBjb3VudCkKLQkJdG9fZnJlZSA9IGNv
dW50OwotCi0JaWYgKGxpa2VseShybC0+bGNuID49IDApKSB7Ci0JCS8qIERvIHRoZSBhY3R1YWwg
ZnJlZWluZyBvZiB0aGUgY2x1c3RlcnMgaW4gdGhpcyBydW4uICovCi0JCWVyciA9IG50ZnNfYml0
bWFwX3NldF9iaXRzX2luX3J1bihsY25ibXBfdmksIHJsLT5sY24gKyBkZWx0YSwKLQkJCQl0b19m
cmVlLCBsaWtlbHkoIWlzX3JvbGxiYWNrKSA/IDAgOiAxKTsKLQkJaWYgKHVubGlrZWx5KGVycikp
IHsKLQkJCWlmICghaXNfcm9sbGJhY2spCi0JCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVk
IHRvIGNsZWFyIGZpcnN0IHJ1biAiCi0JCQkJCQkiKGVycm9yICVpKSwgYWJvcnRpbmcuIiwgZXJy
KTsKLQkJCWdvdG8gZXJyX291dDsKLQkJfQotCQkvKiBXZSBoYXZlIGZyZWVkIEB0b19mcmVlIHJl
YWwgY2x1c3RlcnMuICovCi0JCXJlYWxfZnJlZWQgPSB0b19mcmVlOwotCX07Ci0JLyogR28gdG8g
dGhlIG5leHQgcnVuIGFuZCBhZGp1c3QgdGhlIG51bWJlciBvZiBjbHVzdGVycyBsZWZ0IHRvIGZy
ZWUuICovCi0JKytybDsKLQlpZiAoY291bnQgPj0gMCkKLQkJY291bnQgLT0gdG9fZnJlZTsKLQot
CS8qIEtlZXAgdHJhY2sgb2YgdGhlIHRvdGFsICJmcmVlZCIgY2x1c3RlcnMsIGluY2x1ZGluZyBz
cGFyc2Ugb25lcy4gKi8KLQl0b3RhbF9mcmVlZCA9IHRvX2ZyZWU7Ci0JLyoKLQkgKiBMb29wIG92
ZXIgdGhlIHJlbWFpbmluZyBydW5zLCB1c2luZyBAY291bnQgYXMgYSBjYXBwaW5nIHZhbHVlLCBh
bmQKLQkgKiBmcmVlIHRoZW0uCi0JICovCi0JZm9yICg7IHJsLT5sZW5ndGggJiYgY291bnQgIT0g
MDsgKytybCkgewotCQlpZiAodW5saWtlbHkocmwtPmxjbiA8IExDTl9IT0xFKSkgewotCQkJVkNO
IHZjbjsKLQotCQkJLyogQXR0ZW1wdCB0byBtYXAgcnVubGlzdC4gKi8KLQkJCXZjbiA9IHJsLT52
Y247Ci0JCQlybCA9IG50ZnNfYXR0cl9maW5kX3Zjbl9ub2xvY2sobmksIHZjbiwgY3R4KTsKLQkJ
CWlmIChJU19FUlIocmwpKSB7Ci0JCQkJZXJyID0gUFRSX0VSUihybCk7Ci0JCQkJaWYgKCFpc19y
b2xsYmFjaykKLQkJCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIG1hcCAiCi0JCQkJ
CQkJInJ1bmxpc3QgZnJhZ21lbnQgb3IgIgotCQkJCQkJCSJmYWlsZWQgdG8gZmluZCAiCi0JCQkJ
CQkJInN1YnNlcXVlbnQgcnVubGlzdCAiCi0JCQkJCQkJImVsZW1lbnQuIik7Ci0JCQkJZ290byBl
cnJfb3V0OwotCQkJfQotCQkJaWYgKHVubGlrZWx5KHJsLT5sY24gPCBMQ05fSE9MRSkpIHsKLQkJ
CQlpZiAoIWlzX3JvbGxiYWNrKQotCQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJSdW5saXN0IGVs
ZW1lbnQgIgotCQkJCQkJCSJoYXMgaW52YWxpZCBsY24gIgotCQkJCQkJCSIoMHglbGx4KS4iLAot
CQkJCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpCi0JCQkJCQkJcmwtPmxjbik7Ci0JCQkJZXJyID0g
LUVJTzsKLQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCX0KLQkJLyogVGhlIG51bWJlciBvZiBj
bHVzdGVycyBpbiB0aGlzIHJ1biB0aGF0IG5lZWQgZnJlZWluZy4gKi8KLQkJdG9fZnJlZSA9IHJs
LT5sZW5ndGg7Ci0JCWlmIChjb3VudCA+PSAwICYmIHRvX2ZyZWUgPiBjb3VudCkKLQkJCXRvX2Zy
ZWUgPSBjb3VudDsKLQotCQlpZiAobGlrZWx5KHJsLT5sY24gPj0gMCkpIHsKLQkJCS8qIERvIHRo
ZSBhY3R1YWwgZnJlZWluZyBvZiB0aGUgY2x1c3RlcnMgaW4gdGhlIHJ1bi4gKi8KLQkJCWVyciA9
IG50ZnNfYml0bWFwX3NldF9iaXRzX2luX3J1bihsY25ibXBfdmksIHJsLT5sY24sCi0JCQkJCXRv
X2ZyZWUsIGxpa2VseSghaXNfcm9sbGJhY2spID8gMCA6IDEpOwotCQkJaWYgKHVubGlrZWx5KGVy
cikpIHsKLQkJCQlpZiAoIWlzX3JvbGxiYWNrKQotCQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJG
YWlsZWQgdG8gY2xlYXIgIgotCQkJCQkJCSJzdWJzZXF1ZW50IHJ1bi4iKTsKLQkJCQlnb3RvIGVy
cl9vdXQ7Ci0JCQl9Ci0JCQkvKiBXZSBoYXZlIGZyZWVkIEB0b19mcmVlIHJlYWwgY2x1c3RlcnMu
ICovCi0JCQlyZWFsX2ZyZWVkICs9IHRvX2ZyZWU7Ci0JCX0KLQkJLyogQWRqdXN0IHRoZSBudW1i
ZXIgb2YgY2x1c3RlcnMgbGVmdCB0byBmcmVlLiAqLwotCQlpZiAoY291bnQgPj0gMCkKLQkJCWNv
dW50IC09IHRvX2ZyZWU7Ci0JCi0JCS8qIFVwZGF0ZSB0aGUgdG90YWwgZG9uZSBjbHVzdGVycy4g
Ki8KLQkJdG90YWxfZnJlZWQgKz0gdG9fZnJlZTsKLQl9Ci0JaWYgKGxpa2VseSghaXNfcm9sbGJh
Y2spKQotCQl1cF93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0KLQlCVUdfT04oY291bnQgPiAw
KTsKLQotCS8qIFdlIGFyZSBkb25lLiAgUmV0dXJuIHRoZSBudW1iZXIgb2YgYWN0dWFsbHkgZnJl
ZWQgY2x1c3RlcnMuICovCi0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gcmVhbF9mcmVl
ZDsKLWVycl9vdXQ6Ci0JaWYgKGlzX3JvbGxiYWNrKQotCQlyZXR1cm4gZXJyOwotCS8qIElmIG5v
IHJlYWwgY2x1c3RlcnMgd2VyZSBmcmVlZCwgbm8gbmVlZCB0byByb2xsYmFjay4gKi8KLQlpZiAo
IXJlYWxfZnJlZWQpIHsKLQkJdXBfd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2spOwotCQlyZXR1cm4g
ZXJyOwotCX0KLQkvKgotCSAqIEF0dGVtcHQgdG8gcm9sbGJhY2sgYW5kIGlmIHRoYXQgc3VjY2Vl
ZHMganVzdCByZXR1cm4gdGhlIGVycm9yIGNvZGUuCi0JICogSWYgcm9sbGJhY2sgZmFpbHMsIHNl
dCB0aGUgdm9sdW1lIGVycm9ycyBmbGFnLCBlbWl0IGFuIGVycm9yCi0JICogbWVzc2FnZSwgYW5k
IHJldHVybiB0aGUgZXJyb3IgY29kZS4KLQkgKi8KLQlkZWx0YSA9IF9fbnRmc19jbHVzdGVyX2Zy
ZWUobmksIHN0YXJ0X3ZjbiwgdG90YWxfZnJlZWQsIGN0eCwgdHJ1ZSk7Ci0JaWYgKGRlbHRhIDwg
MCkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gcm9sbGJhY2sgKGVycm9yICVp
KS4gIExlYXZpbmcgIgotCQkJCSJpbmNvbnNpc3RlbnQgbWV0YWRhdGEhICBVbm1vdW50IGFuZCBy
dW4gIgotCQkJCSJjaGtkc2suIiwgKGludClkZWx0YSk7Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsK
LQl9Ci0JdXBfd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2spOwotCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkFib3J0aW5nIChlcnJvciAlaSkuIiwgZXJyKTsKLQlyZXR1cm4gZXJyOwotfQotCi0jZW5kaWYg
LyogTlRGU19SVyAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9sY25hbGxvYy5oIGIvZnMvbnRmcy9s
Y25hbGxvYy5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAxNTg5YTZkODQzNGIuLjAw
MDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL2xjbmFsbG9jLmgKKysrIC9kZXYvbnVsbApAQCAtMSwx
MzEgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIg
Ki8KLS8qCi0gKiBsY25hbGxvYy5oIC0gRXhwb3J0cyBmb3IgTlRGUyBrZXJuZWwgY2x1c3RlciAo
ZGUpYWxsb2NhdGlvbi4gIFBhcnQgb2YgdGhlCi0gKgkJTGludXgtTlRGUyBwcm9qZWN0LgotICoK
LSAqIENvcHlyaWdodCAoYykgMjAwNC0yMDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNp
Zm5kZWYgX0xJTlVYX05URlNfTENOQUxMT0NfSAotI2RlZmluZSBfTElOVVhfTlRGU19MQ05BTExP
Q19ICi0KLSNpZmRlZiBOVEZTX1JXCi0KLSNpbmNsdWRlIDxsaW51eC9mcy5oPgotCi0jaW5jbHVk
ZSAiYXR0cmliLmgiCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJpbm9kZS5oIgotI2lu
Y2x1ZGUgInJ1bmxpc3QuaCIKLSNpbmNsdWRlICJ2b2x1bWUuaCIKLQotdHlwZWRlZiBlbnVtIHsK
LQlGSVJTVF9aT05FCT0gMCwJLyogRm9yIHNhbml0eSBjaGVja2luZy4gKi8KLQlNRlRfWk9ORQk9
IDAsCS8qIEFsbG9jYXRlIGZyb20gJE1GVCB6b25lLiAqLwotCURBVEFfWk9ORQk9IDEsCS8qIEFs
bG9jYXRlIGZyb20gJERBVEEgem9uZS4gKi8KLQlMQVNUX1pPTkUJPSAxLAkvKiBGb3Igc2FuaXR5
IGNoZWNraW5nLiAqLwotfSBOVEZTX0NMVVNURVJfQUxMT0NBVElPTl9aT05FUzsKLQotZXh0ZXJu
IHJ1bmxpc3RfZWxlbWVudCAqbnRmc19jbHVzdGVyX2FsbG9jKG50ZnNfdm9sdW1lICp2b2wsCi0J
CWNvbnN0IFZDTiBzdGFydF92Y24sIGNvbnN0IHM2NCBjb3VudCwgY29uc3QgTENOIHN0YXJ0X2xj
biwKLQkJY29uc3QgTlRGU19DTFVTVEVSX0FMTE9DQVRJT05fWk9ORVMgem9uZSwKLQkJY29uc3Qg
Ym9vbCBpc19leHRlbnNpb24pOwotCi1leHRlcm4gczY0IF9fbnRmc19jbHVzdGVyX2ZyZWUobnRm
c19pbm9kZSAqbmksIGNvbnN0IFZDTiBzdGFydF92Y24sCi0JCXM2NCBjb3VudCwgbnRmc19hdHRy
X3NlYXJjaF9jdHggKmN0eCwgY29uc3QgYm9vbCBpc19yb2xsYmFjayk7Ci0KLS8qKgotICogbnRm
c19jbHVzdGVyX2ZyZWUgLSBmcmVlIGNsdXN0ZXJzIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAbmk6
CQludGZzIGlub2RlIHdob3NlIHJ1bmxpc3QgZGVzY3JpYmVzIHRoZSBjbHVzdGVycyB0byBmcmVl
Ci0gKiBAc3RhcnRfdmNuOgl2Y24gaW4gdGhlIHJ1bmxpc3Qgb2YgQG5pIGF0IHdoaWNoIHRvIHN0
YXJ0IGZyZWVpbmcgY2x1c3RlcnMKLSAqIEBjb3VudDoJbnVtYmVyIG9mIGNsdXN0ZXJzIHRvIGZy
ZWUgb3IgLTEgZm9yIGFsbCBjbHVzdGVycwotICogQGN0eDoJYWN0aXZlIGF0dHJpYnV0ZSBzZWFy
Y2ggY29udGV4dCBpZiBwcmVzZW50IG9yIE5VTEwgaWYgbm90Ci0gKgotICogRnJlZSBAY291bnQg
Y2x1c3RlcnMgc3RhcnRpbmcgYXQgdGhlIGNsdXN0ZXIgQHN0YXJ0X3ZjbiBpbiB0aGUgcnVubGlz
dAotICogZGVzY3JpYmVkIGJ5IHRoZSBudGZzIGlub2RlIEBuaS4KLSAqCi0gKiBJZiBAY291bnQg
aXMgLTEsIGFsbCBjbHVzdGVycyBmcm9tIEBzdGFydF92Y24gdG8gdGhlIGVuZCBvZiB0aGUgcnVu
bGlzdCBhcmUKLSAqIGRlYWxsb2NhdGVkLiAgVGh1cywgdG8gY29tcGxldGVseSBmcmVlIGFsbCBj
bHVzdGVycyBpbiBhIHJ1bmxpc3QsIHVzZQotICogQHN0YXJ0X3ZjbiA9IDAgYW5kIEBjb3VudCA9
IC0xLgotICoKLSAqIElmIEBjdHggaXMgc3BlY2lmaWVkLCBpdCBpcyBhbiBhY3RpdmUgc2VhcmNo
IGNvbnRleHQgb2YgQG5pIGFuZCBpdHMgYmFzZSBtZnQKLSAqIHJlY29yZC4gIFRoaXMgaXMgbmVl
ZGVkIHdoZW4gbnRmc19jbHVzdGVyX2ZyZWUoKSBlbmNvdW50ZXJzIHVubWFwcGVkIHJ1bmxpc3QK
LSAqIGZyYWdtZW50cyBhbmQgYWxsb3dzIHRoZWlyIG1hcHBpbmcuICBJZiB5b3UgZG8gbm90IGhh
dmUgdGhlIG1mdCByZWNvcmQKLSAqIG1hcHBlZCwgeW91IGNhbiBzcGVjaWZ5IEBjdHggYXMgTlVM
TCBhbmQgbnRmc19jbHVzdGVyX2ZyZWUoKSB3aWxsIHBlcmZvcm0KLSAqIHRoZSBuZWNlc3Nhcnkg
bWFwcGluZyBhbmQgdW5tYXBwaW5nLgotICoKLSAqIE5vdGUsIG50ZnNfY2x1c3Rlcl9mcmVlKCkg
c2F2ZXMgdGhlIHN0YXRlIG9mIEBjdHggb24gZW50cnkgYW5kIHJlc3RvcmVzIGl0Ci0gKiBiZWZv
cmUgcmV0dXJuaW5nLiAgVGh1cywgQGN0eCB3aWxsIGJlIGxlZnQgcG9pbnRpbmcgdG8gdGhlIHNh
bWUgYXR0cmlidXRlIG9uCi0gKiByZXR1cm4gYXMgb24gZW50cnkuICBIb3dldmVyLCB0aGUgYWN0
dWFsIHBvaW50ZXJzIGluIEBjdHggbWF5IHBvaW50IHRvCi0gKiBkaWZmZXJlbnQgbWVtb3J5IGxv
Y2F0aW9ucyBvbiByZXR1cm4sIHNvIHlvdSBtdXN0IHJlbWVtYmVyIHRvIHJlc2V0IGFueQotICog
Y2FjaGVkIHBvaW50ZXJzIGZyb20gdGhlIEBjdHgsIGkuZS4gYWZ0ZXIgdGhlIGNhbGwgdG8gbnRm
c19jbHVzdGVyX2ZyZWUoKSwKLSAqIHlvdSB3aWxsIHByb2JhYmx5IHdhbnQgdG8gZG86Ci0gKglt
ID0gY3R4LT5tcmVjOwotICoJYSA9IGN0eC0+YXR0cjsKLSAqIEFzc3VtaW5nIHlvdSBjYWNoZSBj
dHgtPmF0dHIgaW4gYSB2YXJpYWJsZSBAYSBvZiB0eXBlIEFUVFJfUkVDT1JEICogYW5kIHRoYXQK
LSAqIHlvdSBjYWNoZSBjdHgtPm1yZWMgaW4gYSB2YXJpYWJsZSBAbSBvZiB0eXBlIE1GVF9SRUNP
UkQgKi4KLSAqCi0gKiBOb3RlLCBudGZzX2NsdXN0ZXJfZnJlZSgpIGRvZXMgbm90IG1vZGlmeSB0
aGUgcnVubGlzdCwgc28geW91IGhhdmUgdG8gcmVtb3ZlCi0gKiBmcm9tIHRoZSBydW5saXN0IG9y
IG1hcmsgc3BhcnNlIHRoZSBmcmVlZCBydW5zIGxhdGVyLgotICoKLSAqIFJldHVybiB0aGUgbnVt
YmVyIG9mIGRlYWxsb2NhdGVkIGNsdXN0ZXJzIChub3QgY291bnRpbmcgc3BhcnNlIG9uZXMpIG9u
Ci0gKiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3IuCi0gKgotICogV0FSTklORzogSWYgQGN0
eCBpcyBzdXBwbGllZCwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBp
cwotICoJICAgIHJldHVybmVkLCB5b3UgbmVlZCB0byBjaGVjayBJU19FUlIoQGN0eC0+bXJlYykg
YW5kIGlmICd0cnVlJyB0aGUgQGN0eAotICoJICAgIGlzIG5vIGxvbmdlciB2YWxpZCwgaS5lLiB5
b3UgbmVlZCB0byBlaXRoZXIgY2FsbAotICoJICAgIG50ZnNfYXR0cl9yZWluaXRfc2VhcmNoX2N0
eCgpIG9yIG50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eCgpIG9uIGl0LgotICoJICAgIEluIHRoYXQg
Y2FzZSBQVFJfRVJSKEBjdHgtPm1yZWMpIHdpbGwgZ2l2ZSB5b3UgdGhlIGVycm9yIGNvZGUgZm9y
Ci0gKgkgICAgd2h5IHRoZSBtYXBwaW5nIG9mIHRoZSBvbGQgaW5vZGUgZmFpbGVkLgotICoKLSAq
IExvY2tpbmc6IC0gVGhlIHJ1bmxpc3QgZGVzY3JpYmVkIGJ5IEBuaSBtdXN0IGJlIGxvY2tlZCBm
b3Igd3JpdGluZyBvbiBlbnRyeQotICoJICAgICAgYW5kIGlzIGxvY2tlZCBvbiByZXR1cm4uICBO
b3RlIHRoZSBydW5saXN0IG1heSBiZSBtb2RpZmllZCB3aGVuCi0gKgkgICAgICBuZWVkZWQgcnVu
bGlzdCBmcmFnbWVudHMgbmVlZCB0byBiZSBtYXBwZWQuCi0gKgkgICAgLSBUaGUgdm9sdW1lIGxj
biBiaXRtYXAgbXVzdCBiZSB1bmxvY2tlZCBvbiBlbnRyeSBhbmQgaXMgdW5sb2NrZWQKLSAqCSAg
ICAgIG9uIHJldHVybi4KLSAqCSAgICAtIFRoaXMgZnVuY3Rpb24gdGFrZXMgdGhlIHZvbHVtZSBs
Y24gYml0bWFwIGxvY2sgZm9yIHdyaXRpbmcgYW5kCi0gKgkgICAgICBtb2RpZmllcyB0aGUgYml0
bWFwIGNvbnRlbnRzLgotICoJICAgIC0gSWYgQGN0eCBpcyBOVUxMLCB0aGUgYmFzZSBtZnQgcmVj
b3JkIG9mIEBuaSBtdXN0IG5vdCBiZSBtYXBwZWQgb24KLSAqCSAgICAgIGVudHJ5IGFuZCBpdCB3
aWxsIGJlIGxlZnQgdW5tYXBwZWQgb24gcmV0dXJuLgotICoJICAgIC0gSWYgQGN0eCBpcyBub3Qg
TlVMTCwgdGhlIGJhc2UgbWZ0IHJlY29yZCBtdXN0IGJlIG1hcHBlZCBvbiBlbnRyeQotICoJICAg
ICAgYW5kIGl0IHdpbGwgYmUgbGVmdCBtYXBwZWQgb24gcmV0dXJuLgotICovCi1zdGF0aWMgaW5s
aW5lIHM2NCBudGZzX2NsdXN0ZXJfZnJlZShudGZzX2lub2RlICpuaSwgY29uc3QgVkNOIHN0YXJ0
X3ZjbiwKLQkJczY0IGNvdW50LCBudGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4KQotewotCXJldHVy
biBfX250ZnNfY2x1c3Rlcl9mcmVlKG5pLCBzdGFydF92Y24sIGNvdW50LCBjdHgsIGZhbHNlKTsK
LX0KLQotZXh0ZXJuIGludCBudGZzX2NsdXN0ZXJfZnJlZV9mcm9tX3JsX25vbG9jayhudGZzX3Zv
bHVtZSAqdm9sLAotCQljb25zdCBydW5saXN0X2VsZW1lbnQgKnJsKTsKLQotLyoqCi0gKiBudGZz
X2NsdXN0ZXJfZnJlZV9mcm9tX3JsIC0gZnJlZSBjbHVzdGVycyBmcm9tIHJ1bmxpc3QKLSAqIEB2
b2w6CW1vdW50ZWQgbnRmcyB2b2x1bWUgb24gd2hpY2ggdG8gZnJlZSB0aGUgY2x1c3RlcnMKLSAq
IEBybDoJCXJ1bmxpc3QgZGVzY3JpYmluZyB0aGUgY2x1c3RlcnMgdG8gZnJlZQotICoKLSAqIEZy
ZWUgYWxsIHRoZSBjbHVzdGVycyBkZXNjcmliZWQgYnkgdGhlIHJ1bmxpc3QgQHJsIG9uIHRoZSB2
b2x1bWUgQHZvbC4gIEluCi0gKiB0aGUgY2FzZSBvZiBhbiBlcnJvciBiZWluZyByZXR1cm5lZCwg
YXQgbGVhc3Qgc29tZSBvZiB0aGUgY2x1c3RlcnMgd2VyZSBub3QKLSAqIGZyZWVkLgotICoKLSAq
IFJldHVybiAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqCi0gKiBMb2NraW5n
OiAtIFRoaXMgZnVuY3Rpb24gdGFrZXMgdGhlIHZvbHVtZSBsY24gYml0bWFwIGxvY2sgZm9yIHdy
aXRpbmcgYW5kCi0gKgkgICAgICBtb2RpZmllcyB0aGUgYml0bWFwIGNvbnRlbnRzLgotICoJICAg
IC0gVGhlIGNhbGxlciBtdXN0IGhhdmUgbG9ja2VkIHRoZSBydW5saXN0IEBybCBmb3IgcmVhZGlu
ZyBvcgotICoJICAgICAgd3JpdGluZy4KLSAqLwotc3RhdGljIGlubGluZSBpbnQgbnRmc19jbHVz
dGVyX2ZyZWVfZnJvbV9ybChudGZzX3ZvbHVtZSAqdm9sLAotCQljb25zdCBydW5saXN0X2VsZW1l
bnQgKnJsKQotewotCWludCByZXQ7Ci0KLQlkb3duX3dyaXRlKCZ2b2wtPmxjbmJtcF9sb2NrKTsK
LQlyZXQgPSBudGZzX2NsdXN0ZXJfZnJlZV9mcm9tX3JsX25vbG9jayh2b2wsIHJsKTsKLQl1cF93
cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0JcmV0dXJuIHJldDsKLX0KLQotI2VuZGlmIC8qIE5U
RlNfUlcgKi8KLQotI2VuZGlmIC8qIGRlZmluZWQgX0xJTlVYX05URlNfTENOQUxMT0NfSCAqLwpk
aWZmIC0tZ2l0IGEvZnMvbnRmcy9sb2dmaWxlLmMgYi9mcy9udGZzL2xvZ2ZpbGUuYwpkZWxldGVk
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNmNlNjBmZmM2YWMwLi4wMDAwMDAwMDAwMDAKLS0tIGEv
ZnMvbnRmcy9sb2dmaWxlLmMKKysrIC9kZXYvbnVsbApAQCAtMSw4NDkgKzAsMCBAQAotLy8gU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBsb2dmaWxlLmMg
LSBOVEZTIGtlcm5lbCBqb3VybmFsIGhhbmRsaW5nLiBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTIHBy
b2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDAyLTIwMDcgQW50b24gQWx0YXBhcm1ha292
Ci0gKi8KLQotI2lmZGVmIE5URlNfUlcKLQotI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+Ci0jaW5j
bHVkZSA8bGludXgvZnMuaD4KLSNpbmNsdWRlIDxsaW51eC9oaWdobWVtLmg+Ci0jaW5jbHVkZSA8
bGludXgvYnVmZmVyX2hlYWQuaD4KLSNpbmNsdWRlIDxsaW51eC9iaXRvcHMuaD4KLSNpbmNsdWRl
IDxsaW51eC9sb2cyLmg+Ci0jaW5jbHVkZSA8bGludXgvYmlvLmg+Ci0KLSNpbmNsdWRlICJhdHRy
aWIuaCIKLSNpbmNsdWRlICJhb3BzLmgiCi0jaW5jbHVkZSAiZGVidWcuaCIKLSNpbmNsdWRlICJs
b2dmaWxlLmgiCi0jaW5jbHVkZSAibWFsbG9jLmgiCi0jaW5jbHVkZSAidm9sdW1lLmgiCi0jaW5j
bHVkZSAibnRmcy5oIgotCi0vKioKLSAqIG50ZnNfY2hlY2tfcmVzdGFydF9wYWdlX2hlYWRlciAt
IGNoZWNrIHRoZSBwYWdlIGhlYWRlciBmb3IgY29uc2lzdGVuY3kKLSAqIEB2aToJCSRMb2dGaWxl
IGlub2RlIHRvIHdoaWNoIHRoZSByZXN0YXJ0IHBhZ2UgaGVhZGVyIGJlbG9uZ3MKLSAqIEBycDoJ
CXJlc3RhcnQgcGFnZSBoZWFkZXIgdG8gY2hlY2sKLSAqIEBwb3M6CXBvc2l0aW9uIGluIEB2aSBh
dCB3aGljaCB0aGUgcmVzdGFydCBwYWdlIGhlYWRlciByZXNpZGVzCi0gKgotICogQ2hlY2sgdGhl
IHJlc3RhcnQgcGFnZSBoZWFkZXIgQHJwIGZvciBjb25zaXN0ZW5jeSBhbmQgcmV0dXJuICd0cnVl
JyBpZiBpdCBpcwotICogY29uc2lzdGVudCBhbmQgJ2ZhbHNlJyBvdGhlcndpc2UuCi0gKgotICog
VGhpcyBmdW5jdGlvbiBvbmx5IG5lZWRzIE5URlNfQkxPQ0tfU0laRSBieXRlcyBpbiBAcnAsIGku
ZS4gaXQgZG9lcyBub3QKLSAqIHJlcXVpcmUgdGhlIGZ1bGwgcmVzdGFydCBwYWdlLgotICovCi1z
dGF0aWMgYm9vbCBudGZzX2NoZWNrX3Jlc3RhcnRfcGFnZV9oZWFkZXIoc3RydWN0IGlub2RlICp2
aSwKLQkJUkVTVEFSVF9QQUdFX0hFQURFUiAqcnAsIHM2NCBwb3MpCi17Ci0JdTMyIGxvZ2ZpbGVf
c3lzdGVtX3BhZ2Vfc2l6ZSwgbG9nZmlsZV9sb2dfcGFnZV9zaXplOwotCXUxNiByYV9vZnMsIHVz
YV9jb3VudCwgdXNhX29mcywgdXNhX2VuZCA9IDA7Ci0JYm9vbCBoYXZlX3VzYSA9IHRydWU7Ci0K
LQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQkvKgotCSAqIElmIHRoZSBzeXN0ZW0gb3IgbG9n
IHBhZ2Ugc2l6ZXMgYXJlIHNtYWxsZXIgdGhhbiB0aGUgbnRmcyBibG9jayBzaXplCi0JICogb3Ig
ZWl0aGVyIGlzIG5vdCBhIHBvd2VyIG9mIDIgd2UgY2Fubm90IGhhbmRsZSB0aGlzIGxvZyBmaWxl
LgotCSAqLwotCWxvZ2ZpbGVfc3lzdGVtX3BhZ2Vfc2l6ZSA9IGxlMzJfdG9fY3B1KHJwLT5zeXN0
ZW1fcGFnZV9zaXplKTsKLQlsb2dmaWxlX2xvZ19wYWdlX3NpemUgPSBsZTMyX3RvX2NwdShycC0+
bG9nX3BhZ2Vfc2l6ZSk7Ci0JaWYgKGxvZ2ZpbGVfc3lzdGVtX3BhZ2Vfc2l6ZSA8IE5URlNfQkxP
Q0tfU0laRSB8fAotCQkJbG9nZmlsZV9sb2dfcGFnZV9zaXplIDwgTlRGU19CTE9DS19TSVpFIHx8
Ci0JCQlsb2dmaWxlX3N5c3RlbV9wYWdlX3NpemUgJgotCQkJKGxvZ2ZpbGVfc3lzdGVtX3BhZ2Vf
c2l6ZSAtIDEpIHx8Ci0JCQkhaXNfcG93ZXJfb2ZfMihsb2dmaWxlX2xvZ19wYWdlX3NpemUpKSB7
Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICIkTG9nRmlsZSB1c2VzIHVuc3VwcG9ydGVkIHBhZ2Ug
c2l6ZS4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKgotCSAqIFdlIG11c3QgYmUgZWl0aGVy
IGF0ICFwb3MgKDFzdCByZXN0YXJ0IHBhZ2UpIG9yIGF0IHBvcyA9IHN5c3RlbSBwYWdlCi0JICog
c2l6ZSAoMm5kIHJlc3RhcnQgcGFnZSkuCi0JICovCi0JaWYgKHBvcyAmJiBwb3MgIT0gbG9nZmls
ZV9zeXN0ZW1fcGFnZV9zaXplKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJGb3VuZCByZXN0
YXJ0IGFyZWEgaW4gaW5jb3JyZWN0ICIKLQkJCQkicG9zaXRpb24gaW4gJExvZ0ZpbGUuIik7Ci0J
CXJldHVybiBmYWxzZTsKLQl9Ci0JLyogV2Ugb25seSBrbm93IGhvdyB0byBoYW5kbGUgdmVyc2lv
biAxLjEuICovCi0JaWYgKHNsZTE2X3RvX2NwdShycC0+bWFqb3JfdmVyKSAhPSAxIHx8Ci0JCQlz
bGUxNl90b19jcHUocnAtPm1pbm9yX3ZlcikgIT0gMSkgewotCQludGZzX2Vycm9yKHZpLT5pX3Ni
LCAiJExvZ0ZpbGUgdmVyc2lvbiAlaS4laSBpcyBub3QgIgotCQkJCSJzdXBwb3J0ZWQuICAoVGhp
cyBkcml2ZXIgc3VwcG9ydHMgdmVyc2lvbiAiCi0JCQkJIjEuMSBvbmx5LikiLCAoaW50KXNsZTE2
X3RvX2NwdShycC0+bWFqb3JfdmVyKSwKLQkJCQkoaW50KXNsZTE2X3RvX2NwdShycC0+bWlub3Jf
dmVyKSk7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0JLyoKLQkgKiBJZiBjaGtkc2sgaGFzIGJlZW4g
cnVuIHRoZSByZXN0YXJ0IHBhZ2UgbWF5IG5vdCBiZSBwcm90ZWN0ZWQgYnkgYW4KLQkgKiB1cGRh
dGUgc2VxdWVuY2UgYXJyYXkuCi0JICovCi0JaWYgKG50ZnNfaXNfY2hrZF9yZWNvcmQocnAtPm1h
Z2ljKSAmJiAhbGUxNl90b19jcHUocnAtPnVzYV9jb3VudCkpIHsKLQkJaGF2ZV91c2EgPSBmYWxz
ZTsKLQkJZ290byBza2lwX3VzYV9jaGVja3M7Ci0JfQotCS8qIFZlcmlmeSB0aGUgc2l6ZSBvZiB0
aGUgdXBkYXRlIHNlcXVlbmNlIGFycmF5LiAqLwotCXVzYV9jb3VudCA9IDEgKyAobG9nZmlsZV9z
eXN0ZW1fcGFnZV9zaXplID4+IE5URlNfQkxPQ0tfU0laRV9CSVRTKTsKLQlpZiAodXNhX2NvdW50
ICE9IGxlMTZfdG9fY3B1KHJwLT51c2FfY291bnQpKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2Is
ICIkTG9nRmlsZSByZXN0YXJ0IHBhZ2Ugc3BlY2lmaWVzICIKLQkJCQkiaW5jb25zaXN0ZW50IHVw
ZGF0ZSBzZXF1ZW5jZSBhcnJheSBjb3VudC4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKiBW
ZXJpZnkgdGhlIHBvc2l0aW9uIG9mIHRoZSB1cGRhdGUgc2VxdWVuY2UgYXJyYXkuICovCi0JdXNh
X29mcyA9IGxlMTZfdG9fY3B1KHJwLT51c2Ffb2ZzKTsKLQl1c2FfZW5kID0gdXNhX29mcyArIHVz
YV9jb3VudCAqIHNpemVvZih1MTYpOwotCWlmICh1c2Ffb2ZzIDwgc2l6ZW9mKFJFU1RBUlRfUEFH
RV9IRUFERVIpIHx8Ci0JCQl1c2FfZW5kID4gTlRGU19CTE9DS19TSVpFIC0gc2l6ZW9mKHUxNikp
IHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIHJlc3RhcnQgcGFnZSBzcGVjaWZp
ZXMgIgotCQkJCSJpbmNvbnNpc3RlbnQgdXBkYXRlIHNlcXVlbmNlIGFycmF5IG9mZnNldC4iKTsK
LQkJcmV0dXJuIGZhbHNlOwotCX0KLXNraXBfdXNhX2NoZWNrczoKLQkvKgotCSAqIFZlcmlmeSB0
aGUgcG9zaXRpb24gb2YgdGhlIHJlc3RhcnQgYXJlYS4gIEl0IG11c3QgYmU6Ci0JICoJLSBhbGln
bmVkIHRvIDgtYnl0ZSBib3VuZGFyeSwKLQkgKgktIGFmdGVyIHRoZSB1cGRhdGUgc2VxdWVuY2Ug
YXJyYXksIGFuZAotCSAqCS0gd2l0aGluIHRoZSBzeXN0ZW0gcGFnZSBzaXplLgotCSAqLwotCXJh
X29mcyA9IGxlMTZfdG9fY3B1KHJwLT5yZXN0YXJ0X2FyZWFfb2Zmc2V0KTsKLQlpZiAocmFfb2Zz
ICYgNyB8fCAoaGF2ZV91c2EgPyByYV9vZnMgPCB1c2FfZW5kIDoKLQkJCXJhX29mcyA8IHNpemVv
ZihSRVNUQVJUX1BBR0VfSEVBREVSKSkgfHwKLQkJCXJhX29mcyA+IGxvZ2ZpbGVfc3lzdGVtX3Bh
Z2Vfc2l6ZSkgewotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiJExvZ0ZpbGUgcmVzdGFydCBwYWdl
IHNwZWNpZmllcyAiCi0JCQkJImluY29uc2lzdGVudCByZXN0YXJ0IGFyZWEgb2Zmc2V0LiIpOwot
CQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qCi0JICogT25seSByZXN0YXJ0IHBhZ2VzIG1vZGlmaWVk
IGJ5IGNoa2RzayBhcmUgYWxsb3dlZCB0byBoYXZlIGNoa2Rza19sc24KLQkgKiBzZXQuCi0JICov
Ci0JaWYgKCFudGZzX2lzX2Noa2RfcmVjb3JkKHJwLT5tYWdpYykgJiYgc2xlNjRfdG9fY3B1KHJw
LT5jaGtkc2tfbHNuKSkgewotCQludGZzX2Vycm9yKHZpLT5pX3NiLCAiJExvZ0ZpbGUgcmVzdGFy
dCBwYWdlIGlzIG5vdCBtb2RpZmllZCAiCi0JCQkJImJ5IGNoa2RzayBidXQgYSBjaGtkc2sgTFNO
IGlzIHNwZWNpZmllZC4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQludGZzX2RlYnVnKCJEb25l
LiIpOwotCXJldHVybiB0cnVlOwotfQotCi0vKioKLSAqIG50ZnNfY2hlY2tfcmVzdGFydF9hcmVh
IC0gY2hlY2sgdGhlIHJlc3RhcnQgYXJlYSBmb3IgY29uc2lzdGVuY3kKLSAqIEB2aToJCSRMb2dG
aWxlIGlub2RlIHRvIHdoaWNoIHRoZSByZXN0YXJ0IHBhZ2UgYmVsb25ncwotICogQHJwOgkJcmVz
dGFydCBwYWdlIHdob3NlIHJlc3RhcnQgYXJlYSB0byBjaGVjawotICoKLSAqIENoZWNrIHRoZSBy
ZXN0YXJ0IGFyZWEgb2YgdGhlIHJlc3RhcnQgcGFnZSBAcnAgZm9yIGNvbnNpc3RlbmN5IGFuZCBy
ZXR1cm4KLSAqICd0cnVlJyBpZiBpdCBpcyBjb25zaXN0ZW50IGFuZCAnZmFsc2UnIG90aGVyd2lz
ZS4KLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgcmVzdGFydCBwYWdlIGhl
YWRlciBoYXMgYWxyZWFkeSBiZWVuCi0gKiBjb25zaXN0ZW5jeSBjaGVja2VkLgotICoKLSAqIFRo
aXMgZnVuY3Rpb24gb25seSBuZWVkcyBOVEZTX0JMT0NLX1NJWkUgYnl0ZXMgaW4gQHJwLCBpLmUu
IGl0IGRvZXMgbm90Ci0gKiByZXF1aXJlIHRoZSBmdWxsIHJlc3RhcnQgcGFnZS4KLSAqLwotc3Rh
dGljIGJvb2wgbnRmc19jaGVja19yZXN0YXJ0X2FyZWEoc3RydWN0IGlub2RlICp2aSwgUkVTVEFS
VF9QQUdFX0hFQURFUiAqcnApCi17Ci0JdTY0IGZpbGVfc2l6ZTsKLQlSRVNUQVJUX0FSRUEgKnJh
OwotCXUxNiByYV9vZnMsIHJhX2xlbiwgY2Ffb2ZzOwotCXU4IGZzX2JpdHM7Ci0KLQludGZzX2Rl
YnVnKCJFbnRlcmluZy4iKTsKLQlyYV9vZnMgPSBsZTE2X3RvX2NwdShycC0+cmVzdGFydF9hcmVh
X29mZnNldCk7Ci0JcmEgPSAoUkVTVEFSVF9BUkVBKikoKHU4KilycCArIHJhX29mcyk7Ci0JLyoK
LQkgKiBFdmVyeXRoaW5nIGJlZm9yZSByYS0+ZmlsZV9zaXplIG11c3QgYmUgYmVmb3JlIHRoZSBm
aXJzdCB3b3JkCi0JICogcHJvdGVjdGVkIGJ5IGFuIHVwZGF0ZSBzZXF1ZW5jZSBudW1iZXIuICBU
aGlzIGVuc3VyZXMgdGhhdCBpdCBpcwotCSAqIHNhZmUgdG8gYWNjZXNzIHJhLT5jbGllbnRfYXJy
YXlfb2Zmc2V0LgotCSAqLwotCWlmIChyYV9vZnMgKyBvZmZzZXRvZihSRVNUQVJUX0FSRUEsIGZp
bGVfc2l6ZSkgPgotCQkJTlRGU19CTE9DS19TSVpFIC0gc2l6ZW9mKHUxNikpIHsKLQkJbnRmc19l
cnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIHJlc3RhcnQgYXJlYSBzcGVjaWZpZXMgIgotCQkJCSJp
bmNvbnNpc3RlbnQgZmlsZSBvZmZzZXQuIik7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0JLyoKLQkg
KiBOb3cgdGhhdCB3ZSBjYW4gYWNjZXNzIHJhLT5jbGllbnRfYXJyYXlfb2Zmc2V0LCBtYWtlIHN1
cmUgZXZlcnl0aGluZwotCSAqIHVwIHRvIHRoZSBsb2cgY2xpZW50IGFycmF5IGlzIGJlZm9yZSB0
aGUgZmlyc3Qgd29yZCBwcm90ZWN0ZWQgYnkgYW4KLQkgKiB1cGRhdGUgc2VxdWVuY2UgbnVtYmVy
LiAgVGhpcyBlbnN1cmVzIHdlIGNhbiBhY2Nlc3MgYWxsIG9mIHRoZQotCSAqIHJlc3RhcnQgYXJl
YSBlbGVtZW50cyBzYWZlbHkuICBBbHNvLCB0aGUgY2xpZW50IGFycmF5IG9mZnNldCBtdXN0IGJl
Ci0JICogYWxpZ25lZCB0byBhbiA4LWJ5dGUgYm91bmRhcnkuCi0JICovCi0JY2Ffb2ZzID0gbGUx
Nl90b19jcHUocmEtPmNsaWVudF9hcnJheV9vZmZzZXQpOwotCWlmICgoKGNhX29mcyArIDcpICYg
fjcpICE9IGNhX29mcyB8fAotCQkJcmFfb2ZzICsgY2Ffb2ZzID4gTlRGU19CTE9DS19TSVpFIC0g
c2l6ZW9mKHUxNikpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIHJlc3RhcnQg
YXJlYSBzcGVjaWZpZXMgIgotCQkJCSJpbmNvbnNpc3RlbnQgY2xpZW50IGFycmF5IG9mZnNldC4i
KTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKgotCSAqIFRoZSByZXN0YXJ0IGFyZWEgbXVzdCBl
bmQgd2l0aGluIHRoZSBzeXN0ZW0gcGFnZSBzaXplIGJvdGggd2hlbgotCSAqIGNhbGN1bGF0ZWQg
bWFudWFsbHkgYW5kIGFzIHNwZWNpZmllZCBieSByYS0+cmVzdGFydF9hcmVhX2xlbmd0aC4KLQkg
KiBBbHNvLCB0aGUgY2FsY3VsYXRlZCBsZW5ndGggbXVzdCBub3QgZXhjZWVkIHRoZSBzcGVjaWZp
ZWQgbGVuZ3RoLgotCSAqLwotCXJhX2xlbiA9IGNhX29mcyArIGxlMTZfdG9fY3B1KHJhLT5sb2df
Y2xpZW50cykgKgotCQkJc2l6ZW9mKExPR19DTElFTlRfUkVDT1JEKTsKLQlpZiAocmFfb2ZzICsg
cmFfbGVuID4gbGUzMl90b19jcHUocnAtPnN5c3RlbV9wYWdlX3NpemUpIHx8Ci0JCQlyYV9vZnMg
KyBsZTE2X3RvX2NwdShyYS0+cmVzdGFydF9hcmVhX2xlbmd0aCkgPgotCQkJbGUzMl90b19jcHUo
cnAtPnN5c3RlbV9wYWdlX3NpemUpIHx8Ci0JCQlyYV9sZW4gPiBsZTE2X3RvX2NwdShyYS0+cmVz
dGFydF9hcmVhX2xlbmd0aCkpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIHJl
c3RhcnQgYXJlYSBpcyBvdXQgb2YgYm91bmRzICIKLQkJCQkib2YgdGhlIHN5c3RlbSBwYWdlIHNp
emUgc3BlY2lmaWVkIGJ5IHRoZSAiCi0JCQkJInJlc3RhcnQgcGFnZSBoZWFkZXIgYW5kL29yIHRo
ZSBzcGVjaWZpZWQgIgotCQkJCSJyZXN0YXJ0IGFyZWEgbGVuZ3RoIGlzIGluY29uc2lzdGVudC4i
KTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKgotCSAqIFRoZSByYS0+Y2xpZW50X2ZyZWVfbGlz
dCBhbmQgcmEtPmNsaWVudF9pbl91c2VfbGlzdCBtdXN0IGJlIGVpdGhlcgotCSAqIExPR0ZJTEVf
Tk9fQ0xJRU5UIG9yIGxlc3MgdGhhbiByYS0+bG9nX2NsaWVudHMgb3IgdGhleSBhcmUKLQkgKiBv
dmVyZmxvd2luZyB0aGUgY2xpZW50IGFycmF5LgotCSAqLwotCWlmICgocmEtPmNsaWVudF9mcmVl
X2xpc3QgIT0gTE9HRklMRV9OT19DTElFTlQgJiYKLQkJCWxlMTZfdG9fY3B1KHJhLT5jbGllbnRf
ZnJlZV9saXN0KSA+PQotCQkJbGUxNl90b19jcHUocmEtPmxvZ19jbGllbnRzKSkgfHwKLQkJCShy
YS0+Y2xpZW50X2luX3VzZV9saXN0ICE9IExPR0ZJTEVfTk9fQ0xJRU5UICYmCi0JCQlsZTE2X3Rv
X2NwdShyYS0+Y2xpZW50X2luX3VzZV9saXN0KSA+PQotCQkJbGUxNl90b19jcHUocmEtPmxvZ19j
bGllbnRzKSkpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIHJlc3RhcnQgYXJl
YSBzcGVjaWZpZXMgIgotCQkJCSJvdmVyZmxvd2luZyBjbGllbnQgZnJlZSBhbmQvb3IgaW4gdXNl
IGxpc3RzLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qCi0JICogQ2hlY2sgcmEtPnNlcV9u
dW1iZXJfYml0cyBhZ2FpbnN0IHJhLT5maWxlX3NpemUgZm9yIGNvbnNpc3RlbmN5LgotCSAqIFdl
IGNhbm5vdCBqdXN0IHVzZSBmZnMoKSBiZWNhdXNlIHRoZSBmaWxlIHNpemUgaXMgbm90IGEgcG93
ZXIgb2YgMi4KLQkgKi8KLQlmaWxlX3NpemUgPSAodTY0KXNsZTY0X3RvX2NwdShyYS0+ZmlsZV9z
aXplKTsKLQlmc19iaXRzID0gMDsKLQl3aGlsZSAoZmlsZV9zaXplKSB7Ci0JCWZpbGVfc2l6ZSA+
Pj0gMTsKLQkJZnNfYml0cysrOwotCX0KLQlpZiAobGUzMl90b19jcHUocmEtPnNlcV9udW1iZXJf
Yml0cykgIT0gNjcgLSBmc19iaXRzKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICIkTG9nRmls
ZSByZXN0YXJ0IGFyZWEgc3BlY2lmaWVzICIKLQkJCQkiaW5jb25zaXN0ZW50IHNlcXVlbmNlIG51
bWJlciBiaXRzLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qIFRoZSBsb2cgcmVjb3JkIGhl
YWRlciBsZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDguICovCi0JaWYgKCgobGUxNl90b19j
cHUocmEtPmxvZ19yZWNvcmRfaGVhZGVyX2xlbmd0aCkgKyA3KSAmIH43KSAhPQotCQkJbGUxNl90
b19jcHUocmEtPmxvZ19yZWNvcmRfaGVhZGVyX2xlbmd0aCkpIHsKLQkJbnRmc19lcnJvcih2aS0+
aV9zYiwgIiRMb2dGaWxlIHJlc3RhcnQgYXJlYSBzcGVjaWZpZXMgIgotCQkJCSJpbmNvbnNpc3Rl
bnQgbG9nIHJlY29yZCBoZWFkZXIgbGVuZ3RoLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8q
IERpdG8gZm9yIHRoZSBsb2cgcGFnZSBkYXRhIG9mZnNldC4gKi8KLQlpZiAoKChsZTE2X3RvX2Nw
dShyYS0+bG9nX3BhZ2VfZGF0YV9vZmZzZXQpICsgNykgJiB+NykgIT0KLQkJCWxlMTZfdG9fY3B1
KHJhLT5sb2dfcGFnZV9kYXRhX29mZnNldCkpIHsKLQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIiRM
b2dGaWxlIHJlc3RhcnQgYXJlYSBzcGVjaWZpZXMgIgotCQkJCSJpbmNvbnNpc3RlbnQgbG9nIHBh
Z2UgZGF0YSBvZmZzZXQuIik7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0JbnRmc19kZWJ1ZygiRG9u
ZS4iKTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotLyoqCi0gKiBudGZzX2NoZWNrX2xvZ19jbGllbnRf
YXJyYXkgLSBjaGVjayB0aGUgbG9nIGNsaWVudCBhcnJheSBmb3IgY29uc2lzdGVuY3kKLSAqIEB2
aToJCSRMb2dGaWxlIGlub2RlIHRvIHdoaWNoIHRoZSByZXN0YXJ0IHBhZ2UgYmVsb25ncwotICog
QHJwOgkJcmVzdGFydCBwYWdlIHdob3NlIGxvZyBjbGllbnQgYXJyYXkgdG8gY2hlY2sKLSAqCi0g
KiBDaGVjayB0aGUgbG9nIGNsaWVudCBhcnJheSBvZiB0aGUgcmVzdGFydCBwYWdlIEBycCBmb3Ig
Y29uc2lzdGVuY3kgYW5kCi0gKiByZXR1cm4gJ3RydWUnIGlmIGl0IGlzIGNvbnNpc3RlbnQgYW5k
ICdmYWxzZScgb3RoZXJ3aXNlLgotICoKLSAqIFRoaXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IHRo
ZSByZXN0YXJ0IHBhZ2UgaGVhZGVyIGFuZCB0aGUgcmVzdGFydCBhcmVhIGhhdmUKLSAqIGFscmVh
ZHkgYmVlbiBjb25zaXN0ZW5jeSBjaGVja2VkLgotICoKLSAqIFVubGlrZSBudGZzX2NoZWNrX3Jl
c3RhcnRfcGFnZV9oZWFkZXIoKSBhbmQgbnRmc19jaGVja19yZXN0YXJ0X2FyZWEoKSwgdGhpcwot
ICogZnVuY3Rpb24gbmVlZHMgQHJwLT5zeXN0ZW1fcGFnZV9zaXplIGJ5dGVzIGluIEBycCwgaS5l
LiBpdCByZXF1aXJlcyB0aGUgZnVsbAotICogcmVzdGFydCBwYWdlIGFuZCB0aGUgcGFnZSBtdXN0
IGJlIG11bHRpIHNlY3RvciB0cmFuc2ZlciBkZXByb3RlY3RlZC4KLSAqLwotc3RhdGljIGJvb2wg
bnRmc19jaGVja19sb2dfY2xpZW50X2FycmF5KHN0cnVjdCBpbm9kZSAqdmksCi0JCVJFU1RBUlRf
UEFHRV9IRUFERVIgKnJwKQotewotCVJFU1RBUlRfQVJFQSAqcmE7Ci0JTE9HX0NMSUVOVF9SRUNP
UkQgKmNhLCAqY3I7Ci0JdTE2IG5yX2NsaWVudHMsIGlkeDsKLQlib29sIGluX2ZyZWVfbGlzdCwg
aWR4X2lzX2ZpcnN0OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JcmEgPSAoUkVTVEFS
VF9BUkVBKikoKHU4KilycCArIGxlMTZfdG9fY3B1KHJwLT5yZXN0YXJ0X2FyZWFfb2Zmc2V0KSk7
Ci0JY2EgPSAoTE9HX0NMSUVOVF9SRUNPUkQqKSgodTgqKXJhICsKLQkJCWxlMTZfdG9fY3B1KHJh
LT5jbGllbnRfYXJyYXlfb2Zmc2V0KSk7Ci0JLyoKLQkgKiBDaGVjayB0aGUgcmEtPmNsaWVudF9m
cmVlX2xpc3QgZmlyc3QgYW5kIHRoZW4gY2hlY2sgdGhlCi0JICogcmEtPmNsaWVudF9pbl91c2Vf
bGlzdC4gIENoZWNrIGVhY2ggb2YgdGhlIGxvZyBjbGllbnQgcmVjb3JkcyBpbgotCSAqIGVhY2gg
b2YgdGhlIGxpc3RzIGFuZCBjaGVjayB0aGF0IHRoZSBhcnJheSBkb2VzIG5vdCBvdmVyZmxvdyB0
aGUKLQkgKiByYS0+bG9nX2NsaWVudHMgdmFsdWUuICBBbHNvIGtlZXAgdHJhY2sgb2YgdGhlIG51
bWJlciBvZiByZWNvcmRzCi0JICogdmlzaXRlZCBhcyB0aGVyZSBjYW5ub3QgYmUgbW9yZSB0aGFu
IHJhLT5sb2dfY2xpZW50cyByZWNvcmRzIGFuZAotCSAqIHRoYXQgd2F5IHdlIGRldGVjdCBldmVu
dHVhbCBsb29wcyBpbiB3aXRoaW4gYSBsaXN0LgotCSAqLwotCW5yX2NsaWVudHMgPSBsZTE2X3Rv
X2NwdShyYS0+bG9nX2NsaWVudHMpOwotCWlkeCA9IGxlMTZfdG9fY3B1KHJhLT5jbGllbnRfZnJl
ZV9saXN0KTsKLQlpbl9mcmVlX2xpc3QgPSB0cnVlOwotY2hlY2tfbGlzdDoKLQlmb3IgKGlkeF9p
c19maXJzdCA9IHRydWU7IGlkeCAhPSBMT0dGSUxFX05PX0NMSUVOVF9DUFU7IG5yX2NsaWVudHMt
LSwKLQkJCWlkeCA9IGxlMTZfdG9fY3B1KGNyLT5uZXh0X2NsaWVudCkpIHsKLQkJaWYgKCFucl9j
bGllbnRzIHx8IGlkeCA+PSBsZTE2X3RvX2NwdShyYS0+bG9nX2NsaWVudHMpKQotCQkJZ290byBl
cnJfb3V0OwotCQkvKiBTZXQgQGNyIHRvIHRoZSBjdXJyZW50IGxvZyBjbGllbnQgcmVjb3JkLiAq
LwotCQljciA9IGNhICsgaWR4OwotCQkvKiBUaGUgZmlyc3QgbG9nIGNsaWVudCByZWNvcmQgbXVz
dCBub3QgaGF2ZSBhIHByZXZfY2xpZW50LiAqLwotCQlpZiAoaWR4X2lzX2ZpcnN0KSB7Ci0JCQlp
ZiAoY3ItPnByZXZfY2xpZW50ICE9IExPR0ZJTEVfTk9fQ0xJRU5UKQotCQkJCWdvdG8gZXJyX291
dDsKLQkJCWlkeF9pc19maXJzdCA9IGZhbHNlOwotCQl9Ci0JfQotCS8qIFN3aXRjaCB0byBhbmQg
Y2hlY2sgdGhlIGluIHVzZSBsaXN0IGlmIHdlIGp1c3QgZGlkIHRoZSBmcmVlIGxpc3QuICovCi0J
aWYgKGluX2ZyZWVfbGlzdCkgewotCQlpbl9mcmVlX2xpc3QgPSBmYWxzZTsKLQkJaWR4ID0gbGUx
Nl90b19jcHUocmEtPmNsaWVudF9pbl91c2VfbGlzdCk7Ci0JCWdvdG8gY2hlY2tfbGlzdDsKLQl9
Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1ZTsKLWVycl9vdXQ6Ci0JbnRmc19l
cnJvcih2aS0+aV9zYiwgIiRMb2dGaWxlIGxvZyBjbGllbnQgYXJyYXkgaXMgY29ycnVwdC4iKTsK
LQlyZXR1cm4gZmFsc2U7Ci19Ci0KLS8qKgotICogbnRmc19jaGVja19hbmRfbG9hZF9yZXN0YXJ0
X3BhZ2UgLSBjaGVjayB0aGUgcmVzdGFydCBwYWdlIGZvciBjb25zaXN0ZW5jeQotICogQHZpOgkJ
JExvZ0ZpbGUgaW5vZGUgdG8gd2hpY2ggdGhlIHJlc3RhcnQgcGFnZSBiZWxvbmdzCi0gKiBAcnA6
CQlyZXN0YXJ0IHBhZ2UgdG8gY2hlY2sKLSAqIEBwb3M6CXBvc2l0aW9uIGluIEB2aSBhdCB3aGlj
aCB0aGUgcmVzdGFydCBwYWdlIHJlc2lkZXMKLSAqIEB3cnA6CVtPVVRdIGNvcHkgb2YgdGhlIG11
bHRpIHNlY3RvciB0cmFuc2ZlciBkZXByb3RlY3RlZCByZXN0YXJ0IHBhZ2UKLSAqIEBsc246CVtP
VVRdIHNldCB0byB0aGUgY3VycmVudCBsb2dmaWxlIGxzbiBvbiBzdWNjZXNzCi0gKgotICogQ2hl
Y2sgdGhlIHJlc3RhcnQgcGFnZSBAcnAgZm9yIGNvbnNpc3RlbmN5IGFuZCByZXR1cm4gMCBpZiBp
dCBpcyBjb25zaXN0ZW50Ci0gKiBhbmQgLWVycm5vIG90aGVyd2lzZS4gIFRoZSByZXN0YXJ0IHBh
Z2UgbWF5IGhhdmUgYmVlbiBtb2RpZmllZCBieSBjaGtkc2sgaW4KLSAqIHdoaWNoIGNhc2UgaXRz
IG1hZ2ljIGlzIENIS0QgaW5zdGVhZCBvZiBSU1RSLgotICoKLSAqIFRoaXMgZnVuY3Rpb24gb25s
eSBuZWVkcyBOVEZTX0JMT0NLX1NJWkUgYnl0ZXMgaW4gQHJwLCBpLmUuIGl0IGRvZXMgbm90Ci0g
KiByZXF1aXJlIHRoZSBmdWxsIHJlc3RhcnQgcGFnZS4KLSAqCi0gKiBJZiBAd3JwIGlzIG5vdCBO
VUxMLCBvbiBzdWNjZXNzLCAqQHdycCB3aWxsIHBvaW50IHRvIGEgYnVmZmVyIGNvbnRhaW5pbmcg
YQotICogY29weSBvZiB0aGUgY29tcGxldGUgbXVsdGkgc2VjdG9yIHRyYW5zZmVyIGRlcHJvdGVj
dGVkIHBhZ2UuICBPbiBmYWlsdXJlLAotICogKkB3cnAgaXMgdW5kZWZpbmVkLgotICoKLSAqIFNp
bWlsbGFybHksIGlmIEBsc24gaXMgbm90IE5VTEwsIG9uIHN1Y2Nlc3MgKkBsc24gd2lsbCBiZSBz
ZXQgdG8gdGhlIGN1cnJlbnQKLSAqIGxvZ2ZpbGUgbHNuIGFjY29yZGluZyB0byB0aGlzIHJlc3Rh
cnQgcGFnZS4gIE9uIGZhaWx1cmUsICpAbHNuIGlzIHVuZGVmaW5lZC4KLSAqCi0gKiBUaGUgZm9s
bG93aW5nIGVycm9yIGNvZGVzIGFyZSBkZWZpbmVkOgotICoJLUVJTlZBTAktIFRoZSByZXN0YXJ0
IHBhZ2UgaXMgaW5jb25zaXN0ZW50LgotICoJLUVOT01FTQktIE5vdCBlbm91Z2ggbWVtb3J5IHRv
IGxvYWQgdGhlIHJlc3RhcnQgcGFnZS4KLSAqCS1FSU8JLSBGYWlsZWQgdG8gcmVhZGluZyBmcm9t
ICRMb2dGaWxlLgotICovCi1zdGF0aWMgaW50IG50ZnNfY2hlY2tfYW5kX2xvYWRfcmVzdGFydF9w
YWdlKHN0cnVjdCBpbm9kZSAqdmksCi0JCVJFU1RBUlRfUEFHRV9IRUFERVIgKnJwLCBzNjQgcG9z
LCBSRVNUQVJUX1BBR0VfSEVBREVSICoqd3JwLAotCQlMU04gKmxzbikKLXsKLQlSRVNUQVJUX0FS
RUEgKnJhOwotCVJFU1RBUlRfUEFHRV9IRUFERVIgKnRycDsKLQlpbnQgc2l6ZSwgZXJyOwotCi0J
bnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JLyogQ2hlY2sgdGhlIHJlc3RhcnQgcGFnZSBoZWFk
ZXIgZm9yIGNvbnNpc3RlbmN5LiAqLwotCWlmICghbnRmc19jaGVja19yZXN0YXJ0X3BhZ2VfaGVh
ZGVyKHZpLCBycCwgcG9zKSkgewotCQkvKiBFcnJvciBvdXRwdXQgYWxyZWFkeSBkb25lIGluc2lk
ZSB0aGUgZnVuY3Rpb24uICovCi0JCXJldHVybiAtRUlOVkFMOwotCX0KLQkvKiBDaGVjayB0aGUg
cmVzdGFydCBhcmVhIGZvciBjb25zaXN0ZW5jeS4gKi8KLQlpZiAoIW50ZnNfY2hlY2tfcmVzdGFy
dF9hcmVhKHZpLCBycCkpIHsKLQkJLyogRXJyb3Igb3V0cHV0IGFscmVhZHkgZG9uZSBpbnNpZGUg
dGhlIGZ1bmN0aW9uLiAqLwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmEgPSAoUkVTVEFSVF9B
UkVBKikoKHU4KilycCArIGxlMTZfdG9fY3B1KHJwLT5yZXN0YXJ0X2FyZWFfb2Zmc2V0KSk7Ci0J
LyoKLQkgKiBBbGxvY2F0ZSBhIGJ1ZmZlciB0byBzdG9yZSB0aGUgd2hvbGUgcmVzdGFydCBwYWdl
IHNvIHdlIGNhbiBtdWx0aQotCSAqIHNlY3RvciB0cmFuc2ZlciBkZXByb3RlY3QgaXQuCi0JICov
Ci0JdHJwID0gbnRmc19tYWxsb2Nfbm9mcyhsZTMyX3RvX2NwdShycC0+c3lzdGVtX3BhZ2Vfc2l6
ZSkpOwotCWlmICghdHJwKSB7Ci0JCW50ZnNfZXJyb3IodmktPmlfc2IsICJGYWlsZWQgdG8gYWxs
b2NhdGUgbWVtb3J5IGZvciAkTG9nRmlsZSAiCi0JCQkJInJlc3RhcnQgcGFnZSBidWZmZXIuIik7
Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQkvKgotCSAqIFJlYWQgdGhlIHdob2xlIG9mIHRoZSBy
ZXN0YXJ0IHBhZ2UgaW50byB0aGUgYnVmZmVyLiAgSWYgaXQgZml0cwotCSAqIGNvbXBsZXRlbHkg
aW5zaWRlIEBycCwganVzdCBjb3B5IGl0IGZyb20gdGhlcmUuICBPdGhlcndpc2UgbWFwIGFsbAot
CSAqIHRoZSByZXF1aXJlZCBwYWdlcyBhbmQgY29weSB0aGUgZGF0YSBmcm9tIHRoZW0uCi0JICov
Ci0Jc2l6ZSA9IFBBR0VfU0laRSAtIChwb3MgJiB+UEFHRV9NQVNLKTsKLQlpZiAoc2l6ZSA+PSBs
ZTMyX3RvX2NwdShycC0+c3lzdGVtX3BhZ2Vfc2l6ZSkpIHsKLQkJbWVtY3B5KHRycCwgcnAsIGxl
MzJfdG9fY3B1KHJwLT5zeXN0ZW1fcGFnZV9zaXplKSk7Ci0JfSBlbHNlIHsKLQkJcGdvZmZfdCBp
ZHg7Ci0JCXN0cnVjdCBwYWdlICpwYWdlOwotCQlpbnQgaGF2ZV9yZWFkLCB0b19yZWFkOwotCi0J
CS8qIEZpcnN0IGNvcHkgd2hhdCB3ZSBhbHJlYWR5IGhhdmUgaW4gQHJwLiAqLwotCQltZW1jcHko
dHJwLCBycCwgc2l6ZSk7Ci0JCS8qIENvcHkgdGhlIHJlbWFpbmluZyBkYXRhIG9uZSBwYWdlIGF0
IGEgdGltZS4gKi8KLQkJaGF2ZV9yZWFkID0gc2l6ZTsKLQkJdG9fcmVhZCA9IGxlMzJfdG9fY3B1
KHJwLT5zeXN0ZW1fcGFnZV9zaXplKSAtIHNpemU7Ci0JCWlkeCA9IChwb3MgKyBzaXplKSA+PiBQ
QUdFX1NISUZUOwotCQlCVUdfT04oKHBvcyArIHNpemUpICYgflBBR0VfTUFTSyk7Ci0JCWRvIHsK
LQkJCXBhZ2UgPSBudGZzX21hcF9wYWdlKHZpLT5pX21hcHBpbmcsIGlkeCk7Ci0JCQlpZiAoSVNf
RVJSKHBhZ2UpKSB7Ci0JCQkJbnRmc19lcnJvcih2aS0+aV9zYiwgIkVycm9yIG1hcHBpbmcgJExv
Z0ZpbGUgIgotCQkJCQkJInBhZ2UgKGluZGV4ICVsdSkuIiwgaWR4KTsKLQkJCQllcnIgPSBQVFJf
RVJSKHBhZ2UpOwotCQkJCWlmIChlcnIgIT0gLUVJTyAmJiBlcnIgIT0gLUVOT01FTSkKLQkJCQkJ
ZXJyID0gLUVJTzsKLQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCQlzaXplID0gbWluX3QoaW50
LCB0b19yZWFkLCBQQUdFX1NJWkUpOwotCQkJbWVtY3B5KCh1OCopdHJwICsgaGF2ZV9yZWFkLCBw
YWdlX2FkZHJlc3MocGFnZSksIHNpemUpOwotCQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQkJ
aGF2ZV9yZWFkICs9IHNpemU7Ci0JCQl0b19yZWFkIC09IHNpemU7Ci0JCQlpZHgrKzsKLQkJfSB3
aGlsZSAodG9fcmVhZCA+IDApOwotCX0KLQkvKgotCSAqIFBlcmZvcm0gdGhlIG11bHRpIHNlY3Rv
ciB0cmFuc2ZlciBkZXByb3RlY3Rpb24gb24gdGhlIGJ1ZmZlciBpZiB0aGUKLQkgKiByZXN0YXJ0
IHBhZ2UgaXMgcHJvdGVjdGVkLgotCSAqLwotCWlmICgoIW50ZnNfaXNfY2hrZF9yZWNvcmQodHJw
LT5tYWdpYykgfHwgbGUxNl90b19jcHUodHJwLT51c2FfY291bnQpKQotCQkJJiYgcG9zdF9yZWFk
X21zdF9maXh1cCgoTlRGU19SRUNPUkQqKXRycCwKLQkJCWxlMzJfdG9fY3B1KHJwLT5zeXN0ZW1f
cGFnZV9zaXplKSkpIHsKLQkJLyoKLQkJICogQSBtdWx0aSBzZWN0b3IgdHJhbmZlciBlcnJvciB3
YXMgZGV0ZWN0ZWQuICBXZSBvbmx5IG5lZWQgdG8KLQkJICogYWJvcnQgaWYgdGhlIHJlc3RhcnQg
cGFnZSBjb250ZW50cyBleGNlZWQgdGhlIG11bHRpIHNlY3RvcgotCQkgKiB0cmFuc2ZlciBmaXh1
cCBvZiB0aGUgZmlyc3Qgc2VjdG9yLgotCQkgKi8KLQkJaWYgKGxlMTZfdG9fY3B1KHJwLT5yZXN0
YXJ0X2FyZWFfb2Zmc2V0KSArCi0JCQkJbGUxNl90b19jcHUocmEtPnJlc3RhcnRfYXJlYV9sZW5n
dGgpID4KLQkJCQlOVEZTX0JMT0NLX1NJWkUgLSBzaXplb2YodTE2KSkgewotCQkJbnRmc19lcnJv
cih2aS0+aV9zYiwgIk11bHRpIHNlY3RvciB0cmFuc2ZlciBlcnJvciAiCi0JCQkJCSJkZXRlY3Rl
ZCBpbiAkTG9nRmlsZSByZXN0YXJ0IHBhZ2UuIik7Ci0JCQllcnIgPSAtRUlOVkFMOwotCQkJZ290
byBlcnJfb3V0OwotCQl9Ci0JfQotCS8qCi0JICogSWYgdGhlIHJlc3RhcnQgcGFnZSBpcyBtb2Rp
ZmllZCBieSBjaGtkc2sgb3IgdGhlcmUgYXJlIG5vIGFjdGl2ZQotCSAqIGxvZ2ZpbGUgY2xpZW50
cywgdGhlIGxvZ2ZpbGUgaXMgY29uc2lzdGVudC4gIE90aGVyd2lzZSwgbmVlZCB0bwotCSAqIGNo
ZWNrIHRoZSBsb2cgY2xpZW50IHJlY29yZHMgZm9yIGNvbnNpc3RlbmN5LCB0b28uCi0JICovCi0J
ZXJyID0gMDsKLQlpZiAobnRmc19pc19yc3RyX3JlY29yZChycC0+bWFnaWMpICYmCi0JCQlyYS0+
Y2xpZW50X2luX3VzZV9saXN0ICE9IExPR0ZJTEVfTk9fQ0xJRU5UKSB7Ci0JCWlmICghbnRmc19j
aGVja19sb2dfY2xpZW50X2FycmF5KHZpLCB0cnApKSB7Ci0JCQllcnIgPSAtRUlOVkFMOwotCQkJ
Z290byBlcnJfb3V0OwotCQl9Ci0JfQotCWlmIChsc24pIHsKLQkJaWYgKG50ZnNfaXNfcnN0cl9y
ZWNvcmQocnAtPm1hZ2ljKSkKLQkJCSpsc24gPSBzbGU2NF90b19jcHUocmEtPmN1cnJlbnRfbHNu
KTsKLQkJZWxzZSAvKiBpZiAobnRmc19pc19jaGtkX3JlY29yZChycC0+bWFnaWMpKSAqLwotCQkJ
KmxzbiA9IHNsZTY0X3RvX2NwdShycC0+Y2hrZHNrX2xzbik7Ci0JfQotCW50ZnNfZGVidWcoIkRv
bmUuIik7Ci0JaWYgKHdycCkKLQkJKndycCA9IHRycDsKLQllbHNlIHsKLWVycl9vdXQ6Ci0JCW50
ZnNfZnJlZSh0cnApOwotCX0KLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfY2hlY2tf
bG9nZmlsZSAtIGNoZWNrIHRoZSBqb3VybmFsIGZvciBjb25zaXN0ZW5jeQotICogQGxvZ192aToJ
c3RydWN0IGlub2RlIG9mIGxvYWRlZCBqb3VybmFsICRMb2dGaWxlIHRvIGNoZWNrCi0gKiBAcnA6
CQlbT1VUXSBvbiBzdWNjZXNzIHRoaXMgaXMgYSBjb3B5IG9mIHRoZSBjdXJyZW50IHJlc3RhcnQg
cGFnZQotICoKLSAqIENoZWNrIHRoZSAkTG9nRmlsZSBqb3VybmFsIGZvciBjb25zaXN0ZW5jeSBh
bmQgcmV0dXJuICd0cnVlJyBpZiBpdCBpcwotICogY29uc2lzdGVudCBhbmQgJ2ZhbHNlJyBpZiBu
b3QuICBPbiBzdWNjZXNzLCB0aGUgY3VycmVudCByZXN0YXJ0IHBhZ2UgaXMKLSAqIHJldHVybmVk
IGluICpAcnAuICBDYWxsZXIgbXVzdCBjYWxsIG50ZnNfZnJlZSgqQHJwKSB3aGVuIGZpbmlzaGVk
IHdpdGggaXQuCi0gKgotICogQXQgcHJlc2VudCB3ZSBvbmx5IGNoZWNrIHRoZSB0d28gcmVzdGFy
dCBwYWdlcyBhbmQgaWdub3JlIHRoZSBsb2cgcmVjb3JkCi0gKiBwYWdlcy4KLSAqCi0gKiBOb3Rl
IHRoYXQgdGhlIE1zdFByb3RlY3RlZCBmbGFnIGlzIG5vdCBzZXQgb24gdGhlICRMb2dGaWxlIGlu
b2RlIGFuZCBoZW5jZQotICogd2hlbiByZWFkaW5nIHBhZ2VzIHRoZXkgYXJlIG5vdCBkZXByb3Rl
Y3RlZC4gIFRoaXMgaXMgYmVjYXVzZSB3ZSBkbyBub3Qga25vdwotICogaWYgdGhlICRMb2dGaWxl
IHdhcyBjcmVhdGVkIG9uIGEgc3lzdGVtIHdpdGggYSBkaWZmZXJlbnQgcGFnZSBzaXplIHRvIG91
cnMKLSAqIHlldCBhbmQgbXN0IGRlcHJvdGVjdGlvbiB3b3VsZCBmYWlsIGlmIG91ciBwYWdlIHNp
emUgaXMgc21hbGxlci4KLSAqLwotYm9vbCBudGZzX2NoZWNrX2xvZ2ZpbGUoc3RydWN0IGlub2Rl
ICpsb2dfdmksIFJFU1RBUlRfUEFHRV9IRUFERVIgKipycCkKLXsKLQlzNjQgc2l6ZSwgcG9zOwot
CUxTTiByc3RyMV9sc24sIHJzdHIyX2xzbjsKLQludGZzX3ZvbHVtZSAqdm9sID0gTlRGU19TQihs
b2dfdmktPmlfc2IpOwotCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nID0gbG9nX3ZpLT5p
X21hcHBpbmc7Ci0Jc3RydWN0IHBhZ2UgKnBhZ2UgPSBOVUxMOwotCXU4ICprYWRkciA9IE5VTEw7
Ci0JUkVTVEFSVF9QQUdFX0hFQURFUiAqcnN0cjFfcGggPSBOVUxMOwotCVJFU1RBUlRfUEFHRV9I
RUFERVIgKnJzdHIyX3BoID0gTlVMTDsKLQlpbnQgbG9nX3BhZ2Vfc2l6ZSwgZXJyOwotCWJvb2wg
bG9nZmlsZV9pc19lbXB0eSA9IHRydWU7Ci0JdTggbG9nX3BhZ2VfYml0czsKLQotCW50ZnNfZGVi
dWcoIkVudGVyaW5nLiIpOwotCS8qIEFuIGVtcHR5ICRMb2dGaWxlIG11c3QgaGF2ZSBiZWVuIGNs
ZWFuIGJlZm9yZSBpdCBnb3QgZW1wdGllZC4gKi8KLQlpZiAoTlZvbExvZ0ZpbGVFbXB0eSh2b2wp
KQotCQlnb3RvIGlzX2VtcHR5OwotCXNpemUgPSBpX3NpemVfcmVhZChsb2dfdmkpOwotCS8qIE1h
a2Ugc3VyZSB0aGUgZmlsZSBkb2Vzbid0IGV4Y2VlZCB0aGUgbWF4aW11bSBhbGxvd2VkIHNpemUu
ICovCi0JaWYgKHNpemUgPiBNYXhMb2dGaWxlU2l6ZSkKLQkJc2l6ZSA9IE1heExvZ0ZpbGVTaXpl
OwotCS8qCi0JICogVHJ1bmNhdGUgc2l6ZSB0byBhIG11bHRpcGxlIG9mIHRoZSBwYWdlIGNhY2hl
IHNpemUgb3IgdGhlIGRlZmF1bHQKLQkgKiBsb2cgcGFnZSBzaXplIGlmIHRoZSBwYWdlIGNhY2hl
IHNpemUgaXMgYmV0d2VlbiB0aGUgZGVmYXVsdCBsb2cgcGFnZQotCSAqIGxvZyBwYWdlIHNpemUg
aWYgdGhlIHBhZ2UgY2FjaGUgc2l6ZSBpcyBiZXR3ZWVuIHRoZSBkZWZhdWx0IGxvZyBwYWdlCi0J
ICogc2l6ZSBhbmQgdHdpY2UgdGhhdC4KLQkgKi8KLQlpZiAoUEFHRV9TSVpFID49IERlZmF1bHRM
b2dQYWdlU2l6ZSAmJiBQQUdFX1NJWkUgPD0KLQkJCURlZmF1bHRMb2dQYWdlU2l6ZSAqIDIpCi0J
CWxvZ19wYWdlX3NpemUgPSBEZWZhdWx0TG9nUGFnZVNpemU7Ci0JZWxzZQotCQlsb2dfcGFnZV9z
aXplID0gUEFHRV9TSVpFOwotCS8qCi0JICogVXNlIG50ZnNfZmZzKCkgaW5zdGVhZCBvZiBmZnMo
KSB0byBlbmFibGUgdGhlIGNvbXBpbGVyIHRvCi0JICogb3B0aW1pemUgbG9nX3BhZ2Vfc2l6ZSBh
bmQgbG9nX3BhZ2VfYml0cyBpbnRvIGNvbnN0YW50cy4KLQkgKi8KLQlsb2dfcGFnZV9iaXRzID0g
bnRmc19mZnMobG9nX3BhZ2Vfc2l6ZSkgLSAxOwotCXNpemUgJj0gfihzNjQpKGxvZ19wYWdlX3Np
emUgLSAxKTsKLQkvKgotCSAqIEVuc3VyZSB0aGUgbG9nIGZpbGUgaXMgYmlnIGVub3VnaCB0byBz
dG9yZSBhdCBsZWFzdCB0aGUgdHdvIHJlc3RhcnQKLQkgKiBwYWdlcyBhbmQgdGhlIG1pbmltdW0g
bnVtYmVyIG9mIGxvZyByZWNvcmQgcGFnZXMuCi0JICovCi0JaWYgKHNpemUgPCBsb2dfcGFnZV9z
aXplICogMiB8fCAoc2l6ZSAtIGxvZ19wYWdlX3NpemUgKiAyKSA+PgotCQkJbG9nX3BhZ2VfYml0
cyA8IE1pbkxvZ1JlY29yZFBhZ2VzKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIiRMb2dGaWxl
IGlzIHRvbyBzbWFsbC4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKgotCSAqIFJlYWQgdGhy
b3VnaCB0aGUgZmlsZSBsb29raW5nIGZvciBhIHJlc3RhcnQgcGFnZS4gIFNpbmNlIHRoZSByZXN0
YXJ0Ci0JICogcGFnZSBoZWFkZXIgaXMgYXQgdGhlIGJlZ2lubmluZyBvZiBhIHBhZ2Ugd2Ugb25s
eSBuZWVkIHRvIHNlYXJjaCBhdAotCSAqIHdoYXQgY291bGQgYmUgdGhlIGJlZ2lubmluZyBvZiBh
IHBhZ2UgKGZvciBlYWNoIHBhZ2Ugc2l6ZSkgcmF0aGVyCi0JICogdGhhbiBzY2FubmluZyB0aGUg
d2hvbGUgZmlsZSBieXRlIGJ5IGJ5dGUuICBJZiBhbGwgcG90ZW50aWFsIHBsYWNlcwotCSAqIGNv
bnRhaW4gZW1wdHkgYW5kIHVuaW5pdGlhbHplZCByZWNvcmRzLCB0aGUgbG9nIGZpbGUgY2FuIGJl
IGFzc3VtZWQKLQkgKiB0byBiZSBlbXB0eS4KLQkgKi8KLQlmb3IgKHBvcyA9IDA7IHBvcyA8IHNp
emU7IHBvcyA8PD0gMSkgewotCQlwZ29mZl90IGlkeCA9IHBvcyA+PiBQQUdFX1NISUZUOwotCQlp
ZiAoIXBhZ2UgfHwgcGFnZS0+aW5kZXggIT0gaWR4KSB7Ci0JCQlpZiAocGFnZSkKLQkJCQludGZz
X3VubWFwX3BhZ2UocGFnZSk7Ci0JCQlwYWdlID0gbnRmc19tYXBfcGFnZShtYXBwaW5nLCBpZHgp
OwotCQkJaWYgKElTX0VSUihwYWdlKSkgewotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkVycm9y
IG1hcHBpbmcgJExvZ0ZpbGUgIgotCQkJCQkJInBhZ2UgKGluZGV4ICVsdSkuIiwgaWR4KTsKLQkJ
CQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCX0KLQkJa2FkZHIgPSAodTgqKXBhZ2VfYWRkcmVzcyhw
YWdlKSArIChwb3MgJiB+UEFHRV9NQVNLKTsKLQkJLyoKLQkJICogQSBub24tZW1wdHkgYmxvY2sg
bWVhbnMgdGhlIGxvZ2ZpbGUgaXMgbm90IGVtcHR5IHdoaWxlIGFuCi0JCSAqIGVtcHR5IGJsb2Nr
IGFmdGVyIGEgbm9uLWVtcHR5IGJsb2NrIGhhcyBiZWVuIGVuY291bnRlcmVkCi0JCSAqIG1lYW5z
IHdlIGFyZSBkb25lLgotCQkgKi8KLQkJaWYgKCFudGZzX2lzX2VtcHR5X3JlY29yZHAoKGxlMzIq
KWthZGRyKSkKLQkJCWxvZ2ZpbGVfaXNfZW1wdHkgPSBmYWxzZTsKLQkJZWxzZSBpZiAoIWxvZ2Zp
bGVfaXNfZW1wdHkpCi0JCQlicmVhazsKLQkJLyoKLQkJICogQSBsb2cgcmVjb3JkIHBhZ2UgbWVh
bnMgdGhlcmUgY2Fubm90IGJlIGEgcmVzdGFydCBwYWdlIGFmdGVyCi0JCSAqIHRoaXMgc28gbm8g
bmVlZCB0byBjb250aW51ZSBzZWFyY2hpbmcuCi0JCSAqLwotCQlpZiAobnRmc19pc19yY3JkX3Jl
Y29yZHAoKGxlMzIqKWthZGRyKSkKLQkJCWJyZWFrOwotCQkvKiBJZiBub3QgYSAobW9kaWZpZWQg
YnkgY2hrZHNrKSByZXN0YXJ0IHBhZ2UsIGNvbnRpbnVlLiAqLwotCQlpZiAoIW50ZnNfaXNfcnN0
cl9yZWNvcmRwKChsZTMyKilrYWRkcikgJiYKLQkJCQkhbnRmc19pc19jaGtkX3JlY29yZHAoKGxl
MzIqKWthZGRyKSkgewotCQkJaWYgKCFwb3MpCi0JCQkJcG9zID0gTlRGU19CTE9DS19TSVpFID4+
IDE7Ci0JCQljb250aW51ZTsKLQkJfQotCQkvKgotCQkgKiBDaGVjayB0aGUgKG1vZGlmaWVkIGJ5
IGNoa2RzaykgcmVzdGFydCBwYWdlIGZvciBjb25zaXN0ZW5jeQotCQkgKiBhbmQgZ2V0IGEgY29w
eSBvZiB0aGUgY29tcGxldGUgbXVsdGkgc2VjdG9yIHRyYW5zZmVyCi0JCSAqIGRlcHJvdGVjdGVk
IHJlc3RhcnQgcGFnZS4KLQkJICovCi0JCWVyciA9IG50ZnNfY2hlY2tfYW5kX2xvYWRfcmVzdGFy
dF9wYWdlKGxvZ192aSwKLQkJCQkoUkVTVEFSVF9QQUdFX0hFQURFUiopa2FkZHIsIHBvcywKLQkJ
CQkhcnN0cjFfcGggPyAmcnN0cjFfcGggOiAmcnN0cjJfcGgsCi0JCQkJIXJzdHIxX3BoID8gJnJz
dHIxX2xzbiA6ICZyc3RyMl9sc24pOwotCQlpZiAoIWVycikgewotCQkJLyoKLQkJCSAqIElmIHdl
IGhhdmUgbm93IGZvdW5kIHRoZSBmaXJzdCAobW9kaWZpZWQgYnkgY2hrZHNrKQotCQkJICogcmVz
dGFydCBwYWdlLCBjb250aW51ZSBsb29raW5nIGZvciB0aGUgc2Vjb25kIG9uZS4KLQkJCSAqLwot
CQkJaWYgKCFwb3MpIHsKLQkJCQlwb3MgPSBOVEZTX0JMT0NLX1NJWkUgPj4gMTsKLQkJCQljb250
aW51ZTsKLQkJCX0KLQkJCS8qCi0JCQkgKiBXZSBoYXZlIG5vdyBmb3VuZCB0aGUgc2Vjb25kICht
b2RpZmllZCBieSBjaGtkc2spCi0JCQkgKiByZXN0YXJ0IHBhZ2UsIHNvIHdlIGNhbiBzdG9wIGxv
b2tpbmcuCi0JCQkgKi8KLQkJCWJyZWFrOwotCQl9Ci0JCS8qCi0JCSAqIEVycm9yIG91dHB1dCBh
bHJlYWR5IGRvbmUgaW5zaWRlIHRoZSBmdW5jdGlvbi4gIE5vdGUsIHdlIGRvCi0JCSAqIG5vdCBh
Ym9ydCBpZiB0aGUgcmVzdGFydCBwYWdlIHdhcyBpbnZhbGlkIGFzIHdlIG1pZ2h0IHN0aWxsCi0J
CSAqIGZpbmQgYSB2YWxpZCBvbmUgZnVydGhlciBpbiB0aGUgZmlsZS4KLQkJICovCi0JCWlmIChl
cnIgIT0gLUVJTlZBTCkgewotCQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQkJZ290byBlcnJf
b3V0OwotCQl9Ci0JCS8qIENvbnRpbnVlIGxvb2tpbmcuICovCi0JCWlmICghcG9zKQotCQkJcG9z
ID0gTlRGU19CTE9DS19TSVpFID4+IDE7Ci0JfQotCWlmIChwYWdlKQotCQludGZzX3VubWFwX3Bh
Z2UocGFnZSk7Ci0JaWYgKGxvZ2ZpbGVfaXNfZW1wdHkpIHsKLQkJTlZvbFNldExvZ0ZpbGVFbXB0
eSh2b2wpOwotaXNfZW1wdHk6Ci0JCW50ZnNfZGVidWcoIkRvbmUuICAoJExvZ0ZpbGUgaXMgZW1w
dHkuKSIpOwotCQlyZXR1cm4gdHJ1ZTsKLQl9Ci0JaWYgKCFyc3RyMV9waCkgewotCQlCVUdfT04o
cnN0cjJfcGgpOwotCQludGZzX2Vycm9yKHZvbC0+c2IsICJEaWQgbm90IGZpbmQgYW55IHJlc3Rh
cnQgcGFnZXMgaW4gIgotCQkJCSIkTG9nRmlsZSBhbmQgaXQgd2FzIG5vdCBlbXB0eS4iKTsKLQkJ
cmV0dXJuIGZhbHNlOwotCX0KLQkvKiBJZiBib3RoIHJlc3RhcnQgcGFnZXMgd2VyZSBmb3VuZCwg
dXNlIHRoZSBtb3JlIHJlY2VudCBvbmUuICovCi0JaWYgKHJzdHIyX3BoKSB7Ci0JCS8qCi0JCSAq
IElmIHRoZSBzZWNvbmQgcmVzdGFydCBhcmVhIGlzIG1vcmUgcmVjZW50LCBzd2l0Y2ggdG8gaXQu
Ci0JCSAqIE90aGVyd2lzZSBqdXN0IHRocm93IGl0IGF3YXkuCi0JCSAqLwotCQlpZiAocnN0cjJf
bHNuID4gcnN0cjFfbHNuKSB7Ci0JCQludGZzX2RlYnVnKCJVc2luZyBzZWNvbmQgcmVzdGFydCBw
YWdlIGFzIGl0IGlzIG1vcmUgIgotCQkJCQkicmVjZW50LiIpOwotCQkJbnRmc19mcmVlKHJzdHIx
X3BoKTsKLQkJCXJzdHIxX3BoID0gcnN0cjJfcGg7Ci0JCQkvKiByc3RyMV9sc24gPSByc3RyMl9s
c247ICovCi0JCX0gZWxzZSB7Ci0JCQludGZzX2RlYnVnKCJVc2luZyBmaXJzdCByZXN0YXJ0IHBh
Z2UgYXMgaXQgaXMgbW9yZSAiCi0JCQkJCSJyZWNlbnQuIik7Ci0JCQludGZzX2ZyZWUocnN0cjJf
cGgpOwotCQl9Ci0JCXJzdHIyX3BoID0gTlVMTDsKLQl9Ci0JLyogQWxsIGNvbnNpc3RlbmN5IGNo
ZWNrcyBwYXNzZWQuICovCi0JaWYgKHJwKQotCQkqcnAgPSByc3RyMV9waDsKLQllbHNlCi0JCW50
ZnNfZnJlZShyc3RyMV9waCk7Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1ZTsK
LWVycl9vdXQ6Ci0JaWYgKHJzdHIxX3BoKQotCQludGZzX2ZyZWUocnN0cjFfcGgpOwotCXJldHVy
biBmYWxzZTsKLX0KLQotLyoqCi0gKiBudGZzX2lzX2xvZ2ZpbGVfY2xlYW4gLSBjaGVjayBpbiB0
aGUgam91cm5hbCBpZiB0aGUgdm9sdW1lIGlzIGNsZWFuCi0gKiBAbG9nX3ZpOglzdHJ1Y3QgaW5v
ZGUgb2YgbG9hZGVkIGpvdXJuYWwgJExvZ0ZpbGUgdG8gY2hlY2sKLSAqIEBycDoJCWNvcHkgb2Yg
dGhlIGN1cnJlbnQgcmVzdGFydCBwYWdlCi0gKgotICogQW5hbHl6ZSB0aGUgJExvZ0ZpbGUgam91
cm5hbCBhbmQgcmV0dXJuICd0cnVlJyBpZiBpdCBpbmRpY2F0ZXMgdGhlIHZvbHVtZSB3YXMKLSAq
IHNodXRkb3duIGNsZWFubHkgYW5kICdmYWxzZScgaWYgbm90LgotICoKLSAqIEF0IHByZXNlbnQg
d2Ugb25seSBsb29rIGF0IHRoZSB0d28gcmVzdGFydCBwYWdlcyBhbmQgaWdub3JlIHRoZSBsb2cg
cmVjb3JkCi0gKiBwYWdlcy4gIFRoaXMgaXMgYSBsaXR0bGUgYml0IGNydWRlIGluIHRoYXQgdGhl
cmUgd2lsbCBiZSBhIHZlcnkgc21hbGwgbnVtYmVyCi0gKiBvZiBjYXNlcyB3aGVyZSB3ZSB0aGlu
ayB0aGF0IGEgdm9sdW1lIGlzIGRpcnR5IHdoZW4gaW4gZmFjdCBpdCBpcyBjbGVhbi4KLSAqIFRo
aXMgc2hvdWxkIG9ubHkgYWZmZWN0IHZvbHVtZXMgdGhhdCBoYXZlIG5vdCBiZWVuIHNodXRkb3du
IGNsZWFubHkgYnV0IGRpZAotICogbm90IGhhdmUgYW55IHBlbmRpbmcsIG5vbi1jaGVjay1wb2lu
dGVkIGkvbywgaS5lLiB0aGV5IHdlcmUgY29tcGxldGVseSBpZGxlCi0gKiBhdCBsZWFzdCBmb3Ig
dGhlIGZpdmUgc2Vjb25kcyBwcmVjZWRpbmcgdGhlIHVuY2xlYW4gc2h1dGRvd24uCi0gKgotICog
VGhpcyBmdW5jdGlvbiBhc3N1bWVzIHRoYXQgdGhlICRMb2dGaWxlIGpvdXJuYWwgaGFzIGFscmVh
ZHkgYmVlbiBjb25zaXN0ZW5jeQotICogY2hlY2tlZCBieSBhIGNhbGwgdG8gbnRmc19jaGVja19s
b2dmaWxlKCkgYW5kIGluIHBhcnRpY3VsYXIgaWYgdGhlICRMb2dGaWxlCi0gKiBpcyBlbXB0eSB0
aGlzIGZ1bmN0aW9uIHJlcXVpcmVzIHRoYXQgTlZvbExvZ0ZpbGVFbXB0eSgpIGlzIHRydWUgb3Ro
ZXJ3aXNlIGFuCi0gKiBlbXB0eSB2b2x1bWUgd2lsbCBiZSByZXBvcnRlZCBhcyBkaXJ0eS4KLSAq
LwotYm9vbCBudGZzX2lzX2xvZ2ZpbGVfY2xlYW4oc3RydWN0IGlub2RlICpsb2dfdmksIGNvbnN0
IFJFU1RBUlRfUEFHRV9IRUFERVIgKnJwKQotewotCW50ZnNfdm9sdW1lICp2b2wgPSBOVEZTX1NC
KGxvZ192aS0+aV9zYik7Ci0JUkVTVEFSVF9BUkVBICpyYTsKLQotCW50ZnNfZGVidWcoIkVudGVy
aW5nLiIpOwotCS8qIEFuIGVtcHR5ICRMb2dGaWxlIG11c3QgaGF2ZSBiZWVuIGNsZWFuIGJlZm9y
ZSBpdCBnb3QgZW1wdGllZC4gKi8KLQlpZiAoTlZvbExvZ0ZpbGVFbXB0eSh2b2wpKSB7Ci0JCW50
ZnNfZGVidWcoIkRvbmUuICAoJExvZ0ZpbGUgaXMgZW1wdHkuKSIpOwotCQlyZXR1cm4gdHJ1ZTsK
LQl9Ci0JQlVHX09OKCFycCk7Ci0JaWYgKCFudGZzX2lzX3JzdHJfcmVjb3JkKHJwLT5tYWdpYykg
JiYKLQkJCSFudGZzX2lzX2Noa2RfcmVjb3JkKHJwLT5tYWdpYykpIHsKLQkJbnRmc19lcnJvcih2
b2wtPnNiLCAiUmVzdGFydCBwYWdlIGJ1ZmZlciBpcyBpbnZhbGlkLiAgVGhpcyBpcyAiCi0JCQkJ
InByb2JhYmx5IGEgYnVnIGluIHRoYXQgdGhlICRMb2dGaWxlIHNob3VsZCAiCi0JCQkJImhhdmUg
YmVlbiBjb25zaXN0ZW5jeSBjaGVja2VkIGJlZm9yZSBjYWxsaW5nICIKLQkJCQkidGhpcyBmdW5j
dGlvbi4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQlyYSA9IChSRVNUQVJUX0FSRUEqKSgodTgq
KXJwICsgbGUxNl90b19jcHUocnAtPnJlc3RhcnRfYXJlYV9vZmZzZXQpKTsKLQkvKgotCSAqIElm
IHRoZSAkTG9nRmlsZSBoYXMgYWN0aXZlIGNsaWVudHMsIGkuZS4gaXQgaXMgb3BlbiwgYW5kIHdl
IGRvIG5vdAotCSAqIGhhdmUgdGhlIFJFU1RBUlRfVk9MVU1FX0lTX0NMRUFOIGJpdCBzZXQgaW4g
dGhlIHJlc3RhcnQgYXJlYSBmbGFncywKLQkgKiB3ZSBhc3N1bWUgdGhlcmUgd2FzIGFuIHVuY2xl
YW4gc2h1dGRvd24uCi0JICovCi0JaWYgKHJhLT5jbGllbnRfaW5fdXNlX2xpc3QgIT0gTE9HRklM
RV9OT19DTElFTlQgJiYKLQkJCSEocmEtPmZsYWdzICYgUkVTVEFSVF9WT0xVTUVfSVNfQ0xFQU4p
KSB7Ci0JCW50ZnNfZGVidWcoIkRvbmUuICAkTG9nRmlsZSBpbmRpY2F0ZXMgYSBkaXJ0eSBzaHV0
ZG93bi4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKiAkTG9nRmlsZSBpbmRpY2F0ZXMgYSBj
bGVhbiBzaHV0ZG93bi4gKi8KLQludGZzX2RlYnVnKCJEb25lLiAgJExvZ0ZpbGUgaW5kaWNhdGVz
IGEgY2xlYW4gc2h1dGRvd24uIik7Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLS8qKgotICogbnRmc19l
bXB0eV9sb2dmaWxlIC0gZW1wdHkgdGhlIGNvbnRlbnRzIG9mIHRoZSAkTG9nRmlsZSBqb3VybmFs
Ci0gKiBAbG9nX3ZpOglzdHJ1Y3QgaW5vZGUgb2YgbG9hZGVkIGpvdXJuYWwgJExvZ0ZpbGUgdG8g
ZW1wdHkKLSAqCi0gKiBFbXB0eSB0aGUgY29udGVudHMgb2YgdGhlICRMb2dGaWxlIGpvdXJuYWwg
QGxvZ192aSBhbmQgcmV0dXJuICd0cnVlJyBvbgotICogc3VjY2VzcyBhbmQgJ2ZhbHNlJyBvbiBl
cnJvci4KLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgJExvZ0ZpbGUgam91
cm5hbCBoYXMgYWxyZWFkeSBiZWVuIGNvbnNpc3RlbmN5Ci0gKiBjaGVja2VkIGJ5IGEgY2FsbCB0
byBudGZzX2NoZWNrX2xvZ2ZpbGUoKSBhbmQgdGhhdCBudGZzX2lzX2xvZ2ZpbGVfY2xlYW4oKQot
ICogaGFzIGJlZW4gdXNlZCB0byBlbnN1cmUgdGhhdCB0aGUgJExvZ0ZpbGUgaXMgY2xlYW4uCi0g
Ki8KLWJvb2wgbnRmc19lbXB0eV9sb2dmaWxlKHN0cnVjdCBpbm9kZSAqbG9nX3ZpKQotewotCVZD
TiB2Y24sIGVuZF92Y247Ci0JbnRmc19pbm9kZSAqbG9nX25pID0gTlRGU19JKGxvZ192aSk7Ci0J
bnRmc192b2x1bWUgKnZvbCA9IGxvZ19uaS0+dm9sOwotCXN0cnVjdCBzdXBlcl9ibG9jayAqc2Ig
PSB2b2wtPnNiOwotCXJ1bmxpc3RfZWxlbWVudCAqcmw7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsK
LQl1bnNpZ25lZCBibG9ja19zaXplLCBibG9ja19zaXplX2JpdHM7Ci0JaW50IGVycjsKLQlib29s
IHNob3VsZF93YWl0ID0gdHJ1ZTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCWlmIChO
Vm9sTG9nRmlsZUVtcHR5KHZvbCkpIHsKLQkJbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQkJcmV0dXJu
IHRydWU7Ci0JfQotCS8qCi0JICogV2UgY2Fubm90IHVzZSBudGZzX2F0dHJfc2V0KCkgYmVjYXVz
ZSB3ZSBtYXkgYmUgc3RpbGwgaW4gdGhlIG1pZGRsZQotCSAqIG9mIGEgbW91bnQgb3BlcmF0aW9u
LiAgVGh1cyB3ZSBkbyB0aGUgZW1wdHlpbmcgYnkgaGFuZCBieSBmaXJzdAotCSAqIHphcHBpbmcg
dGhlIHBhZ2UgY2FjaGUgcGFnZXMgZm9yIHRoZSAkTG9nRmlsZS8kREFUQSBhdHRyaWJ1dGUgYW5k
Ci0JICogdGhlbiBlbXB0eWluZyBlYWNoIG9mIHRoZSBidWZmZXJzIGluIGVhY2ggb2YgdGhlIGNs
dXN0ZXJzIHNwZWNpZmllZAotCSAqIGJ5IHRoZSBydW5saXN0IGJ5IGhhbmQuCi0JICovCi0JYmxv
Y2tfc2l6ZSA9IHNiLT5zX2Jsb2Nrc2l6ZTsKLQlibG9ja19zaXplX2JpdHMgPSBzYi0+c19ibG9j
a3NpemVfYml0czsKLQl2Y24gPSAwOwotCXJlYWRfbG9ja19pcnFzYXZlKCZsb2dfbmktPnNpemVf
bG9jaywgZmxhZ3MpOwotCWVuZF92Y24gPSAobG9nX25pLT5pbml0aWFsaXplZF9zaXplICsgdm9s
LT5jbHVzdGVyX3NpemVfbWFzaykgPj4KLQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JcmVh
ZF91bmxvY2tfaXJxcmVzdG9yZSgmbG9nX25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQl0cnVuY2F0
ZV9pbm9kZV9wYWdlcyhsb2dfdmktPmlfbWFwcGluZywgMCk7Ci0JZG93bl93cml0ZSgmbG9nX25p
LT5ydW5saXN0LmxvY2spOwotCXJsID0gbG9nX25pLT5ydW5saXN0LnJsOwotCWlmICh1bmxpa2Vs
eSghcmwgfHwgdmNuIDwgcmwtPnZjbiB8fCAhcmwtPmxlbmd0aCkpIHsKLW1hcF92Y246Ci0JCWVy
ciA9IG50ZnNfbWFwX3J1bmxpc3Rfbm9sb2NrKGxvZ19uaSwgdmNuLCBOVUxMKTsKLQkJaWYgKGVy
cikgewotCQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBtYXAgcnVubGlzdCBmcmFnbWVudCAo
ZXJyb3IgIgotCQkJCQkiJWQpLiIsIC1lcnIpOwotCQkJZ290byBlcnI7Ci0JCX0KLQkJcmwgPSBs
b2dfbmktPnJ1bmxpc3Qucmw7Ci0JCUJVR19PTighcmwgfHwgdmNuIDwgcmwtPnZjbiB8fCAhcmwt
Pmxlbmd0aCk7Ci0JfQotCS8qIFNlZWsgdG8gdGhlIHJ1bmxpc3QgZWxlbWVudCBjb250YWluaW5n
IEB2Y24uICovCi0Jd2hpbGUgKHJsLT5sZW5ndGggJiYgdmNuID49IHJsWzFdLnZjbikKLQkJcmwr
KzsKLQlkbyB7Ci0JCUxDTiBsY247Ci0JCXNlY3Rvcl90IGJsb2NrLCBlbmRfYmxvY2s7Ci0JCXM2
NCBsZW47Ci0KLQkJLyoKLQkJICogSWYgdGhpcyBydW4gaXMgbm90IG1hcHBlZCBtYXAgaXQgbm93
IGFuZCBzdGFydCBhZ2FpbiBhcyB0aGUKLQkJICogcnVubGlzdCB3aWxsIGhhdmUgYmVlbiB1cGRh
dGVkLgotCQkgKi8KLQkJbGNuID0gcmwtPmxjbjsKLQkJaWYgKHVubGlrZWx5KGxjbiA9PSBMQ05f
UkxfTk9UX01BUFBFRCkpIHsKLQkJCXZjbiA9IHJsLT52Y247Ci0JCQlnb3RvIG1hcF92Y247Ci0J
CX0KLQkJLyogSWYgdGhpcyBydW4gaXMgbm90IHZhbGlkIGFib3J0IHdpdGggYW4gZXJyb3IuICov
Ci0JCWlmICh1bmxpa2VseSghcmwtPmxlbmd0aCB8fCBsY24gPCBMQ05fSE9MRSkpCi0JCQlnb3Rv
IHJsX2VycjsKLQkJLyogU2tpcCBob2xlcy4gKi8KLQkJaWYgKGxjbiA9PSBMQ05fSE9MRSkKLQkJ
CWNvbnRpbnVlOwotCQlibG9jayA9IGxjbiA8PCB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID4+IGJs
b2NrX3NpemVfYml0czsKLQkJbGVuID0gcmwtPmxlbmd0aDsKLQkJaWYgKHJsWzFdLnZjbiA+IGVu
ZF92Y24pCi0JCQlsZW4gPSBlbmRfdmNuIC0gcmwtPnZjbjsKLQkJZW5kX2Jsb2NrID0gKGxjbiAr
IGxlbikgPDwgdm9sLT5jbHVzdGVyX3NpemVfYml0cyA+PgotCQkJCWJsb2NrX3NpemVfYml0czsK
LQkJLyogSXRlcmF0ZSBvdmVyIHRoZSBibG9ja3MgaW4gdGhlIHJ1biBhbmQgZW1wdHkgdGhlbS4g
Ki8KLQkJZG8gewotCQkJc3RydWN0IGJ1ZmZlcl9oZWFkICpiaDsKLQotCQkJLyogT2J0YWluIHRo
ZSBidWZmZXIsIHBvc3NpYmx5IG5vdCB1cHRvZGF0ZS4gKi8KLQkJCWJoID0gc2JfZ2V0YmxrKHNi
LCBibG9jayk7Ci0JCQlCVUdfT04oIWJoKTsKLQkJCS8qIFNldHVwIGJ1ZmZlciBpL28gc3VibWlz
c2lvbi4gKi8KLQkJCWxvY2tfYnVmZmVyKGJoKTsKLQkJCWJoLT5iX2VuZF9pbyA9IGVuZF9idWZm
ZXJfd3JpdGVfc3luYzsKLQkJCWdldF9iaChiaCk7Ci0JCQkvKiBTZXQgdGhlIGVudGlyZSBjb250
ZW50cyBvZiB0aGUgYnVmZmVyIHRvIDB4ZmYuICovCi0JCQltZW1zZXQoYmgtPmJfZGF0YSwgLTEs
IGJsb2NrX3NpemUpOwotCQkJaWYgKCFidWZmZXJfdXB0b2RhdGUoYmgpKQotCQkJCXNldF9idWZm
ZXJfdXB0b2RhdGUoYmgpOwotCQkJaWYgKGJ1ZmZlcl9kaXJ0eShiaCkpCi0JCQkJY2xlYXJfYnVm
ZmVyX2RpcnR5KGJoKTsKLQkJCS8qCi0JCQkgKiBTdWJtaXQgdGhlIGJ1ZmZlciBhbmQgd2FpdCBm
b3IgaS9vIHRvIGNvbXBsZXRlIGJ1dAotCQkJICogb25seSBmb3IgdGhlIGZpcnN0IGJ1ZmZlciBz
byB3ZSBkbyBub3QgbWlzcyByZWFsbHkKLQkJCSAqIHNlcmlvdXMgaS9vIGVycm9ycy4gIE9uY2Ug
dGhlIGZpcnN0IGJ1ZmZlciBoYXMKLQkJCSAqIGNvbXBsZXRlZCBpZ25vcmUgZXJyb3JzIGFmdGVy
d2FyZHMgYXMgd2UgY2FuIGFzc3VtZQotCQkJICogdGhhdCBpZiBvbmUgYnVmZmVyIHdvcmtlZCBh
bGwgb2YgdGhlbSB3aWxsIHdvcmsuCi0JCQkgKi8KLQkJCXN1Ym1pdF9iaChSRVFfT1BfV1JJVEUs
IGJoKTsKLQkJCWlmIChzaG91bGRfd2FpdCkgewotCQkJCXNob3VsZF93YWl0ID0gZmFsc2U7Ci0J
CQkJd2FpdF9vbl9idWZmZXIoYmgpOwotCQkJCWlmICh1bmxpa2VseSghYnVmZmVyX3VwdG9kYXRl
KGJoKSkpCi0JCQkJCWdvdG8gaW9fZXJyOwotCQkJfQotCQkJYnJlbHNlKGJoKTsKLQkJfSB3aGls
ZSAoKytibG9jayA8IGVuZF9ibG9jayk7Ci0JfSB3aGlsZSAoKCsrcmwpLT52Y24gPCBlbmRfdmNu
KTsKLQl1cF93cml0ZSgmbG9nX25pLT5ydW5saXN0LmxvY2spOwotCS8qCi0JICogWmFwIHRoZSBw
YWdlcyBhZ2FpbiBqdXN0IGluIGNhc2UgYW55IGdvdCBpbnN0YW50aWF0ZWQgd2hpbHN0IHdlIHdl
cmUKLQkgKiBlbXB0eWluZyB0aGUgYmxvY2tzIGJ5IGhhbmQuICBGSVhNRTogV2UgbWF5IG5vdCBo
YXZlIGNvbXBsZXRlZAotCSAqIHdyaXRpbmcgdG8gYWxsIHRoZSBidWZmZXIgaGVhZHMgeWV0IHNv
IHRoaXMgbWF5IGhhcHBlbiB0b28gZWFybHkuCi0JICogV2UgcmVhbGx5IHNob3VsZCB1c2UgYSBr
ZXJuZWwgdGhyZWFkIHRvIGRvIHRoZSBlbXB0eWluZwotCSAqIGFzeW5jaHJvbm91c2x5IGFuZCB0
aGVuIHdlIGNhbiBhbHNvIHNldCB0aGUgdm9sdW1lIGRpcnR5IGFuZCBvdXRwdXQKLQkgKiBhbiBl
cnJvciBtZXNzYWdlIGlmIGVtcHR5aW5nIHNob3VsZCBmYWlsLgotCSAqLwotCXRydW5jYXRlX2lu
b2RlX3BhZ2VzKGxvZ192aS0+aV9tYXBwaW5nLCAwKTsKLQkvKiBTZXQgdGhlIGZsYWcgc28gd2Ug
ZG8gbm90IGhhdmUgdG8gZG8gaXQgYWdhaW4gb24gcmVtb3VudC4gKi8KLQlOVm9sU2V0TG9nRmls
ZUVtcHR5KHZvbCk7Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1ZTsKLWlvX2Vy
cjoKLQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIHdyaXRlIGJ1ZmZlci4gIFVubW91bnQgYW5k
IHJ1biBjaGtkc2suIik7Ci0JZ290byBkaXJ0eV9lcnI7Ci1ybF9lcnI6Ci0JbnRmc19lcnJvcihz
YiwgIlJ1bmxpc3QgaXMgY29ycnVwdC4gIFVubW91bnQgYW5kIHJ1biBjaGtkc2suIik7Ci1kaXJ0
eV9lcnI6Ci0JTlZvbFNldEVycm9ycyh2b2wpOwotCWVyciA9IC1FSU87Ci1lcnI6Ci0JdXBfd3Jp
dGUoJmxvZ19uaS0+cnVubGlzdC5sb2NrKTsKLQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGZp
bGwgJExvZ0ZpbGUgd2l0aCAweGZmIGJ5dGVzIChlcnJvciAlZCkuIiwKLQkJCS1lcnIpOwotCXJl
dHVybiBmYWxzZTsKLX0KLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KZGlmZiAtLWdpdCBhL2ZzL250
ZnMvbG9nZmlsZS5oIGIvZnMvbnRmcy9sb2dmaWxlLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDQyOWQ0OTA5Y2M3Mi4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvbG9nZmlsZS5o
CisrKyAvZGV2L251bGwKQEAgLTEsMjk1ICswLDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wLW9yLWxhdGVyICovCi0vKgotICogbG9nZmlsZS5oIC0gRGVmaW5lcyBmb3Ig
TlRGUyBrZXJuZWwgam91cm5hbCAoJExvZ0ZpbGUpIGhhbmRsaW5nLiAgUGFydCBvZgotICoJICAg
ICAgIHRoZSBMaW51eC1OVEZTIHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDAwLTIw
MDUgQW50b24gQWx0YXBhcm1ha292Ci0gKi8KLQotI2lmbmRlZiBfTElOVVhfTlRGU19MT0dGSUxF
X0gKLSNkZWZpbmUgX0xJTlVYX05URlNfTE9HRklMRV9ICi0KLSNpZmRlZiBOVEZTX1JXCi0KLSNp
bmNsdWRlIDxsaW51eC9mcy5oPgotCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJlbmRp
YW4uaCIKLSNpbmNsdWRlICJsYXlvdXQuaCIKLQotLyoKLSAqIEpvdXJuYWwgKCRMb2dGaWxlKSBv
cmdhbml6YXRpb246Ci0gKgotICogVHdvIHJlc3RhcnQgYXJlYXMgcHJlc2VudCBpbiB0aGUgZmly
c3QgdHdvIHBhZ2VzIChyZXN0YXJ0IHBhZ2VzLCBvbmUgcmVzdGFydAotICogYXJlYSBpbiBlYWNo
IHBhZ2UpLiAgV2hlbiB0aGUgdm9sdW1lIGlzIGRpc21vdW50ZWQgdGhleSBzaG91bGQgYmUgaWRl
bnRpY2FsLAotICogZXhjZXB0IGZvciB0aGUgdXBkYXRlIHNlcXVlbmNlIGFycmF5IHdoaWNoIHVz
dWFsbHkgaGFzIGEgZGlmZmVyZW50IHVwZGF0ZQotICogc2VxdWVuY2UgbnVtYmVyLgotICoKLSAq
IFRoZXNlIGFyZSBmb2xsb3dlZCBieSBsb2cgcmVjb3JkcyBvcmdhbml6ZWQgaW4gcGFnZXMgaGVh
ZGVkIGJ5IGEgbG9nIHJlY29yZAotICogaGVhZGVyIGdvaW5nIHVwIHRvIGxvZyBmaWxlIHNpemUu
ICBOb3QgYWxsIHBhZ2VzIGNvbnRhaW4gbG9nIHJlY29yZHMgd2hlbiBhCi0gKiB2b2x1bWUgaXMg
Zmlyc3QgZm9ybWF0dGVkLCBidXQgYXMgdGhlIHZvbHVtZSBhZ2VzLCBhbGwgcmVjb3JkcyB3aWxs
IGJlIHVzZWQuCi0gKiBXaGVuIHRoZSBsb2cgZmlsZSBmaWxscyB1cCwgdGhlIHJlY29yZHMgYXQg
dGhlIGJlZ2lubmluZyBhcmUgcHVyZ2VkIChieQotICogbW9kaWZ5aW5nIHRoZSBvbGRlc3RfbHNu
IHRvIGEgaGlnaGVyIHZhbHVlIHByZXN1bWFibHkpIGFuZCB3cml0aW5nIGJlZ2lucwotICogYXQg
dGhlIGJlZ2lubmluZyBvZiB0aGUgZmlsZS4gIEVmZmVjdGl2ZWx5LCB0aGUgbG9nIGZpbGUgaXMg
dmlld2VkIGFzIGEKLSAqIGNpcmN1bGFyIGVudGl0eS4KLSAqCi0gKiBOT1RFOiBXaW5kb3dzIE5U
LCAyMDAwLCBhbmQgWFAgYWxsIHVzZSBsb2cgZmlsZSB2ZXJzaW9uIDEuMSBidXQgdGhleSBhY2Nl
cHQKLSAqIHZlcnNpb25zIDw9IDEueCwgaW5jbHVkaW5nIDAuLTEuICAoWWVzLCB0aGF0IGlzIGEg
bWludXMgb25lIGluIHRoZXJlISkgIFdlCi0gKiBwcm9iYWJseSBvbmx5IHdhbnQgdG8gc3VwcG9y
dCAxLjEgYXMgdGhpcyBzZWVtcyB0byBiZSB0aGUgY3VycmVudCB2ZXJzaW9uCi0gKiBhbmQgd2Ug
ZG9uJ3Qga25vdyBob3cgdGhhdCBkaWZmZXJzIGZyb20gdGhlIG9sZGVyIHZlcnNpb25zLiAgVGhl
IG9ubHkKLSAqIGV4Y2VwdGlvbiBpcyBpZiB0aGUgam91cm5hbCBpcyBjbGVhbiBhcyBtYXJrZWQg
YnkgdGhlIHR3byByZXN0YXJ0IHBhZ2VzCi0gKiB0aGVuIGl0IGRvZXNuJ3QgbWF0dGVyIHdoZXRo
ZXIgd2UgYXJlIG9uIGFuIGVhcmxpZXIgdmVyc2lvbi4gIFdlIGNhbiBqdXN0Ci0gKiByZWluaXRp
YWxpemUgdGhlIGxvZ2ZpbGUgYW5kIHN0YXJ0IGFnYWluIHdpdGggdmVyc2lvbiAxLjEuCi0gKi8K
LQotLyogU29tZSAkTG9nRmlsZSByZWxhdGVkIGNvbnN0YW50cy4gKi8KLSNkZWZpbmUgTWF4TG9n
RmlsZVNpemUJCTB4MTAwMDAwMDAwVUxMCi0jZGVmaW5lIERlZmF1bHRMb2dQYWdlU2l6ZQk0MDk2
Ci0jZGVmaW5lIE1pbkxvZ1JlY29yZFBhZ2VzCTQ4Ci0KLS8qCi0gKiBMb2cgZmlsZSByZXN0YXJ0
IHBhZ2UgaGVhZGVyIChiZWdpbnMgdGhlIHJlc3RhcnQgYXJlYSkuCi0gKi8KLXR5cGVkZWYgc3Ry
dWN0IHsKLS8qT2ZzKi8KLS8qICAwCU5URlNfUkVDT1JEOyAtLSBVbmZvbGRlZCBoZXJlIGFzIGdj
YyBkb2Vzbid0IGxpa2UgdW5uYW1lZCBzdHJ1Y3RzLiAqLwotLyogIDAqLwlOVEZTX1JFQ09SRF9U
WVBFIG1hZ2ljOwkvKiBUaGUgbWFnaWMgaXMgIlJTVFIiLiAqLwotLyogIDQqLwlsZTE2IHVzYV9v
ZnM7CQkvKiBTZWUgTlRGU19SRUNPUkQgZGVmaW5pdGlvbiBpbiBsYXlvdXQuaC4KLQkJCQkgICBX
aGVuIGNyZWF0aW5nLCBzZXQgdGhpcyB0byBiZSBpbW1lZGlhdGVseQotCQkJCSAgIGFmdGVyIHRo
aXMgaGVhZGVyIHN0cnVjdHVyZSAod2l0aG91dCBhbnkKLQkJCQkgICBhbGlnbm1lbnQpLiAqLwot
LyogIDYqLwlsZTE2IHVzYV9jb3VudDsJCS8qIFNlZSBOVEZTX1JFQ09SRCBkZWZpbml0aW9uIGlu
IGxheW91dC5oLiAqLwotCi0vKiAgOCovCWxlTFNOIGNoa2Rza19sc247CS8qIFRoZSBsYXN0IGxv
ZyBmaWxlIHNlcXVlbmNlIG51bWJlciBmb3VuZCBieQotCQkJCSAgIGNoa2Rzay4gIE9ubHkgdXNl
ZCB3aGVuIHRoZSBtYWdpYyBpcyBjaGFuZ2VkCi0JCQkJICAgdG8gIkNIS0QiLiAgT3RoZXJ3aXNl
IHRoaXMgaXMgemVyby4gKi8KLS8qIDE2Ki8JbGUzMiBzeXN0ZW1fcGFnZV9zaXplOwkvKiBCeXRl
IHNpemUgb2Ygc3lzdGVtIHBhZ2VzIHdoZW4gdGhlIGxvZyBmaWxlCi0JCQkJICAgd2FzIGNyZWF0
ZWQsIGhhcyB0byBiZSA+PSA1MTIgYW5kIGEgcG93ZXIgb2YKLQkJCQkgICAyLiAgVXNlIHRoaXMg
dG8gY2FsY3VsYXRlIHRoZSByZXF1aXJlZCBzaXplCi0JCQkJICAgb2YgdGhlIHVzYSAodXNhX2Nv
dW50KSBhbmQgYWRkIGl0IHRvIHVzYV9vZnMuCi0JCQkJICAgVGhlbiB2ZXJpZnkgdGhhdCB0aGUg
cmVzdWx0IGlzIGxlc3MgdGhhbiB0aGUKLQkJCQkgICB2YWx1ZSBvZiB0aGUgcmVzdGFydF9hcmVh
X29mZnNldC4gKi8KLS8qIDIwKi8JbGUzMiBsb2dfcGFnZV9zaXplOwkvKiBCeXRlIHNpemUgb2Yg
bG9nIGZpbGUgcGFnZXMsIGhhcyB0byBiZSA+PQotCQkJCSAgIDUxMiBhbmQgYSBwb3dlciBvZiAy
LiAgVGhlIGRlZmF1bHQgaXMgNDA5NgotCQkJCSAgIGFuZCBpcyB1c2VkIHdoZW4gdGhlIHN5c3Rl
bSBwYWdlIHNpemUgaXMKLQkJCQkgICBiZXR3ZWVuIDQwOTYgYW5kIDgxOTIuICBPdGhlcndpc2Ug
dGhpcyBpcwotCQkJCSAgIHNldCB0byB0aGUgc3lzdGVtIHBhZ2Ugc2l6ZSBpbnN0ZWFkLiAqLwot
LyogMjQqLwlsZTE2IHJlc3RhcnRfYXJlYV9vZmZzZXQ7LyogQnl0ZSBvZmZzZXQgZnJvbSB0aGUg
c3RhcnQgb2YgdGhpcyBoZWFkZXIgdG8KLQkJCQkgICB0aGUgUkVTVEFSVF9BUkVBLiAgVmFsdWUg
aGFzIHRvIGJlIGFsaWduZWQKLQkJCQkgICB0byA4LWJ5dGUgYm91bmRhcnkuICBXaGVuIGNyZWF0
aW5nLCBzZXQgdGhpcwotCQkJCSAgIHRvIGJlIGFmdGVyIHRoZSB1c2EuICovCi0vKiAyNiovCXNs
ZTE2IG1pbm9yX3ZlcjsJLyogTG9nIGZpbGUgbWlub3IgdmVyc2lvbi4gIE9ubHkgY2hlY2sgaWYg
bWFqb3IKLQkJCQkgICB2ZXJzaW9uIGlzIDEuICovCi0vKiAyOCovCXNsZTE2IG1ham9yX3ZlcjsJ
LyogTG9nIGZpbGUgbWFqb3IgdmVyc2lvbi4gIFdlIG9ubHkgc3VwcG9ydAotCQkJCSAgIHZlcnNp
b24gMS4xLiAqLwotLyogc2l6ZW9mKCkgPSAzMCAoMHgxZSkgYnl0ZXMgKi8KLX0gX19hdHRyaWJ1
dGVfXyAoKF9fcGFja2VkX18pKSBSRVNUQVJUX1BBR0VfSEVBREVSOwotCi0vKgotICogQ29uc3Rh
bnQgZm9yIHRoZSBsb2cgY2xpZW50IGluZGljZXMgbWVhbmluZyB0aGF0IHRoZXJlIGFyZSBubyBj
bGllbnQgcmVjb3JkcwotICogaW4gdGhpcyBwYXJ0aWN1bGFyIGNsaWVudCBhcnJheS4gIEFsc28g
aW5zaWRlIHRoZSBjbGllbnQgcmVjb3JkcyB0aGVtc2VsdmVzLAotICogdGhpcyBtZWFucyB0aGF0
IHRoZXJlIGFyZSBubyBjbGllbnQgcmVjb3JkcyBwcmVjZWRpbmcgb3IgZm9sbG93aW5nIHRoaXMg
b25lLgotICovCi0jZGVmaW5lIExPR0ZJTEVfTk9fQ0xJRU5UCWNwdV90b19sZTE2KDB4ZmZmZikK
LSNkZWZpbmUgTE9HRklMRV9OT19DTElFTlRfQ1BVCTB4ZmZmZgotCi0vKgotICogVGhlc2UgYXJl
IHRoZSBzbyBmYXIga25vd24gUkVTVEFSVF9BUkVBXyogZmxhZ3MgKDE2LWJpdCkgd2hpY2ggY29u
dGFpbgotICogaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvZyBmaWxlIGluIHdoaWNoIHRoZXkgYXJl
IHByZXNlbnQuCi0gKi8KLWVudW0gewotCVJFU1RBUlRfVk9MVU1FX0lTX0NMRUFOCT0gY3B1X3Rv
X2xlMTYoMHgwMDAyKSwKLQlSRVNUQVJUX1NQQUNFX0ZJTExFUgk9IGNwdV90b19sZTE2KDB4ZmZm
ZiksIC8qIGdjYzogRm9yY2UgZW51bSBiaXQgd2lkdGggdG8gMTYuICovCi19IF9fYXR0cmlidXRl
X18gKChfX3BhY2tlZF9fKSk7Ci0KLXR5cGVkZWYgbGUxNiBSRVNUQVJUX0FSRUFfRkxBR1M7Ci0K
LS8qCi0gKiBMb2cgZmlsZSByZXN0YXJ0IGFyZWEgcmVjb3JkLiAgVGhlIG9mZnNldCBvZiB0aGlz
IHJlY29yZCBpcyBmb3VuZCBieSBhZGRpbmcKLSAqIHRoZSBvZmZzZXQgb2YgdGhlIFJFU1RBUlRf
UEFHRV9IRUFERVIgdG8gdGhlIHJlc3RhcnRfYXJlYV9vZmZzZXQgdmFsdWUgZm91bmQKLSAqIGlu
IGl0LiAgU2VlIG5vdGVzIGF0IHJlc3RhcnRfYXJlYV9vZmZzZXQgYWJvdmUuCi0gKi8KLXR5cGVk
ZWYgc3RydWN0IHsKLS8qT2ZzKi8KLS8qICAwKi8JbGVMU04gY3VycmVudF9sc247CS8qIFRoZSBj
dXJyZW50LCBpLmUuIGxhc3QgTFNOIGluc2lkZSB0aGUgbG9nCi0JCQkJICAgd2hlbiB0aGUgcmVz
dGFydCBhcmVhIHdhcyBsYXN0IHdyaXR0ZW4uCi0JCQkJICAgVGhpcyBoYXBwZW5zIG9mdGVuIGJ1
dCB3aGF0IGlzIHRoZSBpbnRlcnZhbD8KLQkJCQkgICBJcyBpdCBqdXN0IGZpeGVkIHRpbWUgb3Ig
aXMgaXQgZXZlcnkgdGltZSBhCi0JCQkJICAgY2hlY2sgcG9pbnQgaXMgd3JpdHRlbiBvciBzb21l
dGhpbmUgZWxzZT8KLQkJCQkgICBPbiBjcmVhdGUgc2V0IHRvIDAuICovCi0vKiAgOCovCWxlMTYg
bG9nX2NsaWVudHM7CS8qIE51bWJlciBvZiBsb2cgY2xpZW50IHJlY29yZHMgaW4gdGhlIGFycmF5
IG9mCi0JCQkJICAgbG9nIGNsaWVudCByZWNvcmRzIHdoaWNoIGZvbGxvd3MgdGhpcwotCQkJCSAg
IHJlc3RhcnQgYXJlYS4gIE11c3QgYmUgMS4gICovCi0vKiAxMCovCWxlMTYgY2xpZW50X2ZyZWVf
bGlzdDsJLyogVGhlIGluZGV4IG9mIHRoZSBmaXJzdCBmcmVlIGxvZyBjbGllbnQgcmVjb3JkCi0J
CQkJICAgaW4gdGhlIGFycmF5IG9mIGxvZyBjbGllbnQgcmVjb3Jkcy4KLQkJCQkgICBMT0dGSUxF
X05PX0NMSUVOVCBtZWFucyB0aGF0IHRoZXJlIGFyZSBubwotCQkJCSAgIGZyZWUgbG9nIGNsaWVu
dCByZWNvcmRzIGluIHRoZSBhcnJheS4KLQkJCQkgICBJZiAhPSBMT0dGSUxFX05PX0NMSUVOVCwg
Y2hlY2sgdGhhdAotCQkJCSAgIGxvZ19jbGllbnRzID4gY2xpZW50X2ZyZWVfbGlzdC4gIE9uIFdp
bjJrCi0JCQkJICAgYW5kIHByZXN1bWFibHkgZWFybGllciwgb24gYSBjbGVhbiB2b2x1bWUKLQkJ
CQkgICB0aGlzIGlzICE9IExPR0ZJTEVfTk9fQ0xJRU5ULCBhbmQgaXQgc2hvdWxkCi0JCQkJICAg
YmUgMCwgaS5lLiB0aGUgZmlyc3QgKGFuZCBvbmx5KSBjbGllbnQKLQkJCQkgICByZWNvcmQgaXMg
ZnJlZSBhbmQgdGh1cyB0aGUgbG9nZmlsZSBpcwotCQkJCSAgIGNsb3NlZCBhbmQgaGVuY2UgY2xl
YW4uICBBIGRpcnR5IHZvbHVtZQotCQkJCSAgIHdvdWxkIGhhdmUgbGVmdCB0aGUgbG9nZmlsZSBv
cGVuIGFuZCBoZW5jZQotCQkJCSAgIHRoaXMgd291bGQgYmUgTE9HRklMRV9OT19DTElFTlQuICBP
biBXaW5YUAotCQkJCSAgIGFuZCBwcmVzdW1hYmx5IGxhdGVyLCB0aGUgbG9nZmlsZSBpcyBhbHdh
eXMKLQkJCQkgICBvcGVuLCBldmVuIG9uIGNsZWFuIHNodXRkb3duIHNvIHRoaXMgc2hvdWxkCi0J
CQkJICAgYWx3YXlzIGJlIExPR0ZJTEVfTk9fQ0xJRU5ULiAqLwotLyogMTIqLwlsZTE2IGNsaWVu
dF9pbl91c2VfbGlzdDsvKiBUaGUgaW5kZXggb2YgdGhlIGZpcnN0IGluLXVzZSBsb2cgY2xpZW50
Ci0JCQkJICAgcmVjb3JkIGluIHRoZSBhcnJheSBvZiBsb2cgY2xpZW50IHJlY29yZHMuCi0JCQkJ
ICAgTE9HRklMRV9OT19DTElFTlQgbWVhbnMgdGhhdCB0aGVyZSBhcmUgbm8KLQkJCQkgICBpbi11
c2UgbG9nIGNsaWVudCByZWNvcmRzIGluIHRoZSBhcnJheS4gIElmCi0JCQkJICAgIT0gTE9HRklM
RV9OT19DTElFTlQgY2hlY2sgdGhhdCBsb2dfY2xpZW50cwotCQkJCSAgID4gY2xpZW50X2luX3Vz
ZV9saXN0LiAgT24gV2luMmsgYW5kCi0JCQkJICAgcHJlc3VtYWJseSBlYXJsaWVyLCBvbiBhIGNs
ZWFuIHZvbHVtZSB0aGlzCi0JCQkJICAgaXMgTE9HRklMRV9OT19DTElFTlQsIGkuZS4gdGhlcmUg
YXJlIG5vCi0JCQkJICAgY2xpZW50IHJlY29yZHMgaW4gdXNlIGFuZCB0aHVzIHRoZSBsb2dmaWxl
Ci0JCQkJICAgaXMgY2xvc2VkIGFuZCBoZW5jZSBjbGVhbi4gIEEgZGlydHkgdm9sdW1lCi0JCQkJ
ICAgd291bGQgaGF2ZSBsZWZ0IHRoZSBsb2dmaWxlIG9wZW4gYW5kIGhlbmNlCi0JCQkJICAgdGhp
cyB3b3VsZCBiZSAhPSBMT0dGSUxFX05PX0NMSUVOVCwgYW5kIGl0Ci0JCQkJICAgc2hvdWxkIGJl
IDAsIGkuZS4gdGhlIGZpcnN0IChhbmQgb25seSkKLQkJCQkgICBjbGllbnQgcmVjb3JkIGlzIGlu
IHVzZS4gIE9uIFdpblhQIGFuZAotCQkJCSAgIHByZXN1bWFibHkgbGF0ZXIsIHRoZSBsb2dmaWxl
IGlzIGFsd2F5cwotCQkJCSAgIG9wZW4sIGV2ZW4gb24gY2xlYW4gc2h1dGRvd24gc28gdGhpcyBz
aG91bGQKLQkJCQkgICBhbHdheXMgYmUgMC4gKi8KLS8qIDE0Ki8JUkVTVEFSVF9BUkVBX0ZMQUdT
IGZsYWdzOy8qIEZsYWdzIG1vZGlmeWluZyBMRlMgYmVoYXZpb3VyLiAgT24gV2luMmsKLQkJCQkg
ICBhbmQgcHJlc3VtYWJseSBlYXJsaWVyIHRoaXMgaXMgYWx3YXlzIDAuICBPbgotCQkJCSAgIFdp
blhQIGFuZCBwcmVzdW1hYmx5IGxhdGVyLCBpZiB0aGUgbG9nZmlsZQotCQkJCSAgIHdhcyBzaHV0
ZG93biBjbGVhbmx5LCB0aGUgc2Vjb25kIGJpdCwKLQkJCQkgICBSRVNUQVJUX1ZPTFVNRV9JU19D
TEVBTiwgaXMgc2V0LiAgVGhpcyBiaXQKLQkJCQkgICBpcyBjbGVhcmVkIHdoZW4gdGhlIHZvbHVt
ZSBpcyBtb3VudGVkIGJ5Ci0JCQkJICAgV2luWFAgYW5kIHNldCB3aGVuIHRoZSB2b2x1bWUgaXMg
ZGlzbW91bnRlZCwKLQkJCQkgICB0aHVzIGlmIHRoZSBsb2dmaWxlIGlzIGRpcnR5LCB0aGlzIGJp
dCBpcwotCQkJCSAgIGNsZWFyLiAgVGh1cyB3ZSBkb24ndCBuZWVkIHRvIGNoZWNrIHRoZQotCQkJ
CSAgIFdpbmRvd3MgdmVyc2lvbiB0byBkZXRlcm1pbmUgaWYgdGhlIGxvZ2ZpbGUKLQkJCQkgICBp
cyBjbGVhbi4gIEluc3RlYWQgaWYgdGhlIGxvZ2ZpbGUgaXMgY2xvc2VkLAotCQkJCSAgIHdlIGtu
b3cgaXQgbXVzdCBiZSBjbGVhbi4gIElmIGl0IGlzIG9wZW4gYW5kCi0JCQkJICAgdGhpcyBiaXQg
aXMgc2V0LCB3ZSBhbHNvIGtub3cgaXQgbXVzdCBiZQotCQkJCSAgIGNsZWFuLiAgSWYgb24gdGhl
IG90aGVyIGhhbmQgdGhlIGxvZ2ZpbGUgaXMKLQkJCQkgICBvcGVuIGFuZCB0aGlzIGJpdCBpcyBj
bGVhciwgd2UgY2FuIGJlIGFsbW9zdAotCQkJCSAgIGNlcnRhaW4gdGhhdCB0aGUgbG9nZmlsZSBp
cyBkaXJ0eS4gKi8KLS8qIDE2Ki8JbGUzMiBzZXFfbnVtYmVyX2JpdHM7CS8qIEhvdyBtYW55IGJp
dHMgdG8gdXNlIGZvciB0aGUgc2VxdWVuY2UKLQkJCQkgICBudW1iZXIuICBUaGlzIGlzIGNhbGN1
bGF0ZWQgYXMgNjcgLSB0aGUKLQkJCQkgICBudW1iZXIgb2YgYml0cyByZXF1aXJlZCB0byBzdG9y
ZSB0aGUgbG9nZmlsZQotCQkJCSAgIHNpemUgaW4gYnl0ZXMgYW5kIHRoaXMgY2FuIGJlIHVzZWQg
aW4gd2l0aAotCQkJCSAgIHRoZSBzcGVjaWZpZWQgZmlsZV9zaXplIGFzIGEgY29uc2lzdGVuY3kK
LQkJCQkgICBjaGVjay4gKi8KLS8qIDIwKi8JbGUxNiByZXN0YXJ0X2FyZWFfbGVuZ3RoOy8qIExl
bmd0aCBvZiB0aGUgcmVzdGFydCBhcmVhIGluY2x1ZGluZyB0aGUKLQkJCQkgICBjbGllbnQgYXJy
YXkuICBGb2xsb3dpbmcgY2hlY2tzIHJlcXVpcmVkIGlmCi0JCQkJICAgdmVyc2lvbiBtYXRjaGVz
LiAgT3RoZXJ3aXNlLCBza2lwIHRoZW0uCi0JCQkJICAgcmVzdGFydF9hcmVhX29mZnNldCArIHJl
c3RhcnRfYXJlYV9sZW5ndGgKLQkJCQkgICBoYXMgdG8gYmUgPD0gc3lzdGVtX3BhZ2Vfc2l6ZS4g
IEFsc28sCi0JCQkJICAgcmVzdGFydF9hcmVhX2xlbmd0aCBoYXMgdG8gYmUgPj0KLQkJCQkgICBj
bGllbnRfYXJyYXlfb2Zmc2V0ICsgKGxvZ19jbGllbnRzICoKLQkJCQkgICBzaXplb2YobG9nIGNs
aWVudCByZWNvcmQpKS4gKi8KLS8qIDIyKi8JbGUxNiBjbGllbnRfYXJyYXlfb2Zmc2V0Oy8qIE9m
ZnNldCBmcm9tIHRoZSBzdGFydCBvZiB0aGlzIHJlY29yZCB0bwotCQkJCSAgIHRoZSBmaXJzdCBs
b2cgY2xpZW50IHJlY29yZCBpZiB2ZXJzaW9ucyBhcmUKLQkJCQkgICBtYXRjaGVkLiAgV2hlbiBj
cmVhdGluZywgc2V0IHRoaXMgdG8gYmUKLQkJCQkgICBhZnRlciB0aGlzIHJlc3RhcnQgYXJlYSBz
dHJ1Y3R1cmUsIGFsaWduZWQKLQkJCQkgICB0byA4LWJ5dGVzIGJvdW5kYXJ5LiAgSWYgdGhlIHZl
cnNpb25zIGRvIG5vdAotCQkJCSAgIG1hdGNoLCB0aGlzIGlzIGlnbm9yZWQgYW5kIHRoZSBvZmZz
ZXQgaXMKLQkJCQkgICBhc3N1bWVkIHRvIGJlIChzaXplb2YoUkVTVEFSVF9BUkVBKSArIDcpICYK
LQkJCQkgICB+NywgaS5lLiByb3VuZGVkIHVwIHRvIGZpcnN0IDgtYnl0ZQotCQkJCSAgIGJvdW5k
YXJ5LiAgRWl0aGVyIHdheSwgY2xpZW50X2FycmF5X29mZnNldAotCQkJCSAgIGhhcyB0byBiZSBh
bGlnbmVkIHRvIGFuIDgtYnl0ZSBib3VuZGFyeS4KLQkJCQkgICBBbHNvLCByZXN0YXJ0X2FyZWFf
b2Zmc2V0ICsKLQkJCQkgICBjbGllbnRfYXJyYXlfb2Zmc2V0IGhhcyB0byBiZSA8PSA1MTAuCi0J
CQkJICAgRmluYWxseSwgY2xpZW50X2FycmF5X29mZnNldCArIChsb2dfY2xpZW50cwotCQkJCSAg
ICogc2l6ZW9mKGxvZyBjbGllbnQgcmVjb3JkKSkgaGFzIHRvIGJlIDw9Ci0JCQkJICAgc3lzdGVt
X3BhZ2Vfc2l6ZS4gIE9uIFdpbjJrIGFuZCBwcmVzdW1hYmx5Ci0JCQkJICAgZWFybGllciwgdGhp
cyBpcyAweDMwLCBpLmUuIGltbWVkaWF0ZWx5Ci0JCQkJICAgZm9sbG93aW5nIHRoaXMgcmVjb3Jk
LiAgT24gV2luWFAgYW5kCi0JCQkJICAgcHJlc3VtYWJseSBsYXRlciwgdGhpcyBpcyAweDQwLCBp
LmUuIHRoZXJlCi0JCQkJICAgYXJlIDE2IGV4dHJhIGJ5dGVzIGJldHdlZW4gdGhpcyByZWNvcmQg
YW5kCi0JCQkJICAgdGhlIGNsaWVudCBhcnJheS4gIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdAot
CQkJCSAgIHRoZSBSRVNUQVJUX0FSRUEgcmVjb3JkIGlzIGFjdHVhbGx5IGJpZ2dlcgotCQkJCSAg
IGluIFdpblhQIGFuZCBsYXRlci4gKi8KLS8qIDI0Ki8Jc2xlNjQgZmlsZV9zaXplOwkvKiBVc2Fi
bGUgYnl0ZSBzaXplIG9mIHRoZSBsb2cgZmlsZS4gIElmIHRoZQotCQkJCSAgIHJlc3RhcnRfYXJl
YV9vZmZzZXQgKyB0aGUgb2Zmc2V0IG9mIHRoZQotCQkJCSAgIGZpbGVfc2l6ZSBhcmUgPiA1MTAg
dGhlbiBjb3JydXB0aW9uIGhhcwotCQkJCSAgIG9jY3VycmVkLiAgVGhpcyBpcyB0aGUgdmVyeSBm
aXJzdCBjaGVjayB3aGVuCi0JCQkJICAgc3RhcnRpbmcgd2l0aCB0aGUgcmVzdGFydF9hcmVhIGFz
IGlmIGl0Ci0JCQkJICAgZmFpbHMgaXQgbWVhbnMgdGhhdCBzb21lIG9mIHRoZSBhYm92ZSB2YWx1
ZXMKLQkJCQkgICB3aWxsIGJlIGNvcnJ1cHRlZCBieSB0aGUgbXVsdGkgc2VjdG9yCi0JCQkJICAg
dHJhbnNmZXIgcHJvdGVjdGlvbi4gIFRoZSBmaWxlX3NpemUgaGFzIHRvCi0JCQkJICAgYmUgcm91
bmRlZCBkb3duIHRvIGJlIGEgbXVsdGlwbGUgb2YgdGhlCi0JCQkJICAgbG9nX3BhZ2Vfc2l6ZSBp
biB0aGUgUkVTVEFSVF9QQUdFX0hFQURFUiBhbmQKLQkJCQkgICB0aGVuIGl0IGhhcyB0byBiZSBh
dCBsZWFzdCBiaWcgZW5vdWdoIHRvCi0JCQkJICAgc3RvcmUgdGhlIHR3byByZXN0YXJ0IHBhZ2Vz
IGFuZCA0OCAoMHgzMCkKLQkJCQkgICBsb2cgcmVjb3JkIHBhZ2VzLiAqLwotLyogMzIqLwlsZTMy
IGxhc3RfbHNuX2RhdGFfbGVuZ3RoOy8qIExlbmd0aCBvZiBkYXRhIG9mIGxhc3QgTFNOLCBub3Qg
aW5jbHVkaW5nCi0JCQkJICAgdGhlIGxvZyByZWNvcmQgaGVhZGVyLiAgT24gY3JlYXRlIHNldCB0
bwotCQkJCSAgIDAuICovCi0vKiAzNiovCWxlMTYgbG9nX3JlY29yZF9oZWFkZXJfbGVuZ3RoOy8q
IEJ5dGUgc2l6ZSBvZiB0aGUgbG9nIHJlY29yZCBoZWFkZXIuCi0JCQkJICAgSWYgdGhlIHZlcnNp
b24gbWF0Y2hlcyB0aGVuIGNoZWNrIHRoYXQgdGhlCi0JCQkJICAgdmFsdWUgb2YgbG9nX3JlY29y
ZF9oZWFkZXJfbGVuZ3RoIGlzIGEKLQkJCQkgICBtdWx0aXBsZSBvZiA4LCBpLmUuCi0JCQkJICAg
KGxvZ19yZWNvcmRfaGVhZGVyX2xlbmd0aCArIDcpICYgfjcgPT0KLQkJCQkgICBsb2dfcmVjb3Jk
X2hlYWRlcl9sZW5ndGguICBXaGVuIGNyZWF0aW5nIHNldAotCQkJCSAgIGl0IHRvIHNpemVvZihM
T0dfUkVDT1JEX0hFQURFUiksIGFsaWduZWQgdG8KLQkJCQkgICA4IGJ5dGVzLiAqLwotLyogMzgq
LwlsZTE2IGxvZ19wYWdlX2RhdGFfb2Zmc2V0Oy8qIE9mZnNldCB0byB0aGUgc3RhcnQgb2YgZGF0
YSBpbiBhIGxvZyByZWNvcmQKLQkJCQkgICBwYWdlLiAgTXVzdCBiZSBhIG11bHRpcGxlIG9mIDgu
ICBPbiBjcmVhdGUKLQkJCQkgICBzZXQgaXQgdG8gaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIHVwZGF0
ZQotCQkJCSAgIHNlcXVlbmNlIGFycmF5IG9mIHRoZSBsb2cgcmVjb3JkIHBhZ2UuICovCi0vKiA0
MCovCWxlMzIgcmVzdGFydF9sb2dfb3Blbl9jb3VudDsvKiBBIGNvdW50ZXIgdGhhdCBnZXRzIGlu
Y3JlbWVudGVkIGV2ZXJ5Ci0JCQkJICAgdGltZSB0aGUgbG9nZmlsZSBpcyByZXN0YXJ0ZWQgd2hp
Y2ggaGFwcGVucwotCQkJCSAgIGF0IG1vdW50IHRpbWUgd2hlbiB0aGUgbG9nZmlsZSBpcyBvcGVu
ZWQuCi0JCQkJICAgV2hlbiBjcmVhdGluZyBzZXQgdG8gYSByYW5kb20gdmFsdWUuICBXaW4yawot
CQkJCSAgIHNldHMgaXQgdG8gdGhlIGxvdyAzMiBiaXRzIG9mIHRoZSBjdXJyZW50Ci0JCQkJICAg
c3lzdGVtIHRpbWUgaW4gTlRGUyBmb3JtYXQgKHNlZSB0aW1lLmgpLiAqLwotLyogNDQqLwlsZTMy
IHJlc2VydmVkOwkJLyogUmVzZXJ2ZWQvYWxpZ25tZW50IHRvIDgtYnl0ZSBib3VuZGFyeS4gKi8K
LS8qIHNpemVvZigpID0gNDggKDB4MzApIGJ5dGVzICovCi19IF9fYXR0cmlidXRlX18gKChfX3Bh
Y2tlZF9fKSkgUkVTVEFSVF9BUkVBOwotCi0vKgotICogTG9nIGNsaWVudCByZWNvcmQuICBUaGUg
b2Zmc2V0IG9mIHRoaXMgcmVjb3JkIGlzIGZvdW5kIGJ5IGFkZGluZyB0aGUgb2Zmc2V0Ci0gKiBv
ZiB0aGUgUkVTVEFSVF9BUkVBIHRvIHRoZSBjbGllbnRfYXJyYXlfb2Zmc2V0IHZhbHVlIGZvdW5k
IGluIGl0LgotICovCi10eXBlZGVmIHN0cnVjdCB7Ci0vKk9mcyovCi0vKiAgMCovCWxlTFNOIG9s
ZGVzdF9sc247CS8qIE9sZGVzdCBMU04gbmVlZGVkIGJ5IHRoaXMgY2xpZW50LiAgT24gY3JlYXRl
Ci0JCQkJICAgc2V0IHRvIDAuICovCi0vKiAgOCovCWxlTFNOIGNsaWVudF9yZXN0YXJ0X2xzbjsv
KiBMU04gYXQgd2hpY2ggdGhpcyBjbGllbnQgbmVlZHMgdG8gcmVzdGFydAotCQkJCSAgIHRoZSB2
b2x1bWUsIGkuZS4gdGhlIGN1cnJlbnQgcG9zaXRpb24gd2l0aGluCi0JCQkJICAgdGhlIGxvZyBm
aWxlLiAgQXQgcHJlc2VudCwgaWYgY2xlYW4gdGhpcwotCQkJCSAgIHNob3VsZCA9IGN1cnJlbnRf
bHNuIGluIHJlc3RhcnQgYXJlYSBidXQgaXQKLQkJCQkgICBwcm9iYWJseSBhbHNvID0gY3VycmVu
dF9sc24gd2hlbiBkaXJ0eSBtb3N0Ci0JCQkJICAgb2YgdGhlIHRpbWUuICBBdCBjcmVhdGUgc2V0
IHRvIDAuICovCi0vKiAxNiovCWxlMTYgcHJldl9jbGllbnQ7CS8qIFRoZSBvZmZzZXQgdG8gdGhl
IHByZXZpb3VzIGxvZyBjbGllbnQgcmVjb3JkCi0JCQkJICAgaW4gdGhlIGFycmF5IG9mIGxvZyBj
bGllbnQgcmVjb3Jkcy4KLQkJCQkgICBMT0dGSUxFX05PX0NMSUVOVCBtZWFucyB0aGVyZSBpcyBu
byBwcmV2aW91cwotCQkJCSAgIGNsaWVudCByZWNvcmQsIGkuZS4gdGhpcyBpcyB0aGUgZmlyc3Qg
b25lLgotCQkJCSAgIFRoaXMgaXMgYWx3YXlzIExPR0ZJTEVfTk9fQ0xJRU5ULiAqLwotLyogMTgq
LwlsZTE2IG5leHRfY2xpZW50OwkvKiBUaGUgb2Zmc2V0IHRvIHRoZSBuZXh0IGxvZyBjbGllbnQg
cmVjb3JkIGluCi0JCQkJICAgdGhlIGFycmF5IG9mIGxvZyBjbGllbnQgcmVjb3Jkcy4KLQkJCQkg
ICBMT0dGSUxFX05PX0NMSUVOVCBtZWFucyB0aGVyZSBhcmUgbm8gbmV4dAotCQkJCSAgIGNsaWVu
dCByZWNvcmRzLCBpLmUuIHRoaXMgaXMgdGhlIGxhc3Qgb25lLgotCQkJCSAgIFRoaXMgaXMgYWx3
YXlzIExPR0ZJTEVfTk9fQ0xJRU5ULiAqLwotLyogMjAqLwlsZTE2IHNlcV9udW1iZXI7CS8qIE9u
IFdpbjJrIGFuZCBwcmVzdW1hYmx5IGVhcmxpZXIsIHRoaXMgaXMgc2V0Ci0JCQkJICAgdG8gemVy
byBldmVyeSB0aW1lIHRoZSBsb2dmaWxlIGlzIHJlc3RhcnRlZAotCQkJCSAgIGFuZCBpdCBpcyBp
bmNyZW1lbnRlZCB3aGVuIHRoZSBsb2dmaWxlIGlzCi0JCQkJICAgY2xvc2VkIGF0IGRpc21vdW50
IHRpbWUuICBUaHVzIGl0IGlzIDAgd2hlbgotCQkJCSAgIGRpcnR5IGFuZCAxIHdoZW4gY2xlYW4u
ICBPbiBXaW5YUCBhbmQKLQkJCQkgICBwcmVzdW1hYmx5IGxhdGVyLCB0aGlzIGlzIGFsd2F5cyAw
LiAqLwotLyogMjIqLwl1OCByZXNlcnZlZFs2XTsJCS8qIFJlc2VydmVkL2FsaWdubWVudC4gKi8K
LS8qIDI4Ki8JbGUzMiBjbGllbnRfbmFtZV9sZW5ndGg7LyogTGVuZ3RoIG9mIGNsaWVudCBuYW1l
IGluIGJ5dGVzLiAgU2hvdWxkCi0JCQkJICAgYWx3YXlzIGJlIDguICovCi0vKiAzMiovCW50ZnNj
aGFyIGNsaWVudF9uYW1lWzY0XTsvKiBOYW1lIG9mIHRoZSBjbGllbnQgaW4gVW5pY29kZS4gIFNo
b3VsZAotCQkJCSAgIGFsd2F5cyBiZSAiTlRGUyIgd2l0aCB0aGUgcmVtYWluaW5nIGJ5dGVzCi0J
CQkJICAgc2V0IHRvIDAuICovCi0vKiBzaXplb2YoKSA9IDE2MCAoMHhhMCkgYnl0ZXMgKi8KLX0g
X19hdHRyaWJ1dGVfXyAoKF9fcGFja2VkX18pKSBMT0dfQ0xJRU5UX1JFQ09SRDsKLQotZXh0ZXJu
IGJvb2wgbnRmc19jaGVja19sb2dmaWxlKHN0cnVjdCBpbm9kZSAqbG9nX3ZpLAotCQlSRVNUQVJU
X1BBR0VfSEVBREVSICoqcnApOwotCi1leHRlcm4gYm9vbCBudGZzX2lzX2xvZ2ZpbGVfY2xlYW4o
c3RydWN0IGlub2RlICpsb2dfdmksCi0JCWNvbnN0IFJFU1RBUlRfUEFHRV9IRUFERVIgKnJwKTsK
LQotZXh0ZXJuIGJvb2wgbnRmc19lbXB0eV9sb2dmaWxlKHN0cnVjdCBpbm9kZSAqbG9nX3ZpKTsK
LQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQotI2VuZGlmIC8qIF9MSU5VWF9OVEZTX0xPR0ZJTEVf
SCAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9tYWxsb2MuaCBiL2ZzL250ZnMvbWFsbG9jLmgKZGVs
ZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDcwNjg0MjU3MzVmMS4uMDAwMDAwMDAwMDAwCi0t
LSBhL2ZzL250ZnMvbWFsbG9jLmgKKysrIC9kZXYvbnVsbApAQCAtMSw3NyArMCwwIEBACi0vKiBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlciAqLwotLyoKLSAqIG1hbGxv
Yy5oIC0gTlRGUyBrZXJuZWwgbWVtb3J5IGhhbmRsaW5nLiBQYXJ0IG9mIHRoZSBMaW51eC1OVEZT
IHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDAxLTIwMDUgQW50b24gQWx0YXBhcm1h
a292Ci0gKi8KLQotI2lmbmRlZiBfTElOVVhfTlRGU19NQUxMT0NfSAotI2RlZmluZSBfTElOVVhf
TlRGU19NQUxMT0NfSAotCi0jaW5jbHVkZSA8bGludXgvdm1hbGxvYy5oPgotI2luY2x1ZGUgPGxp
bnV4L3NsYWIuaD4KLSNpbmNsdWRlIDxsaW51eC9oaWdobWVtLmg+Ci0KLS8qKgotICogX19udGZz
X21hbGxvYyAtIGFsbG9jYXRlIG1lbW9yeSBpbiBtdWx0aXBsZXMgb2YgcGFnZXMKLSAqIEBzaXpl
OgludW1iZXIgb2YgYnl0ZXMgdG8gYWxsb2NhdGUKLSAqIEBnZnBfbWFzazoJZXh0cmEgZmxhZ3Mg
Zm9yIHRoZSBhbGxvY2F0b3IKLSAqCi0gKiBJbnRlcm5hbCBmdW5jdGlvbi4gIFlvdSBwcm9iYWJs
eSB3YW50IG50ZnNfbWFsbG9jX25vZnMoKS4uLgotICoKLSAqIEFsbG9jYXRlcyBAc2l6ZSBieXRl
cyBvZiBtZW1vcnksIHJvdW5kZWQgdXAgdG8gbXVsdGlwbGVzIG9mIFBBR0VfU0laRSBhbmQKLSAq
IHJldHVybnMgYSBwb2ludGVyIHRvIHRoZSBhbGxvY2F0ZWQgbWVtb3J5LgotICoKLSAqIElmIHRo
ZXJlIHdhcyBpbnN1ZmZpY2llbnQgbWVtb3J5IHRvIGNvbXBsZXRlIHRoZSByZXF1ZXN0LCByZXR1
cm4gTlVMTC4KLSAqIERlcGVuZGluZyBvbiBAZ2ZwX21hc2sgdGhlIGFsbG9jYXRpb24gbWF5IGJl
IGd1YXJhbnRlZWQgdG8gc3VjY2VlZC4KLSAqLwotc3RhdGljIGlubGluZSB2b2lkICpfX250ZnNf
bWFsbG9jKHVuc2lnbmVkIGxvbmcgc2l6ZSwgZ2ZwX3QgZ2ZwX21hc2spCi17Ci0JaWYgKGxpa2Vs
eShzaXplIDw9IFBBR0VfU0laRSkpIHsKLQkJQlVHX09OKCFzaXplKTsKLQkJLyoga21hbGxvYygp
IGhhcyBwZXItQ1BVIGNhY2hlcyBzbyBpcyBmYXN0ZXIgZm9yIG5vdy4gKi8KLQkJcmV0dXJuIGtt
YWxsb2MoUEFHRV9TSVpFLCBnZnBfbWFzayAmIH5fX0dGUF9ISUdITUVNKTsKLQkJLyogcmV0dXJu
ICh2b2lkICopX19nZXRfZnJlZV9wYWdlKGdmcF9tYXNrKTsgKi8KLQl9Ci0JaWYgKGxpa2VseSgo
c2l6ZSA+PiBQQUdFX1NISUZUKSA8IHRvdGFscmFtX3BhZ2VzKCkpKQotCQlyZXR1cm4gX192bWFs
bG9jKHNpemUsIGdmcF9tYXNrKTsKLQlyZXR1cm4gTlVMTDsKLX0KLQotLyoqCi0gKiBudGZzX21h
bGxvY19ub2ZzIC0gYWxsb2NhdGUgbWVtb3J5IGluIG11bHRpcGxlcyBvZiBwYWdlcwotICogQHNp
emU6CW51bWJlciBvZiBieXRlcyB0byBhbGxvY2F0ZQotICoKLSAqIEFsbG9jYXRlcyBAc2l6ZSBi
eXRlcyBvZiBtZW1vcnksIHJvdW5kZWQgdXAgdG8gbXVsdGlwbGVzIG9mIFBBR0VfU0laRSBhbmQK
LSAqIHJldHVybnMgYSBwb2ludGVyIHRvIHRoZSBhbGxvY2F0ZWQgbWVtb3J5LgotICoKLSAqIElm
IHRoZXJlIHdhcyBpbnN1ZmZpY2llbnQgbWVtb3J5IHRvIGNvbXBsZXRlIHRoZSByZXF1ZXN0LCBy
ZXR1cm4gTlVMTC4KLSAqLwotc3RhdGljIGlubGluZSB2b2lkICpudGZzX21hbGxvY19ub2ZzKHVu
c2lnbmVkIGxvbmcgc2l6ZSkKLXsKLQlyZXR1cm4gX19udGZzX21hbGxvYyhzaXplLCBHRlBfTk9G
UyB8IF9fR0ZQX0hJR0hNRU0pOwotfQotCi0vKioKLSAqIG50ZnNfbWFsbG9jX25vZnNfbm9mYWls
IC0gYWxsb2NhdGUgbWVtb3J5IGluIG11bHRpcGxlcyBvZiBwYWdlcwotICogQHNpemU6CW51bWJl
ciBvZiBieXRlcyB0byBhbGxvY2F0ZQotICoKLSAqIEFsbG9jYXRlcyBAc2l6ZSBieXRlcyBvZiBt
ZW1vcnksIHJvdW5kZWQgdXAgdG8gbXVsdGlwbGVzIG9mIFBBR0VfU0laRSBhbmQKLSAqIHJldHVy
bnMgYSBwb2ludGVyIHRvIHRoZSBhbGxvY2F0ZWQgbWVtb3J5LgotICoKLSAqIFRoaXMgZnVuY3Rp
b24gZ3VhcmFudGVlcyB0aGF0IHRoZSBhbGxvY2F0aW9uIHdpbGwgc3VjY2VlZC4gIEl0IHdpbGwg
c2xlZXAKLSAqIGZvciBhcyBsb25nIGFzIGl0IHRha2VzIHRvIGNvbXBsZXRlIHRoZSBhbGxvY2F0
aW9uLgotICoKLSAqIElmIHRoZXJlIHdhcyBpbnN1ZmZpY2llbnQgbWVtb3J5IHRvIGNvbXBsZXRl
IHRoZSByZXF1ZXN0LCByZXR1cm4gTlVMTC4KLSAqLwotc3RhdGljIGlubGluZSB2b2lkICpudGZz
X21hbGxvY19ub2ZzX25vZmFpbCh1bnNpZ25lZCBsb25nIHNpemUpCi17Ci0JcmV0dXJuIF9fbnRm
c19tYWxsb2Moc2l6ZSwgR0ZQX05PRlMgfCBfX0dGUF9ISUdITUVNIHwgX19HRlBfTk9GQUlMKTsK
LX0KLQotc3RhdGljIGlubGluZSB2b2lkIG50ZnNfZnJlZSh2b2lkICphZGRyKQotewotCWt2ZnJl
ZShhZGRyKTsKLX0KLQotI2VuZGlmIC8qIF9MSU5VWF9OVEZTX01BTExPQ19IICovCmRpZmYgLS1n
aXQgYS9mcy9udGZzL21mdC5jIGIvZnMvbnRmcy9tZnQuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggNmZkMWRjNGIwOGM4Li4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9tZnQuYwor
KysgL2Rldi9udWxsCkBAIC0xLDI5MDcgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBtZnQuYyAtIE5URlMga2VybmVsIG1mdCByZWNv
cmQgb3BlcmF0aW9ucy4gUGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENv
cHlyaWdodCAoYykgMjAwMS0yMDEyIEFudG9uIEFsdGFwYXJtYWtvdiBhbmQgVHV4ZXJhIEluYy4K
LSAqIENvcHlyaWdodCAoYykgMjAwMiBSaWNoYXJkIFJ1c3NvbgotICovCi0KLSNpbmNsdWRlIDxs
aW51eC9idWZmZXJfaGVhZC5oPgotI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KLSNpbmNsdWRlIDxs
aW51eC9zd2FwLmg+Ci0jaW5jbHVkZSA8bGludXgvYmlvLmg+Ci0KLSNpbmNsdWRlICJhdHRyaWIu
aCIKLSNpbmNsdWRlICJhb3BzLmgiCi0jaW5jbHVkZSAiYml0bWFwLmgiCi0jaW5jbHVkZSAiZGVi
dWcuaCIKLSNpbmNsdWRlICJkaXIuaCIKLSNpbmNsdWRlICJsY25hbGxvYy5oIgotI2luY2x1ZGUg
Im1hbGxvYy5oIgotI2luY2x1ZGUgIm1mdC5oIgotI2luY2x1ZGUgIm50ZnMuaCIKLQotI2RlZmlu
ZSBNQVhfQkhTCShQQUdFX1NJWkUgLyBOVEZTX0JMT0NLX1NJWkUpCi0KLS8qKgotICogbWFwX21m
dF9yZWNvcmRfcGFnZSAtIG1hcCB0aGUgcGFnZSBpbiB3aGljaCBhIHNwZWNpZmljIG1mdCByZWNv
cmQgcmVzaWRlcwotICogQG5pOgkJbnRmcyBpbm9kZSB3aG9zZSBtZnQgcmVjb3JkIHBhZ2UgdG8g
bWFwCi0gKgotICogVGhpcyBtYXBzIHRoZSBwYWdlIGluIHdoaWNoIHRoZSBtZnQgcmVjb3JkIG9m
IHRoZSBudGZzIGlub2RlIEBuaSBpcyBzaXR1YXRlZAotICogYW5kIHJldHVybnMgYSBwb2ludGVy
IHRvIHRoZSBtZnQgcmVjb3JkIHdpdGhpbiB0aGUgbWFwcGVkIHBhZ2UuCi0gKgotICogUmV0dXJu
IHZhbHVlIG5lZWRzIHRvIGJlIGNoZWNrZWQgd2l0aCBJU19FUlIoKSBhbmQgaWYgdGhhdCBpcyB0
cnVlIFBUUl9FUlIoKQotICogY29udGFpbnMgdGhlIG5lZ2F0aXZlIGVycm9yIGNvZGUgcmV0dXJu
ZWQuCi0gKi8KLXN0YXRpYyBpbmxpbmUgTUZUX1JFQ09SRCAqbWFwX21mdF9yZWNvcmRfcGFnZShu
dGZzX2lub2RlICpuaSkKLXsKLQlsb2ZmX3QgaV9zaXplOwotCW50ZnNfdm9sdW1lICp2b2wgPSBu
aS0+dm9sOwotCXN0cnVjdCBpbm9kZSAqbWZ0X3ZpID0gdm9sLT5tZnRfaW5vOwotCXN0cnVjdCBw
YWdlICpwYWdlOwotCXVuc2lnbmVkIGxvbmcgaW5kZXgsIGVuZF9pbmRleDsKLQl1bnNpZ25lZCBv
ZnM7Ci0KLQlCVUdfT04obmktPnBhZ2UpOwotCS8qCi0JICogVGhlIGluZGV4IGludG8gdGhlIHBh
Z2UgY2FjaGUgYW5kIHRoZSBvZmZzZXQgd2l0aGluIHRoZSBwYWdlIGNhY2hlCi0JICogcGFnZSBv
ZiB0aGUgd2FudGVkIG1mdCByZWNvcmQuIEZJWE1FOiBXZSBuZWVkIHRvIGNoZWNrIGZvcgotCSAq
IG92ZXJmbG93aW5nIHRoZSB1bnNpZ25lZCBsb25nLCBidXQgSSBkb24ndCB0aGluayB3ZSB3b3Vs
ZCBldmVyIGdldAotCSAqIGhlcmUgaWYgdGhlIHZvbHVtZSB3YXMgdGhhdCBiaWcuLi4KLQkgKi8K
LQlpbmRleCA9ICh1NjQpbmktPm1mdF9ubyA8PCB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzID4+
Ci0JCQlQQUdFX1NISUZUOwotCW9mcyA9IChuaS0+bWZ0X25vIDw8IHZvbC0+bWZ0X3JlY29yZF9z
aXplX2JpdHMpICYgflBBR0VfTUFTSzsKLQotCWlfc2l6ZSA9IGlfc2l6ZV9yZWFkKG1mdF92aSk7
Ci0JLyogVGhlIG1heGltdW0gdmFsaWQgaW5kZXggaW50byB0aGUgcGFnZSBjYWNoZSBmb3IgJE1G
VCdzIGRhdGEuICovCi0JZW5kX2luZGV4ID0gaV9zaXplID4+IFBBR0VfU0hJRlQ7Ci0KLQkvKiBJ
ZiB0aGUgd2FudGVkIGluZGV4IGlzIG91dCBvZiBib3VuZHMgdGhlIG1mdCByZWNvcmQgZG9lc24n
dCBleGlzdC4gKi8KLQlpZiAodW5saWtlbHkoaW5kZXggPj0gZW5kX2luZGV4KSkgewotCQlpZiAo
aW5kZXggPiBlbmRfaW5kZXggfHwgKGlfc2l6ZSAmIH5QQUdFX01BU0spIDwgb2ZzICsKLQkJCQl2
b2wtPm1mdF9yZWNvcmRfc2l6ZSkgewotCQkJcGFnZSA9IEVSUl9QVFIoLUVOT0VOVCk7Ci0JCQlu
dGZzX2Vycm9yKHZvbC0+c2IsICJBdHRlbXB0IHRvIHJlYWQgbWZ0IHJlY29yZCAweCVseCwgIgot
CQkJCQkid2hpY2ggaXMgYmV5b25kIHRoZSBlbmQgb2YgdGhlIG1mdC4gICIKLQkJCQkJIlRoaXMg
aXMgcHJvYmFibHkgYSBidWcgaW4gdGhlIG50ZnMgIgotCQkJCQkiZHJpdmVyLiIsIG5pLT5tZnRf
bm8pOwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0JfQotCS8qIFJlYWQsIG1hcCwgYW5kIHBpbiB0
aGUgcGFnZS4gKi8KLQlwYWdlID0gbnRmc19tYXBfcGFnZShtZnRfdmktPmlfbWFwcGluZywgaW5k
ZXgpOwotCWlmICghSVNfRVJSKHBhZ2UpKSB7Ci0JCS8qIENhdGNoIG11bHRpIHNlY3RvciB0cmFu
c2ZlciBmaXh1cCBlcnJvcnMuICovCi0JCWlmIChsaWtlbHkobnRmc19pc19tZnRfcmVjb3JkcCgo
bGUzMiopKHBhZ2VfYWRkcmVzcyhwYWdlKSArCi0JCQkJb2ZzKSkpKSB7Ci0JCQluaS0+cGFnZSA9
IHBhZ2U7Ci0JCQluaS0+cGFnZV9vZnMgPSBvZnM7Ci0JCQlyZXR1cm4gcGFnZV9hZGRyZXNzKHBh
Z2UpICsgb2ZzOwotCQl9Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk1mdCByZWNvcmQgMHglbHgg
aXMgY29ycnVwdC4gICIKLQkJCQkiUnVuIGNoa2Rzay4iLCBuaS0+bWZ0X25vKTsKLQkJbnRmc191
bm1hcF9wYWdlKHBhZ2UpOwotCQlwYWdlID0gRVJSX1BUUigtRUlPKTsKLQkJTlZvbFNldEVycm9y
cyh2b2wpOwotCX0KLWVycl9vdXQ6Ci0JbmktPnBhZ2UgPSBOVUxMOwotCW5pLT5wYWdlX29mcyA9
IDA7Ci0JcmV0dXJuICh2b2lkKilwYWdlOwotfQotCi0vKioKLSAqIG1hcF9tZnRfcmVjb3JkIC0g
bWFwLCBwaW4gYW5kIGxvY2sgYW4gbWZ0IHJlY29yZAotICogQG5pOgkJbnRmcyBpbm9kZSB3aG9z
ZSBNRlQgcmVjb3JkIHRvIG1hcAotICoKLSAqIEZpcnN0LCB0YWtlIHRoZSBtcmVjX2xvY2sgbXV0
ZXguICBXZSBtaWdodCBub3cgYmUgc2xlZXBpbmcsIHdoaWxlIHdhaXRpbmcKLSAqIGZvciB0aGUg
bXV0ZXggaWYgaXQgd2FzIGFscmVhZHkgbG9ja2VkIGJ5IHNvbWVvbmUgZWxzZS4KLSAqCi0gKiBU
aGUgcGFnZSBvZiB0aGUgcmVjb3JkIGlzIG1hcHBlZCB1c2luZyBtYXBfbWZ0X3JlY29yZF9wYWdl
KCkgYmVmb3JlIGJlaW5nCi0gKiByZXR1cm5lZCB0byB0aGUgY2FsbGVyLgotICoKLSAqIFRoaXMg
aW4gdHVybiB1c2VzIG50ZnNfbWFwX3BhZ2UoKSB0byBnZXQgdGhlIHBhZ2UgY29udGFpbmluZyB0
aGUgd2FudGVkIG1mdAotICogcmVjb3JkIChpdCBpbiB0dXJuIGNhbGxzIHJlYWRfY2FjaGVfcGFn
ZSgpIHdoaWNoIHJlYWRzIGl0IGluIGZyb20gZGlzayBpZgotICogbmVjZXNzYXJ5LCBpbmNyZW1l
bnRzIHRoZSB1c2UgY291bnQgb24gdGhlIHBhZ2Ugc28gdGhhdCBpdCBjYW5ub3QgZGlzYXBwZWFy
Ci0gKiB1bmRlciB1cyBhbmQgcmV0dXJucyBhIHJlZmVyZW5jZSB0byB0aGUgcGFnZSBjYWNoZSBw
YWdlKS4KLSAqCi0gKiBJZiByZWFkX2NhY2hlX3BhZ2UoKSBpbnZva2VzIG50ZnNfcmVhZHBhZ2Uo
KSB0byBsb2FkIHRoZSBwYWdlIGZyb20gZGlzaywgaXQKLSAqIHNldHMgUEdfbG9ja2VkIGFuZCBj
bGVhcnMgUEdfdXB0b2RhdGUgb24gdGhlIHBhZ2UuIE9uY2UgSS9PIGhhcyBjb21wbGV0ZWQKLSAq
IGFuZCB0aGUgcG9zdC1yZWFkIG1zdCBmaXh1cHMgb24gZWFjaCBtZnQgcmVjb3JkIGluIHRoZSBw
YWdlIGhhdmUgYmVlbgotICogcGVyZm9ybWVkLCB0aGUgcGFnZSBnZXRzIFBHX3VwdG9kYXRlIHNl
dCBhbmQgUEdfbG9ja2VkIGNsZWFyZWQgKHRoaXMgaXMgZG9uZQotICogaW4gb3VyIGFzeW5jaHJv
bm91cyBJL08gY29tcGxldGlvbiBoYW5kbGVyIGVuZF9idWZmZXJfcmVhZF9tZnRfYXN5bmMoKSku
Ci0gKiBudGZzX21hcF9wYWdlKCkgd2FpdHMgZm9yIFBHX2xvY2tlZCB0byBiZWNvbWUgY2xlYXIg
YW5kIGNoZWNrcyBpZgotICogUEdfdXB0b2RhdGUgaXMgc2V0IGFuZCByZXR1cm5zIGFuIGVycm9y
IGNvZGUgaWYgbm90LiBUaGlzIHByb3ZpZGVzCi0gKiBzdWZmaWNpZW50IHByb3RlY3Rpb24gYWdh
aW5zdCByYWNlcyB3aGVuIHJlYWRpbmcvdXNpbmcgdGhlIHBhZ2UuCi0gKgotICogSG93ZXZlciB0
aGVyZSBpcyB0aGUgd3JpdGUgbWFwcGluZyB0byB0aGluayBhYm91dC4gRG9pbmcgdGhlIGFib3Zl
IGRlc2NyaWJlZAotICogY2hlY2tpbmcgaGVyZSB3aWxsIGJlIGZpbmUsIGJlY2F1c2Ugd2hlbiBp
bml0aWF0aW5nIHRoZSB3cml0ZSB3ZSB3aWxsIHNldAotICogUEdfbG9ja2VkIGFuZCBjbGVhciBQ
R191cHRvZGF0ZSBtYWtpbmcgc3VyZSBub2JvZHkgaXMgdG91Y2hpbmcgdGhlIHBhZ2UKLSAqIGNv
bnRlbnRzLiBEb2luZyB0aGUgbG9ja2luZyB0aGlzIHdheSBtZWFucyB0aGF0IHRoZSBjb21taXQg
dG8gZGlzayBjb2RlIGluCi0gKiB0aGUgcGFnZSBjYWNoZSBjb2RlIHBhdGhzIGlzIGF1dG9tYXRp
Y2FsbHkgc3VmZmljaWVudGx5IGxvY2tlZCB3aXRoIHVzIGFzCi0gKiB3ZSB3aWxsIG5vdCB0b3Vj
aCBhIHBhZ2UgdGhhdCBoYXMgYmVlbiBsb2NrZWQgb3IgaXMgbm90IHVwdG9kYXRlLiBUaGUgb25s
eQotICogbG9ja2luZyBwcm9ibGVtIHRoZW4gaXMgdGhlbSBsb2NraW5nIHRoZSBwYWdlIHdoaWxl
IHdlIGFyZSBhY2Nlc3NpbmcgaXQuCi0gKgotICogU28gdGhhdCBjb2RlIHdpbGwgZW5kIHVwIGhh
dmluZyB0byBvd24gdGhlIG1yZWNfbG9jayBvZiBhbGwgbWZ0Ci0gKiByZWNvcmRzL2lub2RlcyBw
cmVzZW50IGluIHRoZSBwYWdlIGJlZm9yZSBJL08gY2FuIHByb2NlZWQuIEluIHRoYXQgY2FzZSB3
ZQotICogd291bGRuJ3QgbmVlZCB0byBib3RoZXIgd2l0aCBQR19sb2NrZWQgYW5kIFBHX3VwdG9k
YXRlIGFzIG5vYm9keSB3aWxsIGJlCi0gKiBhY2Nlc3NpbmcgYW55dGhpbmcgd2l0aG91dCBvd25p
bmcgdGhlIG1yZWNfbG9jayBtdXRleC4gIEJ1dCB3ZSBkbyBuZWVkIHRvCi0gKiB1c2UgdGhlbSBi
ZWNhdXNlIG9mIHRoZSByZWFkX2NhY2hlX3BhZ2UoKSBpbnZvY2F0aW9uIGFuZCB0aGUgY29kZSBi
ZWNvbWVzIHNvCi0gKiBtdWNoIHNpbXBsZXIgdGhpcyB3YXkgdGhhdCBpdCBpcyB3ZWxsIHdvcnRo
IGl0LgotICoKLSAqIFRoZSBtZnQgcmVjb3JkIGlzIG5vdyBvdXJzIGFuZCB3ZSByZXR1cm4gYSBw
b2ludGVyIHRvIGl0LiBZb3UgbmVlZCB0byBjaGVjawotICogdGhlIHJldHVybmVkIHBvaW50ZXIg
d2l0aCBJU19FUlIoKSBhbmQgaWYgdGhhdCBpcyB0cnVlLCBQVFJfRVJSKCkgd2lsbCByZXR1cm4K
LSAqIHRoZSBlcnJvciBjb2RlLgotICoKLSAqIE5PVEU6IENhbGxlciBpcyByZXNwb25zaWJsZSBm
b3Igc2V0dGluZyB0aGUgbWZ0IHJlY29yZCBkaXJ0eSBiZWZvcmUgY2FsbGluZwotICogdW5tYXBf
bWZ0X3JlY29yZCgpLiBUaGlzIGlzIG9idmlvdXNseSBvbmx5IG5lY2Vzc2FyeSBpZiB0aGUgY2Fs
bGVyIHJlYWxseQotICogbW9kaWZpZWQgdGhlIG1mdCByZWNvcmQuLi4KLSAqIFE6IERvIHdlIHdh
bnQgdG8gcmVjeWNsZSBvbmUgb2YgdGhlIFZGUyBpbm9kZSBzdGF0ZSBiaXRzIGluc3RlYWQ/Ci0g
KiBBOiBObywgdGhlIGlub2RlIG9uZXMgbWVhbiB3ZSB3YW50IHRvIGNoYW5nZSB0aGUgbWZ0IHJl
Y29yZCwgbm90IHdlIHdhbnQgdG8KLSAqIHdyaXRlIGl0IG91dC4KLSAqLwotTUZUX1JFQ09SRCAq
bWFwX21mdF9yZWNvcmQobnRmc19pbm9kZSAqbmkpCi17Ci0JTUZUX1JFQ09SRCAqbTsKLQotCW50
ZnNfZGVidWcoIkVudGVyaW5nIGZvciBtZnRfbm8gMHglbHguIiwgbmktPm1mdF9ubyk7Ci0KLQkv
KiBNYWtlIHN1cmUgdGhlIG50ZnMgaW5vZGUgZG9lc24ndCBnbyBhd2F5LiAqLwotCWF0b21pY19p
bmMoJm5pLT5jb3VudCk7Ci0KLQkvKiBTZXJpYWxpemUgYWNjZXNzIHRvIHRoaXMgbWZ0IHJlY29y
ZC4gKi8KLQltdXRleF9sb2NrKCZuaS0+bXJlY19sb2NrKTsKLQotCW0gPSBtYXBfbWZ0X3JlY29y
ZF9wYWdlKG5pKTsKLQlpZiAoIUlTX0VSUihtKSkKLQkJcmV0dXJuIG07Ci0KLQltdXRleF91bmxv
Y2soJm5pLT5tcmVjX2xvY2spOwotCWF0b21pY19kZWMoJm5pLT5jb3VudCk7Ci0JbnRmc19lcnJv
cihuaS0+dm9sLT5zYiwgIkZhaWxlZCB3aXRoIGVycm9yIGNvZGUgJWx1LiIsIC1QVFJfRVJSKG0p
KTsKLQlyZXR1cm4gbTsKLX0KLQotLyoqCi0gKiB1bm1hcF9tZnRfcmVjb3JkX3BhZ2UgLSB1bm1h
cCB0aGUgcGFnZSBpbiB3aGljaCBhIHNwZWNpZmljIG1mdCByZWNvcmQgcmVzaWRlcwotICogQG5p
OgkJbnRmcyBpbm9kZSB3aG9zZSBtZnQgcmVjb3JkIHBhZ2UgdG8gdW5tYXAKLSAqCi0gKiBUaGlz
IHVubWFwcyB0aGUgcGFnZSBpbiB3aGljaCB0aGUgbWZ0IHJlY29yZCBvZiB0aGUgbnRmcyBpbm9k
ZSBAbmkgaXMKLSAqIHNpdHVhdGVkIGFuZCByZXR1cm5zLiBUaGlzIGlzIGEgTk9PUCBpZiBoaWdo
bWVtIGlzIG5vdCBjb25maWd1cmVkLgotICoKLSAqIFRoZSB1bm1hcCBoYXBwZW5zIHZpYSBudGZz
X3VubWFwX3BhZ2UoKSB3aGljaCBpbiB0dXJuIGRlY3JlbWVudHMgdGhlIHVzZQotICogY291bnQg
b24gdGhlIHBhZ2UgdGh1cyByZWxlYXNpbmcgaXQgZnJvbSB0aGUgcGlubmVkIHN0YXRlLgotICoK
LSAqIFdlIGRvIG5vdCBhY3R1YWxseSB1bm1hcCB0aGUgcGFnZSBmcm9tIG1lbW9yeSBvZiBjb3Vy
c2UsIGFzIHRoYXQgd2lsbCBiZQotICogZG9uZSBieSB0aGUgcGFnZSBjYWNoZSBjb2RlIGl0c2Vs
ZiB3aGVuIG1lbW9yeSBwcmVzc3VyZSBpbmNyZWFzZXMgb3IKLSAqIHdoYXRldmVyLgotICovCi1z
dGF0aWMgaW5saW5lIHZvaWQgdW5tYXBfbWZ0X3JlY29yZF9wYWdlKG50ZnNfaW5vZGUgKm5pKQot
ewotCUJVR19PTighbmktPnBhZ2UpOwotCi0JLy8gVE9ETzogSWYgZGlydHksIGJsYWguLi4KLQlu
dGZzX3VubWFwX3BhZ2UobmktPnBhZ2UpOwotCW5pLT5wYWdlID0gTlVMTDsKLQluaS0+cGFnZV9v
ZnMgPSAwOwotCXJldHVybjsKLX0KLQotLyoqCi0gKiB1bm1hcF9tZnRfcmVjb3JkIC0gcmVsZWFz
ZSBhIG1hcHBlZCBtZnQgcmVjb3JkCi0gKiBAbmk6CQludGZzIGlub2RlIHdob3NlIE1GVCByZWNv
cmQgdG8gdW5tYXAKLSAqCi0gKiBXZSByZWxlYXNlIHRoZSBwYWdlIG1hcHBpbmcgYW5kIHRoZSBt
cmVjX2xvY2sgbXV0ZXggd2hpY2ggdW5tYXBzIHRoZSBtZnQKLSAqIHJlY29yZCBhbmQgcmVsZWFz
ZXMgaXQgZm9yIG90aGVycyB0byBnZXQgaG9sZCBvZi4gV2UgYWxzbyByZWxlYXNlIHRoZSBudGZz
Ci0gKiBpbm9kZSBieSBkZWNyZW1lbnRpbmcgdGhlIG50ZnMgaW5vZGUgcmVmZXJlbmNlIGNvdW50
LgotICoKLSAqIE5PVEU6IElmIGNhbGxlciBoYXMgbW9kaWZpZWQgdGhlIG1mdCByZWNvcmQsIGl0
IGlzIGltcGVyYXRpdmUgdG8gc2V0IHRoZSBtZnQKLSAqIHJlY29yZCBkaXJ0eSBCRUZPUkUgY2Fs
bGluZyB1bm1hcF9tZnRfcmVjb3JkKCkuCi0gKi8KLXZvaWQgdW5tYXBfbWZ0X3JlY29yZChudGZz
X2lub2RlICpuaSkKLXsKLQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IG5pLT5wYWdlOwotCi0JQlVHX09O
KCFwYWdlKTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBtZnRfbm8gMHglbHguIiwgbmkt
Pm1mdF9ubyk7Ci0KLQl1bm1hcF9tZnRfcmVjb3JkX3BhZ2UobmkpOwotCW11dGV4X3VubG9jaygm
bmktPm1yZWNfbG9jayk7Ci0JYXRvbWljX2RlYygmbmktPmNvdW50KTsKLQkvKgotCSAqIElmIHB1
cmUgbnRmc19pbm9kZSwgaS5lLiBubyB2ZnMgaW5vZGUgYXR0YWNoZWQsIHdlIGxlYXZlIGl0IHRv
Ci0JICogbnRmc19jbGVhcl9leHRlbnRfaW5vZGUoKSBpbiB0aGUgZXh0ZW50IGlub2RlIGNhc2Us
IGFuZCB0byB0aGUKLQkgKiBjYWxsZXIgaW4gdGhlIG5vbi1leHRlbnQsIHlldCBwdXJlIG50ZnMg
aW5vZGUgY2FzZSwgdG8gZG8gdGhlIGFjdHVhbAotCSAqIHRlYXIgZG93biBvZiBhbGwgc3RydWN0
dXJlcyBhbmQgZnJlZWluZyBvZiBhbGwgYWxsb2NhdGVkIG1lbW9yeS4KLQkgKi8KLQlyZXR1cm47
Ci19Ci0KLS8qKgotICogbWFwX2V4dGVudF9tZnRfcmVjb3JkIC0gbG9hZCBhbiBleHRlbnQgaW5v
ZGUgYW5kIGF0dGFjaCBpdCB0byBpdHMgYmFzZQotICogQGJhc2Vfbmk6CWJhc2UgbnRmcyBpbm9k
ZQotICogQG1yZWY6CW1mdCByZWZlcmVuY2Ugb2YgdGhlIGV4dGVudCBpbm9kZSB0byBsb2FkCi0g
KiBAbnRmc19pbm86CW9uIHN1Y2Nlc3NmdWwgcmV0dXJuLCBwb2ludGVyIHRvIHRoZSBudGZzX2lu
b2RlIHN0cnVjdHVyZQotICoKLSAqIExvYWQgdGhlIGV4dGVudCBtZnQgcmVjb3JkIEBtcmVmIGFu
ZCBhdHRhY2ggaXQgdG8gaXRzIGJhc2UgaW5vZGUgQGJhc2VfbmkuCi0gKiBSZXR1cm4gdGhlIG1h
cHBlZCBleHRlbnQgbWZ0IHJlY29yZCBpZiBJU19FUlIocmVzdWx0KSBpcyBmYWxzZS4gIE90aGVy
d2lzZQotICogUFRSX0VSUihyZXN1bHQpIGdpdmVzIHRoZSBuZWdhdGl2ZSBlcnJvciBjb2RlLgot
ICoKLSAqIE9uIHN1Y2Nlc3NmdWwgcmV0dXJuLCBAbnRmc19pbm8gY29udGFpbnMgYSBwb2ludGVy
IHRvIHRoZSBudGZzX2lub2RlCi0gKiBzdHJ1Y3R1cmUgb2YgdGhlIG1hcHBlZCBleHRlbnQgaW5v
ZGUuCi0gKi8KLU1GVF9SRUNPUkQgKm1hcF9leHRlbnRfbWZ0X3JlY29yZChudGZzX2lub2RlICpi
YXNlX25pLCBNRlRfUkVGIG1yZWYsCi0JCW50ZnNfaW5vZGUgKipudGZzX2lubykKLXsKLQlNRlRf
UkVDT1JEICptOwotCW50ZnNfaW5vZGUgKm5pID0gTlVMTDsKLQludGZzX2lub2RlICoqZXh0ZW50
X25pcyA9IE5VTEw7Ci0JaW50IGk7Ci0JdW5zaWduZWQgbG9uZyBtZnRfbm8gPSBNUkVGKG1yZWYp
OwotCXUxNiBzZXFfbm8gPSBNU0VRTk8obXJlZik7Ci0JYm9vbCBkZXN0cm95X25pID0gZmFsc2U7
Ci0KLQludGZzX2RlYnVnKCJNYXBwaW5nIGV4dGVudCBtZnQgcmVjb3JkIDB4JWx4IChiYXNlIG1m
dCByZWNvcmQgMHglbHgpLiIsCi0JCQltZnRfbm8sIGJhc2VfbmktPm1mdF9ubyk7Ci0JLyogTWFr
ZSBzdXJlIHRoZSBiYXNlIG50ZnMgaW5vZGUgZG9lc24ndCBnbyBhd2F5LiAqLwotCWF0b21pY19p
bmMoJmJhc2VfbmktPmNvdW50KTsKLQkvKgotCSAqIENoZWNrIGlmIHRoaXMgZXh0ZW50IGlub2Rl
IGhhcyBhbHJlYWR5IGJlZW4gYWRkZWQgdG8gdGhlIGJhc2UgaW5vZGUsCi0JICogaW4gd2hpY2gg
Y2FzZSBqdXN0IHJldHVybiBpdC4gSWYgbm90IGZvdW5kLCBhZGQgaXQgdG8gdGhlIGJhc2UKLQkg
KiBpbm9kZSBiZWZvcmUgcmV0dXJuaW5nIGl0LgotCSAqLwotCW11dGV4X2xvY2soJmJhc2Vfbmkt
PmV4dGVudF9sb2NrKTsKLQlpZiAoYmFzZV9uaS0+bnJfZXh0ZW50cyA+IDApIHsKLQkJZXh0ZW50
X25pcyA9IGJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9zOwotCQlmb3IgKGkgPSAwOyBpIDwg
YmFzZV9uaS0+bnJfZXh0ZW50czsgaSsrKSB7Ci0JCQlpZiAobWZ0X25vICE9IGV4dGVudF9uaXNb
aV0tPm1mdF9ubykKLQkJCQljb250aW51ZTsKLQkJCW5pID0gZXh0ZW50X25pc1tpXTsKLQkJCS8q
IE1ha2Ugc3VyZSB0aGUgbnRmcyBpbm9kZSBkb2Vzbid0IGdvIGF3YXkuICovCi0JCQlhdG9taWNf
aW5jKCZuaS0+Y291bnQpOwotCQkJYnJlYWs7Ci0JCX0KLQl9Ci0JaWYgKGxpa2VseShuaSAhPSBO
VUxMKSkgewotCQltdXRleF91bmxvY2soJmJhc2VfbmktPmV4dGVudF9sb2NrKTsKLQkJYXRvbWlj
X2RlYygmYmFzZV9uaS0+Y291bnQpOwotCQkvKiBXZSBmb3VuZCB0aGUgcmVjb3JkOyBqdXN0IGhh
dmUgdG8gbWFwIGFuZCByZXR1cm4gaXQuICovCi0JCW0gPSBtYXBfbWZ0X3JlY29yZChuaSk7Ci0J
CS8qIG1hcF9tZnRfcmVjb3JkKCkgaGFzIGluY3JlbWVudGVkIHRoaXMgb24gc3VjY2Vzcy4gKi8K
LQkJYXRvbWljX2RlYygmbmktPmNvdW50KTsKLQkJaWYgKCFJU19FUlIobSkpIHsKLQkJCS8qIFZl
cmlmeSB0aGUgc2VxdWVuY2UgbnVtYmVyLiAqLwotCQkJaWYgKGxpa2VseShsZTE2X3RvX2NwdSht
LT5zZXF1ZW5jZV9udW1iZXIpID09IHNlcV9ubykpIHsKLQkJCQludGZzX2RlYnVnKCJEb25lIDEu
Iik7Ci0JCQkJKm50ZnNfaW5vID0gbmk7Ci0JCQkJcmV0dXJuIG07Ci0JCQl9Ci0JCQl1bm1hcF9t
ZnRfcmVjb3JkKG5pKTsKLQkJCW50ZnNfZXJyb3IoYmFzZV9uaS0+dm9sLT5zYiwgIkZvdW5kIHN0
YWxlIGV4dGVudCBtZnQgIgotCQkJCQkicmVmZXJlbmNlISBDb3JydXB0IGZpbGVzeXN0ZW0uICIK
LQkJCQkJIlJ1biBjaGtkc2suIik7Ci0JCQlyZXR1cm4gRVJSX1BUUigtRUlPKTsKLQkJfQotbWFw
X2Vycl9vdXQ6Ci0JCW50ZnNfZXJyb3IoYmFzZV9uaS0+dm9sLT5zYiwgIkZhaWxlZCB0byBtYXAg
ZXh0ZW50ICIKLQkJCQkibWZ0IHJlY29yZCwgZXJyb3IgY29kZSAlbGQuIiwgLVBUUl9FUlIobSkp
OwotCQlyZXR1cm4gbTsKLQl9Ci0JLyogUmVjb3JkIHdhc24ndCB0aGVyZS4gR2V0IGEgbmV3IG50
ZnMgaW5vZGUgYW5kIGluaXRpYWxpemUgaXQuICovCi0JbmkgPSBudGZzX25ld19leHRlbnRfaW5v
ZGUoYmFzZV9uaS0+dm9sLT5zYiwgbWZ0X25vKTsKLQlpZiAodW5saWtlbHkoIW5pKSkgewotCQlt
dXRleF91bmxvY2soJmJhc2VfbmktPmV4dGVudF9sb2NrKTsKLQkJYXRvbWljX2RlYygmYmFzZV9u
aS0+Y291bnQpOwotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKLQl9Ci0JbmktPnZvbCA9IGJh
c2VfbmktPnZvbDsKLQluaS0+c2VxX25vID0gc2VxX25vOwotCW5pLT5ucl9leHRlbnRzID0gLTE7
Ci0JbmktPmV4dC5iYXNlX250ZnNfaW5vID0gYmFzZV9uaTsKLQkvKiBOb3cgbWFwIHRoZSByZWNv
cmQuICovCi0JbSA9IG1hcF9tZnRfcmVjb3JkKG5pKTsKLQlpZiAoSVNfRVJSKG0pKSB7Ci0JCW11
dGV4X3VubG9jaygmYmFzZV9uaS0+ZXh0ZW50X2xvY2spOwotCQlhdG9taWNfZGVjKCZiYXNlX25p
LT5jb3VudCk7Ci0JCW50ZnNfY2xlYXJfZXh0ZW50X2lub2RlKG5pKTsKLQkJZ290byBtYXBfZXJy
X291dDsKLQl9Ci0JLyogVmVyaWZ5IHRoZSBzZXF1ZW5jZSBudW1iZXIgaWYgaXQgaXMgcHJlc2Vu
dC4gKi8KLQlpZiAoc2VxX25vICYmIChsZTE2X3RvX2NwdShtLT5zZXF1ZW5jZV9udW1iZXIpICE9
IHNlcV9ubykpIHsKLQkJbnRmc19lcnJvcihiYXNlX25pLT52b2wtPnNiLCAiRm91bmQgc3RhbGUg
ZXh0ZW50IG1mdCAiCi0JCQkJInJlZmVyZW5jZSEgQ29ycnVwdCBmaWxlc3lzdGVtLiBSdW4gY2hr
ZHNrLiIpOwotCQlkZXN0cm95X25pID0gdHJ1ZTsKLQkJbSA9IEVSUl9QVFIoLUVJTyk7Ci0JCWdv
dG8gdW5tX2Vycl9vdXQ7Ci0JfQotCS8qIEF0dGFjaCBleHRlbnQgaW5vZGUgdG8gYmFzZSBpbm9k
ZSwgcmVhbGxvY2F0aW5nIG1lbW9yeSBpZiBuZWVkZWQuICovCi0JaWYgKCEoYmFzZV9uaS0+bnJf
ZXh0ZW50cyAmIDMpKSB7Ci0JCW50ZnNfaW5vZGUgKip0bXA7Ci0JCWludCBuZXdfc2l6ZSA9IChi
YXNlX25pLT5ucl9leHRlbnRzICsgNCkgKiBzaXplb2YobnRmc19pbm9kZSAqKTsKLQotCQl0bXAg
PSBrbWFsbG9jKG5ld19zaXplLCBHRlBfTk9GUyk7Ci0JCWlmICh1bmxpa2VseSghdG1wKSkgewot
CQkJbnRmc19lcnJvcihiYXNlX25pLT52b2wtPnNiLCAiRmFpbGVkIHRvIGFsbG9jYXRlICIKLQkJ
CQkJImludGVybmFsIGJ1ZmZlci4iKTsKLQkJCWRlc3Ryb3lfbmkgPSB0cnVlOwotCQkJbSA9IEVS
Ul9QVFIoLUVOT01FTSk7Ci0JCQlnb3RvIHVubV9lcnJfb3V0OwotCQl9Ci0JCWlmIChiYXNlX25p
LT5ucl9leHRlbnRzKSB7Ci0JCQlCVUdfT04oIWJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9z
KTsKLQkJCW1lbWNweSh0bXAsIGJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9zLCBuZXdfc2l6
ZSAtCi0JCQkJCTQgKiBzaXplb2YobnRmc19pbm9kZSAqKSk7Ci0JCQlrZnJlZShiYXNlX25pLT5l
eHQuZXh0ZW50X250ZnNfaW5vcyk7Ci0JCX0KLQkJYmFzZV9uaS0+ZXh0LmV4dGVudF9udGZzX2lu
b3MgPSB0bXA7Ci0JfQotCWJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9zW2Jhc2VfbmktPm5y
X2V4dGVudHMrK10gPSBuaTsKLQltdXRleF91bmxvY2soJmJhc2VfbmktPmV4dGVudF9sb2NrKTsK
LQlhdG9taWNfZGVjKCZiYXNlX25pLT5jb3VudCk7Ci0JbnRmc19kZWJ1ZygiRG9uZSAyLiIpOwot
CSpudGZzX2lubyA9IG5pOwotCXJldHVybiBtOwotdW5tX2Vycl9vdXQ6Ci0JdW5tYXBfbWZ0X3Jl
Y29yZChuaSk7Ci0JbXV0ZXhfdW5sb2NrKCZiYXNlX25pLT5leHRlbnRfbG9jayk7Ci0JYXRvbWlj
X2RlYygmYmFzZV9uaS0+Y291bnQpOwotCS8qCi0JICogSWYgdGhlIGV4dGVudCBpbm9kZSB3YXMg
bm90IGF0dGFjaGVkIHRvIHRoZSBiYXNlIGlub2RlIHdlIG5lZWQgdG8KLQkgKiByZWxlYXNlIGl0
IG9yIHdlIHdpbGwgbGVhayBtZW1vcnkuCi0JICovCi0JaWYgKGRlc3Ryb3lfbmkpCi0JCW50ZnNf
Y2xlYXJfZXh0ZW50X2lub2RlKG5pKTsKLQlyZXR1cm4gbTsKLX0KLQotI2lmZGVmIE5URlNfUlcK
LQotLyoqCi0gKiBfX21hcmtfbWZ0X3JlY29yZF9kaXJ0eSAtIHNldCB0aGUgbWZ0IHJlY29yZCBh
bmQgdGhlIHBhZ2UgY29udGFpbmluZyBpdCBkaXJ0eQotICogQG5pOgkJbnRmcyBpbm9kZSBkZXNj
cmliaW5nIHRoZSBtYXBwZWQgbWZ0IHJlY29yZAotICoKLSAqIEludGVybmFsIGZ1bmN0aW9uLiAg
VXNlcnMgc2hvdWxkIGNhbGwgbWFya19tZnRfcmVjb3JkX2RpcnR5KCkgaW5zdGVhZC4KLSAqCi0g
KiBTZXQgdGhlIG1hcHBlZCAoZXh0ZW50KSBtZnQgcmVjb3JkIG9mIHRoZSAoYmFzZSBvciBleHRl
bnQpIG50ZnMgaW5vZGUgQG5pLAotICogYXMgd2VsbCBhcyB0aGUgcGFnZSBjb250YWluaW5nIHRo
ZSBtZnQgcmVjb3JkLCBkaXJ0eS4gIEFsc28sIG1hcmsgdGhlIGJhc2UKLSAqIHZmcyBpbm9kZSBk
aXJ0eS4gIFRoaXMgZW5zdXJlcyB0aGF0IGFueSBjaGFuZ2VzIHRvIHRoZSBtZnQgcmVjb3JkIGFy
ZQotICogd3JpdHRlbiBvdXQgdG8gZGlzay4KLSAqCi0gKiBOT1RFOiAgV2Ugb25seSBzZXQgSV9E
SVJUWV9EQVRBU1lOQyAoYW5kIG5vdCBJX0RJUlRZX1BBR0VTKQotICogb24gdGhlIGJhc2UgdmZz
IGlub2RlLCBiZWNhdXNlIGV2ZW4gdGhvdWdoIGZpbGUgZGF0YSBtYXkgaGF2ZSBiZWVuIG1vZGlm
aWVkLAotICogaXQgaXMgZGlydHkgaW4gdGhlIGlub2RlIG1ldGEgZGF0YSByYXRoZXIgdGhhbiB0
aGUgZGF0YSBwYWdlIGNhY2hlIG9mIHRoZQotICogaW5vZGUsIGFuZCB0aHVzIHRoZXJlIGFyZSBu
byBkYXRhIHBhZ2VzIHRoYXQgbmVlZCB3cml0aW5nIG91dC4gIFRoZXJlZm9yZSwgYQotICogZnVs
bCBtYXJrX2lub2RlX2RpcnR5KCkgaXMgb3ZlcmtpbGwuICBBIG1hcmtfaW5vZGVfZGlydHlfc3lu
YygpLCBvbiB0aGUKLSAqIG90aGVyIGhhbmQsIGlzIG5vdCBzdWZmaWNpZW50LCBiZWNhdXNlIC0+
d3JpdGVfaW5vZGUgbmVlZHMgdG8gYmUgY2FsbGVkIGV2ZW4KLSAqIGluIGNhc2Ugb2YgZmRhdGFz
eW5jLiBUaGlzIG5lZWRzIHRvIGhhcHBlbiBvciB0aGUgZmlsZSBkYXRhIHdvdWxkIG5vdAotICog
bmVjZXNzYXJpbHkgaGl0IHRoZSBkZXZpY2Ugc3luY2hyb25vdXNseSwgZXZlbiB0aG91Z2ggdGhl
IHZmcyBpbm9kZSBoYXMgdGhlCi0gKiBPX1NZTkMgZmxhZyBzZXQuICBBbHNvLCBJX0RJUlRZX0RB
VEFTWU5DIHNpbXBseSAiZmVlbHMiIGJldHRlciB0aGFuIGp1c3QKLSAqIElfRElSVFlfU1lOQywg
c2luY2UgdGhlIGZpbGUgZGF0YSBoYXMgbm90IGFjdHVhbGx5IGhpdCB0aGUgYmxvY2sgZGV2aWNl
IHlldCwKLSAqIHdoaWNoIGlzIG5vdCB3aGF0IElfRElSVFlfU1lOQyBvbiBpdHMgb3duIHdvdWxk
IHN1Z2dlc3QuCi0gKi8KLXZvaWQgX19tYXJrX21mdF9yZWNvcmRfZGlydHkobnRmc19pbm9kZSAq
bmkpCi17Ci0JbnRmc19pbm9kZSAqYmFzZV9uaTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZv
ciBpbm9kZSAweCVseC4iLCBuaS0+bWZ0X25vKTsKLQlCVUdfT04oTklub0F0dHIobmkpKTsKLQlt
YXJrX250ZnNfcmVjb3JkX2RpcnR5KG5pLT5wYWdlLCBuaS0+cGFnZV9vZnMpOwotCS8qIERldGVy
bWluZSB0aGUgYmFzZSB2ZnMgaW5vZGUgYW5kIG1hcmsgaXQgZGlydHksIHRvby4gKi8KLQltdXRl
eF9sb2NrKCZuaS0+ZXh0ZW50X2xvY2spOwotCWlmIChsaWtlbHkobmktPm5yX2V4dGVudHMgPj0g
MCkpCi0JCWJhc2VfbmkgPSBuaTsKLQllbHNlCi0JCWJhc2VfbmkgPSBuaS0+ZXh0LmJhc2VfbnRm
c19pbm87Ci0JbXV0ZXhfdW5sb2NrKCZuaS0+ZXh0ZW50X2xvY2spOwotCV9fbWFya19pbm9kZV9k
aXJ0eShWRlNfSShiYXNlX25pKSwgSV9ESVJUWV9EQVRBU1lOQyk7Ci19Ci0KLXN0YXRpYyBjb25z
dCBjaGFyICpudGZzX3BsZWFzZV9lbWFpbCA9ICJQbGVhc2UgZW1haWwgIgotCQkibGludXgtbnRm
cy1kZXZAbGlzdHMuc291cmNlZm9yZ2UubmV0IGFuZCBzYXkgdGhhdCB5b3Ugc2F3ICIKLQkJInRo
aXMgbWVzc2FnZS4gIFRoYW5rIHlvdS4iOwotCi0vKioKLSAqIG50ZnNfc3luY19tZnRfbWlycm9y
X3Vtb3VudCAtIHN5bmNocm9uaXNlIGFuIG1mdCByZWNvcmQgdG8gdGhlIG1mdCBtaXJyb3IKLSAq
IEB2b2w6CW50ZnMgdm9sdW1lIG9uIHdoaWNoIHRoZSBtZnQgcmVjb3JkIHRvIHN5bmNocm9uaXpl
IHJlc2lkZXMKLSAqIEBtZnRfbm86CW1mdCByZWNvcmQgbnVtYmVyIG9mIG1mdCByZWNvcmQgdG8g
c3luY2hyb25pemUKLSAqIEBtOgkJbWFwcGVkLCBtc3QgcHJvdGVjdGVkIChleHRlbnQpIG1mdCBy
ZWNvcmQgdG8gc3luY2hyb25pemUKLSAqCi0gKiBXcml0ZSB0aGUgbWFwcGVkLCBtc3QgcHJvdGVj
dGVkIChleHRlbnQpIG1mdCByZWNvcmQgQG0gd2l0aCBtZnQgcmVjb3JkCi0gKiBudW1iZXIgQG1m
dF9ubyB0byB0aGUgbWZ0IG1pcnJvciAoJE1GVE1pcnIpIG9mIHRoZSBudGZzIHZvbHVtZSBAdm9s
LAotICogYnlwYXNzaW5nIHRoZSBwYWdlIGNhY2hlIGFuZCB0aGUgJE1GVE1pcnIgaW5vZGUgaXRz
ZWxmLgotICoKLSAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBmb3IgdXNlIGF0IHVtb3VudCB0aW1l
IHdoZW4gdGhlIG1mdCBtaXJyb3IgaW5vZGUgaGFzCi0gKiBhbHJlYWR5IGJlZW4gZGlzcG9zZWQg
b2ZmLiAgV2UgQlVHKCkgaWYgd2UgYXJlIGNhbGxlZCB3aGlsZSB0aGUgbWZ0IG1pcnJvcgotICog
aW5vZGUgaXMgc3RpbGwgYXR0YWNoZWQgdG8gdGhlIHZvbHVtZS4KLSAqCi0gKiBPbiBzdWNjZXNz
IHJldHVybiAwLiAgT24gZXJyb3IgcmV0dXJuIC1lcnJuby4KLSAqCi0gKiBOT1RFOiAgVGhpcyBm
dW5jdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgeWV0IGFzIEkgYW0gbm90IGNvbnZpbmNlZCBpdCBj
YW4KLSAqIGFjdHVhbGx5IGJlIHRyaWdnZXJlZCBjb25zaWRlcmluZyB0aGUgc2VxdWVuY2Ugb2Yg
Y29tbWl0cyB3ZSBkbyBpbiBzdXBlci5jOjoKLSAqIG50ZnNfcHV0X3N1cGVyKCkuICBCdXQganVz
dCBpbiBjYXNlIHdlIHByb3ZpZGUgdGhpcyBwbGFjZSBob2xkZXIgYXMgdGhlCi0gKiBhbHRlcm5h
dGl2ZSB3b3VsZCBiZSBlaXRoZXIgdG8gQlVHKCkgb3IgdG8gZ2V0IGEgTlVMTCBwb2ludGVyIGRl
cmVmZXJlbmNlCi0gKiBhbmQgT29wcy4KLSAqLwotc3RhdGljIGludCBudGZzX3N5bmNfbWZ0X21p
cnJvcl91bW91bnQobnRmc192b2x1bWUgKnZvbCwKLQkJY29uc3QgdW5zaWduZWQgbG9uZyBtZnRf
bm8sIE1GVF9SRUNPUkQgKm0pCi17Ci0JQlVHX09OKHZvbC0+bWZ0bWlycl9pbm8pOwotCW50ZnNf
ZXJyb3Iodm9sLT5zYiwgIlVtb3VudCB0aW1lIG1mdCBtaXJyb3Igc3luY2luZyBpcyBub3QgIgot
CQkJImltcGxlbWVudGVkIHlldC4gICVzIiwgbnRmc19wbGVhc2VfZW1haWwpOwotCXJldHVybiAt
RU9QTk9UU1VQUDsKLX0KLQotLyoqCi0gKiBudGZzX3N5bmNfbWZ0X21pcnJvciAtIHN5bmNocm9u
aXplIGFuIG1mdCByZWNvcmQgdG8gdGhlIG1mdCBtaXJyb3IKLSAqIEB2b2w6CW50ZnMgdm9sdW1l
IG9uIHdoaWNoIHRoZSBtZnQgcmVjb3JkIHRvIHN5bmNocm9uaXplIHJlc2lkZXMKLSAqIEBtZnRf
bm86CW1mdCByZWNvcmQgbnVtYmVyIG9mIG1mdCByZWNvcmQgdG8gc3luY2hyb25pemUKLSAqIEBt
OgkJbWFwcGVkLCBtc3QgcHJvdGVjdGVkIChleHRlbnQpIG1mdCByZWNvcmQgdG8gc3luY2hyb25p
emUKLSAqIEBzeW5jOglpZiB0cnVlLCB3YWl0IGZvciBpL28gY29tcGxldGlvbgotICoKLSAqIFdy
aXRlIHRoZSBtYXBwZWQsIG1zdCBwcm90ZWN0ZWQgKGV4dGVudCkgbWZ0IHJlY29yZCBAbSB3aXRo
IG1mdCByZWNvcmQKLSAqIG51bWJlciBAbWZ0X25vIHRvIHRoZSBtZnQgbWlycm9yICgkTUZUTWly
cikgb2YgdGhlIG50ZnMgdm9sdW1lIEB2b2wuCi0gKgotICogT24gc3VjY2VzcyByZXR1cm4gMC4g
IE9uIGVycm9yIHJldHVybiAtZXJybm8gYW5kIHNldCB0aGUgdm9sdW1lIGVycm9ycyBmbGFnCi0g
KiBpbiB0aGUgbnRmcyB2b2x1bWUgQHZvbC4KLSAqCi0gKiBOT1RFOiAgV2UgYWx3YXlzIHBlcmZv
cm0gc3luY2hyb25vdXMgaS9vIGFuZCBpZ25vcmUgdGhlIEBzeW5jIHBhcmFtZXRlci4KLSAqCi0g
KiBUT0RPOiAgSWYgQHN5bmMgaXMgZmFsc2UsIHdhbnQgdG8gZG8gdHJ1bHkgYXN5bmNocm9ub3Vz
IGkvbywgaS5lLiBqdXN0Ci0gKiBzY2hlZHVsZSBpL28gdmlhIC0+d3JpdGVwYWdlIG9yIGRvIGl0
IHZpYSBrbnRmc2Qgb3Igd2hhdGV2ZXIuCi0gKi8KLWludCBudGZzX3N5bmNfbWZ0X21pcnJvcihu
dGZzX3ZvbHVtZSAqdm9sLCBjb25zdCB1bnNpZ25lZCBsb25nIG1mdF9ubywKLQkJTUZUX1JFQ09S
RCAqbSwgaW50IHN5bmMpCi17Ci0Jc3RydWN0IHBhZ2UgKnBhZ2U7Ci0JdW5zaWduZWQgaW50IGJs
b2Nrc2l6ZSA9IHZvbC0+c2ItPnNfYmxvY2tzaXplOwotCWludCBtYXhfYmhzID0gdm9sLT5tZnRf
cmVjb3JkX3NpemUgLyBibG9ja3NpemU7Ci0Jc3RydWN0IGJ1ZmZlcl9oZWFkICpiaHNbTUFYX0JI
U107Ci0Jc3RydWN0IGJ1ZmZlcl9oZWFkICpiaCwgKmhlYWQ7Ci0JdTggKmttaXJyOwotCXJ1bmxp
c3RfZWxlbWVudCAqcmw7Ci0JdW5zaWduZWQgaW50IGJsb2NrX3N0YXJ0LCBibG9ja19lbmQsIG1f
c3RhcnQsIG1fZW5kLCBwYWdlX29mczsKLQlpbnQgaV9iaHMsIG5yX2JocywgZXJyID0gMDsKLQl1
bnNpZ25lZCBjaGFyIGJsb2Nrc2l6ZV9iaXRzID0gdm9sLT5zYi0+c19ibG9ja3NpemVfYml0czsK
LQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBpbm9kZSAweCVseC4iLCBtZnRfbm8pOwotCUJV
R19PTighbWF4X2Jocyk7Ci0JaWYgKFdBUk5fT04obWF4X2JocyA+IE1BWF9CSFMpKQotCQlyZXR1
cm4gLUVJTlZBTDsKLQlpZiAodW5saWtlbHkoIXZvbC0+bWZ0bWlycl9pbm8pKSB7Ci0JCS8qIFRo
aXMgY291bGQgaGFwcGVuIGR1cmluZyB1bW91bnQuLi4gKi8KLQkJZXJyID0gbnRmc19zeW5jX21m
dF9taXJyb3JfdW1vdW50KHZvbCwgbWZ0X25vLCBtKTsKLQkJaWYgKGxpa2VseSghZXJyKSkKLQkJ
CXJldHVybiBlcnI7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JLyogR2V0IHRoZSBwYWdlIGNvbnRh
aW5pbmcgdGhlIG1pcnJvciBjb3B5IG9mIHRoZSBtZnQgcmVjb3JkIEBtLiAqLwotCXBhZ2UgPSBu
dGZzX21hcF9wYWdlKHZvbC0+bWZ0bWlycl9pbm8tPmlfbWFwcGluZywgbWZ0X25vID4+Ci0JCQko
UEFHRV9TSElGVCAtIHZvbC0+bWZ0X3JlY29yZF9zaXplX2JpdHMpKTsKLQlpZiAoSVNfRVJSKHBh
Z2UpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBtYXAgbWZ0IG1pcnJvciBw
YWdlLiIpOwotCQllcnIgPSBQVFJfRVJSKHBhZ2UpOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCWxv
Y2tfcGFnZShwYWdlKTsKLQlCVUdfT04oIVBhZ2VVcHRvZGF0ZShwYWdlKSk7Ci0JQ2xlYXJQYWdl
VXB0b2RhdGUocGFnZSk7Ci0JLyogT2Zmc2V0IG9mIHRoZSBtZnQgbWlycm9yIHJlY29yZCBpbnNp
ZGUgdGhlIHBhZ2UuICovCi0JcGFnZV9vZnMgPSAobWZ0X25vIDw8IHZvbC0+bWZ0X3JlY29yZF9z
aXplX2JpdHMpICYgflBBR0VfTUFTSzsKLQkvKiBUaGUgYWRkcmVzcyBpbiB0aGUgcGFnZSBvZiB0
aGUgbWlycm9yIGNvcHkgb2YgdGhlIG1mdCByZWNvcmQgQG0uICovCi0Ja21pcnIgPSBwYWdlX2Fk
ZHJlc3MocGFnZSkgKyBwYWdlX29mczsKLQkvKiBDb3B5IHRoZSBtc3QgcHJvdGVjdGVkIG1mdCBy
ZWNvcmQgdG8gdGhlIG1pcnJvci4gKi8KLQltZW1jcHkoa21pcnIsIG0sIHZvbC0+bWZ0X3JlY29y
ZF9zaXplKTsKLQkvKiBDcmVhdGUgdXB0b2RhdGUgYnVmZmVycyBpZiBub3QgcHJlc2VudC4gKi8K
LQlpZiAodW5saWtlbHkoIXBhZ2VfaGFzX2J1ZmZlcnMocGFnZSkpKSB7Ci0JCXN0cnVjdCBidWZm
ZXJfaGVhZCAqdGFpbDsKLQotCQliaCA9IGhlYWQgPSBhbGxvY19wYWdlX2J1ZmZlcnMocGFnZSwg
YmxvY2tzaXplLCB0cnVlKTsKLQkJZG8gewotCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZShiaCk7Ci0J
CQl0YWlsID0gYmg7Ci0JCQliaCA9IGJoLT5iX3RoaXNfcGFnZTsKLQkJfSB3aGlsZSAoYmgpOwot
CQl0YWlsLT5iX3RoaXNfcGFnZSA9IGhlYWQ7Ci0JCWF0dGFjaF9wYWdlX3ByaXZhdGUocGFnZSwg
aGVhZCk7Ci0JfQotCWJoID0gaGVhZCA9IHBhZ2VfYnVmZmVycyhwYWdlKTsKLQlCVUdfT04oIWJo
KTsKLQlybCA9IE5VTEw7Ci0JbnJfYmhzID0gMDsKLQlibG9ja19zdGFydCA9IDA7Ci0JbV9zdGFy
dCA9IGttaXJyIC0gKHU4KilwYWdlX2FkZHJlc3MocGFnZSk7Ci0JbV9lbmQgPSBtX3N0YXJ0ICsg
dm9sLT5tZnRfcmVjb3JkX3NpemU7Ci0JZG8gewotCQlibG9ja19lbmQgPSBibG9ja19zdGFydCAr
IGJsb2Nrc2l6ZTsKLQkJLyogSWYgdGhlIGJ1ZmZlciBpcyBvdXRzaWRlIHRoZSBtZnQgcmVjb3Jk
LCBza2lwIGl0LiAqLwotCQlpZiAoYmxvY2tfZW5kIDw9IG1fc3RhcnQpCi0JCQljb250aW51ZTsK
LQkJaWYgKHVubGlrZWx5KGJsb2NrX3N0YXJ0ID49IG1fZW5kKSkKLQkJCWJyZWFrOwotCQkvKiBO
ZWVkIHRvIG1hcCB0aGUgYnVmZmVyIGlmIGl0IGlzIG5vdCBtYXBwZWQgYWxyZWFkeS4gKi8KLQkJ
aWYgKHVubGlrZWx5KCFidWZmZXJfbWFwcGVkKGJoKSkpIHsKLQkJCVZDTiB2Y247Ci0JCQlMQ04g
bGNuOwotCQkJdW5zaWduZWQgaW50IHZjbl9vZnM7Ci0KLQkJCWJoLT5iX2JkZXYgPSB2b2wtPnNi
LT5zX2JkZXY7Ci0JCQkvKiBPYnRhaW4gdGhlIHZjbiBhbmQgb2Zmc2V0IG9mIHRoZSBjdXJyZW50
IGJsb2NrLiAqLwotCQkJdmNuID0gKChWQ04pbWZ0X25vIDw8IHZvbC0+bWZ0X3JlY29yZF9zaXpl
X2JpdHMpICsKLQkJCQkJKGJsb2NrX3N0YXJ0IC0gbV9zdGFydCk7Ci0JCQl2Y25fb2ZzID0gdmNu
ICYgdm9sLT5jbHVzdGVyX3NpemVfbWFzazsKLQkJCXZjbiA+Pj0gdm9sLT5jbHVzdGVyX3NpemVf
Yml0czsKLQkJCWlmICghcmwpIHsKLQkJCQlkb3duX3JlYWQoJk5URlNfSSh2b2wtPm1mdG1pcnJf
aW5vKS0+Ci0JCQkJCQlydW5saXN0LmxvY2spOwotCQkJCXJsID0gTlRGU19JKHZvbC0+bWZ0bWly
cl9pbm8pLT5ydW5saXN0LnJsOwotCQkJCS8qCi0JCQkJICogJE1GVE1pcnIgYWx3YXlzIGhhcyB0
aGUgd2hvbGUgb2YgaXRzIHJ1bmxpc3QKLQkJCQkgKiBpbiBtZW1vcnkuCi0JCQkJICovCi0JCQkJ
QlVHX09OKCFybCk7Ci0JCQl9Ci0JCQkvKiBTZWVrIHRvIGVsZW1lbnQgY29udGFpbmluZyB0YXJn
ZXQgdmNuLiAqLwotCQkJd2hpbGUgKHJsLT5sZW5ndGggJiYgcmxbMV0udmNuIDw9IHZjbikKLQkJ
CQlybCsrOwotCQkJbGNuID0gbnRmc19ybF92Y25fdG9fbGNuKHJsLCB2Y24pOwotCQkJLyogRm9y
ICRNRlRNaXJyLCBvbmx5IGxjbiA+PSAwIGlzIGEgc3VjY2Vzc2Z1bCByZW1hcC4gKi8KLQkJCWlm
IChsaWtlbHkobGNuID49IDApKSB7Ci0JCQkJLyogU2V0dXAgYnVmZmVyIGhlYWQgdG8gY29ycmVj
dCBibG9jay4gKi8KLQkJCQliaC0+Yl9ibG9ja25yID0gKChsY24gPDwKLQkJCQkJCXZvbC0+Y2x1
c3Rlcl9zaXplX2JpdHMpICsKLQkJCQkJCXZjbl9vZnMpID4+IGJsb2Nrc2l6ZV9iaXRzOwotCQkJ
CXNldF9idWZmZXJfbWFwcGVkKGJoKTsKLQkJCX0gZWxzZSB7Ci0JCQkJYmgtPmJfYmxvY2tuciA9
IC0xOwotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCB3cml0ZSBtZnQgbWlycm9yICIK
LQkJCQkJCSJyZWNvcmQgMHglbHggYmVjYXVzZSBpdHMgIgotCQkJCQkJImxvY2F0aW9uIG9uIGRp
c2sgY291bGQgbm90ICIKLQkJCQkJCSJiZSBkZXRlcm1pbmVkIChlcnJvciBjb2RlICIKLQkJCQkJ
CSIlbGxpKS4iLCBtZnRfbm8sCi0JCQkJCQkobG9uZyBsb25nKWxjbik7Ci0JCQkJZXJyID0gLUVJ
TzsKLQkJCX0KLQkJfQotCQlCVUdfT04oIWJ1ZmZlcl91cHRvZGF0ZShiaCkpOwotCQlCVUdfT04o
IW5yX2JocyAmJiAobV9zdGFydCAhPSBibG9ja19zdGFydCkpOwotCQlCVUdfT04obnJfYmhzID49
IG1heF9iaHMpOwotCQliaHNbbnJfYmhzKytdID0gYmg7Ci0JCUJVR19PTigobnJfYmhzID49IG1h
eF9iaHMpICYmIChtX2VuZCAhPSBibG9ja19lbmQpKTsKLQl9IHdoaWxlIChibG9ja19zdGFydCA9
IGJsb2NrX2VuZCwgKGJoID0gYmgtPmJfdGhpc19wYWdlKSAhPSBoZWFkKTsKLQlpZiAodW5saWtl
bHkocmwpKQotCQl1cF9yZWFkKCZOVEZTX0kodm9sLT5tZnRtaXJyX2lubyktPnJ1bmxpc3QubG9j
ayk7Ci0JaWYgKGxpa2VseSghZXJyKSkgewotCQkvKiBMb2NrIGJ1ZmZlcnMgYW5kIHN0YXJ0IHN5
bmNocm9ub3VzIHdyaXRlIGkvbyBvbiB0aGVtLiAqLwotCQlmb3IgKGlfYmhzID0gMDsgaV9iaHMg
PCBucl9iaHM7IGlfYmhzKyspIHsKLQkJCXN0cnVjdCBidWZmZXJfaGVhZCAqdGJoID0gYmhzW2lf
YmhzXTsKLQotCQkJaWYgKCF0cnlsb2NrX2J1ZmZlcih0YmgpKQotCQkJCUJVRygpOwotCQkJQlVH
X09OKCFidWZmZXJfdXB0b2RhdGUodGJoKSk7Ci0JCQljbGVhcl9idWZmZXJfZGlydHkodGJoKTsK
LQkJCWdldF9iaCh0YmgpOwotCQkJdGJoLT5iX2VuZF9pbyA9IGVuZF9idWZmZXJfd3JpdGVfc3lu
YzsKLQkJCXN1Ym1pdF9iaChSRVFfT1BfV1JJVEUsIHRiaCk7Ci0JCX0KLQkJLyogV2FpdCBvbiBp
L28gY29tcGxldGlvbiBvZiBidWZmZXJzLiAqLwotCQlmb3IgKGlfYmhzID0gMDsgaV9iaHMgPCBu
cl9iaHM7IGlfYmhzKyspIHsKLQkJCXN0cnVjdCBidWZmZXJfaGVhZCAqdGJoID0gYmhzW2lfYmhz
XTsKLQotCQkJd2FpdF9vbl9idWZmZXIodGJoKTsKLQkJCWlmICh1bmxpa2VseSghYnVmZmVyX3Vw
dG9kYXRlKHRiaCkpKSB7Ci0JCQkJZXJyID0gLUVJTzsKLQkJCQkvKgotCQkJCSAqIFNldCB0aGUg
YnVmZmVyIHVwdG9kYXRlIHNvIHRoZSBwYWdlIGFuZAotCQkJCSAqIGJ1ZmZlciBzdGF0ZXMgZG8g
bm90IGJlY29tZSBvdXQgb2Ygc3luYy4KLQkJCQkgKi8KLQkJCQlzZXRfYnVmZmVyX3VwdG9kYXRl
KHRiaCk7Ci0JCQl9Ci0JCX0KLQl9IGVsc2UgLyogaWYgKHVubGlrZWx5KGVycikpICovIHsKLQkJ
LyogQ2xlYW4gdGhlIGJ1ZmZlcnMuICovCi0JCWZvciAoaV9iaHMgPSAwOyBpX2JocyA8IG5yX2Jo
czsgaV9iaHMrKykKLQkJCWNsZWFyX2J1ZmZlcl9kaXJ0eShiaHNbaV9iaHNdKTsKLQl9Ci0JLyog
Q3VycmVudCBzdGF0ZTogYWxsIGJ1ZmZlcnMgYXJlIGNsZWFuLCB1bmxvY2tlZCwgYW5kIHVwdG9k
YXRlLiAqLwotCS8qIFJlbW92ZSB0aGUgbXN0IHByb3RlY3Rpb24gZml4dXBzIGFnYWluLiAqLwot
CXBvc3Rfd3JpdGVfbXN0X2ZpeHVwKChOVEZTX1JFQ09SRCopa21pcnIpOwotCWZsdXNoX2RjYWNo
ZV9wYWdlKHBhZ2UpOwotCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKLQl1bmxvY2tfcGFnZShwYWdl
KTsKLQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JaWYgKGxpa2VseSghZXJyKSkgewotCQludGZz
X2RlYnVnKCJEb25lLiIpOwotCX0gZWxzZSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkkvTyBl
cnJvciB3aGlsZSB3cml0aW5nIG1mdCBtaXJyb3IgIgotCQkJCSJyZWNvcmQgMHglbHghIiwgbWZ0
X25vKTsKLWVycl9vdXQ6Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBzeW5jaHJv
bml6ZSAkTUZUTWlyciAoZXJyb3IgIgotCQkJCSJjb2RlICVpKS4gIFZvbHVtZSB3aWxsIGJlIGxl
ZnQgbWFya2VkIGRpcnR5ICIKLQkJCQkib24gdW1vdW50LiAgUnVuIG50ZnNmaXggb24gdGhlIHBh
cnRpdGlvbiAiCi0JCQkJImFmdGVyIHVtb3VudGluZyB0byBjb3JyZWN0IHRoaXMuIiwgLWVycik7
Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLQl9Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoqCi0gKiB3
cml0ZV9tZnRfcmVjb3JkX25vbG9jayAtIHdyaXRlIG91dCBhIG1hcHBlZCAoZXh0ZW50KSBtZnQg
cmVjb3JkCi0gKiBAbmk6CQludGZzIGlub2RlIGRlc2NyaWJpbmcgdGhlIG1hcHBlZCAoZXh0ZW50
KSBtZnQgcmVjb3JkCi0gKiBAbToJCW1hcHBlZCAoZXh0ZW50KSBtZnQgcmVjb3JkIHRvIHdyaXRl
Ci0gKiBAc3luYzoJaWYgdHJ1ZSwgd2FpdCBmb3IgaS9vIGNvbXBsZXRpb24KLSAqCi0gKiBXcml0
ZSB0aGUgbWFwcGVkIChleHRlbnQpIG1mdCByZWNvcmQgQG0gZGVzY3JpYmVkIGJ5IHRoZSAocmVn
dWxhciBvciBleHRlbnQpCi0gKiBudGZzIGlub2RlIEBuaSB0byBiYWNraW5nIHN0b3JlLiAgSWYg
dGhlIG1mdCByZWNvcmQgQG0gaGFzIGEgY291bnRlcnBhcnQgaW4KLSAqIHRoZSBtZnQgbWlycm9y
LCB0aGF0IGlzIGFsc28gdXBkYXRlZC4KLSAqCi0gKiBXZSBvbmx5IHdyaXRlIHRoZSBtZnQgcmVj
b3JkIGlmIHRoZSBudGZzIGlub2RlIEBuaSBpcyBkaXJ0eSBhbmQgdGhlIGZpcnN0Ci0gKiBidWZm
ZXIgYmVsb25naW5nIHRvIGl0cyBtZnQgcmVjb3JkIGlzIGRpcnR5LCB0b28uICBXZSBpZ25vcmUg
dGhlIGRpcnR5IHN0YXRlCi0gKiBvZiBzdWJzZXF1ZW50IGJ1ZmZlcnMgYmVjYXVzZSB3ZSBjb3Vs
ZCBoYXZlIHJhY2VkIHdpdGgKLSAqIGZzL250ZnMvYW9wcy5jOjptYXJrX250ZnNfcmVjb3JkX2Rp
cnR5KCkuCi0gKgotICogT24gc3VjY2VzcywgY2xlYW4gdGhlIG1mdCByZWNvcmQgYW5kIHJldHVy
biAwLiAgT24gZXJyb3IsIGxlYXZlIHRoZSBtZnQKLSAqIHJlY29yZCBkaXJ0eSBhbmQgcmV0dXJu
IC1lcnJuby4KLSAqCi0gKiBOT1RFOiAgV2UgYWx3YXlzIHBlcmZvcm0gc3luY2hyb25vdXMgaS9v
IGFuZCBpZ25vcmUgdGhlIEBzeW5jIHBhcmFtZXRlci4KLSAqIEhvd2V2ZXIsIGlmIHRoZSBtZnQg
cmVjb3JkIGhhcyBhIGNvdW50ZXJwYXJ0IGluIHRoZSBtZnQgbWlycm9yIGFuZCBAc3luYyBpcwot
ICogdHJ1ZSwgd2Ugd3JpdGUgdGhlIG1mdCByZWNvcmQsIHdhaXQgZm9yIGkvbyBjb21wbGV0aW9u
LCBhbmQgb25seSB0aGVuIHdyaXRlCi0gKiB0aGUgbWZ0IG1pcnJvciBjb3B5LiAgVGhpcyBlbnN1
cmVzIHRoYXQgaWYgdGhlIHN5c3RlbSBjcmFzaGVzIGVpdGhlciB0aGUgbWZ0Ci0gKiBvciB0aGUg
bWZ0IG1pcnJvciB3aWxsIGNvbnRhaW4gYSBzZWxmLWNvbnNpc3RlbnQgbWZ0IHJlY29yZCBAbS4g
IElmIEBzeW5jIGlzCi0gKiBmYWxzZSBvbiB0aGUgb3RoZXIgaGFuZCwgd2Ugc3RhcnQgaS9vIG9u
IGJvdGggYW5kIHRoZW4gd2FpdCBmb3IgY29tcGxldGlvbgotICogb24gdGhlbS4gIFRoaXMgcHJv
dmlkZXMgYSBzcGVlZHVwIGJ1dCBubyBsb25nZXIgZ3VhcmFudGVlcyB0aGF0IHlvdSB3aWxsIGVu
ZAotICogdXAgd2l0aCBhIHNlbGYtY29uc2lzdGVudCBtZnQgcmVjb3JkIGluIHRoZSBjYXNlIG9m
IGEgY3Jhc2ggYnV0IGlmIHlvdSBhc2tlZAotICogZm9yIGFzeW5jaHJvbm91cyB3cml0aW5nIHlv
dSBwcm9iYWJseSBkbyBub3QgY2FyZSBhYm91dCB0aGF0IGFueXdheS4KLSAqCi0gKiBUT0RPOiAg
SWYgQHN5bmMgaXMgZmFsc2UsIHdhbnQgdG8gZG8gdHJ1bHkgYXN5bmNocm9ub3VzIGkvbywgaS5l
LiBqdXN0Ci0gKiBzY2hlZHVsZSBpL28gdmlhIC0+d3JpdGVwYWdlIG9yIGRvIGl0IHZpYSBrbnRm
c2Qgb3Igd2hhdGV2ZXIuCi0gKi8KLWludCB3cml0ZV9tZnRfcmVjb3JkX25vbG9jayhudGZzX2lu
b2RlICpuaSwgTUZUX1JFQ09SRCAqbSwgaW50IHN5bmMpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9
IG5pLT52b2w7Ci0Jc3RydWN0IHBhZ2UgKnBhZ2UgPSBuaS0+cGFnZTsKLQl1bnNpZ25lZCBpbnQg
YmxvY2tzaXplID0gdm9sLT5zYi0+c19ibG9ja3NpemU7Ci0JdW5zaWduZWQgY2hhciBibG9ja3Np
emVfYml0cyA9IHZvbC0+c2ItPnNfYmxvY2tzaXplX2JpdHM7Ci0JaW50IG1heF9iaHMgPSB2b2wt
Pm1mdF9yZWNvcmRfc2l6ZSAvIGJsb2Nrc2l6ZTsKLQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoc1tN
QVhfQkhTXTsKLQlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoLCAqaGVhZDsKLQlydW5saXN0X2VsZW1l
bnQgKnJsOwotCXVuc2lnbmVkIGludCBibG9ja19zdGFydCwgYmxvY2tfZW5kLCBtX3N0YXJ0LCBt
X2VuZDsKLQlpbnQgaV9iaHMsIG5yX2JocywgZXJyID0gMDsKLQotCW50ZnNfZGVidWcoIkVudGVy
aW5nIGZvciBpbm9kZSAweCVseC4iLCBuaS0+bWZ0X25vKTsKLQlCVUdfT04oTklub0F0dHIobmkp
KTsKLQlCVUdfT04oIW1heF9iaHMpOwotCUJVR19PTighUGFnZUxvY2tlZChwYWdlKSk7Ci0JaWYg
KFdBUk5fT04obWF4X2JocyA+IE1BWF9CSFMpKSB7Ci0JCWVyciA9IC1FSU5WQUw7Ci0JCWdvdG8g
ZXJyX291dDsKLQl9Ci0JLyoKLQkgKiBJZiB0aGUgbnRmc19pbm9kZSBpcyBjbGVhbiBubyBuZWVk
IHRvIGRvIGFueXRoaW5nLiAgSWYgaXQgaXMgZGlydHksCi0JICogbWFyayBpdCBhcyBjbGVhbiBu
b3cgc28gdGhhdCBpdCBjYW4gYmUgcmVkaXJ0aWVkIGxhdGVyIG9uIGlmIG5lZWRlZC4KLQkgKiBU
aGVyZSBpcyBubyBkYW5nZXIgb2YgcmFjZXMgc2luY2UgdGhlIGNhbGxlciBpcyBob2xkaW5nIHRo
ZSBsb2NrcwotCSAqIGZvciB0aGUgbWZ0IHJlY29yZCBAbSBhbmQgdGhlIHBhZ2UgaXQgaXMgaW4u
Ci0JICovCi0JaWYgKCFOSW5vVGVzdENsZWFyRGlydHkobmkpKQotCQlnb3RvIGRvbmU7Ci0JYmgg
PSBoZWFkID0gcGFnZV9idWZmZXJzKHBhZ2UpOwotCUJVR19PTighYmgpOwotCXJsID0gTlVMTDsK
LQlucl9iaHMgPSAwOwotCWJsb2NrX3N0YXJ0ID0gMDsKLQltX3N0YXJ0ID0gbmktPnBhZ2Vfb2Zz
OwotCW1fZW5kID0gbV9zdGFydCArIHZvbC0+bWZ0X3JlY29yZF9zaXplOwotCWRvIHsKLQkJYmxv
Y2tfZW5kID0gYmxvY2tfc3RhcnQgKyBibG9ja3NpemU7Ci0JCS8qIElmIHRoZSBidWZmZXIgaXMg
b3V0c2lkZSB0aGUgbWZ0IHJlY29yZCwgc2tpcCBpdC4gKi8KLQkJaWYgKGJsb2NrX2VuZCA8PSBt
X3N0YXJ0KQotCQkJY29udGludWU7Ci0JCWlmICh1bmxpa2VseShibG9ja19zdGFydCA+PSBtX2Vu
ZCkpCi0JCQlicmVhazsKLQkJLyoKLQkJICogSWYgdGhpcyBibG9jayBpcyBub3QgdGhlIGZpcnN0
IG9uZSBpbiB0aGUgcmVjb3JkLCB3ZSBpZ25vcmUKLQkJICogdGhlIGJ1ZmZlcidzIGRpcnR5IHN0
YXRlIGJlY2F1c2Ugd2UgY291bGQgaGF2ZSByYWNlZCB3aXRoIGEKLQkJICogcGFyYWxsZWwgbWFy
a19udGZzX3JlY29yZF9kaXJ0eSgpLgotCQkgKi8KLQkJaWYgKGJsb2NrX3N0YXJ0ID09IG1fc3Rh
cnQpIHsKLQkJCS8qIFRoaXMgYmxvY2sgaXMgdGhlIGZpcnN0IG9uZSBpbiB0aGUgcmVjb3JkLiAq
LwotCQkJaWYgKCFidWZmZXJfZGlydHkoYmgpKSB7Ci0JCQkJQlVHX09OKG5yX2Jocyk7Ci0JCQkJ
LyogQ2xlYW4gcmVjb3JkcyBhcmUgbm90IHdyaXR0ZW4gb3V0LiAqLwotCQkJCWJyZWFrOwotCQkJ
fQotCQl9Ci0JCS8qIE5lZWQgdG8gbWFwIHRoZSBidWZmZXIgaWYgaXQgaXMgbm90IG1hcHBlZCBh
bHJlYWR5LiAqLwotCQlpZiAodW5saWtlbHkoIWJ1ZmZlcl9tYXBwZWQoYmgpKSkgewotCQkJVkNO
IHZjbjsKLQkJCUxDTiBsY247Ci0JCQl1bnNpZ25lZCBpbnQgdmNuX29mczsKLQotCQkJYmgtPmJf
YmRldiA9IHZvbC0+c2ItPnNfYmRldjsKLQkJCS8qIE9idGFpbiB0aGUgdmNuIGFuZCBvZmZzZXQg
b2YgdGhlIGN1cnJlbnQgYmxvY2suICovCi0JCQl2Y24gPSAoKFZDTiluaS0+bWZ0X25vIDw8IHZv
bC0+bWZ0X3JlY29yZF9zaXplX2JpdHMpICsKLQkJCQkJKGJsb2NrX3N0YXJ0IC0gbV9zdGFydCk7
Ci0JCQl2Y25fb2ZzID0gdmNuICYgdm9sLT5jbHVzdGVyX3NpemVfbWFzazsKLQkJCXZjbiA+Pj0g
dm9sLT5jbHVzdGVyX3NpemVfYml0czsKLQkJCWlmICghcmwpIHsKLQkJCQlkb3duX3JlYWQoJk5U
RlNfSSh2b2wtPm1mdF9pbm8pLT5ydW5saXN0LmxvY2spOwotCQkJCXJsID0gTlRGU19JKHZvbC0+
bWZ0X2lubyktPnJ1bmxpc3Qucmw7Ci0JCQkJQlVHX09OKCFybCk7Ci0JCQl9Ci0JCQkvKiBTZWVr
IHRvIGVsZW1lbnQgY29udGFpbmluZyB0YXJnZXQgdmNuLiAqLwotCQkJd2hpbGUgKHJsLT5sZW5n
dGggJiYgcmxbMV0udmNuIDw9IHZjbikKLQkJCQlybCsrOwotCQkJbGNuID0gbnRmc19ybF92Y25f
dG9fbGNuKHJsLCB2Y24pOwotCQkJLyogRm9yICRNRlQsIG9ubHkgbGNuID49IDAgaXMgYSBzdWNj
ZXNzZnVsIHJlbWFwLiAqLwotCQkJaWYgKGxpa2VseShsY24gPj0gMCkpIHsKLQkJCQkvKiBTZXR1
cCBidWZmZXIgaGVhZCB0byBjb3JyZWN0IGJsb2NrLiAqLwotCQkJCWJoLT5iX2Jsb2NrbnIgPSAo
KGxjbiA8PAotCQkJCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0cykgKwotCQkJCQkJdmNuX29mcykg
Pj4gYmxvY2tzaXplX2JpdHM7Ci0JCQkJc2V0X2J1ZmZlcl9tYXBwZWQoYmgpOwotCQkJfSBlbHNl
IHsKLQkJCQliaC0+Yl9ibG9ja25yID0gLTE7Ci0JCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiQ2Fu
bm90IHdyaXRlIG1mdCByZWNvcmQgIgotCQkJCQkJIjB4JWx4IGJlY2F1c2UgaXRzIGxvY2F0aW9u
ICIKLQkJCQkJCSJvbiBkaXNrIGNvdWxkIG5vdCBiZSAiCi0JCQkJCQkiZGV0ZXJtaW5lZCAoZXJy
b3IgY29kZSAlbGxpKS4iLAotCQkJCQkJbmktPm1mdF9ubywgKGxvbmcgbG9uZylsY24pOwotCQkJ
CWVyciA9IC1FSU87Ci0JCQl9Ci0JCX0KLQkJQlVHX09OKCFidWZmZXJfdXB0b2RhdGUoYmgpKTsK
LQkJQlVHX09OKCFucl9iaHMgJiYgKG1fc3RhcnQgIT0gYmxvY2tfc3RhcnQpKTsKLQkJQlVHX09O
KG5yX2JocyA+PSBtYXhfYmhzKTsKLQkJYmhzW25yX2JocysrXSA9IGJoOwotCQlCVUdfT04oKG5y
X2JocyA+PSBtYXhfYmhzKSAmJiAobV9lbmQgIT0gYmxvY2tfZW5kKSk7Ci0JfSB3aGlsZSAoYmxv
Y2tfc3RhcnQgPSBibG9ja19lbmQsIChiaCA9IGJoLT5iX3RoaXNfcGFnZSkgIT0gaGVhZCk7Ci0J
aWYgKHVubGlrZWx5KHJsKSkKLQkJdXBfcmVhZCgmTlRGU19JKHZvbC0+bWZ0X2lubyktPnJ1bmxp
c3QubG9jayk7Ci0JaWYgKCFucl9iaHMpCi0JCWdvdG8gZG9uZTsKLQlpZiAodW5saWtlbHkoZXJy
KSkKLQkJZ290byBjbGVhbnVwX291dDsKLQkvKiBBcHBseSB0aGUgbXN0IHByb3RlY3Rpb24gZml4
dXBzLiAqLwotCWVyciA9IHByZV93cml0ZV9tc3RfZml4dXAoKE5URlNfUkVDT1JEKiltLCB2b2wt
Pm1mdF9yZWNvcmRfc2l6ZSk7Ci0JaWYgKGVycikgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJG
YWlsZWQgdG8gYXBwbHkgbXN0IGZpeHVwcyEiKTsKLQkJZ290byBjbGVhbnVwX291dDsKLQl9Ci0J
Zmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShuaSk7Ci0JLyogTG9jayBidWZmZXJzIGFuZCBz
dGFydCBzeW5jaHJvbm91cyB3cml0ZSBpL28gb24gdGhlbS4gKi8KLQlmb3IgKGlfYmhzID0gMDsg
aV9iaHMgPCBucl9iaHM7IGlfYmhzKyspIHsKLQkJc3RydWN0IGJ1ZmZlcl9oZWFkICp0YmggPSBi
aHNbaV9iaHNdOwotCi0JCWlmICghdHJ5bG9ja19idWZmZXIodGJoKSkKLQkJCUJVRygpOwotCQlC
VUdfT04oIWJ1ZmZlcl91cHRvZGF0ZSh0YmgpKTsKLQkJY2xlYXJfYnVmZmVyX2RpcnR5KHRiaCk7
Ci0JCWdldF9iaCh0YmgpOwotCQl0YmgtPmJfZW5kX2lvID0gZW5kX2J1ZmZlcl93cml0ZV9zeW5j
OwotCQlzdWJtaXRfYmgoUkVRX09QX1dSSVRFLCB0YmgpOwotCX0KLQkvKiBTeW5jaHJvbml6ZSB0
aGUgbWZ0IG1pcnJvciBub3cgaWYgbm90IEBzeW5jLiAqLwotCWlmICghc3luYyAmJiBuaS0+bWZ0
X25vIDwgdm9sLT5tZnRtaXJyX3NpemUpCi0JCW50ZnNfc3luY19tZnRfbWlycm9yKHZvbCwgbmkt
Pm1mdF9ubywgbSwgc3luYyk7Ci0JLyogV2FpdCBvbiBpL28gY29tcGxldGlvbiBvZiBidWZmZXJz
LiAqLwotCWZvciAoaV9iaHMgPSAwOyBpX2JocyA8IG5yX2JoczsgaV9iaHMrKykgewotCQlzdHJ1
Y3QgYnVmZmVyX2hlYWQgKnRiaCA9IGJoc1tpX2Joc107Ci0KLQkJd2FpdF9vbl9idWZmZXIodGJo
KTsKLQkJaWYgKHVubGlrZWx5KCFidWZmZXJfdXB0b2RhdGUodGJoKSkpIHsKLQkJCWVyciA9IC1F
SU87Ci0JCQkvKgotCQkJICogU2V0IHRoZSBidWZmZXIgdXB0b2RhdGUgc28gdGhlIHBhZ2UgYW5k
IGJ1ZmZlcgotCQkJICogc3RhdGVzIGRvIG5vdCBiZWNvbWUgb3V0IG9mIHN5bmMuCi0JCQkgKi8K
LQkJCWlmIChQYWdlVXB0b2RhdGUocGFnZSkpCi0JCQkJc2V0X2J1ZmZlcl91cHRvZGF0ZSh0Ymgp
OwotCQl9Ci0JfQotCS8qIElmIEBzeW5jLCBub3cgc3luY2hyb25pemUgdGhlIG1mdCBtaXJyb3Iu
ICovCi0JaWYgKHN5bmMgJiYgbmktPm1mdF9ubyA8IHZvbC0+bWZ0bWlycl9zaXplKQotCQludGZz
X3N5bmNfbWZ0X21pcnJvcih2b2wsIG5pLT5tZnRfbm8sIG0sIHN5bmMpOwotCS8qIFJlbW92ZSB0
aGUgbXN0IHByb3RlY3Rpb24gZml4dXBzIGFnYWluLiAqLwotCXBvc3Rfd3JpdGVfbXN0X2ZpeHVw
KChOVEZTX1JFQ09SRCopbSk7Ci0JZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShuaSk7Ci0J
aWYgKHVubGlrZWx5KGVycikpIHsKLQkJLyogSS9PIGVycm9yIGR1cmluZyB3cml0aW5nLiAgVGhp
cyBpcyByZWFsbHkgYmFkISAqLwotCQludGZzX2Vycm9yKHZvbC0+c2IsICJJL08gZXJyb3Igd2hp
bGUgd3JpdGluZyBtZnQgcmVjb3JkICIKLQkJCQkiMHglbHghICBNYXJraW5nIGJhc2UgaW5vZGUg
YXMgYmFkLiAgWW91ICIKLQkJCQkic2hvdWxkIHVubW91bnQgdGhlIHZvbHVtZSBhbmQgcnVuIGNo
a2Rzay4iLAotCQkJCW5pLT5tZnRfbm8pOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotZG9uZToKLQlu
dGZzX2RlYnVnKCJEb25lLiIpOwotCXJldHVybiAwOwotY2xlYW51cF9vdXQ6Ci0JLyogQ2xlYW4g
dGhlIGJ1ZmZlcnMuICovCi0JZm9yIChpX2JocyA9IDA7IGlfYmhzIDwgbnJfYmhzOyBpX2Jocysr
KQotCQljbGVhcl9idWZmZXJfZGlydHkoYmhzW2lfYmhzXSk7Ci1lcnJfb3V0OgotCS8qCi0JICog
Q3VycmVudCBzdGF0ZTogYWxsIGJ1ZmZlcnMgYXJlIGNsZWFuLCB1bmxvY2tlZCwgYW5kIHVwdG9k
YXRlLgotCSAqIFRoZSBjYWxsZXIgc2hvdWxkIG1hcmsgdGhlIGJhc2UgaW5vZGUgYXMgYmFkIHNv
IHRoYXQgbm8gbW9yZSBpL28KLQkgKiBoYXBwZW5zLiAgLT5jbGVhcl9pbm9kZSgpIHdpbGwgc3Rp
bGwgYmUgaW52b2tlZCBzbyBhbGwgZXh0ZW50IGlub2RlcwotCSAqIGFuZCBvdGhlciBhbGxvY2F0
ZWQgbWVtb3J5IHdpbGwgYmUgZnJlZWQuCi0JICovCi0JaWYgKGVyciA9PSAtRU5PTUVNKSB7Ci0J
CW50ZnNfZXJyb3Iodm9sLT5zYiwgIk5vdCBlbm91Z2ggbWVtb3J5IHRvIHdyaXRlIG1mdCByZWNv
cmQuICAiCi0JCQkJIlJlZGlydHlpbmcgc28gdGhlIHdyaXRlIGlzIHJldHJpZWQgbGF0ZXIuIik7
Ci0JCW1hcmtfbWZ0X3JlY29yZF9kaXJ0eShuaSk7Ci0JCWVyciA9IDA7Ci0JfSBlbHNlCi0JCU5W
b2xTZXRFcnJvcnModm9sKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfbWF5X3dy
aXRlX21mdF9yZWNvcmQgLSBjaGVjayBpZiBhbiBtZnQgcmVjb3JkIG1heSBiZSB3cml0dGVuIG91
dAotICogQHZvbDoJW0lOXSAgbnRmcyB2b2x1bWUgb24gd2hpY2ggdGhlIG1mdCByZWNvcmQgdG8g
Y2hlY2sgcmVzaWRlcwotICogQG1mdF9ubzoJW0lOXSAgbWZ0IHJlY29yZCBudW1iZXIgb2YgdGhl
IG1mdCByZWNvcmQgdG8gY2hlY2sKLSAqIEBtOgkJW0lOXSAgbWFwcGVkIG1mdCByZWNvcmQgdG8g
Y2hlY2sKLSAqIEBsb2NrZWRfbmk6CVtPVVRdIGNhbGxlciBoYXMgdG8gdW5sb2NrIHRoaXMgbnRm
cyBpbm9kZSBpZiBvbmUgaXMgcmV0dXJuZWQKLSAqCi0gKiBDaGVjayBpZiB0aGUgbWFwcGVkIChi
YXNlIG9yIGV4dGVudCkgbWZ0IHJlY29yZCBAbSB3aXRoIG1mdCByZWNvcmQgbnVtYmVyCi0gKiBA
bWZ0X25vIGJlbG9uZ2luZyB0byB0aGUgbnRmcyB2b2x1bWUgQHZvbCBtYXkgYmUgd3JpdHRlbiBv
dXQuICBJZiBuZWNlc3NhcnkKLSAqIGFuZCBwb3NzaWJsZSB0aGUgbnRmcyBpbm9kZSBvZiB0aGUg
bWZ0IHJlY29yZCBpcyBsb2NrZWQgYW5kIHRoZSBiYXNlIHZmcwotICogaW5vZGUgaXMgcGlubmVk
LiAgVGhlIGxvY2tlZCBudGZzIGlub2RlIGlzIHRoZW4gcmV0dXJuZWQgaW4gQGxvY2tlZF9uaS4g
IFRoZQotICogY2FsbGVyIGlzIHJlc3BvbnNpYmxlIGZvciB1bmxvY2tpbmcgdGhlIG50ZnMgaW5v
ZGUgYW5kIHVucGlubmluZyB0aGUgYmFzZQotICogdmZzIGlub2RlLgotICoKLSAqIFJldHVybiAn
dHJ1ZScgaWYgdGhlIG1mdCByZWNvcmQgbWF5IGJlIHdyaXR0ZW4gb3V0IGFuZCAnZmFsc2UnIGlm
IG5vdC4KLSAqCi0gKiBUaGUgY2FsbGVyIGhhcyBsb2NrZWQgdGhlIHBhZ2UgYW5kIGNsZWFyZWQg
dGhlIHVwdG9kYXRlIGZsYWcgb24gaXQgd2hpY2gKLSAqIG1lYW5zIHRoYXQgd2UgY2FuIHNhZmVs
eSB3cml0ZSBvdXQgYW55IGRpcnR5IG1mdCByZWNvcmRzIHRoYXQgZG8gbm90IGhhdmUKLSAqIHRo
ZWlyIGlub2RlcyBpbiBpY2FjaGUgYXMgZGV0ZXJtaW5lZCBieSBpbG9va3VwNSgpIGFzIGFueW9u
ZQotICogb3BlbmluZy9jcmVhdGluZyBzdWNoIGFuIGlub2RlIHdvdWxkIGJsb2NrIHdoZW4gYXR0
ZW1wdGluZyB0byBtYXAgdGhlIG1mdAotICogcmVjb3JkIGluIHJlYWRfY2FjaGVfcGFnZSgpIHVu
dGlsIHdlIGFyZSBmaW5pc2hlZCB3aXRoIHRoZSB3cml0ZSBvdXQuCi0gKgotICogSGVyZSBpcyBh
IGRlc2NyaXB0aW9uIG9mIHRoZSB0ZXN0cyB3ZSBwZXJmb3JtOgotICoKLSAqIElmIHRoZSBpbm9k
ZSBpcyBmb3VuZCBpbiBpY2FjaGUgd2Uga25vdyB0aGUgbWZ0IHJlY29yZCBtdXN0IGJlIGEgYmFz
ZSBtZnQKLSAqIHJlY29yZC4gIElmIGl0IGlzIGRpcnR5LCB3ZSBkbyBub3Qgd3JpdGUgaXQgYW5k
IHJldHVybiAnZmFsc2UnIGFzIHRoZSB2ZnMKLSAqIGlub2RlIHdyaXRlIHBhdGhzIHdpbGwgcmVz
dWx0IGluIHRoZSBhY2Nlc3MgdGltZXMgYmVpbmcgdXBkYXRlZCB3aGljaCB3b3VsZAotICogY2F1
c2UgdGhlIGJhc2UgbWZ0IHJlY29yZCB0byBiZSByZWRpcnRpZWQgYW5kIHdyaXR0ZW4gb3V0IGFn
YWluLiAgKFdlIGtub3cKLSAqIHRoZSBhY2Nlc3MgdGltZSB1cGRhdGUgd2lsbCBtb2RpZnkgdGhl
IGJhc2UgbWZ0IHJlY29yZCBiZWNhdXNlIFdpbmRvd3MKLSAqIGNoa2RzayBjb21wbGFpbnMgaWYg
dGhlIHN0YW5kYXJkIGluZm9ybWF0aW9uIGF0dHJpYnV0ZSBpcyBub3QgaW4gdGhlIGJhc2UKLSAq
IG1mdCByZWNvcmQuKQotICoKLSAqIElmIHRoZSBpbm9kZSBpcyBpbiBpY2FjaGUgYW5kIG5vdCBk
aXJ0eSwgd2UgYXR0ZW1wdCB0byBsb2NrIHRoZSBtZnQgcmVjb3JkCi0gKiBhbmQgaWYgd2UgZmlu
ZCB0aGUgbG9jayB3YXMgYWxyZWFkeSB0YWtlbiwgaXQgaXMgbm90IHNhZmUgdG8gd3JpdGUgdGhl
IG1mdAotICogcmVjb3JkIGFuZCB3ZSByZXR1cm4gJ2ZhbHNlJy4KLSAqCi0gKiBJZiB3ZSBtYW5h
Z2UgdG8gb2J0YWluIHRoZSBsb2NrIHdlIGhhdmUgZXhjbHVzaXZlIGFjY2VzcyB0byB0aGUgbWZ0
IHJlY29yZCwKLSAqIHdoaWNoIGFsc28gYWxsb3dzIHVzIHNhZmUgd3JpdGVvdXQgb2YgdGhlIG1m
dCByZWNvcmQuICBXZSB0aGVuIHNldAotICogQGxvY2tlZF9uaSB0byB0aGUgbG9ja2VkIG50ZnMg
aW5vZGUgYW5kIHJldHVybiAndHJ1ZScuCi0gKgotICogTm90ZSB3ZSBjYW5ub3QganVzdCBsb2Nr
IHRoZSBtZnQgcmVjb3JkIGFuZCBzbGVlcCB3aGlsZSB3YWl0aW5nIGZvciB0aGUgbG9jawotICog
YmVjYXVzZSB0aGlzIHdvdWxkIGRlYWRsb2NrIGR1ZSB0byBsb2NrIHJldmVyc2FsIChub3JtYWxs
eSB0aGUgbWZ0IHJlY29yZCBpcwotICogbG9ja2VkIGJlZm9yZSB0aGUgcGFnZSBpcyBsb2NrZWQg
YnV0IHdlIGFscmVhZHkgaGF2ZSB0aGUgcGFnZSBsb2NrZWQgaGVyZQotICogd2hlbiB3ZSB0cnkg
dG8gbG9jayB0aGUgbWZ0IHJlY29yZCkuCi0gKgotICogSWYgdGhlIGlub2RlIGlzIG5vdCBpbiBp
Y2FjaGUgd2UgbmVlZCB0byBwZXJmb3JtIGZ1cnRoZXIgY2hlY2tzLgotICoKLSAqIElmIHRoZSBt
ZnQgcmVjb3JkIGlzIG5vdCBhIEZJTEUgcmVjb3JkIG9yIGl0IGlzIGEgYmFzZSBtZnQgcmVjb3Jk
LCB3ZSBjYW4KLSAqIHNhZmVseSB3cml0ZSBpdCBhbmQgcmV0dXJuICd0cnVlJy4KLSAqCi0gKiBX
ZSBub3cga25vdyB0aGUgbWZ0IHJlY29yZCBpcyBhbiBleHRlbnQgbWZ0IHJlY29yZC4gIFdlIGNo
ZWNrIGlmIHRoZSBpbm9kZQotICogY29ycmVzcG9uZGluZyB0byBpdHMgYmFzZSBtZnQgcmVjb3Jk
IGlzIGluIGljYWNoZSBhbmQgb2J0YWluIGEgcmVmZXJlbmNlIHRvCi0gKiBpdCBpZiBpdCBpcy4g
IElmIGl0IGlzIG5vdCwgd2UgY2FuIHNhZmVseSB3cml0ZSBpdCBhbmQgcmV0dXJuICd0cnVlJy4K
LSAqCi0gKiBXZSBub3cgaGF2ZSB0aGUgYmFzZSBpbm9kZSBmb3IgdGhlIGV4dGVudCBtZnQgcmVj
b3JkLiAgV2UgY2hlY2sgaWYgaXQgaGFzIGFuCi0gKiBudGZzIGlub2RlIGZvciB0aGUgZXh0ZW50
IG1mdCByZWNvcmQgYXR0YWNoZWQgYW5kIGlmIG5vdCBpdCBpcyBzYWZlIHRvIHdyaXRlCi0gKiB0
aGUgZXh0ZW50IG1mdCByZWNvcmQgYW5kIHdlIHJldHVybiAndHJ1ZScuCi0gKgotICogVGhlIG50
ZnMgaW5vZGUgZm9yIHRoZSBleHRlbnQgbWZ0IHJlY29yZCBpcyBhdHRhY2hlZCB0byB0aGUgYmFz
ZSBpbm9kZSBzbyB3ZQotICogYXR0ZW1wdCB0byBsb2NrIHRoZSBleHRlbnQgbWZ0IHJlY29yZCBh
bmQgaWYgd2UgZmluZCB0aGUgbG9jayB3YXMgYWxyZWFkeQotICogdGFrZW4sIGl0IGlzIG5vdCBz
YWZlIHRvIHdyaXRlIHRoZSBleHRlbnQgbWZ0IHJlY29yZCBhbmQgd2UgcmV0dXJuICdmYWxzZScu
Ci0gKgotICogSWYgd2UgbWFuYWdlIHRvIG9idGFpbiB0aGUgbG9jayB3ZSBoYXZlIGV4Y2x1c2l2
ZSBhY2Nlc3MgdG8gdGhlIGV4dGVudCBtZnQKLSAqIHJlY29yZCwgd2hpY2ggYWxzbyBhbGxvd3Mg
dXMgc2FmZSB3cml0ZW91dCBvZiB0aGUgZXh0ZW50IG1mdCByZWNvcmQuICBXZQotICogc2V0IHRo
ZSBudGZzIGlub2RlIG9mIHRoZSBleHRlbnQgbWZ0IHJlY29yZCBjbGVhbiBhbmQgdGhlbiBzZXQg
QGxvY2tlZF9uaSB0bwotICogdGhlIG5vdyBsb2NrZWQgbnRmcyBpbm9kZSBhbmQgcmV0dXJuICd0
cnVlJy4KLSAqCi0gKiBOb3RlLCB0aGUgcmVhc29uIGZvciBhY3R1YWxseSB3cml0aW5nIGRpcnR5
IG1mdCByZWNvcmRzIGhlcmUgYW5kIG5vdCBqdXN0Ci0gKiByZWx5aW5nIG9uIHRoZSB2ZnMgaW5v
ZGUgZGlydHkgY29kZSBwYXRocyBpcyB0aGF0IHdlIGNhbiBoYXZlIG1mdCByZWNvcmRzCi0gKiBt
b2RpZmllZCB3aXRob3V0IHRoZW0gZXZlciBoYXZpbmcgYWN0dWFsIGlub2RlcyBpbiBtZW1vcnku
ICBBbHNvIHdlIGNhbiBoYXZlCi0gKiBkaXJ0eSBtZnQgcmVjb3JkcyB3aXRoIGNsZWFuIG50ZnMg
aW5vZGVzIGluIG1lbW9yeS4gIE5vbmUgb2YgdGhlIGRlc2NyaWJlZAotICogY2FzZXMgd291bGQg
cmVzdWx0IGluIHRoZSBkaXJ0eSBtZnQgcmVjb3JkcyBiZWluZyB3cml0dGVuIG91dCBpZiB3ZSBv
bmx5Ci0gKiByZWxpZWQgb24gdGhlIHZmcyBpbm9kZSBkaXJ0eSBjb2RlIHBhdGhzLiAgQW5kIHRo
ZXNlIGNhc2VzIGNhbiByZWFsbHkgb2NjdXIKLSAqIGR1cmluZyBhbGxvY2F0aW9uIG9mIG5ldyBt
ZnQgcmVjb3JkcyBhbmQgaW4gcGFydGljdWxhciB3aGVuIHRoZQotICogaW5pdGlhbGl6ZWRfc2l6
ZSBvZiB0aGUgJE1GVC8kREFUQSBhdHRyaWJ1dGUgaXMgZXh0ZW5kZWQgYW5kIHRoZSBuZXcgc3Bh
Y2UKLSAqIGlzIGluaXRpYWxpemVkIHVzaW5nIG50ZnNfbWZ0X3JlY29yZF9mb3JtYXQoKS4gIFRo
ZSBjbGVhbiBpbm9kZSBjYW4gdGhlbgotICogYXBwZWFyIGlmIHRoZSBtZnQgcmVjb3JkIGlzIHJl
dXNlZCBmb3IgYSBuZXcgaW5vZGUgYmVmb3JlIGl0IGdvdCB3cml0dGVuCi0gKiBvdXQuCi0gKi8K
LWJvb2wgbnRmc19tYXlfd3JpdGVfbWZ0X3JlY29yZChudGZzX3ZvbHVtZSAqdm9sLCBjb25zdCB1
bnNpZ25lZCBsb25nIG1mdF9ubywKLQkJY29uc3QgTUZUX1JFQ09SRCAqbSwgbnRmc19pbm9kZSAq
KmxvY2tlZF9uaSkKLXsKLQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gdm9sLT5zYjsKLQlzdHJ1
Y3QgaW5vZGUgKm1mdF92aSA9IHZvbC0+bWZ0X2lubzsKLQlzdHJ1Y3QgaW5vZGUgKnZpOwotCW50
ZnNfaW5vZGUgKm5pLCAqZW5pLCAqKmV4dGVudF9uaXM7Ci0JaW50IGk7Ci0JbnRmc19hdHRyIG5h
OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIGlub2RlIDB4JWx4LiIsIG1mdF9ubyk7Ci0J
LyoKLQkgKiBOb3JtYWxseSB3ZSBkbyBub3QgcmV0dXJuIGEgbG9ja2VkIGlub2RlIHNvIHNldCBA
bG9ja2VkX25pIHRvIE5VTEwuCi0JICovCi0JQlVHX09OKCFsb2NrZWRfbmkpOwotCSpsb2NrZWRf
bmkgPSBOVUxMOwotCS8qCi0JICogQ2hlY2sgaWYgdGhlIGlub2RlIGNvcnJlc3BvbmRpbmcgdG8g
dGhpcyBtZnQgcmVjb3JkIGlzIGluIHRoZSBWRlMKLQkgKiBpbm9kZSBjYWNoZSBhbmQgb2J0YWlu
IGEgcmVmZXJlbmNlIHRvIGl0IGlmIGl0IGlzLgotCSAqLwotCW50ZnNfZGVidWcoIkxvb2tpbmcg
Zm9yIGlub2RlIDB4JWx4IGluIGljYWNoZS4iLCBtZnRfbm8pOwotCW5hLm1mdF9ubyA9IG1mdF9u
bzsKLQluYS5uYW1lID0gTlVMTDsKLQluYS5uYW1lX2xlbiA9IDA7Ci0JbmEudHlwZSA9IEFUX1VO
VVNFRDsKLQkvKgotCSAqIE9wdGltaXplIGlub2RlIDAsIGkuZS4gJE1GVCBpdHNlbGYsIHNpbmNl
IHdlIGhhdmUgaXQgaW4gbWVtb3J5IGFuZAotCSAqIHdlIGdldCBoZXJlIGZvciBpdCByYXRoZXIg
b2Z0ZW4uCi0JICovCi0JaWYgKCFtZnRfbm8pIHsKLQkJLyogQmFsYW5jZSB0aGUgYmVsb3cgaXB1
dCgpLiAqLwotCQl2aSA9IGlncmFiKG1mdF92aSk7Ci0JCUJVR19PTih2aSAhPSBtZnRfdmkpOwot
CX0gZWxzZSB7Ci0JCS8qCi0JCSAqIEhhdmUgdG8gdXNlIGlsb29rdXA1X25vd2FpdCgpIHNpbmNl
IGlsb29rdXA1KCkgd2FpdHMgZm9yIHRoZQotCQkgKiBpbm9kZSBsb2NrIHdoaWNoIGNhdXNlcyBu
dGZzIHRvIGRlYWRsb2NrIHdoZW4gYSBjb25jdXJyZW50Ci0JCSAqIGlub2RlIHdyaXRlIHZpYSB0
aGUgaW5vZGUgZGlydHkgY29kZSBwYXRocyBhbmQgdGhlIHBhZ2UKLQkJICogZGlydHkgY29kZSBw
YXRoIG9mIHRoZSBpbm9kZSBkaXJ0eSBjb2RlIHBhdGggd2hlbiB3cml0aW5nCi0JCSAqICRNRlQg
b2NjdXJzLgotCQkgKi8KLQkJdmkgPSBpbG9va3VwNV9ub3dhaXQoc2IsIG1mdF9ubywgbnRmc190
ZXN0X2lub2RlLCAmbmEpOwotCX0KLQlpZiAodmkpIHsKLQkJbnRmc19kZWJ1ZygiQmFzZSBpbm9k
ZSAweCVseCBpcyBpbiBpY2FjaGUuIiwgbWZ0X25vKTsKLQkJLyogVGhlIGlub2RlIGlzIGluIGlj
YWNoZS4gKi8KLQkJbmkgPSBOVEZTX0kodmkpOwotCQkvKiBUYWtlIGEgcmVmZXJlbmNlIHRvIHRo
ZSBudGZzIGlub2RlLiAqLwotCQlhdG9taWNfaW5jKCZuaS0+Y291bnQpOwotCQkvKiBJZiB0aGUg
aW5vZGUgaXMgZGlydHksIGRvIG5vdCB3cml0ZSB0aGlzIHJlY29yZC4gKi8KLQkJaWYgKE5Jbm9E
aXJ0eShuaSkpIHsKLQkJCW50ZnNfZGVidWcoIklub2RlIDB4JWx4IGlzIGRpcnR5LCBkbyBub3Qg
d3JpdGUgaXQuIiwKLQkJCQkJbWZ0X25vKTsKLQkJCWF0b21pY19kZWMoJm5pLT5jb3VudCk7Ci0J
CQlpcHV0KHZpKTsKLQkJCXJldHVybiBmYWxzZTsKLQkJfQotCQludGZzX2RlYnVnKCJJbm9kZSAw
eCVseCBpcyBub3QgZGlydHkuIiwgbWZ0X25vKTsKLQkJLyogVGhlIGlub2RlIGlzIG5vdCBkaXJ0
eSwgdHJ5IHRvIHRha2UgdGhlIG1mdCByZWNvcmQgbG9jay4gKi8KLQkJaWYgKHVubGlrZWx5KCFt
dXRleF90cnlsb2NrKCZuaS0+bXJlY19sb2NrKSkpIHsKLQkJCW50ZnNfZGVidWcoIk1mdCByZWNv
cmQgMHglbHggaXMgYWxyZWFkeSBsb2NrZWQsIGRvICIKLQkJCQkJIm5vdCB3cml0ZSBpdC4iLCBt
ZnRfbm8pOwotCQkJYXRvbWljX2RlYygmbmktPmNvdW50KTsKLQkJCWlwdXQodmkpOwotCQkJcmV0
dXJuIGZhbHNlOwotCQl9Ci0JCW50ZnNfZGVidWcoIk1hbmFnZWQgdG8gbG9jayBtZnQgcmVjb3Jk
IDB4JWx4LCB3cml0ZSBpdC4iLAotCQkJCW1mdF9ubyk7Ci0JCS8qCi0JCSAqIFRoZSB3cml0ZSBo
YXMgdG8gb2NjdXIgd2hpbGUgd2UgaG9sZCB0aGUgbWZ0IHJlY29yZCBsb2NrIHNvCi0JCSAqIHJl
dHVybiB0aGUgbG9ja2VkIG50ZnMgaW5vZGUuCi0JCSAqLwotCQkqbG9ja2VkX25pID0gbmk7Ci0J
CXJldHVybiB0cnVlOwotCX0KLQludGZzX2RlYnVnKCJJbm9kZSAweCVseCBpcyBub3QgaW4gaWNh
Y2hlLiIsIG1mdF9ubyk7Ci0JLyogVGhlIGlub2RlIGlzIG5vdCBpbiBpY2FjaGUuICovCi0JLyog
V3JpdGUgdGhlIHJlY29yZCBpZiBpdCBpcyBub3QgYSBtZnQgcmVjb3JkICh0eXBlICJGSUxFIiku
ICovCi0JaWYgKCFudGZzX2lzX21mdF9yZWNvcmQobS0+bWFnaWMpKSB7Ci0JCW50ZnNfZGVidWco
Ik1mdCByZWNvcmQgMHglbHggaXMgbm90IGEgRklMRSByZWNvcmQsIHdyaXRlIGl0LiIsCi0JCQkJ
bWZ0X25vKTsKLQkJcmV0dXJuIHRydWU7Ci0JfQotCS8qIFdyaXRlIHRoZSBtZnQgcmVjb3JkIGlm
IGl0IGlzIGEgYmFzZSBpbm9kZS4gKi8KLQlpZiAoIW0tPmJhc2VfbWZ0X3JlY29yZCkgewotCQlu
dGZzX2RlYnVnKCJNZnQgcmVjb3JkIDB4JWx4IGlzIGEgYmFzZSByZWNvcmQsIHdyaXRlIGl0LiIs
Ci0JCQkJbWZ0X25vKTsKLQkJcmV0dXJuIHRydWU7Ci0JfQotCS8qCi0JICogVGhpcyBpcyBhbiBl
eHRlbnQgbWZ0IHJlY29yZC4gIENoZWNrIGlmIHRoZSBpbm9kZSBjb3JyZXNwb25kaW5nIHRvCi0J
ICogaXRzIGJhc2UgbWZ0IHJlY29yZCBpcyBpbiBpY2FjaGUgYW5kIG9idGFpbiBhIHJlZmVyZW5j
ZSB0byBpdCBpZiBpdAotCSAqIGlzLgotCSAqLwotCW5hLm1mdF9ubyA9IE1SRUZfTEUobS0+YmFz
ZV9tZnRfcmVjb3JkKTsKLQludGZzX2RlYnVnKCJNZnQgcmVjb3JkIDB4JWx4IGlzIGFuIGV4dGVu
dCByZWNvcmQuICBMb29raW5nIGZvciBiYXNlICIKLQkJCSJpbm9kZSAweCVseCBpbiBpY2FjaGUu
IiwgbWZ0X25vLCBuYS5tZnRfbm8pOwotCWlmICghbmEubWZ0X25vKSB7Ci0JCS8qIEJhbGFuY2Ug
dGhlIGJlbG93IGlwdXQoKS4gKi8KLQkJdmkgPSBpZ3JhYihtZnRfdmkpOwotCQlCVUdfT04odmkg
IT0gbWZ0X3ZpKTsKLQl9IGVsc2UKLQkJdmkgPSBpbG9va3VwNV9ub3dhaXQoc2IsIG5hLm1mdF9u
bywgbnRmc190ZXN0X2lub2RlLAotCQkJCSZuYSk7Ci0JaWYgKCF2aSkgewotCQkvKgotCQkgKiBU
aGUgYmFzZSBpbm9kZSBpcyBub3QgaW4gaWNhY2hlLCB3cml0ZSB0aGlzIGV4dGVudCBtZnQKLQkJ
ICogcmVjb3JkLgotCQkgKi8KLQkJbnRmc19kZWJ1ZygiQmFzZSBpbm9kZSAweCVseCBpcyBub3Qg
aW4gaWNhY2hlLCB3cml0ZSB0aGUgIgotCQkJCSJleHRlbnQgcmVjb3JkLiIsIG5hLm1mdF9ubyk7
Ci0JCXJldHVybiB0cnVlOwotCX0KLQludGZzX2RlYnVnKCJCYXNlIGlub2RlIDB4JWx4IGlzIGlu
IGljYWNoZS4iLCBuYS5tZnRfbm8pOwotCS8qCi0JICogVGhlIGJhc2UgaW5vZGUgaXMgaW4gaWNh
Y2hlLiAgQ2hlY2sgaWYgaXQgaGFzIHRoZSBleHRlbnQgaW5vZGUKLQkgKiBjb3JyZXNwb25kaW5n
IHRvIHRoaXMgZXh0ZW50IG1mdCByZWNvcmQgYXR0YWNoZWQuCi0JICovCi0JbmkgPSBOVEZTX0ko
dmkpOwotCW11dGV4X2xvY2soJm5pLT5leHRlbnRfbG9jayk7Ci0JaWYgKG5pLT5ucl9leHRlbnRz
IDw9IDApIHsKLQkJLyoKLQkJICogVGhlIGJhc2UgaW5vZGUgaGFzIG5vIGF0dGFjaGVkIGV4dGVu
dCBpbm9kZXMsIHdyaXRlIHRoaXMKLQkJICogZXh0ZW50IG1mdCByZWNvcmQuCi0JCSAqLwotCQlt
dXRleF91bmxvY2soJm5pLT5leHRlbnRfbG9jayk7Ci0JCWlwdXQodmkpOwotCQludGZzX2RlYnVn
KCJCYXNlIGlub2RlIDB4JWx4IGhhcyBubyBhdHRhY2hlZCBleHRlbnQgaW5vZGVzLCAiCi0JCQkJ
IndyaXRlIHRoZSBleHRlbnQgcmVjb3JkLiIsIG5hLm1mdF9ubyk7Ci0JCXJldHVybiB0cnVlOwot
CX0KLQkvKiBJdGVyYXRlIG92ZXIgdGhlIGF0dGFjaGVkIGV4dGVudCBpbm9kZXMuICovCi0JZXh0
ZW50X25pcyA9IG5pLT5leHQuZXh0ZW50X250ZnNfaW5vczsKLQlmb3IgKGVuaSA9IE5VTEwsIGkg
PSAwOyBpIDwgbmktPm5yX2V4dGVudHM7ICsraSkgewotCQlpZiAobWZ0X25vID09IGV4dGVudF9u
aXNbaV0tPm1mdF9ubykgewotCQkJLyoKLQkJCSAqIEZvdW5kIHRoZSBleHRlbnQgaW5vZGUgY29y
cmVzcG9uZGluZyB0byB0aGlzIGV4dGVudAotCQkJICogbWZ0IHJlY29yZC4KLQkJCSAqLwotCQkJ
ZW5pID0gZXh0ZW50X25pc1tpXTsKLQkJCWJyZWFrOwotCQl9Ci0JfQotCS8qCi0JICogSWYgdGhl
IGV4dGVudCBpbm9kZSB3YXMgbm90IGF0dGFjaGVkIHRvIHRoZSBiYXNlIGlub2RlLCB3cml0ZSB0
aGlzCi0JICogZXh0ZW50IG1mdCByZWNvcmQuCi0JICovCi0JaWYgKCFlbmkpIHsKLQkJbXV0ZXhf
dW5sb2NrKCZuaS0+ZXh0ZW50X2xvY2spOwotCQlpcHV0KHZpKTsKLQkJbnRmc19kZWJ1ZygiRXh0
ZW50IGlub2RlIDB4JWx4IGlzIG5vdCBhdHRhY2hlZCB0byBpdHMgYmFzZSAiCi0JCQkJImlub2Rl
IDB4JWx4LCB3cml0ZSB0aGUgZXh0ZW50IHJlY29yZC4iLAotCQkJCW1mdF9ubywgbmEubWZ0X25v
KTsKLQkJcmV0dXJuIHRydWU7Ci0JfQotCW50ZnNfZGVidWcoIkV4dGVudCBpbm9kZSAweCVseCBp
cyBhdHRhY2hlZCB0byBpdHMgYmFzZSBpbm9kZSAweCVseC4iLAotCQkJbWZ0X25vLCBuYS5tZnRf
bm8pOwotCS8qIFRha2UgYSByZWZlcmVuY2UgdG8gdGhlIGV4dGVudCBudGZzIGlub2RlLiAqLwot
CWF0b21pY19pbmMoJmVuaS0+Y291bnQpOwotCW11dGV4X3VubG9jaygmbmktPmV4dGVudF9sb2Nr
KTsKLQkvKgotCSAqIEZvdW5kIHRoZSBleHRlbnQgaW5vZGUgY29yZXNwb25kaW5nIHRvIHRoaXMg
ZXh0ZW50IG1mdCByZWNvcmQuCi0JICogVHJ5IHRvIHRha2UgdGhlIG1mdCByZWNvcmQgbG9jay4K
LQkgKi8KLQlpZiAodW5saWtlbHkoIW11dGV4X3RyeWxvY2soJmVuaS0+bXJlY19sb2NrKSkpIHsK
LQkJYXRvbWljX2RlYygmZW5pLT5jb3VudCk7Ci0JCWlwdXQodmkpOwotCQludGZzX2RlYnVnKCJF
eHRlbnQgbWZ0IHJlY29yZCAweCVseCBpcyBhbHJlYWR5IGxvY2tlZCwgZG8gIgotCQkJCSJub3Qg
d3JpdGUgaXQuIiwgbWZ0X25vKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQludGZzX2RlYnVnKCJN
YW5hZ2VkIHRvIGxvY2sgZXh0ZW50IG1mdCByZWNvcmQgMHglbHgsIHdyaXRlIGl0LiIsCi0JCQlt
ZnRfbm8pOwotCWlmIChOSW5vVGVzdENsZWFyRGlydHkoZW5pKSkKLQkJbnRmc19kZWJ1ZygiRXh0
ZW50IGlub2RlIDB4JWx4IGlzIGRpcnR5LCBtYXJraW5nIGl0IGNsZWFuLiIsCi0JCQkJbWZ0X25v
KTsKLQkvKgotCSAqIFRoZSB3cml0ZSBoYXMgdG8gb2NjdXIgd2hpbGUgd2UgaG9sZCB0aGUgbWZ0
IHJlY29yZCBsb2NrIHNvIHJldHVybgotCSAqIHRoZSBsb2NrZWQgZXh0ZW50IG50ZnMgaW5vZGUu
Ci0JICovCi0JKmxvY2tlZF9uaSA9IGVuaTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotc3RhdGljIGNv
bnN0IGNoYXIgKmVzID0gIiAgTGVhdmluZyBpbmNvbnNpc3RlbnQgbWV0YWRhdGEuICBVbm1vdW50
IGFuZCBydW4gIgotCQkiY2hrZHNrLiI7Ci0KLS8qKgotICogbnRmc19tZnRfYml0bWFwX2ZpbmRf
YW5kX2FsbG9jX2ZyZWVfcmVjX25vbG9jayAtIHNlZSBuYW1lCi0gKiBAdm9sOgl2b2x1bWUgb24g
d2hpY2ggdG8gc2VhcmNoIGZvciBhIGZyZWUgbWZ0IHJlY29yZAotICogQGJhc2Vfbmk6CW9wZW4g
YmFzZSBpbm9kZSBpZiBhbGxvY2F0aW5nIGFuIGV4dGVudCBtZnQgcmVjb3JkIG9yIE5VTEwKLSAq
Ci0gKiBTZWFyY2ggZm9yIGEgZnJlZSBtZnQgcmVjb3JkIGluIHRoZSBtZnQgYml0bWFwIGF0dHJp
YnV0ZSBvbiB0aGUgbnRmcyB2b2x1bWUKLSAqIEB2b2wuCi0gKgotICogSWYgQGJhc2VfbmkgaXMg
TlVMTCBzdGFydCB0aGUgc2VhcmNoIGF0IHRoZSBkZWZhdWx0IGFsbG9jYXRvciBwb3NpdGlvbi4K
LSAqCi0gKiBJZiBAYmFzZV9uaSBpcyBub3QgTlVMTCBzdGFydCB0aGUgc2VhcmNoIGF0IHRoZSBt
ZnQgcmVjb3JkIGFmdGVyIHRoZSBiYXNlCi0gKiBtZnQgcmVjb3JkIEBiYXNlX25pLgotICoKLSAq
IFJldHVybiB0aGUgZnJlZSBtZnQgcmVjb3JkIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJv
ci4gIEFuIGVycm9yIGNvZGUgb2YKLSAqIC1FTk9TUEMgbWVhbnMgdGhhdCB0aGVyZSBhcmUgbm8g
ZnJlZSBtZnQgcmVjb3JkcyBpbiB0aGUgY3VycmVudGx5Ci0gKiBpbml0aWFsaXplZCBtZnQgYml0
bWFwLgotICoKLSAqIExvY2tpbmc6IENhbGxlciBtdXN0IGhvbGQgdm9sLT5tZnRibXBfbG9jayBm
b3Igd3JpdGluZy4KLSAqLwotc3RhdGljIGludCBudGZzX21mdF9iaXRtYXBfZmluZF9hbmRfYWxs
b2NfZnJlZV9yZWNfbm9sb2NrKG50ZnNfdm9sdW1lICp2b2wsCi0JCW50ZnNfaW5vZGUgKmJhc2Vf
bmkpCi17Ci0JczY0IHBhc3NfZW5kLCBsbCwgZGF0YV9wb3MsIHBhc3Nfc3RhcnQsIG9mcywgYml0
OwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0Jc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1mdGJtcF9t
YXBwaW5nOwotCXU4ICpidWYsICpieXRlOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXVuc2lnbmVk
IGludCBwYWdlX29mcywgc2l6ZTsKLQl1OCBwYXNzLCBiOwotCi0JbnRmc19kZWJ1ZygiU2VhcmNo
aW5nIGZvciBmcmVlIG1mdCByZWNvcmQgaW4gdGhlIGN1cnJlbnRseSAiCi0JCQkiaW5pdGlhbGl6
ZWQgbWZ0IGJpdG1hcC4iKTsKLQltZnRibXBfbWFwcGluZyA9IHZvbC0+bWZ0Ym1wX2luby0+aV9t
YXBwaW5nOwotCS8qCi0JICogU2V0IHRoZSBlbmQgb2YgdGhlIHBhc3MgbWFraW5nIHN1cmUgd2Ug
ZG8gbm90IG92ZXJmbG93IHRoZSBtZnQKLQkgKiBiaXRtYXAuCi0JICovCi0JcmVhZF9sb2NrX2ly
cXNhdmUoJk5URlNfSSh2b2wtPm1mdF9pbm8pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlwYXNzX2Vu
ZCA9IE5URlNfSSh2b2wtPm1mdF9pbm8pLT5hbGxvY2F0ZWRfc2l6ZSA+PgotCQkJdm9sLT5tZnRf
cmVjb3JkX3NpemVfYml0czsKLQlyZWFkX3VubG9ja19pcnFyZXN0b3JlKCZOVEZTX0kodm9sLT5t
ZnRfaW5vKS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JcmVhZF9sb2NrX2lycXNhdmUoJk5URlNfSSh2
b2wtPm1mdGJtcF9pbm8pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlsbCA9IE5URlNfSSh2b2wtPm1m
dGJtcF9pbm8pLT5pbml0aWFsaXplZF9zaXplIDw8IDM7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9y
ZSgmTlRGU19JKHZvbC0+bWZ0Ym1wX2lubyktPnNpemVfbG9jaywgZmxhZ3MpOwotCWlmIChwYXNz
X2VuZCA+IGxsKQotCQlwYXNzX2VuZCA9IGxsOwotCXBhc3MgPSAxOwotCWlmICghYmFzZV9uaSkK
LQkJZGF0YV9wb3MgPSB2b2wtPm1mdF9kYXRhX3BvczsKLQllbHNlCi0JCWRhdGFfcG9zID0gYmFz
ZV9uaS0+bWZ0X25vICsgMTsKLQlpZiAoZGF0YV9wb3MgPCAyNCkKLQkJZGF0YV9wb3MgPSAyNDsK
LQlpZiAoZGF0YV9wb3MgPj0gcGFzc19lbmQpIHsKLQkJZGF0YV9wb3MgPSAyNDsKLQkJcGFzcyA9
IDI7Ci0JCS8qIFRoaXMgaGFwcGVucyBvbiBhIGZyZXNobHkgZm9ybWF0dGVkIHZvbHVtZS4gKi8K
LQkJaWYgKGRhdGFfcG9zID49IHBhc3NfZW5kKQotCQkJcmV0dXJuIC1FTk9TUEM7Ci0JfQotCXBh
c3Nfc3RhcnQgPSBkYXRhX3BvczsKLQludGZzX2RlYnVnKCJTdGFydGluZyBiaXRtYXAgc2VhcmNo
OiBwYXNzICV1LCBwYXNzX3N0YXJ0IDB4JWxseCwgIgotCQkJInBhc3NfZW5kIDB4JWxseCwgZGF0
YV9wb3MgMHglbGx4LiIsIHBhc3MsCi0JCQkobG9uZyBsb25nKXBhc3Nfc3RhcnQsIChsb25nIGxv
bmcpcGFzc19lbmQsCi0JCQkobG9uZyBsb25nKWRhdGFfcG9zKTsKLQkvKiBMb29wIHVudGlsIGEg
ZnJlZSBtZnQgcmVjb3JkIGlzIGZvdW5kLiAqLwotCWZvciAoOyBwYXNzIDw9IDI7KSB7Ci0JCS8q
IENhcCBzaXplIHRvIHBhc3NfZW5kLiAqLwotCQlvZnMgPSBkYXRhX3BvcyA+PiAzOwotCQlwYWdl
X29mcyA9IG9mcyAmIH5QQUdFX01BU0s7Ci0JCXNpemUgPSBQQUdFX1NJWkUgLSBwYWdlX29mczsK
LQkJbGwgPSAoKHBhc3NfZW5kICsgNykgPj4gMykgLSBvZnM7Ci0JCWlmIChzaXplID4gbGwpCi0J
CQlzaXplID0gbGw7Ci0JCXNpemUgPDw9IDM7Ci0JCS8qCi0JCSAqIElmIHdlIGFyZSBzdGlsbCB3
aXRoaW4gdGhlIGFjdGl2ZSBwYXNzLCBzZWFyY2ggdGhlIG5leHQgcGFnZQotCQkgKiBmb3IgYSB6
ZXJvIGJpdC4KLQkJICovCi0JCWlmIChzaXplKSB7Ci0JCQlwYWdlID0gbnRmc19tYXBfcGFnZSht
ZnRibXBfbWFwcGluZywKLQkJCQkJb2ZzID4+IFBBR0VfU0hJRlQpOwotCQkJaWYgKElTX0VSUihw
YWdlKSkgewotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZWFkIG1mdCAiCi0J
CQkJCQkiYml0bWFwLCBhYm9ydGluZy4iKTsKLQkJCQlyZXR1cm4gUFRSX0VSUihwYWdlKTsKLQkJ
CX0KLQkJCWJ1ZiA9ICh1OCopcGFnZV9hZGRyZXNzKHBhZ2UpICsgcGFnZV9vZnM7Ci0JCQliaXQg
PSBkYXRhX3BvcyAmIDc7Ci0JCQlkYXRhX3BvcyAmPSB+N3VsbDsKLQkJCW50ZnNfZGVidWcoIkJl
Zm9yZSBpbm5lciBmb3IgbG9vcDogc2l6ZSAweCV4LCAiCi0JCQkJCSJkYXRhX3BvcyAweCVsbHgs
IGJpdCAweCVsbHgiLCBzaXplLAotCQkJCQkobG9uZyBsb25nKWRhdGFfcG9zLCAobG9uZyBsb25n
KWJpdCk7Ci0JCQlmb3IgKDsgYml0IDwgc2l6ZSAmJiBkYXRhX3BvcyArIGJpdCA8IHBhc3NfZW5k
OwotCQkJCQliaXQgJj0gfjd1bGwsIGJpdCArPSA4KSB7Ci0JCQkJYnl0ZSA9IGJ1ZiArIChiaXQg
Pj4gMyk7Ci0JCQkJaWYgKCpieXRlID09IDB4ZmYpCi0JCQkJCWNvbnRpbnVlOwotCQkJCWIgPSBm
ZnooKHVuc2lnbmVkIGxvbmcpKmJ5dGUpOwotCQkJCWlmIChiIDwgOCAmJiBiID49IChiaXQgJiA3
KSkgewotCQkJCQlsbCA9IGRhdGFfcG9zICsgKGJpdCAmIH43dWxsKSArIGI7Ci0JCQkJCWlmICh1
bmxpa2VseShsbCA+ICgxbGwgPDwgMzIpKSkgewotCQkJCQkJbnRmc191bm1hcF9wYWdlKHBhZ2Up
OwotCQkJCQkJcmV0dXJuIC1FTk9TUEM7Ci0JCQkJCX0KLQkJCQkJKmJ5dGUgfD0gMSA8PCBiOwot
CQkJCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsKLQkJCQkJc2V0X3BhZ2VfZGlydHkocGFnZSk7
Ci0JCQkJCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLQkJCQkJbnRmc19kZWJ1ZygiRG9uZS4gIChG
b3VuZCBhbmQgIgotCQkJCQkJCSJhbGxvY2F0ZWQgbWZ0IHJlY29yZCAiCi0JCQkJCQkJIjB4JWxs
eC4pIiwKLQkJCQkJCQkobG9uZyBsb25nKWxsKTsKLQkJCQkJcmV0dXJuIGxsOwotCQkJCX0KLQkJ
CX0KLQkJCW50ZnNfZGVidWcoIkFmdGVyIGlubmVyIGZvciBsb29wOiBzaXplIDB4JXgsICIKLQkJ
CQkJImRhdGFfcG9zIDB4JWxseCwgYml0IDB4JWxseCIsIHNpemUsCi0JCQkJCShsb25nIGxvbmcp
ZGF0YV9wb3MsIChsb25nIGxvbmcpYml0KTsKLQkJCWRhdGFfcG9zICs9IHNpemU7Ci0JCQludGZz
X3VubWFwX3BhZ2UocGFnZSk7Ci0JCQkvKgotCQkJICogSWYgdGhlIGVuZCBvZiB0aGUgcGFzcyBo
YXMgbm90IGJlZW4gcmVhY2hlZCB5ZXQsCi0JCQkgKiBjb250aW51ZSBzZWFyY2hpbmcgdGhlIG1m
dCBiaXRtYXAgZm9yIGEgemVybyBiaXQuCi0JCQkgKi8KLQkJCWlmIChkYXRhX3BvcyA8IHBhc3Nf
ZW5kKQotCQkJCWNvbnRpbnVlOwotCQl9Ci0JCS8qIERvIHRoZSBuZXh0IHBhc3MuICovCi0JCWlm
ICgrK3Bhc3MgPT0gMikgewotCQkJLyoKLQkJCSAqIFN0YXJ0aW5nIHRoZSBzZWNvbmQgcGFzcywg
aW4gd2hpY2ggd2Ugc2NhbiB0aGUgZmlyc3QKLQkJCSAqIHBhcnQgb2YgdGhlIHpvbmUgd2hpY2gg
d2Ugb21pdHRlZCBlYXJsaWVyLgotCQkJICovCi0JCQlwYXNzX2VuZCA9IHBhc3Nfc3RhcnQ7Ci0J
CQlkYXRhX3BvcyA9IHBhc3Nfc3RhcnQgPSAyNDsKLQkJCW50ZnNfZGVidWcoInBhc3MgJWksIHBh
c3Nfc3RhcnQgMHglbGx4LCBwYXNzX2VuZCAiCi0JCQkJCSIweCVsbHguIiwgcGFzcywgKGxvbmcg
bG9uZylwYXNzX3N0YXJ0LAotCQkJCQkobG9uZyBsb25nKXBhc3NfZW5kKTsKLQkJCWlmIChkYXRh
X3BvcyA+PSBwYXNzX2VuZCkKLQkJCQlicmVhazsKLQkJfQotCX0KLQkvKiBObyBmcmVlIG1mdCBy
ZWNvcmRzIGluIGN1cnJlbnRseSBpbml0aWFsaXplZCBtZnQgYml0bWFwLiAqLwotCW50ZnNfZGVi
dWcoIkRvbmUuICAoTm8gZnJlZSBtZnQgcmVjb3JkcyBsZWZ0IGluIGN1cnJlbnRseSBpbml0aWFs
aXplZCAiCi0JCQkibWZ0IGJpdG1hcC4pIik7Ci0JcmV0dXJuIC1FTk9TUEM7Ci19Ci0KLS8qKgot
ICogbnRmc19tZnRfYml0bWFwX2V4dGVuZF9hbGxvY2F0aW9uX25vbG9jayAtIGV4dGVuZCBtZnQg
Yml0bWFwIGJ5IGEgY2x1c3RlcgotICogQHZvbDoJdm9sdW1lIG9uIHdoaWNoIHRvIGV4dGVuZCB0
aGUgbWZ0IGJpdG1hcCBhdHRyaWJ1dGUKLSAqCi0gKiBFeHRlbmQgdGhlIG1mdCBiaXRtYXAgYXR0
cmlidXRlIG9uIHRoZSBudGZzIHZvbHVtZSBAdm9sIGJ5IG9uZSBjbHVzdGVyLgotICoKLSAqIE5v
dGU6IE9ubHkgY2hhbmdlcyBhbGxvY2F0ZWRfc2l6ZSwgaS5lLiBkb2VzIG5vdCB0b3VjaCBpbml0
aWFsaXplZF9zaXplIG9yCi0gKiBkYXRhX3NpemUuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2Vz
cyBhbmQgLWVycm5vIG9uIGVycm9yLgotICoKLSAqIExvY2tpbmc6IC0gQ2FsbGVyIG11c3QgaG9s
ZCB2b2wtPm1mdGJtcF9sb2NrIGZvciB3cml0aW5nLgotICoJICAgIC0gVGhpcyBmdW5jdGlvbiB0
YWtlcyBOVEZTX0kodm9sLT5tZnRibXBfaW5vKS0+cnVubGlzdC5sb2NrIGZvcgotICoJICAgICAg
d3JpdGluZyBhbmQgcmVsZWFzZXMgaXQgYmVmb3JlIHJldHVybmluZy4KLSAqCSAgICAtIFRoaXMg
ZnVuY3Rpb24gdGFrZXMgdm9sLT5sY25ibXBfbG9jayBmb3Igd3JpdGluZyBhbmQgcmVsZWFzZXMg
aXQKLSAqCSAgICAgIGJlZm9yZSByZXR1cm5pbmcuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19tZnRf
Yml0bWFwX2V4dGVuZF9hbGxvY2F0aW9uX25vbG9jayhudGZzX3ZvbHVtZSAqdm9sKQotewotCUxD
TiBsY247Ci0JczY0IGxsOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0Jc3RydWN0IHBhZ2UgKnBh
Z2U7Ci0JbnRmc19pbm9kZSAqbWZ0X25pLCAqbWZ0Ym1wX25pOwotCXJ1bmxpc3RfZWxlbWVudCAq
cmwsICpybDIgPSBOVUxMOwotCW50ZnNfYXR0cl9zZWFyY2hfY3R4ICpjdHggPSBOVUxMOwotCU1G
VF9SRUNPUkQgKm1yZWM7Ci0JQVRUUl9SRUNPUkQgKmEgPSBOVUxMOwotCWludCByZXQsIG1wX3Np
emU7Ci0JdTMyIG9sZF9hbGVuID0gMDsKLQl1OCAqYiwgdGI7Ci0Jc3RydWN0IHsKLQkJdTggYWRk
ZWRfY2x1c3RlcjoxOwotCQl1OCBhZGRlZF9ydW46MTsKLQkJdTggbXBfcmVidWlsdDoxOwotCX0g
c3RhdHVzID0geyAwLCAwLCAwIH07Ci0KLQludGZzX2RlYnVnKCJFeHRlbmRpbmcgbWZ0IGJpdG1h
cCBhbGxvY2F0aW9uLiIpOwotCW1mdF9uaSA9IE5URlNfSSh2b2wtPm1mdF9pbm8pOwotCW1mdGJt
cF9uaSA9IE5URlNfSSh2b2wtPm1mdGJtcF9pbm8pOwotCS8qCi0JICogRGV0ZXJtaW5lIHRoZSBs
YXN0IGxjbiBvZiB0aGUgbWZ0IGJpdG1hcC4gIFRoZSBhbGxvY2F0ZWQgc2l6ZSBvZiB0aGUKLQkg
KiBtZnQgYml0bWFwIGNhbm5vdCBiZSB6ZXJvIHNvIHdlIGFyZSBvayB0byBkbyB0aGlzLgotCSAq
LwotCWRvd25fd3JpdGUoJm1mdGJtcF9uaS0+cnVubGlzdC5sb2NrKTsKLQlyZWFkX2xvY2tfaXJx
c2F2ZSgmbWZ0Ym1wX25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlsbCA9IG1mdGJtcF9uaS0+YWxs
b2NhdGVkX3NpemU7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0Ym1wX25pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQlybCA9IG50ZnNfYXR0cl9maW5kX3Zjbl9ub2xvY2sobWZ0Ym1wX25pLAot
CQkJKGxsIC0gMSkgPj4gdm9sLT5jbHVzdGVyX3NpemVfYml0cywgTlVMTCk7Ci0JaWYgKElTX0VS
UihybCkgfHwgdW5saWtlbHkoIXJsLT5sZW5ndGggfHwgcmwtPmxjbiA8IDApKSB7Ci0JCXVwX3dy
aXRlKCZtZnRibXBfbmktPnJ1bmxpc3QubG9jayk7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZh
aWxlZCB0byBkZXRlcm1pbmUgbGFzdCBhbGxvY2F0ZWQgIgotCQkJCSJjbHVzdGVyIG9mIG1mdCBi
aXRtYXAgYXR0cmlidXRlLiIpOwotCQlpZiAoIUlTX0VSUihybCkpCi0JCQlyZXQgPSAtRUlPOwot
CQllbHNlCi0JCQlyZXQgPSBQVFJfRVJSKHJsKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JbGNuID0g
cmwtPmxjbiArIHJsLT5sZW5ndGg7Ci0JbnRmc19kZWJ1ZygiTGFzdCBsY24gb2YgbWZ0IGJpdG1h
cCBhdHRyaWJ1dGUgaXMgMHglbGx4LiIsCi0JCQkobG9uZyBsb25nKWxjbik7Ci0JLyoKLQkgKiBB
dHRlbXB0IHRvIGdldCB0aGUgY2x1c3RlciBmb2xsb3dpbmcgdGhlIGxhc3QgYWxsb2NhdGVkIGNs
dXN0ZXIgYnkKLQkgKiBoYW5kIGFzIGl0IG1heSBiZSBpbiB0aGUgTUZUIHpvbmUgc28gdGhlIGFs
bG9jYXRvciB3b3VsZCBub3QgZ2l2ZSBpdAotCSAqIHRvIHVzLgotCSAqLwotCWxsID0gbGNuID4+
IDM7Ci0JcGFnZSA9IG50ZnNfbWFwX3BhZ2Uodm9sLT5sY25ibXBfaW5vLT5pX21hcHBpbmcsCi0J
CQlsbCA+PiBQQUdFX1NISUZUKTsKLQlpZiAoSVNfRVJSKHBhZ2UpKSB7Ci0JCXVwX3dyaXRlKCZt
ZnRibXBfbmktPnJ1bmxpc3QubG9jayk7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0
byByZWFkIGZyb20gbGNuIGJpdG1hcC4iKTsKLQkJcmV0dXJuIFBUUl9FUlIocGFnZSk7Ci0JfQot
CWIgPSAodTgqKXBhZ2VfYWRkcmVzcyhwYWdlKSArIChsbCAmIH5QQUdFX01BU0spOwotCXRiID0g
MSA8PCAobGNuICYgN3VsbCk7Ci0JZG93bl93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0JaWYg
KCpiICE9IDB4ZmYgJiYgISgqYiAmIHRiKSkgewotCQkvKiBOZXh0IGNsdXN0ZXIgaXMgZnJlZSwg
YWxsb2NhdGUgaXQuICovCi0JCSpiIHw9IHRiOwotCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsK
LQkJc2V0X3BhZ2VfZGlydHkocGFnZSk7Ci0JCXVwX3dyaXRlKCZ2b2wtPmxjbmJtcF9sb2NrKTsK
LQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQkvKiBVcGRhdGUgdGhlIG1mdCBiaXRtYXAgcnVu
bGlzdC4gKi8KLQkJcmwtPmxlbmd0aCsrOwotCQlybFsxXS52Y24rKzsKLQkJc3RhdHVzLmFkZGVk
X2NsdXN0ZXIgPSAxOwotCQludGZzX2RlYnVnKCJBcHBlbmRpbmcgb25lIGNsdXN0ZXIgdG8gbWZ0
IGJpdG1hcC4iKTsKLQl9IGVsc2UgewotCQl1cF93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0J
CW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLQkJLyogQWxsb2NhdGUgYSBjbHVzdGVyIGZyb20gdGhl
IERBVEFfWk9ORS4gKi8KLQkJcmwyID0gbnRmc19jbHVzdGVyX2FsbG9jKHZvbCwgcmxbMV0udmNu
LCAxLCBsY24sIERBVEFfWk9ORSwKLQkJCQl0cnVlKTsKLQkJaWYgKElTX0VSUihybDIpKSB7Ci0J
CQl1cF93cml0ZSgmbWZ0Ym1wX25pLT5ydW5saXN0LmxvY2spOwotCQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIGFsbG9jYXRlIGEgY2x1c3RlciBmb3IgIgotCQkJCQkidGhlIG1mdCBi
aXRtYXAuIik7Ci0JCQlyZXR1cm4gUFRSX0VSUihybDIpOwotCQl9Ci0JCXJsID0gbnRmc19ydW5s
aXN0c19tZXJnZShtZnRibXBfbmktPnJ1bmxpc3QucmwsIHJsMik7Ci0JCWlmIChJU19FUlIocmwp
KSB7Ci0JCQl1cF93cml0ZSgmbWZ0Ym1wX25pLT5ydW5saXN0LmxvY2spOwotCQkJbnRmc19lcnJv
cih2b2wtPnNiLCAiRmFpbGVkIHRvIG1lcmdlIHJ1bmxpc3RzIGZvciBtZnQgIgotCQkJCQkiYml0
bWFwLiIpOwotCQkJaWYgKG50ZnNfY2x1c3Rlcl9mcmVlX2Zyb21fcmwodm9sLCBybDIpKSB7Ci0J
CQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGRlYWxsb2NhdGUgIgotCQkJCQkJImFs
bG9jYXRlZCBjbHVzdGVyLiVzIiwgZXMpOwotCQkJCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJCX0K
LQkJCW50ZnNfZnJlZShybDIpOwotCQkJcmV0dXJuIFBUUl9FUlIocmwpOwotCQl9Ci0JCW1mdGJt
cF9uaS0+cnVubGlzdC5ybCA9IHJsOwotCQlzdGF0dXMuYWRkZWRfcnVuID0gMTsKLQkJbnRmc19k
ZWJ1ZygiQWRkaW5nIG9uZSBydW4gdG8gbWZ0IGJpdG1hcC4iKTsKLQkJLyogRmluZCB0aGUgbGFz
dCBydW4gaW4gdGhlIG5ldyBydW5saXN0LiAqLwotCQlmb3IgKDsgcmxbMV0ubGVuZ3RoOyBybCsr
KQotCQkJOwotCX0KLQkvKgotCSAqIFVwZGF0ZSB0aGUgYXR0cmlidXRlIHJlY29yZCBhcyB3ZWxs
LiAgTm90ZTogQHJsIGlzIHRoZSBsYXN0Ci0JICogKG5vbi10ZXJtaW5hdG9yKSBydW5saXN0IGVs
ZW1lbnQgb2YgbWZ0IGJpdG1hcC4KLQkgKi8KLQltcmVjID0gbWFwX21mdF9yZWNvcmQobWZ0X25p
KTsKLQlpZiAoSVNfRVJSKG1yZWMpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0
byBtYXAgbWZ0IHJlY29yZC4iKTsKLQkJcmV0ID0gUFRSX0VSUihtcmVjKTsKLQkJZ290byB1bmRv
X2FsbG9jOwotCX0KLQljdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgobWZ0X25pLCBtcmVj
KTsKLQlpZiAodW5saWtlbHkoIWN0eCkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVk
IHRvIGdldCBzZWFyY2ggY29udGV4dC4iKTsKLQkJcmV0ID0gLUVOT01FTTsKLQkJZ290byB1bmRv
X2FsbG9jOwotCX0KLQlyZXQgPSBudGZzX2F0dHJfbG9va3VwKG1mdGJtcF9uaS0+dHlwZSwgbWZ0
Ym1wX25pLT5uYW1lLAotCQkJbWZ0Ym1wX25pLT5uYW1lX2xlbiwgQ0FTRV9TRU5TSVRJVkUsIHJs
WzFdLnZjbiwgTlVMTCwKLQkJCTAsIGN0eCk7Ci0JaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJbnRm
c19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGZpbmQgbGFzdCBhdHRyaWJ1dGUgZXh0ZW50IG9m
ICIKLQkJCQkibWZ0IGJpdG1hcCBhdHRyaWJ1dGUuIik7Ci0JCWlmIChyZXQgPT0gLUVOT0VOVCkK
LQkJCXJldCA9IC1FSU87Ci0JCWdvdG8gdW5kb19hbGxvYzsKLQl9Ci0JYSA9IGN0eC0+YXR0cjsK
LQlsbCA9IHNsZTY0X3RvX2NwdShhLT5kYXRhLm5vbl9yZXNpZGVudC5sb3dlc3RfdmNuKTsKLQkv
KiBTZWFyY2ggYmFjayBmb3IgdGhlIHByZXZpb3VzIGxhc3QgYWxsb2NhdGVkIGNsdXN0ZXIgb2Yg
bWZ0IGJpdG1hcC4gKi8KLQlmb3IgKHJsMiA9IHJsOyBybDIgPiBtZnRibXBfbmktPnJ1bmxpc3Qu
cmw7IHJsMi0tKSB7Ci0JCWlmIChsbCA+PSBybDItPnZjbikKLQkJCWJyZWFrOwotCX0KLQlCVUdf
T04obGwgPCBybDItPnZjbik7Ci0JQlVHX09OKGxsID49IHJsMi0+dmNuICsgcmwyLT5sZW5ndGgp
OwotCS8qIEdldCB0aGUgc2l6ZSBmb3IgdGhlIG5ldyBtYXBwaW5nIHBhaXJzIGFycmF5IGZvciB0
aGlzIGV4dGVudC4gKi8KLQltcF9zaXplID0gbnRmc19nZXRfc2l6ZV9mb3JfbWFwcGluZ19wYWly
cyh2b2wsIHJsMiwgbGwsIC0xKTsKLQlpZiAodW5saWtlbHkobXBfc2l6ZSA8PSAwKSkgewotCQlu
dGZzX2Vycm9yKHZvbC0+c2IsICJHZXQgc2l6ZSBmb3IgbWFwcGluZyBwYWlycyBmYWlsZWQgZm9y
ICIKLQkJCQkibWZ0IGJpdG1hcCBhdHRyaWJ1dGUgZXh0ZW50LiIpOwotCQlyZXQgPSBtcF9zaXpl
OwotCQlpZiAoIXJldCkKLQkJCXJldCA9IC1FSU87Ci0JCWdvdG8gdW5kb19hbGxvYzsKLQl9Ci0J
LyogRXhwYW5kIHRoZSBhdHRyaWJ1dGUgcmVjb3JkIGlmIG5lY2Vzc2FyeS4gKi8KLQlvbGRfYWxl
biA9IGxlMzJfdG9fY3B1KGEtPmxlbmd0aCk7Ci0JcmV0ID0gbnRmc19hdHRyX3JlY29yZF9yZXNp
emUoY3R4LT5tcmVjLCBhLCBtcF9zaXplICsKLQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEubm9uX3Jl
c2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0KSk7Ci0JaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJ
aWYgKHJldCAhPSAtRU5PU1BDKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8g
cmVzaXplIGF0dHJpYnV0ZSAiCi0JCQkJCSJyZWNvcmQgZm9yIG1mdCBiaXRtYXAgYXR0cmlidXRl
LiIpOwotCQkJZ290byB1bmRvX2FsbG9jOwotCQl9Ci0JCS8vIFRPRE86IERlYWwgd2l0aCB0aGlz
IGJ5IG1vdmluZyB0aGlzIGV4dGVudCB0byBhIG5ldyBtZnQKLQkJLy8gcmVjb3JkIG9yIGJ5IHN0
YXJ0aW5nIGEgbmV3IGV4dGVudCBpbiBhIG5ldyBtZnQgcmVjb3JkIG9yIGJ5Ci0JCS8vIG1vdmlu
ZyBvdGhlciBhdHRyaWJ1dGVzIG91dCBvZiB0aGlzIG1mdCByZWNvcmQuCi0JCS8vIE5vdGU6IEl0
IHdpbGwgbmVlZCB0byBiZSBhIHNwZWNpYWwgbWZ0IHJlY29yZCBhbmQgaWYgbm9uZSBvZgotCQkv
LyB0aG9zZSBhcmUgYXZhaWxhYmxlIGl0IGdldHMgcmF0aGVyIGNvbXBsaWNhdGVkLi4uCi0JCW50
ZnNfZXJyb3Iodm9sLT5zYiwgIk5vdCBlbm91Z2ggc3BhY2UgaW4gdGhpcyBtZnQgcmVjb3JkIHRv
ICIKLQkJCQkiYWNjb21tb2RhdGUgZXh0ZW5kZWQgbWZ0IGJpdG1hcCBhdHRyaWJ1dGUgIgotCQkJ
CSJleHRlbnQuICBDYW5ub3QgaGFuZGxlIHRoaXMgeWV0LiIpOwotCQlyZXQgPSAtRU9QTk9UU1VQ
UDsKLQkJZ290byB1bmRvX2FsbG9jOwotCX0KLQlzdGF0dXMubXBfcmVidWlsdCA9IDE7Ci0JLyog
R2VuZXJhdGUgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgZGlyZWN0bHkgaW50byB0aGUgYXR0ciBy
ZWNvcmQuICovCi0JcmV0ID0gbnRmc19tYXBwaW5nX3BhaXJzX2J1aWxkKHZvbCwgKHU4KilhICsK
LQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0
KSwKLQkJCW1wX3NpemUsIHJsMiwgbGwsIC0xLCBOVUxMKTsKLQlpZiAodW5saWtlbHkocmV0KSkg
ewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYnVpbGQgbWFwcGluZyBwYWlycyBh
cnJheSBmb3IgIgotCQkJCSJtZnQgYml0bWFwIGF0dHJpYnV0ZS4iKTsKLQkJZ290byB1bmRvX2Fs
bG9jOwotCX0KLQkvKiBVcGRhdGUgdGhlIGhpZ2hlc3RfdmNuLiAqLwotCWEtPmRhdGEubm9uX3Jl
c2lkZW50LmhpZ2hlc3RfdmNuID0gY3B1X3RvX3NsZTY0KHJsWzFdLnZjbiAtIDEpOwotCS8qCi0J
ICogV2Ugbm93IGhhdmUgZXh0ZW5kZWQgdGhlIG1mdCBiaXRtYXAgYWxsb2NhdGVkX3NpemUgYnkg
b25lIGNsdXN0ZXIuCi0JICogUmVmbGVjdCB0aGlzIGluIHRoZSBudGZzX2lub2RlIHN0cnVjdHVy
ZSBhbmQgdGhlIGF0dHJpYnV0ZSByZWNvcmQuCi0JICovCi0JaWYgKGEtPmRhdGEubm9uX3Jlc2lk
ZW50Lmxvd2VzdF92Y24pIHsKLQkJLyoKLQkJICogV2UgYXJlIG5vdCBpbiB0aGUgZmlyc3QgYXR0
cmlidXRlIGV4dGVudCwgc3dpdGNoIHRvIGl0LCBidXQKLQkJICogZmlyc3QgZW5zdXJlIHRoZSBj
aGFuZ2VzIHdpbGwgbWFrZSBpdCB0byBkaXNrIGxhdGVyLgotCQkgKi8KLQkJZmx1c2hfZGNhY2hl
X21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQkJbWFya19tZnRfcmVjb3JkX2RpcnR5
KGN0eC0+bnRmc19pbm8pOwotCQludGZzX2F0dHJfcmVpbml0X3NlYXJjaF9jdHgoY3R4KTsKLQkJ
cmV0ID0gbnRmc19hdHRyX2xvb2t1cChtZnRibXBfbmktPnR5cGUsIG1mdGJtcF9uaS0+bmFtZSwK
LQkJCQltZnRibXBfbmktPm5hbWVfbGVuLCBDQVNFX1NFTlNJVElWRSwgMCwgTlVMTCwKLQkJCQkw
LCBjdHgpOwotCQlpZiAodW5saWtlbHkocmV0KSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAi
RmFpbGVkIHRvIGZpbmQgZmlyc3QgYXR0cmlidXRlICIKLQkJCQkJImV4dGVudCBvZiBtZnQgYml0
bWFwIGF0dHJpYnV0ZS4iKTsKLQkJCWdvdG8gcmVzdG9yZV91bmRvX2FsbG9jOwotCQl9Ci0JCWEg
PSBjdHgtPmF0dHI7Ci0JfQotCXdyaXRlX2xvY2tfaXJxc2F2ZSgmbWZ0Ym1wX25pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQltZnRibXBfbmktPmFsbG9jYXRlZF9zaXplICs9IHZvbC0+Y2x1c3Rlcl9z
aXplOwotCWEtPmRhdGEubm9uX3Jlc2lkZW50LmFsbG9jYXRlZF9zaXplID0KLQkJCWNwdV90b19z
bGU2NChtZnRibXBfbmktPmFsbG9jYXRlZF9zaXplKTsKLQl3cml0ZV91bmxvY2tfaXJxcmVzdG9y
ZSgmbWZ0Ym1wX25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQkvKiBFbnN1cmUgdGhlIGNoYW5nZXMg
bWFrZSBpdCB0byBkaXNrLiAqLwotCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3JkX3BhZ2UoY3R4LT5u
dGZzX2lubyk7Ci0JbWFya19tZnRfcmVjb3JkX2RpcnR5KGN0eC0+bnRmc19pbm8pOwotCW50ZnNf
YXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCXVubWFwX21mdF9yZWNvcmQobWZ0X25pKTsKLQl1
cF93cml0ZSgmbWZ0Ym1wX25pLT5ydW5saXN0LmxvY2spOwotCW50ZnNfZGVidWcoIkRvbmUuIik7
Ci0JcmV0dXJuIDA7Ci1yZXN0b3JlX3VuZG9fYWxsb2M6Ci0JbnRmc19hdHRyX3JlaW5pdF9zZWFy
Y2hfY3R4KGN0eCk7Ci0JaWYgKG50ZnNfYXR0cl9sb29rdXAobWZ0Ym1wX25pLT50eXBlLCBtZnRi
bXBfbmktPm5hbWUsCi0JCQltZnRibXBfbmktPm5hbWVfbGVuLCBDQVNFX1NFTlNJVElWRSwgcmxb
MV0udmNuLCBOVUxMLAotCQkJMCwgY3R4KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWls
ZWQgdG8gZmluZCBsYXN0IGF0dHJpYnV0ZSBleHRlbnQgb2YgIgotCQkJCSJtZnQgYml0bWFwIGF0
dHJpYnV0ZS4lcyIsIGVzKTsKLQkJd3JpdGVfbG9ja19pcnFzYXZlKCZtZnRibXBfbmktPnNpemVf
bG9jaywgZmxhZ3MpOwotCQltZnRibXBfbmktPmFsbG9jYXRlZF9zaXplICs9IHZvbC0+Y2x1c3Rl
cl9zaXplOwotCQl3cml0ZV91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0Ym1wX25pLT5zaXplX2xvY2ss
IGZsYWdzKTsKLQkJbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JCXVubWFwX21mdF9y
ZWNvcmQobWZ0X25pKTsKLQkJdXBfd3JpdGUoJm1mdGJtcF9uaS0+cnVubGlzdC5sb2NrKTsKLQkJ
LyoKLQkJICogVGhlIG9ubHkgdGhpbmcgdGhhdCBpcyBub3cgd3JvbmcgaXMgLT5hbGxvY2F0ZWRf
c2l6ZSBvZiB0aGUKLQkJICogYmFzZSBhdHRyaWJ1dGUgZXh0ZW50IHdoaWNoIGNoa2RzayBzaG91
bGQgYmUgYWJsZSB0byBmaXguCi0JCSAqLwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCXJldHVy
biByZXQ7Ci0JfQotCWEgPSBjdHgtPmF0dHI7Ci0JYS0+ZGF0YS5ub25fcmVzaWRlbnQuaGlnaGVz
dF92Y24gPSBjcHVfdG9fc2xlNjQocmxbMV0udmNuIC0gMik7Ci11bmRvX2FsbG9jOgotCWlmIChz
dGF0dXMuYWRkZWRfY2x1c3RlcikgewotCQkvKiBUcnVuY2F0ZSB0aGUgbGFzdCBydW4gaW4gdGhl
IHJ1bmxpc3QgYnkgb25lIGNsdXN0ZXIuICovCi0JCXJsLT5sZW5ndGgtLTsKLQkJcmxbMV0udmNu
LS07Ci0JfSBlbHNlIGlmIChzdGF0dXMuYWRkZWRfcnVuKSB7Ci0JCWxjbiA9IHJsLT5sY247Ci0J
CS8qIFJlbW92ZSB0aGUgbGFzdCBydW4gZnJvbSB0aGUgcnVubGlzdC4gKi8KLQkJcmwtPmxjbiA9
IHJsWzFdLmxjbjsKLQkJcmwtPmxlbmd0aCA9IDA7Ci0JfQotCS8qIERlYWxsb2NhdGUgdGhlIGNs
dXN0ZXIuICovCi0JZG93bl93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0JaWYgKG50ZnNfYml0
bWFwX2NsZWFyX2JpdCh2b2wtPmxjbmJtcF9pbm8sIGxjbikpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIGZyZWUgYWxsb2NhdGVkIGNsdXN0ZXIuJXMiLCBlcyk7Ci0JCU5Wb2xT
ZXRFcnJvcnModm9sKTsKLQl9Ci0JdXBfd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2spOwotCWlmIChz
dGF0dXMubXBfcmVidWlsdCkgewotCQlpZiAobnRmc19tYXBwaW5nX3BhaXJzX2J1aWxkKHZvbCwg
KHU4KilhICsgbGUxNl90b19jcHUoCi0JCQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQubWFwcGluZ19w
YWlyc19vZmZzZXQpLAotCQkJCW9sZF9hbGVuIC0gbGUxNl90b19jcHUoCi0JCQkJYS0+ZGF0YS5u
b25fcmVzaWRlbnQubWFwcGluZ19wYWlyc19vZmZzZXQpLAotCQkJCXJsMiwgbGwsIC0xLCBOVUxM
KSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHJlc3RvcmUgbWFwcGluZyBw
YWlycyAiCi0JCQkJCSJhcnJheS4lcyIsIGVzKTsKLQkJCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJ
fQotCQlpZiAobnRmc19hdHRyX3JlY29yZF9yZXNpemUoY3R4LT5tcmVjLCBhLCBvbGRfYWxlbikp
IHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZXN0b3JlIGF0dHJpYnV0ZSAi
Ci0JCQkJCSJyZWNvcmQuJXMiLCBlcyk7Ci0JCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCX0KLQkJ
Zmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQkJbWFya19tZnRf
cmVjb3JkX2RpcnR5KGN0eC0+bnRmc19pbm8pOwotCX0KLQlpZiAoY3R4KQotCQludGZzX2F0dHJf
cHV0X3NlYXJjaF9jdHgoY3R4KTsKLQlpZiAoIUlTX0VSUihtcmVjKSkKLQkJdW5tYXBfbWZ0X3Jl
Y29yZChtZnRfbmkpOwotCXVwX3dyaXRlKCZtZnRibXBfbmktPnJ1bmxpc3QubG9jayk7Ci0JcmV0
dXJuIHJldDsKLX0KLQotLyoqCi0gKiBudGZzX21mdF9iaXRtYXBfZXh0ZW5kX2luaXRpYWxpemVk
X25vbG9jayAtIGV4dGVuZCBtZnRibXAgaW5pdGlhbGl6ZWQgZGF0YQotICogQHZvbDoJdm9sdW1l
IG9uIHdoaWNoIHRvIGV4dGVuZCB0aGUgbWZ0IGJpdG1hcCBhdHRyaWJ1dGUKLSAqCi0gKiBFeHRl
bmQgdGhlIGluaXRpYWxpemVkIHBvcnRpb24gb2YgdGhlIG1mdCBiaXRtYXAgYXR0cmlidXRlIG9u
IHRoZSBudGZzCi0gKiB2b2x1bWUgQHZvbCBieSA4IGJ5dGVzLgotICoKLSAqIE5vdGU6ICBPbmx5
IGNoYW5nZXMgaW5pdGlhbGl6ZWRfc2l6ZSBhbmQgZGF0YV9zaXplLCBpLmUuIHJlcXVpcmVzIHRo
YXQKLSAqIGFsbG9jYXRlZF9zaXplIGlzIGJpZyBlbm91Z2ggdG8gZml0IHRoZSBuZXcgaW5pdGlh
bGl6ZWRfc2l6ZS4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJyb3Igb24gZXJy
b3IuCi0gKgotICogTG9ja2luZzogQ2FsbGVyIG11c3QgaG9sZCB2b2wtPm1mdGJtcF9sb2NrIGZv
ciB3cml0aW5nLgotICovCi1zdGF0aWMgaW50IG50ZnNfbWZ0X2JpdG1hcF9leHRlbmRfaW5pdGlh
bGl6ZWRfbm9sb2NrKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0JczY0IG9sZF9kYXRhX3NpemUsIG9s
ZF9pbml0aWFsaXplZF9zaXplOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0Jc3RydWN0IGlub2Rl
ICptZnRibXBfdmk7Ci0JbnRmc19pbm9kZSAqbWZ0X25pLCAqbWZ0Ym1wX25pOwotCW50ZnNfYXR0
cl9zZWFyY2hfY3R4ICpjdHg7Ci0JTUZUX1JFQ09SRCAqbXJlYzsKLQlBVFRSX1JFQ09SRCAqYTsK
LQlpbnQgcmV0OwotCi0JbnRmc19kZWJ1ZygiRXh0ZW5kaW5nIG1mdCBiaXRtYXAgaW5pdGlhaWxp
emVkIChhbmQgZGF0YSkgc2l6ZS4iKTsKLQltZnRfbmkgPSBOVEZTX0kodm9sLT5tZnRfaW5vKTsK
LQltZnRibXBfdmkgPSB2b2wtPm1mdGJtcF9pbm87Ci0JbWZ0Ym1wX25pID0gTlRGU19JKG1mdGJt
cF92aSk7Ci0JLyogR2V0IHRoZSBhdHRyaWJ1dGUgcmVjb3JkLiAqLwotCW1yZWMgPSBtYXBfbWZ0
X3JlY29yZChtZnRfbmkpOwotCWlmIChJU19FUlIobXJlYykpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIG1hcCBtZnQgcmVjb3JkLiIpOwotCQlyZXR1cm4gUFRSX0VSUihtcmVj
KTsKLQl9Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KG1mdF9uaSwgbXJlYyk7Ci0J
aWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBn
ZXQgc2VhcmNoIGNvbnRleHQuIik7Ci0JCXJldCA9IC1FTk9NRU07Ci0JCWdvdG8gdW5tX2Vycl9v
dXQ7Ci0JfQotCXJldCA9IG50ZnNfYXR0cl9sb29rdXAobWZ0Ym1wX25pLT50eXBlLCBtZnRibXBf
bmktPm5hbWUsCi0JCQltZnRibXBfbmktPm5hbWVfbGVuLCBDQVNFX1NFTlNJVElWRSwgMCwgTlVM
TCwgMCwgY3R4KTsKLQlpZiAodW5saWtlbHkocmV0KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2Is
ICJGYWlsZWQgdG8gZmluZCBmaXJzdCBhdHRyaWJ1dGUgZXh0ZW50IG9mICIKLQkJCQkibWZ0IGJp
dG1hcCBhdHRyaWJ1dGUuIik7Ci0JCWlmIChyZXQgPT0gLUVOT0VOVCkKLQkJCXJldCA9IC1FSU87
Ci0JCWdvdG8gcHV0X2Vycl9vdXQ7Ci0JfQotCWEgPSBjdHgtPmF0dHI7Ci0Jd3JpdGVfbG9ja19p
cnFzYXZlKCZtZnRibXBfbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCW9sZF9kYXRhX3NpemUgPSBp
X3NpemVfcmVhZChtZnRibXBfdmkpOwotCW9sZF9pbml0aWFsaXplZF9zaXplID0gbWZ0Ym1wX25p
LT5pbml0aWFsaXplZF9zaXplOwotCS8qCi0JICogV2UgY2FuIHNpbXBseSB1cGRhdGUgdGhlIGlu
aXRpYWxpemVkX3NpemUgYmVmb3JlIGZpbGxpbmcgdGhlIHNwYWNlCi0JICogd2l0aCB6ZXJvZXMg
YmVjYXVzZSB0aGUgY2FsbGVyIGlzIGhvbGRpbmcgdGhlIG1mdCBiaXRtYXAgbG9jayBmb3IKLQkg
KiB3cml0aW5nIHdoaWNoIGVuc3VyZXMgdGhhdCBubyBvbmUgZWxzZSBpcyB0cnlpbmcgdG8gYWNj
ZXNzIHRoZSBkYXRhLgotCSAqLwotCW1mdGJtcF9uaS0+aW5pdGlhbGl6ZWRfc2l6ZSArPSA4Owot
CWEtPmRhdGEubm9uX3Jlc2lkZW50LmluaXRpYWxpemVkX3NpemUgPQotCQkJY3B1X3RvX3NsZTY0
KG1mdGJtcF9uaS0+aW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JaWYgKG1mdGJtcF9uaS0+aW5pdGlhbGl6
ZWRfc2l6ZSA+IG9sZF9kYXRhX3NpemUpIHsKLQkJaV9zaXplX3dyaXRlKG1mdGJtcF92aSwgbWZ0
Ym1wX25pLT5pbml0aWFsaXplZF9zaXplKTsKLQkJYS0+ZGF0YS5ub25fcmVzaWRlbnQuZGF0YV9z
aXplID0KLQkJCQljcHVfdG9fc2xlNjQobWZ0Ym1wX25pLT5pbml0aWFsaXplZF9zaXplKTsKLQl9
Ci0Jd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7
Ci0JLyogRW5zdXJlIHRoZSBjaGFuZ2VzIG1ha2UgaXQgdG8gZGlzay4gKi8KLQlmbHVzaF9kY2Fj
aGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+bnRmc19pbm8pOwotCW1hcmtfbWZ0X3JlY29yZF9kaXJ0
eShjdHgtPm50ZnNfaW5vKTsKLQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQl1bm1h
cF9tZnRfcmVjb3JkKG1mdF9uaSk7Ci0JLyogSW5pdGlhbGl6ZSB0aGUgbWZ0IGJpdG1hcCBhdHRy
aWJ1dGUgdmFsdWUgd2l0aCB6ZXJvZXMuICovCi0JcmV0ID0gbnRmc19hdHRyX3NldChtZnRibXBf
bmksIG9sZF9pbml0aWFsaXplZF9zaXplLCA4LCAwKTsKLQlpZiAobGlrZWx5KCFyZXQpKSB7Ci0J
CW50ZnNfZGVidWcoIkRvbmUuICAoV3JvdGUgZWlnaHQgaW5pdGlhbGl6ZWQgYnl0ZXMgdG8gbWZ0
ICIKLQkJCQkiYml0bWFwLiIpOwotCQlyZXR1cm4gMDsKLQl9Ci0JbnRmc19lcnJvcih2b2wtPnNi
LCAiRmFpbGVkIHRvIHdyaXRlIHRvIG1mdCBiaXRtYXAuIik7Ci0JLyogVHJ5IHRvIHJlY292ZXIg
ZnJvbSB0aGUgZXJyb3IuICovCi0JbXJlYyA9IG1hcF9tZnRfcmVjb3JkKG1mdF9uaSk7Ci0JaWYg
KElTX0VSUihtcmVjKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbWFwIG1m
dCByZWNvcmQuJXMiLCBlcyk7Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJcmV0dXJuIHJldDsK
LQl9Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KG1mdF9uaSwgbXJlYyk7Ci0JaWYg
KHVubGlrZWx5KCFjdHgpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBnZXQg
c2VhcmNoIGNvbnRleHQuJXMiLCBlcyk7Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJZ290byB1
bm1fZXJyX291dDsKLQl9Ci0JaWYgKG50ZnNfYXR0cl9sb29rdXAobWZ0Ym1wX25pLT50eXBlLCBt
ZnRibXBfbmktPm5hbWUsCi0JCQltZnRibXBfbmktPm5hbWVfbGVuLCBDQVNFX1NFTlNJVElWRSwg
MCwgTlVMTCwgMCwgY3R4KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gZmlu
ZCBmaXJzdCBhdHRyaWJ1dGUgZXh0ZW50IG9mICIKLQkJCQkibWZ0IGJpdG1hcCBhdHRyaWJ1dGUu
JXMiLCBlcyk7Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLXB1dF9lcnJfb3V0OgotCQludGZzX2F0
dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLXVubV9lcnJfb3V0OgotCQl1bm1hcF9tZnRfcmVjb3Jk
KG1mdF9uaSk7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JYSA9IGN0eC0+YXR0cjsKLQl3cml0ZV9s
b2NrX2lycXNhdmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbWZ0Ym1wX25pLT5p
bml0aWFsaXplZF9zaXplID0gb2xkX2luaXRpYWxpemVkX3NpemU7Ci0JYS0+ZGF0YS5ub25fcmVz
aWRlbnQuaW5pdGlhbGl6ZWRfc2l6ZSA9Ci0JCQljcHVfdG9fc2xlNjQob2xkX2luaXRpYWxpemVk
X3NpemUpOwotCWlmIChpX3NpemVfcmVhZChtZnRibXBfdmkpICE9IG9sZF9kYXRhX3NpemUpIHsK
LQkJaV9zaXplX3dyaXRlKG1mdGJtcF92aSwgb2xkX2RhdGFfc2l6ZSk7Ci0JCWEtPmRhdGEubm9u
X3Jlc2lkZW50LmRhdGFfc2l6ZSA9IGNwdV90b19zbGU2NChvbGRfZGF0YV9zaXplKTsKLQl9Ci0J
d3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0J
Zmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQltYXJrX21mdF9y
ZWNvcmRfZGlydHkoY3R4LT5udGZzX2lubyk7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0
eCk7Ci0JdW5tYXBfbWZ0X3JlY29yZChtZnRfbmkpOwotI2lmZGVmIERFQlVHCi0JcmVhZF9sb2Nr
X2lycXNhdmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbnRmc19kZWJ1ZygiUmVz
dG9yZWQgc3RhdHVzIG9mIG1mdGJtcDogYWxsb2NhdGVkX3NpemUgMHglbGx4LCAiCi0JCQkiZGF0
YV9zaXplIDB4JWxseCwgaW5pdGlhbGl6ZWRfc2l6ZSAweCVsbHguIiwKLQkJCShsb25nIGxvbmcp
bWZ0Ym1wX25pLT5hbGxvY2F0ZWRfc2l6ZSwKLQkJCShsb25nIGxvbmcpaV9zaXplX3JlYWQobWZ0
Ym1wX3ZpKSwKLQkJCShsb25nIGxvbmcpbWZ0Ym1wX25pLT5pbml0aWFsaXplZF9zaXplKTsKLQly
ZWFkX3VubG9ja19pcnFyZXN0b3JlKCZtZnRibXBfbmktPnNpemVfbG9jaywgZmxhZ3MpOwotI2Vu
ZGlmIC8qIERFQlVHICovCi1lcnJfb3V0OgotCXJldHVybiByZXQ7Ci19Ci0KLS8qKgotICogbnRm
c19tZnRfZGF0YV9leHRlbmRfYWxsb2NhdGlvbl9ub2xvY2sgLSBleHRlbmQgbWZ0IGRhdGEgYXR0
cmlidXRlCi0gKiBAdm9sOgl2b2x1bWUgb24gd2hpY2ggdG8gZXh0ZW5kIHRoZSBtZnQgZGF0YSBh
dHRyaWJ1dGUKLSAqCi0gKiBFeHRlbmQgdGhlIG1mdCBkYXRhIGF0dHJpYnV0ZSBvbiB0aGUgbnRm
cyB2b2x1bWUgQHZvbCBieSAxNiBtZnQgcmVjb3JkcwotICogd29ydGggb2YgY2x1c3RlcnMgb3Ig
aWYgbm90IGVub3VnaCBzcGFjZSBmb3IgdGhpcyBieSBvbmUgbWZ0IHJlY29yZCB3b3J0aAotICog
b2YgY2x1c3RlcnMuCi0gKgotICogTm90ZTogIE9ubHkgY2hhbmdlcyBhbGxvY2F0ZWRfc2l6ZSwg
aS5lLiBkb2VzIG5vdCB0b3VjaCBpbml0aWFsaXplZF9zaXplIG9yCi0gKiBkYXRhX3NpemUuCi0g
KgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICoKLSAqIExv
Y2tpbmc6IC0gQ2FsbGVyIG11c3QgaG9sZCB2b2wtPm1mdGJtcF9sb2NrIGZvciB3cml0aW5nLgot
ICoJICAgIC0gVGhpcyBmdW5jdGlvbiB0YWtlcyBOVEZTX0kodm9sLT5tZnRfaW5vKS0+cnVubGlz
dC5sb2NrIGZvcgotICoJICAgICAgd3JpdGluZyBhbmQgcmVsZWFzZXMgaXQgYmVmb3JlIHJldHVy
bmluZy4KLSAqCSAgICAtIFRoaXMgZnVuY3Rpb24gY2FsbHMgZnVuY3Rpb25zIHdoaWNoIHRha2Ug
dm9sLT5sY25ibXBfbG9jayBmb3IKLSAqCSAgICAgIHdyaXRpbmcgYW5kIHJlbGVhc2UgaXQgYmVm
b3JlIHJldHVybmluZy4KLSAqLwotc3RhdGljIGludCBudGZzX21mdF9kYXRhX2V4dGVuZF9hbGxv
Y2F0aW9uX25vbG9jayhudGZzX3ZvbHVtZSAqdm9sKQotewotCUxDTiBsY247Ci0JVkNOIG9sZF9s
YXN0X3ZjbjsKLQlzNjQgbWluX25yLCBuciwgbGw7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKLQlu
dGZzX2lub2RlICptZnRfbmk7Ci0JcnVubGlzdF9lbGVtZW50ICpybCwgKnJsMjsKLQludGZzX2F0
dHJfc2VhcmNoX2N0eCAqY3R4ID0gTlVMTDsKLQlNRlRfUkVDT1JEICptcmVjOwotCUFUVFJfUkVD
T1JEICphID0gTlVMTDsKLQlpbnQgcmV0LCBtcF9zaXplOwotCXUzMiBvbGRfYWxlbiA9IDA7Ci0J
Ym9vbCBtcF9yZWJ1aWx0ID0gZmFsc2U7Ci0KLQludGZzX2RlYnVnKCJFeHRlbmRpbmcgbWZ0IGRh
dGEgYWxsb2NhdGlvbi4iKTsKLQltZnRfbmkgPSBOVEZTX0kodm9sLT5tZnRfaW5vKTsKLQkvKgot
CSAqIERldGVybWluZSB0aGUgcHJlZmVycmVkIGFsbG9jYXRpb24gbG9jYXRpb24sIGkuZS4gdGhl
IGxhc3QgbGNuIG9mCi0JICogdGhlIG1mdCBkYXRhIGF0dHJpYnV0ZS4gIFRoZSBhbGxvY2F0ZWQg
c2l6ZSBvZiB0aGUgbWZ0IGRhdGEKLQkgKiBhdHRyaWJ1dGUgY2Fubm90IGJlIHplcm8gc28gd2Ug
YXJlIG9rIHRvIGRvIHRoaXMuCi0JICovCi0JZG93bl93cml0ZSgmbWZ0X25pLT5ydW5saXN0Lmxv
Y2spOwotCXJlYWRfbG9ja19pcnFzYXZlKCZtZnRfbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCWxs
ID0gbWZ0X25pLT5hbGxvY2F0ZWRfc2l6ZTsKLQlyZWFkX3VubG9ja19pcnFyZXN0b3JlKCZtZnRf
bmktPnNpemVfbG9jaywgZmxhZ3MpOwotCXJsID0gbnRmc19hdHRyX2ZpbmRfdmNuX25vbG9jayht
ZnRfbmksCi0JCQkobGwgLSAxKSA+PiB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzLCBOVUxMKTsKLQlp
ZiAoSVNfRVJSKHJsKSB8fCB1bmxpa2VseSghcmwtPmxlbmd0aCB8fCBybC0+bGNuIDwgMCkpIHsK
LQkJdXBfd3JpdGUoJm1mdF9uaS0+cnVubGlzdC5sb2NrKTsKLQkJbnRmc19lcnJvcih2b2wtPnNi
LCAiRmFpbGVkIHRvIGRldGVybWluZSBsYXN0IGFsbG9jYXRlZCAiCi0JCQkJImNsdXN0ZXIgb2Yg
bWZ0IGRhdGEgYXR0cmlidXRlLiIpOwotCQlpZiAoIUlTX0VSUihybCkpCi0JCQlyZXQgPSAtRUlP
OwotCQllbHNlCi0JCQlyZXQgPSBQVFJfRVJSKHJsKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JbGNu
ID0gcmwtPmxjbiArIHJsLT5sZW5ndGg7Ci0JbnRmc19kZWJ1ZygiTGFzdCBsY24gb2YgbWZ0IGRh
dGEgYXR0cmlidXRlIGlzIDB4JWxseC4iLCAobG9uZyBsb25nKWxjbik7Ci0JLyogTWluaW11bSBh
bGxvY2F0aW9uIGlzIG9uZSBtZnQgcmVjb3JkIHdvcnRoIG9mIGNsdXN0ZXJzLiAqLwotCW1pbl9u
ciA9IHZvbC0+bWZ0X3JlY29yZF9zaXplID4+IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JaWYg
KCFtaW5fbnIpCi0JCW1pbl9uciA9IDE7Ci0JLyogV2FudCB0byBhbGxvY2F0ZSAxNiBtZnQgcmVj
b3JkcyB3b3J0aCBvZiBjbHVzdGVycy4gKi8KLQluciA9IHZvbC0+bWZ0X3JlY29yZF9zaXplIDw8
IDQgPj4gdm9sLT5jbHVzdGVyX3NpemVfYml0czsKLQlpZiAoIW5yKQotCQluciA9IG1pbl9ucjsK
LQkvKiBFbnN1cmUgd2UgZG8gbm90IGdvIGFib3ZlIDJeMzItMSBtZnQgcmVjb3Jkcy4gKi8KLQly
ZWFkX2xvY2tfaXJxc2F2ZSgmbWZ0X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlsbCA9IG1mdF9u
aS0+YWxsb2NhdGVkX3NpemU7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25pLT5zaXpl
X2xvY2ssIGZsYWdzKTsKLQlpZiAodW5saWtlbHkoKGxsICsgKG5yIDw8IHZvbC0+Y2x1c3Rlcl9z
aXplX2JpdHMpKSA+PgotCQkJdm9sLT5tZnRfcmVjb3JkX3NpemVfYml0cyA+PSAoMWxsIDw8IDMy
KSkpIHsKLQkJbnIgPSBtaW5fbnI7Ci0JCWlmICh1bmxpa2VseSgobGwgKyAobnIgPDwgdm9sLT5j
bHVzdGVyX3NpemVfYml0cykpID4+Ci0JCQkJdm9sLT5tZnRfcmVjb3JkX3NpemVfYml0cyA+PSAo
MWxsIDw8IDMyKSkpIHsKLQkJCW50ZnNfd2FybmluZyh2b2wtPnNiLCAiQ2Fubm90IGFsbG9jYXRl
IG1mdCByZWNvcmQgIgotCQkJCQkiYmVjYXVzZSB0aGUgbWF4aW11bSBudW1iZXIgb2YgaW5vZGVz
ICIKLQkJCQkJIigyXjMyKSBoYXMgYWxyZWFkeSBiZWVuIHJlYWNoZWQuIik7Ci0JCQl1cF93cml0
ZSgmbWZ0X25pLT5ydW5saXN0LmxvY2spOwotCQkJcmV0dXJuIC1FTk9TUEM7Ci0JCX0KLQl9Ci0J
bnRmc19kZWJ1ZygiVHJ5aW5nIG1mdCBkYXRhIGFsbG9jYXRpb24gd2l0aCAlcyBjbHVzdGVyIGNv
dW50ICVsbGkuIiwKLQkJCW5yID4gbWluX25yID8gImRlZmF1bHQiIDogIm1pbmltYWwiLCAobG9u
ZyBsb25nKW5yKTsKLQlvbGRfbGFzdF92Y24gPSBybFsxXS52Y247Ci0JZG8gewotCQlybDIgPSBu
dGZzX2NsdXN0ZXJfYWxsb2Modm9sLCBvbGRfbGFzdF92Y24sIG5yLCBsY24sIE1GVF9aT05FLAot
CQkJCXRydWUpOwotCQlpZiAoIUlTX0VSUihybDIpKQotCQkJYnJlYWs7Ci0JCWlmIChQVFJfRVJS
KHJsMikgIT0gLUVOT1NQQyB8fCBuciA9PSBtaW5fbnIpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5z
YiwgIkZhaWxlZCB0byBhbGxvY2F0ZSB0aGUgbWluaW1hbCAiCi0JCQkJCSJudW1iZXIgb2YgY2x1
c3RlcnMgKCVsbGkpIGZvciB0aGUgIgotCQkJCQkibWZ0IGRhdGEgYXR0cmlidXRlLiIsIChsb25n
IGxvbmcpbnIpOwotCQkJdXBfd3JpdGUoJm1mdF9uaS0+cnVubGlzdC5sb2NrKTsKLQkJCXJldHVy
biBQVFJfRVJSKHJsMik7Ci0JCX0KLQkJLyoKLQkJICogVGhlcmUgaXMgbm90IGVub3VnaCBzcGFj
ZSB0byBkbyB0aGUgYWxsb2NhdGlvbiwgYnV0IHRoZXJlCi0JCSAqIG1pZ2h0IGJlIGVub3VnaCBz
cGFjZSB0byBkbyBhIG1pbmltYWwgYWxsb2NhdGlvbiBzbyB0cnkgdGhhdAotCQkgKiBiZWZvcmUg
ZmFpbGluZy4KLQkJICovCi0JCW5yID0gbWluX25yOwotCQludGZzX2RlYnVnKCJSZXRyeWluZyBt
ZnQgZGF0YSBhbGxvY2F0aW9uIHdpdGggbWluaW1hbCBjbHVzdGVyICIKLQkJCQkiY291bnQgJWxs
aS4iLCAobG9uZyBsb25nKW5yKTsKLQl9IHdoaWxlICgxKTsKLQlybCA9IG50ZnNfcnVubGlzdHNf
bWVyZ2UobWZ0X25pLT5ydW5saXN0LnJsLCBybDIpOwotCWlmIChJU19FUlIocmwpKSB7Ci0JCXVw
X3dyaXRlKCZtZnRfbmktPnJ1bmxpc3QubG9jayk7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZh
aWxlZCB0byBtZXJnZSBydW5saXN0cyBmb3IgbWZ0IGRhdGEgIgotCQkJCSJhdHRyaWJ1dGUuIik7
Ci0JCWlmIChudGZzX2NsdXN0ZXJfZnJlZV9mcm9tX3JsKHZvbCwgcmwyKSkgewotCQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGRlYWxsb2NhdGUgY2x1c3RlcnMgIgotCQkJCQkiZnJv
bSB0aGUgbWZ0IGRhdGEgYXR0cmlidXRlLiVzIiwgZXMpOwotCQkJTlZvbFNldEVycm9ycyh2b2wp
OwotCQl9Ci0JCW50ZnNfZnJlZShybDIpOwotCQlyZXR1cm4gUFRSX0VSUihybCk7Ci0JfQotCW1m
dF9uaS0+cnVubGlzdC5ybCA9IHJsOwotCW50ZnNfZGVidWcoIkFsbG9jYXRlZCAlbGxpIGNsdXN0
ZXJzLiIsIChsb25nIGxvbmcpbnIpOwotCS8qIEZpbmQgdGhlIGxhc3QgcnVuIGluIHRoZSBuZXcg
cnVubGlzdC4gKi8KLQlmb3IgKDsgcmxbMV0ubGVuZ3RoOyBybCsrKQotCQk7Ci0JLyogVXBkYXRl
IHRoZSBhdHRyaWJ1dGUgcmVjb3JkIGFzIHdlbGwuICovCi0JbXJlYyA9IG1hcF9tZnRfcmVjb3Jk
KG1mdF9uaSk7Ci0JaWYgKElTX0VSUihtcmVjKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJG
YWlsZWQgdG8gbWFwIG1mdCByZWNvcmQuIik7Ci0JCXJldCA9IFBUUl9FUlIobXJlYyk7Ci0JCWdv
dG8gdW5kb19hbGxvYzsKLQl9Ci0JY3R4ID0gbnRmc19hdHRyX2dldF9zZWFyY2hfY3R4KG1mdF9u
aSwgbXJlYyk7Ci0JaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkZhaWxlZCB0byBnZXQgc2VhcmNoIGNvbnRleHQuIik7Ci0JCXJldCA9IC1FTk9NRU07Ci0JCWdv
dG8gdW5kb19hbGxvYzsKLQl9Ci0JcmV0ID0gbnRmc19hdHRyX2xvb2t1cChtZnRfbmktPnR5cGUs
IG1mdF9uaS0+bmFtZSwgbWZ0X25pLT5uYW1lX2xlbiwKLQkJCUNBU0VfU0VOU0lUSVZFLCBybFsx
XS52Y24sIE5VTEwsIDAsIGN0eCk7Ci0JaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJbnRmc19lcnJv
cih2b2wtPnNiLCAiRmFpbGVkIHRvIGZpbmQgbGFzdCBhdHRyaWJ1dGUgZXh0ZW50IG9mICIKLQkJ
CQkibWZ0IGRhdGEgYXR0cmlidXRlLiIpOwotCQlpZiAocmV0ID09IC1FTk9FTlQpCi0JCQlyZXQg
PSAtRUlPOwotCQlnb3RvIHVuZG9fYWxsb2M7Ci0JfQotCWEgPSBjdHgtPmF0dHI7Ci0JbGwgPSBz
bGU2NF90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3Zjbik7Ci0JLyogU2VhcmNo
IGJhY2sgZm9yIHRoZSBwcmV2aW91cyBsYXN0IGFsbG9jYXRlZCBjbHVzdGVyIG9mIG1mdCBiaXRt
YXAuICovCi0JZm9yIChybDIgPSBybDsgcmwyID4gbWZ0X25pLT5ydW5saXN0LnJsOyBybDItLSkg
ewotCQlpZiAobGwgPj0gcmwyLT52Y24pCi0JCQlicmVhazsKLQl9Ci0JQlVHX09OKGxsIDwgcmwy
LT52Y24pOwotCUJVR19PTihsbCA+PSBybDItPnZjbiArIHJsMi0+bGVuZ3RoKTsKLQkvKiBHZXQg
dGhlIHNpemUgZm9yIHRoZSBuZXcgbWFwcGluZyBwYWlycyBhcnJheSBmb3IgdGhpcyBleHRlbnQu
ICovCi0JbXBfc2l6ZSA9IG50ZnNfZ2V0X3NpemVfZm9yX21hcHBpbmdfcGFpcnModm9sLCBybDIs
IGxsLCAtMSk7Ci0JaWYgKHVubGlrZWx5KG1wX3NpemUgPD0gMCkpIHsKLQkJbnRmc19lcnJvcih2
b2wtPnNiLCAiR2V0IHNpemUgZm9yIG1hcHBpbmcgcGFpcnMgZmFpbGVkIGZvciAiCi0JCQkJIm1m
dCBkYXRhIGF0dHJpYnV0ZSBleHRlbnQuIik7Ci0JCXJldCA9IG1wX3NpemU7Ci0JCWlmICghcmV0
KQotCQkJcmV0ID0gLUVJTzsKLQkJZ290byB1bmRvX2FsbG9jOwotCX0KLQkvKiBFeHBhbmQgdGhl
IGF0dHJpYnV0ZSByZWNvcmQgaWYgbmVjZXNzYXJ5LiAqLwotCW9sZF9hbGVuID0gbGUzMl90b19j
cHUoYS0+bGVuZ3RoKTsKLQlyZXQgPSBudGZzX2F0dHJfcmVjb3JkX3Jlc2l6ZShjdHgtPm1yZWMs
IGEsIG1wX3NpemUgKwotCQkJbGUxNl90b19jcHUoYS0+ZGF0YS5ub25fcmVzaWRlbnQubWFwcGlu
Z19wYWlyc19vZmZzZXQpKTsKLQlpZiAodW5saWtlbHkocmV0KSkgewotCQlpZiAocmV0ICE9IC1F
Tk9TUEMpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byByZXNpemUgYXR0cmli
dXRlICIKLQkJCQkJInJlY29yZCBmb3IgbWZ0IGRhdGEgYXR0cmlidXRlLiIpOwotCQkJZ290byB1
bmRvX2FsbG9jOwotCQl9Ci0JCS8vIFRPRE86IERlYWwgd2l0aCB0aGlzIGJ5IG1vdmluZyB0aGlz
IGV4dGVudCB0byBhIG5ldyBtZnQKLQkJLy8gcmVjb3JkIG9yIGJ5IHN0YXJ0aW5nIGEgbmV3IGV4
dGVudCBpbiBhIG5ldyBtZnQgcmVjb3JkIG9yIGJ5Ci0JCS8vIG1vdmluZyBvdGhlciBhdHRyaWJ1
dGVzIG91dCBvZiB0aGlzIG1mdCByZWNvcmQuCi0JCS8vIE5vdGU6IFVzZSB0aGUgc3BlY2lhbCBy
ZXNlcnZlZCBtZnQgcmVjb3JkcyBhbmQgZW5zdXJlIHRoYXQKLQkJLy8gdGhpcyBleHRlbnQgaXMg
bm90IHJlcXVpcmVkIHRvIGZpbmQgdGhlIG1mdCByZWNvcmQgaW4KLQkJLy8gcXVlc3Rpb24uICBJ
ZiBubyBmcmVlIHNwZWNpYWwgcmVjb3JkcyBsZWZ0IHdlIHdvdWxkIG5lZWQgdG8KLQkJLy8gbW92
ZSBhbiBleGlzdGluZyByZWNvcmQgYXdheSwgaW5zZXJ0IG91cnMgaW4gaXRzIHBsYWNlLCBhbmQK
LQkJLy8gdGhlbiBwbGFjZSB0aGUgbW92ZWQgcmVjb3JkIGludG8gdGhlIG5ld2x5IGFsbG9jYXRl
ZCBzcGFjZQotCQkvLyBhbmQgd2Ugd291bGQgdGhlbiBuZWVkIHRvIHVwZGF0ZSBhbGwgcmVmZXJl
bmNlcyB0byB0aGlzIG1mdAotCQkvLyByZWNvcmQgYXBwcm9wcmlhdGVseS4gIFRoaXMgaXMgcmF0
aGVyIGNvbXBsaWNhdGVkLi4uCi0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk5vdCBlbm91Z2ggc3Bh
Y2UgaW4gdGhpcyBtZnQgcmVjb3JkIHRvICIKLQkJCQkiYWNjb21tb2RhdGUgZXh0ZW5kZWQgbWZ0
IGRhdGEgYXR0cmlidXRlICIKLQkJCQkiZXh0ZW50LiAgQ2Fubm90IGhhbmRsZSB0aGlzIHlldC4i
KTsKLQkJcmV0ID0gLUVPUE5PVFNVUFA7Ci0JCWdvdG8gdW5kb19hbGxvYzsKLQl9Ci0JbXBfcmVi
dWlsdCA9IHRydWU7Ci0JLyogR2VuZXJhdGUgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgZGlyZWN0
bHkgaW50byB0aGUgYXR0ciByZWNvcmQuICovCi0JcmV0ID0gbnRmc19tYXBwaW5nX3BhaXJzX2J1
aWxkKHZvbCwgKHU4KilhICsKLQkJCWxlMTZfdG9fY3B1KGEtPmRhdGEubm9uX3Jlc2lkZW50Lm1h
cHBpbmdfcGFpcnNfb2Zmc2V0KSwKLQkJCW1wX3NpemUsIHJsMiwgbGwsIC0xLCBOVUxMKTsKLQlp
ZiAodW5saWtlbHkocmV0KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYnVp
bGQgbWFwcGluZyBwYWlycyBhcnJheSBvZiAiCi0JCQkJIm1mdCBkYXRhIGF0dHJpYnV0ZS4iKTsK
LQkJZ290byB1bmRvX2FsbG9jOwotCX0KLQkvKiBVcGRhdGUgdGhlIGhpZ2hlc3RfdmNuLiAqLwot
CWEtPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3RfdmNuID0gY3B1X3RvX3NsZTY0KHJsWzFdLnZj
biAtIDEpOwotCS8qCi0JICogV2Ugbm93IGhhdmUgZXh0ZW5kZWQgdGhlIG1mdCBkYXRhIGFsbG9j
YXRlZF9zaXplIGJ5IG5yIGNsdXN0ZXJzLgotCSAqIFJlZmxlY3QgdGhpcyBpbiB0aGUgbnRmc19p
bm9kZSBzdHJ1Y3R1cmUgYW5kIHRoZSBhdHRyaWJ1dGUgcmVjb3JkLgotCSAqIEBybCBpcyB0aGUg
bGFzdCAobm9uLXRlcm1pbmF0b3IpIHJ1bmxpc3QgZWxlbWVudCBvZiBtZnQgZGF0YQotCSAqIGF0
dHJpYnV0ZS4KLQkgKi8KLQlpZiAoYS0+ZGF0YS5ub25fcmVzaWRlbnQubG93ZXN0X3Zjbikgewot
CQkvKgotCQkgKiBXZSBhcmUgbm90IGluIHRoZSBmaXJzdCBhdHRyaWJ1dGUgZXh0ZW50LCBzd2l0
Y2ggdG8gaXQsIGJ1dAotCQkgKiBmaXJzdCBlbnN1cmUgdGhlIGNoYW5nZXMgd2lsbCBtYWtlIGl0
IHRvIGRpc2sgbGF0ZXIuCi0JCSAqLwotCQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9wYWdlKGN0
eC0+bnRmc19pbm8pOwotCQltYXJrX21mdF9yZWNvcmRfZGlydHkoY3R4LT5udGZzX2lubyk7Ci0J
CW50ZnNfYXR0cl9yZWluaXRfc2VhcmNoX2N0eChjdHgpOwotCQlyZXQgPSBudGZzX2F0dHJfbG9v
a3VwKG1mdF9uaS0+dHlwZSwgbWZ0X25pLT5uYW1lLAotCQkJCW1mdF9uaS0+bmFtZV9sZW4sIENB
U0VfU0VOU0lUSVZFLCAwLCBOVUxMLCAwLAotCQkJCWN0eCk7Ci0JCWlmICh1bmxpa2VseShyZXQp
KSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gZmluZCBmaXJzdCBhdHRyaWJ1
dGUgIgotCQkJCQkiZXh0ZW50IG9mIG1mdCBkYXRhIGF0dHJpYnV0ZS4iKTsKLQkJCWdvdG8gcmVz
dG9yZV91bmRvX2FsbG9jOwotCQl9Ci0JCWEgPSBjdHgtPmF0dHI7Ci0JfQotCXdyaXRlX2xvY2tf
aXJxc2F2ZSgmbWZ0X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQltZnRfbmktPmFsbG9jYXRlZF9z
aXplICs9IG5yIDw8IHZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JYS0+ZGF0YS5ub25fcmVzaWRl
bnQuYWxsb2NhdGVkX3NpemUgPQotCQkJY3B1X3RvX3NsZTY0KG1mdF9uaS0+YWxsb2NhdGVkX3Np
emUpOwotCXdyaXRlX3VubG9ja19pcnFyZXN0b3JlKCZtZnRfbmktPnNpemVfbG9jaywgZmxhZ3Mp
OwotCS8qIEVuc3VyZSB0aGUgY2hhbmdlcyBtYWtlIGl0IHRvIGRpc2suICovCi0JZmx1c2hfZGNh
Y2hlX21mdF9yZWNvcmRfcGFnZShjdHgtPm50ZnNfaW5vKTsKLQltYXJrX21mdF9yZWNvcmRfZGly
dHkoY3R4LT5udGZzX2lubyk7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JdW5t
YXBfbWZ0X3JlY29yZChtZnRfbmkpOwotCXVwX3dyaXRlKCZtZnRfbmktPnJ1bmxpc3QubG9jayk7
Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gMDsKLXJlc3RvcmVfdW5kb19hbGxvYzoK
LQludGZzX2F0dHJfcmVpbml0X3NlYXJjaF9jdHgoY3R4KTsKLQlpZiAobnRmc19hdHRyX2xvb2t1
cChtZnRfbmktPnR5cGUsIG1mdF9uaS0+bmFtZSwgbWZ0X25pLT5uYW1lX2xlbiwKLQkJCUNBU0Vf
U0VOU0lUSVZFLCBybFsxXS52Y24sIE5VTEwsIDAsIGN0eCkpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIGZpbmQgbGFzdCBhdHRyaWJ1dGUgZXh0ZW50IG9mICIKLQkJCQkibWZ0
IGRhdGEgYXR0cmlidXRlLiVzIiwgZXMpOwotCQl3cml0ZV9sb2NrX2lycXNhdmUoJm1mdF9uaS0+
c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCW1mdF9uaS0+YWxsb2NhdGVkX3NpemUgKz0gbnIgPDwgdm9s
LT5jbHVzdGVyX3NpemVfYml0czsKLQkJd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm1mdF9uaS0+
c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCQl1
bm1hcF9tZnRfcmVjb3JkKG1mdF9uaSk7Ci0JCXVwX3dyaXRlKCZtZnRfbmktPnJ1bmxpc3QubG9j
ayk7Ci0JCS8qCi0JCSAqIFRoZSBvbmx5IHRoaW5nIHRoYXQgaXMgbm93IHdyb25nIGlzIC0+YWxs
b2NhdGVkX3NpemUgb2YgdGhlCi0JCSAqIGJhc2UgYXR0cmlidXRlIGV4dGVudCB3aGljaCBjaGtk
c2sgc2hvdWxkIGJlIGFibGUgdG8gZml4LgotCQkgKi8KLQkJTlZvbFNldEVycm9ycyh2b2wpOwot
CQlyZXR1cm4gcmV0OwotCX0KLQljdHgtPmF0dHItPmRhdGEubm9uX3Jlc2lkZW50LmhpZ2hlc3Rf
dmNuID0KLQkJCWNwdV90b19zbGU2NChvbGRfbGFzdF92Y24gLSAxKTsKLXVuZG9fYWxsb2M6Ci0J
aWYgKG50ZnNfY2x1c3Rlcl9mcmVlKG1mdF9uaSwgb2xkX2xhc3RfdmNuLCAtMSwgY3R4KSA8IDAp
IHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGZyZWUgY2x1c3RlcnMgZnJvbSBt
ZnQgZGF0YSAiCi0JCQkJImF0dHJpYnV0ZS4lcyIsIGVzKTsKLQkJTlZvbFNldEVycm9ycyh2b2wp
OwotCX0KLQotCWlmIChudGZzX3JsX3RydW5jYXRlX25vbG9jayh2b2wsICZtZnRfbmktPnJ1bmxp
c3QsIG9sZF9sYXN0X3ZjbikpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHRy
dW5jYXRlIG1mdCBkYXRhIGF0dHJpYnV0ZSAiCi0JCQkJInJ1bmxpc3QuJXMiLCBlcyk7Ci0JCU5W
b2xTZXRFcnJvcnModm9sKTsKLQl9Ci0JaWYgKGN0eCkgewotCQlhID0gY3R4LT5hdHRyOwotCQlp
ZiAobXBfcmVidWlsdCAmJiAhSVNfRVJSKGN0eC0+bXJlYykpIHsKLQkJCWlmIChudGZzX21hcHBp
bmdfcGFpcnNfYnVpbGQodm9sLCAodTggKilhICsgbGUxNl90b19jcHUoCi0JCQkJYS0+ZGF0YS5u
b25fcmVzaWRlbnQubWFwcGluZ19wYWlyc19vZmZzZXQpLAotCQkJCW9sZF9hbGVuIC0gbGUxNl90
b19jcHUoCi0JCQkJCWEtPmRhdGEubm9uX3Jlc2lkZW50Lm1hcHBpbmdfcGFpcnNfb2Zmc2V0KSwK
LQkJCQlybDIsIGxsLCAtMSwgTlVMTCkpIHsKLQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWls
ZWQgdG8gcmVzdG9yZSBtYXBwaW5nIHBhaXJzICIKLQkJCQkJImFycmF5LiVzIiwgZXMpOwotCQkJ
CU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJCX0KLQkJCWlmIChudGZzX2F0dHJfcmVjb3JkX3Jlc2l6
ZShjdHgtPm1yZWMsIGEsIG9sZF9hbGVuKSkgewotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZh
aWxlZCB0byByZXN0b3JlIGF0dHJpYnV0ZSAiCi0JCQkJCSJyZWNvcmQuJXMiLCBlcyk7Ci0JCQkJ
TlZvbFNldEVycm9ycyh2b2wpOwotCQkJfQotCQkJZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFn
ZShjdHgtPm50ZnNfaW5vKTsKLQkJCW1hcmtfbWZ0X3JlY29yZF9kaXJ0eShjdHgtPm50ZnNfaW5v
KTsKLQkJfSBlbHNlIGlmIChJU19FUlIoY3R4LT5tcmVjKSkgewotCQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIHJlc3RvcmUgYXR0cmlidXRlIHNlYXJjaCAiCi0JCQkJImNvbnRleHQu
JXMiLCBlcyk7Ci0JCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCX0KLQkJbnRmc19hdHRyX3B1dF9z
ZWFyY2hfY3R4KGN0eCk7Ci0JfQotCWlmICghSVNfRVJSKG1yZWMpKQotCQl1bm1hcF9tZnRfcmVj
b3JkKG1mdF9uaSk7Ci0JdXBfd3JpdGUoJm1mdF9uaS0+cnVubGlzdC5sb2NrKTsKLQlyZXR1cm4g
cmV0OwotfQotCi0vKioKLSAqIG50ZnNfbWZ0X3JlY29yZF9sYXlvdXQgLSBsYXlvdXQgYW4gbWZ0
IHJlY29yZCBpbnRvIGEgbWVtb3J5IGJ1ZmZlcgotICogQHZvbDoJdm9sdW1lIHRvIHdoaWNoIHRo
ZSBtZnQgcmVjb3JkIHdpbGwgYmVsb25nCi0gKiBAbWZ0X25vOgltZnQgcmVmZXJlbmNlIHNwZWNp
ZnlpbmcgdGhlIG1mdCByZWNvcmQgbnVtYmVyCi0gKiBAbToJCWRlc3RpbmF0aW9uIGJ1ZmZlciBv
ZiBzaXplID49IEB2b2wtPm1mdF9yZWNvcmRfc2l6ZSBieXRlcwotICoKLSAqIExheW91dCBhbiBl
bXB0eSwgdW51c2VkIG1mdCByZWNvcmQgd2l0aCB0aGUgbWZ0IHJlY29yZCBudW1iZXIgQG1mdF9u
byBpbnRvCi0gKiB0aGUgYnVmZmVyIEBtLiAgVGhlIHZvbHVtZSBAdm9sIGlzIG5lZWRlZCBiZWNh
dXNlIHRoZSBtZnQgcmVjb3JkIHN0cnVjdHVyZQotICogd2FzIG1vZGlmaWVkIGluIE5URlMgMy4x
IHNvIHdlIG5lZWQgdG8ga25vdyB3aGljaCB2b2x1bWUgdmVyc2lvbiB0aGlzIG1mdAotICogcmVj
b3JkIHdpbGwgYmUgdXNlZCBvbi4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJy
bm8gb24gZXJyb3IuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19tZnRfcmVjb3JkX2xheW91dChjb25z
dCBudGZzX3ZvbHVtZSAqdm9sLCBjb25zdCBzNjQgbWZ0X25vLAotCQlNRlRfUkVDT1JEICptKQot
ewotCUFUVFJfUkVDT1JEICphOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcgZm9yIG1mdCByZWNv
cmQgMHglbGx4LiIsIChsb25nIGxvbmcpbWZ0X25vKTsKLQlpZiAobWZ0X25vID49ICgxbGwgPDwg
MzIpKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk1mdCByZWNvcmQgbnVtYmVyIDB4JWxseCBl
eGNlZWRzICIKLQkJCQkibWF4aW11bSBvZiAyXjMyLiIsIChsb25nIGxvbmcpbWZ0X25vKTsKLQkJ
cmV0dXJuIC1FUkFOR0U7Ci0JfQotCS8qIFN0YXJ0IGJ5IGNsZWFyaW5nIHRoZSB3aG9sZSBtZnQg
cmVjb3JkIHRvIGdpdmVzIHVzIGEgY2xlYW4gc2xhdGUuICovCi0JbWVtc2V0KG0sIDAsIHZvbC0+
bWZ0X3JlY29yZF9zaXplKTsKLQkvKiBBbGlnbmVkIHRvIDItYnl0ZSBib3VuZGFyeS4gKi8KLQlp
ZiAodm9sLT5tYWpvcl92ZXIgPCAzIHx8ICh2b2wtPm1ham9yX3ZlciA9PSAzICYmICF2b2wtPm1p
bm9yX3ZlcikpCi0JCW0tPnVzYV9vZnMgPSBjcHVfdG9fbGUxNigoc2l6ZW9mKE1GVF9SRUNPUkRf
T0xEKSArIDEpICYgfjEpOwotCWVsc2UgewotCQltLT51c2Ffb2ZzID0gY3B1X3RvX2xlMTYoKHNp
emVvZihNRlRfUkVDT1JEKSArIDEpICYgfjEpOwotCQkvKgotCQkgKiBTZXQgdGhlIE5URlMgMy4x
KyBzcGVjaWZpYyBmaWVsZHMgd2hpbGUgd2Uga25vdyB0aGF0IHRoZQotCQkgKiB2b2x1bWUgdmVy
c2lvbiBpcyAzLjErLgotCQkgKi8KLQkJbS0+cmVzZXJ2ZWQgPSAwOwotCQltLT5tZnRfcmVjb3Jk
X251bWJlciA9IGNwdV90b19sZTMyKCh1MzIpbWZ0X25vKTsKLQl9Ci0JbS0+bWFnaWMgPSBtYWdp
Y19GSUxFOwotCWlmICh2b2wtPm1mdF9yZWNvcmRfc2l6ZSA+PSBOVEZTX0JMT0NLX1NJWkUpCi0J
CW0tPnVzYV9jb3VudCA9IGNwdV90b19sZTE2KHZvbC0+bWZ0X3JlY29yZF9zaXplIC8KLQkJCQlO
VEZTX0JMT0NLX1NJWkUgKyAxKTsKLQllbHNlIHsKLQkJbS0+dXNhX2NvdW50ID0gY3B1X3RvX2xl
MTYoMSk7Ci0JCW50ZnNfd2FybmluZyh2b2wtPnNiLCAiU2VjdG9yIHNpemUgaXMgYmlnZ2VyIHRo
YW4gbWZ0IHJlY29yZCAiCi0JCQkJInNpemUuICBTZXR0aW5nIHVzYV9jb3VudCB0byAxLiAgSWYg
Y2hrZHNrICIKLQkJCQkicmVwb3J0cyB0aGlzIGFzIGNvcnJ1cHRpb24sIHBsZWFzZSBlbWFpbCAi
Ci0JCQkJImxpbnV4LW50ZnMtZGV2QGxpc3RzLnNvdXJjZWZvcmdlLm5ldCBzdGF0aW5nICIKLQkJ
CQkidGhhdCB5b3Ugc2F3IHRoaXMgbWVzc2FnZSBhbmQgdGhhdCB0aGUgIgotCQkJCSJtb2RpZmll
ZCBmaWxlc3lzdGVtIGNyZWF0ZWQgd2FzIGNvcnJ1cHQuICAiCi0JCQkJIlRoYW5rIHlvdS4iKTsK
LQl9Ci0JLyogU2V0IHRoZSB1cGRhdGUgc2VxdWVuY2UgbnVtYmVyIHRvIDEuICovCi0JKihsZTE2
KikoKHU4KiltICsgbGUxNl90b19jcHUobS0+dXNhX29mcykpID0gY3B1X3RvX2xlMTYoMSk7Ci0J
bS0+bHNuID0gMDsKLQltLT5zZXF1ZW5jZV9udW1iZXIgPSBjcHVfdG9fbGUxNigxKTsKLQltLT5s
aW5rX2NvdW50ID0gMDsKLQkvKgotCSAqIFBsYWNlIHRoZSBhdHRyaWJ1dGVzIHN0cmFpZ2h0IGFm
dGVyIHRoZSB1cGRhdGUgc2VxdWVuY2UgYXJyYXksCi0JICogYWxpZ25lZCB0byA4LWJ5dGUgYm91
bmRhcnkuCi0JICovCi0JbS0+YXR0cnNfb2Zmc2V0ID0gY3B1X3RvX2xlMTYoKGxlMTZfdG9fY3B1
KG0tPnVzYV9vZnMpICsKLQkJCShsZTE2X3RvX2NwdShtLT51c2FfY291bnQpIDw8IDEpICsgNykg
JiB+Nyk7Ci0JbS0+ZmxhZ3MgPSAwOwotCS8qCi0JICogVXNpbmcgYXR0cnNfb2Zmc2V0IHBsdXMg
ZWlnaHQgYnl0ZXMgKGZvciB0aGUgdGVybWluYXRpb24gYXR0cmlidXRlKS4KLQkgKiBhdHRyc19v
ZmZzZXQgaXMgYWxyZWFkeSBhbGlnbmVkIHRvIDgtYnl0ZSBib3VuZGFyeSwgc28gbm8gbmVlZCB0
bwotCSAqIGFsaWduIGFnYWluLgotCSAqLwotCW0tPmJ5dGVzX2luX3VzZSA9IGNwdV90b19sZTMy
KGxlMTZfdG9fY3B1KG0tPmF0dHJzX29mZnNldCkgKyA4KTsKLQltLT5ieXRlc19hbGxvY2F0ZWQg
PSBjcHVfdG9fbGUzMih2b2wtPm1mdF9yZWNvcmRfc2l6ZSk7Ci0JbS0+YmFzZV9tZnRfcmVjb3Jk
ID0gMDsKLQltLT5uZXh0X2F0dHJfaW5zdGFuY2UgPSAwOwotCS8qIEFkZCB0aGUgdGVybWluYXRp
b24gYXR0cmlidXRlLiAqLwotCWEgPSAoQVRUUl9SRUNPUkQqKSgodTgqKW0gKyBsZTE2X3RvX2Nw
dShtLT5hdHRyc19vZmZzZXQpKTsKLQlhLT50eXBlID0gQVRfRU5EOwotCWEtPmxlbmd0aCA9IDA7
Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gMDsKLX0KLQotLyoqCi0gKiBudGZzX21m
dF9yZWNvcmRfZm9ybWF0IC0gZm9ybWF0IGFuIG1mdCByZWNvcmQgb24gYW4gbnRmcyB2b2x1bWUK
LSAqIEB2b2w6CXZvbHVtZSBvbiB3aGljaCB0byBmb3JtYXQgdGhlIG1mdCByZWNvcmQKLSAqIEBt
ZnRfbm86CW1mdCByZWNvcmQgbnVtYmVyIHRvIGZvcm1hdAotICoKLSAqIEZvcm1hdCB0aGUgbWZ0
IHJlY29yZCBAbWZ0X25vIGluICRNRlQvJERBVEEsIGkuZS4gbGF5IG91dCBhbiBlbXB0eSwgdW51
c2VkCi0gKiBtZnQgcmVjb3JkIGludG8gdGhlIGFwcHJvcHJpYXRlIHBsYWNlIG9mIHRoZSBtZnQg
ZGF0YSBhdHRyaWJ1dGUuICBUaGlzIGlzCi0gKiB1c2VkIHdoZW4gZXh0ZW5kaW5nIHRoZSBtZnQg
ZGF0YSBhdHRyaWJ1dGUuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9u
IGVycm9yLgotICovCi1zdGF0aWMgaW50IG50ZnNfbWZ0X3JlY29yZF9mb3JtYXQoY29uc3QgbnRm
c192b2x1bWUgKnZvbCwgY29uc3QgczY0IG1mdF9ubykKLXsKLQlsb2ZmX3QgaV9zaXplOwotCXN0
cnVjdCBpbm9kZSAqbWZ0X3ZpID0gdm9sLT5tZnRfaW5vOwotCXN0cnVjdCBwYWdlICpwYWdlOwot
CU1GVF9SRUNPUkQgKm07Ci0JcGdvZmZfdCBpbmRleCwgZW5kX2luZGV4OwotCXVuc2lnbmVkIGlu
dCBvZnM7Ci0JaW50IGVycjsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBtZnQgcmVjb3Jk
IDB4JWxseC4iLCAobG9uZyBsb25nKW1mdF9ubyk7Ci0JLyoKLQkgKiBUaGUgaW5kZXggaW50byB0
aGUgcGFnZSBjYWNoZSBhbmQgdGhlIG9mZnNldCB3aXRoaW4gdGhlIHBhZ2UgY2FjaGUKLQkgKiBw
YWdlIG9mIHRoZSB3YW50ZWQgbWZ0IHJlY29yZC4KLQkgKi8KLQlpbmRleCA9IG1mdF9ubyA8PCB2
b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzID4+IFBBR0VfU0hJRlQ7Ci0Jb2ZzID0gKG1mdF9ubyA8
PCB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzKSAmIH5QQUdFX01BU0s7Ci0JLyogVGhlIG1heGlt
dW0gdmFsaWQgaW5kZXggaW50byB0aGUgcGFnZSBjYWNoZSBmb3IgJE1GVCdzIGRhdGEuICovCi0J
aV9zaXplID0gaV9zaXplX3JlYWQobWZ0X3ZpKTsKLQllbmRfaW5kZXggPSBpX3NpemUgPj4gUEFH
RV9TSElGVDsKLQlpZiAodW5saWtlbHkoaW5kZXggPj0gZW5kX2luZGV4KSkgewotCQlpZiAodW5s
aWtlbHkoaW5kZXggPiBlbmRfaW5kZXggfHwgb2ZzICsgdm9sLT5tZnRfcmVjb3JkX3NpemUgPj0K
LQkJCQkoaV9zaXplICYgflBBR0VfTUFTSykpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJU
cmllZCB0byBmb3JtYXQgbm9uLWV4aXN0aW5nIG1mdCAiCi0JCQkJCSJyZWNvcmQgMHglbGx4LiIs
IChsb25nIGxvbmcpbWZ0X25vKTsKLQkJCXJldHVybiAtRU5PRU5UOwotCQl9Ci0JfQotCS8qIFJl
YWQsIG1hcCwgYW5kIHBpbiB0aGUgcGFnZSBjb250YWluaW5nIHRoZSBtZnQgcmVjb3JkLiAqLwot
CXBhZ2UgPSBudGZzX21hcF9wYWdlKG1mdF92aS0+aV9tYXBwaW5nLCBpbmRleCk7Ci0JaWYgKElT
X0VSUihwYWdlKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbWFwIHBhZ2Ug
Y29udGFpbmluZyBtZnQgcmVjb3JkICIKLQkJCQkidG8gZm9ybWF0IDB4JWxseC4iLCAobG9uZyBs
b25nKW1mdF9ubyk7Ci0JCXJldHVybiBQVFJfRVJSKHBhZ2UpOwotCX0KLQlsb2NrX3BhZ2UocGFn
ZSk7Ci0JQlVHX09OKCFQYWdlVXB0b2RhdGUocGFnZSkpOwotCUNsZWFyUGFnZVVwdG9kYXRlKHBh
Z2UpOwotCW0gPSAoTUZUX1JFQ09SRCopKCh1OCopcGFnZV9hZGRyZXNzKHBhZ2UpICsgb2ZzKTsK
LQllcnIgPSBudGZzX21mdF9yZWNvcmRfbGF5b3V0KHZvbCwgbWZ0X25vLCBtKTsKLQlpZiAodW5s
aWtlbHkoZXJyKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbGF5b3V0IG1m
dCByZWNvcmQgMHglbGx4LiIsCi0JCQkJKGxvbmcgbG9uZyltZnRfbm8pOwotCQlTZXRQYWdlVXB0
b2RhdGUocGFnZSk7Ci0JCXVubG9ja19wYWdlKHBhZ2UpOwotCQludGZzX3VubWFwX3BhZ2UocGFn
ZSk7Ci0JCXJldHVybiBlcnI7Ci0JfQotCWZsdXNoX2RjYWNoZV9wYWdlKHBhZ2UpOwotCVNldFBh
Z2VVcHRvZGF0ZShwYWdlKTsKLQl1bmxvY2tfcGFnZShwYWdlKTsKLQkvKgotCSAqIE1ha2Ugc3Vy
ZSB0aGUgbWZ0IHJlY29yZCBpcyB3cml0dGVuIG91dCB0byBkaXNrLiAgV2UgY291bGQgdXNlCi0J
ICogaWxvb2t1cDUoKSB0byBjaGVjayBpZiBhbiBpbm9kZSBpcyBpbiBpY2FjaGUgYW5kIHNvIG9u
IGJ1dCB0aGlzIGlzCi0JICogdW5uZWNlc3NhcnkgYXMgbnRmc193cml0ZXBhZ2UoKSB3aWxsIHdy
aXRlIHRoZSBkaXJ0eSByZWNvcmQgYW55d2F5LgotCSAqLwotCW1hcmtfbnRmc19yZWNvcmRfZGly
dHkocGFnZSwgb2ZzKTsKLQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JbnRmc19kZWJ1ZygiRG9u
ZS4iKTsKLQlyZXR1cm4gMDsKLX0KLQotLyoqCi0gKiBudGZzX21mdF9yZWNvcmRfYWxsb2MgLSBh
bGxvY2F0ZSBhbiBtZnQgcmVjb3JkIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAdm9sOglbSU5dICB2
b2x1bWUgb24gd2hpY2ggdG8gYWxsb2NhdGUgdGhlIG1mdCByZWNvcmQKLSAqIEBtb2RlOglbSU5d
ICBtb2RlIGlmIHdhbnQgYSBmaWxlIG9yIGRpcmVjdG9yeSwgaS5lLiBiYXNlIGlub2RlIG9yIDAK
LSAqIEBiYXNlX25pOglbSU5dICBvcGVuIGJhc2UgaW5vZGUgaWYgYWxsb2NhdGluZyBhbiBleHRl
bnQgbWZ0IHJlY29yZCBvciBOVUxMCi0gKiBAbXJlYzoJW09VVF0gb24gc3VjY2Vzc2Z1bCByZXR1
cm4gdGhpcyBpcyB0aGUgbWFwcGVkIG1mdCByZWNvcmQKLSAqCi0gKiBBbGxvY2F0ZSBhbiBtZnQg
cmVjb3JkIGluICRNRlQvJERBVEEgb2YgYW4gb3BlbiBudGZzIHZvbHVtZSBAdm9sLgotICoKLSAq
IElmIEBiYXNlX25pIGlzIE5VTEwgbWFrZSB0aGUgbWZ0IHJlY29yZCBhIGJhc2UgbWZ0IHJlY29y
ZCwgaS5lLiBhIGZpbGUgb3IKLSAqIGRpcmV2Y3RvcnkgaW5vZGUsIGFuZCBhbGxvY2F0ZSBpdCBh
dCB0aGUgZGVmYXVsdCBhbGxvY2F0b3IgcG9zaXRpb24uICBJbgotICogdGhpcyBjYXNlIEBtb2Rl
IGlzIHRoZSBmaWxlIG1vZGUgYXMgZ2l2ZW4gdG8gdXMgYnkgdGhlIGNhbGxlci4gIFdlIGluCi0g
KiBwYXJ0aWN1bGFyIHVzZSBAbW9kZSB0byBkaXN0aW5ndWlzaCB3aGV0aGVyIGEgZmlsZSBvciBh
IGRpcmVjdG9yeSBpcyBiZWluZwotICogY3JlYXRlZCAoU19JRkRJUihtb2RlKSBhbmQgU19JRlJF
Ryhtb2RlKSwgcmVzcGVjdGl2ZWx5KS4KLSAqCi0gKiBJZiBAYmFzZV9uaSBpcyBub3QgTlVMTCBt
YWtlIHRoZSBhbGxvY2F0ZWQgbWZ0IHJlY29yZCBhbiBleHRlbnQgcmVjb3JkLAotICogYWxsb2Nh
dGUgaXQgc3RhcnRpbmcgYXQgdGhlIG1mdCByZWNvcmQgYWZ0ZXIgdGhlIGJhc2UgbWZ0IHJlY29y
ZCBhbmQgYXR0YWNoCi0gKiB0aGUgYWxsb2NhdGVkIGFuZCBvcGVuZWQgbnRmcyBpbm9kZSB0byB0
aGUgYmFzZSBpbm9kZSBAYmFzZV9uaS4gIEluIHRoaXMKLSAqIGNhc2UgQG1vZGUgbXVzdCBiZSAw
IGFzIGl0IGlzIG1lYW5pbmdsZXNzIGZvciBleHRlbnQgaW5vZGVzLgotICoKLSAqIFlvdSBuZWVk
IHRvIGNoZWNrIHRoZSByZXR1cm4gdmFsdWUgd2l0aCBJU19FUlIoKS4gIElmIGZhbHNlLCB0aGUg
ZnVuY3Rpb24KLSAqIHdhcyBzdWNjZXNzZnVsIGFuZCB0aGUgcmV0dXJuIHZhbHVlIGlzIHRoZSBu
b3cgb3BlbmVkIG50ZnMgaW5vZGUgb2YgdGhlCi0gKiBhbGxvY2F0ZWQgbWZ0IHJlY29yZC4gICpA
bXJlYyBpcyB0aGVuIHNldCB0byB0aGUgYWxsb2NhdGVkLCBtYXBwZWQsIHBpbm5lZCwKLSAqIGFu
ZCBsb2NrZWQgbWZ0IHJlY29yZC4gIElmIElTX0VSUigpIGlzIHRydWUsIHRoZSBmdW5jdGlvbiBm
YWlsZWQgYW5kIHRoZQotICogZXJyb3IgY29kZSBpcyBvYnRhaW5lZCBmcm9tIFBUUl9FUlIocmV0
dXJuIHZhbHVlKS4gICpAbXJlYyBpcyB1bmRlZmluZWQgaW4KLSAqIHRoaXMgY2FzZS4KLSAqCi0g
KiBBbGxvY2F0aW9uIHN0cmF0ZWd5OgotICoKLSAqIFRvIGZpbmQgYSBmcmVlIG1mdCByZWNvcmQs
IHdlIHNjYW4gdGhlIG1mdCBiaXRtYXAgZm9yIGEgemVybyBiaXQuICBUbwotICogb3B0aW1pemUg
dGhpcyB3ZSBzdGFydCBzY2FubmluZyBhdCB0aGUgcGxhY2Ugc3BlY2lmaWVkIGJ5IEBiYXNlX25p
IG9yIGlmCi0gKiBAYmFzZV9uaSBpcyBOVUxMIHdlIHN0YXJ0IHdoZXJlIHdlIGxhc3Qgc3RvcHBl
ZCBhbmQgd2UgcGVyZm9ybSB3cmFwIGFyb3VuZAotICogd2hlbiB3ZSByZWFjaCB0aGUgZW5kLiAg
Tm90ZSwgd2UgZG8gbm90IHRyeSB0byBhbGxvY2F0ZSBtZnQgcmVjb3JkcyBiZWxvdwotICogbnVt
YmVyIDI0IGJlY2F1c2UgbnVtYmVycyAwIHRvIDE1IGFyZSB0aGUgZGVmaW5lZCBzeXN0ZW0gZmls
ZXMgYW55d2F5IGFuZCAxNgotICogdG8gMjQgYXJlIHNwZWNpYWwgaW4gdGhhdCB0aGV5IGFyZSB1
c2VkIGZvciBzdG9yaW5nIGV4dGVuc2lvbiBtZnQgcmVjb3JkcwotICogZm9yIHRoZSAkREFUQSBh
dHRyaWJ1dGUgb2YgJE1GVC4gIFRoaXMgaXMgcmVxdWlyZWQgdG8gYXZvaWQgdGhlIHBvc3NpYmls
aXR5Ci0gKiBvZiBjcmVhdGluZyBhIHJ1bmxpc3Qgd2l0aCBhIGNpcmN1bGFyIGRlcGVuZGVuY3kg
d2hpY2ggb25jZSB3cml0dGVuIHRvIGRpc2sKLSAqIGNhbiBuZXZlciBiZSByZWFkIGluIGFnYWlu
LiAgV2luZG93cyB3aWxsIG9ubHkgdXNlIHJlY29yZHMgMTYgdG8gMjQgZm9yCi0gKiBub3JtYWwg
ZmlsZXMgaWYgdGhlIHZvbHVtZSBpcyBjb21wbGV0ZWx5IG91dCBvZiBzcGFjZS4gIFdlIG5ldmVy
IHVzZSB0aGVtCi0gKiB3aGljaCBtZWFucyB0aGF0IHdoZW4gdGhlIHZvbHVtZSBpcyByZWFsbHkg
b3V0IG9mIHNwYWNlIHdlIGNhbm5vdCBjcmVhdGUgYW55Ci0gKiBtb3JlIGZpbGVzIHdoaWxlIFdp
bmRvd3MgY2FuIHN0aWxsIGNyZWF0ZSB1cCB0byA4IHNtYWxsIGZpbGVzLiAgV2UgY2FuIHN0YXJ0
Ci0gKiBkb2luZyB0aGlzIGF0IHNvbWUgbGF0ZXIgdGltZSwgaXQgZG9lcyBub3QgbWF0dGVyIG11
Y2ggZm9yIG5vdy4KLSAqCi0gKiBXaGVuIHNjYW5uaW5nIHRoZSBtZnQgYml0bWFwLCB3ZSBvbmx5
IHNlYXJjaCB1cCB0byB0aGUgbGFzdCBhbGxvY2F0ZWQgbWZ0Ci0gKiByZWNvcmQuICBJZiB0aGVy
ZSBhcmUgbm8gZnJlZSByZWNvcmRzIGxlZnQgaW4gdGhlIHJhbmdlIDI0IHRvIG51bWJlciBvZgot
ICogYWxsb2NhdGVkIG1mdCByZWNvcmRzLCB0aGVuIHdlIGV4dGVuZCB0aGUgJE1GVC8kREFUQSBh
dHRyaWJ1dGUgaW4gb3JkZXIgdG8KLSAqIGNyZWF0ZSBmcmVlIG1mdCByZWNvcmRzLiAgV2UgZXh0
ZW5kIHRoZSBhbGxvY2F0ZWQgc2l6ZSBvZiAkTUZULyREQVRBIGJ5IDE2Ci0gKiByZWNvcmRzIGF0
IGEgdGltZSBvciBvbmUgY2x1c3RlciwgaWYgY2x1c3RlciBzaXplIGlzIGFib3ZlIDE2a2lCLiAg
SWYgdGhlcmUKLSAqIGlzIG5vdCBzdWZmaWNpZW50IHNwYWNlIHRvIGRvIHRoaXMsIHdlIHRyeSB0
byBleHRlbmQgYnkgYSBzaW5nbGUgbWZ0IHJlY29yZAotICogb3Igb25lIGNsdXN0ZXIsIGlmIGNs
dXN0ZXIgc2l6ZSBpcyBhYm92ZSB0aGUgbWZ0IHJlY29yZCBzaXplLgotICoKLSAqIE5vIG1hdHRl
ciBob3cgbWFueSBtZnQgcmVjb3JkcyB3ZSBhbGxvY2F0ZSwgd2UgaW5pdGlhbGl6ZSBvbmx5IHRo
ZSBmaXJzdAotICogYWxsb2NhdGVkIG1mdCByZWNvcmQsIGluY3JlbWVudGluZyBtZnQgZGF0YSBz
aXplIGFuZCBpbml0aWFsaXplZCBzaXplCi0gKiBhY2NvcmRpbmdseSwgb3BlbiBhbiBudGZzX2lu
b2RlIGZvciBpdCBhbmQgcmV0dXJuIGl0IHRvIHRoZSBjYWxsZXIsIHVubGVzcwotICogdGhlcmUg
YXJlIGxlc3MgdGhhbiAyNCBtZnQgcmVjb3JkcywgaW4gd2hpY2ggY2FzZSB3ZSBhbGxvY2F0ZSBh
bmQgaW5pdGlhbGl6ZQotICogbWZ0IHJlY29yZHMgdW50aWwgd2UgcmVhY2ggcmVjb3JkIDI0IHdo
aWNoIHdlIGNvbnNpZGVyIGFzIHRoZSBmaXJzdCBmcmVlIG1mdAotICogcmVjb3JkIGZvciB1c2Ug
Ynkgbm9ybWFsIGZpbGVzLgotICoKLSAqIElmIGR1cmluZyBhbnkgc3RhZ2Ugd2Ugb3ZlcmZsb3cg
dGhlIGluaXRpYWxpemVkIGRhdGEgaW4gdGhlIG1mdCBiaXRtYXAsIHdlCi0gKiBleHRlbmQgdGhl
IGluaXRpYWxpemVkIHNpemUgKGFuZCBkYXRhIHNpemUpIGJ5IDggYnl0ZXMsIGFsbG9jYXRpbmcg
YW5vdGhlcgotICogY2x1c3RlciBpZiByZXF1aXJlZC4gIFRoZSBiaXRtYXAgZGF0YSBzaXplIGhh
cyB0byBiZSBhdCBsZWFzdCBlcXVhbCB0byB0aGUKLSAqIG51bWJlciBvZiBtZnQgcmVjb3JkcyBp
biB0aGUgbWZ0LCBidXQgaXQgY2FuIGJlIGJpZ2dlciwgaW4gd2hpY2ggY2FzZSB0aGUKLSAqIHN1
cGVyZmxvdXMgYml0cyBhcmUgcGFkZGVkIHdpdGggemVyb2VzLgotICoKLSAqIFRodXMsIHdoZW4g
d2UgcmV0dXJuIHN1Y2Nlc3NmdWxseSAoSVNfRVJSKCkgaXMgZmFsc2UpLCB3ZSB3aWxsIGhhdmU6
Ci0gKgktIGluaXRpYWxpemVkIC8gZXh0ZW5kZWQgdGhlIG1mdCBiaXRtYXAgaWYgbmVjZXNzYXJ5
LAotICoJLSBpbml0aWFsaXplZCAvIGV4dGVuZGVkIHRoZSBtZnQgZGF0YSBpZiBuZWNlc3Nhcnks
Ci0gKgktIHNldCB0aGUgYml0IGNvcnJlc3BvbmRpbmcgdG8gdGhlIG1mdCByZWNvcmQgYmVpbmcg
YWxsb2NhdGVkIGluIHRoZQotICoJICBtZnQgYml0bWFwLAotICoJLSBvcGVuZWQgYW4gbnRmc19p
bm9kZSBmb3IgdGhlIGFsbG9jYXRlZCBtZnQgcmVjb3JkLCBhbmQgd2Ugd2lsbCBoYXZlCi0gKgkt
IHJldHVybmVkIHRoZSBudGZzX2lub2RlIGFzIHdlbGwgYXMgdGhlIGFsbG9jYXRlZCBtYXBwZWQs
IHBpbm5lZCwgYW5kCi0gKgkgIGxvY2tlZCBtZnQgcmVjb3JkLgotICoKLSAqIE9uIGVycm9yLCB0
aGUgdm9sdW1lIHdpbGwgYmUgbGVmdCBpbiBhIGNvbnNpc3RlbnQgc3RhdGUgYW5kIG5vIHJlY29y
ZCB3aWxsCi0gKiBiZSBhbGxvY2F0ZWQuICBJZiByb2xsaW5nIGJhY2sgYSBwYXJ0aWFsIG9wZXJh
dGlvbiBmYWlscywgd2UgbWF5IGxlYXZlIHNvbWUKLSAqIGluY29uc2lzdGVudCBtZXRhZGF0YSBp
biB3aGljaCBjYXNlIHdlIHNldCBOVm9sRXJyb3JzKCkgc28gdGhlIHZvbHVtZSBpcwotICogbGVm
dCBkaXJ0eSB3aGVuIHVubW91bnRlZC4KLSAqCi0gKiBOb3RlLCB0aGlzIGZ1bmN0aW9uIGNhbm5v
dCBtYWtlIHVzZSBvZiBtb3N0IG9mIHRoZSBub3JtYWwgZnVuY3Rpb25zLCBsaWtlCi0gKiBmb3Ig
ZXhhbXBsZSBmb3IgYXR0cmlidXRlIHJlc2l6aW5nLCBldGMsIGJlY2F1c2Ugd2hlbiB0aGUgcnVu
IGxpc3Qgb3ZlcmZsb3dzCi0gKiB0aGUgYmFzZSBtZnQgcmVjb3JkIGFuZCBhbiBhdHRyaWJ1dGUg
bGlzdCBpcyB1c2VkLCBpdCBpcyB2ZXJ5IGltcG9ydGFudCB0aGF0Ci0gKiB0aGUgZXh0ZW5zaW9u
IG1mdCByZWNvcmRzIHVzZWQgdG8gc3RvcmUgdGhlICREQVRBIGF0dHJpYnV0ZSBvZiAkTUZUIGNh
biBiZQotICogcmVhY2hlZCB3aXRob3V0IGhhdmluZyB0byByZWFkIHRoZSBpbmZvcm1hdGlvbiBj
b250YWluZWQgaW5zaWRlIHRoZW0sIGFzCi0gKiB0aGlzIHdvdWxkIG1ha2UgaXQgaW1wb3NzaWJs
ZSB0byBmaW5kIHRoZW0gaW4gdGhlIGZpcnN0IHBsYWNlIGFmdGVyIHRoZQotICogdm9sdW1lIGlz
IHVubW91bnRlZC4gICRNRlQvJEJJVE1BUCBwcm9iYWJseSBkb2VzIG5vdCBuZWVkIHRvIGZvbGxv
dyB0aGlzCi0gKiBydWxlIGJlY2F1c2UgdGhlIGJpdG1hcCBpcyBub3QgZXNzZW50aWFsIGZvciBm
aW5kaW5nIHRoZSBtZnQgcmVjb3JkcywgYnV0IG9uCi0gKiB0aGUgb3RoZXIgaGFuZCwgaGFuZGxp
bmcgdGhlIGJpdG1hcCBpbiB0aGlzIHNwZWNpYWwgd2F5IHdvdWxkIG1ha2UgbGlmZQotICogZWFz
aWVyIGJlY2F1c2Ugb3RoZXJ3aXNlIHRoZXJlIG1pZ2h0IGJlIGNpcmN1bGFyIGludm9jYXRpb25z
IG9mIGZ1bmN0aW9ucwotICogd2hlbiByZWFkaW5nIHRoZSBiaXRtYXAuCi0gKi8KLW50ZnNfaW5v
ZGUgKm50ZnNfbWZ0X3JlY29yZF9hbGxvYyhudGZzX3ZvbHVtZSAqdm9sLCBjb25zdCBpbnQgbW9k
ZSwKLQkJbnRmc19pbm9kZSAqYmFzZV9uaSwgTUZUX1JFQ09SRCAqKm1yZWMpCi17Ci0JczY0IGxs
LCBiaXQsIG9sZF9kYXRhX2luaXRpYWxpemVkLCBvbGRfZGF0YV9zaXplOwotCXVuc2lnbmVkIGxv
bmcgZmxhZ3M7Ci0Jc3RydWN0IGlub2RlICp2aTsKLQlzdHJ1Y3QgcGFnZSAqcGFnZTsKLQludGZz
X2lub2RlICptZnRfbmksICptZnRibXBfbmksICpuaTsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAq
Y3R4OwotCU1GVF9SRUNPUkQgKm07Ci0JQVRUUl9SRUNPUkQgKmE7Ci0JcGdvZmZfdCBpbmRleDsK
LQl1bnNpZ25lZCBpbnQgb2ZzOwotCWludCBlcnI7Ci0JbGUxNiBzZXFfbm8sIHVzbjsKLQlib29s
IHJlY29yZF9mb3JtYXR0ZWQgPSBmYWxzZTsKLQotCWlmIChiYXNlX25pKSB7Ci0JCW50ZnNfZGVi
dWcoIkVudGVyaW5nIChhbGxvY2F0aW5nIGFuIGV4dGVudCBtZnQgcmVjb3JkIGZvciAiCi0JCQkJ
ImJhc2UgbWZ0IHJlY29yZCAweCVsbHgpLiIsCi0JCQkJKGxvbmcgbG9uZyliYXNlX25pLT5tZnRf
bm8pOwotCQkvKiBAbW9kZSBhbmQgQGJhc2VfbmkgYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZS4gKi8K
LQkJQlVHX09OKG1vZGUpOwotCX0gZWxzZQotCQludGZzX2RlYnVnKCJFbnRlcmluZyAoYWxsb2Nh
dGluZyBhIGJhc2UgbWZ0IHJlY29yZCkuIik7Ci0JaWYgKG1vZGUpIHsKLQkJLyogQG1vZGUgYW5k
IEBiYXNlX25pIGFyZSBtdXR1YWxseSBleGNsdXNpdmUuICovCi0JCUJVR19PTihiYXNlX25pKTsK
LQkJLyogV2Ugb25seSBzdXBwb3J0IGNyZWF0aW9uIG9mIG5vcm1hbCBmaWxlcyBhbmQgZGlyZWN0
b3JpZXMuICovCi0JCWlmICghU19JU1JFRyhtb2RlKSAmJiAhU19JU0RJUihtb2RlKSkKLQkJCXJl
dHVybiBFUlJfUFRSKC1FT1BOT1RTVVBQKTsKLQl9Ci0JQlVHX09OKCFtcmVjKTsKLQltZnRfbmkg
PSBOVEZTX0kodm9sLT5tZnRfaW5vKTsKLQltZnRibXBfbmkgPSBOVEZTX0kodm9sLT5tZnRibXBf
aW5vKTsKLQlkb3duX3dyaXRlKCZ2b2wtPm1mdGJtcF9sb2NrKTsKLQliaXQgPSBudGZzX21mdF9i
aXRtYXBfZmluZF9hbmRfYWxsb2NfZnJlZV9yZWNfbm9sb2NrKHZvbCwgYmFzZV9uaSk7Ci0JaWYg
KGJpdCA+PSAwKSB7Ci0JCW50ZnNfZGVidWcoIkZvdW5kIGFuZCBhbGxvY2F0ZWQgZnJlZSByZWNv
cmQgKCMxKSwgYml0IDB4JWxseC4iLAotCQkJCShsb25nIGxvbmcpYml0KTsKLQkJZ290byBoYXZl
X2FsbG9jX3JlYzsKLQl9Ci0JaWYgKGJpdCAhPSAtRU5PU1BDKSB7Ci0JCXVwX3dyaXRlKCZ2b2wt
Pm1mdGJtcF9sb2NrKTsKLQkJcmV0dXJuIEVSUl9QVFIoYml0KTsKLQl9Ci0JLyoKLQkgKiBObyBm
cmVlIG1mdCByZWNvcmRzIGxlZnQuICBJZiB0aGUgbWZ0IGJpdG1hcCBhbHJlYWR5IGNvdmVycyBt
b3JlCi0JICogdGhhbiB0aGUgY3VycmVudGx5IHVzZWQgbWZ0IHJlY29yZHMsIHRoZSBuZXh0IHJl
Y29yZHMgYXJlIGFsbCBmcmVlLAotCSAqIHNvIHdlIGNhbiBzaW1wbHkgYWxsb2NhdGUgdGhlIGZp
cnN0IHVudXNlZCBtZnQgcmVjb3JkLgotCSAqIE5vdGU6IFdlIGFsc28gaGF2ZSB0byBtYWtlIHN1
cmUgdGhhdCB0aGUgbWZ0IGJpdG1hcCBhdCBsZWFzdCBjb3ZlcnMKLQkgKiB0aGUgZmlyc3QgMjQg
bWZ0IHJlY29yZHMgYXMgdGhleSBhcmUgc3BlY2lhbCBhbmQgd2hpbHN0IHRoZXkgbWF5IG5vdAot
CSAqIGJlIGluIHVzZSwgd2UgZG8gbm90IGFsbG9jYXRlIGZyb20gdGhlbS4KLQkgKi8KLQlyZWFk
X2xvY2tfaXJxc2F2ZSgmbWZ0X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlsbCA9IG1mdF9uaS0+
aW5pdGlhbGl6ZWRfc2l6ZSA+PiB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzOwotCXJlYWRfdW5s
b2NrX2lycXJlc3RvcmUoJm1mdF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JcmVhZF9sb2NrX2ly
cXNhdmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0Jb2xkX2RhdGFfaW5pdGlhbGl6
ZWQgPSBtZnRibXBfbmktPmluaXRpYWxpemVkX3NpemU7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9y
ZSgmbWZ0Ym1wX25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlpZiAob2xkX2RhdGFfaW5pdGlhbGl6
ZWQgPDwgMyA+IGxsICYmIG9sZF9kYXRhX2luaXRpYWxpemVkID4gMykgewotCQliaXQgPSBsbDsK
LQkJaWYgKGJpdCA8IDI0KQotCQkJYml0ID0gMjQ7Ci0JCWlmICh1bmxpa2VseShiaXQgPj0gKDFs
bCA8PCAzMikpKQotCQkJZ290byBtYXhfZXJyX291dDsKLQkJbnRmc19kZWJ1ZygiRm91bmQgZnJl
ZSByZWNvcmQgKCMyKSwgYml0IDB4JWxseC4iLAotCQkJCShsb25nIGxvbmcpYml0KTsKLQkJZ290
byBmb3VuZF9mcmVlX3JlYzsKLQl9Ci0JLyoKLQkgKiBUaGUgbWZ0IGJpdG1hcCBuZWVkcyB0byBi
ZSBleHBhbmRlZCB1bnRpbCBpdCBjb3ZlcnMgdGhlIGZpcnN0IHVudXNlZAotCSAqIG1mdCByZWNv
cmQgdGhhdCB3ZSBjYW4gYWxsb2NhdGUuCi0JICogTm90ZTogVGhlIHNtYWxsZXN0IG1mdCByZWNv
cmQgd2UgYWxsb2NhdGUgaXMgbWZ0IHJlY29yZCAyNC4KLQkgKi8KLQliaXQgPSBvbGRfZGF0YV9p
bml0aWFsaXplZCA8PCAzOwotCWlmICh1bmxpa2VseShiaXQgPj0gKDFsbCA8PCAzMikpKQotCQln
b3RvIG1heF9lcnJfb3V0OwotCXJlYWRfbG9ja19pcnFzYXZlKCZtZnRibXBfbmktPnNpemVfbG9j
aywgZmxhZ3MpOwotCW9sZF9kYXRhX3NpemUgPSBtZnRibXBfbmktPmFsbG9jYXRlZF9zaXplOwot
CW50ZnNfZGVidWcoIlN0YXR1cyBvZiBtZnRibXAgYmVmb3JlIGV4dGVuc2lvbjogYWxsb2NhdGVk
X3NpemUgMHglbGx4LCAiCi0JCQkiZGF0YV9zaXplIDB4JWxseCwgaW5pdGlhbGl6ZWRfc2l6ZSAw
eCVsbHguIiwKLQkJCShsb25nIGxvbmcpb2xkX2RhdGFfc2l6ZSwKLQkJCShsb25nIGxvbmcpaV9z
aXplX3JlYWQodm9sLT5tZnRibXBfaW5vKSwKLQkJCShsb25nIGxvbmcpb2xkX2RhdGFfaW5pdGlh
bGl6ZWQpOwotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBm
bGFncyk7Ci0JaWYgKG9sZF9kYXRhX2luaXRpYWxpemVkICsgOCA+IG9sZF9kYXRhX3NpemUpIHsK
LQkJLyogTmVlZCB0byBleHRlbmQgYml0bWFwIGJ5IG9uZSBtb3JlIGNsdXN0ZXIuICovCi0JCW50
ZnNfZGVidWcoIm1mdGJtcDogaW5pdGlhbGl6ZWRfc2l6ZSArIDggPiBhbGxvY2F0ZWRfc2l6ZS4i
KTsKLQkJZXJyID0gbnRmc19tZnRfYml0bWFwX2V4dGVuZF9hbGxvY2F0aW9uX25vbG9jayh2b2wp
OwotCQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJdXBfd3JpdGUoJnZvbC0+bWZ0Ym1wX2xvY2sp
OwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0jaWZkZWYgREVCVUcKLQkJcmVhZF9sb2NrX2lycXNh
dmUoJm1mdGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCW50ZnNfZGVidWcoIlN0YXR1cyBv
ZiBtZnRibXAgYWZ0ZXIgYWxsb2NhdGlvbiBleHRlbnNpb246ICIKLQkJCQkiYWxsb2NhdGVkX3Np
emUgMHglbGx4LCBkYXRhX3NpemUgMHglbGx4LCAiCi0JCQkJImluaXRpYWxpemVkX3NpemUgMHgl
bGx4LiIsCi0JCQkJKGxvbmcgbG9uZyltZnRibXBfbmktPmFsbG9jYXRlZF9zaXplLAotCQkJCShs
b25nIGxvbmcpaV9zaXplX3JlYWQodm9sLT5tZnRibXBfaW5vKSwKLQkJCQkobG9uZyBsb25nKW1m
dGJtcF9uaS0+aW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm1m
dGJtcF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0jZW5kaWYgLyogREVCVUcgKi8KLQl9Ci0JLyoK
LQkgKiBXZSBub3cgaGF2ZSBzdWZmaWNpZW50IGFsbG9jYXRlZCBzcGFjZSwgZXh0ZW5kIHRoZSBp
bml0aWFsaXplZF9zaXplCi0JICogYXMgd2VsbCBhcyB0aGUgZGF0YV9zaXplIGlmIG5lY2Vzc2Fy
eSBhbmQgZmlsbCB0aGUgbmV3IHNwYWNlIHdpdGgKLQkgKiB6ZXJvZXMuCi0JICovCi0JZXJyID0g
bnRmc19tZnRfYml0bWFwX2V4dGVuZF9pbml0aWFsaXplZF9ub2xvY2sodm9sKTsKLQlpZiAodW5s
aWtlbHkoZXJyKSkgewotCQl1cF93cml0ZSgmdm9sLT5tZnRibXBfbG9jayk7Ci0JCWdvdG8gZXJy
X291dDsKLQl9Ci0jaWZkZWYgREVCVUcKLQlyZWFkX2xvY2tfaXJxc2F2ZSgmbWZ0Ym1wX25pLT5z
aXplX2xvY2ssIGZsYWdzKTsKLQludGZzX2RlYnVnKCJTdGF0dXMgb2YgbWZ0Ym1wIGFmdGVyIGlu
aXRpYWxpemVkIGV4dGVuc2lvbjogIgotCQkJImFsbG9jYXRlZF9zaXplIDB4JWxseCwgZGF0YV9z
aXplIDB4JWxseCwgIgotCQkJImluaXRpYWxpemVkX3NpemUgMHglbGx4LiIsCi0JCQkobG9uZyBs
b25nKW1mdGJtcF9uaS0+YWxsb2NhdGVkX3NpemUsCi0JCQkobG9uZyBsb25nKWlfc2l6ZV9yZWFk
KHZvbC0+bWZ0Ym1wX2lubyksCi0JCQkobG9uZyBsb25nKW1mdGJtcF9uaS0+aW5pdGlhbGl6ZWRf
c2l6ZSk7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0Ym1wX25pLT5zaXplX2xvY2ssIGZs
YWdzKTsKLSNlbmRpZiAvKiBERUJVRyAqLwotCW50ZnNfZGVidWcoIkZvdW5kIGZyZWUgcmVjb3Jk
ICgjMyksIGJpdCAweCVsbHguIiwgKGxvbmcgbG9uZyliaXQpOwotZm91bmRfZnJlZV9yZWM6Ci0J
LyogQGJpdCBpcyB0aGUgZm91bmQgZnJlZSBtZnQgcmVjb3JkLCBhbGxvY2F0ZSBpdCBpbiB0aGUg
bWZ0IGJpdG1hcC4gKi8KLQludGZzX2RlYnVnKCJBdCBmb3VuZF9mcmVlX3JlYy4iKTsKLQllcnIg
PSBudGZzX2JpdG1hcF9zZXRfYml0KHZvbC0+bWZ0Ym1wX2lubywgYml0KTsKLQlpZiAodW5saWtl
bHkoZXJyKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYWxsb2NhdGUgYml0
IGluIG1mdCBiaXRtYXAuIik7Ci0JCXVwX3dyaXRlKCZ2b2wtPm1mdGJtcF9sb2NrKTsKLQkJZ290
byBlcnJfb3V0OwotCX0KLQludGZzX2RlYnVnKCJTZXQgYml0IDB4JWxseCBpbiBtZnQgYml0bWFw
LiIsIChsb25nIGxvbmcpYml0KTsKLWhhdmVfYWxsb2NfcmVjOgotCS8qCi0JICogVGhlIG1mdCBi
aXRtYXAgaXMgbm93IHVwdG9kYXRlLiAgRGVhbCB3aXRoIG1mdCBkYXRhIGF0dHJpYnV0ZSBub3cu
Ci0JICogTm90ZSwgd2Uga2VlcCBob2xkIG9mIHRoZSBtZnQgYml0bWFwIGxvY2sgZm9yIHdyaXRp
bmcgdW50aWwgYWxsCi0JICogbW9kaWZpY2F0aW9ucyB0byB0aGUgbWZ0IGRhdGEgYXR0cmlidXRl
IGFyZSBjb21wbGV0ZSwgdG9vLCBhcyB0aGV5Ci0JICogd2lsbCBpbXBhY3QgZGVjaXNpb25zIGZv
ciBtZnQgYml0bWFwIGFuZCBtZnQgcmVjb3JkIGFsbG9jYXRpb24gZG9uZQotCSAqIGJ5IGEgcGFy
YWxsZWwgYWxsb2NhdGlvbiBhbmQgaWYgdGhlIGxvY2sgaXMgbm90IG1haW50YWluZWQgYQotCSAq
IHBhcmFsbGVsIGFsbG9jYXRpb24gY291bGQgYWxsb2NhdGUgdGhlIHNhbWUgbWZ0IHJlY29yZCBh
cyB0aGlzIG9uZS4KLQkgKi8KLQlsbCA9IChiaXQgKyAxKSA8PCB2b2wtPm1mdF9yZWNvcmRfc2l6
ZV9iaXRzOwotCXJlYWRfbG9ja19pcnFzYXZlKCZtZnRfbmktPnNpemVfbG9jaywgZmxhZ3MpOwot
CW9sZF9kYXRhX2luaXRpYWxpemVkID0gbWZ0X25pLT5pbml0aWFsaXplZF9zaXplOwotCXJlYWRf
dW5sb2NrX2lycXJlc3RvcmUoJm1mdF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JaWYgKGxsIDw9
IG9sZF9kYXRhX2luaXRpYWxpemVkKSB7Ci0JCW50ZnNfZGVidWcoIkFsbG9jYXRlZCBtZnQgcmVj
b3JkIGFscmVhZHkgaW5pdGlhbGl6ZWQuIik7Ci0JCWdvdG8gbWZ0X3JlY19hbHJlYWR5X2luaXRp
YWxpemVkOwotCX0KLQludGZzX2RlYnVnKCJJbml0aWFsaXppbmcgYWxsb2NhdGVkIG1mdCByZWNv
cmQuIik7Ci0JLyoKLQkgKiBUaGUgbWZ0IHJlY29yZCBpcyBvdXRzaWRlIHRoZSBpbml0aWFsaXpl
ZCBkYXRhLiAgRXh0ZW5kIHRoZSBtZnQgZGF0YQotCSAqIGF0dHJpYnV0ZSB1bnRpbCBpdCBjb3Zl
cnMgdGhlIGFsbG9jYXRlZCByZWNvcmQuICBUaGUgbG9vcCBpcyBvbmx5Ci0JICogYWN0dWFsbHkg
dHJhdmVyc2VkIG1vcmUgdGhhbiBvbmNlIHdoZW4gYSBmcmVzaGx5IGZvcm1hdHRlZCB2b2x1bWUg
aXMKLQkgKiBmaXJzdCB3cml0dGVuIHRvIHNvIGl0IG9wdGltaXplcyBhd2F5IG5pY2VseSBpbiB0
aGUgY29tbW9uIGNhc2UuCi0JICovCi0JcmVhZF9sb2NrX2lycXNhdmUoJm1mdF9uaS0+c2l6ZV9s
b2NrLCBmbGFncyk7Ci0JbnRmc19kZWJ1ZygiU3RhdHVzIG9mIG1mdCBkYXRhIGJlZm9yZSBleHRl
bnNpb246ICIKLQkJCSJhbGxvY2F0ZWRfc2l6ZSAweCVsbHgsIGRhdGFfc2l6ZSAweCVsbHgsICIK
LQkJCSJpbml0aWFsaXplZF9zaXplIDB4JWxseC4iLAotCQkJKGxvbmcgbG9uZyltZnRfbmktPmFs
bG9jYXRlZF9zaXplLAotCQkJKGxvbmcgbG9uZylpX3NpemVfcmVhZCh2b2wtPm1mdF9pbm8pLAot
CQkJKGxvbmcgbG9uZyltZnRfbmktPmluaXRpYWxpemVkX3NpemUpOwotCXdoaWxlIChsbCA+IG1m
dF9uaS0+YWxsb2NhdGVkX3NpemUpIHsKLQkJcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25p
LT5zaXplX2xvY2ssIGZsYWdzKTsKLQkJZXJyID0gbnRmc19tZnRfZGF0YV9leHRlbmRfYWxsb2Nh
dGlvbl9ub2xvY2sodm9sKTsKLQkJaWYgKHVubGlrZWx5KGVycikpIHsKLQkJCW50ZnNfZXJyb3Io
dm9sLT5zYiwgIkZhaWxlZCB0byBleHRlbmQgbWZ0IGRhdGEgIgotCQkJCQkiYWxsb2NhdGlvbi4i
KTsKLQkJCWdvdG8gdW5kb19tZnRibXBfYWxsb2Nfbm9sb2NrOwotCQl9Ci0JCXJlYWRfbG9ja19p
cnFzYXZlKCZtZnRfbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQludGZzX2RlYnVnKCJTdGF0dXMg
b2YgbWZ0IGRhdGEgYWZ0ZXIgYWxsb2NhdGlvbiBleHRlbnNpb246ICIKLQkJCQkiYWxsb2NhdGVk
X3NpemUgMHglbGx4LCBkYXRhX3NpemUgMHglbGx4LCAiCi0JCQkJImluaXRpYWxpemVkX3NpemUg
MHglbGx4LiIsCi0JCQkJKGxvbmcgbG9uZyltZnRfbmktPmFsbG9jYXRlZF9zaXplLAotCQkJCShs
b25nIGxvbmcpaV9zaXplX3JlYWQodm9sLT5tZnRfaW5vKSwKLQkJCQkobG9uZyBsb25nKW1mdF9u
aS0+aW5pdGlhbGl6ZWRfc2l6ZSk7Ci0JfQotCXJlYWRfdW5sb2NrX2lycXJlc3RvcmUoJm1mdF9u
aS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JLyoKLQkgKiBFeHRlbmQgbWZ0IGRhdGEgaW5pdGlhbGl6
ZWQgc2l6ZSAoYW5kIGRhdGEgc2l6ZSBvZiBjb3Vyc2UpIHRvIHJlYWNoCi0JICogdGhlIGFsbG9j
YXRlZCBtZnQgcmVjb3JkLCBmb3JtYXR0aW5nIHRoZSBtZnQgcmVjb3JkcyBhbGxvbmcgdGhlIHdh
eS4KLQkgKiBOb3RlOiBXZSBvbmx5IG1vZGlmeSB0aGUgbnRmc19pbm9kZSBzdHJ1Y3R1cmUgYXMg
dGhhdCBpcyBhbGwgdGhhdCBpcwotCSAqIG5lZWRlZCBieSBudGZzX21mdF9yZWNvcmRfZm9ybWF0
KCkuICBXZSB3aWxsIHVwZGF0ZSB0aGUgYXR0cmlidXRlCi0JICogcmVjb3JkIGl0c2VsZiBpbiBv
bmUgZmVsbCBzd29vcCBsYXRlciBvbi4KLQkgKi8KLQl3cml0ZV9sb2NrX2lycXNhdmUoJm1mdF9u
aS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0Jb2xkX2RhdGFfaW5pdGlhbGl6ZWQgPSBtZnRfbmktPmlu
aXRpYWxpemVkX3NpemU7Ci0Jb2xkX2RhdGFfc2l6ZSA9IHZvbC0+bWZ0X2luby0+aV9zaXplOwot
CXdoaWxlIChsbCA+IG1mdF9uaS0+aW5pdGlhbGl6ZWRfc2l6ZSkgewotCQlzNjQgbmV3X2luaXRp
YWxpemVkX3NpemUsIG1mdF9ubzsKLQkJCi0JCW5ld19pbml0aWFsaXplZF9zaXplID0gbWZ0X25p
LT5pbml0aWFsaXplZF9zaXplICsKLQkJCQl2b2wtPm1mdF9yZWNvcmRfc2l6ZTsKLQkJbWZ0X25v
ID0gbWZ0X25pLT5pbml0aWFsaXplZF9zaXplID4+IHZvbC0+bWZ0X3JlY29yZF9zaXplX2JpdHM7
Ci0JCWlmIChuZXdfaW5pdGlhbGl6ZWRfc2l6ZSA+IGlfc2l6ZV9yZWFkKHZvbC0+bWZ0X2lubykp
Ci0JCQlpX3NpemVfd3JpdGUodm9sLT5tZnRfaW5vLCBuZXdfaW5pdGlhbGl6ZWRfc2l6ZSk7Ci0J
CXdyaXRlX3VubG9ja19pcnFyZXN0b3JlKCZtZnRfbmktPnNpemVfbG9jaywgZmxhZ3MpOwotCQlu
dGZzX2RlYnVnKCJJbml0aWFsaXppbmcgbWZ0IHJlY29yZCAweCVsbHguIiwKLQkJCQkobG9uZyBs
b25nKW1mdF9ubyk7Ci0JCWVyciA9IG50ZnNfbWZ0X3JlY29yZF9mb3JtYXQodm9sLCBtZnRfbm8p
OwotCQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVk
IHRvIGZvcm1hdCBtZnQgcmVjb3JkLiIpOwotCQkJZ290byB1bmRvX2RhdGFfaW5pdDsKLQkJfQot
CQl3cml0ZV9sb2NrX2lycXNhdmUoJm1mdF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JCW1mdF9u
aS0+aW5pdGlhbGl6ZWRfc2l6ZSA9IG5ld19pbml0aWFsaXplZF9zaXplOwotCX0KLQl3cml0ZV91
bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlyZWNvcmRfZm9y
bWF0dGVkID0gdHJ1ZTsKLQkvKiBVcGRhdGUgdGhlIG1mdCBkYXRhIGF0dHJpYnV0ZSByZWNvcmQg
dG8gcmVmbGVjdCB0aGUgbmV3IHNpemVzLiAqLwotCW0gPSBtYXBfbWZ0X3JlY29yZChtZnRfbmkp
OwotCWlmIChJU19FUlIobSkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIG1h
cCBtZnQgcmVjb3JkLiIpOwotCQllcnIgPSBQVFJfRVJSKG0pOwotCQlnb3RvIHVuZG9fZGF0YV9p
bml0OwotCX0KLQljdHggPSBudGZzX2F0dHJfZ2V0X3NlYXJjaF9jdHgobWZ0X25pLCBtKTsKLQlp
ZiAodW5saWtlbHkoIWN0eCkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGdl
dCBzZWFyY2ggY29udGV4dC4iKTsKLQkJZXJyID0gLUVOT01FTTsKLQkJdW5tYXBfbWZ0X3JlY29y
ZChtZnRfbmkpOwotCQlnb3RvIHVuZG9fZGF0YV9pbml0OwotCX0KLQllcnIgPSBudGZzX2F0dHJf
bG9va3VwKG1mdF9uaS0+dHlwZSwgbWZ0X25pLT5uYW1lLCBtZnRfbmktPm5hbWVfbGVuLAotCQkJ
Q0FTRV9TRU5TSVRJVkUsIDAsIE5VTEwsIDAsIGN0eCk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsK
LQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGZpbmQgZmlyc3QgYXR0cmlidXRlIGV4
dGVudCBvZiAiCi0JCQkJIm1mdCBkYXRhIGF0dHJpYnV0ZS4iKTsKLQkJbnRmc19hdHRyX3B1dF9z
ZWFyY2hfY3R4KGN0eCk7Ci0JCXVubWFwX21mdF9yZWNvcmQobWZ0X25pKTsKLQkJZ290byB1bmRv
X2RhdGFfaW5pdDsKLQl9Ci0JYSA9IGN0eC0+YXR0cjsKLQlyZWFkX2xvY2tfaXJxc2F2ZSgmbWZ0
X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlhLT5kYXRhLm5vbl9yZXNpZGVudC5pbml0aWFsaXpl
ZF9zaXplID0KLQkJCWNwdV90b19zbGU2NChtZnRfbmktPmluaXRpYWxpemVkX3NpemUpOwotCWEt
PmRhdGEubm9uX3Jlc2lkZW50LmRhdGFfc2l6ZSA9Ci0JCQljcHVfdG9fc2xlNjQoaV9zaXplX3Jl
YWQodm9sLT5tZnRfaW5vKSk7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25pLT5zaXpl
X2xvY2ssIGZsYWdzKTsKLQkvKiBFbnN1cmUgdGhlIGNoYW5nZXMgbWFrZSBpdCB0byBkaXNrLiAq
LwotCWZsdXNoX2RjYWNoZV9tZnRfcmVjb3JkX3BhZ2UoY3R4LT5udGZzX2lubyk7Ci0JbWFya19t
ZnRfcmVjb3JkX2RpcnR5KGN0eC0+bnRmc19pbm8pOwotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0
eChjdHgpOwotCXVubWFwX21mdF9yZWNvcmQobWZ0X25pKTsKLQlyZWFkX2xvY2tfaXJxc2F2ZSgm
bWZ0X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQludGZzX2RlYnVnKCJTdGF0dXMgb2YgbWZ0IGRh
dGEgYWZ0ZXIgbWZ0IHJlY29yZCBpbml0aWFsaXphdGlvbjogIgotCQkJImFsbG9jYXRlZF9zaXpl
IDB4JWxseCwgZGF0YV9zaXplIDB4JWxseCwgIgotCQkJImluaXRpYWxpemVkX3NpemUgMHglbGx4
LiIsCi0JCQkobG9uZyBsb25nKW1mdF9uaS0+YWxsb2NhdGVkX3NpemUsCi0JCQkobG9uZyBsb25n
KWlfc2l6ZV9yZWFkKHZvbC0+bWZ0X2lubyksCi0JCQkobG9uZyBsb25nKW1mdF9uaS0+aW5pdGlh
bGl6ZWRfc2l6ZSk7Ci0JQlVHX09OKGlfc2l6ZV9yZWFkKHZvbC0+bWZ0X2lubykgPiBtZnRfbmkt
PmFsbG9jYXRlZF9zaXplKTsKLQlCVUdfT04obWZ0X25pLT5pbml0aWFsaXplZF9zaXplID4gaV9z
aXplX3JlYWQodm9sLT5tZnRfaW5vKSk7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25p
LT5zaXplX2xvY2ssIGZsYWdzKTsKLW1mdF9yZWNfYWxyZWFkeV9pbml0aWFsaXplZDoKLQkvKgot
CSAqIFdlIGNhbiBmaW5hbGx5IGRyb3AgdGhlIG1mdCBiaXRtYXAgbG9jayBhcyB0aGUgbWZ0IGRh
dGEgYXR0cmlidXRlCi0JICogaGFzIGJlZW4gZnVsbHkgdXBkYXRlZC4gIFRoZSBvbmx5IGRpc3Bh
cml0eSBsZWZ0IGlzIHRoYXQgdGhlCi0JICogYWxsb2NhdGVkIG1mdCByZWNvcmQgc3RpbGwgbmVl
ZHMgdG8gYmUgbWFya2VkIGFzIGluIHVzZSB0byBtYXRjaCB0aGUKLQkgKiBzZXQgYml0IGluIHRo
ZSBtZnQgYml0bWFwIGJ1dCB0aGlzIGlzIGFjdHVhbGx5IG5vdCBhIHByb2JsZW0gc2luY2UKLQkg
KiB0aGlzIG1mdCByZWNvcmQgaXMgbm90IHJlZmVyZW5jZWQgZnJvbSBhbnl3aGVyZSB5ZXQgYW5k
IHRoZSBmYWN0Ci0JICogdGhhdCBpdCBpcyBhbGxvY2F0ZWQgaW4gdGhlIG1mdCBiaXRtYXAgbWVh
bnMgdGhhdCBuby1vbmUgd2lsbCB0cnkgdG8KLQkgKiBhbGxvY2F0ZSBpdCBlaXRoZXIuCi0JICov
Ci0JdXBfd3JpdGUoJnZvbC0+bWZ0Ym1wX2xvY2spOwotCS8qCi0JICogV2Ugbm93IGhhdmUgYWxs
b2NhdGVkIGFuZCBpbml0aWFsaXplZCB0aGUgbWZ0IHJlY29yZC4gIENhbGN1bGF0ZSB0aGUKLQkg
KiBpbmRleCBvZiBhbmQgdGhlIG9mZnNldCB3aXRoaW4gdGhlIHBhZ2UgY2FjaGUgcGFnZSB0aGUg
cmVjb3JkIGlzIGluLgotCSAqLwotCWluZGV4ID0gYml0IDw8IHZvbC0+bWZ0X3JlY29yZF9zaXpl
X2JpdHMgPj4gUEFHRV9TSElGVDsKLQlvZnMgPSAoYml0IDw8IHZvbC0+bWZ0X3JlY29yZF9zaXpl
X2JpdHMpICYgflBBR0VfTUFTSzsKLQkvKiBSZWFkLCBtYXAsIGFuZCBwaW4gdGhlIHBhZ2UgY29u
dGFpbmluZyB0aGUgbWZ0IHJlY29yZC4gKi8KLQlwYWdlID0gbnRmc19tYXBfcGFnZSh2b2wtPm1m
dF9pbm8tPmlfbWFwcGluZywgaW5kZXgpOwotCWlmIChJU19FUlIocGFnZSkpIHsKLQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIG1hcCBwYWdlIGNvbnRhaW5pbmcgYWxsb2NhdGVkICIK
LQkJCQkibWZ0IHJlY29yZCAweCVsbHguIiwgKGxvbmcgbG9uZyliaXQpOwotCQllcnIgPSBQVFJf
RVJSKHBhZ2UpOwotCQlnb3RvIHVuZG9fbWZ0Ym1wX2FsbG9jOwotCX0KLQlsb2NrX3BhZ2UocGFn
ZSk7Ci0JQlVHX09OKCFQYWdlVXB0b2RhdGUocGFnZSkpOwotCUNsZWFyUGFnZVVwdG9kYXRlKHBh
Z2UpOwotCW0gPSAoTUZUX1JFQ09SRCopKCh1OCopcGFnZV9hZGRyZXNzKHBhZ2UpICsgb2ZzKTsK
LQkvKiBJZiB3ZSBqdXN0IGZvcm1hdHRlZCB0aGUgbWZ0IHJlY29yZCBubyBuZWVkIHRvIGRvIGl0
IGFnYWluLiAqLwotCWlmICghcmVjb3JkX2Zvcm1hdHRlZCkgewotCQkvKiBTYW5pdHkgY2hlY2sg
dGhhdCB0aGUgbWZ0IHJlY29yZCBpcyByZWFsbHkgbm90IGluIHVzZS4gKi8KLQkJaWYgKG50ZnNf
aXNfZmlsZV9yZWNvcmQobS0+bWFnaWMpICYmCi0JCQkJKG0tPmZsYWdzICYgTUZUX1JFQ09SRF9J
Tl9VU0UpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJNZnQgcmVjb3JkIDB4JWxseCB3YXMg
bWFya2VkICIKLQkJCQkJImZyZWUgaW4gbWZ0IGJpdG1hcCBidXQgaXMgbWFya2VkICIKLQkJCQkJ
InVzZWQgaXRzZWxmLiAgQ29ycnVwdCBmaWxlc3lzdGVtLiAgIgotCQkJCQkiVW5tb3VudCBhbmQg
cnVuIGNoa2Rzay4iLAotCQkJCQkobG9uZyBsb25nKWJpdCk7Ci0JCQllcnIgPSAtRUlPOwotCQkJ
U2V0UGFnZVVwdG9kYXRlKHBhZ2UpOwotCQkJdW5sb2NrX3BhZ2UocGFnZSk7Ci0JCQludGZzX3Vu
bWFwX3BhZ2UocGFnZSk7Ci0JCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQlnb3RvIHVuZG9fbWZ0
Ym1wX2FsbG9jOwotCQl9Ci0JCS8qCi0JCSAqIFdlIG5lZWQgdG8gKHJlLSlmb3JtYXQgdGhlIG1m
dCByZWNvcmQsIHByZXNlcnZpbmcgdGhlCi0JCSAqIHNlcXVlbmNlIG51bWJlciBpZiBpdCBpcyBu
b3QgemVybyBhcyB3ZWxsIGFzIHRoZSB1cGRhdGUKLQkJICogc2VxdWVuY2UgbnVtYmVyIGlmIGl0
IGlzIG5vdCB6ZXJvIG9yIC0xICgweGZmZmYpLiAgVGhpcwotCQkgKiBtZWFucyB3ZSBkbyBub3Qg
bmVlZCB0byBjYXJlIHdoZXRoZXIgb3Igbm90IHNvbWV0aGluZyB3ZW50Ci0JCSAqIHdyb25nIHdp
dGggdGhlIHByZXZpb3VzIG1mdCByZWNvcmQuCi0JCSAqLwotCQlzZXFfbm8gPSBtLT5zZXF1ZW5j
ZV9udW1iZXI7Ci0JCXVzbiA9ICoobGUxNiopKCh1OCopbSArIGxlMTZfdG9fY3B1KG0tPnVzYV9v
ZnMpKTsKLQkJZXJyID0gbnRmc19tZnRfcmVjb3JkX2xheW91dCh2b2wsIGJpdCwgbSk7Ci0JCWlm
ICh1bmxpa2VseShlcnIpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbGF5
b3V0IGFsbG9jYXRlZCBtZnQgIgotCQkJCQkicmVjb3JkIDB4JWxseC4iLCAobG9uZyBsb25nKWJp
dCk7Ci0JCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7Ci0JCQl1bmxvY2tfcGFnZShwYWdlKTsKLQkJ
CW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLQkJCWdvdG8gdW5kb19tZnRibXBfYWxsb2M7Ci0JCX0K
LQkJaWYgKHNlcV9ubykKLQkJCW0tPnNlcXVlbmNlX251bWJlciA9IHNlcV9ubzsKLQkJaWYgKHVz
biAmJiBsZTE2X3RvX2NwdSh1c24pICE9IDB4ZmZmZikKLQkJCSoobGUxNiopKCh1OCopbSArIGxl
MTZfdG9fY3B1KG0tPnVzYV9vZnMpKSA9IHVzbjsKLQl9Ci0JLyogU2V0IHRoZSBtZnQgcmVjb3Jk
IGl0c2VsZiBpbiB1c2UuICovCi0JbS0+ZmxhZ3MgfD0gTUZUX1JFQ09SRF9JTl9VU0U7Ci0JaWYg
KFNfSVNESVIobW9kZSkpCi0JCW0tPmZsYWdzIHw9IE1GVF9SRUNPUkRfSVNfRElSRUNUT1JZOwot
CWZsdXNoX2RjYWNoZV9wYWdlKHBhZ2UpOwotCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKLQlpZiAo
YmFzZV9uaSkgewotCQlNRlRfUkVDT1JEICptX3RtcDsKLQotCQkvKgotCQkgKiBTZXR1cCB0aGUg
YmFzZSBtZnQgcmVjb3JkIGluIHRoZSBleHRlbnQgbWZ0IHJlY29yZC4gIFRoaXMKLQkJICogY29t
cGxldGVzIGluaXRpYWxpemF0aW9uIG9mIHRoZSBhbGxvY2F0ZWQgZXh0ZW50IG1mdCByZWNvcmQK
LQkJICogYW5kIHdlIGNhbiBzaW1wbHkgdXNlIGl0IHdpdGggbWFwX2V4dGVudF9tZnRfcmVjb3Jk
KCkuCi0JCSAqLwotCQltLT5iYXNlX21mdF9yZWNvcmQgPSBNS19MRV9NUkVGKGJhc2VfbmktPm1m
dF9ubywKLQkJCQliYXNlX25pLT5zZXFfbm8pOwotCQkvKgotCQkgKiBBbGxvY2F0ZSBhbiBleHRl
bnQgaW5vZGUgc3RydWN0dXJlIGZvciB0aGUgbmV3IG1mdCByZWNvcmQsCi0JCSAqIGF0dGFjaCBp
dCB0byB0aGUgYmFzZSBpbm9kZSBAYmFzZV9uaSBhbmQgbWFwLCBwaW4sIGFuZCBsb2NrCi0JCSAq
IGl0cywgaS5lLiB0aGUgYWxsb2NhdGVkLCBtZnQgcmVjb3JkLgotCQkgKi8KLQkJbV90bXAgPSBt
YXBfZXh0ZW50X21mdF9yZWNvcmQoYmFzZV9uaSwgYml0LCAmbmkpOwotCQlpZiAoSVNfRVJSKG1f
dG1wKSkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIG1hcCBhbGxvY2F0ZWQg
ZXh0ZW50ICIKLQkJCQkJIm1mdCByZWNvcmQgMHglbGx4LiIsIChsb25nIGxvbmcpYml0KTsKLQkJ
CWVyciA9IFBUUl9FUlIobV90bXApOwotCQkJLyogU2V0IHRoZSBtZnQgcmVjb3JkIGl0c2VsZiBu
b3QgaW4gdXNlLiAqLwotCQkJbS0+ZmxhZ3MgJj0gY3B1X3RvX2xlMTYoCi0JCQkJCX5sZTE2X3Rv
X2NwdShNRlRfUkVDT1JEX0lOX1VTRSkpOwotCQkJZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7Ci0J
CQkvKiBNYWtlIHN1cmUgdGhlIG1mdCByZWNvcmQgaXMgd3JpdHRlbiBvdXQgdG8gZGlzay4gKi8K
LQkJCW1hcmtfbnRmc19yZWNvcmRfZGlydHkocGFnZSwgb2ZzKTsKLQkJCXVubG9ja19wYWdlKHBh
Z2UpOwotCQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCQkJZ290byB1bmRvX21mdGJtcF9hbGxv
YzsKLQkJfQotCQlCVUdfT04obSAhPSBtX3RtcCk7Ci0JCS8qCi0JCSAqIE1ha2Ugc3VyZSB0aGUg
YWxsb2NhdGVkIG1mdCByZWNvcmQgaXMgd3JpdHRlbiBvdXQgdG8gZGlzay4KLQkJICogTm8gbmVl
ZCB0byBzZXQgdGhlIGlub2RlIGRpcnR5IGJlY2F1c2UgdGhlIGNhbGxlciBpcyBnb2luZwotCQkg
KiB0byBkbyB0aGF0IGFueXdheSBhZnRlciBmaW5pc2hpbmcgd2l0aCB0aGUgbmV3IGV4dGVudCBt
ZnQKLQkJICogcmVjb3JkIChlLmcuIGF0IGEgbWluaW11bSBhIG5ldyBhdHRyaWJ1dGUgd2lsbCBi
ZSBhZGRlZCB0bwotCQkgKiB0aGUgbWZ0IHJlY29yZC4KLQkJICovCi0JCW1hcmtfbnRmc19yZWNv
cmRfZGlydHkocGFnZSwgb2ZzKTsKLQkJdW5sb2NrX3BhZ2UocGFnZSk7Ci0JCS8qCi0JCSAqIE5l
ZWQgdG8gdW5tYXAgdGhlIHBhZ2Ugc2luY2UgbWFwX2V4dGVudF9tZnRfcmVjb3JkKCkgbWFwcGVk
Ci0JCSAqIGl0IGFzIHdlbGwgc28gd2UgaGF2ZSBpdCBtYXBwZWQgdHdpY2UgYXQgdGhlIG1vbWVu
dC4KLQkJICovCi0JCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsKLQl9IGVsc2UgewotCQkvKgotCQkg
KiBBbGxvY2F0ZSBhIG5ldyBWRlMgaW5vZGUgYW5kIHNldCBpdCB1cC4gIE5PVEU6IEB2aS0+aV9u
bGluawotCQkgKiBpcyBzZXQgdG8gMSBidXQgdGhlIG1mdCByZWNvcmQtPmxpbmtfY291bnQgaXMg
MC4gIFRoZSBjYWxsZXIKLQkJICogbmVlZHMgdG8gYmVhciB0aGlzIGluIG1pbmQuCi0JCSAqLwot
CQl2aSA9IG5ld19pbm9kZSh2b2wtPnNiKTsKLQkJaWYgKHVubGlrZWx5KCF2aSkpIHsKLQkJCWVy
ciA9IC1FTk9NRU07Ci0JCQkvKiBTZXQgdGhlIG1mdCByZWNvcmQgaXRzZWxmIG5vdCBpbiB1c2Uu
ICovCi0JCQltLT5mbGFncyAmPSBjcHVfdG9fbGUxNigKLQkJCQkJfmxlMTZfdG9fY3B1KE1GVF9S
RUNPUkRfSU5fVVNFKSk7Ci0JCQlmbHVzaF9kY2FjaGVfcGFnZShwYWdlKTsKLQkJCS8qIE1ha2Ug
c3VyZSB0aGUgbWZ0IHJlY29yZCBpcyB3cml0dGVuIG91dCB0byBkaXNrLiAqLwotCQkJbWFya19u
dGZzX3JlY29yZF9kaXJ0eShwYWdlLCBvZnMpOwotCQkJdW5sb2NrX3BhZ2UocGFnZSk7Ci0JCQlu
dGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JCQlnb3RvIHVuZG9fbWZ0Ym1wX2FsbG9jOwotCQl9Ci0J
CXZpLT5pX2lubyA9IGJpdDsKLQotCQkvKiBUaGUgb3duZXIgYW5kIGdyb3VwIGNvbWUgZnJvbSB0
aGUgbnRmcyB2b2x1bWUuICovCi0JCXZpLT5pX3VpZCA9IHZvbC0+dWlkOwotCQl2aS0+aV9naWQg
PSB2b2wtPmdpZDsKLQotCQkvKiBJbml0aWFsaXplIHRoZSBudGZzIHNwZWNpZmljIHBhcnQgb2Yg
QHZpLiAqLwotCQludGZzX2luaXRfYmlnX2lub2RlKHZpKTsKLQkJbmkgPSBOVEZTX0kodmkpOwot
CQkvKgotCQkgKiBTZXQgdGhlIGFwcHJvcHJpYXRlIG1vZGUsIGF0dHJpYnV0ZSB0eXBlLCBhbmQg
bmFtZS4gIEZvcgotCQkgKiBkaXJlY3RvcmllcywgYWxzbyBzZXR1cCB0aGUgaW5kZXggdmFsdWVz
IHRvIHRoZSBkZWZhdWx0cy4KLQkJICovCi0JCWlmIChTX0lTRElSKG1vZGUpKSB7Ci0JCQl2aS0+
aV9tb2RlID0gU19JRkRJUiB8IFNfSVJXWFVHTzsKLQkJCXZpLT5pX21vZGUgJj0gfnZvbC0+ZG1h
c2s7Ci0KLQkJCU5Jbm9TZXRNc3RQcm90ZWN0ZWQobmkpOwotCQkJbmktPnR5cGUgPSBBVF9JTkRF
WF9BTExPQ0FUSU9OOwotCQkJbmktPm5hbWUgPSBJMzA7Ci0JCQluaS0+bmFtZV9sZW4gPSA0Owot
Ci0JCQluaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSA9IDQwOTY7Ci0JCQluaS0+aXR5cGUuaW5k
ZXguYmxvY2tfc2l6ZV9iaXRzID0gbnRmc19mZnMoNDA5NikgLSAxOwotCQkJbmktPml0eXBlLmlu
ZGV4LmNvbGxhdGlvbl9ydWxlID0gQ09MTEFUSU9OX0ZJTEVfTkFNRTsKLQkJCWlmICh2b2wtPmNs
dXN0ZXJfc2l6ZSA8PSBuaS0+aXR5cGUuaW5kZXguYmxvY2tfc2l6ZSkgewotCQkJCW5pLT5pdHlw
ZS5pbmRleC52Y25fc2l6ZSA9IHZvbC0+Y2x1c3Rlcl9zaXplOwotCQkJCW5pLT5pdHlwZS5pbmRl
eC52Y25fc2l6ZV9iaXRzID0KLQkJCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHM7Ci0JCQl9IGVs
c2UgewotCQkJCW5pLT5pdHlwZS5pbmRleC52Y25fc2l6ZSA9IHZvbC0+c2VjdG9yX3NpemU7Ci0J
CQkJbmktPml0eXBlLmluZGV4LnZjbl9zaXplX2JpdHMgPQotCQkJCQkJdm9sLT5zZWN0b3Jfc2l6
ZV9iaXRzOwotCQkJfQotCQl9IGVsc2UgewotCQkJdmktPmlfbW9kZSA9IFNfSUZSRUcgfCBTX0lS
V1hVR087Ci0JCQl2aS0+aV9tb2RlICY9IH52b2wtPmZtYXNrOwotCi0JCQluaS0+dHlwZSA9IEFU
X0RBVEE7Ci0JCQluaS0+bmFtZSA9IE5VTEw7Ci0JCQluaS0+bmFtZV9sZW4gPSAwOwotCQl9Ci0J
CWlmIChJU19SRE9OTFkodmkpKQotCQkJdmktPmlfbW9kZSAmPSB+U19JV1VHTzsKLQotCQkvKiBT
ZXQgdGhlIGlub2RlIHRpbWVzIHRvIHRoZSBjdXJyZW50IHRpbWUuICovCi0JCXNpbXBsZV9pbm9k
ZV9pbml0X3RzKHZpKTsKLQkJLyoKLQkJICogU2V0IHRoZSBmaWxlIHNpemUgdG8gMCwgdGhlIG50
ZnMgaW5vZGUgc2l6ZXMgYXJlIHNldCB0byAwIGJ5Ci0JCSAqIHRoZSBjYWxsIHRvIG50ZnNfaW5p
dF9iaWdfaW5vZGUoKSBiZWxvdy4KLQkJICovCi0JCXZpLT5pX3NpemUgPSAwOwotCQl2aS0+aV9i
bG9ja3MgPSAwOwotCi0JCS8qIFNldCB0aGUgc2VxdWVuY2UgbnVtYmVyLiAqLwotCQl2aS0+aV9n
ZW5lcmF0aW9uID0gbmktPnNlcV9ubyA9IGxlMTZfdG9fY3B1KG0tPnNlcXVlbmNlX251bWJlcik7
Ci0JCS8qCi0JCSAqIE1hbnVhbGx5IG1hcCwgcGluLCBhbmQgbG9jayB0aGUgbWZ0IHJlY29yZCBh
cyB3ZSBhbHJlYWR5Ci0JCSAqIGhhdmUgaXRzIHBhZ2UgbWFwcGVkIGFuZCBpdCBpcyB2ZXJ5IGVh
c3kgdG8gZG8uCi0JCSAqLwotCQlhdG9taWNfaW5jKCZuaS0+Y291bnQpOwotCQltdXRleF9sb2Nr
KCZuaS0+bXJlY19sb2NrKTsKLQkJbmktPnBhZ2UgPSBwYWdlOwotCQluaS0+cGFnZV9vZnMgPSBv
ZnM7Ci0JCS8qCi0JCSAqIE1ha2Ugc3VyZSB0aGUgYWxsb2NhdGVkIG1mdCByZWNvcmQgaXMgd3Jp
dHRlbiBvdXQgdG8gZGlzay4KLQkJICogTk9URTogV2UgZG8gbm90IHNldCB0aGUgbnRmcyBpbm9k
ZSBkaXJ0eSBiZWNhdXNlIHRoaXMgd291bGQKLQkJICogZmFpbCBpbiBudGZzX3dyaXRlX2lub2Rl
KCkgYmVjYXVzZSB0aGUgaW5vZGUgZG9lcyBub3QgaGF2ZSBhCi0JCSAqIHN0YW5kYXJkIGluZm9y
bWF0aW9uIGF0dHJpYnV0ZSB5ZXQuICBBbHNvLCB0aGVyZSBpcyBubyBuZWVkCi0JCSAqIHRvIHNl
dCB0aGUgaW5vZGUgZGlydHkgYmVjYXVzZSB0aGUgY2FsbGVyIGlzIGdvaW5nIHRvIGRvCi0JCSAq
IHRoYXQgYW55d2F5IGFmdGVyIGZpbmlzaGluZyB3aXRoIHRoZSBuZXcgbWZ0IHJlY29yZCAoZS5n
LiBhdAotCQkgKiBhIG1pbmltdW0gc29tZSBuZXcgYXR0cmlidXRlcyB3aWxsIGJlIGFkZGVkIHRv
IHRoZSBtZnQKLQkJICogcmVjb3JkLgotCQkgKi8KLQkJbWFya19udGZzX3JlY29yZF9kaXJ0eShw
YWdlLCBvZnMpOwotCQl1bmxvY2tfcGFnZShwYWdlKTsKLQotCQkvKiBBZGQgdGhlIGlub2RlIHRv
IHRoZSBpbm9kZSBoYXNoIGZvciB0aGUgc3VwZXJibG9jay4gKi8KLQkJaW5zZXJ0X2lub2RlX2hh
c2godmkpOwotCi0JCS8qIFVwZGF0ZSB0aGUgZGVmYXVsdCBtZnQgYWxsb2NhdGlvbiBwb3NpdGlv
bi4gKi8KLQkJdm9sLT5tZnRfZGF0YV9wb3MgPSBiaXQgKyAxOwotCX0KLQkvKgotCSAqIFJldHVy
biB0aGUgb3BlbmVkLCBhbGxvY2F0ZWQgaW5vZGUgb2YgdGhlIGFsbG9jYXRlZCBtZnQgcmVjb3Jk
IGFzCi0JICogd2VsbCBhcyB0aGUgbWFwcGVkLCBwaW5uZWQsIGFuZCBsb2NrZWQgbWZ0IHJlY29y
ZC4KLQkgKi8KLQludGZzX2RlYnVnKCJSZXR1cm5pbmcgb3BlbmVkLCBhbGxvY2F0ZWQgJXNpbm9k
ZSAweCVsbHguIiwKLQkJCWJhc2VfbmkgPyAiZXh0ZW50ICIgOiAiIiwgKGxvbmcgbG9uZyliaXQp
OwotCSptcmVjID0gbTsKLQlyZXR1cm4gbmk7Ci11bmRvX2RhdGFfaW5pdDoKLQl3cml0ZV9sb2Nr
X2lycXNhdmUoJm1mdF9uaS0+c2l6ZV9sb2NrLCBmbGFncyk7Ci0JbWZ0X25pLT5pbml0aWFsaXpl
ZF9zaXplID0gb2xkX2RhdGFfaW5pdGlhbGl6ZWQ7Ci0JaV9zaXplX3dyaXRlKHZvbC0+bWZ0X2lu
bywgb2xkX2RhdGFfc2l6ZSk7Ci0Jd3JpdGVfdW5sb2NrX2lycXJlc3RvcmUoJm1mdF9uaS0+c2l6
ZV9sb2NrLCBmbGFncyk7Ci0JZ290byB1bmRvX21mdGJtcF9hbGxvY19ub2xvY2s7Ci11bmRvX21m
dGJtcF9hbGxvYzoKLQlkb3duX3dyaXRlKCZ2b2wtPm1mdGJtcF9sb2NrKTsKLXVuZG9fbWZ0Ym1w
X2FsbG9jX25vbG9jazoKLQlpZiAobnRmc19iaXRtYXBfY2xlYXJfYml0KHZvbC0+bWZ0Ym1wX2lu
bywgYml0KSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gY2xlYXIgYml0IGlu
IG1mdCBiaXRtYXAuJXMiLCBlcyk7Ci0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLQl9Ci0JdXBfd3Jp
dGUoJnZvbC0+bWZ0Ym1wX2xvY2spOwotZXJyX291dDoKLQlyZXR1cm4gRVJSX1BUUihlcnIpOwot
bWF4X2Vycl9vdXQ6Ci0JbnRmc193YXJuaW5nKHZvbC0+c2IsICJDYW5ub3QgYWxsb2NhdGUgbWZ0
IHJlY29yZCBiZWNhdXNlIHRoZSBtYXhpbXVtICIKLQkJCSJudW1iZXIgb2YgaW5vZGVzICgyXjMy
KSBoYXMgYWxyZWFkeSBiZWVuIHJlYWNoZWQuIik7Ci0JdXBfd3JpdGUoJnZvbC0+bWZ0Ym1wX2xv
Y2spOwotCXJldHVybiBFUlJfUFRSKC1FTk9TUEMpOwotfQotCi0vKioKLSAqIG50ZnNfZXh0ZW50
X21mdF9yZWNvcmRfZnJlZSAtIGZyZWUgYW4gZXh0ZW50IG1mdCByZWNvcmQgb24gYW4gbnRmcyB2
b2x1bWUKLSAqIEBuaToJCW50ZnMgaW5vZGUgb2YgdGhlIG1hcHBlZCBleHRlbnQgbWZ0IHJlY29y
ZCB0byBmcmVlCi0gKiBAbToJCW1hcHBlZCBleHRlbnQgbWZ0IHJlY29yZCBvZiB0aGUgbnRmcyBp
bm9kZSBAbmkKLSAqCi0gKiBGcmVlIHRoZSBtYXBwZWQgZXh0ZW50IG1mdCByZWNvcmQgQG0gb2Yg
dGhlIGV4dGVudCBudGZzIGlub2RlIEBuaS4KLSAqCi0gKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlv
biB1bm1hcHMgdGhlIG1mdCByZWNvcmQgYW5kIGNsb3NlcyBhbmQgZGVzdHJveXMgQG5pCi0gKiBp
bnRlcm5hbGx5IGFuZCBoZW5jZSB5b3UgY2Fubm90IHVzZSBlaXRoZXIgQG5pIG5vciBAbSBhbnkg
bW9yZSBhZnRlciB0aGlzCi0gKiBmdW5jdGlvbiByZXR1cm5zIHN1Y2Nlc3MuCi0gKgotICogT24g
c3VjY2VzcyByZXR1cm4gMCBhbmQgb24gZXJyb3IgcmV0dXJuIC1lcnJuby4gIEBuaSBhbmQgQG0g
YXJlIHN0aWxsIHZhbGlkCi0gKiBpbiB0aGlzIGNhc2UgYW5kIGhhdmUgbm90IGJlZW4gZnJlZWQu
Ci0gKgotICogRm9yIHNvbWUgZXJyb3JzIGFuIGVycm9yIG1lc3NhZ2UgaXMgZGlzcGxheWVkIGFu
ZCB0aGUgc3VjY2VzcyBjb2RlIDAgaXMKLSAqIHJldHVybmVkIGFuZCB0aGUgdm9sdW1lIGlzIHRo
ZW4gbGVmdCBkaXJ0eSBvbiB1bW91bnQuICBUaGlzIG1ha2VzIHNlbnNlIGluCi0gKiBjYXNlIHdl
IGNvdWxkIG5vdCByb2xsYmFjayB0aGUgY2hhbmdlcyB0aGF0IHdlcmUgYWxyZWFkeSBkb25lIHNp
bmNlIHRoZQotICogY2FsbGVyIG5vIGxvbmdlciB3YW50cyB0byByZWZlcmVuY2UgdGhpcyBtZnQg
cmVjb3JkIHNvIGl0IGRvZXMgbm90IG1hdHRlciB0bwotICogdGhlIGNhbGxlciBpZiBzb21ldGhp
bmcgaXMgd3Jvbmcgd2l0aCBpdCBhcyBsb25nIGFzIGl0IGlzIHByb3Blcmx5IGRldGFjaGVkCi0g
KiBmcm9tIHRoZSBiYXNlIGlub2RlLgotICovCi1pbnQgbnRmc19leHRlbnRfbWZ0X3JlY29yZF9m
cmVlKG50ZnNfaW5vZGUgKm5pLCBNRlRfUkVDT1JEICptKQotewotCXVuc2lnbmVkIGxvbmcgbWZ0
X25vID0gbmktPm1mdF9ubzsKLQludGZzX3ZvbHVtZSAqdm9sID0gbmktPnZvbDsKLQludGZzX2lu
b2RlICpiYXNlX25pOwotCW50ZnNfaW5vZGUgKipleHRlbnRfbmlzOwotCWludCBpLCBlcnI7Ci0J
bGUxNiBvbGRfc2VxX25vOwotCXUxNiBzZXFfbm87Ci0JCi0JQlVHX09OKE5Jbm9BdHRyKG5pKSk7
Ci0JQlVHX09OKG5pLT5ucl9leHRlbnRzICE9IC0xKTsKLQotCW11dGV4X2xvY2soJm5pLT5leHRl
bnRfbG9jayk7Ci0JYmFzZV9uaSA9IG5pLT5leHQuYmFzZV9udGZzX2lubzsKLQltdXRleF91bmxv
Y2soJm5pLT5leHRlbnRfbG9jayk7Ci0KLQlCVUdfT04oYmFzZV9uaS0+bnJfZXh0ZW50cyA8PSAw
KTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBleHRlbnQgaW5vZGUgMHglbHgsIGJhc2Ug
aW5vZGUgMHglbHguXG4iLAotCQkJbWZ0X25vLCBiYXNlX25pLT5tZnRfbm8pOwotCi0JbXV0ZXhf
bG9jaygmYmFzZV9uaS0+ZXh0ZW50X2xvY2spOwotCi0JLyogTWFrZSBzdXJlIHdlIGFyZSBob2xk
aW5nIHRoZSBvbmx5IHJlZmVyZW5jZSB0byB0aGUgZXh0ZW50IGlub2RlLiAqLwotCWlmIChhdG9t
aWNfcmVhZCgmbmktPmNvdW50KSA+IDIpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiVHJpZWQg
dG8gZnJlZSBidXN5IGV4dGVudCBpbm9kZSAweCVseCwgIgotCQkJCSJub3QgZnJlZWluZy4iLCBi
YXNlX25pLT5tZnRfbm8pOwotCQltdXRleF91bmxvY2soJmJhc2VfbmktPmV4dGVudF9sb2NrKTsK
LQkJcmV0dXJuIC1FQlVTWTsKLQl9Ci0KLQkvKiBEaXNzb2NpYXRlIHRoZSBudGZzIGlub2RlIGZy
b20gdGhlIGJhc2UgaW5vZGUuICovCi0JZXh0ZW50X25pcyA9IGJhc2VfbmktPmV4dC5leHRlbnRf
bnRmc19pbm9zOwotCWVyciA9IC1FTk9FTlQ7Ci0JZm9yIChpID0gMDsgaSA8IGJhc2VfbmktPm5y
X2V4dGVudHM7IGkrKykgewotCQlpZiAobmkgIT0gZXh0ZW50X25pc1tpXSkKLQkJCWNvbnRpbnVl
OwotCQlleHRlbnRfbmlzICs9IGk7Ci0JCWJhc2VfbmktPm5yX2V4dGVudHMtLTsKLQkJbWVtbW92
ZShleHRlbnRfbmlzLCBleHRlbnRfbmlzICsgMSwgKGJhc2VfbmktPm5yX2V4dGVudHMgLSBpKSAq
Ci0JCQkJc2l6ZW9mKG50ZnNfaW5vZGUqKSk7Ci0JCWVyciA9IDA7Ci0JCWJyZWFrOwotCX0KLQot
CW11dGV4X3VubG9jaygmYmFzZV9uaS0+ZXh0ZW50X2xvY2spOwotCi0JaWYgKHVubGlrZWx5KGVy
cikpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRXh0ZW50IGlub2RlIDB4JWx4IGlzIG5vdCBh
dHRhY2hlZCB0byAiCi0JCQkJIml0cyBiYXNlIGlub2RlIDB4JWx4LiIsIG1mdF9ubywKLQkJCQli
YXNlX25pLT5tZnRfbm8pOwotCQlCVUcoKTsKLQl9Ci0KLQkvKgotCSAqIFRoZSBleHRlbnQgaW5v
ZGUgaXMgbm8gbG9uZ2VyIGF0dGFjaGVkIHRvIHRoZSBiYXNlIGlub2RlIHNvIG5vIG9uZQotCSAq
IGNhbiBnZXQgYSByZWZlcmVuY2UgdG8gaXQgYW55IG1vcmUuCi0JICovCi0KLQkvKiBNYXJrIHRo
ZSBtZnQgcmVjb3JkIGFzIG5vdCBpbiB1c2UuICovCi0JbS0+ZmxhZ3MgJj0gfk1GVF9SRUNPUkRf
SU5fVVNFOwotCi0JLyogSW5jcmVtZW50IHRoZSBzZXF1ZW5jZSBudW1iZXIsIHNraXBwaW5nIHpl
cm8sIGlmIGl0IGlzIG5vdCB6ZXJvLiAqLwotCW9sZF9zZXFfbm8gPSBtLT5zZXF1ZW5jZV9udW1i
ZXI7Ci0Jc2VxX25vID0gbGUxNl90b19jcHUob2xkX3NlcV9ubyk7Ci0JaWYgKHNlcV9ubyA9PSAw
eGZmZmYpCi0JCXNlcV9ubyA9IDE7Ci0JZWxzZSBpZiAoc2VxX25vKQotCQlzZXFfbm8rKzsKLQlt
LT5zZXF1ZW5jZV9udW1iZXIgPSBjcHVfdG9fbGUxNihzZXFfbm8pOwotCi0JLyoKLQkgKiBTZXQg
dGhlIG50ZnMgaW5vZGUgZGlydHkgYW5kIHdyaXRlIGl0IG91dC4gIFdlIGRvIG5vdCBuZWVkIHRv
IHdvcnJ5Ci0JICogYWJvdXQgdGhlIGJhc2UgaW5vZGUgaGVyZSBzaW5jZSB3aGF0ZXZlciBjYXVz
ZWQgdGhlIGV4dGVudCBtZnQKLQkgKiByZWNvcmQgdG8gYmUgZnJlZWQgaXMgZ3VhcmFudGVlZCB0
byBkbyBpdCBhbHJlYWR5LgotCSAqLwotCU5Jbm9TZXREaXJ0eShuaSk7Ci0JZXJyID0gd3JpdGVf
bWZ0X3JlY29yZChuaSwgbSwgMCk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJbnRmc19lcnJv
cih2b2wtPnNiLCAiRmFpbGVkIHRvIHdyaXRlIG1mdCByZWNvcmQgMHglbHgsIG5vdCAiCi0JCQkJ
ImZyZWVpbmcuIiwgbWZ0X25vKTsKLQkJZ290byByb2xsYmFjazsKLQl9Ci1yb2xsYmFja19lcnJv
cjoKLQkvKiBVbm1hcCBhbmQgdGhyb3cgYXdheSB0aGUgbm93IGZyZWVkIGV4dGVudCBpbm9kZS4g
Ki8KLQl1bm1hcF9leHRlbnRfbWZ0X3JlY29yZChuaSk7Ci0JbnRmc19jbGVhcl9leHRlbnRfaW5v
ZGUobmkpOwotCi0JLyogQ2xlYXIgdGhlIGJpdCBpbiB0aGUgJE1GVC8kQklUTUFQIGNvcnJlc3Bv
bmRpbmcgdG8gdGhpcyByZWNvcmQuICovCi0JZG93bl93cml0ZSgmdm9sLT5tZnRibXBfbG9jayk7
Ci0JZXJyID0gbnRmc19iaXRtYXBfY2xlYXJfYml0KHZvbC0+bWZ0Ym1wX2lubywgbWZ0X25vKTsK
LQl1cF93cml0ZSgmdm9sLT5tZnRibXBfbG9jayk7Ci0JaWYgKHVubGlrZWx5KGVycikpIHsKLQkJ
LyoKLQkJICogVGhlIGV4dGVudCBpbm9kZSBpcyBnb25lIGJ1dCB3ZSBmYWlsZWQgdG8gZGVhbGxv
Y2F0ZSBpdCBpbgotCQkgKiB0aGUgbWZ0IGJpdG1hcC4gIEp1c3QgZW1pdCBhIHdhcm5pbmcgYW5k
IGxlYXZlIHRoZSB2b2x1bWUKLQkJICogZGlydHkgb24gdW1vdW50LgotCQkgKi8KLQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGNsZWFyIGJpdCBpbiBtZnQgYml0bWFwLiVzIiwgZXMp
OwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JfQotCXJldHVybiAwOwotcm9sbGJhY2s6Ci0JLyog
Um9sbGJhY2sgd2hhdCB3ZSBkaWQuLi4gKi8KLQltdXRleF9sb2NrKCZiYXNlX25pLT5leHRlbnRf
bG9jayk7Ci0JZXh0ZW50X25pcyA9IGJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9zOwotCWlm
ICghKGJhc2VfbmktPm5yX2V4dGVudHMgJiAzKSkgewotCQlpbnQgbmV3X3NpemUgPSAoYmFzZV9u
aS0+bnJfZXh0ZW50cyArIDQpICogc2l6ZW9mKG50ZnNfaW5vZGUqKTsKLQotCQlleHRlbnRfbmlz
ID0ga21hbGxvYyhuZXdfc2l6ZSwgR0ZQX05PRlMpOwotCQlpZiAodW5saWtlbHkoIWV4dGVudF9u
aXMpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYWxsb2NhdGUgaW50ZXJu
YWwgIgotCQkJCQkiYnVmZmVyIGR1cmluZyByb2xsYmFjay4lcyIsIGVzKTsKLQkJCW11dGV4X3Vu
bG9jaygmYmFzZV9uaS0+ZXh0ZW50X2xvY2spOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQkJ
Z290byByb2xsYmFja19lcnJvcjsKLQkJfQotCQlpZiAoYmFzZV9uaS0+bnJfZXh0ZW50cykgewot
CQkJQlVHX09OKCFiYXNlX25pLT5leHQuZXh0ZW50X250ZnNfaW5vcyk7Ci0JCQltZW1jcHkoZXh0
ZW50X25pcywgYmFzZV9uaS0+ZXh0LmV4dGVudF9udGZzX2lub3MsCi0JCQkJCW5ld19zaXplIC0g
NCAqIHNpemVvZihudGZzX2lub2RlKikpOwotCQkJa2ZyZWUoYmFzZV9uaS0+ZXh0LmV4dGVudF9u
dGZzX2lub3MpOwotCQl9Ci0JCWJhc2VfbmktPmV4dC5leHRlbnRfbnRmc19pbm9zID0gZXh0ZW50
X25pczsKLQl9Ci0JbS0+ZmxhZ3MgfD0gTUZUX1JFQ09SRF9JTl9VU0U7Ci0JbS0+c2VxdWVuY2Vf
bnVtYmVyID0gb2xkX3NlcV9ubzsKLQlleHRlbnRfbmlzW2Jhc2VfbmktPm5yX2V4dGVudHMrK10g
PSBuaTsKLQltdXRleF91bmxvY2soJmJhc2VfbmktPmV4dGVudF9sb2NrKTsKLQltYXJrX21mdF9y
ZWNvcmRfZGlydHkobmkpOwotCXJldHVybiBlcnI7Ci19Ci0jZW5kaWYgLyogTlRGU19SVyAqLwpk
aWZmIC0tZ2l0IGEvZnMvbnRmcy9tZnQuaCBiL2ZzL250ZnMvbWZ0LmgKZGVsZXRlZCBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDQ5YzAwMWFmMTZlZC4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMv
bWZ0LmgKKysrIC9kZXYvbnVsbApAQCAtMSwxMTAgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlk
ZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBtZnQuaCAtIERlZmluZXMgZm9y
IG1mdCByZWNvcmQgaGFuZGxpbmcgaW4gTlRGUyBMaW51eCBrZXJuZWwgZHJpdmVyLgotICoJICAg
UGFydCBvZiB0aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAw
MS0yMDA0IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfTUZU
X0gKLSNkZWZpbmUgX0xJTlVYX05URlNfTUZUX0gKLQotI2luY2x1ZGUgPGxpbnV4L2ZzLmg+Ci0j
aW5jbHVkZSA8bGludXgvaGlnaG1lbS5oPgotI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KLQot
I2luY2x1ZGUgImlub2RlLmgiCi0KLWV4dGVybiBNRlRfUkVDT1JEICptYXBfbWZ0X3JlY29yZChu
dGZzX2lub2RlICpuaSk7Ci1leHRlcm4gdm9pZCB1bm1hcF9tZnRfcmVjb3JkKG50ZnNfaW5vZGUg
Km5pKTsKLQotZXh0ZXJuIE1GVF9SRUNPUkQgKm1hcF9leHRlbnRfbWZ0X3JlY29yZChudGZzX2lu
b2RlICpiYXNlX25pLCBNRlRfUkVGIG1yZWYsCi0JCW50ZnNfaW5vZGUgKipudGZzX2lubyk7Ci0K
LXN0YXRpYyBpbmxpbmUgdm9pZCB1bm1hcF9leHRlbnRfbWZ0X3JlY29yZChudGZzX2lub2RlICpu
aSkKLXsKLQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLQlyZXR1cm47Ci19Ci0KLSNpZmRlZiBOVEZT
X1JXCi0KLS8qKgotICogZmx1c2hfZGNhY2hlX21mdF9yZWNvcmRfcGFnZSAtIGZsdXNoX2RjYWNo
ZV9wYWdlKCkgZm9yIG1mdCByZWNvcmRzCi0gKiBAbmk6CQludGZzIGlub2RlIHN0cnVjdHVyZSBv
ZiBtZnQgcmVjb3JkCi0gKgotICogQ2FsbCBmbHVzaF9kY2FjaGVfcGFnZSgpIGZvciB0aGUgcGFn
ZSBpbiB3aGljaCBhbiBtZnQgcmVjb3JkIHJlc2lkZXMuCi0gKgotICogVGhpcyBtdXN0IGJlIGNh
bGxlZCBldmVyeSB0aW1lIGFuIG1mdCByZWNvcmQgaXMgbW9kaWZpZWQsIGp1c3QgYWZ0ZXIgdGhl
Ci0gKiBtb2RpZmljYXRpb24uCi0gKi8KLXN0YXRpYyBpbmxpbmUgdm9pZCBmbHVzaF9kY2FjaGVf
bWZ0X3JlY29yZF9wYWdlKG50ZnNfaW5vZGUgKm5pKQotewotCWZsdXNoX2RjYWNoZV9wYWdlKG5p
LT5wYWdlKTsKLX0KLQotZXh0ZXJuIHZvaWQgX19tYXJrX21mdF9yZWNvcmRfZGlydHkobnRmc19p
bm9kZSAqbmkpOwotCi0vKioKLSAqIG1hcmtfbWZ0X3JlY29yZF9kaXJ0eSAtIHNldCB0aGUgbWZ0
IHJlY29yZCBhbmQgdGhlIHBhZ2UgY29udGFpbmluZyBpdCBkaXJ0eQotICogQG5pOgkJbnRmcyBp
bm9kZSBkZXNjcmliaW5nIHRoZSBtYXBwZWQgbWZ0IHJlY29yZAotICoKLSAqIFNldCB0aGUgbWFw
cGVkIChleHRlbnQpIG1mdCByZWNvcmQgb2YgdGhlIChiYXNlIG9yIGV4dGVudCkgbnRmcyBpbm9k
ZSBAbmksCi0gKiBhcyB3ZWxsIGFzIHRoZSBwYWdlIGNvbnRhaW5pbmcgdGhlIG1mdCByZWNvcmQs
IGRpcnR5LiAgQWxzbywgbWFyayB0aGUgYmFzZQotICogdmZzIGlub2RlIGRpcnR5LiAgVGhpcyBl
bnN1cmVzIHRoYXQgYW55IGNoYW5nZXMgdG8gdGhlIG1mdCByZWNvcmQgYXJlCi0gKiB3cml0dGVu
IG91dCB0byBkaXNrLgotICoKLSAqIE5PVEU6ICBEbyBub3QgZG8gYW55dGhpbmcgaWYgdGhlIG1m
dCByZWNvcmQgaXMgYWxyZWFkeSBtYXJrZWQgZGlydHkuCi0gKi8KLXN0YXRpYyBpbmxpbmUgdm9p
ZCBtYXJrX21mdF9yZWNvcmRfZGlydHkobnRmc19pbm9kZSAqbmkpCi17Ci0JaWYgKCFOSW5vVGVz
dFNldERpcnR5KG5pKSkKLQkJX19tYXJrX21mdF9yZWNvcmRfZGlydHkobmkpOwotfQotCi1leHRl
cm4gaW50IG50ZnNfc3luY19tZnRfbWlycm9yKG50ZnNfdm9sdW1lICp2b2wsIGNvbnN0IHVuc2ln
bmVkIGxvbmcgbWZ0X25vLAotCQlNRlRfUkVDT1JEICptLCBpbnQgc3luYyk7Ci0KLWV4dGVybiBp
bnQgd3JpdGVfbWZ0X3JlY29yZF9ub2xvY2sobnRmc19pbm9kZSAqbmksIE1GVF9SRUNPUkQgKm0s
IGludCBzeW5jKTsKLQotLyoqCi0gKiB3cml0ZV9tZnRfcmVjb3JkIC0gd3JpdGUgb3V0IGEgbWFw
cGVkIChleHRlbnQpIG1mdCByZWNvcmQKLSAqIEBuaToJCW50ZnMgaW5vZGUgZGVzY3JpYmluZyB0
aGUgbWFwcGVkIChleHRlbnQpIG1mdCByZWNvcmQKLSAqIEBtOgkJbWFwcGVkIChleHRlbnQpIG1m
dCByZWNvcmQgdG8gd3JpdGUKLSAqIEBzeW5jOglpZiB0cnVlLCB3YWl0IGZvciBpL28gY29tcGxl
dGlvbgotICoKLSAqIFRoaXMgaXMganVzdCBhIHdyYXBwZXIgZm9yIHdyaXRlX21mdF9yZWNvcmRf
bm9sb2NrKCkgKHNlZSBtZnQuYyksIHdoaWNoCi0gKiBsb2NrcyB0aGUgcGFnZSBmb3IgdGhlIGR1
cmF0aW9uIG9mIHRoZSB3cml0ZS4gIFRoaXMgZW5zdXJlcyB0aGF0IHRoZXJlIGFyZQotICogbm8g
cmFjZSBjb25kaXRpb25zIGJldHdlZW4gd3JpdGluZyB0aGUgbWZ0IHJlY29yZCB2aWEgdGhlIGRp
cnR5IGlub2RlIGNvZGUKLSAqIHBhdGhzIGFuZCB2aWEgdGhlIHBhZ2UgY2FjaGUgd3JpdGUgYmFj
ayBjb2RlIHBhdGhzIG9yIGJldHdlZW4gd3JpdGluZwotICogbmVpZ2hib3VyaW5nIG1mdCByZWNv
cmRzIHJlc2lkaW5nIGluIHRoZSBzYW1lIHBhZ2UuCi0gKgotICogTG9ja2luZyB0aGUgcGFnZSBh
bHNvIHNlcmlhbGl6ZXMgdXMgYWdhaW5zdCAtPnJlYWRfZm9saW8oKSBpZiB0aGUgcGFnZSBpcyBu
b3QKLSAqIHVwdG9kYXRlLgotICoKLSAqIE9uIHN1Y2Nlc3MsIGNsZWFuIHRoZSBtZnQgcmVjb3Jk
IGFuZCByZXR1cm4gMC4gIE9uIGVycm9yLCBsZWF2ZSB0aGUgbWZ0Ci0gKiByZWNvcmQgZGlydHkg
YW5kIHJldHVybiAtZXJybm8uCi0gKi8KLXN0YXRpYyBpbmxpbmUgaW50IHdyaXRlX21mdF9yZWNv
cmQobnRmc19pbm9kZSAqbmksIE1GVF9SRUNPUkQgKm0sIGludCBzeW5jKQotewotCXN0cnVjdCBw
YWdlICpwYWdlID0gbmktPnBhZ2U7Ci0JaW50IGVycjsKLQotCUJVR19PTighcGFnZSk7Ci0JbG9j
a19wYWdlKHBhZ2UpOwotCWVyciA9IHdyaXRlX21mdF9yZWNvcmRfbm9sb2NrKG5pLCBtLCBzeW5j
KTsKLQl1bmxvY2tfcGFnZShwYWdlKTsKLQlyZXR1cm4gZXJyOwotfQotCi1leHRlcm4gYm9vbCBu
dGZzX21heV93cml0ZV9tZnRfcmVjb3JkKG50ZnNfdm9sdW1lICp2b2wsCi0JCWNvbnN0IHVuc2ln
bmVkIGxvbmcgbWZ0X25vLCBjb25zdCBNRlRfUkVDT1JEICptLAotCQludGZzX2lub2RlICoqbG9j
a2VkX25pKTsKLQotZXh0ZXJuIG50ZnNfaW5vZGUgKm50ZnNfbWZ0X3JlY29yZF9hbGxvYyhudGZz
X3ZvbHVtZSAqdm9sLCBjb25zdCBpbnQgbW9kZSwKLQkJbnRmc19pbm9kZSAqYmFzZV9uaSwgTUZU
X1JFQ09SRCAqKm1yZWMpOwotZXh0ZXJuIGludCBudGZzX2V4dGVudF9tZnRfcmVjb3JkX2ZyZWUo
bnRmc19pbm9kZSAqbmksIE1GVF9SRUNPUkQgKm0pOwotCi0jZW5kaWYgLyogTlRGU19SVyAqLwot
Ci0jZW5kaWYgLyogX0xJTlVYX05URlNfTUZUX0ggKi8KZGlmZiAtLWdpdCBhL2ZzL250ZnMvbXN0
LmMgYi9mcy9udGZzL21zdC5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAxNmIzYzg4
NGFiZmMuLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL21zdC5jCisrKyAvZGV2L251bGwKQEAg
LTEsMTg5ICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxh
dGVyCi0vKgotICogbXN0LmMgLSBOVEZTIG11bHRpIHNlY3RvciB0cmFuc2ZlciBwcm90ZWN0aW9u
IGhhbmRsaW5nIGNvZGUuIFBhcnQgb2YgdGhlCi0gKgkgICBMaW51eC1OVEZTIHByb2plY3QuCi0g
KgotICogQ29weXJpZ2h0IChjKSAyMDAxLTIwMDQgQW50b24gQWx0YXBhcm1ha292Ci0gKi8KLQot
I2luY2x1ZGUgIm50ZnMuaCIKLQotLyoqCi0gKiBwb3N0X3JlYWRfbXN0X2ZpeHVwIC0gZGVwcm90
ZWN0IG11bHRpIHNlY3RvciB0cmFuc2ZlciBwcm90ZWN0ZWQgZGF0YQotICogQGI6CQlwb2ludGVy
IHRvIHRoZSBkYXRhIHRvIGRlcHJvdGVjdAotICogQHNpemU6CXNpemUgaW4gYnl0ZXMgb2YgQGIK
LSAqCi0gKiBQZXJmb3JtIHRoZSBuZWNlc3NhcnkgcG9zdCByZWFkIG11bHRpIHNlY3RvciB0cmFu
c2ZlciBmaXh1cCBhbmQgZGV0ZWN0IHRoZQotICogcHJlc2VuY2Ugb2YgaW5jb21wbGV0ZSBtdWx0
aSBzZWN0b3IgdHJhbnNmZXJzLiAtIEluIHRoYXQgY2FzZSwgb3ZlcndyaXRlIHRoZQotICogbWFn
aWMgb2YgdGhlIG50ZnMgcmVjb3JkIGhlYWRlciBiZWluZyBwcm9jZXNzZWQgd2l0aCAiQkFBRCIg
KGluIG1lbW9yeSBvbmx5ISkKLSAqIGFuZCBhYm9ydCBwcm9jZXNzaW5nLgotICoKLSAqIFJldHVy
biAwIG9uIHN1Y2Nlc3MgYW5kIC1FSU5WQUwgb24gZXJyb3IgKCJCQUFEIiBtYWdpYyB3aWxsIGJl
IHByZXNlbnQpLgotICoKLSAqIE5PVEU6IFdlIGNvbnNpZGVyIHRoZSBhYnNlbmNlIC8gaW52YWxp
ZGl0eSBvZiBhbiB1cGRhdGUgc2VxdWVuY2UgYXJyYXkgdG8KLSAqIG1lYW4gdGhhdCB0aGUgc3Ry
dWN0dXJlIGlzIG5vdCBwcm90ZWN0ZWQgYXQgYWxsIGFuZCBoZW5jZSBkb2Vzbid0IG5lZWQgdG8K
LSAqIGJlIGZpeGVkIHVwLiBUaHVzLCB3ZSByZXR1cm4gc3VjY2VzcyBhbmQgbm90IGZhaWx1cmUg
aW4gdGhpcyBjYXNlLiBUaGlzIGlzCi0gKiBpbiBjb250cmFzdCB0byBwcmVfd3JpdGVfbXN0X2Zp
eHVwKCksIHNlZSBiZWxvdy4KLSAqLwotaW50IHBvc3RfcmVhZF9tc3RfZml4dXAoTlRGU19SRUNP
UkQgKmIsIGNvbnN0IHUzMiBzaXplKQotewotCXUxNiB1c2Ffb2ZzLCB1c2FfY291bnQsIHVzbjsK
LQl1MTYgKnVzYV9wb3MsICpkYXRhX3BvczsKLQotCS8qIFNldHVwIHRoZSB2YXJpYWJsZXMuICov
Ci0JdXNhX29mcyA9IGxlMTZfdG9fY3B1KGItPnVzYV9vZnMpOwotCS8qIERlY3JlbWVudCB1c2Ff
Y291bnQgdG8gZ2V0IG51bWJlciBvZiBmaXh1cHMuICovCi0JdXNhX2NvdW50ID0gbGUxNl90b19j
cHUoYi0+dXNhX2NvdW50KSAtIDE7Ci0JLyogU2l6ZSBhbmQgYWxpZ25tZW50IGNoZWNrcy4gKi8K
LQlpZiAoIHNpemUgJiAoTlRGU19CTE9DS19TSVpFIC0gMSkJfHwKLQkgICAgIHVzYV9vZnMgJiAx
CQkJfHwKLQkgICAgIHVzYV9vZnMgKyAodXNhX2NvdW50ICogMikgPiBzaXplCXx8Ci0JICAgICAo
c2l6ZSA+PiBOVEZTX0JMT0NLX1NJWkVfQklUUykgIT0gdXNhX2NvdW50KQotCQlyZXR1cm4gMDsK
LQkvKiBQb3NpdGlvbiBvZiB1c24gaW4gdXBkYXRlIHNlcXVlbmNlIGFycmF5LiAqLwotCXVzYV9w
b3MgPSAodTE2KiliICsgdXNhX29mcy9zaXplb2YodTE2KTsKLQkvKgotCSAqIFRoZSB1cGRhdGUg
c2VxdWVuY2UgbnVtYmVyIHdoaWNoIGhhcyB0byBiZSBlcXVhbCB0byBlYWNoIG9mIHRoZQotCSAq
IHUxNiB2YWx1ZXMgYmVmb3JlIHRoZXkgYXJlIGZpeGVkIHVwLiBOb3RlIG5vIG5lZWQgdG8gY2Fy
ZSBmb3IKLQkgKiBlbmRpYW5uZXNzIHNpbmNlIHdlIGFyZSBjb21wYXJpbmcgYW5kIG1vdmluZyBk
YXRhIGZvciBvbiBkaXNrCi0JICogc3RydWN0dXJlcyB3aGljaCBtZWFucyB0aGUgZGF0YSBpcyBj
b25zaXN0ZW50LiAtIElmIGl0IGlzCi0JICogY29uc2lzdGVudHkgdGhlIHdyb25nIGVuZGlhbm5l
c3MgaXQgZG9lc24ndCBtYWtlIGFueSBkaWZmZXJlbmNlLgotCSAqLwotCXVzbiA9ICp1c2FfcG9z
OwotCS8qCi0JICogUG9zaXRpb24gaW4gcHJvdGVjdGVkIGRhdGEgb2YgZmlyc3QgdTE2IHRoYXQg
bmVlZHMgZml4aW5nIHVwLgotCSAqLwotCWRhdGFfcG9zID0gKHUxNiopYiArIE5URlNfQkxPQ0tf
U0laRS9zaXplb2YodTE2KSAtIDE7Ci0JLyoKLQkgKiBDaGVjayBmb3IgaW5jb21wbGV0ZSBtdWx0
aSBzZWN0b3IgdHJhbnNmZXIocykuCi0JICovCi0Jd2hpbGUgKHVzYV9jb3VudC0tKSB7Ci0JCWlm
ICgqZGF0YV9wb3MgIT0gdXNuKSB7Ci0JCQkvKgotCQkJICogSW5jb21wbGV0ZSBtdWx0aSBzZWN0
b3IgdHJhbnNmZXIgZGV0ZWN0ZWQhICktOgotCQkJICogU2V0IHRoZSBtYWdpYyB0byAiQkFBRCIg
YW5kIHJldHVybiBmYWlsdXJlLgotCQkJICogTm90ZSB0aGF0IG1hZ2ljX0JBQUQgaXMgYWxyZWFk
eSBjb252ZXJ0ZWQgdG8gbGUzMi4KLQkJCSAqLwotCQkJYi0+bWFnaWMgPSBtYWdpY19CQUFEOwot
CQkJcmV0dXJuIC1FSU5WQUw7Ci0JCX0KLQkJZGF0YV9wb3MgKz0gTlRGU19CTE9DS19TSVpFL3Np
emVvZih1MTYpOwotCX0KLQkvKiBSZS1zZXR1cCB0aGUgdmFyaWFibGVzLiAqLwotCXVzYV9jb3Vu
dCA9IGxlMTZfdG9fY3B1KGItPnVzYV9jb3VudCkgLSAxOwotCWRhdGFfcG9zID0gKHUxNiopYiAr
IE5URlNfQkxPQ0tfU0laRS9zaXplb2YodTE2KSAtIDE7Ci0JLyogRml4dXAgYWxsIHNlY3RvcnMu
ICovCi0Jd2hpbGUgKHVzYV9jb3VudC0tKSB7Ci0JCS8qCi0JCSAqIEluY3JlbWVudCBwb3NpdGlv
biBpbiB1c2EgYW5kIHJlc3RvcmUgb3JpZ2luYWwgZGF0YSBmcm9tCi0JCSAqIHRoZSB1c2EgaW50
byB0aGUgZGF0YSBidWZmZXIuCi0JCSAqLwotCQkqZGF0YV9wb3MgPSAqKCsrdXNhX3Bvcyk7Ci0J
CS8qIEluY3JlbWVudCBwb3NpdGlvbiBpbiBkYXRhIGFzIHdlbGwuICovCi0JCWRhdGFfcG9zICs9
IE5URlNfQkxPQ0tfU0laRS9zaXplb2YodTE2KTsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLS8qKgot
ICogcHJlX3dyaXRlX21zdF9maXh1cCAtIGFwcGx5IG11bHRpIHNlY3RvciB0cmFuc2ZlciBwcm90
ZWN0aW9uCi0gKiBAYjoJCXBvaW50ZXIgdG8gdGhlIGRhdGEgdG8gcHJvdGVjdAotICogQHNpemU6
CXNpemUgaW4gYnl0ZXMgb2YgQGIKLSAqCi0gKiBQZXJmb3JtIHRoZSBuZWNlc3NhcnkgcHJlIHdy
aXRlIG11bHRpIHNlY3RvciB0cmFuc2ZlciBmaXh1cCBvbiB0aGUgZGF0YQotICogcG9pbnRlciB0
byBieSBAYiBvZiBAc2l6ZS4KLSAqCi0gKiBSZXR1cm4gMCBpZiBmaXh1cCBhcHBsaWVkIChzdWNj
ZXNzKSBvciAtRUlOVkFMIGlmIG5vIGZpeHVwIHdhcyBwZXJmb3JtZWQKLSAqIChhc3N1bWVkIG5v
dCBuZWVkZWQpLiBUaGlzIGlzIGluIGNvbnRyYXN0IHRvIHBvc3RfcmVhZF9tc3RfZml4dXAoKSBh
Ym92ZS4KLSAqCi0gKiBOT1RFOiBXZSBjb25zaWRlciB0aGUgYWJzZW5jZSAvIGludmFsaWRpdHkg
b2YgYW4gdXBkYXRlIHNlcXVlbmNlIGFycmF5IHRvCi0gKiBtZWFuIHRoYXQgdGhlIHN0cnVjdHVy
ZSBpcyBub3Qgc3ViamVjdCB0byBwcm90ZWN0aW9uIGFuZCBoZW5jZSBkb2Vzbid0IG5lZWQKLSAq
IHRvIGJlIGZpeGVkIHVwLiBUaGlzIG1lYW5zIHRoYXQgeW91IGhhdmUgdG8gY3JlYXRlIGEgdmFs
aWQgdXBkYXRlIHNlcXVlbmNlCi0gKiBhcnJheSBoZWFkZXIgaW4gdGhlIG50ZnMgcmVjb3JkIGJl
Zm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24sIG90aGVyd2lzZSBpdAotICogd2lsbCBmYWlsICh0
aGUgaGVhZGVyIG5lZWRzIHRvIGNvbnRhaW4gdGhlIHBvc2l0aW9uIG9mIHRoZSB1cGRhdGUgc2Vx
dWVuY2UKLSAqIGFycmF5IHRvZ2V0aGVyIHdpdGggdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiB0
aGUgYXJyYXkpLiBZb3UgYWxzbyBuZWVkIHRvCi0gKiBpbml0aWFsaXNlIHRoZSB1cGRhdGUgc2Vx
dWVuY2UgbnVtYmVyIGJlZm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24KLSAqIG90aGVyd2lzZSBh
IHJhbmRvbSB3b3JkIHdpbGwgYmUgdXNlZCAod2hhdGV2ZXIgd2FzIGluIHRoZSByZWNvcmQgYXQg
dGhhdAotICogcG9zaXRpb24gYXQgdGhhdCB0aW1lKS4KLSAqLwotaW50IHByZV93cml0ZV9tc3Rf
Zml4dXAoTlRGU19SRUNPUkQgKmIsIGNvbnN0IHUzMiBzaXplKQotewotCWxlMTYgKnVzYV9wb3Ms
ICpkYXRhX3BvczsKLQl1MTYgdXNhX29mcywgdXNhX2NvdW50LCB1c247Ci0JbGUxNiBsZV91c247
Ci0KLQkvKiBTYW5pdHkgY2hlY2sgKyBvbmx5IGZpeHVwIGlmIGl0IG1ha2VzIHNlbnNlLiAqLwot
CWlmICghYiB8fCBudGZzX2lzX2JhYWRfcmVjb3JkKGItPm1hZ2ljKSB8fAotCQkJbnRmc19pc19o
b2xlX3JlY29yZChiLT5tYWdpYykpCi0JCXJldHVybiAtRUlOVkFMOwotCS8qIFNldHVwIHRoZSB2
YXJpYWJsZXMuICovCi0JdXNhX29mcyA9IGxlMTZfdG9fY3B1KGItPnVzYV9vZnMpOwotCS8qIERl
Y3JlbWVudCB1c2FfY291bnQgdG8gZ2V0IG51bWJlciBvZiBmaXh1cHMuICovCi0JdXNhX2NvdW50
ID0gbGUxNl90b19jcHUoYi0+dXNhX2NvdW50KSAtIDE7Ci0JLyogU2l6ZSBhbmQgYWxpZ25tZW50
IGNoZWNrcy4gKi8KLQlpZiAoIHNpemUgJiAoTlRGU19CTE9DS19TSVpFIC0gMSkJfHwKLQkgICAg
IHVzYV9vZnMgJiAxCQkJfHwKLQkgICAgIHVzYV9vZnMgKyAodXNhX2NvdW50ICogMikgPiBzaXpl
CXx8Ci0JICAgICAoc2l6ZSA+PiBOVEZTX0JMT0NLX1NJWkVfQklUUykgIT0gdXNhX2NvdW50KQot
CQlyZXR1cm4gLUVJTlZBTDsKLQkvKiBQb3NpdGlvbiBvZiB1c24gaW4gdXBkYXRlIHNlcXVlbmNl
IGFycmF5LiAqLwotCXVzYV9wb3MgPSAobGUxNiopKCh1OCopYiArIHVzYV9vZnMpOwotCS8qCi0J
ICogQ3ljbGljYWxseSBpbmNyZW1lbnQgdGhlIHVwZGF0ZSBzZXF1ZW5jZSBudW1iZXIKLQkgKiAo
c2tpcHBpbmcgMCBhbmQgLTEsIGkuZS4gMHhmZmZmKS4KLQkgKi8KLQl1c24gPSBsZTE2X3RvX2Nw
dXAodXNhX3BvcykgKyAxOwotCWlmICh1c24gPT0gMHhmZmZmIHx8ICF1c24pCi0JCXVzbiA9IDE7
Ci0JbGVfdXNuID0gY3B1X3RvX2xlMTYodXNuKTsKLQkqdXNhX3BvcyA9IGxlX3VzbjsKLQkvKiBQ
b3NpdGlvbiBpbiBkYXRhIG9mIGZpcnN0IHUxNiB0aGF0IG5lZWRzIGZpeGluZyB1cC4gKi8KLQlk
YXRhX3BvcyA9IChsZTE2KiliICsgTlRGU19CTE9DS19TSVpFL3NpemVvZihsZTE2KSAtIDE7Ci0J
LyogRml4dXAgYWxsIHNlY3RvcnMuICovCi0Jd2hpbGUgKHVzYV9jb3VudC0tKSB7Ci0JCS8qCi0J
CSAqIEluY3JlbWVudCB0aGUgcG9zaXRpb24gaW4gdGhlIHVzYSBhbmQgc2F2ZSB0aGUKLQkJICog
b3JpZ2luYWwgZGF0YSBmcm9tIHRoZSBkYXRhIGJ1ZmZlciBpbnRvIHRoZSB1c2EuCi0JCSAqLwot
CQkqKCsrdXNhX3BvcykgPSAqZGF0YV9wb3M7Ci0JCS8qIEFwcGx5IGZpeHVwIHRvIGRhdGEuICov
Ci0JCSpkYXRhX3BvcyA9IGxlX3VzbjsKLQkJLyogSW5jcmVtZW50IHBvc2l0aW9uIGluIGRhdGEg
YXMgd2VsbC4gKi8KLQkJZGF0YV9wb3MgKz0gTlRGU19CTE9DS19TSVpFL3NpemVvZihsZTE2KTsK
LQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLS8qKgotICogcG9zdF93cml0ZV9tc3RfZml4dXAgLSBmYXN0
IGRlcHJvdGVjdCBtdWx0aSBzZWN0b3IgdHJhbnNmZXIgcHJvdGVjdGVkIGRhdGEKLSAqIEBiOgkJ
cG9pbnRlciB0byB0aGUgZGF0YSB0byBkZXByb3RlY3QKLSAqCi0gKiBQZXJmb3JtIHRoZSBuZWNl
c3NhcnkgcG9zdCB3cml0ZSBtdWx0aSBzZWN0b3IgdHJhbnNmZXIgZml4dXAsIG5vdCBjaGVja2lu
ZwotICogZm9yIGFueSBlcnJvcnMsIGJlY2F1c2Ugd2UgYXNzdW1lIHdlIGhhdmUganVzdCB1c2Vk
IHByZV93cml0ZV9tc3RfZml4dXAoKSwKLSAqIHRodXMgdGhlIGRhdGEgd2lsbCBiZSBmaW5lIG9y
IHdlIHdvdWxkIG5ldmVyIGhhdmUgZ290dGVuIGhlcmUuCi0gKi8KLXZvaWQgcG9zdF93cml0ZV9t
c3RfZml4dXAoTlRGU19SRUNPUkQgKmIpCi17Ci0JbGUxNiAqdXNhX3BvcywgKmRhdGFfcG9zOwot
Ci0JdTE2IHVzYV9vZnMgPSBsZTE2X3RvX2NwdShiLT51c2Ffb2ZzKTsKLQl1MTYgdXNhX2NvdW50
ID0gbGUxNl90b19jcHUoYi0+dXNhX2NvdW50KSAtIDE7Ci0KLQkvKiBQb3NpdGlvbiBvZiB1c24g
aW4gdXBkYXRlIHNlcXVlbmNlIGFycmF5LiAqLwotCXVzYV9wb3MgPSAobGUxNiopYiArIHVzYV9v
ZnMvc2l6ZW9mKGxlMTYpOwotCi0JLyogUG9zaXRpb24gaW4gcHJvdGVjdGVkIGRhdGEgb2YgZmly
c3QgdTE2IHRoYXQgbmVlZHMgZml4aW5nIHVwLiAqLwotCWRhdGFfcG9zID0gKGxlMTYqKWIgKyBO
VEZTX0JMT0NLX1NJWkUvc2l6ZW9mKGxlMTYpIC0gMTsKLQotCS8qIEZpeHVwIGFsbCBzZWN0b3Jz
LiAqLwotCXdoaWxlICh1c2FfY291bnQtLSkgewotCQkvKgotCQkgKiBJbmNyZW1lbnQgcG9zaXRp
b24gaW4gdXNhIGFuZCByZXN0b3JlIG9yaWdpbmFsIGRhdGEgZnJvbQotCQkgKiB0aGUgdXNhIGlu
dG8gdGhlIGRhdGEgYnVmZmVyLgotCQkgKi8KLQkJKmRhdGFfcG9zID0gKigrK3VzYV9wb3MpOwot
Ci0JCS8qIEluY3JlbWVudCBwb3NpdGlvbiBpbiBkYXRhIGFzIHdlbGwuICovCi0JCWRhdGFfcG9z
ICs9IE5URlNfQkxPQ0tfU0laRS9zaXplb2YobGUxNik7Ci0JfQotfQpkaWZmIC0tZ2l0IGEvZnMv
bnRmcy9uYW1laS5jIGIvZnMvbnRmcy9uYW1laS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCBkNzQ5OGRkYzRhNzIuLjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL25hbWVpLmMKKysr
IC9kZXYvbnVsbApAQCAtMSwzOTIgKzAsMCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiBuYW1laS5jIC0gTlRGUyBrZXJuZWwgZGlyZWN0b3J5
IGlub2RlIG9wZXJhdGlvbnMuIFBhcnQgb2YgdGhlIExpbnV4LU5URlMKLSAqCSAgICAgcHJvamVj
dC4KLSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAwNiBBbnRvbiBBbHRhcGFybWFrb3YKLSAq
LwotCi0jaW5jbHVkZSA8bGludXgvZGNhY2hlLmg+Ci0jaW5jbHVkZSA8bGludXgvZXhwb3J0ZnMu
aD4KLSNpbmNsdWRlIDxsaW51eC9zZWN1cml0eS5oPgotI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4K
LQotI2luY2x1ZGUgImF0dHJpYi5oIgotI2luY2x1ZGUgImRlYnVnLmgiCi0jaW5jbHVkZSAiZGly
LmgiCi0jaW5jbHVkZSAibWZ0LmgiCi0jaW5jbHVkZSAibnRmcy5oIgotCi0vKioKLSAqIG50ZnNf
bG9va3VwIC0gZmluZCB0aGUgaW5vZGUgcmVwcmVzZW50ZWQgYnkgYSBkZW50cnkgaW4gYSBkaXJl
Y3RvcnkgaW5vZGUKLSAqIEBkaXJfaW5vOglkaXJlY3RvcnkgaW5vZGUgaW4gd2hpY2ggdG8gbG9v
ayBmb3IgdGhlIGlub2RlCi0gKiBAZGVudDoJZGVudHJ5IHJlcHJlc2VudGluZyB0aGUgaW5vZGUg
dG8gbG9vayBmb3IKLSAqIEBmbGFnczoJbG9va3VwIGZsYWdzCi0gKgotICogSW4gc2hvcnQsIG50
ZnNfbG9va3VwKCkgbG9va3MgZm9yIHRoZSBpbm9kZSByZXByZXNlbnRlZCBieSB0aGUgZGVudHJ5
IEBkZW50Ci0gKiBpbiB0aGUgZGlyZWN0b3J5IGlub2RlIEBkaXJfaW5vIGFuZCBpZiBmb3VuZCBh
dHRhY2hlcyB0aGUgaW5vZGUgdG8gdGhlCi0gKiBkZW50cnkgQGRlbnQuCi0gKgotICogSW4gbW9y
ZSBkZXRhaWwsIHRoZSBkZW50cnkgQGRlbnQgc3BlY2lmaWVzIHdoaWNoIGlub2RlIHRvIGxvb2sg
Zm9yIGJ5Ci0gKiBzdXBwbHlpbmcgdGhlIG5hbWUgb2YgdGhlIGlub2RlIGluIEBkZW50LT5kX25h
bWUubmFtZS4gbnRmc19sb29rdXAoKQotICogY29udmVydHMgdGhlIG5hbWUgdG8gVW5pY29kZSBh
bmQgd2Fsa3MgdGhlIGNvbnRlbnRzIG9mIHRoZSBkaXJlY3RvcnkgaW5vZGUKLSAqIEBkaXJfaW5v
IGxvb2tpbmcgZm9yIHRoZSBjb252ZXJ0ZWQgVW5pY29kZSBuYW1lLiBJZiB0aGUgbmFtZSBpcyBm
b3VuZCBpbiB0aGUKLSAqIGRpcmVjdG9yeSwgdGhlIGNvcnJlc3BvbmRpbmcgaW5vZGUgaXMgbG9h
ZGVkIGJ5IGNhbGxpbmcgbnRmc19pZ2V0KCkgb24gaXRzCi0gKiBpbm9kZSBudW1iZXIgYW5kIHRo
ZSBpbm9kZSBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIGRlbnRyeSBAZGVudCB2aWEgYSBjYWxsIHRv
Ci0gKiBkX3NwbGljZV9hbGlhcygpLgotICoKLSAqIElmIHRoZSBuYW1lIGlzIG5vdCBmb3VuZCBp
biB0aGUgZGlyZWN0b3J5LCBhIE5VTEwgaW5vZGUgaXMgaW5zZXJ0ZWQgaW50byB0aGUKLSAqIGRl
bnRyeSBAZGVudCB2aWEgYSBjYWxsIHRvIGRfYWRkKCkuIFRoZSBkZW50cnkgaXMgdGhlbiB0ZXJt
ZWQgYSBuZWdhdGl2ZQotICogZGVudHJ5LgotICoKLSAqIE9ubHkgaWYgYW4gYWN0dWFsIGVycm9y
IG9jY3VycywgZG8gd2UgcmV0dXJuIGFuIGVycm9yIHZpYSBFUlJfUFRSKCkuCi0gKgotICogSW4g
b3JkZXIgdG8gaGFuZGxlIHRoZSBjYXNlIGluc2Vuc2l0aXZpdHkgaXNzdWVzIG9mIE5URlMgd2l0
aCByZWdhcmRzIHRvIHRoZQotICogZGNhY2hlIGFuZCB0aGUgZGNhY2hlIHJlcXVpcmluZyBvbmx5
IG9uZSBkZW50cnkgcGVyIGRpcmVjdG9yeSwgd2UgZGVhbCB3aXRoCi0gKiBkZW50cnkgYWxpYXNl
cyB0aGF0IG9ubHkgZGlmZmVyIGluIGNhc2UgaW4gLT5udGZzX2xvb2t1cCgpIHdoaWxlIG1haW50
YWluaW5nCi0gKiBhIGNhc2Ugc2Vuc2l0aXZlIGRjYWNoZS4gVGhpcyBtZWFucyB0aGF0IHdlIGdl
dCB0aGUgZnVsbCBiZW5lZml0IG9mIGRjYWNoZQotICogc3BlZWQgd2hlbiB0aGUgZmlsZS9kaXJl
Y3RvcnkgaXMgbG9va2VkIHVwIHdpdGggdGhlIHNhbWUgY2FzZSBhcyByZXR1cm5lZCBieQotICog
LT5udGZzX3JlYWRkaXIoKSBidXQgdGhhdCBhIGxvb2t1cCBmb3IgYW55IG90aGVyIGNhc2UgKG9y
IGZvciB0aGUgc2hvcnQgZmlsZQotICogbmFtZSkgd2lsbCBub3QgZmluZCBhbnl0aGluZyBpbiBk
Y2FjaGUgYW5kIHdpbGwgZW50ZXIgLT5udGZzX2xvb2t1cCgpCi0gKiBpbnN0ZWFkLCB3aGVyZSB3
ZSBzZWFyY2ggdGhlIGRpcmVjdG9yeSBmb3IgYSBmdWxseSBtYXRjaGluZyBmaWxlIG5hbWUKLSAq
IChpbmNsdWRpbmcgY2FzZSkgYW5kIGlmIHRoYXQgaXMgbm90IGZvdW5kLCB3ZSBzZWFyY2ggZm9y
IGEgZmlsZSBuYW1lIHRoYXQKLSAqIG1hdGNoZXMgd2l0aCBkaWZmZXJlbnQgY2FzZSBhbmQgaWYg
dGhhdCBoYXMgbm9uLVBPU0lYIHNlbWFudGljcyB3ZSByZXR1cm4KLSAqIHRoYXQuIFdlIGFjdHVh
bGx5IGRvIG9ubHkgb25lIHNlYXJjaCAoY2FzZSBzZW5zaXRpdmUpIGFuZCBrZWVwIHRhYnMgb24K
LSAqIHdoZXRoZXIgd2UgaGF2ZSBmb3VuZCBhIGNhc2UgaW5zZW5zaXRpdmUgbWF0Y2ggaW4gdGhl
IHByb2Nlc3MuCi0gKgotICogVG8gc2ltcGxpZnkgbWF0dGVycyBmb3IgdXMsIHdlIGRvIG5vdCB0
cmVhdCB0aGUgc2hvcnQgdnMgbG9uZyBmaWxlbmFtZXMgYXMKLSAqIHR3byBoYXJkIGxpbmtzIGJ1
dCBpbnN0ZWFkIGlmIHRoZSBsb29rdXAgbWF0Y2hlcyBhIHNob3J0IGZpbGVuYW1lLCB3ZQotICog
cmV0dXJuIHRoZSBkZW50cnkgZm9yIHRoZSBjb3JyZXNwb25kaW5nIGxvbmcgZmlsZW5hbWUgaW5z
dGVhZC4KLSAqCi0gKiBUaGVyZSBhcmUgdGhyZWUgY2FzZXMgd2UgbmVlZCB0byBkaXN0aW5ndWlz
aCBoZXJlOgotICoKLSAqIDEpIEBkZW50IHBlcmZlY3RseSBtYXRjaGVzIChpLmUuIGluY2x1ZGlu
ZyBjYXNlKSBhIGRpcmVjdG9yeSBlbnRyeSB3aXRoIGEKLSAqICAgIGZpbGUgbmFtZSBpbiB0aGUg
V0lOMzIgb3IgUE9TSVggbmFtZXNwYWNlcy4gSW4gdGhpcyBjYXNlCi0gKiAgICBudGZzX2xvb2t1
cF9pbm9kZV9ieV9uYW1lKCkgd2lsbCByZXR1cm4gd2l0aCBuYW1lIHNldCB0byBOVUxMIGFuZCB3
ZQotICogICAganVzdCBkX3NwbGljZV9hbGlhcygpIEBkZW50LgotICogMikgQGRlbnQgbWF0Y2hl
cyAobm90IGluY2x1ZGluZyBjYXNlKSBhIGRpcmVjdG9yeSBlbnRyeSB3aXRoIGEgZmlsZSBuYW1l
IGluCi0gKiAgICB0aGUgV0lOMzIgbmFtZXNwYWNlLiBJbiB0aGlzIGNhc2UgbnRmc19sb29rdXBf
aW5vZGVfYnlfbmFtZSgpIHdpbGwgcmV0dXJuCi0gKiAgICB3aXRoIG5hbWUgc2V0IHRvIHBvaW50
IHRvIGEga21hbGxvYygpZWQgbnRmc19uYW1lIHN0cnVjdHVyZSBjb250YWluaW5nCi0gKiAgICB0
aGUgcHJvcGVybHkgY2FzZWQgbGl0dGxlIGVuZGlhbiBVbmljb2RlIG5hbWUuIFdlIGNvbnZlcnQg
dGhlIG5hbWUgdG8gdGhlCi0gKiAgICBjdXJyZW50IE5MUyBjb2RlIHBhZ2UsIHNlYXJjaCBpZiBh
IGRlbnRyeSB3aXRoIHRoaXMgbmFtZSBhbHJlYWR5IGV4aXN0cwotICogICAgYW5kIGlmIHNvIHJl
dHVybiB0aGF0IGluc3RlYWQgb2YgQGRlbnQuICBBdCB0aGlzIHBvaW50IHRoaW5ncyBhcmUKLSAq
ICAgIGNvbXBsaWNhdGVkIGJ5IHRoZSBwb3NzaWJpbGl0eSBvZiAnZGlzY29ubmVjdGVkJyBkZW50
cmllcyBkdWUgdG8gTkZTCi0gKiAgICB3aGljaCB3ZSBkZWFsIHdpdGggYXBwcm9wcmlhdGVseSAo
c2VlIHRoZSBjb2RlIGNvbW1lbnRzKS4gIFRoZSBWRlMgd2lsbAotICogICAgdGhlbiBkZXN0cm95
IHRoZSBvbGQgQGRlbnQgYW5kIHVzZSB0aGUgb25lIHdlIHJldHVybmVkLiAgSWYgYSBkZW50cnkg
aXMKLSAqICAgIG5vdCBmb3VuZCwgd2UgYWxsb2NhdGUgYSBuZXcgb25lLCBkX3NwbGljZV9hbGlh
cygpIGl0LCBhbmQgcmV0dXJuIGl0IGFzCi0gKiAgICBhYm92ZS4KLSAqIDMpIEBkZW50IG1hdGNo
ZXMgZWl0aGVyIHBlcmZlY3RseSBvciBub3QgKGkuZS4gd2UgZG9uJ3QgY2FyZSBhYm91dCBjYXNl
KSBhCi0gKiAgICBkaXJlY3RvcnkgZW50cnkgd2l0aCBhIGZpbGUgbmFtZSBpbiB0aGUgRE9TIG5h
bWVzcGFjZS4gSW4gdGhpcyBjYXNlCi0gKiAgICBudGZzX2xvb2t1cF9pbm9kZV9ieV9uYW1lKCkg
d2lsbCByZXR1cm4gd2l0aCBuYW1lIHNldCB0byBwb2ludCB0byBhCi0gKiAgICBrbWFsbG9jKCll
ZCBudGZzX25hbWUgc3RydWN0dXJlIGNvbnRhaW5pbmcgdGhlIG1mdCByZWZlcmVuY2UgKGNwdSBl
bmRpYW4pCi0gKiAgICBvZiB0aGUgaW5vZGUuIFdlIHVzZSB0aGUgbWZ0IHJlZmVyZW5jZSB0byBy
ZWFkIHRoZSBpbm9kZSBhbmQgdG8gZmluZCB0aGUKLSAqICAgIGZpbGUgbmFtZSBpbiB0aGUgV0lO
MzIgbmFtZXNwYWNlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG1hdGNoZWQgc2hvcnQgZmlsZQotICog
ICAgbmFtZS4gV2UgdGhlbiBjb252ZXJ0IHRoZSBuYW1lIHRvIHRoZSBjdXJyZW50IE5MUyBjb2Rl
IHBhZ2UsIGFuZCBwcm9jZWVkCi0gKiAgICBzZWFyY2hpbmcgZm9yIGEgZGVudHJ5IHdpdGggdGhp
cyBuYW1lLCBldGMsIGFzIGluIGNhc2UgMiksIGFib3ZlLgotICoKLSAqIExvY2tpbmc6IENhbGxl
ciBtdXN0IGhvbGQgaV9tdXRleCBvbiB0aGUgZGlyZWN0b3J5LgotICovCi1zdGF0aWMgc3RydWN0
IGRlbnRyeSAqbnRmc19sb29rdXAoc3RydWN0IGlub2RlICpkaXJfaW5vLCBzdHJ1Y3QgZGVudHJ5
ICpkZW50LAotCQl1bnNpZ25lZCBpbnQgZmxhZ3MpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9IE5U
RlNfU0IoZGlyX2luby0+aV9zYik7Ci0Jc3RydWN0IGlub2RlICpkZW50X2lub2RlOwotCW50ZnNj
aGFyICp1bmFtZTsKLQludGZzX25hbWUgKm5hbWUgPSBOVUxMOwotCU1GVF9SRUYgbXJlZjsKLQl1
bnNpZ25lZCBsb25nIGRlbnRfaW5vOwotCWludCB1bmFtZV9sZW47Ci0KLQludGZzX2RlYnVnKCJM
b29raW5nIHVwICVwZCBpbiBkaXJlY3RvcnkgaW5vZGUgMHglbHguIiwKLQkJCWRlbnQsIGRpcl9p
bm8tPmlfaW5vKTsKLQkvKiBDb252ZXJ0IHRoZSBuYW1lIG9mIHRoZSBkZW50cnkgdG8gVW5pY29k
ZS4gKi8KLQl1bmFtZV9sZW4gPSBudGZzX25sc3RvdWNzKHZvbCwgZGVudC0+ZF9uYW1lLm5hbWUs
IGRlbnQtPmRfbmFtZS5sZW4sCi0JCQkmdW5hbWUpOwotCWlmICh1bmFtZV9sZW4gPCAwKSB7Ci0J
CWlmICh1bmFtZV9sZW4gIT0gLUVOQU1FVE9PTE9ORykKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwg
IkZhaWxlZCB0byBjb252ZXJ0IG5hbWUgdG8gIgotCQkJCQkiVW5pY29kZS4iKTsKLQkJcmV0dXJu
IEVSUl9QVFIodW5hbWVfbGVuKTsKLQl9Ci0JbXJlZiA9IG50ZnNfbG9va3VwX2lub2RlX2J5X25h
bWUoTlRGU19JKGRpcl9pbm8pLCB1bmFtZSwgdW5hbWVfbGVuLAotCQkJJm5hbWUpOwotCWttZW1f
Y2FjaGVfZnJlZShudGZzX25hbWVfY2FjaGUsIHVuYW1lKTsKLQlpZiAoIUlTX0VSUl9NUkVGKG1y
ZWYpKSB7Ci0JCWRlbnRfaW5vID0gTVJFRihtcmVmKTsKLQkJbnRmc19kZWJ1ZygiRm91bmQgaW5v
ZGUgMHglbHguIENhbGxpbmcgbnRmc19pZ2V0LiIsIGRlbnRfaW5vKTsKLQkJZGVudF9pbm9kZSA9
IG50ZnNfaWdldCh2b2wtPnNiLCBkZW50X2lubyk7Ci0JCWlmICghSVNfRVJSKGRlbnRfaW5vZGUp
KSB7Ci0JCQkvKiBDb25zaXN0ZW5jeSBjaGVjay4gKi8KLQkJCWlmIChpc19iYWRfaW5vZGUoZGVu
dF9pbm9kZSkgfHwgTVNFUU5PKG1yZWYpID09Ci0JCQkJCU5URlNfSShkZW50X2lub2RlKS0+c2Vx
X25vIHx8Ci0JCQkJCWRlbnRfaW5vID09IEZJTEVfTUZUKSB7Ci0JCQkJLyogUGVyZmVjdCBXSU4z
Mi9QT1NJWCBtYXRjaC4gLS0gQ2FzZSAxLiAqLwotCQkJCWlmICghbmFtZSkgewotCQkJCQludGZz
X2RlYnVnKCJEb25lLiAgKENhc2UgMS4pIik7Ci0JCQkJCXJldHVybiBkX3NwbGljZV9hbGlhcyhk
ZW50X2lub2RlLCBkZW50KTsKLQkJCQl9Ci0JCQkJLyoKLQkJCQkgKiBXZSBhcmUgdG9vIGluZGVu
dGVkLiAgSGFuZGxlIGltcGVyZmVjdAotCQkJCSAqIG1hdGNoZXMgYW5kIHNob3J0IGZpbGUgbmFt
ZXMgZnVydGhlciBiZWxvdy4KLQkJCQkgKi8KLQkJCQlnb3RvIGhhbmRsZV9uYW1lOwotCQkJfQot
CQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRm91bmQgc3RhbGUgcmVmZXJlbmNlIHRvIGlub2RlICIK
LQkJCQkJIjB4JWx4IChyZWZlcmVuY2Ugc2VxdWVuY2UgbnVtYmVyID0gIgotCQkJCQkiMHgleCwg
aW5vZGUgc2VxdWVuY2UgbnVtYmVyID0gMHgleCksICIKLQkJCQkJInJldHVybmluZyAtRUlPLiBS
dW4gY2hrZHNrLiIsCi0JCQkJCWRlbnRfaW5vLCBNU0VRTk8obXJlZiksCi0JCQkJCU5URlNfSShk
ZW50X2lub2RlKS0+c2VxX25vKTsKLQkJCWlwdXQoZGVudF9pbm9kZSk7Ci0JCQlkZW50X2lub2Rl
ID0gRVJSX1BUUigtRUlPKTsKLQkJfSBlbHNlCi0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJudGZz
X2lnZXQoMHglbHgpIGZhaWxlZCB3aXRoICIKLQkJCQkJImVycm9yIGNvZGUgJWxpLiIsIGRlbnRf
aW5vLAotCQkJCQlQVFJfRVJSKGRlbnRfaW5vZGUpKTsKLQkJa2ZyZWUobmFtZSk7Ci0JCS8qIFJl
dHVybiB0aGUgZXJyb3IgY29kZS4gKi8KLQkJcmV0dXJuIEVSUl9DQVNUKGRlbnRfaW5vZGUpOwot
CX0KLQkvKiBJdCBpcyBndWFyYW50ZWVkIHRoYXQgQG5hbWUgaXMgbm8gbG9uZ2VyIGFsbG9jYXRl
ZCBhdCB0aGlzIHBvaW50LiAqLwotCWlmIChNUkVGX0VSUihtcmVmKSA9PSAtRU5PRU5UKSB7Ci0J
CW50ZnNfZGVidWcoIkVudHJ5IHdhcyBub3QgZm91bmQsIGFkZGluZyBuZWdhdGl2ZSBkZW50cnku
Iik7Ci0JCS8qIFRoZSBkY2FjaGUgd2lsbCBoYW5kbGUgbmVnYXRpdmUgZW50cmllcy4gKi8KLQkJ
ZF9hZGQoZGVudCwgTlVMTCk7Ci0JCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JCXJldHVybiBOVUxM
OwotCX0KLQludGZzX2Vycm9yKHZvbC0+c2IsICJudGZzX2xvb2t1cF9pbm9fYnlfbmFtZSgpIGZh
aWxlZCB3aXRoIGVycm9yICIKLQkJCSJjb2RlICVpLiIsIC1NUkVGX0VSUihtcmVmKSk7Ci0JcmV0
dXJuIEVSUl9QVFIoTVJFRl9FUlIobXJlZikpOwotCS8vIFRPRE86IENvbnNpZGVyIG1vdmluZyB0
aGlzIGxvdCB0byBhIHNlcGFyYXRlIGZ1bmN0aW9uISAoQUlBKQotaGFuZGxlX25hbWU6Ci0gICB7
Ci0JTUZUX1JFQ09SRCAqbTsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4OwotCW50ZnNfaW5v
ZGUgKm5pID0gTlRGU19JKGRlbnRfaW5vZGUpOwotCWludCBlcnI7Ci0Jc3RydWN0IHFzdHIgbmxz
X25hbWU7Ci0KLQlubHNfbmFtZS5uYW1lID0gTlVMTDsKLQlpZiAobmFtZS0+dHlwZSAhPSBGSUxF
X05BTUVfRE9TKSB7CQkJLyogQ2FzZSAyLiAqLwotCQludGZzX2RlYnVnKCJDYXNlIDIuIik7Ci0J
CW5sc19uYW1lLmxlbiA9ICh1bnNpZ25lZCludGZzX3Vjc3RvbmxzKHZvbCwKLQkJCQkobnRmc2No
YXIqKSZuYW1lLT5uYW1lLCBuYW1lLT5sZW4sCi0JCQkJKHVuc2lnbmVkIGNoYXIqKikmbmxzX25h
bWUubmFtZSwgMCk7Ci0JCWtmcmVlKG5hbWUpOwotCX0gZWxzZSAvKiBpZiAobmFtZS0+dHlwZSA9
PSBGSUxFX05BTUVfRE9TKSAqLyB7CQkvKiBDYXNlIDMuICovCi0JCUZJTEVfTkFNRV9BVFRSICpm
bjsKLQotCQludGZzX2RlYnVnKCJDYXNlIDMuIik7Ci0JCWtmcmVlKG5hbWUpOwotCi0JCS8qIEZp
bmQgdGhlIFdJTjMyIG5hbWUgY29ycmVzcG9uZGluZyB0byB0aGUgbWF0Y2hlZCBET1MgbmFtZS4g
Ki8KLQkJbmkgPSBOVEZTX0koZGVudF9pbm9kZSk7Ci0JCW0gPSBtYXBfbWZ0X3JlY29yZChuaSk7
Ci0JCWlmIChJU19FUlIobSkpIHsKLQkJCWVyciA9IFBUUl9FUlIobSk7Ci0JCQltID0gTlVMTDsK
LQkJCWN0eCA9IE5VTEw7Ci0JCQlnb3RvIGVycl9vdXQ7Ci0JCX0KLQkJY3R4ID0gbnRmc19hdHRy
X2dldF9zZWFyY2hfY3R4KG5pLCBtKTsKLQkJaWYgKHVubGlrZWx5KCFjdHgpKSB7Ci0JCQllcnIg
PSAtRU5PTUVNOwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0JCWRvIHsKLQkJCUFUVFJfUkVDT1JE
ICphOwotCQkJdTMyIHZhbF9sZW47Ci0KLQkJCWVyciA9IG50ZnNfYXR0cl9sb29rdXAoQVRfRklM
RV9OQU1FLCBOVUxMLCAwLCAwLCAwLAotCQkJCQlOVUxMLCAwLCBjdHgpOwotCQkJaWYgKHVubGlr
ZWx5KGVycikpIHsKLQkJCQludGZzX2Vycm9yKHZvbC0+c2IsICJJbm9kZSBjb3JydXB0OiBObyBX
SU4zMiAiCi0JCQkJCQkibmFtZXNwYWNlIGNvdW50ZXJwYXJ0IHRvIERPUyAiCi0JCQkJCQkiZmls
ZSBuYW1lLiBSdW4gY2hrZHNrLiIpOwotCQkJCWlmIChlcnIgPT0gLUVOT0VOVCkKLQkJCQkJZXJy
ID0gLUVJTzsKLQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCQkvKiBDb25zaXN0ZW5jeSBjaGVj
a3MuICovCi0JCQlhID0gY3R4LT5hdHRyOwotCQkJaWYgKGEtPm5vbl9yZXNpZGVudCB8fCBhLT5m
bGFncykKLQkJCQlnb3RvIGVpb19lcnJfb3V0OwotCQkJdmFsX2xlbiA9IGxlMzJfdG9fY3B1KGEt
PmRhdGEucmVzaWRlbnQudmFsdWVfbGVuZ3RoKTsKLQkJCWlmIChsZTE2X3RvX2NwdShhLT5kYXRh
LnJlc2lkZW50LnZhbHVlX29mZnNldCkgKwotCQkJCQl2YWxfbGVuID4gbGUzMl90b19jcHUoYS0+
bGVuZ3RoKSkKLQkJCQlnb3RvIGVpb19lcnJfb3V0OwotCQkJZm4gPSAoRklMRV9OQU1FX0FUVFIq
KSgodTgqKWN0eC0+YXR0ciArIGxlMTZfdG9fY3B1KAotCQkJCQljdHgtPmF0dHItPmRhdGEucmVz
aWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0JCQlpZiAoKHUzMikoZm4tPmZpbGVfbmFtZV9sZW5ndGgg
KiBzaXplb2YobnRmc2NoYXIpICsKLQkJCQkJc2l6ZW9mKEZJTEVfTkFNRV9BVFRSKSkgPiB2YWxf
bGVuKQotCQkJCWdvdG8gZWlvX2Vycl9vdXQ7Ci0JCX0gd2hpbGUgKGZuLT5maWxlX25hbWVfdHlw
ZSAhPSBGSUxFX05BTUVfV0lOMzIpOwotCi0JCS8qIENvbnZlcnQgdGhlIGZvdW5kIFdJTjMyIG5h
bWUgdG8gY3VycmVudCBOTFMgY29kZSBwYWdlLiAqLwotCQlubHNfbmFtZS5sZW4gPSAodW5zaWdu
ZWQpbnRmc191Y3N0b25scyh2b2wsCi0JCQkJKG50ZnNjaGFyKikmZm4tPmZpbGVfbmFtZSwgZm4t
PmZpbGVfbmFtZV9sZW5ndGgsCi0JCQkJKHVuc2lnbmVkIGNoYXIqKikmbmxzX25hbWUubmFtZSwg
MCk7Ci0KLQkJbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0eCk7Ci0JCXVubWFwX21mdF9yZWNv
cmQobmkpOwotCX0KLQltID0gTlVMTDsKLQljdHggPSBOVUxMOwotCi0JLyogQ2hlY2sgaWYgYSBj
b252ZXJzaW9uIGVycm9yIG9jY3VycmVkLiAqLwotCWlmICgoc2lnbmVkKW5sc19uYW1lLmxlbiA8
IDApIHsKLQkJZXJyID0gKHNpZ25lZClubHNfbmFtZS5sZW47Ci0JCWdvdG8gZXJyX291dDsKLQl9
Ci0JbmxzX25hbWUuaGFzaCA9IGZ1bGxfbmFtZV9oYXNoKGRlbnQsIG5sc19uYW1lLm5hbWUsIG5s
c19uYW1lLmxlbik7Ci0KLQlkZW50ID0gZF9hZGRfY2koZGVudCwgZGVudF9pbm9kZSwgJm5sc19u
YW1lKTsKLQlrZnJlZShubHNfbmFtZS5uYW1lKTsKLQlyZXR1cm4gZGVudDsKLQotZWlvX2Vycl9v
dXQ6Ci0JbnRmc19lcnJvcih2b2wtPnNiLCAiSWxsZWdhbCBmaWxlIG5hbWUgYXR0cmlidXRlLiBS
dW4gY2hrZHNrLiIpOwotCWVyciA9IC1FSU87Ci1lcnJfb3V0OgotCWlmIChjdHgpCi0JCW50ZnNf
YXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCWlmIChtKQotCQl1bm1hcF9tZnRfcmVjb3JkKG5p
KTsKLQlpcHV0KGRlbnRfaW5vZGUpOwotCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCwgcmV0
dXJuaW5nIGVycm9yIGNvZGUgJWkuIiwgZXJyKTsKLQlyZXR1cm4gRVJSX1BUUihlcnIpOwotICAg
fQotfQotCi0vKgotICogSW5vZGUgb3BlcmF0aW9ucyBmb3IgZGlyZWN0b3JpZXMuCi0gKi8KLWNv
bnN0IHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIG50ZnNfZGlyX2lub2RlX29wcyA9IHsKLQkubG9v
a3VwCT0gbnRmc19sb29rdXAsCS8qIFZGUzogTG9va3VwIGRpcmVjdG9yeS4gKi8KLX07Ci0KLS8q
KgotICogbnRmc19nZXRfcGFyZW50IC0gZmluZCB0aGUgZGVudHJ5IG9mIHRoZSBwYXJlbnQgb2Yg
YSBnaXZlbiBkaXJlY3RvcnkgZGVudHJ5Ci0gKiBAY2hpbGRfZGVudDoJCWRlbnRyeSBvZiB0aGUg
ZGlyZWN0b3J5IHdob3NlIHBhcmVudCBkaXJlY3RvcnkgdG8gZmluZAotICoKLSAqIEZpbmQgdGhl
IGRlbnRyeSBmb3IgdGhlIHBhcmVudCBkaXJlY3Rvcnkgb2YgdGhlIGRpcmVjdG9yeSBzcGVjaWZp
ZWQgYnkgdGhlCi0gKiBkZW50cnkgQGNoaWxkX2RlbnQuICBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxl
ZCBmcm9tCi0gKiBmcy9leHBvcnRmcy9leHBmcy5jOjpmaW5kX2V4cG9ydGVkX2RlbnRyeSgpIHdo
aWNoIGluIHR1cm4gaXMgY2FsbGVkIGZyb20gdGhlCi0gKiBkZWZhdWx0IC0+ZGVjb2RlX2ZoKCkg
d2hpY2ggaXMgZXhwb3J0X2RlY29kZV9maCgpIGluIHRoZSBzYW1lIGZpbGUuCi0gKgotICogVGhl
IGNvZGUgaXMgYmFzZWQgb24gdGhlIGV4dDMgLT5nZXRfcGFyZW50KCkgaW1wbGVtZW50YXRpb24g
Zm91bmQgaW4KLSAqIGZzL2V4dDMvbmFtZWkuYzo6ZXh0M19nZXRfcGFyZW50KCkuCi0gKgotICog
Tm90ZTogbnRmc19nZXRfcGFyZW50KCkgaXMgY2FsbGVkIHdpdGggQGRfaW5vZGUoY2hpbGRfZGVu
dCktPmlfbXV0ZXggZG93bi4KLSAqCi0gKiBSZXR1cm4gdGhlIGRlbnRyeSBvZiB0aGUgcGFyZW50
IGRpcmVjdG9yeSBvbiBzdWNjZXNzIG9yIHRoZSBlcnJvciBjb2RlIG9uCi0gKiBlcnJvciAoSVNf
RVJSKCkgaXMgdHJ1ZSkuCi0gKi8KLXN0YXRpYyBzdHJ1Y3QgZGVudHJ5ICpudGZzX2dldF9wYXJl
bnQoc3RydWN0IGRlbnRyeSAqY2hpbGRfZGVudCkKLXsKLQlzdHJ1Y3QgaW5vZGUgKnZpID0gZF9p
bm9kZShjaGlsZF9kZW50KTsKLQludGZzX2lub2RlICpuaSA9IE5URlNfSSh2aSk7Ci0JTUZUX1JF
Q09SRCAqbXJlYzsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4OwotCUFUVFJfUkVDT1JEICph
dHRyOwotCUZJTEVfTkFNRV9BVFRSICpmbjsKLQl1bnNpZ25lZCBsb25nIHBhcmVudF9pbm87Ci0J
aW50IGVycjsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nIGZvciBpbm9kZSAweCVseC4iLCB2aS0+
aV9pbm8pOwotCS8qIEdldCB0aGUgbWZ0IHJlY29yZCBvZiB0aGUgaW5vZGUgYmVsb25naW5nIHRv
IHRoZSBjaGlsZCBkZW50cnkuICovCi0JbXJlYyA9IG1hcF9tZnRfcmVjb3JkKG5pKTsKLQlpZiAo
SVNfRVJSKG1yZWMpKQotCQlyZXR1cm4gRVJSX0NBU1QobXJlYyk7Ci0JLyogRmluZCB0aGUgZmly
c3QgZmlsZSBuYW1lIGF0dHJpYnV0ZSBpbiB0aGUgbWZ0IHJlY29yZC4gKi8KLQljdHggPSBudGZz
X2F0dHJfZ2V0X3NlYXJjaF9jdHgobmksIG1yZWMpOwotCWlmICh1bmxpa2VseSghY3R4KSkgewot
CQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7Ci0JfQot
dHJ5X25leHQ6Ci0JZXJyID0gbnRmc19hdHRyX2xvb2t1cChBVF9GSUxFX05BTUUsIE5VTEwsIDAs
IENBU0VfU0VOU0lUSVZFLCAwLCBOVUxMLAotCQkJMCwgY3R4KTsKLQlpZiAodW5saWtlbHkoZXJy
KSkgewotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQkJdW5tYXBfbWZ0X3JlY29y
ZChuaSk7Ci0JCWlmIChlcnIgPT0gLUVOT0VOVCkKLQkJCW50ZnNfZXJyb3IodmktPmlfc2IsICJJ
bm9kZSAweCVseCBkb2VzIG5vdCBoYXZlIGEgIgotCQkJCQkiZmlsZSBuYW1lIGF0dHJpYnV0ZS4g
IFJ1biBjaGtkc2suIiwKLQkJCQkJdmktPmlfaW5vKTsKLQkJcmV0dXJuIEVSUl9QVFIoZXJyKTsK
LQl9Ci0JYXR0ciA9IGN0eC0+YXR0cjsKLQlpZiAodW5saWtlbHkoYXR0ci0+bm9uX3Jlc2lkZW50
KSkKLQkJZ290byB0cnlfbmV4dDsKLQlmbiA9IChGSUxFX05BTUVfQVRUUiAqKSgodTggKilhdHRy
ICsKLQkJCWxlMTZfdG9fY3B1KGF0dHItPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0J
aWYgKHVubGlrZWx5KCh1OCAqKWZuICsgbGUzMl90b19jcHUoYXR0ci0+ZGF0YS5yZXNpZGVudC52
YWx1ZV9sZW5ndGgpID4KLQkJCSh1OCopYXR0ciArIGxlMzJfdG9fY3B1KGF0dHItPmxlbmd0aCkp
KQotCQlnb3RvIHRyeV9uZXh0OwotCS8qIEdldCB0aGUgaW5vZGUgbnVtYmVyIG9mIHRoZSBwYXJl
bnQgZGlyZWN0b3J5LiAqLwotCXBhcmVudF9pbm8gPSBNUkVGX0xFKGZuLT5wYXJlbnRfZGlyZWN0
b3J5KTsKLQkvKiBSZWxlYXNlIHRoZSBzZWFyY2ggY29udGV4dCBhbmQgdGhlIG1mdCByZWNvcmQg
b2YgdGhlIGNoaWxkLiAqLwotCW50ZnNfYXR0cl9wdXRfc2VhcmNoX2N0eChjdHgpOwotCXVubWFw
X21mdF9yZWNvcmQobmkpOwotCi0JcmV0dXJuIGRfb2J0YWluX2FsaWFzKG50ZnNfaWdldCh2aS0+
aV9zYiwgcGFyZW50X2lubykpOwotfQotCi1zdGF0aWMgc3RydWN0IGlub2RlICpudGZzX25mc19n
ZXRfaW5vZGUoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKLQkJdTY0IGlubywgdTMyIGdlbmVyYXRp
b24pCi17Ci0Jc3RydWN0IGlub2RlICppbm9kZTsKLQotCWlub2RlID0gbnRmc19pZ2V0KHNiLCBp
bm8pOwotCWlmICghSVNfRVJSKGlub2RlKSkgewotCQlpZiAoaXNfYmFkX2lub2RlKGlub2RlKSB8
fCBpbm9kZS0+aV9nZW5lcmF0aW9uICE9IGdlbmVyYXRpb24pIHsKLQkJCWlwdXQoaW5vZGUpOwot
CQkJaW5vZGUgPSBFUlJfUFRSKC1FU1RBTEUpOwotCQl9Ci0JfQotCi0JcmV0dXJuIGlub2RlOwot
fQotCi1zdGF0aWMgc3RydWN0IGRlbnRyeSAqbnRmc19maF90b19kZW50cnkoc3RydWN0IHN1cGVy
X2Jsb2NrICpzYiwgc3RydWN0IGZpZCAqZmlkLAotCQlpbnQgZmhfbGVuLCBpbnQgZmhfdHlwZSkK
LXsKLQlyZXR1cm4gZ2VuZXJpY19maF90b19kZW50cnkoc2IsIGZpZCwgZmhfbGVuLCBmaF90eXBl
LAotCQkJCSAgICBudGZzX25mc19nZXRfaW5vZGUpOwotfQotCi1zdGF0aWMgc3RydWN0IGRlbnRy
eSAqbnRmc19maF90b19wYXJlbnQoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgc3RydWN0IGZpZCAq
ZmlkLAotCQlpbnQgZmhfbGVuLCBpbnQgZmhfdHlwZSkKLXsKLQlyZXR1cm4gZ2VuZXJpY19maF90
b19wYXJlbnQoc2IsIGZpZCwgZmhfbGVuLCBmaF90eXBlLAotCQkJCSAgICBudGZzX25mc19nZXRf
aW5vZGUpOwotfQotCi0vKgotICogRXhwb3J0IG9wZXJhdGlvbnMgYWxsb3dpbmcgTkZTIGV4cG9y
dGluZyBvZiBtb3VudGVkIE5URlMgcGFydGl0aW9ucy4KLSAqCi0gKiBXZSB1c2UgdGhlIGRlZmF1
bHQgLT5lbmNvZGVfZmgoKSBmb3Igbm93LiAgTm90ZSB0aGF0IHRoZXkKLSAqIHVzZSAzMiBiaXRz
IHRvIHN0b3JlIHRoZSBpbm9kZSBudW1iZXIgd2hpY2ggaXMgYW4gdW5zaWduZWQgbG9uZyBzbyBv
biA2NC1iaXQKLSAqIGFyY2hpdGVjdHVyZXMgaXMgdXN1YWxseSA2NCBiaXRzIHNvIGl0IHdvdWxk
IGFsbCBmYWlsIGhvcnJpYmx5IG9uIGh1Z2UKLSAqIHZvbHVtZXMuICBJIGd1ZXNzIHdlIG5lZWQg
dG8gZGVmaW5lIG91ciBvd24gZW5jb2RlIGFuZCBkZWNvZGUgZmggZnVuY3Rpb25zCi0gKiB0aGF0
IHN0b3JlIDY0LWJpdCBpbm9kZSBudW1iZXJzIGF0IHNvbWUgcG9pbnQgYnV0IGZvciBub3cgd2Ug
d2lsbCBpZ25vcmUgdGhlCi0gKiBwcm9ibGVtLi4uCi0gKgotICogV2UgYWxzbyB1c2UgdGhlIGRl
ZmF1bHQgLT5nZXRfbmFtZSgpIGhlbHBlciAodXNlZCBieSAtPmRlY29kZV9maCgpIHZpYQotICog
ZnMvZXhwb3J0ZnMvZXhwZnMuYzo6ZmluZF9leHBvcnRlZF9kZW50cnkoKSkgYXMgdGhhdCBpcyBj
b21wbGV0ZWx5IGZzCi0gKiBpbmRlcGVuZGVudC4KLSAqCi0gKiBUaGUgZGVmYXVsdCAtPmdldF9w
YXJlbnQoKSBqdXN0IHJldHVybnMgLUVBQ0NFUyBzbyB3ZSBoYXZlIHRvIHByb3ZpZGUgb3VyCi0g
KiBvd24gYW5kIHRoZSBkZWZhdWx0IC0+Z2V0X2RlbnRyeSgpIGlzIGluY29tcGF0aWJsZSB3aXRo
IE5URlMgZHVlIHRvIG5vdAotICogYWxsb3dpbmcgdGhlIGlub2RlIG51bWJlciAwIHdoaWNoIGlz
IHVzZWQgaW4gTlRGUyBmb3IgdGhlIHN5c3RlbSBmaWxlICRNRlQKLSAqIGFuZCBkdWUgdG8gdXNp
bmcgaWdldCgpIHdoZXJlYXMgTlRGUyBuZWVkcyBudGZzX2lnZXQoKS4KLSAqLwotY29uc3Qgc3Ry
dWN0IGV4cG9ydF9vcGVyYXRpb25zIG50ZnNfZXhwb3J0X29wcyA9IHsKLQkuZW5jb2RlX2ZoCT0g
Z2VuZXJpY19lbmNvZGVfaW5vMzJfZmgsCi0JLmdldF9wYXJlbnQJPSBudGZzX2dldF9wYXJlbnQs
CS8qIEZpbmQgdGhlIHBhcmVudCBvZiBhIGdpdmVuCi0JCQkJCQkgICBkaXJlY3RvcnkuICovCi0J
LmZoX3RvX2RlbnRyeQk9IG50ZnNfZmhfdG9fZGVudHJ5LAotCS5maF90b19wYXJlbnQJPSBudGZz
X2ZoX3RvX3BhcmVudCwKLX07CmRpZmYgLS1naXQgYS9mcy9udGZzL250ZnMuaCBiL2ZzL250ZnMv
bnRmcy5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCBlODEzNzZlYTkxNTIuLjAwMDAw
MDAwMDAwMAotLS0gYS9mcy9udGZzL250ZnMuaAorKysgL2Rldi9udWxsCkBAIC0xLDE1MCArMCww
IEBACi0vKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlciAqLwotLyoK
LSAqIG50ZnMuaCAtIERlZmluZXMgZm9yIE5URlMgTGludXgga2VybmVsIGRyaXZlci4KLSAqCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAxNCBBbnRvbiBBbHRhcGFybWFrb3YgYW5kIFR1eGVyYSBJ
bmMuCi0gKiBDb3B5cmlnaHQgKEMpIDIwMDIgUmljaGFyZCBSdXNzb24KLSAqLwotCi0jaWZuZGVm
IF9MSU5VWF9OVEZTX0gKLSNkZWZpbmUgX0xJTlVYX05URlNfSAotCi0jaW5jbHVkZSA8bGludXgv
c3RkZGVmLmg+Ci0jaW5jbHVkZSA8bGludXgva2VybmVsLmg+Ci0jaW5jbHVkZSA8bGludXgvbW9k
dWxlLmg+Ci0jaW5jbHVkZSA8bGludXgvY29tcGlsZXIuaD4KLSNpbmNsdWRlIDxsaW51eC9mcy5o
PgotI2luY2x1ZGUgPGxpbnV4L25scy5oPgotI2luY2x1ZGUgPGxpbnV4L3NtcC5oPgotI2luY2x1
ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KLQotI2luY2x1ZGUgInR5cGVzLmgiCi0jaW5jbHVkZSAidm9s
dW1lLmgiCi0jaW5jbHVkZSAibGF5b3V0LmgiCi0KLXR5cGVkZWYgZW51bSB7Ci0JTlRGU19CTE9D
S19TSVpFCQk9IDUxMiwKLQlOVEZTX0JMT0NLX1NJWkVfQklUUwk9IDksCi0JTlRGU19TQl9NQUdJ
QwkJPSAweDUzNDY1NDRlLAkvKiAnTlRGUycgKi8KLQlOVEZTX01BWF9OQU1FX0xFTgk9IDI1NSwK
LQlOVEZTX01BWF9BVFRSX05BTUVfTEVOCT0gMjU1LAotCU5URlNfTUFYX0NMVVNURVJfU0laRQk9
IDY0ICogMTAyNCwJLyogNjRraUIgKi8KLQlOVEZTX01BWF9QQUdFU19QRVJfQ0xVU1RFUiA9IE5U
RlNfTUFYX0NMVVNURVJfU0laRSAvIFBBR0VfU0laRSwKLX0gTlRGU19DT05TVEFOVFM7Ci0KLS8q
IEdsb2JhbCB2YXJpYWJsZXMuICovCi0KLS8qIFNsYWIgY2FjaGVzIChmcm9tIHN1cGVyLmMpLiAq
LwotZXh0ZXJuIHN0cnVjdCBrbWVtX2NhY2hlICpudGZzX25hbWVfY2FjaGU7Ci1leHRlcm4gc3Ry
dWN0IGttZW1fY2FjaGUgKm50ZnNfaW5vZGVfY2FjaGU7Ci1leHRlcm4gc3RydWN0IGttZW1fY2Fj
aGUgKm50ZnNfYmlnX2lub2RlX2NhY2hlOwotZXh0ZXJuIHN0cnVjdCBrbWVtX2NhY2hlICpudGZz
X2F0dHJfY3R4X2NhY2hlOwotZXh0ZXJuIHN0cnVjdCBrbWVtX2NhY2hlICpudGZzX2luZGV4X2N0
eF9jYWNoZTsKLQotLyogVGhlIHZhcmlvdXMgb3BlcmF0aW9ucyBzdHJ1Y3RzIGRlZmluZWQgdGhy
b3VnaG91dCB0aGUgZHJpdmVyIGZpbGVzLiAqLwotZXh0ZXJuIGNvbnN0IHN0cnVjdCBhZGRyZXNz
X3NwYWNlX29wZXJhdGlvbnMgbnRmc19ub3JtYWxfYW9wczsKLWV4dGVybiBjb25zdCBzdHJ1Y3Qg
YWRkcmVzc19zcGFjZV9vcGVyYXRpb25zIG50ZnNfY29tcHJlc3NlZF9hb3BzOwotZXh0ZXJuIGNv
bnN0IHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMgbnRmc19tc3RfYW9wczsKLQotZXh0
ZXJuIGNvbnN0IHN0cnVjdCAgZmlsZV9vcGVyYXRpb25zIG50ZnNfZmlsZV9vcHM7Ci1leHRlcm4g
Y29uc3Qgc3RydWN0IGlub2RlX29wZXJhdGlvbnMgbnRmc19maWxlX2lub2RlX29wczsKLQotZXh0
ZXJuIGNvbnN0IHN0cnVjdCAgZmlsZV9vcGVyYXRpb25zIG50ZnNfZGlyX29wczsKLWV4dGVybiBj
b25zdCBzdHJ1Y3QgaW5vZGVfb3BlcmF0aW9ucyBudGZzX2Rpcl9pbm9kZV9vcHM7Ci0KLWV4dGVy
biBjb25zdCBzdHJ1Y3QgIGZpbGVfb3BlcmF0aW9ucyBudGZzX2VtcHR5X2ZpbGVfb3BzOwotZXh0
ZXJuIGNvbnN0IHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIG50ZnNfZW1wdHlfaW5vZGVfb3BzOwot
Ci1leHRlcm4gY29uc3Qgc3RydWN0IGV4cG9ydF9vcGVyYXRpb25zIG50ZnNfZXhwb3J0X29wczsK
LQotLyoqCi0gKiBOVEZTX1NCIC0gcmV0dXJuIHRoZSBudGZzIHZvbHVtZSBnaXZlbiBhIHZmcyBz
dXBlciBibG9jawotICogQHNiOgkJVkZTIHN1cGVyIGJsb2NrCi0gKgotICogTlRGU19TQigpIHJl
dHVybnMgdGhlIG50ZnMgdm9sdW1lIGFzc29jaWF0ZWQgd2l0aCB0aGUgVkZTIHN1cGVyIGJsb2Nr
IEBzYi4KLSAqLwotc3RhdGljIGlubGluZSBudGZzX3ZvbHVtZSAqTlRGU19TQihzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnNiKQotewotCXJldHVybiBzYi0+c19mc19pbmZvOwotfQotCi0vKiBEZWNsYXJh
dGlvbnMgb2YgZnVuY3Rpb25zIGFuZCBnbG9iYWwgdmFyaWFibGVzLiAqLwotCi0vKiBGcm9tIGZz
L250ZnMvY29tcHJlc3MuYyAqLwotZXh0ZXJuIGludCBudGZzX3JlYWRfY29tcHJlc3NlZF9ibG9j
ayhzdHJ1Y3QgcGFnZSAqcGFnZSk7Ci1leHRlcm4gaW50IGFsbG9jYXRlX2NvbXByZXNzaW9uX2J1
ZmZlcnModm9pZCk7Ci1leHRlcm4gdm9pZCBmcmVlX2NvbXByZXNzaW9uX2J1ZmZlcnModm9pZCk7
Ci0KLS8qIEZyb20gZnMvbnRmcy9zdXBlci5jICovCi0jZGVmaW5lIGRlZmF1bHRfdXBjYXNlX2xl
biAweDEwMDAwCi1leHRlcm4gc3RydWN0IG11dGV4IG50ZnNfbG9jazsKLQotdHlwZWRlZiBzdHJ1
Y3QgewotCWludCB2YWw7Ci0JY2hhciAqc3RyOwotfSBvcHRpb25fdDsKLWV4dGVybiBjb25zdCBv
cHRpb25fdCBvbl9lcnJvcnNfYXJyW107Ci0KLS8qIEZyb20gZnMvbnRmcy9tc3QuYyAqLwotZXh0
ZXJuIGludCBwb3N0X3JlYWRfbXN0X2ZpeHVwKE5URlNfUkVDT1JEICpiLCBjb25zdCB1MzIgc2l6
ZSk7Ci1leHRlcm4gaW50IHByZV93cml0ZV9tc3RfZml4dXAoTlRGU19SRUNPUkQgKmIsIGNvbnN0
IHUzMiBzaXplKTsKLWV4dGVybiB2b2lkIHBvc3Rfd3JpdGVfbXN0X2ZpeHVwKE5URlNfUkVDT1JE
ICpiKTsKLQotLyogRnJvbSBmcy9udGZzL3VuaXN0ci5jICovCi1leHRlcm4gYm9vbCBudGZzX2Fy
ZV9uYW1lc19lcXVhbChjb25zdCBudGZzY2hhciAqczEsIHNpemVfdCBzMV9sZW4sCi0JCWNvbnN0
IG50ZnNjaGFyICpzMiwgc2l6ZV90IHMyX2xlbiwKLQkJY29uc3QgSUdOT1JFX0NBU0VfQk9PTCBp
YywKLQkJY29uc3QgbnRmc2NoYXIgKnVwY2FzZSwgY29uc3QgdTMyIHVwY2FzZV9zaXplKTsKLWV4
dGVybiBpbnQgbnRmc19jb2xsYXRlX25hbWVzKGNvbnN0IG50ZnNjaGFyICpuYW1lMSwgY29uc3Qg
dTMyIG5hbWUxX2xlbiwKLQkJY29uc3QgbnRmc2NoYXIgKm5hbWUyLCBjb25zdCB1MzIgbmFtZTJf
bGVuLAotCQljb25zdCBpbnQgZXJyX3ZhbCwgY29uc3QgSUdOT1JFX0NBU0VfQk9PTCBpYywKLQkJ
Y29uc3QgbnRmc2NoYXIgKnVwY2FzZSwgY29uc3QgdTMyIHVwY2FzZV9sZW4pOwotZXh0ZXJuIGlu
dCBudGZzX3Vjc25jbXAoY29uc3QgbnRmc2NoYXIgKnMxLCBjb25zdCBudGZzY2hhciAqczIsIHNp
emVfdCBuKTsKLWV4dGVybiBpbnQgbnRmc191Y3NuY2FzZWNtcChjb25zdCBudGZzY2hhciAqczEs
IGNvbnN0IG50ZnNjaGFyICpzMiwgc2l6ZV90IG4sCi0JCWNvbnN0IG50ZnNjaGFyICp1cGNhc2Us
IGNvbnN0IHUzMiB1cGNhc2Vfc2l6ZSk7Ci1leHRlcm4gdm9pZCBudGZzX3VwY2FzZV9uYW1lKG50
ZnNjaGFyICpuYW1lLCB1MzIgbmFtZV9sZW4sCi0JCWNvbnN0IG50ZnNjaGFyICp1cGNhc2UsIGNv
bnN0IHUzMiB1cGNhc2VfbGVuKTsKLWV4dGVybiB2b2lkIG50ZnNfZmlsZV91cGNhc2VfdmFsdWUo
RklMRV9OQU1FX0FUVFIgKmZpbGVfbmFtZV9hdHRyLAotCQljb25zdCBudGZzY2hhciAqdXBjYXNl
LCBjb25zdCB1MzIgdXBjYXNlX2xlbik7Ci1leHRlcm4gaW50IG50ZnNfZmlsZV9jb21wYXJlX3Zh
bHVlcyhGSUxFX05BTUVfQVRUUiAqZmlsZV9uYW1lX2F0dHIxLAotCQlGSUxFX05BTUVfQVRUUiAq
ZmlsZV9uYW1lX2F0dHIyLAotCQljb25zdCBpbnQgZXJyX3ZhbCwgY29uc3QgSUdOT1JFX0NBU0Vf
Qk9PTCBpYywKLQkJY29uc3QgbnRmc2NoYXIgKnVwY2FzZSwgY29uc3QgdTMyIHVwY2FzZV9sZW4p
OwotZXh0ZXJuIGludCBudGZzX25sc3RvdWNzKGNvbnN0IG50ZnNfdm9sdW1lICp2b2wsIGNvbnN0
IGNoYXIgKmlucywKLQkJY29uc3QgaW50IGluc19sZW4sIG50ZnNjaGFyICoqb3V0cyk7Ci1leHRl
cm4gaW50IG50ZnNfdWNzdG9ubHMoY29uc3QgbnRmc192b2x1bWUgKnZvbCwgY29uc3QgbnRmc2No
YXIgKmlucywKLQkJY29uc3QgaW50IGluc19sZW4sIHVuc2lnbmVkIGNoYXIgKipvdXRzLCBpbnQg
b3V0c19sZW4pOwotCi0vKiBGcm9tIGZzL250ZnMvdXBjYXNlLmMgKi8KLWV4dGVybiBudGZzY2hh
ciAqZ2VuZXJhdGVfZGVmYXVsdF91cGNhc2Uodm9pZCk7Ci0KLXN0YXRpYyBpbmxpbmUgaW50IG50
ZnNfZmZzKGludCB4KQotewotCWludCByID0gMTsKLQotCWlmICgheCkKLQkJcmV0dXJuIDA7Ci0J
aWYgKCEoeCAmIDB4ZmZmZikpIHsKLQkJeCA+Pj0gMTY7Ci0JCXIgKz0gMTY7Ci0JfQotCWlmICgh
KHggJiAweGZmKSkgewotCQl4ID4+PSA4OwotCQlyICs9IDg7Ci0JfQotCWlmICghKHggJiAweGYp
KSB7Ci0JCXggPj49IDQ7Ci0JCXIgKz0gNDsKLQl9Ci0JaWYgKCEoeCAmIDMpKSB7Ci0JCXggPj49
IDI7Ci0JCXIgKz0gMjsKLQl9Ci0JaWYgKCEoeCAmIDEpKSB7Ci0JCXggPj49IDE7Ci0JCXIgKz0g
MTsKLQl9Ci0JcmV0dXJuIHI7Ci19Ci0KLSNlbmRpZiAvKiBfTElOVVhfTlRGU19IICovCmRpZmYg
LS1naXQgYS9mcy9udGZzL3F1b3RhLmMgYi9mcy9udGZzL3F1b3RhLmMKZGVsZXRlZCBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDkxNjA0ODAyMjJmZC4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMv
cXVvdGEuYworKysgL2Rldi9udWxsCkBAIC0xLDEwMyArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2Ut
SWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgotLyoKLSAqIHF1b3RhLmMgLSBOVEZTIGtlcm5l
bCBxdW90YSAoJFF1b3RhKSBoYW5kbGluZy4gIFBhcnQgb2YgdGhlIExpbnV4LU5URlMKLSAqCSAg
ICAgcHJvamVjdC4KLSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDQgQW50b24gQWx0YXBhcm1ha292
Ci0gKi8KLQotI2lmZGVmIE5URlNfUlcKLQotI2luY2x1ZGUgImluZGV4LmgiCi0jaW5jbHVkZSAi
cXVvdGEuaCIKLSNpbmNsdWRlICJkZWJ1Zy5oIgotI2luY2x1ZGUgIm50ZnMuaCIKLQotLyoqCi0g
KiBudGZzX21hcmtfcXVvdGFzX291dF9vZl9kYXRlIC0gbWFyayB0aGUgcXVvdGFzIG91dCBvZiBk
YXRlIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAdm9sOgludGZzIHZvbHVtZSBvbiB3aGljaCB0byBt
YXJrIHRoZSBxdW90YXMgb3V0IG9mIGRhdGUKLSAqCi0gKiBNYXJrIHRoZSBxdW90YXMgb3V0IG9m
IGRhdGUgb24gdGhlIG50ZnMgdm9sdW1lIEB2b2wgYW5kIHJldHVybiAndHJ1ZScgb24KLSAqIHN1
Y2Nlc3MgYW5kICdmYWxzZScgb24gZXJyb3IuCi0gKi8KLWJvb2wgbnRmc19tYXJrX3F1b3Rhc19v
dXRfb2ZfZGF0ZShudGZzX3ZvbHVtZSAqdm9sKQotewotCW50ZnNfaW5kZXhfY29udGV4dCAqaWN0
eDsKLQlRVU9UQV9DT05UUk9MX0VOVFJZICpxY2U7Ci0JY29uc3QgbGUzMiBxaWQgPSBRVU9UQV9E
RUZBVUxUU19JRDsKLQlpbnQgZXJyOwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JaWYg
KE5Wb2xRdW90YU91dE9mRGF0ZSh2b2wpKQotCQlnb3RvIGRvbmU7Ci0JaWYgKCF2b2wtPnF1b3Rh
X2lubyB8fCAhdm9sLT5xdW90YV9xX2lubykgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJRdW90
YSBpbm9kZXMgYXJlIG5vdCBvcGVuLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCWlub2RlX2xv
Y2sodm9sLT5xdW90YV9xX2lubyk7Ci0JaWN0eCA9IG50ZnNfaW5kZXhfY3R4X2dldChOVEZTX0ko
dm9sLT5xdW90YV9xX2lubykpOwotCWlmICghaWN0eCkgewotCQludGZzX2Vycm9yKHZvbC0+c2Is
ICJGYWlsZWQgdG8gZ2V0IGluZGV4IGNvbnRleHQuIik7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0J
ZXJyID0gbnRmc19pbmRleF9sb29rdXAoJnFpZCwgc2l6ZW9mKHFpZCksIGljdHgpOwotCWlmIChl
cnIpIHsKLQkJaWYgKGVyciA9PSAtRU5PRU5UKQotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiUXVv
dGEgZGVmYXVsdHMgZW50cnkgaXMgbm90ICIKLQkJCQkJInByZXNlbnQuIik7Ci0JCWVsc2UKLQkJ
CW50ZnNfZXJyb3Iodm9sLT5zYiwgIkxvb2t1cCBvZiBxdW90YSBkZWZhdWx0cyBlbnRyeSAiCi0J
CQkJCSJmYWlsZWQuIik7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JaWYgKGljdHgtPmRhdGFfbGVu
IDwgb2Zmc2V0b2YoUVVPVEFfQ09OVFJPTF9FTlRSWSwgc2lkKSkgewotCQludGZzX2Vycm9yKHZv
bC0+c2IsICJRdW90YSBkZWZhdWx0cyBlbnRyeSBzaXplIGlzIGludmFsaWQuICAiCi0JCQkJIlJ1
biBjaGtkc2suIik7Ci0JCWdvdG8gZXJyX291dDsKLQl9Ci0JcWNlID0gKFFVT1RBX0NPTlRST0xf
RU5UUlkqKWljdHgtPmRhdGE7Ci0JaWYgKGxlMzJfdG9fY3B1KHFjZS0+dmVyc2lvbikgIT0gUVVP
VEFfVkVSU0lPTikgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJRdW90YSBkZWZhdWx0cyBlbnRy
eSB2ZXJzaW9uIDB4JXggaXMgbm90ICIKLQkJCQkic3VwcG9ydGVkLiIsIGxlMzJfdG9fY3B1KHFj
ZS0+dmVyc2lvbikpOwotCQlnb3RvIGVycl9vdXQ7Ci0JfQotCW50ZnNfZGVidWcoIlF1b3RhIGRl
ZmF1bHRzIGZsYWdzID0gMHgleC4iLCBsZTMyX3RvX2NwdShxY2UtPmZsYWdzKSk7Ci0JLyogSWYg
cXVvdGFzIGFyZSBhbHJlYWR5IG1hcmtlZCBvdXQgb2YgZGF0ZSwgbm8gbmVlZCB0byBkbyBhbnl0
aGluZy4gKi8KLQlpZiAocWNlLT5mbGFncyAmIFFVT1RBX0ZMQUdfT1VUX09GX0RBVEUpCi0JCWdv
dG8gc2V0X2RvbmU7Ci0JLyoKLQkgKiBJZiBxdW90YSB0cmFja2luZyBpcyBuZWl0aGVyIHJlcXVl
c3RlZCwgbm9yIGVuYWJsZWQgYW5kIHRoZXJlIGFyZSBubwotCSAqIHBlbmRpbmcgZGVsZXRlcywg
bm8gbmVlZCB0byBtYXJrIHRoZSBxdW90YXMgb3V0IG9mIGRhdGUuCi0JICovCi0JaWYgKCEocWNl
LT5mbGFncyAmIChRVU9UQV9GTEFHX1RSQUNLSU5HX0VOQUJMRUQgfAotCQkJUVVPVEFfRkxBR19U
UkFDS0lOR19SRVFVRVNURUQgfAotCQkJUVVPVEFfRkxBR19QRU5ESU5HX0RFTEVURVMpKSkKLQkJ
Z290byBzZXRfZG9uZTsKLQkvKgotCSAqIFNldCB0aGUgUVVPVEFfRkxBR19PVVRfT0ZfREFURSBi
aXQgdGh1cyBtYXJraW5nIHF1b3RhcyBvdXQgb2YgZGF0ZS4KLQkgKiBUaGlzIGlzIHZlcmlmaWVk
IG9uIFdpblhQIHRvIGJlIHN1ZmZpY2llbnQgdG8gY2F1c2Ugd2luZG93cyB0bwotCSAqIHJlc2Nh
biB0aGUgdm9sdW1lIG9uIGJvb3QgYW5kIHVwZGF0ZSBhbGwgcXVvdGEgZW50cmllcy4KLQkgKi8K
LQlxY2UtPmZsYWdzIHw9IFFVT1RBX0ZMQUdfT1VUX09GX0RBVEU7Ci0JLyogRW5zdXJlIHRoZSBt
b2RpZmllZCBmbGFncyBhcmUgd3JpdHRlbiB0byBkaXNrLiAqLwotCW50ZnNfaW5kZXhfZW50cnlf
Zmx1c2hfZGNhY2hlX3BhZ2UoaWN0eCk7Ci0JbnRmc19pbmRleF9lbnRyeV9tYXJrX2RpcnR5KGlj
dHgpOwotc2V0X2RvbmU6Ci0JbnRmc19pbmRleF9jdHhfcHV0KGljdHgpOwotCWlub2RlX3VubG9j
ayh2b2wtPnF1b3RhX3FfaW5vKTsKLQkvKgotCSAqIFdlIHNldCB0aGUgZmxhZyBzbyB3ZSBkbyBu
b3QgdHJ5IHRvIG1hcmsgdGhlIHF1b3RhcyBvdXQgb2YgZGF0ZQotCSAqIGFnYWluIG9uIHJlbW91
bnQuCi0JICovCi0JTlZvbFNldFF1b3RhT3V0T2ZEYXRlKHZvbCk7Ci1kb25lOgotCW50ZnNfZGVi
dWcoIkRvbmUuIik7Ci0JcmV0dXJuIHRydWU7Ci1lcnJfb3V0OgotCWlmIChpY3R4KQotCQludGZz
X2luZGV4X2N0eF9wdXQoaWN0eCk7Ci0JaW5vZGVfdW5sb2NrKHZvbC0+cXVvdGFfcV9pbm8pOwot
CXJldHVybiBmYWxzZTsKLX0KLQotI2VuZGlmIC8qIE5URlNfUlcgKi8KZGlmZiAtLWdpdCBhL2Zz
L250ZnMvcXVvdGEuaCBiL2ZzL250ZnMvcXVvdGEuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggZmUzMTMyYTNkNmQyLi4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9xdW90YS5oCisr
KyAvZGV2L251bGwKQEAgLTEsMjEgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiBxdW90YS5oIC0gRGVmaW5lcyBmb3IgTlRGUyBr
ZXJuZWwgcXVvdGEgKCRRdW90YSkgaGFuZGxpbmcuICBQYXJ0IG9mIHRoZQotICoJICAgICBMaW51
eC1OVEZTIHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAyMDA0IEFudG9uIEFsdGFwYXJt
YWtvdgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfUVVPVEFfSAotI2RlZmluZSBfTElOVVhf
TlRGU19RVU9UQV9ICi0KLSNpZmRlZiBOVEZTX1JXCi0KLSNpbmNsdWRlICJ0eXBlcy5oIgotI2lu
Y2x1ZGUgInZvbHVtZS5oIgotCi1leHRlcm4gYm9vbCBudGZzX21hcmtfcXVvdGFzX291dF9vZl9k
YXRlKG50ZnNfdm9sdW1lICp2b2wpOwotCi0jZW5kaWYgLyogTlRGU19SVyAqLwotCi0jZW5kaWYg
LyogX0xJTlVYX05URlNfUVVPVEFfSCAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9ydW5saXN0LmMg
Yi9mcy9udGZzL3J1bmxpc3QuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMGQ0NDhl
OTg4MWY3Li4wMDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9ydW5saXN0LmMKKysrIC9kZXYvbnVs
bApAQCAtMSwxODkzICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4w
LW9yLWxhdGVyCi0vKgotICogcnVubGlzdC5jIC0gTlRGUyBydW5saXN0IGhhbmRsaW5nIGNvZGUu
ICBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTIHByb2plY3QuCi0gKgotICogQ29weXJpZ2h0IChjKSAy
MDAxLTIwMDcgQW50b24gQWx0YXBhcm1ha292Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDItMjAwNSBS
aWNoYXJkIFJ1c3NvbgotICovCi0KLSNpbmNsdWRlICJkZWJ1Zy5oIgotI2luY2x1ZGUgImRpci5o
IgotI2luY2x1ZGUgImVuZGlhbi5oIgotI2luY2x1ZGUgIm1hbGxvYy5oIgotI2luY2x1ZGUgIm50
ZnMuaCIKLQotLyoqCi0gKiBudGZzX3JsX21tIC0gcnVubGlzdCBtZW1tb3ZlCi0gKgotICogSXQg
aXMgdXAgdG8gdGhlIGNhbGxlciB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHRoZSBydW5saXN0IEBi
YXNlLgotICovCi1zdGF0aWMgaW5saW5lIHZvaWQgbnRmc19ybF9tbShydW5saXN0X2VsZW1lbnQg
KmJhc2UsIGludCBkc3QsIGludCBzcmMsCi0JCWludCBzaXplKQotewotCWlmIChsaWtlbHkoKGRz
dCAhPSBzcmMpICYmIChzaXplID4gMCkpKQotCQltZW1tb3ZlKGJhc2UgKyBkc3QsIGJhc2UgKyBz
cmMsIHNpemUgKiBzaXplb2YoKmJhc2UpKTsKLX0KLQotLyoqCi0gKiBudGZzX3JsX21jIC0gcnVu
bGlzdCBtZW1vcnkgY29weQotICoKLSAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gc2VyaWFs
aXplIGFjY2VzcyB0byB0aGUgcnVubGlzdHMgQGRzdGJhc2UgYW5kCi0gKiBAc3JjYmFzZS4KLSAq
Lwotc3RhdGljIGlubGluZSB2b2lkIG50ZnNfcmxfbWMocnVubGlzdF9lbGVtZW50ICpkc3RiYXNl
LCBpbnQgZHN0LAotCQlydW5saXN0X2VsZW1lbnQgKnNyY2Jhc2UsIGludCBzcmMsIGludCBzaXpl
KQotewotCWlmIChsaWtlbHkoc2l6ZSA+IDApKQotCQltZW1jcHkoZHN0YmFzZSArIGRzdCwgc3Jj
YmFzZSArIHNyYywgc2l6ZSAqIHNpemVvZigqZHN0YmFzZSkpOwotfQotCi0vKioKLSAqIG50ZnNf
cmxfcmVhbGxvYyAtIFJlYWxsb2NhdGUgbWVtb3J5IGZvciBydW5saXN0cwotICogQHJsOgkJb3Jp
Z2luYWwgcnVubGlzdAotICogQG9sZF9zaXplOgludW1iZXIgb2YgcnVubGlzdCBlbGVtZW50cyBp
biB0aGUgb3JpZ2luYWwgcnVubGlzdCBAcmwKLSAqIEBuZXdfc2l6ZToJbnVtYmVyIG9mIHJ1bmxp
c3QgZWxlbWVudHMgd2UgbmVlZCBzcGFjZSBmb3IKLSAqCi0gKiBBcyB0aGUgcnVubGlzdHMgZ3Jv
dywgbW9yZSBtZW1vcnkgd2lsbCBiZSByZXF1aXJlZC4gIFRvIHByZXZlbnQgdGhlCi0gKiBrZXJu
ZWwgaGF2aW5nIHRvIGFsbG9jYXRlIGFuZCByZWFsbG9jYXRlIGxhcmdlIG51bWJlcnMgb2Ygc21h
bGwgYml0cyBvZgotICogbWVtb3J5LCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gZW50aXJlIHBh
Z2Ugb2YgbWVtb3J5LgotICoKLSAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gc2VyaWFsaXpl
IGFjY2VzcyB0byB0aGUgcnVubGlzdCBAcmwuCi0gKgotICogTi5CLiAgSWYgdGhlIG5ldyBhbGxv
Y2F0aW9uIGRvZXNuJ3QgcmVxdWlyZSBhIGRpZmZlcmVudCBudW1iZXIgb2YgcGFnZXMgaW4KLSAq
ICAgICAgIG1lbW9yeSwgdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBvcmlnaW5hbCBwb2lu
dGVyLgotICoKLSAqIE9uIHN1Y2Nlc3MsIHJldHVybiBhIHBvaW50ZXIgdG8gdGhlIG5ld2x5IGFs
bG9jYXRlZCwgb3IgcmVjeWNsZWQsIG1lbW9yeS4KLSAqIE9uIGVycm9yLCByZXR1cm4gLWVycm5v
LiBUaGUgZm9sbG93aW5nIGVycm9yIGNvZGVzIGFyZSBkZWZpbmVkOgotICoJLUVOT01FTQktIE5v
dCBlbm91Z2ggbWVtb3J5IHRvIGFsbG9jYXRlIHJ1bmxpc3QgYXJyYXkuCi0gKgktRUlOVkFMCS0g
SW52YWxpZCBwYXJhbWV0ZXJzIHdlcmUgcGFzc2VkIGluLgotICovCi1zdGF0aWMgaW5saW5lIHJ1
bmxpc3RfZWxlbWVudCAqbnRmc19ybF9yZWFsbG9jKHJ1bmxpc3RfZWxlbWVudCAqcmwsCi0JCWlu
dCBvbGRfc2l6ZSwgaW50IG5ld19zaXplKQotewotCXJ1bmxpc3RfZWxlbWVudCAqbmV3X3JsOwot
Ci0Jb2xkX3NpemUgPSBQQUdFX0FMSUdOKG9sZF9zaXplICogc2l6ZW9mKCpybCkpOwotCW5ld19z
aXplID0gUEFHRV9BTElHTihuZXdfc2l6ZSAqIHNpemVvZigqcmwpKTsKLQlpZiAob2xkX3NpemUg
PT0gbmV3X3NpemUpCi0JCXJldHVybiBybDsKLQotCW5ld19ybCA9IG50ZnNfbWFsbG9jX25vZnMo
bmV3X3NpemUpOwotCWlmICh1bmxpa2VseSghbmV3X3JsKSkKLQkJcmV0dXJuIEVSUl9QVFIoLUVO
T01FTSk7Ci0KLQlpZiAobGlrZWx5KHJsICE9IE5VTEwpKSB7Ci0JCWlmICh1bmxpa2VseShvbGRf
c2l6ZSA+IG5ld19zaXplKSkKLQkJCW9sZF9zaXplID0gbmV3X3NpemU7Ci0JCW1lbWNweShuZXdf
cmwsIHJsLCBvbGRfc2l6ZSk7Ci0JCW50ZnNfZnJlZShybCk7Ci0JfQotCXJldHVybiBuZXdfcmw7
Ci19Ci0KLS8qKgotICogbnRmc19ybF9yZWFsbG9jX25vZmFpbCAtIFJlYWxsb2NhdGUgbWVtb3J5
IGZvciBydW5saXN0cwotICogQHJsOgkJb3JpZ2luYWwgcnVubGlzdAotICogQG9sZF9zaXplOglu
dW1iZXIgb2YgcnVubGlzdCBlbGVtZW50cyBpbiB0aGUgb3JpZ2luYWwgcnVubGlzdCBAcmwKLSAq
IEBuZXdfc2l6ZToJbnVtYmVyIG9mIHJ1bmxpc3QgZWxlbWVudHMgd2UgbmVlZCBzcGFjZSBmb3IK
LSAqCi0gKiBBcyB0aGUgcnVubGlzdHMgZ3JvdywgbW9yZSBtZW1vcnkgd2lsbCBiZSByZXF1aXJl
ZC4gIFRvIHByZXZlbnQgdGhlCi0gKiBrZXJuZWwgaGF2aW5nIHRvIGFsbG9jYXRlIGFuZCByZWFs
bG9jYXRlIGxhcmdlIG51bWJlcnMgb2Ygc21hbGwgYml0cyBvZgotICogbWVtb3J5LCB0aGlzIGZ1
bmN0aW9uIHJldHVybnMgYW4gZW50aXJlIHBhZ2Ugb2YgbWVtb3J5LgotICoKLSAqIFRoaXMgZnVu
Y3Rpb24gZ3VhcmFudGVlcyB0aGF0IHRoZSBhbGxvY2F0aW9uIHdpbGwgc3VjY2VlZC4gIEl0IHdp
bGwgc2xlZXAKLSAqIGZvciBhcyBsb25nIGFzIGl0IHRha2VzIHRvIGNvbXBsZXRlIHRoZSBhbGxv
Y2F0aW9uLgotICoKLSAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gc2VyaWFsaXplIGFjY2Vz
cyB0byB0aGUgcnVubGlzdCBAcmwuCi0gKgotICogTi5CLiAgSWYgdGhlIG5ldyBhbGxvY2F0aW9u
IGRvZXNuJ3QgcmVxdWlyZSBhIGRpZmZlcmVudCBudW1iZXIgb2YgcGFnZXMgaW4KLSAqICAgICAg
IG1lbW9yeSwgdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBvcmlnaW5hbCBwb2ludGVyLgot
ICoKLSAqIE9uIHN1Y2Nlc3MsIHJldHVybiBhIHBvaW50ZXIgdG8gdGhlIG5ld2x5IGFsbG9jYXRl
ZCwgb3IgcmVjeWNsZWQsIG1lbW9yeS4KLSAqIE9uIGVycm9yLCByZXR1cm4gLWVycm5vLiBUaGUg
Zm9sbG93aW5nIGVycm9yIGNvZGVzIGFyZSBkZWZpbmVkOgotICoJLUVOT01FTQktIE5vdCBlbm91
Z2ggbWVtb3J5IHRvIGFsbG9jYXRlIHJ1bmxpc3QgYXJyYXkuCi0gKgktRUlOVkFMCS0gSW52YWxp
ZCBwYXJhbWV0ZXJzIHdlcmUgcGFzc2VkIGluLgotICovCi1zdGF0aWMgaW5saW5lIHJ1bmxpc3Rf
ZWxlbWVudCAqbnRmc19ybF9yZWFsbG9jX25vZmFpbChydW5saXN0X2VsZW1lbnQgKnJsLAotCQlp
bnQgb2xkX3NpemUsIGludCBuZXdfc2l6ZSkKLXsKLQlydW5saXN0X2VsZW1lbnQgKm5ld19ybDsK
LQotCW9sZF9zaXplID0gUEFHRV9BTElHTihvbGRfc2l6ZSAqIHNpemVvZigqcmwpKTsKLQluZXdf
c2l6ZSA9IFBBR0VfQUxJR04obmV3X3NpemUgKiBzaXplb2YoKnJsKSk7Ci0JaWYgKG9sZF9zaXpl
ID09IG5ld19zaXplKQotCQlyZXR1cm4gcmw7Ci0KLQluZXdfcmwgPSBudGZzX21hbGxvY19ub2Zz
X25vZmFpbChuZXdfc2l6ZSk7Ci0JQlVHX09OKCFuZXdfcmwpOwotCi0JaWYgKGxpa2VseShybCAh
PSBOVUxMKSkgewotCQlpZiAodW5saWtlbHkob2xkX3NpemUgPiBuZXdfc2l6ZSkpCi0JCQlvbGRf
c2l6ZSA9IG5ld19zaXplOwotCQltZW1jcHkobmV3X3JsLCBybCwgb2xkX3NpemUpOwotCQludGZz
X2ZyZWUocmwpOwotCX0KLQlyZXR1cm4gbmV3X3JsOwotfQotCi0vKioKLSAqIG50ZnNfYXJlX3Js
X21lcmdlYWJsZSAtIHRlc3QgaWYgdHdvIHJ1bmxpc3RzIGNhbiBiZSBqb2luZWQgdG9nZXRoZXIK
LSAqIEBkc3Q6CW9yaWdpbmFsIHJ1bmxpc3QKLSAqIEBzcmM6CW5ldyBydW5saXN0IHRvIHRlc3Qg
Zm9yIG1lcmdlYWJpbGl0eSB3aXRoIEBkc3QKLSAqCi0gKiBUZXN0IGlmIHR3byBydW5saXN0cyBj
YW4gYmUgam9pbmVkIHRvZ2V0aGVyLiBGb3IgdGhpcywgdGhlaXIgVkNOcyBhbmQgTENOcwotICog
bXVzdCBiZSBhZGphY2VudC4KLSAqCi0gKiBJdCBpcyB1cCB0byB0aGUgY2FsbGVyIHRvIHNlcmlh
bGl6ZSBhY2Nlc3MgdG8gdGhlIHJ1bmxpc3RzIEBkc3QgYW5kIEBzcmMuCi0gKgotICogUmV0dXJu
OiB0cnVlICAgU3VjY2VzcywgdGhlIHJ1bmxpc3RzIGNhbiBiZSBtZXJnZWQuCi0gKgkgICBmYWxz
ZSAgRmFpbHVyZSwgdGhlIHJ1bmxpc3RzIGNhbm5vdCBiZSBtZXJnZWQuCi0gKi8KLXN0YXRpYyBp
bmxpbmUgYm9vbCBudGZzX2FyZV9ybF9tZXJnZWFibGUocnVubGlzdF9lbGVtZW50ICpkc3QsCi0J
CXJ1bmxpc3RfZWxlbWVudCAqc3JjKQotewotCUJVR19PTighZHN0KTsKLQlCVUdfT04oIXNyYyk7
Ci0KLQkvKiBXZSBjYW4gbWVyZ2UgdW5tYXBwZWQgcmVnaW9ucyBldmVuIGlmIHRoZXkgYXJlIG1p
c2FsaWduZWQuICovCi0JaWYgKChkc3QtPmxjbiA9PSBMQ05fUkxfTk9UX01BUFBFRCkgJiYgKHNy
Yy0+bGNuID09IExDTl9STF9OT1RfTUFQUEVEKSkKLQkJcmV0dXJuIHRydWU7Ci0JLyogSWYgdGhl
IHJ1bnMgYXJlIG1pc2FsaWduZWQsIHdlIGNhbm5vdCBtZXJnZSB0aGVtLiAqLwotCWlmICgoZHN0
LT52Y24gKyBkc3QtPmxlbmd0aCkgIT0gc3JjLT52Y24pCi0JCXJldHVybiBmYWxzZTsKLQkvKiBJ
ZiBib3RoIHJ1bnMgYXJlIG5vbi1zcGFyc2UgYW5kIGNvbnRpZ3VvdXMsIHdlIGNhbiBtZXJnZSB0
aGVtLiAqLwotCWlmICgoZHN0LT5sY24gPj0gMCkgJiYgKHNyYy0+bGNuID49IDApICYmCi0JCQko
KGRzdC0+bGNuICsgZHN0LT5sZW5ndGgpID09IHNyYy0+bGNuKSkKLQkJcmV0dXJuIHRydWU7Ci0J
LyogSWYgd2UgYXJlIG1lcmdpbmcgdHdvIGhvbGVzLCB3ZSBjYW4gbWVyZ2UgdGhlbS4gKi8KLQlp
ZiAoKGRzdC0+bGNuID09IExDTl9IT0xFKSAmJiAoc3JjLT5sY24gPT0gTENOX0hPTEUpKQotCQly
ZXR1cm4gdHJ1ZTsKLQkvKiBDYW5ub3QgbWVyZ2UuICovCi0JcmV0dXJuIGZhbHNlOwotfQotCi0v
KioKLSAqIF9fbnRmc19ybF9tZXJnZSAtIG1lcmdlIHR3byBydW5saXN0cyB3aXRob3V0IHRlc3Rp
bmcgaWYgdGhleSBjYW4gYmUgbWVyZ2VkCi0gKiBAZHN0OglvcmlnaW5hbCwgZGVzdGluYXRpb24g
cnVubGlzdAotICogQHNyYzoJbmV3IHJ1bmxpc3QgdG8gbWVyZ2Ugd2l0aCBAZHN0Ci0gKgotICog
TWVyZ2UgdGhlIHR3byBydW5saXN0cywgd3JpdGluZyBpbnRvIHRoZSBkZXN0aW5hdGlvbiBydW5s
aXN0IEBkc3QuIFRoZQotICogY2FsbGVyIG11c3QgbWFrZSBzdXJlIHRoZSBydW5saXN0cyBjYW4g
YmUgbWVyZ2VkIG9yIHRoaXMgd2lsbCBjb3JydXB0IHRoZQotICogZGVzdGluYXRpb24gcnVubGlz
dC4KLSAqCi0gKiBJdCBpcyB1cCB0byB0aGUgY2FsbGVyIHRvIHNlcmlhbGl6ZSBhY2Nlc3MgdG8g
dGhlIHJ1bmxpc3RzIEBkc3QgYW5kIEBzcmMuCi0gKi8KLXN0YXRpYyBpbmxpbmUgdm9pZCBfX250
ZnNfcmxfbWVyZ2UocnVubGlzdF9lbGVtZW50ICpkc3QsIHJ1bmxpc3RfZWxlbWVudCAqc3JjKQot
ewotCWRzdC0+bGVuZ3RoICs9IHNyYy0+bGVuZ3RoOwotfQotCi0vKioKLSAqIG50ZnNfcmxfYXBw
ZW5kIC0gYXBwZW5kIGEgcnVubGlzdCBhZnRlciBhIGdpdmVuIGVsZW1lbnQKLSAqIEBkc3Q6CW9y
aWdpbmFsIHJ1bmxpc3QgdG8gYmUgd29ya2VkIG9uCi0gKiBAZHNpemU6CW51bWJlciBvZiBlbGVt
ZW50cyBpbiBAZHN0IChpbmNsdWRpbmcgZW5kIG1hcmtlcikKLSAqIEBzcmM6CXJ1bmxpc3QgdG8g
YmUgaW5zZXJ0ZWQgaW50byBAZHN0Ci0gKiBAc3NpemU6CW51bWJlciBvZiBlbGVtZW50cyBpbiBA
c3JjIChleGNsdWRpbmcgZW5kIG1hcmtlcikKLSAqIEBsb2M6CWFwcGVuZCB0aGUgbmV3IHJ1bmxp
c3QgQHNyYyBhZnRlciB0aGlzIGVsZW1lbnQgaW4gQGRzdAotICoKLSAqIEFwcGVuZCB0aGUgcnVu
bGlzdCBAc3JjIGFmdGVyIGVsZW1lbnQgQGxvYyBpbiBAZHN0LiAgTWVyZ2UgdGhlIHJpZ2h0IGVu
ZCBvZgotICogdGhlIG5ldyBydW5saXN0LCBpZiBuZWNlc3NhcnkuIEFkanVzdCB0aGUgc2l6ZSBv
ZiB0aGUgaG9sZSBiZWZvcmUgdGhlCi0gKiBhcHBlbmRlZCBydW5saXN0LgotICoKLSAqIEl0IGlz
IHVwIHRvIHRoZSBjYWxsZXIgdG8gc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcnVubGlzdHMgQGRz
dCBhbmQgQHNyYy4KLSAqCi0gKiBPbiBzdWNjZXNzLCByZXR1cm4gYSBwb2ludGVyIHRvIHRoZSBu
ZXcsIGNvbWJpbmVkLCBydW5saXN0LiBOb3RlLCBib3RoCi0gKiBydW5saXN0cyBAZHN0IGFuZCBA
c3JjIGFyZSBkZWFsbG9jYXRlZCBiZWZvcmUgcmV0dXJuaW5nIHNvIHlvdSBjYW5ub3QgdXNlCi0g
KiB0aGUgcG9pbnRlcnMgZm9yIGFueXRoaW5nIGFueSBtb3JlLiAoU3RyaWN0bHkgc3BlYWtpbmcg
dGhlIHJldHVybmVkIHJ1bmxpc3QKLSAqIG1heSBiZSB0aGUgc2FtZSBhcyBAZHN0IGJ1dCB0aGlz
IGlzIGlycmVsZXZhbnQuKQotICoKLSAqIE9uIGVycm9yLCByZXR1cm4gLWVycm5vLiBCb3RoIHJ1
bmxpc3RzIGFyZSBsZWZ0IHVubW9kaWZpZWQuIFRoZSBmb2xsb3dpbmcKLSAqIGVycm9yIGNvZGVz
IGFyZSBkZWZpbmVkOgotICoJLUVOT01FTQktIE5vdCBlbm91Z2ggbWVtb3J5IHRvIGFsbG9jYXRl
IHJ1bmxpc3QgYXJyYXkuCi0gKgktRUlOVkFMCS0gSW52YWxpZCBwYXJhbWV0ZXJzIHdlcmUgcGFz
c2VkIGluLgotICovCi1zdGF0aWMgaW5saW5lIHJ1bmxpc3RfZWxlbWVudCAqbnRmc19ybF9hcHBl
bmQocnVubGlzdF9lbGVtZW50ICpkc3QsCi0JCWludCBkc2l6ZSwgcnVubGlzdF9lbGVtZW50ICpz
cmMsIGludCBzc2l6ZSwgaW50IGxvYykKLXsKLQlib29sIHJpZ2h0ID0gZmFsc2U7CS8qIFJpZ2h0
IGVuZCBvZiBAc3JjIG5lZWRzIG1lcmdpbmcuICovCi0JaW50IG1hcmtlcjsJCS8qIEVuZCBvZiB0
aGUgaW5zZXJ0ZWQgcnVucy4gKi8KLQotCUJVR19PTighZHN0KTsKLQlCVUdfT04oIXNyYyk7Ci0K
LQkvKiBGaXJzdCwgY2hlY2sgaWYgdGhlIHJpZ2h0IGhhbmQgZW5kIG5lZWRzIG1lcmdpbmcuICov
Ci0JaWYgKChsb2MgKyAxKSA8IGRzaXplKQotCQlyaWdodCA9IG50ZnNfYXJlX3JsX21lcmdlYWJs
ZShzcmMgKyBzc2l6ZSAtIDEsIGRzdCArIGxvYyArIDEpOwotCi0JLyogU3BhY2UgcmVxdWlyZWQ6
IEBkc3Qgc2l6ZSArIEBzcmMgc2l6ZSwgbGVzcyBvbmUgaWYgd2UgbWVyZ2VkLiAqLwotCWRzdCA9
IG50ZnNfcmxfcmVhbGxvYyhkc3QsIGRzaXplLCBkc2l6ZSArIHNzaXplIC0gcmlnaHQpOwotCWlm
IChJU19FUlIoZHN0KSkKLQkJcmV0dXJuIGRzdDsKLQkvKgotCSAqIFdlIGFyZSBndWFyYW50ZWVk
IHRvIHN1Y2NlZWQgZnJvbSBoZXJlIHNvIGNhbiBzdGFydCBtb2RpZnlpbmcgdGhlCi0JICogb3Jp
Z2luYWwgcnVubGlzdHMuCi0JICovCi0KLQkvKiBGaXJzdCwgbWVyZ2UgdGhlIHJpZ2h0IGhhbmQg
ZW5kLCBpZiBuZWNlc3NhcnkuICovCi0JaWYgKHJpZ2h0KQotCQlfX250ZnNfcmxfbWVyZ2Uoc3Jj
ICsgc3NpemUgLSAxLCBkc3QgKyBsb2MgKyAxKTsKLQotCS8qIEZpcnN0IHJ1biBhZnRlciB0aGUg
QHNyYyBydW5zIHRoYXQgaGF2ZSBiZWVuIGluc2VydGVkLiAqLwotCW1hcmtlciA9IGxvYyArIHNz
aXplICsgMTsKLQotCS8qIE1vdmUgdGhlIHRhaWwgb2YgQGRzdCBvdXQgb2YgdGhlIHdheSwgdGhl
biBjb3B5IGluIEBzcmMuICovCi0JbnRmc19ybF9tbShkc3QsIG1hcmtlciwgbG9jICsgMSArIHJp
Z2h0LCBkc2l6ZSAtIChsb2MgKyAxICsgcmlnaHQpKTsKLQludGZzX3JsX21jKGRzdCwgbG9jICsg
MSwgc3JjLCAwLCBzc2l6ZSk7Ci0KLQkvKiBBZGp1c3QgdGhlIHNpemUgb2YgdGhlIHByZWNlZGlu
ZyBob2xlLiAqLwotCWRzdFtsb2NdLmxlbmd0aCA9IGRzdFtsb2MgKyAxXS52Y24gLSBkc3RbbG9j
XS52Y247Ci0KLQkvKiBXZSBtYXkgaGF2ZSBjaGFuZ2VkIHRoZSBsZW5ndGggb2YgdGhlIGZpbGUs
IHNvIGZpeCB0aGUgZW5kIG1hcmtlciAqLwotCWlmIChkc3RbbWFya2VyXS5sY24gPT0gTENOX0VO
T0VOVCkKLQkJZHN0W21hcmtlcl0udmNuID0gZHN0W21hcmtlciAtIDFdLnZjbiArIGRzdFttYXJr
ZXIgLSAxXS5sZW5ndGg7Ci0KLQlyZXR1cm4gZHN0OwotfQotCi0vKioKLSAqIG50ZnNfcmxfaW5z
ZXJ0IC0gaW5zZXJ0IGEgcnVubGlzdCBpbnRvIGFub3RoZXIKLSAqIEBkc3Q6CW9yaWdpbmFsIHJ1
bmxpc3QgdG8gYmUgd29ya2VkIG9uCi0gKiBAZHNpemU6CW51bWJlciBvZiBlbGVtZW50cyBpbiBA
ZHN0IChpbmNsdWRpbmcgZW5kIG1hcmtlcikKLSAqIEBzcmM6CW5ldyBydW5saXN0IHRvIGJlIGlu
c2VydGVkCi0gKiBAc3NpemU6CW51bWJlciBvZiBlbGVtZW50cyBpbiBAc3JjIChleGNsdWRpbmcg
ZW5kIG1hcmtlcikKLSAqIEBsb2M6CWluc2VydCB0aGUgbmV3IHJ1bmxpc3QgQHNyYyBiZWZvcmUg
dGhpcyBlbGVtZW50IGluIEBkc3QKLSAqCi0gKiBJbnNlcnQgdGhlIHJ1bmxpc3QgQHNyYyBiZWZv
cmUgZWxlbWVudCBAbG9jIGluIHRoZSBydW5saXN0IEBkc3QuIE1lcmdlIHRoZQotICogbGVmdCBl
bmQgb2YgdGhlIG5ldyBydW5saXN0LCBpZiBuZWNlc3NhcnkuIEFkanVzdCB0aGUgc2l6ZSBvZiB0
aGUgaG9sZQotICogYWZ0ZXIgdGhlIGluc2VydGVkIHJ1bmxpc3QuCi0gKgotICogSXQgaXMgdXAg
dG8gdGhlIGNhbGxlciB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHRoZSBydW5saXN0cyBAZHN0IGFu
ZCBAc3JjLgotICoKLSAqIE9uIHN1Y2Nlc3MsIHJldHVybiBhIHBvaW50ZXIgdG8gdGhlIG5ldywg
Y29tYmluZWQsIHJ1bmxpc3QuIE5vdGUsIGJvdGgKLSAqIHJ1bmxpc3RzIEBkc3QgYW5kIEBzcmMg
YXJlIGRlYWxsb2NhdGVkIGJlZm9yZSByZXR1cm5pbmcgc28geW91IGNhbm5vdCB1c2UKLSAqIHRo
ZSBwb2ludGVycyBmb3IgYW55dGhpbmcgYW55IG1vcmUuIChTdHJpY3RseSBzcGVha2luZyB0aGUg
cmV0dXJuZWQgcnVubGlzdAotICogbWF5IGJlIHRoZSBzYW1lIGFzIEBkc3QgYnV0IHRoaXMgaXMg
aXJyZWxldmFudC4pCi0gKgotICogT24gZXJyb3IsIHJldHVybiAtZXJybm8uIEJvdGggcnVubGlz
dHMgYXJlIGxlZnQgdW5tb2RpZmllZC4gVGhlIGZvbGxvd2luZwotICogZXJyb3IgY29kZXMgYXJl
IGRlZmluZWQ6Ci0gKgktRU5PTUVNCS0gTm90IGVub3VnaCBtZW1vcnkgdG8gYWxsb2NhdGUgcnVu
bGlzdCBhcnJheS4KLSAqCS1FSU5WQUwJLSBJbnZhbGlkIHBhcmFtZXRlcnMgd2VyZSBwYXNzZWQg
aW4uCi0gKi8KLXN0YXRpYyBpbmxpbmUgcnVubGlzdF9lbGVtZW50ICpudGZzX3JsX2luc2VydChy
dW5saXN0X2VsZW1lbnQgKmRzdCwKLQkJaW50IGRzaXplLCBydW5saXN0X2VsZW1lbnQgKnNyYywg
aW50IHNzaXplLCBpbnQgbG9jKQotewotCWJvb2wgbGVmdCA9IGZhbHNlOwkvKiBMZWZ0IGVuZCBv
ZiBAc3JjIG5lZWRzIG1lcmdpbmcuICovCi0JYm9vbCBkaXNjID0gZmFsc2U7CS8qIERpc2NvbnRp
bnVpdHkgYmV0d2VlbiBAZHN0IGFuZCBAc3JjLiAqLwotCWludCBtYXJrZXI7CQkvKiBFbmQgb2Yg
dGhlIGluc2VydGVkIHJ1bnMuICovCi0KLQlCVUdfT04oIWRzdCk7Ci0JQlVHX09OKCFzcmMpOwot
Ci0JLyoKLQkgKiBkaXNjID0+IERpc2NvbnRpbnVpdHkgYmV0d2VlbiB0aGUgZW5kIG9mIEBkc3Qg
YW5kIHRoZSBzdGFydCBvZiBAc3JjLgotCSAqCSAgIFRoaXMgbWVhbnMgd2UgbWlnaHQgbmVlZCB0
byBpbnNlcnQgYSAibm90IG1hcHBlZCIgcnVuLgotCSAqLwotCWlmIChsb2MgPT0gMCkKLQkJZGlz
YyA9IChzcmNbMF0udmNuID4gMCk7Ci0JZWxzZSB7Ci0JCXM2NCBtZXJnZWRfbGVuZ3RoOwotCi0J
CWxlZnQgPSBudGZzX2FyZV9ybF9tZXJnZWFibGUoZHN0ICsgbG9jIC0gMSwgc3JjKTsKLQotCQlt
ZXJnZWRfbGVuZ3RoID0gZHN0W2xvYyAtIDFdLmxlbmd0aDsKLQkJaWYgKGxlZnQpCi0JCQltZXJn
ZWRfbGVuZ3RoICs9IHNyYy0+bGVuZ3RoOwotCi0JCWRpc2MgPSAoc3JjWzBdLnZjbiA+IGRzdFts
b2MgLSAxXS52Y24gKyBtZXJnZWRfbGVuZ3RoKTsKLQl9Ci0JLyoKLQkgKiBTcGFjZSByZXF1aXJl
ZDogQGRzdCBzaXplICsgQHNyYyBzaXplLCBsZXNzIG9uZSBpZiB3ZSBtZXJnZWQsIHBsdXMKLQkg
KiBvbmUgaWYgdGhlcmUgd2FzIGEgZGlzY29udGludWl0eS4KLQkgKi8KLQlkc3QgPSBudGZzX3Js
X3JlYWxsb2MoZHN0LCBkc2l6ZSwgZHNpemUgKyBzc2l6ZSAtIGxlZnQgKyBkaXNjKTsKLQlpZiAo
SVNfRVJSKGRzdCkpCi0JCXJldHVybiBkc3Q7Ci0JLyoKLQkgKiBXZSBhcmUgZ3VhcmFudGVlZCB0
byBzdWNjZWVkIGZyb20gaGVyZSBzbyBjYW4gc3RhcnQgbW9kaWZ5aW5nIHRoZQotCSAqIG9yaWdp
bmFsIHJ1bmxpc3QuCi0JICovCi0JaWYgKGxlZnQpCi0JCV9fbnRmc19ybF9tZXJnZShkc3QgKyBs
b2MgLSAxLCBzcmMpOwotCS8qCi0JICogRmlyc3QgcnVuIGFmdGVyIHRoZSBAc3JjIHJ1bnMgdGhh
dCBoYXZlIGJlZW4gaW5zZXJ0ZWQuCi0JICogTm9taW5hbGx5LCAgQG1hcmtlciBlcXVhbHMgQGxv
YyArIEBzc2l6ZSwgaS5lLiBsb2NhdGlvbiArIG51bWJlciBvZgotCSAqIHJ1bnMgaW4gQHNyYy4g
IEhvd2V2ZXIsIGlmIEBsZWZ0LCB0aGVuIHRoZSBmaXJzdCBydW4gaW4gQHNyYyBoYXMKLQkgKiBi
ZWVuIG1lcmdlZCB3aXRoIG9uZSBpbiBAZHN0LiAgQW5kIGlmIEBkaXNjLCB0aGVuIEBkc3QgYW5k
IEBzcmMgZG8KLQkgKiBub3QgbWVldCBhbmQgd2UgbmVlZCBhbiBleHRyYSBydW4gdG8gZmlsbCB0
aGUgZ2FwLgotCSAqLwotCW1hcmtlciA9IGxvYyArIHNzaXplIC0gbGVmdCArIGRpc2M7Ci0KLQkv
KiBNb3ZlIHRoZSB0YWlsIG9mIEBkc3Qgb3V0IG9mIHRoZSB3YXksIHRoZW4gY29weSBpbiBAc3Jj
LiAqLwotCW50ZnNfcmxfbW0oZHN0LCBtYXJrZXIsIGxvYywgZHNpemUgLSBsb2MpOwotCW50ZnNf
cmxfbWMoZHN0LCBsb2MgKyBkaXNjLCBzcmMsIGxlZnQsIHNzaXplIC0gbGVmdCk7Ci0KLQkvKiBB
ZGp1c3QgdGhlIFZDTiBvZiB0aGUgZmlyc3QgcnVuIGFmdGVyIHRoZSBpbnNlcnRpb24uLi4gKi8K
LQlkc3RbbWFya2VyXS52Y24gPSBkc3RbbWFya2VyIC0gMV0udmNuICsgZHN0W21hcmtlciAtIDFd
Lmxlbmd0aDsKLQkvKiAuLi4gYW5kIHRoZSBsZW5ndGguICovCi0JaWYgKGRzdFttYXJrZXJdLmxj
biA9PSBMQ05fSE9MRSB8fCBkc3RbbWFya2VyXS5sY24gPT0gTENOX1JMX05PVF9NQVBQRUQpCi0J
CWRzdFttYXJrZXJdLmxlbmd0aCA9IGRzdFttYXJrZXIgKyAxXS52Y24gLSBkc3RbbWFya2VyXS52
Y247Ci0KLQkvKiBXcml0aW5nIGJleW9uZCB0aGUgZW5kIG9mIHRoZSBmaWxlIGFuZCB0aGVyZSBp
cyBhIGRpc2NvbnRpbnVpdHkuICovCi0JaWYgKGRpc2MpIHsKLQkJaWYgKGxvYyA+IDApIHsKLQkJ
CWRzdFtsb2NdLnZjbiA9IGRzdFtsb2MgLSAxXS52Y24gKyBkc3RbbG9jIC0gMV0ubGVuZ3RoOwot
CQkJZHN0W2xvY10ubGVuZ3RoID0gZHN0W2xvYyArIDFdLnZjbiAtIGRzdFtsb2NdLnZjbjsKLQkJ
fSBlbHNlIHsKLQkJCWRzdFtsb2NdLnZjbiA9IDA7Ci0JCQlkc3RbbG9jXS5sZW5ndGggPSBkc3Rb
bG9jICsgMV0udmNuOwotCQl9Ci0JCWRzdFtsb2NdLmxjbiA9IExDTl9STF9OT1RfTUFQUEVEOwot
CX0KLQlyZXR1cm4gZHN0OwotfQotCi0vKioKLSAqIG50ZnNfcmxfcmVwbGFjZSAtIG92ZXJ3cml0
ZSBhIHJ1bmxpc3QgZWxlbWVudCB3aXRoIGFub3RoZXIgcnVubGlzdAotICogQGRzdDoJb3JpZ2lu
YWwgcnVubGlzdCB0byBiZSB3b3JrZWQgb24KLSAqIEBkc2l6ZToJbnVtYmVyIG9mIGVsZW1lbnRz
IGluIEBkc3QgKGluY2x1ZGluZyBlbmQgbWFya2VyKQotICogQHNyYzoJbmV3IHJ1bmxpc3QgdG8g
YmUgaW5zZXJ0ZWQKLSAqIEBzc2l6ZToJbnVtYmVyIG9mIGVsZW1lbnRzIGluIEBzcmMgKGV4Y2x1
ZGluZyBlbmQgbWFya2VyKQotICogQGxvYzoJaW5kZXggaW4gcnVubGlzdCBAZHN0IHRvIG92ZXJ3
cml0ZSB3aXRoIEBzcmMKLSAqCi0gKiBSZXBsYWNlIHRoZSBydW5saXN0IGVsZW1lbnQgQGRzdCBh
dCBAbG9jIHdpdGggQHNyYy4gTWVyZ2UgdGhlIGxlZnQgYW5kCi0gKiByaWdodCBlbmRzIG9mIHRo
ZSBpbnNlcnRlZCBydW5saXN0LCBpZiBuZWNlc3NhcnkuCi0gKgotICogSXQgaXMgdXAgdG8gdGhl
IGNhbGxlciB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHRoZSBydW5saXN0cyBAZHN0IGFuZCBAc3Jj
LgotICoKLSAqIE9uIHN1Y2Nlc3MsIHJldHVybiBhIHBvaW50ZXIgdG8gdGhlIG5ldywgY29tYmlu
ZWQsIHJ1bmxpc3QuIE5vdGUsIGJvdGgKLSAqIHJ1bmxpc3RzIEBkc3QgYW5kIEBzcmMgYXJlIGRl
YWxsb2NhdGVkIGJlZm9yZSByZXR1cm5pbmcgc28geW91IGNhbm5vdCB1c2UKLSAqIHRoZSBwb2lu
dGVycyBmb3IgYW55dGhpbmcgYW55IG1vcmUuIChTdHJpY3RseSBzcGVha2luZyB0aGUgcmV0dXJu
ZWQgcnVubGlzdAotICogbWF5IGJlIHRoZSBzYW1lIGFzIEBkc3QgYnV0IHRoaXMgaXMgaXJyZWxl
dmFudC4pCi0gKgotICogT24gZXJyb3IsIHJldHVybiAtZXJybm8uIEJvdGggcnVubGlzdHMgYXJl
IGxlZnQgdW5tb2RpZmllZC4gVGhlIGZvbGxvd2luZwotICogZXJyb3IgY29kZXMgYXJlIGRlZmlu
ZWQ6Ci0gKgktRU5PTUVNCS0gTm90IGVub3VnaCBtZW1vcnkgdG8gYWxsb2NhdGUgcnVubGlzdCBh
cnJheS4KLSAqCS1FSU5WQUwJLSBJbnZhbGlkIHBhcmFtZXRlcnMgd2VyZSBwYXNzZWQgaW4uCi0g
Ki8KLXN0YXRpYyBpbmxpbmUgcnVubGlzdF9lbGVtZW50ICpudGZzX3JsX3JlcGxhY2UocnVubGlz
dF9lbGVtZW50ICpkc3QsCi0JCWludCBkc2l6ZSwgcnVubGlzdF9lbGVtZW50ICpzcmMsIGludCBz
c2l6ZSwgaW50IGxvYykKLXsKLQlzaWduZWQgZGVsdGE7Ci0JYm9vbCBsZWZ0ID0gZmFsc2U7CS8q
IExlZnQgZW5kIG9mIEBzcmMgbmVlZHMgbWVyZ2luZy4gKi8KLQlib29sIHJpZ2h0ID0gZmFsc2U7
CS8qIFJpZ2h0IGVuZCBvZiBAc3JjIG5lZWRzIG1lcmdpbmcuICovCi0JaW50IHRhaWw7CQkvKiBT
dGFydCBvZiB0YWlsIG9mIEBkc3QuICovCi0JaW50IG1hcmtlcjsJCS8qIEVuZCBvZiB0aGUgaW5z
ZXJ0ZWQgcnVucy4gKi8KLQotCUJVR19PTighZHN0KTsKLQlCVUdfT04oIXNyYyk7Ci0KLQkvKiBG
aXJzdCwgc2VlIGlmIHRoZSBsZWZ0IGFuZCByaWdodCBlbmRzIG5lZWQgbWVyZ2luZy4gKi8KLQlp
ZiAoKGxvYyArIDEpIDwgZHNpemUpCi0JCXJpZ2h0ID0gbnRmc19hcmVfcmxfbWVyZ2VhYmxlKHNy
YyArIHNzaXplIC0gMSwgZHN0ICsgbG9jICsgMSk7Ci0JaWYgKGxvYyA+IDApCi0JCWxlZnQgPSBu
dGZzX2FyZV9ybF9tZXJnZWFibGUoZHN0ICsgbG9jIC0gMSwgc3JjKTsKLQkvKgotCSAqIEFsbG9j
YXRlIHNvbWUgc3BhY2UuICBXZSB3aWxsIG5lZWQgbGVzcyBpZiB0aGUgbGVmdCwgcmlnaHQsIG9y
IGJvdGgKLQkgKiBlbmRzIGdldCBtZXJnZWQuICBUaGUgLTEgYWNjb3VudHMgZm9yIHRoZSBydW4g
YmVpbmcgcmVwbGFjZWQuCi0JICovCi0JZGVsdGEgPSBzc2l6ZSAtIDEgLSBsZWZ0IC0gcmlnaHQ7
Ci0JaWYgKGRlbHRhID4gMCkgewotCQlkc3QgPSBudGZzX3JsX3JlYWxsb2MoZHN0LCBkc2l6ZSwg
ZHNpemUgKyBkZWx0YSk7Ci0JCWlmIChJU19FUlIoZHN0KSkKLQkJCXJldHVybiBkc3Q7Ci0JfQot
CS8qCi0JICogV2UgYXJlIGd1YXJhbnRlZWQgdG8gc3VjY2VlZCBmcm9tIGhlcmUgc28gY2FuIHN0
YXJ0IG1vZGlmeWluZyB0aGUKLQkgKiBvcmlnaW5hbCBydW5saXN0cy4KLQkgKi8KLQotCS8qIEZp
cnN0LCBtZXJnZSB0aGUgbGVmdCBhbmQgcmlnaHQgZW5kcywgaWYgbmVjZXNzYXJ5LiAqLwotCWlm
IChyaWdodCkKLQkJX19udGZzX3JsX21lcmdlKHNyYyArIHNzaXplIC0gMSwgZHN0ICsgbG9jICsg
MSk7Ci0JaWYgKGxlZnQpCi0JCV9fbnRmc19ybF9tZXJnZShkc3QgKyBsb2MgLSAxLCBzcmMpOwot
CS8qCi0JICogT2Zmc2V0IG9mIHRoZSB0YWlsIG9mIEBkc3QuICBUaGlzIG5lZWRzIHRvIGJlIG1v
dmVkIG91dCBvZiB0aGUgd2F5Ci0JICogdG8gbWFrZSBzcGFjZSBmb3IgdGhlIHJ1bnMgdG8gYmUg
Y29waWVkIGZyb20gQHNyYywgaS5lLiB0aGUgZmlyc3QKLQkgKiBydW4gb2YgdGhlIHRhaWwgb2Yg
QGRzdC4KLQkgKiBOb21pbmFsbHksIEB0YWlsIGVxdWFscyBAbG9jICsgMSwgaS5lLiBsb2NhdGlv
biwgc2tpcHBpbmcgdGhlCi0JICogcmVwbGFjZWQgcnVuLiAgSG93ZXZlciwgaWYgQHJpZ2h0LCB0
aGVuIG9uZSBvZiBAZHN0J3MgcnVucyBpcwotCSAqIGFscmVhZHkgbWVyZ2VkIGludG8gQHNyYy4K
LQkgKi8KLQl0YWlsID0gbG9jICsgcmlnaHQgKyAxOwotCS8qCi0JICogRmlyc3QgcnVuIGFmdGVy
IHRoZSBAc3JjIHJ1bnMgdGhhdCBoYXZlIGJlZW4gaW5zZXJ0ZWQsIGkuZS4gd2hlcmUKLQkgKiB0
aGUgdGFpbCBvZiBAZHN0IG5lZWRzIHRvIGJlIG1vdmVkIHRvLgotCSAqIE5vbWluYWxseSwgQG1h
cmtlciBlcXVhbHMgQGxvYyArIEBzc2l6ZSwgaS5lLiBsb2NhdGlvbiArIG51bWJlciBvZgotCSAq
IHJ1bnMgaW4gQHNyYy4gIEhvd2V2ZXIsIGlmIEBsZWZ0LCB0aGVuIHRoZSBmaXJzdCBydW4gaW4g
QHNyYyBoYXMKLQkgKiBiZWVuIG1lcmdlZCB3aXRoIG9uZSBpbiBAZHN0LgotCSAqLwotCW1hcmtl
ciA9IGxvYyArIHNzaXplIC0gbGVmdDsKLQotCS8qIE1vdmUgdGhlIHRhaWwgb2YgQGRzdCBvdXQg
b2YgdGhlIHdheSwgdGhlbiBjb3B5IGluIEBzcmMuICovCi0JbnRmc19ybF9tbShkc3QsIG1hcmtl
ciwgdGFpbCwgZHNpemUgLSB0YWlsKTsKLQludGZzX3JsX21jKGRzdCwgbG9jLCBzcmMsIGxlZnQs
IHNzaXplIC0gbGVmdCk7Ci0KLQkvKiBXZSBtYXkgaGF2ZSBjaGFuZ2VkIHRoZSBsZW5ndGggb2Yg
dGhlIGZpbGUsIHNvIGZpeCB0aGUgZW5kIG1hcmtlci4gKi8KLQlpZiAoZHNpemUgLSB0YWlsID4g
MCAmJiBkc3RbbWFya2VyXS5sY24gPT0gTENOX0VOT0VOVCkKLQkJZHN0W21hcmtlcl0udmNuID0g
ZHN0W21hcmtlciAtIDFdLnZjbiArIGRzdFttYXJrZXIgLSAxXS5sZW5ndGg7Ci0JcmV0dXJuIGRz
dDsKLX0KLQotLyoqCi0gKiBudGZzX3JsX3NwbGl0IC0gaW5zZXJ0IGEgcnVubGlzdCBpbnRvIHRo
ZSBjZW50cmUgb2YgYSBob2xlCi0gKiBAZHN0OglvcmlnaW5hbCBydW5saXN0IHRvIGJlIHdvcmtl
ZCBvbgotICogQGRzaXplOgludW1iZXIgb2YgZWxlbWVudHMgaW4gQGRzdCAoaW5jbHVkaW5nIGVu
ZCBtYXJrZXIpCi0gKiBAc3JjOgluZXcgcnVubGlzdCB0byBiZSBpbnNlcnRlZAotICogQHNzaXpl
OgludW1iZXIgb2YgZWxlbWVudHMgaW4gQHNyYyAoZXhjbHVkaW5nIGVuZCBtYXJrZXIpCi0gKiBA
bG9jOglpbmRleCBpbiBydW5saXN0IEBkc3QgYXQgd2hpY2ggdG8gc3BsaXQgYW5kIGluc2VydCBA
c3JjCi0gKgotICogU3BsaXQgdGhlIHJ1bmxpc3QgQGRzdCBhdCBAbG9jIGludG8gdHdvIGFuZCBp
bnNlcnQgQG5ldyBpbiBiZXR3ZWVuIHRoZSB0d28KLSAqIGZyYWdtZW50cy4gTm8gbWVyZ2luZyBv
ZiBydW5saXN0cyBpcyBuZWNlc3NhcnkuIEFkanVzdCB0aGUgc2l6ZSBvZiB0aGUKLSAqIGhvbGVz
IGVpdGhlciBzaWRlLgotICoKLSAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gc2VyaWFsaXpl
IGFjY2VzcyB0byB0aGUgcnVubGlzdHMgQGRzdCBhbmQgQHNyYy4KLSAqCi0gKiBPbiBzdWNjZXNz
LCByZXR1cm4gYSBwb2ludGVyIHRvIHRoZSBuZXcsIGNvbWJpbmVkLCBydW5saXN0LiBOb3RlLCBi
b3RoCi0gKiBydW5saXN0cyBAZHN0IGFuZCBAc3JjIGFyZSBkZWFsbG9jYXRlZCBiZWZvcmUgcmV0
dXJuaW5nIHNvIHlvdSBjYW5ub3QgdXNlCi0gKiB0aGUgcG9pbnRlcnMgZm9yIGFueXRoaW5nIGFu
eSBtb3JlLiAoU3RyaWN0bHkgc3BlYWtpbmcgdGhlIHJldHVybmVkIHJ1bmxpc3QKLSAqIG1heSBi
ZSB0aGUgc2FtZSBhcyBAZHN0IGJ1dCB0aGlzIGlzIGlycmVsZXZhbnQuKQotICoKLSAqIE9uIGVy
cm9yLCByZXR1cm4gLWVycm5vLiBCb3RoIHJ1bmxpc3RzIGFyZSBsZWZ0IHVubW9kaWZpZWQuIFRo
ZSBmb2xsb3dpbmcKLSAqIGVycm9yIGNvZGVzIGFyZSBkZWZpbmVkOgotICoJLUVOT01FTQktIE5v
dCBlbm91Z2ggbWVtb3J5IHRvIGFsbG9jYXRlIHJ1bmxpc3QgYXJyYXkuCi0gKgktRUlOVkFMCS0g
SW52YWxpZCBwYXJhbWV0ZXJzIHdlcmUgcGFzc2VkIGluLgotICovCi1zdGF0aWMgaW5saW5lIHJ1
bmxpc3RfZWxlbWVudCAqbnRmc19ybF9zcGxpdChydW5saXN0X2VsZW1lbnQgKmRzdCwgaW50IGRz
aXplLAotCQlydW5saXN0X2VsZW1lbnQgKnNyYywgaW50IHNzaXplLCBpbnQgbG9jKQotewotCUJV
R19PTighZHN0KTsKLQlCVUdfT04oIXNyYyk7Ci0KLQkvKiBTcGFjZSByZXF1aXJlZDogQGRzdCBz
aXplICsgQHNyYyBzaXplICsgb25lIG5ldyBob2xlLiAqLwotCWRzdCA9IG50ZnNfcmxfcmVhbGxv
Yyhkc3QsIGRzaXplLCBkc2l6ZSArIHNzaXplICsgMSk7Ci0JaWYgKElTX0VSUihkc3QpKQotCQly
ZXR1cm4gZHN0OwotCS8qCi0JICogV2UgYXJlIGd1YXJhbnRlZWQgdG8gc3VjY2VlZCBmcm9tIGhl
cmUgc28gY2FuIHN0YXJ0IG1vZGlmeWluZyB0aGUKLQkgKiBvcmlnaW5hbCBydW5saXN0cy4KLQkg
Ki8KLQotCS8qIE1vdmUgdGhlIHRhaWwgb2YgQGRzdCBvdXQgb2YgdGhlIHdheSwgdGhlbiBjb3B5
IGluIEBzcmMuICovCi0JbnRmc19ybF9tbShkc3QsIGxvYyArIDEgKyBzc2l6ZSwgbG9jLCBkc2l6
ZSAtIGxvYyk7Ci0JbnRmc19ybF9tYyhkc3QsIGxvYyArIDEsIHNyYywgMCwgc3NpemUpOwotCi0J
LyogQWRqdXN0IHRoZSBzaXplIG9mIHRoZSBob2xlcyBlaXRoZXIgc2l6ZSBvZiBAc3JjLiAqLwot
CWRzdFtsb2NdLmxlbmd0aAkJPSBkc3RbbG9jKzFdLnZjbiAgICAgICAtIGRzdFtsb2NdLnZjbjsK
LQlkc3RbbG9jK3NzaXplKzFdLnZjbiAgICA9IGRzdFtsb2Mrc3NpemVdLnZjbiAgICsgZHN0W2xv
Yytzc2l6ZV0ubGVuZ3RoOwotCWRzdFtsb2Mrc3NpemUrMV0ubGVuZ3RoID0gZHN0W2xvYytzc2l6
ZSsyXS52Y24gLSBkc3RbbG9jK3NzaXplKzFdLnZjbjsKLQotCXJldHVybiBkc3Q7Ci19Ci0KLS8q
KgotICogbnRmc19ydW5saXN0c19tZXJnZSAtIG1lcmdlIHR3byBydW5saXN0cyBpbnRvIG9uZQot
ICogQGRybDoJb3JpZ2luYWwgcnVubGlzdCB0byBiZSB3b3JrZWQgb24KLSAqIEBzcmw6CW5ldyBy
dW5saXN0IHRvIGJlIG1lcmdlZCBpbnRvIEBkcmwKLSAqCi0gKiBGaXJzdCB3ZSBzYW5pdHkgY2hl
Y2sgdGhlIHR3byBydW5saXN0cyBAc3JsIGFuZCBAZHJsIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZXkK
LSAqIGFyZSBzZW5zaWJsZSBhbmQgY2FuIGJlIG1lcmdlZC4gVGhlIHJ1bmxpc3QgQHNybCBtdXN0
IGJlIGVpdGhlciBhZnRlciB0aGUKLSAqIHJ1bmxpc3QgQGRybCBvciBjb21wbGV0ZWx5IHdpdGhp
biBhIGhvbGUgKG9yIHVubWFwcGVkIHJlZ2lvbikgaW4gQGRybC4KLSAqCi0gKiBJdCBpcyB1cCB0
byB0aGUgY2FsbGVyIHRvIHNlcmlhbGl6ZSBhY2Nlc3MgdG8gdGhlIHJ1bmxpc3RzIEBkcmwgYW5k
IEBzcmwuCi0gKgotICogTWVyZ2luZyBvZiBydW5saXN0cyBpcyBuZWNlc3NhcnkgaW4gdHdvIGNh
c2VzOgotICogICAxLiBXaGVuIGF0dHJpYnV0ZSBsaXN0cyBhcmUgdXNlZCBhbmQgYSBmdXJ0aGVy
IGV4dGVudCBpcyBiZWluZyBtYXBwZWQuCi0gKiAgIDIuIFdoZW4gbmV3IGNsdXN0ZXJzIGFyZSBh
bGxvY2F0ZWQgdG8gZmlsbCBhIGhvbGUgb3IgZXh0ZW5kIGEgZmlsZS4KLSAqCi0gKiBUaGVyZSBh
cmUgZm91ciBwb3NzaWJsZSB3YXlzIEBzcmwgY2FuIGJlIG1lcmdlZC4gSXQgY2FuOgotICoJLSBi
ZSBpbnNlcnRlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIGEgaG9sZSwKLSAqCS0gc3BsaXQgdGhlIGhv
bGUgaW4gdHdvIGFuZCBiZSBpbnNlcnRlZCBiZXR3ZWVuIHRoZSB0d28gZnJhZ21lbnRzLAotICoJ
LSBiZSBhcHBlbmRlZCBhdCB0aGUgZW5kIG9mIGEgaG9sZSwgb3IgaXQgY2FuCi0gKgktIHJlcGxh
Y2UgdGhlIHdob2xlIGhvbGUuCi0gKiBJdCBjYW4gYWxzbyBiZSBhcHBlbmRlZCB0byB0aGUgZW5k
IG9mIHRoZSBydW5saXN0LCB3aGljaCBpcyBqdXN0IGEgdmFyaWFudAotICogb2YgdGhlIGluc2Vy
dCBjYXNlLgotICoKLSAqIE9uIHN1Y2Nlc3MsIHJldHVybiBhIHBvaW50ZXIgdG8gdGhlIG5ldywg
Y29tYmluZWQsIHJ1bmxpc3QuIE5vdGUsIGJvdGgKLSAqIHJ1bmxpc3RzIEBkcmwgYW5kIEBzcmwg
YXJlIGRlYWxsb2NhdGVkIGJlZm9yZSByZXR1cm5pbmcgc28geW91IGNhbm5vdCB1c2UKLSAqIHRo
ZSBwb2ludGVycyBmb3IgYW55dGhpbmcgYW55IG1vcmUuIChTdHJpY3RseSBzcGVha2luZyB0aGUg
cmV0dXJuZWQgcnVubGlzdAotICogbWF5IGJlIHRoZSBzYW1lIGFzIEBkc3QgYnV0IHRoaXMgaXMg
aXJyZWxldmFudC4pCi0gKgotICogT24gZXJyb3IsIHJldHVybiAtZXJybm8uIEJvdGggcnVubGlz
dHMgYXJlIGxlZnQgdW5tb2RpZmllZC4gVGhlIGZvbGxvd2luZwotICogZXJyb3IgY29kZXMgYXJl
IGRlZmluZWQ6Ci0gKgktRU5PTUVNCS0gTm90IGVub3VnaCBtZW1vcnkgdG8gYWxsb2NhdGUgcnVu
bGlzdCBhcnJheS4KLSAqCS1FSU5WQUwJLSBJbnZhbGlkIHBhcmFtZXRlcnMgd2VyZSBwYXNzZWQg
aW4uCi0gKgktRVJBTkdFCS0gVGhlIHJ1bmxpc3RzIG92ZXJsYXAgYW5kIGNhbm5vdCBiZSBtZXJn
ZWQuCi0gKi8KLXJ1bmxpc3RfZWxlbWVudCAqbnRmc19ydW5saXN0c19tZXJnZShydW5saXN0X2Vs
ZW1lbnQgKmRybCwKLQkJcnVubGlzdF9lbGVtZW50ICpzcmwpCi17Ci0JaW50IGRpLCBzaTsJCS8q
IEN1cnJlbnQgaW5kZXggaW50byBAW2RzXXJsLiAqLwotCWludCBzc3RhcnQ7CQkvKiBGaXJzdCBp
bmRleCB3aXRoIGxjbiA+IExDTl9STF9OT1RfTUFQUEVELiAqLwotCWludCBkaW5zOwkJLyogSW5k
ZXggaW50byBAZHJsIGF0IHdoaWNoIHRvIGluc2VydCBAc3JsLiAqLwotCWludCBkZW5kLCBzZW5k
OwkJLyogTGFzdCBpbmRleCBpbnRvIEBbZHNdcmwuICovCi0JaW50IGRmaW5hbCwgc2ZpbmFsOwkv
KiBUaGUgbGFzdCBpbmRleCBpbnRvIEBbZHNdcmwgd2l0aAotCQkJCSAgIGxjbiA+PSBMQ05fSE9M
RS4gKi8KLQlpbnQgbWFya2VyID0gMDsKLQlWQ04gbWFya2VyX3ZjbiA9IDA7Ci0KLSNpZmRlZiBE
RUJVRwotCW50ZnNfZGVidWcoImRzdDoiKTsKLQludGZzX2RlYnVnX2R1bXBfcnVubGlzdChkcmwp
OwotCW50ZnNfZGVidWcoInNyYzoiKTsKLQludGZzX2RlYnVnX2R1bXBfcnVubGlzdChzcmwpOwot
I2VuZGlmCi0KLQkvKiBDaGVjayBmb3Igc2lsbHkgY2FsbGluZy4uLiAqLwotCWlmICh1bmxpa2Vs
eSghc3JsKSkKLQkJcmV0dXJuIGRybDsKLQlpZiAoSVNfRVJSKHNybCkgfHwgSVNfRVJSKGRybCkp
Ci0JCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwotCi0JLyogQ2hlY2sgZm9yIHRoZSBjYXNlIHdo
ZXJlIHRoZSBmaXJzdCBtYXBwaW5nIGlzIGJlaW5nIGRvbmUgbm93LiAqLwotCWlmICh1bmxpa2Vs
eSghZHJsKSkgewotCQlkcmwgPSBzcmw7Ci0JCS8qIENvbXBsZXRlIHRoZSBzb3VyY2UgcnVubGlz
dCBpZiBuZWNlc3NhcnkuICovCi0JCWlmICh1bmxpa2VseShkcmxbMF0udmNuKSkgewotCQkJLyog
U2NhbiB0byB0aGUgZW5kIG9mIHRoZSBzb3VyY2UgcnVubGlzdC4gKi8KLQkJCWZvciAoZGVuZCA9
IDA7IGxpa2VseShkcmxbZGVuZF0ubGVuZ3RoKTsgZGVuZCsrKQotCQkJCTsKLQkJCWRlbmQrKzsK
LQkJCWRybCA9IG50ZnNfcmxfcmVhbGxvYyhkcmwsIGRlbmQsIGRlbmQgKyAxKTsKLQkJCWlmIChJ
U19FUlIoZHJsKSkKLQkJCQlyZXR1cm4gZHJsOwotCQkJLyogSW5zZXJ0IHN0YXJ0IGVsZW1lbnQg
YXQgdGhlIGZyb250IG9mIHRoZSBydW5saXN0LiAqLwotCQkJbnRmc19ybF9tbShkcmwsIDEsIDAs
IGRlbmQpOwotCQkJZHJsWzBdLnZjbiA9IDA7Ci0JCQlkcmxbMF0ubGNuID0gTENOX1JMX05PVF9N
QVBQRUQ7Ci0JCQlkcmxbMF0ubGVuZ3RoID0gZHJsWzFdLnZjbjsKLQkJfQotCQlnb3RvIGZpbmlz
aGVkOwotCX0KLQotCXNpID0gZGkgPSAwOwotCi0JLyogU2tpcCBhbnkgdW5tYXBwZWQgc3RhcnQg
ZWxlbWVudChzKSBpbiB0aGUgc291cmNlIHJ1bmxpc3QuICovCi0Jd2hpbGUgKHNybFtzaV0ubGVu
Z3RoICYmIHNybFtzaV0ubGNuIDwgTENOX0hPTEUpCi0JCXNpKys7Ci0KLQkvKiBDYW4ndCBoYXZl
IGFuIGVudGlyZWx5IHVubWFwcGVkIHNvdXJjZSBydW5saXN0LiAqLwotCUJVR19PTighc3JsW3Np
XS5sZW5ndGgpOwotCi0JLyogUmVjb3JkIHRoZSBzdGFydGluZyBwb2ludHMuICovCi0Jc3N0YXJ0
ID0gc2k7Ci0KLQkvKgotCSAqIFNraXAgZm9yd2FyZCBpbiBAZHJsIHVudGlsIHdlIHJlYWNoIHRo
ZSBwb3NpdGlvbiB3aGVyZSBAc3JsIG5lZWRzIHRvCi0JICogYmUgaW5zZXJ0ZWQuIElmIHdlIHJl
YWNoIHRoZSBlbmQgb2YgQGRybCwgQHNybCBqdXN0IG5lZWRzIHRvIGJlCi0JICogYXBwZW5kZWQg
dG8gQGRybC4KLQkgKi8KLQlmb3IgKDsgZHJsW2RpXS5sZW5ndGg7IGRpKyspIHsKLQkJaWYgKGRy
bFtkaV0udmNuICsgZHJsW2RpXS5sZW5ndGggPiBzcmxbc3N0YXJ0XS52Y24pCi0JCQlicmVhazsK
LQl9Ci0JZGlucyA9IGRpOwotCi0JLyogU2FuaXR5IGNoZWNrIGZvciBpbGxlZ2FsIG92ZXJsYXBz
LiAqLwotCWlmICgoZHJsW2RpXS52Y24gPT0gc3JsW3NpXS52Y24pICYmIChkcmxbZGldLmxjbiA+
PSAwKSAmJgotCQkJKHNybFtzaV0ubGNuID49IDApKSB7Ci0JCW50ZnNfZXJyb3IoTlVMTCwgIlJ1
biBsaXN0cyBvdmVybGFwLiBDYW5ub3QgbWVyZ2UhIik7Ci0JCXJldHVybiBFUlJfUFRSKC1FUkFO
R0UpOwotCX0KLQotCS8qIFNjYW4gdG8gdGhlIGVuZCBvZiBib3RoIHJ1bmxpc3RzIGluIG9yZGVy
IHRvIGtub3cgdGhlaXIgc2l6ZXMuICovCi0JZm9yIChzZW5kID0gc2k7IHNybFtzZW5kXS5sZW5n
dGg7IHNlbmQrKykKLQkJOwotCWZvciAoZGVuZCA9IGRpOyBkcmxbZGVuZF0ubGVuZ3RoOyBkZW5k
KyspCi0JCTsKLQotCWlmIChzcmxbc2VuZF0ubGNuID09IExDTl9FTk9FTlQpCi0JCW1hcmtlcl92
Y24gPSBzcmxbbWFya2VyID0gc2VuZF0udmNuOwotCi0JLyogU2NhbiB0byB0aGUgbGFzdCBlbGVt
ZW50IHdpdGggbGNuID49IExDTl9IT0xFLiAqLwotCWZvciAoc2ZpbmFsID0gc2VuZDsgc2ZpbmFs
ID49IDAgJiYgc3JsW3NmaW5hbF0ubGNuIDwgTENOX0hPTEU7IHNmaW5hbC0tKQotCQk7Ci0JZm9y
IChkZmluYWwgPSBkZW5kOyBkZmluYWwgPj0gMCAmJiBkcmxbZGZpbmFsXS5sY24gPCBMQ05fSE9M
RTsgZGZpbmFsLS0pCi0JCTsKLQotCXsKLQlib29sIHN0YXJ0OwotCWJvb2wgZmluaXNoOwotCWlu
dCBkcyA9IGRlbmQgKyAxOwkJLyogTnVtYmVyIG9mIGVsZW1lbnRzIGluIGRybCAmIHNybCAqLwot
CWludCBzcyA9IHNmaW5hbCAtIHNzdGFydCArIDE7Ci0KLQlzdGFydCAgPSAoKGRybFtkaW5zXS5s
Y24gPCAgTENOX1JMX05PVF9NQVBQRUQpIHx8ICAgIC8qIEVuZCBvZiBmaWxlICAgKi8KLQkJICAo
ZHJsW2RpbnNdLnZjbiA9PSBzcmxbc3N0YXJ0XS52Y24pKTsJICAgICAvKiBTdGFydCBvZiBob2xl
ICovCi0JZmluaXNoID0gKChkcmxbZGluc10ubGNuID49IExDTl9STF9OT1RfTUFQUEVEKSAmJiAg
ICAvKiBFbmQgb2YgZmlsZSAgICovCi0JCSAoKGRybFtkaW5zXS52Y24gKyBkcmxbZGluc10ubGVu
Z3RoKSA8PSAgICAgIC8qIEVuZCBvZiBob2xlICAgKi8KLQkJICAoc3JsW3NlbmQgLSAxXS52Y24g
KyBzcmxbc2VuZCAtIDFdLmxlbmd0aCkpKTsKLQotCS8qIE9yIHdlIHdpbGwgbG9zZSBhbiBlbmQg
bWFya2VyLiAqLwotCWlmIChmaW5pc2ggJiYgIWRybFtkaW5zXS5sZW5ndGgpCi0JCXNzKys7Ci0J
aWYgKG1hcmtlciAmJiAoZHJsW2RpbnNdLnZjbiArIGRybFtkaW5zXS5sZW5ndGggPiBzcmxbc2Vu
ZCAtIDFdLnZjbikpCi0JCWZpbmlzaCA9IGZhbHNlOwotI2lmIDAKLQludGZzX2RlYnVnKCJkZmlu
YWwgPSAlaSwgZGVuZCA9ICVpIiwgZGZpbmFsLCBkZW5kKTsKLQludGZzX2RlYnVnKCJzc3RhcnQg
PSAlaSwgc2ZpbmFsID0gJWksIHNlbmQgPSAlaSIsIHNzdGFydCwgc2ZpbmFsLCBzZW5kKTsKLQlu
dGZzX2RlYnVnKCJzdGFydCA9ICVpLCBmaW5pc2ggPSAlaSIsIHN0YXJ0LCBmaW5pc2gpOwotCW50
ZnNfZGVidWcoImRzID0gJWksIHNzID0gJWksIGRpbnMgPSAlaSIsIGRzLCBzcywgZGlucyk7Ci0j
ZW5kaWYKLQlpZiAoc3RhcnQpIHsKLQkJaWYgKGZpbmlzaCkKLQkJCWRybCA9IG50ZnNfcmxfcmVw
bGFjZShkcmwsIGRzLCBzcmwgKyBzc3RhcnQsIHNzLCBkaW5zKTsKLQkJZWxzZQotCQkJZHJsID0g
bnRmc19ybF9pbnNlcnQoZHJsLCBkcywgc3JsICsgc3N0YXJ0LCBzcywgZGlucyk7Ci0JfSBlbHNl
IHsKLQkJaWYgKGZpbmlzaCkKLQkJCWRybCA9IG50ZnNfcmxfYXBwZW5kKGRybCwgZHMsIHNybCAr
IHNzdGFydCwgc3MsIGRpbnMpOwotCQllbHNlCi0JCQlkcmwgPSBudGZzX3JsX3NwbGl0KGRybCwg
ZHMsIHNybCArIHNzdGFydCwgc3MsIGRpbnMpOwotCX0KLQlpZiAoSVNfRVJSKGRybCkpIHsKLQkJ
bnRmc19lcnJvcihOVUxMLCAiTWVyZ2UgZmFpbGVkLiIpOwotCQlyZXR1cm4gZHJsOwotCX0KLQlu
dGZzX2ZyZWUoc3JsKTsKLQlpZiAobWFya2VyKSB7Ci0JCW50ZnNfZGVidWcoIlRyaWdnZXJpbmcg
bWFya2VyIGNvZGUuIik7Ci0JCWZvciAoZHMgPSBkZW5kOyBkcmxbZHNdLmxlbmd0aDsgZHMrKykK
LQkJCTsKLQkJLyogV2Ugb25seSBuZWVkIHRvIGNhcmUgaWYgQHNybCBlbmRlZCBhZnRlciBAZHJs
LiAqLwotCQlpZiAoZHJsW2RzXS52Y24gPD0gbWFya2VyX3ZjbikgewotCQkJaW50IHNsb3RzID0g
MDsKLQotCQkJaWYgKGRybFtkc10udmNuID09IG1hcmtlcl92Y24pIHsKLQkJCQludGZzX2RlYnVn
KCJPbGQgbWFya2VyID0gMHglbGx4LCByZXBsYWNpbmcgIgotCQkJCQkJIndpdGggTENOX0VOT0VO
VC4iLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCWRybFtkc10ubGNuKTsKLQkJ
CQlkcmxbZHNdLmxjbiA9IExDTl9FTk9FTlQ7Ci0JCQkJZ290byBmaW5pc2hlZDsKLQkJCX0KLQkJ
CS8qCi0JCQkgKiBXZSBuZWVkIHRvIGNyZWF0ZSBhbiB1bm1hcHBlZCBydW5saXN0IGVsZW1lbnQg
aW4KLQkJCSAqIEBkcmwgb3IgZXh0ZW5kIGFuIGV4aXN0aW5nIG9uZSBiZWZvcmUgYWRkaW5nIHRo
ZQotCQkJICogRU5PRU5UIHRlcm1pbmF0b3IuCi0JCQkgKi8KLQkJCWlmIChkcmxbZHNdLmxjbiA9
PSBMQ05fRU5PRU5UKSB7Ci0JCQkJZHMtLTsKLQkJCQlzbG90cyA9IDE7Ci0JCQl9Ci0JCQlpZiAo
ZHJsW2RzXS5sY24gIT0gTENOX1JMX05PVF9NQVBQRUQpIHsKLQkJCQkvKiBBZGQgYW4gdW5tYXBw
ZWQgcnVubGlzdCBlbGVtZW50LiAqLwotCQkJCWlmICghc2xvdHMpIHsKLQkJCQkJZHJsID0gbnRm
c19ybF9yZWFsbG9jX25vZmFpbChkcmwsIGRzLAotCQkJCQkJCWRzICsgMik7Ci0JCQkJCXNsb3Rz
ID0gMjsKLQkJCQl9Ci0JCQkJZHMrKzsKLQkJCQkvKiBOZWVkIHRvIHNldCB2Y24gaWYgaXQgaXNu
J3Qgc2V0IGFscmVhZHkuICovCi0JCQkJaWYgKHNsb3RzICE9IDEpCi0JCQkJCWRybFtkc10udmNu
ID0gZHJsW2RzIC0gMV0udmNuICsKLQkJCQkJCQlkcmxbZHMgLSAxXS5sZW5ndGg7Ci0JCQkJZHJs
W2RzXS5sY24gPSBMQ05fUkxfTk9UX01BUFBFRDsKLQkJCQkvKiBXZSBub3cgdXNlZCB1cCBhIHNs
b3QuICovCi0JCQkJc2xvdHMtLTsKLQkJCX0KLQkJCWRybFtkc10ubGVuZ3RoID0gbWFya2VyX3Zj
biAtIGRybFtkc10udmNuOwotCQkJLyogRmluYWxseSBhZGQgdGhlIEVOT0VOVCB0ZXJtaW5hdG9y
LiAqLwotCQkJZHMrKzsKLQkJCWlmICghc2xvdHMpCi0JCQkJZHJsID0gbnRmc19ybF9yZWFsbG9j
X25vZmFpbChkcmwsIGRzLCBkcyArIDEpOwotCQkJZHJsW2RzXS52Y24gPSBtYXJrZXJfdmNuOwot
CQkJZHJsW2RzXS5sY24gPSBMQ05fRU5PRU5UOwotCQkJZHJsW2RzXS5sZW5ndGggPSAoczY0KTA7
Ci0JCX0KLQl9Ci0JfQotCi1maW5pc2hlZDoKLQkvKiBUaGUgbWVyZ2Ugd2FzIGNvbXBsZXRlZCBz
dWNjZXNzZnVsbHkuICovCi0JbnRmc19kZWJ1ZygiTWVyZ2VkIHJ1bmxpc3Q6Iik7Ci0JbnRmc19k
ZWJ1Z19kdW1wX3J1bmxpc3QoZHJsKTsKLQlyZXR1cm4gZHJsOwotfQotCi0vKioKLSAqIG50ZnNf
bWFwcGluZ19wYWlyc19kZWNvbXByZXNzIC0gY29udmVydCBtYXBwaW5nIHBhaXJzIGFycmF5IHRv
IHJ1bmxpc3QKLSAqIEB2b2w6CW50ZnMgdm9sdW1lIG9uIHdoaWNoIHRoZSBhdHRyaWJ1dGUgcmVz
aWRlcwotICogQGF0dHI6CWF0dHJpYnV0ZSByZWNvcmQgd2hvc2UgbWFwcGluZyBwYWlycyBhcnJh
eSB0byBkZWNvbXByZXNzCi0gKiBAb2xkX3JsOglvcHRpb25hbCBydW5saXN0IGluIHdoaWNoIHRv
IGluc2VydCBAYXR0cidzIHJ1bmxpc3QKLSAqCi0gKiBJdCBpcyB1cCB0byB0aGUgY2FsbGVyIHRv
IHNlcmlhbGl6ZSBhY2Nlc3MgdG8gdGhlIHJ1bmxpc3QgQG9sZF9ybC4KLSAqCi0gKiBEZWNvbXBy
ZXNzIHRoZSBhdHRyaWJ1dGUgQGF0dHIncyBtYXBwaW5nIHBhaXJzIGFycmF5IGludG8gYSBydW5s
aXN0LiBPbgotICogc3VjY2VzcywgcmV0dXJuIHRoZSBkZWNvbXByZXNzZWQgcnVubGlzdC4KLSAq
Ci0gKiBJZiBAb2xkX3JsIGlzIG5vdCBOVUxMLCBkZWNvbXByZXNzZWQgcnVubGlzdCBpcyBpbnNl
cnRlZCBpbnRvIHRoZQotICogYXBwcm9wcmlhdGUgcGxhY2UgaW4gQG9sZF9ybCBhbmQgdGhlIHJl
c3VsdGFudCwgY29tYmluZWQgcnVubGlzdCBpcwotICogcmV0dXJuZWQuIFRoZSBvcmlnaW5hbCBA
b2xkX3JsIGlzIGRlYWxsb2NhdGVkLgotICoKLSAqIE9uIGVycm9yLCByZXR1cm4gLWVycm5vLiBA
b2xkX3JsIGlzIGxlZnQgdW5tb2RpZmllZCBpbiB0aGF0IGNhc2UuCi0gKgotICogVGhlIGZvbGxv
d2luZyBlcnJvciBjb2RlcyBhcmUgZGVmaW5lZDoKLSAqCS1FTk9NRU0JLSBOb3QgZW5vdWdoIG1l
bW9yeSB0byBhbGxvY2F0ZSBydW5saXN0IGFycmF5LgotICoJLUVJTwktIENvcnJ1cHQgcnVubGlz
dC4KLSAqCS1FSU5WQUwJLSBJbnZhbGlkIHBhcmFtZXRlcnMgd2VyZSBwYXNzZWQgaW4uCi0gKgkt
RVJBTkdFCS0gVGhlIHR3byBydW5saXN0cyBvdmVybGFwLgotICoKLSAqIEZJWE1FOiBGb3Igbm93
IHdlIHRha2UgdGhlIGNvbmNlcHRpb25hbGx5IHNpbXBsZXN0IGFwcHJvYWNoIG9mIGNyZWF0aW5n
IHRoZQotICogbmV3IHJ1bmxpc3QgZGlzcmVnYXJkaW5nIHRoZSBhbHJlYWR5IGV4aXN0aW5nIG9u
ZSBhbmQgdGhlbiBzcGxpY2luZyB0aGUKLSAqIHR3byBpbnRvIG9uZSwgaWYgdGhhdCBpcyBwb3Nz
aWJsZSAod2UgY2hlY2sgZm9yIG92ZXJsYXAgYW5kIGRpc2NhcmQgdGhlIG5ldwotICogcnVubGlz
dCBpZiBvdmVybGFwIHByZXNlbnQgYmVmb3JlIHJldHVybmluZyBFUlJfUFRSKC1FUkFOR0UpKS4K
LSAqLwotcnVubGlzdF9lbGVtZW50ICpudGZzX21hcHBpbmdfcGFpcnNfZGVjb21wcmVzcyhjb25z
dCBudGZzX3ZvbHVtZSAqdm9sLAotCQljb25zdCBBVFRSX1JFQ09SRCAqYXR0ciwgcnVubGlzdF9l
bGVtZW50ICpvbGRfcmwpCi17Ci0JVkNOIHZjbjsJCS8qIEN1cnJlbnQgdmNuLiAqLwotCUxDTiBs
Y247CQkvKiBDdXJyZW50IGxjbi4gKi8KLQlzNjQgZGVsdGF4Y247CQkvKiBDaGFuZ2UgaW4gW3Zs
XWNuLiAqLwotCXJ1bmxpc3RfZWxlbWVudCAqcmw7CS8qIFRoZSBvdXRwdXQgcnVubGlzdC4gKi8K
LQl1OCAqYnVmOwkJLyogQ3VycmVudCBwb3NpdGlvbiBpbiBtYXBwaW5nIHBhaXJzIGFycmF5LiAq
LwotCXU4ICphdHRyX2VuZDsJCS8qIEVuZCBvZiBhdHRyaWJ1dGUuICovCi0JaW50IHJsc2l6ZTsJ
CS8qIFNpemUgb2YgcnVubGlzdCBidWZmZXIuICovCi0JdTE2IHJscG9zOwkJLyogQ3VycmVudCBy
dW5saXN0IHBvc2l0aW9uIGluIHVuaXRzIG9mCi0JCQkJICAgcnVubGlzdF9lbGVtZW50cy4gKi8K
LQl1OCBiOwkJCS8qIEN1cnJlbnQgYnl0ZSBvZmZzZXQgaW4gYnVmLiAqLwotCi0jaWZkZWYgREVC
VUcKLQkvKiBNYWtlIHN1cmUgYXR0ciBleGlzdHMgYW5kIGlzIG5vbi1yZXNpZGVudC4gKi8KLQlp
ZiAoIWF0dHIgfHwgIWF0dHItPm5vbl9yZXNpZGVudCB8fCBzbGU2NF90b19jcHUoCi0JCQlhdHRy
LT5kYXRhLm5vbl9yZXNpZGVudC5sb3dlc3RfdmNuKSA8IChWQ04pMCkgewotCQludGZzX2Vycm9y
KHZvbC0+c2IsICJJbnZhbGlkIGFyZ3VtZW50cy4iKTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVJTlZB
TCk7Ci0JfQotI2VuZGlmCi0JLyogU3RhcnQgYXQgdmNuID0gbG93ZXN0X3ZjbiBhbmQgbGNuIDAu
ICovCi0JdmNuID0gc2xlNjRfdG9fY3B1KGF0dHItPmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92
Y24pOwotCWxjbiA9IDA7Ci0JLyogR2V0IHN0YXJ0IG9mIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5
LiAqLwotCWJ1ZiA9ICh1OCopYXR0ciArIGxlMTZfdG9fY3B1KAotCQkJYXR0ci0+ZGF0YS5ub25f
cmVzaWRlbnQubWFwcGluZ19wYWlyc19vZmZzZXQpOwotCWF0dHJfZW5kID0gKHU4KilhdHRyICsg
bGUzMl90b19jcHUoYXR0ci0+bGVuZ3RoKTsKLQlpZiAodW5saWtlbHkoYnVmIDwgKHU4KilhdHRy
IHx8IGJ1ZiA+IGF0dHJfZW5kKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJDb3JydXB0IGF0
dHJpYnV0ZS4iKTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVJTyk7Ci0JfQotCS8qIElmIHRoZSBtYXBw
aW5nIHBhaXJzIGFycmF5IGlzIHZhbGlkIGJ1dCBlbXB0eSwgbm90aGluZyB0byBkby4gKi8KLQlp
ZiAoIXZjbiAmJiAhKmJ1ZikKLQkJcmV0dXJuIG9sZF9ybDsKLQkvKiBDdXJyZW50IHBvc2l0aW9u
IGluIHJ1bmxpc3QgYXJyYXkuICovCi0Jcmxwb3MgPSAwOwotCS8qIEFsbG9jYXRlIGZpcnN0IHBh
Z2UgYW5kIHNldCBjdXJyZW50IHJ1bmxpc3Qgc2l6ZSB0byBvbmUgcGFnZS4gKi8KLQlybCA9IG50
ZnNfbWFsbG9jX25vZnMocmxzaXplID0gUEFHRV9TSVpFKTsKLQlpZiAodW5saWtlbHkoIXJsKSkK
LQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7Ci0JLyogSW5zZXJ0IHVubWFwcGVkIHN0YXJ0aW5n
IGVsZW1lbnQgaWYgbmVjZXNzYXJ5LiAqLwotCWlmICh2Y24pIHsKLQkJcmwtPnZjbiA9IDA7Ci0J
CXJsLT5sY24gPSBMQ05fUkxfTk9UX01BUFBFRDsKLQkJcmwtPmxlbmd0aCA9IHZjbjsKLQkJcmxw
b3MrKzsKLQl9Ci0Jd2hpbGUgKGJ1ZiA8IGF0dHJfZW5kICYmICpidWYpIHsKLQkJLyoKLQkJICog
QWxsb2NhdGUgbW9yZSBtZW1vcnkgaWYgbmVlZGVkLCBpbmNsdWRpbmcgc3BhY2UgZm9yIHRoZQot
CQkgKiBub3QtbWFwcGVkIGFuZCB0ZXJtaW5hdG9yIGVsZW1lbnRzLiBudGZzX21hbGxvY19ub2Zz
KCkKLQkJICogb3BlcmF0ZXMgb24gd2hvbGUgcGFnZXMgb25seS4KLQkJICovCi0JCWlmICgoKHJs
cG9zICsgMykgKiBzaXplb2YoKm9sZF9ybCkpID4gcmxzaXplKSB7Ci0JCQlydW5saXN0X2VsZW1l
bnQgKnJsMjsKLQotCQkJcmwyID0gbnRmc19tYWxsb2Nfbm9mcyhybHNpemUgKyAoaW50KVBBR0Vf
U0laRSk7Ci0JCQlpZiAodW5saWtlbHkoIXJsMikpIHsKLQkJCQludGZzX2ZyZWUocmwpOwotCQkJ
CXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCQkJfQotCQkJbWVtY3B5KHJsMiwgcmwsIHJsc2l6
ZSk7Ci0JCQludGZzX2ZyZWUocmwpOwotCQkJcmwgPSBybDI7Ci0JCQlybHNpemUgKz0gUEFHRV9T
SVpFOwotCQl9Ci0JCS8qIEVudGVyIHRoZSBjdXJyZW50IHZjbiBpbnRvIHRoZSBjdXJyZW50IHJ1
bmxpc3QgZWxlbWVudC4gKi8KLQkJcmxbcmxwb3NdLnZjbiA9IHZjbjsKLQkJLyoKLQkJICogR2V0
IHRoZSBjaGFuZ2UgaW4gdmNuLCBpLmUuIHRoZSBydW4gbGVuZ3RoIGluIGNsdXN0ZXJzLgotCQkg
KiBEb2luZyBpdCB0aGlzIHdheSBlbnN1cmVzIHRoYXQgd2Ugc2lnbmV4dGVuZCBuZWdhdGl2ZSB2
YWx1ZXMuCi0JCSAqIEEgbmVnYXRpdmUgcnVuIGxlbmd0aCBkb2Vzbid0IG1ha2UgYW55IHNlbnNl
LCBidXQgaGV5LCBJCi0JCSAqIGRpZG4ndCBtYWtlIHVwIHRoZSBOVEZTIHNwZWNzIGFuZCBXaW5k
b3dzIE5UNCB0cmVhdHMgdGhlIHJ1bgotCQkgKiBsZW5ndGggYXMgYSBzaWduZWQgdmFsdWUgc28g
dGhhdCdzIGhvdyBpdCBpcy4uLgotCQkgKi8KLQkJYiA9ICpidWYgJiAweGY7Ci0JCWlmIChiKSB7
Ci0JCQlpZiAodW5saWtlbHkoYnVmICsgYiA+IGF0dHJfZW5kKSkKLQkJCQlnb3RvIGlvX2Vycm9y
OwotCQkJZm9yIChkZWx0YXhjbiA9IChzOClidWZbYi0tXTsgYjsgYi0tKQotCQkJCWRlbHRheGNu
ID0gKGRlbHRheGNuIDw8IDgpICsgYnVmW2JdOwotCQl9IGVsc2UgeyAvKiBUaGUgbGVuZ3RoIGVu
dHJ5IGlzIGNvbXB1bHNvcnkuICovCi0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJNaXNzaW5nIGxl
bmd0aCBlbnRyeSBpbiBtYXBwaW5nICIKLQkJCQkJInBhaXJzIGFycmF5LiIpOwotCQkJZGVsdGF4
Y24gPSAoczY0KS0xOwotCQl9Ci0JCS8qCi0JCSAqIEFzc3VtZSBhIG5lZ2F0aXZlIGxlbmd0aCB0
byBpbmRpY2F0ZSBkYXRhIGNvcnJ1cHRpb24gYW5kCi0JCSAqIGhlbmNlIGNsZWFuLXVwIGFuZCBy
ZXR1cm4gTlVMTC4KLQkJICovCi0JCWlmICh1bmxpa2VseShkZWx0YXhjbiA8IDApKSB7Ci0JCQlu
dGZzX2Vycm9yKHZvbC0+c2IsICJJbnZhbGlkIGxlbmd0aCBpbiBtYXBwaW5nIHBhaXJzICIKLQkJ
CQkJImFycmF5LiIpOwotCQkJZ290byBlcnJfb3V0OwotCQl9Ci0JCS8qCi0JCSAqIEVudGVyIHRo
ZSBjdXJyZW50IHJ1biBsZW5ndGggaW50byB0aGUgY3VycmVudCBydW5saXN0Ci0JCSAqIGVsZW1l
bnQuCi0JCSAqLwotCQlybFtybHBvc10ubGVuZ3RoID0gZGVsdGF4Y247Ci0JCS8qIEluY3JlbWVu
dCB0aGUgY3VycmVudCB2Y24gYnkgdGhlIGN1cnJlbnQgcnVuIGxlbmd0aC4gKi8KLQkJdmNuICs9
IGRlbHRheGNuOwotCQkvKgotCQkgKiBUaGVyZSBtaWdodCBiZSBubyBsY24gY2hhbmdlIGF0IGFs
bCwgYXMgaXMgdGhlIGNhc2UgZm9yCi0JCSAqIHNwYXJzZSBjbHVzdGVycyBvbiBOVEZTIDMuMCss
IGluIHdoaWNoIGNhc2Ugd2Ugc2V0IHRoZSBsY24KLQkJICogdG8gTENOX0hPTEUuCi0JCSAqLwot
CQlpZiAoISgqYnVmICYgMHhmMCkpCi0JCQlybFtybHBvc10ubGNuID0gTENOX0hPTEU7Ci0JCWVs
c2UgewotCQkJLyogR2V0IHRoZSBsY24gY2hhbmdlIHdoaWNoIHJlYWxseSBjYW4gYmUgbmVnYXRp
dmUuICovCi0JCQl1OCBiMiA9ICpidWYgJiAweGY7Ci0JCQliID0gYjIgKyAoKCpidWYgPj4gNCkg
JiAweGYpOwotCQkJaWYgKGJ1ZiArIGIgPiBhdHRyX2VuZCkKLQkJCQlnb3RvIGlvX2Vycm9yOwot
CQkJZm9yIChkZWx0YXhjbiA9IChzOClidWZbYi0tXTsgYiA+IGIyOyBiLS0pCi0JCQkJZGVsdGF4
Y24gPSAoZGVsdGF4Y24gPDwgOCkgKyBidWZbYl07Ci0JCQkvKiBDaGFuZ2UgdGhlIGN1cnJlbnQg
bGNuIHRvIGl0cyBuZXcgdmFsdWUuICovCi0JCQlsY24gKz0gZGVsdGF4Y247Ci0jaWZkZWYgREVC
VUcKLQkJCS8qCi0JCQkgKiBPbiBOVEZTIDEuMi0sIGFwcGFyZW50bHkgY2FuIGhhdmUgbGNuID09
IC0xIHRvCi0JCQkgKiBpbmRpY2F0ZSBhIGhvbGUuIEJ1dCB3ZSBoYXZlbid0IHZlcmlmaWVkIG91
cnNlbHZlcwotCQkJICogd2hldGhlciBpdCBpcyByZWFsbHkgdGhlIGxjbiBvciB0aGUgZGVsdGF4
Y24gdGhhdCBpcwotCQkJICogLTEuIFNvIGlmIGVpdGhlciBpcyBmb3VuZCBnaXZlIHVzIGEgbWVz
c2FnZSBzbyB3ZQotCQkJICogY2FuIGludmVzdGlnYXRlIGl0IGZ1cnRoZXIhCi0JCQkgKi8KLQkJ
CWlmICh2b2wtPm1ham9yX3ZlciA8IDMpIHsKLQkJCQlpZiAodW5saWtlbHkoZGVsdGF4Y24gPT0g
KExDTiktMSkpCi0JCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgImxjbiBkZWx0YSA9PSAtMSIpOwot
CQkJCWlmICh1bmxpa2VseShsY24gPT0gKExDTiktMSkpCi0JCQkJCW50ZnNfZXJyb3Iodm9sLT5z
YiwgImxjbiA9PSAtMSIpOwotCQkJfQotI2VuZGlmCi0JCQkvKiBDaGVjayBsY24gaXMgbm90IGJl
bG93IC0xLiAqLwotCQkJaWYgKHVubGlrZWx5KGxjbiA8IChMQ04pLTEpKSB7Ci0JCQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiSW52YWxpZCBMQ04gPCAtMSBpbiAiCi0JCQkJCQkibWFwcGluZyBwYWly
cyBhcnJheS4iKTsKLQkJCQlnb3RvIGVycl9vdXQ7Ci0JCQl9Ci0JCQkvKiBFbnRlciB0aGUgY3Vy
cmVudCBsY24gaW50byB0aGUgcnVubGlzdCBlbGVtZW50LiAqLwotCQkJcmxbcmxwb3NdLmxjbiA9
IGxjbjsKLQkJfQotCQkvKiBHZXQgdG8gdGhlIG5leHQgcnVubGlzdCBlbGVtZW50LiAqLwotCQly
bHBvcysrOwotCQkvKiBJbmNyZW1lbnQgdGhlIGJ1ZmZlciBwb3NpdGlvbiB0byB0aGUgbmV4dCBt
YXBwaW5nIHBhaXIuICovCi0JCWJ1ZiArPSAoKmJ1ZiAmIDB4ZikgKyAoKCpidWYgPj4gNCkgJiAw
eGYpICsgMTsKLQl9Ci0JaWYgKHVubGlrZWx5KGJ1ZiA+PSBhdHRyX2VuZCkpCi0JCWdvdG8gaW9f
ZXJyb3I7Ci0JLyoKLQkgKiBJZiB0aGVyZSBpcyBhIGhpZ2hlc3RfdmNuIHNwZWNpZmllZCwgaXQg
bXVzdCBiZSBlcXVhbCB0byB0aGUgZmluYWwKLQkgKiB2Y24gaW4gdGhlIHJ1bmxpc3QgLSAxLCBv
ciBzb21ldGhpbmcgaGFzIGdvbmUgYmFkbHkgd3JvbmcuCi0JICovCi0JZGVsdGF4Y24gPSBzbGU2
NF90b19jcHUoYXR0ci0+ZGF0YS5ub25fcmVzaWRlbnQuaGlnaGVzdF92Y24pOwotCWlmICh1bmxp
a2VseShkZWx0YXhjbiAmJiB2Y24gLSAxICE9IGRlbHRheGNuKSkgewotbXBhX2VycjoKLQkJbnRm
c19lcnJvcih2b2wtPnNiLCAiQ29ycnVwdCBtYXBwaW5nIHBhaXJzIGFycmF5IGluICIKLQkJCQki
bm9uLXJlc2lkZW50IGF0dHJpYnV0ZS4iKTsKLQkJZ290byBlcnJfb3V0OwotCX0KLQkvKiBTZXR1
cCBub3QgbWFwcGVkIHJ1bmxpc3QgZWxlbWVudCBpZiB0aGlzIGlzIHRoZSBiYXNlIGV4dGVudC4g
Ki8KLQlpZiAoIWF0dHItPmRhdGEubm9uX3Jlc2lkZW50Lmxvd2VzdF92Y24pIHsKLQkJVkNOIG1h
eF9jbHVzdGVyOwotCi0JCW1heF9jbHVzdGVyID0gKChzbGU2NF90b19jcHUoCi0JCQkJYXR0ci0+
ZGF0YS5ub25fcmVzaWRlbnQuYWxsb2NhdGVkX3NpemUpICsKLQkJCQl2b2wtPmNsdXN0ZXJfc2l6
ZSAtIDEpID4+Ci0JCQkJdm9sLT5jbHVzdGVyX3NpemVfYml0cykgLSAxOwotCQkvKgotCQkgKiBB
IGhpZ2hlc3RfdmNuIG9mIHplcm8gbWVhbnMgdGhpcyBpcyBhIHNpbmdsZSBleHRlbnQKLQkJICog
YXR0cmlidXRlIHNvIHNpbXBseSB0ZXJtaW5hdGUgdGhlIHJ1bmxpc3Qgd2l0aCBMQ05fRU5PRU5U
KS4KLQkJICovCi0JCWlmIChkZWx0YXhjbikgewotCQkJLyoKLQkJCSAqIElmIHRoZXJlIGlzIGEg
ZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBoaWdoZXN0X3ZjbiBhbmQKLQkJCSAqIHRoZSBoaWdoZXN0
IGNsdXN0ZXIsIHRoZSBydW5saXN0IGlzIGVpdGhlciBjb3JydXB0Ci0JCQkgKiBvciwgbW9yZSBs
aWtlbHksIHRoZXJlIGFyZSBtb3JlIGV4dGVudHMgZm9sbG93aW5nCi0JCQkgKiB0aGlzIG9uZS4K
LQkJCSAqLwotCQkJaWYgKGRlbHRheGNuIDwgbWF4X2NsdXN0ZXIpIHsKLQkJCQludGZzX2RlYnVn
KCJNb3JlIGV4dGVudHMgdG8gZm9sbG93OyBkZWx0YXhjbiAiCi0JCQkJCQkiPSAweCVsbHgsIG1h
eF9jbHVzdGVyID0gIgotCQkJCQkJIjB4JWxseCIsCi0JCQkJCQkodW5zaWduZWQgbG9uZyBsb25n
KWRlbHRheGNuLAotCQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCW1heF9jbHVzdGVy
KTsKLQkJCQlybFtybHBvc10udmNuID0gdmNuOwotCQkJCXZjbiArPSBybFtybHBvc10ubGVuZ3Ro
ID0gbWF4X2NsdXN0ZXIgLQotCQkJCQkJZGVsdGF4Y247Ci0JCQkJcmxbcmxwb3NdLmxjbiA9IExD
Tl9STF9OT1RfTUFQUEVEOwotCQkJCXJscG9zKys7Ci0JCQl9IGVsc2UgaWYgKHVubGlrZWx5KGRl
bHRheGNuID4gbWF4X2NsdXN0ZXIpKSB7Ci0JCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiQ29ycnVw
dCBhdHRyaWJ1dGUuICAiCi0JCQkJCQkiZGVsdGF4Y24gPSAweCVsbHgsICIKLQkJCQkJCSJtYXhf
Y2x1c3RlciA9IDB4JWxseCIsCi0JCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKWRlbHRheGNuLAot
CQkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKLQkJCQkJCW1heF9jbHVzdGVyKTsKLQkJCQlnb3Rv
IG1wYV9lcnI7Ci0JCQl9Ci0JCX0KLQkJcmxbcmxwb3NdLmxjbiA9IExDTl9FTk9FTlQ7Ci0JfSBl
bHNlIC8qIE5vdCB0aGUgYmFzZSBleHRlbnQuIFRoZXJlIG1heSBiZSBtb3JlIGV4dGVudHMgdG8g
Zm9sbG93LiAqLwotCQlybFtybHBvc10ubGNuID0gTENOX1JMX05PVF9NQVBQRUQ7Ci0KLQkvKiBT
ZXR1cCB0ZXJtaW5hdGluZyBydW5saXN0IGVsZW1lbnQuICovCi0Jcmxbcmxwb3NdLnZjbiA9IHZj
bjsKLQlybFtybHBvc10ubGVuZ3RoID0gKHM2NCkwOwotCS8qIElmIG5vIGV4aXN0aW5nIHJ1bmxp
c3Qgd2FzIHNwZWNpZmllZCwgd2UgYXJlIGRvbmUuICovCi0JaWYgKCFvbGRfcmwpIHsKLQkJbnRm
c19kZWJ1ZygiTWFwcGluZyBwYWlycyBhcnJheSBzdWNjZXNzZnVsbHkgZGVjb21wcmVzc2VkOiIp
OwotCQludGZzX2RlYnVnX2R1bXBfcnVubGlzdChybCk7Ci0JCXJldHVybiBybDsKLQl9Ci0JLyog
Tm93IGNvbWJpbmUgdGhlIG5ldyBhbmQgb2xkIHJ1bmxpc3RzIGNoZWNraW5nIGZvciBvdmVybGFw
cy4gKi8KLQlvbGRfcmwgPSBudGZzX3J1bmxpc3RzX21lcmdlKG9sZF9ybCwgcmwpOwotCWlmICgh
SVNfRVJSKG9sZF9ybCkpCi0JCXJldHVybiBvbGRfcmw7Ci0JbnRmc19mcmVlKHJsKTsKLQludGZz
X2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbWVyZ2UgcnVubGlzdHMuIik7Ci0JcmV0dXJuIG9s
ZF9ybDsKLWlvX2Vycm9yOgotCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNvcnJ1cHQgYXR0cmlidXRl
LiIpOwotZXJyX291dDoKLQludGZzX2ZyZWUocmwpOwotCXJldHVybiBFUlJfUFRSKC1FSU8pOwot
fQotCi0vKioKLSAqIG50ZnNfcmxfdmNuX3RvX2xjbiAtIGNvbnZlcnQgYSB2Y24gaW50byBhIGxj
biBnaXZlbiBhIHJ1bmxpc3QKLSAqIEBybDoJCXJ1bmxpc3QgdG8gdXNlIGZvciBjb252ZXJzaW9u
Ci0gKiBAdmNuOgl2Y24gdG8gY29udmVydAotICoKLSAqIENvbnZlcnQgdGhlIHZpcnR1YWwgY2x1
c3RlciBudW1iZXIgQHZjbiBvZiBhbiBhdHRyaWJ1dGUgaW50byBhIGxvZ2ljYWwKLSAqIGNsdXN0
ZXIgbnVtYmVyIChsY24pIG9mIGEgZGV2aWNlIHVzaW5nIHRoZSBydW5saXN0IEBybCB0byBtYXAg
dmNucyB0byB0aGVpcgotICogY29ycmVzcG9uZGluZyBsY25zLgotICoKLSAqIEl0IGlzIHVwIHRv
IHRoZSBjYWxsZXIgdG8gc2VyaWFsaXplIGFjY2VzcyB0byB0aGUgcnVubGlzdCBAcmwuCi0gKgot
ICogU2luY2UgbGNucyBtdXN0IGJlID49IDAsIHdlIHVzZSBuZWdhdGl2ZSByZXR1cm4gY29kZXMg
d2l0aCBzcGVjaWFsIG1lYW5pbmc6Ci0gKgotICogUmV0dXJuIGNvZGUJCU1lYW5pbmcgLyBEZXNj
cmlwdGlvbgotICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLSAqICBMQ05fSE9MRQkJSG9sZSAvIG5vdCBhbGxvY2F0ZWQgb24gZGlzay4KLSAqICBM
Q05fUkxfTk9UX01BUFBFRAlUaGlzIGlzIHBhcnQgb2YgdGhlIHJ1bmxpc3Qgd2hpY2ggaGFzIG5v
dCBiZWVuCi0gKgkJCWluc2VydGVkIGludG8gdGhlIHJ1bmxpc3QgeWV0LgotICogIExDTl9FTk9F
TlQJCVRoZXJlIGlzIG5vIHN1Y2ggdmNuIGluIHRoZSBhdHRyaWJ1dGUuCi0gKgotICogTG9ja2lu
ZzogLSBUaGUgY2FsbGVyIG11c3QgaGF2ZSBsb2NrZWQgdGhlIHJ1bmxpc3QgKGZvciByZWFkaW5n
IG9yIHdyaXRpbmcpLgotICoJICAgIC0gVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCB0b3VjaCB0aGUg
bG9jaywgbm9yIGRvZXMgaXQgbW9kaWZ5IHRoZQotICoJICAgICAgcnVubGlzdC4KLSAqLwotTENO
IG50ZnNfcmxfdmNuX3RvX2xjbihjb25zdCBydW5saXN0X2VsZW1lbnQgKnJsLCBjb25zdCBWQ04g
dmNuKQotewotCWludCBpOwotCi0JQlVHX09OKHZjbiA8IDApOwotCS8qCi0JICogSWYgcmwgaXMg
TlVMTCwgYXNzdW1lIHRoYXQgd2UgaGF2ZSBmb3VuZCBhbiB1bm1hcHBlZCBydW5saXN0LiBUaGUK
LQkgKiBjYWxsZXIgY2FuIHRoZW4gYXR0ZW1wdCB0byBtYXAgaXQgYW5kIGZhaWwgYXBwcm9wcmlh
dGVseSBpZgotCSAqIG5lY2Vzc2FyeS4KLQkgKi8KLQlpZiAodW5saWtlbHkoIXJsKSkKLQkJcmV0
dXJuIExDTl9STF9OT1RfTUFQUEVEOwotCi0JLyogQ2F0Y2ggb3V0IG9mIGxvd2VyIGJvdW5kcyB2
Y24uICovCi0JaWYgKHVubGlrZWx5KHZjbiA8IHJsWzBdLnZjbikpCi0JCXJldHVybiBMQ05fRU5P
RU5UOwotCi0JZm9yIChpID0gMDsgbGlrZWx5KHJsW2ldLmxlbmd0aCk7IGkrKykgewotCQlpZiAo
dW5saWtlbHkodmNuIDwgcmxbaSsxXS52Y24pKSB7Ci0JCQlpZiAobGlrZWx5KHJsW2ldLmxjbiA+
PSAoTENOKTApKQotCQkJCXJldHVybiBybFtpXS5sY24gKyAodmNuIC0gcmxbaV0udmNuKTsKLQkJ
CXJldHVybiBybFtpXS5sY247Ci0JCX0KLQl9Ci0JLyoKLQkgKiBUaGUgdGVybWluYXRvciBlbGVt
ZW50IGlzIHNldHVwIHRvIHRoZSBjb3JyZWN0IHZhbHVlLCBpLmUuIG9uZSBvZgotCSAqIExDTl9I
T0xFLCBMQ05fUkxfTk9UX01BUFBFRCwgb3IgTENOX0VOT0VOVC4KLQkgKi8KLQlpZiAobGlrZWx5
KHJsW2ldLmxjbiA8IChMQ04pMCkpCi0JCXJldHVybiBybFtpXS5sY247Ci0JLyogSnVzdCBpbiBj
YXNlLi4uIFdlIGNvdWxkIHJlcGxhY2UgdGhpcyB3aXRoIEJVRygpIHNvbWUgZGF5LiAqLwotCXJl
dHVybiBMQ05fRU5PRU5UOwotfQotCi0jaWZkZWYgTlRGU19SVwotCi0vKioKLSAqIG50ZnNfcmxf
ZmluZF92Y25fbm9sb2NrIC0gZmluZCBhIHZjbiBpbiBhIHJ1bmxpc3QKLSAqIEBybDoJCXJ1bmxp
c3QgdG8gc2VhcmNoCi0gKiBAdmNuOgl2Y24gdG8gZmluZAotICoKLSAqIEZpbmQgdGhlIHZpcnR1
YWwgY2x1c3RlciBudW1iZXIgQHZjbiBpbiB0aGUgcnVubGlzdCBAcmwgYW5kIHJldHVybiB0aGUK
LSAqIGFkZHJlc3Mgb2YgdGhlIHJ1bmxpc3QgZWxlbWVudCBjb250YWluaW5nIHRoZSBAdmNuIG9u
IHN1Y2Nlc3MuCi0gKgotICogUmV0dXJuIE5VTEwgaWYgQHJsIGlzIE5VTEwgb3IgQHZjbiBpcyBp
biBhbiB1bm1hcHBlZCBwYXJ0L291dCBvZiBib3VuZHMgb2YKLSAqIHRoZSBydW5saXN0LgotICoK
LSAqIExvY2tpbmc6IFRoZSBydW5saXN0IG11c3QgYmUgbG9ja2VkIG9uIGVudHJ5LgotICovCi1y
dW5saXN0X2VsZW1lbnQgKm50ZnNfcmxfZmluZF92Y25fbm9sb2NrKHJ1bmxpc3RfZWxlbWVudCAq
cmwsIGNvbnN0IFZDTiB2Y24pCi17Ci0JQlVHX09OKHZjbiA8IDApOwotCWlmICh1bmxpa2VseSgh
cmwgfHwgdmNuIDwgcmxbMF0udmNuKSkKLQkJcmV0dXJuIE5VTEw7Ci0Jd2hpbGUgKGxpa2VseShy
bC0+bGVuZ3RoKSkgewotCQlpZiAodW5saWtlbHkodmNuIDwgcmxbMV0udmNuKSkgewotCQkJaWYg
KGxpa2VseShybC0+bGNuID49IExDTl9IT0xFKSkKLQkJCQlyZXR1cm4gcmw7Ci0JCQlyZXR1cm4g
TlVMTDsKLQkJfQotCQlybCsrOwotCX0KLQlpZiAobGlrZWx5KHJsLT5sY24gPT0gTENOX0VOT0VO
VCkpCi0JCXJldHVybiBybDsKLQlyZXR1cm4gTlVMTDsKLX0KLQotLyoqCi0gKiBudGZzX2dldF9u
cl9zaWduaWZpY2FudF9ieXRlcyAtIGdldCBudW1iZXIgb2YgYnl0ZXMgbmVlZGVkIHRvIHN0b3Jl
IGEgbnVtYmVyCi0gKiBAbjoJCW51bWJlciBmb3Igd2hpY2ggdG8gZ2V0IHRoZSBudW1iZXIgb2Yg
Ynl0ZXMgZm9yCi0gKgotICogUmV0dXJuIHRoZSBudW1iZXIgb2YgYnl0ZXMgcmVxdWlyZWQgdG8g
c3RvcmUgQG4gdW5hbWJpZ3VvdXNseSBhcwotICogYSBzaWduZWQgbnVtYmVyLgotICoKLSAqIFRo
aXMgaXMgdXNlZCBpbiB0aGUgY29udGV4dCBvZiB0aGUgbWFwcGluZyBwYWlycyBhcnJheSB0byBk
ZXRlcm1pbmUgaG93Ci0gKiBtYW55IGJ5dGVzIHdpbGwgYmUgbmVlZGVkIGluIHRoZSBhcnJheSB0
byBzdG9yZSBhIGdpdmVuIGxvZ2ljYWwgY2x1c3RlcgotICogbnVtYmVyIChsY24pIG9yIGEgc3Bl
Y2lmaWMgcnVuIGxlbmd0aC4KLSAqCi0gKiBSZXR1cm4gdGhlIG51bWJlciBvZiBieXRlcyB3cml0
dGVuLiAgVGhpcyBmdW5jdGlvbiBjYW5ub3QgZmFpbC4KLSAqLwotc3RhdGljIGlubGluZSBpbnQg
bnRmc19nZXRfbnJfc2lnbmlmaWNhbnRfYnl0ZXMoY29uc3QgczY0IG4pCi17Ci0JczY0IGwgPSBu
OwotCWludCBpOwotCXM4IGo7Ci0KLQlpID0gMDsKLQlkbyB7Ci0JCWwgPj49IDg7Ci0JCWkrKzsK
LQl9IHdoaWxlIChsICE9IDAgJiYgbCAhPSAtMSk7Ci0JaiA9IChuID4+IDggKiAoaSAtIDEpKSAm
IDB4ZmY7Ci0JLyogSWYgdGhlIHNpZ24gYml0IGlzIHdyb25nLCB3ZSBuZWVkIGFuIGV4dHJhIGJ5
dGUuICovCi0JaWYgKChuIDwgMCAmJiBqID49IDApIHx8IChuID4gMCAmJiBqIDwgMCkpCi0JCWkr
KzsKLQlyZXR1cm4gaTsKLX0KLQotLyoqCi0gKiBudGZzX2dldF9zaXplX2Zvcl9tYXBwaW5nX3Bh
aXJzIC0gZ2V0IGJ5dGVzIG5lZWRlZCBmb3IgbWFwcGluZyBwYWlycyBhcnJheQotICogQHZvbDoJ
bnRmcyB2b2x1bWUgKG5lZWRlZCBmb3IgdGhlIG50ZnMgdmVyc2lvbikKLSAqIEBybDoJCWxvY2tl
ZCBydW5saXN0IHRvIGRldGVybWluZSB0aGUgc2l6ZSBvZiB0aGUgbWFwcGluZyBwYWlycyBvZgot
ICogQGZpcnN0X3ZjbjoJZmlyc3QgdmNuIHdoaWNoIHRvIGluY2x1ZGUgaW4gdGhlIG1hcHBpbmcg
cGFpcnMgYXJyYXkKLSAqIEBsYXN0X3ZjbjoJbGFzdCB2Y24gd2hpY2ggdG8gaW5jbHVkZSBpbiB0
aGUgbWFwcGluZyBwYWlycyBhcnJheQotICoKLSAqIFdhbGsgdGhlIGxvY2tlZCBydW5saXN0IEBy
bCBhbmQgY2FsY3VsYXRlIHRoZSBzaXplIGluIGJ5dGVzIG9mIHRoZSBtYXBwaW5nCi0gKiBwYWly
cyBhcnJheSBjb3JyZXNwb25kaW5nIHRvIHRoZSBydW5saXN0IEBybCwgc3RhcnRpbmcgYXQgdmNu
IEBmaXJzdF92Y24gYW5kCi0gKiBmaW5pc2hpbmcgd2l0aCB2Y24gQGxhc3RfdmNuLgotICoKLSAq
IEEgQGxhc3RfdmNuIG9mIC0xIG1lYW5zIGVuZCBvZiBydW5saXN0IGFuZCBpbiB0aGF0IGNhc2Ug
dGhlIHNpemUgb2YgdGhlCi0gKiBtYXBwaW5nIHBhaXJzIGFycmF5IGNvcnJlc3BvbmRpbmcgdG8g
dGhlIHJ1bmxpc3Qgc3RhcnRpbmcgYXQgdmNuIEBmaXJzdF92Y24KLSAqIGFuZCBmaW5pc2hpbmcg
YXQgdGhlIGVuZCBvZiB0aGUgcnVubGlzdCBpcyBkZXRlcm1pbmVkLgotICoKLSAqIFRoaXMgZm9y
IGV4YW1wbGUgYWxsb3dzIHVzIHRvIGFsbG9jYXRlIGEgYnVmZmVyIG9mIHRoZSByaWdodCBzaXpl
IHdoZW4KLSAqIGJ1aWxkaW5nIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5LgotICoKLSAqIElmIEBy
bCBpcyBOVUxMLCBqdXN0IHJldHVybiAxIChmb3IgdGhlIHNpbmdsZSB0ZXJtaW5hdG9yIGJ5dGUp
LgotICoKLSAqIFJldHVybiB0aGUgY2FsY3VsYXRlZCBzaXplIGluIGJ5dGVzIG9uIHN1Y2Nlc3Mu
ICBPbiBlcnJvciwgcmV0dXJuIC1lcnJuby4KLSAqIFRoZSBmb2xsb3dpbmcgZXJyb3IgY29kZXMg
YXJlIGRlZmluZWQ6Ci0gKgktRUlOVkFMCS0gUnVuIGxpc3QgY29udGFpbnMgdW5tYXBwZWQgZWxl
bWVudHMuICBNYWtlIHN1cmUgdG8gb25seSBwYXNzCi0gKgkJICBmdWxseSBtYXBwZWQgcnVubGlz
dHMgdG8gdGhpcyBmdW5jdGlvbi4KLSAqCS1FSU8JLSBUaGUgcnVubGlzdCBpcyBjb3JydXB0Lgot
ICoKLSAqIExvY2tpbmc6IEBybCBtdXN0IGJlIGxvY2tlZCBvbiBlbnRyeSAoZWl0aGVyIGZvciBy
ZWFkaW5nIG9yIHdyaXRpbmcpLCBpdAotICoJICAgIHJlbWFpbnMgbG9ja2VkIHRocm91Z2hvdXQs
IGFuZCBpcyBsZWZ0IGxvY2tlZCB1cG9uIHJldHVybi4KLSAqLwotaW50IG50ZnNfZ2V0X3NpemVf
Zm9yX21hcHBpbmdfcGFpcnMoY29uc3QgbnRmc192b2x1bWUgKnZvbCwKLQkJY29uc3QgcnVubGlz
dF9lbGVtZW50ICpybCwgY29uc3QgVkNOIGZpcnN0X3ZjbiwKLQkJY29uc3QgVkNOIGxhc3RfdmNu
KQotewotCUxDTiBwcmV2X2xjbjsKLQlpbnQgcmxzOwotCWJvb2wgdGhlX2VuZCA9IGZhbHNlOwot
Ci0JQlVHX09OKGZpcnN0X3ZjbiA8IDApOwotCUJVR19PTihsYXN0X3ZjbiA8IC0xKTsKLQlCVUdf
T04obGFzdF92Y24gPj0gMCAmJiBmaXJzdF92Y24gPiBsYXN0X3Zjbik7Ci0JaWYgKCFybCkgewot
CQlCVUdfT04oZmlyc3RfdmNuKTsKLQkJQlVHX09OKGxhc3RfdmNuID4gMCk7Ci0JCXJldHVybiAx
OwotCX0KLQkvKiBTa2lwIHRvIHJ1bmxpc3QgZWxlbWVudCBjb250YWluaW5nIEBmaXJzdF92Y24u
ICovCi0Jd2hpbGUgKHJsLT5sZW5ndGggJiYgZmlyc3RfdmNuID49IHJsWzFdLnZjbikKLQkJcmwr
KzsKLQlpZiAodW5saWtlbHkoKCFybC0+bGVuZ3RoICYmIGZpcnN0X3ZjbiA+IHJsLT52Y24pIHx8
Ci0JCQlmaXJzdF92Y24gPCBybC0+dmNuKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JcHJldl9sY24g
PSAwOwotCS8qIEFsd2F5cyBuZWVkIHRoZSB0ZXJtaW5pbmcgemVybyBieXRlLiAqLwotCXJscyA9
IDE7Ci0JLyogRG8gdGhlIGZpcnN0IHBhcnRpYWwgcnVuIGlmIHByZXNlbnQuICovCi0JaWYgKGZp
cnN0X3ZjbiA+IHJsLT52Y24pIHsKLQkJczY0IGRlbHRhLCBsZW5ndGggPSBybC0+bGVuZ3RoOwot
Ci0JCS8qIFdlIGtub3cgcmwtPmxlbmd0aCAhPSAwIGFscmVhZHkuICovCi0JCWlmICh1bmxpa2Vs
eShsZW5ndGggPCAwIHx8IHJsLT5sY24gPCBMQ05fSE9MRSkpCi0JCQlnb3RvIGVycl9vdXQ7Ci0J
CS8qCi0JCSAqIElmIEBzdG9wX3ZjbiBpcyBnaXZlbiBhbmQgZmluaXNoZXMgaW5zaWRlIHRoaXMg
cnVuLCBjYXAgdGhlCi0JCSAqIHJ1biBsZW5ndGguCi0JCSAqLwotCQlpZiAodW5saWtlbHkobGFz
dF92Y24gPj0gMCAmJiBybFsxXS52Y24gPiBsYXN0X3ZjbikpIHsKLQkJCXM2NCBzMSA9IGxhc3Rf
dmNuICsgMTsKLQkJCWlmICh1bmxpa2VseShybFsxXS52Y24gPiBzMSkpCi0JCQkJbGVuZ3RoID0g
czEgLSBybC0+dmNuOwotCQkJdGhlX2VuZCA9IHRydWU7Ci0JCX0KLQkJZGVsdGEgPSBmaXJzdF92
Y24gLSBybC0+dmNuOwotCQkvKiBIZWFkZXIgYnl0ZSArIGxlbmd0aC4gKi8KLQkJcmxzICs9IDEg
KyBudGZzX2dldF9ucl9zaWduaWZpY2FudF9ieXRlcyhsZW5ndGggLSBkZWx0YSk7Ci0JCS8qCi0J
CSAqIElmIHRoZSBsb2dpY2FsIGNsdXN0ZXIgbnVtYmVyIChsY24pIGRlbm90ZXMgYSBob2xlIGFu
ZCB3ZQotCQkgKiBhcmUgb24gTlRGUyAzLjArLCB3ZSBkb24ndCBzdG9yZSBpdCBhdCBhbGwsIGku
ZS4gd2UgbmVlZAotCQkgKiB6ZXJvIHNwYWNlLiAgT24gZWFybGllciBOVEZTIHZlcnNpb25zIHdl
IGp1c3Qgc3RvcmUgdGhlIGxjbi4KLQkJICogTm90ZTogdGhpcyBhc3N1bWVzIHRoYXQgb24gTlRG
UyAxLjItLCBob2xlcyBhcmUgc3RvcmVkIHdpdGgKLQkJICogYW4gbGNuIG9mIC0xIGFuZCBub3Qg
YSBkZWx0YV9sY24gb2YgLTEgKHVubGVzcyBib3RoIGFyZSAtMSkuCi0JCSAqLwotCQlpZiAobGlr
ZWx5KHJsLT5sY24gPj0gMCB8fCB2b2wtPm1ham9yX3ZlciA8IDMpKSB7Ci0JCQlwcmV2X2xjbiA9
IHJsLT5sY247Ci0JCQlpZiAobGlrZWx5KHJsLT5sY24gPj0gMCkpCi0JCQkJcHJldl9sY24gKz0g
ZGVsdGE7Ci0JCQkvKiBDaGFuZ2UgaW4gbGNuLiAqLwotCQkJcmxzICs9IG50ZnNfZ2V0X25yX3Np
Z25pZmljYW50X2J5dGVzKHByZXZfbGNuKTsKLQkJfQotCQkvKiBHbyB0byBuZXh0IHJ1bmxpc3Qg
ZWxlbWVudC4gKi8KLQkJcmwrKzsKLQl9Ci0JLyogRG8gdGhlIGZ1bGwgcnVucy4gKi8KLQlmb3Ig
KDsgcmwtPmxlbmd0aCAmJiAhdGhlX2VuZDsgcmwrKykgewotCQlzNjQgbGVuZ3RoID0gcmwtPmxl
bmd0aDsKLQotCQlpZiAodW5saWtlbHkobGVuZ3RoIDwgMCB8fCBybC0+bGNuIDwgTENOX0hPTEUp
KQotCQkJZ290byBlcnJfb3V0OwotCQkvKgotCQkgKiBJZiBAc3RvcF92Y24gaXMgZ2l2ZW4gYW5k
IGZpbmlzaGVzIGluc2lkZSB0aGlzIHJ1biwgY2FwIHRoZQotCQkgKiBydW4gbGVuZ3RoLgotCQkg
Ki8KLQkJaWYgKHVubGlrZWx5KGxhc3RfdmNuID49IDAgJiYgcmxbMV0udmNuID4gbGFzdF92Y24p
KSB7Ci0JCQlzNjQgczEgPSBsYXN0X3ZjbiArIDE7Ci0JCQlpZiAodW5saWtlbHkocmxbMV0udmNu
ID4gczEpKQotCQkJCWxlbmd0aCA9IHMxIC0gcmwtPnZjbjsKLQkJCXRoZV9lbmQgPSB0cnVlOwot
CQl9Ci0JCS8qIEhlYWRlciBieXRlICsgbGVuZ3RoLiAqLwotCQlybHMgKz0gMSArIG50ZnNfZ2V0
X25yX3NpZ25pZmljYW50X2J5dGVzKGxlbmd0aCk7Ci0JCS8qCi0JCSAqIElmIHRoZSBsb2dpY2Fs
IGNsdXN0ZXIgbnVtYmVyIChsY24pIGRlbm90ZXMgYSBob2xlIGFuZCB3ZQotCQkgKiBhcmUgb24g
TlRGUyAzLjArLCB3ZSBkb24ndCBzdG9yZSBpdCBhdCBhbGwsIGkuZS4gd2UgbmVlZAotCQkgKiB6
ZXJvIHNwYWNlLiAgT24gZWFybGllciBOVEZTIHZlcnNpb25zIHdlIGp1c3Qgc3RvcmUgdGhlIGxj
bi4KLQkJICogTm90ZTogdGhpcyBhc3N1bWVzIHRoYXQgb24gTlRGUyAxLjItLCBob2xlcyBhcmUg
c3RvcmVkIHdpdGgKLQkJICogYW4gbGNuIG9mIC0xIGFuZCBub3QgYSBkZWx0YV9sY24gb2YgLTEg
KHVubGVzcyBib3RoIGFyZSAtMSkuCi0JCSAqLwotCQlpZiAobGlrZWx5KHJsLT5sY24gPj0gMCB8
fCB2b2wtPm1ham9yX3ZlciA8IDMpKSB7Ci0JCQkvKiBDaGFuZ2UgaW4gbGNuLiAqLwotCQkJcmxz
ICs9IG50ZnNfZ2V0X25yX3NpZ25pZmljYW50X2J5dGVzKHJsLT5sY24gLQotCQkJCQlwcmV2X2xj
bik7Ci0JCQlwcmV2X2xjbiA9IHJsLT5sY247Ci0JCX0KLQl9Ci0JcmV0dXJuIHJsczsKLWVycl9v
dXQ6Ci0JaWYgKHJsLT5sY24gPT0gTENOX1JMX05PVF9NQVBQRUQpCi0JCXJscyA9IC1FSU5WQUw7
Ci0JZWxzZQotCQlybHMgPSAtRUlPOwotCXJldHVybiBybHM7Ci19Ci0KLS8qKgotICogbnRmc193
cml0ZV9zaWduaWZpY2FudF9ieXRlcyAtIHdyaXRlIHRoZSBzaWduaWZpY2FudCBieXRlcyBvZiBh
IG51bWJlcgotICogQGRzdDoJZGVzdGluYXRpb24gYnVmZmVyIHRvIHdyaXRlIHRvCi0gKiBAZHN0
X21heDoJcG9pbnRlciB0byBsYXN0IGJ5dGUgb2YgZGVzdGluYXRpb24gYnVmZmVyIGZvciBib3Vu
ZHMgY2hlY2tpbmcKLSAqIEBuOgkJbnVtYmVyIHdob3NlIHNpZ25pZmljYW50IGJ5dGVzIHRvIHdy
aXRlCi0gKgotICogU3RvcmUgaW4gQGRzdCwgdGhlIG1pbmltdW0gYnl0ZXMgb2YgdGhlIG51bWJl
ciBAbiB3aGljaCBhcmUgcmVxdWlyZWQgdG8KLSAqIGlkZW50aWZ5IEBuIHVuYW1iaWd1b3VzbHkg
YXMgYSBzaWduZWQgbnVtYmVyLCB0YWtpbmcgY2FyZSBub3QgdG8gZXhjZWVkCi0gKiBAZGVzdF9t
YXgsIHRoZSBtYXhpbXVtIHBvc2l0aW9uIHdpdGhpbiBAZHN0IHRvIHdoaWNoIHdlIGFyZSBhbGxv
d2VkIHRvCi0gKiB3cml0ZS4KLSAqCi0gKiBUaGlzIGlzIHVzZWQgd2hlbiBidWlsZGluZyB0aGUg
bWFwcGluZyBwYWlycyBhcnJheSBvZiBhIHJ1bmxpc3QgdG8gY29tcHJlc3MKLSAqIGEgZ2l2ZW4g
bG9naWNhbCBjbHVzdGVyIG51bWJlciAobGNuKSBvciBhIHNwZWNpZmljIHJ1biBsZW5ndGggdG8g
dGhlIG1pbmltdW0KLSAqIHNpemUgcG9zc2libGUuCi0gKgotICogUmV0dXJuIHRoZSBudW1iZXIg
b2YgYnl0ZXMgd3JpdHRlbiBvbiBzdWNjZXNzLiAgT24gZXJyb3IsIGkuZS4gdGhlCi0gKiBkZXN0
aW5hdGlvbiBidWZmZXIgQGRzdCBpcyB0b28gc21hbGwsIHJldHVybiAtRU5PU1BDLgotICovCi1z
dGF0aWMgaW5saW5lIGludCBudGZzX3dyaXRlX3NpZ25pZmljYW50X2J5dGVzKHM4ICpkc3QsIGNv
bnN0IHM4ICpkc3RfbWF4LAotCQljb25zdCBzNjQgbikKLXsKLQlzNjQgbCA9IG47Ci0JaW50IGk7
Ci0JczggajsKLQotCWkgPSAwOwotCWRvIHsKLQkJaWYgKHVubGlrZWx5KGRzdCA+IGRzdF9tYXgp
KQotCQkJZ290byBlcnJfb3V0OwotCQkqZHN0KysgPSBsICYgMHhmZmxsOwotCQlsID4+PSA4Owot
CQlpKys7Ci0JfSB3aGlsZSAobCAhPSAwICYmIGwgIT0gLTEpOwotCWogPSAobiA+PiA4ICogKGkg
LSAxKSkgJiAweGZmOwotCS8qIElmIHRoZSBzaWduIGJpdCBpcyB3cm9uZywgd2UgbmVlZCBhbiBl
eHRyYSBieXRlLiAqLwotCWlmIChuIDwgMCAmJiBqID49IDApIHsKLQkJaWYgKHVubGlrZWx5KGRz
dCA+IGRzdF9tYXgpKQotCQkJZ290byBlcnJfb3V0OwotCQlpKys7Ci0JCSpkc3QgPSAoczgpLTE7
Ci0JfSBlbHNlIGlmIChuID4gMCAmJiBqIDwgMCkgewotCQlpZiAodW5saWtlbHkoZHN0ID4gZHN0
X21heCkpCi0JCQlnb3RvIGVycl9vdXQ7Ci0JCWkrKzsKLQkJKmRzdCA9IChzOCkwOwotCX0KLQly
ZXR1cm4gaTsKLWVycl9vdXQ6Ci0JcmV0dXJuIC1FTk9TUEM7Ci19Ci0KLS8qKgotICogbnRmc19t
YXBwaW5nX3BhaXJzX2J1aWxkIC0gYnVpbGQgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkgZnJvbSBh
IHJ1bmxpc3QKLSAqIEB2b2w6CW50ZnMgdm9sdW1lIChuZWVkZWQgZm9yIHRoZSBudGZzIHZlcnNp
b24pCi0gKiBAZHN0OglkZXN0aW5hdGlvbiBidWZmZXIgdG8gd2hpY2ggdG8gd3JpdGUgdGhlIG1h
cHBpbmcgcGFpcnMgYXJyYXkKLSAqIEBkc3RfbGVuOglzaXplIG9mIGRlc3RpbmF0aW9uIGJ1ZmZl
ciBAZHN0IGluIGJ5dGVzCi0gKiBAcmw6CQlsb2NrZWQgcnVubGlzdCBmb3Igd2hpY2ggdG8gYnVp
bGQgdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkKLSAqIEBmaXJzdF92Y246CWZpcnN0IHZjbiB3aGlj
aCB0byBpbmNsdWRlIGluIHRoZSBtYXBwaW5nIHBhaXJzIGFycmF5Ci0gKiBAbGFzdF92Y246CWxh
c3QgdmNuIHdoaWNoIHRvIGluY2x1ZGUgaW4gdGhlIG1hcHBpbmcgcGFpcnMgYXJyYXkKLSAqIEBz
dG9wX3ZjbjoJZmlyc3QgdmNuIG91dHNpZGUgZGVzdGluYXRpb24gYnVmZmVyIG9uIHN1Y2Nlc3Mg
b3IgLUVOT1NQQwotICoKLSAqIENyZWF0ZSB0aGUgbWFwcGluZyBwYWlycyBhcnJheSBmcm9tIHRo
ZSBsb2NrZWQgcnVubGlzdCBAcmwsIHN0YXJ0aW5nIGF0IHZjbgotICogQGZpcnN0X3ZjbiBhbmQg
ZmluaXNoaW5nIHdpdGggdmNuIEBsYXN0X3ZjbiBhbmQgc2F2ZSB0aGUgYXJyYXkgaW4gQGRzdC4K
LSAqIEBkc3RfbGVuIGlzIHRoZSBzaXplIG9mIEBkc3QgaW4gYnl0ZXMgYW5kIGl0IHNob3VsZCBi
ZSBhdCBsZWFzdCBlcXVhbCB0byB0aGUKLSAqIHZhbHVlIG9idGFpbmVkIGJ5IGNhbGxpbmcgbnRm
c19nZXRfc2l6ZV9mb3JfbWFwcGluZ19wYWlycygpLgotICoKLSAqIEEgQGxhc3RfdmNuIG9mIC0x
IG1lYW5zIGVuZCBvZiBydW5saXN0IGFuZCBpbiB0aGF0IGNhc2UgdGhlIG1hcHBpbmcgcGFpcnMK
LSAqIGFycmF5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIHJ1bmxpc3Qgc3RhcnRpbmcgYXQgdmNuIEBm
aXJzdF92Y24gYW5kIGZpbmlzaGluZwotICogYXQgdGhlIGVuZCBvZiB0aGUgcnVubGlzdCBpcyBj
cmVhdGVkLgotICoKLSAqIElmIEBybCBpcyBOVUxMLCBqdXN0IHdyaXRlIGEgc2luZ2xlIHRlcm1p
bmF0b3IgYnl0ZSB0byBAZHN0LgotICoKLSAqIE9uIHN1Y2Nlc3Mgb3IgLUVOT1NQQyBlcnJvciwg
aWYgQHN0b3BfdmNuIGlzIG5vdCBOVUxMLCAqQHN0b3BfdmNuIGlzIHNldCB0bwotICogdGhlIGZp
cnN0IHZjbiBvdXRzaWRlIHRoZSBkZXN0aW5hdGlvbiBidWZmZXIuICBOb3RlIHRoYXQgb24gZXJy
b3IsIEBkc3QgaGFzCi0gKiBiZWVuIGZpbGxlZCB3aXRoIGFsbCB0aGUgbWFwcGluZyBwYWlycyB0
aGF0IHdpbGwgZml0LCB0aHVzIGl0IGNhbiBiZSB0cmVhdGVkCi0gKiBhcyBwYXJ0aWFsIHN1Y2Nl
c3MsIGluIHRoYXQgYSBuZXcgYXR0cmlidXRlIGV4dGVudCBuZWVkcyB0byBiZSBjcmVhdGVkIG9y
Ci0gKiB0aGUgbmV4dCBleHRlbnQgaGFzIHRvIGJlIHVzZWQgYW5kIHRoZSBtYXBwaW5nIHBhaXJz
IGJ1aWxkIGhhcyB0byBiZQotICogY29udGludWVkIHdpdGggQGZpcnN0X3ZjbiBzZXQgdG8gKkBz
dG9wX3Zjbi4KLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZXNzIGFuZCAtZXJybm8gb24gZXJyb3Iu
ICBUaGUgZm9sbG93aW5nIGVycm9yIGNvZGVzIGFyZQotICogZGVmaW5lZDoKLSAqCS1FSU5WQUwJ
LSBSdW4gbGlzdCBjb250YWlucyB1bm1hcHBlZCBlbGVtZW50cy4gIE1ha2Ugc3VyZSB0byBvbmx5
IHBhc3MKLSAqCQkgIGZ1bGx5IG1hcHBlZCBydW5saXN0cyB0byB0aGlzIGZ1bmN0aW9uLgotICoJ
LUVJTwktIFRoZSBydW5saXN0IGlzIGNvcnJ1cHQuCi0gKgktRU5PU1BDCS0gVGhlIGRlc3RpbmF0
aW9uIGJ1ZmZlciBpcyB0b28gc21hbGwuCi0gKgotICogTG9ja2luZzogQHJsIG11c3QgYmUgbG9j
a2VkIG9uIGVudHJ5IChlaXRoZXIgZm9yIHJlYWRpbmcgb3Igd3JpdGluZyksIGl0Ci0gKgkgICAg
cmVtYWlucyBsb2NrZWQgdGhyb3VnaG91dCwgYW5kIGlzIGxlZnQgbG9ja2VkIHVwb24gcmV0dXJu
LgotICovCi1pbnQgbnRmc19tYXBwaW5nX3BhaXJzX2J1aWxkKGNvbnN0IG50ZnNfdm9sdW1lICp2
b2wsIHM4ICpkc3QsCi0JCWNvbnN0IGludCBkc3RfbGVuLCBjb25zdCBydW5saXN0X2VsZW1lbnQg
KnJsLAotCQljb25zdCBWQ04gZmlyc3RfdmNuLCBjb25zdCBWQ04gbGFzdF92Y24sIFZDTiAqY29u
c3Qgc3RvcF92Y24pCi17Ci0JTENOIHByZXZfbGNuOwotCXM4ICpkc3RfbWF4LCAqZHN0X25leHQ7
Ci0JaW50IGVyciA9IC1FTk9TUEM7Ci0JYm9vbCB0aGVfZW5kID0gZmFsc2U7Ci0JczggbGVuX2xl
biwgbGNuX2xlbjsKLQotCUJVR19PTihmaXJzdF92Y24gPCAwKTsKLQlCVUdfT04obGFzdF92Y24g
PCAtMSk7Ci0JQlVHX09OKGxhc3RfdmNuID49IDAgJiYgZmlyc3RfdmNuID4gbGFzdF92Y24pOwot
CUJVR19PTihkc3RfbGVuIDwgMSk7Ci0JaWYgKCFybCkgewotCQlCVUdfT04oZmlyc3RfdmNuKTsK
LQkJQlVHX09OKGxhc3RfdmNuID4gMCk7Ci0JCWlmIChzdG9wX3ZjbikKLQkJCSpzdG9wX3ZjbiA9
IDA7Ci0JCS8qIFRlcm1pbmF0b3IgYnl0ZS4gKi8KLQkJKmRzdCA9IDA7Ci0JCXJldHVybiAwOwot
CX0KLQkvKiBTa2lwIHRvIHJ1bmxpc3QgZWxlbWVudCBjb250YWluaW5nIEBmaXJzdF92Y24uICov
Ci0Jd2hpbGUgKHJsLT5sZW5ndGggJiYgZmlyc3RfdmNuID49IHJsWzFdLnZjbikKLQkJcmwrKzsK
LQlpZiAodW5saWtlbHkoKCFybC0+bGVuZ3RoICYmIGZpcnN0X3ZjbiA+IHJsLT52Y24pIHx8Ci0J
CQlmaXJzdF92Y24gPCBybC0+dmNuKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JLyoKLQkgKiBAZHN0
X21heCBpcyB1c2VkIGZvciBib3VuZHMgY2hlY2tpbmcgaW4KLQkgKiBudGZzX3dyaXRlX3NpZ25p
ZmljYW50X2J5dGVzKCkuCi0JICovCi0JZHN0X21heCA9IGRzdCArIGRzdF9sZW4gLSAxOwotCXBy
ZXZfbGNuID0gMDsKLQkvKiBEbyB0aGUgZmlyc3QgcGFydGlhbCBydW4gaWYgcHJlc2VudC4gKi8K
LQlpZiAoZmlyc3RfdmNuID4gcmwtPnZjbikgewotCQlzNjQgZGVsdGEsIGxlbmd0aCA9IHJsLT5s
ZW5ndGg7Ci0KLQkJLyogV2Uga25vdyBybC0+bGVuZ3RoICE9IDAgYWxyZWFkeS4gKi8KLQkJaWYg
KHVubGlrZWx5KGxlbmd0aCA8IDAgfHwgcmwtPmxjbiA8IExDTl9IT0xFKSkKLQkJCWdvdG8gZXJy
X291dDsKLQkJLyoKLQkJICogSWYgQHN0b3BfdmNuIGlzIGdpdmVuIGFuZCBmaW5pc2hlcyBpbnNp
ZGUgdGhpcyBydW4sIGNhcCB0aGUKLQkJICogcnVuIGxlbmd0aC4KLQkJICovCi0JCWlmICh1bmxp
a2VseShsYXN0X3ZjbiA+PSAwICYmIHJsWzFdLnZjbiA+IGxhc3RfdmNuKSkgewotCQkJczY0IHMx
ID0gbGFzdF92Y24gKyAxOwotCQkJaWYgKHVubGlrZWx5KHJsWzFdLnZjbiA+IHMxKSkKLQkJCQls
ZW5ndGggPSBzMSAtIHJsLT52Y247Ci0JCQl0aGVfZW5kID0gdHJ1ZTsKLQkJfQotCQlkZWx0YSA9
IGZpcnN0X3ZjbiAtIHJsLT52Y247Ci0JCS8qIFdyaXRlIGxlbmd0aC4gKi8KLQkJbGVuX2xlbiA9
IG50ZnNfd3JpdGVfc2lnbmlmaWNhbnRfYnl0ZXMoZHN0ICsgMSwgZHN0X21heCwKLQkJCQlsZW5n
dGggLSBkZWx0YSk7Ci0JCWlmICh1bmxpa2VseShsZW5fbGVuIDwgMCkpCi0JCQlnb3RvIHNpemVf
ZXJyOwotCQkvKgotCQkgKiBJZiB0aGUgbG9naWNhbCBjbHVzdGVyIG51bWJlciAobGNuKSBkZW5v
dGVzIGEgaG9sZSBhbmQgd2UKLQkJICogYXJlIG9uIE5URlMgMy4wKywgd2UgZG9uJ3Qgc3RvcmUg
aXQgYXQgYWxsLCBpLmUuIHdlIG5lZWQKLQkJICogemVybyBzcGFjZS4gIE9uIGVhcmxpZXIgTlRG
UyB2ZXJzaW9ucyB3ZSBqdXN0IHdyaXRlIHRoZSBsY24KLQkJICogY2hhbmdlLiAgRklYTUU6IERv
IHdlIG5lZWQgdG8gd3JpdGUgdGhlIGxjbiBjaGFuZ2Ugb3IganVzdAotCQkgKiB0aGUgbGNuIGlu
IHRoYXQgY2FzZT8gIE5vdCBzdXJlIGFzIEkgaGF2ZSBuZXZlciBzZWVuIHRoaXMKLQkJICogY2Fz
ZSBvbiBOVDQuIC0gV2UgYXNzdW1lIHRoYXQgd2UganVzdCBuZWVkIHRvIHdyaXRlIHRoZSBsY24K
LQkJICogY2hhbmdlIHVudGlsIHNvbWVvbmUgdGVsbHMgdXMgb3RoZXJ3aXNlLi4uIChBSUEpCi0J
CSAqLwotCQlpZiAobGlrZWx5KHJsLT5sY24gPj0gMCB8fCB2b2wtPm1ham9yX3ZlciA8IDMpKSB7
Ci0JCQlwcmV2X2xjbiA9IHJsLT5sY247Ci0JCQlpZiAobGlrZWx5KHJsLT5sY24gPj0gMCkpCi0J
CQkJcHJldl9sY24gKz0gZGVsdGE7Ci0JCQkvKiBXcml0ZSBjaGFuZ2UgaW4gbGNuLiAqLwotCQkJ
bGNuX2xlbiA9IG50ZnNfd3JpdGVfc2lnbmlmaWNhbnRfYnl0ZXMoZHN0ICsgMSArCi0JCQkJCWxl
bl9sZW4sIGRzdF9tYXgsIHByZXZfbGNuKTsKLQkJCWlmICh1bmxpa2VseShsY25fbGVuIDwgMCkp
Ci0JCQkJZ290byBzaXplX2VycjsKLQkJfSBlbHNlCi0JCQlsY25fbGVuID0gMDsKLQkJZHN0X25l
eHQgPSBkc3QgKyBsZW5fbGVuICsgbGNuX2xlbiArIDE7Ci0JCWlmICh1bmxpa2VseShkc3RfbmV4
dCA+IGRzdF9tYXgpKQotCQkJZ290byBzaXplX2VycjsKLQkJLyogVXBkYXRlIGhlYWRlciBieXRl
LiAqLwotCQkqZHN0ID0gbGNuX2xlbiA8PCA0IHwgbGVuX2xlbjsKLQkJLyogUG9zaXRpb24gYXQg
bmV4dCBtYXBwaW5nIHBhaXJzIGFycmF5IGVsZW1lbnQuICovCi0JCWRzdCA9IGRzdF9uZXh0Owot
CQkvKiBHbyB0byBuZXh0IHJ1bmxpc3QgZWxlbWVudC4gKi8KLQkJcmwrKzsKLQl9Ci0JLyogRG8g
dGhlIGZ1bGwgcnVucy4gKi8KLQlmb3IgKDsgcmwtPmxlbmd0aCAmJiAhdGhlX2VuZDsgcmwrKykg
ewotCQlzNjQgbGVuZ3RoID0gcmwtPmxlbmd0aDsKLQotCQlpZiAodW5saWtlbHkobGVuZ3RoIDwg
MCB8fCBybC0+bGNuIDwgTENOX0hPTEUpKQotCQkJZ290byBlcnJfb3V0OwotCQkvKgotCQkgKiBJ
ZiBAc3RvcF92Y24gaXMgZ2l2ZW4gYW5kIGZpbmlzaGVzIGluc2lkZSB0aGlzIHJ1biwgY2FwIHRo
ZQotCQkgKiBydW4gbGVuZ3RoLgotCQkgKi8KLQkJaWYgKHVubGlrZWx5KGxhc3RfdmNuID49IDAg
JiYgcmxbMV0udmNuID4gbGFzdF92Y24pKSB7Ci0JCQlzNjQgczEgPSBsYXN0X3ZjbiArIDE7Ci0J
CQlpZiAodW5saWtlbHkocmxbMV0udmNuID4gczEpKQotCQkJCWxlbmd0aCA9IHMxIC0gcmwtPnZj
bjsKLQkJCXRoZV9lbmQgPSB0cnVlOwotCQl9Ci0JCS8qIFdyaXRlIGxlbmd0aC4gKi8KLQkJbGVu
X2xlbiA9IG50ZnNfd3JpdGVfc2lnbmlmaWNhbnRfYnl0ZXMoZHN0ICsgMSwgZHN0X21heCwKLQkJ
CQlsZW5ndGgpOwotCQlpZiAodW5saWtlbHkobGVuX2xlbiA8IDApKQotCQkJZ290byBzaXplX2Vy
cjsKLQkJLyoKLQkJICogSWYgdGhlIGxvZ2ljYWwgY2x1c3RlciBudW1iZXIgKGxjbikgZGVub3Rl
cyBhIGhvbGUgYW5kIHdlCi0JCSAqIGFyZSBvbiBOVEZTIDMuMCssIHdlIGRvbid0IHN0b3JlIGl0
IGF0IGFsbCwgaS5lLiB3ZSBuZWVkCi0JCSAqIHplcm8gc3BhY2UuICBPbiBlYXJsaWVyIE5URlMg
dmVyc2lvbnMgd2UganVzdCB3cml0ZSB0aGUgbGNuCi0JCSAqIGNoYW5nZS4gIEZJWE1FOiBEbyB3
ZSBuZWVkIHRvIHdyaXRlIHRoZSBsY24gY2hhbmdlIG9yIGp1c3QKLQkJICogdGhlIGxjbiBpbiB0
aGF0IGNhc2U/ICBOb3Qgc3VyZSBhcyBJIGhhdmUgbmV2ZXIgc2VlbiB0aGlzCi0JCSAqIGNhc2Ug
b24gTlQ0LiAtIFdlIGFzc3VtZSB0aGF0IHdlIGp1c3QgbmVlZCB0byB3cml0ZSB0aGUgbGNuCi0J
CSAqIGNoYW5nZSB1bnRpbCBzb21lb25lIHRlbGxzIHVzIG90aGVyd2lzZS4uLiAoQUlBKQotCQkg
Ki8KLQkJaWYgKGxpa2VseShybC0+bGNuID49IDAgfHwgdm9sLT5tYWpvcl92ZXIgPCAzKSkgewot
CQkJLyogV3JpdGUgY2hhbmdlIGluIGxjbi4gKi8KLQkJCWxjbl9sZW4gPSBudGZzX3dyaXRlX3Np
Z25pZmljYW50X2J5dGVzKGRzdCArIDEgKwotCQkJCQlsZW5fbGVuLCBkc3RfbWF4LCBybC0+bGNu
IC0gcHJldl9sY24pOwotCQkJaWYgKHVubGlrZWx5KGxjbl9sZW4gPCAwKSkKLQkJCQlnb3RvIHNp
emVfZXJyOwotCQkJcHJldl9sY24gPSBybC0+bGNuOwotCQl9IGVsc2UKLQkJCWxjbl9sZW4gPSAw
OwotCQlkc3RfbmV4dCA9IGRzdCArIGxlbl9sZW4gKyBsY25fbGVuICsgMTsKLQkJaWYgKHVubGlr
ZWx5KGRzdF9uZXh0ID4gZHN0X21heCkpCi0JCQlnb3RvIHNpemVfZXJyOwotCQkvKiBVcGRhdGUg
aGVhZGVyIGJ5dGUuICovCi0JCSpkc3QgPSBsY25fbGVuIDw8IDQgfCBsZW5fbGVuOwotCQkvKiBQ
b3NpdGlvbiBhdCBuZXh0IG1hcHBpbmcgcGFpcnMgYXJyYXkgZWxlbWVudC4gKi8KLQkJZHN0ID0g
ZHN0X25leHQ7Ci0JfQotCS8qIFN1Y2Nlc3MuICovCi0JZXJyID0gMDsKLXNpemVfZXJyOgotCS8q
IFNldCBzdG9wIHZjbi4gKi8KLQlpZiAoc3RvcF92Y24pCi0JCSpzdG9wX3ZjbiA9IHJsLT52Y247
Ci0JLyogQWRkIHRlcm1pbmF0b3IgYnl0ZS4gKi8KLQkqZHN0ID0gMDsKLQlyZXR1cm4gZXJyOwot
ZXJyX291dDoKLQlpZiAocmwtPmxjbiA9PSBMQ05fUkxfTk9UX01BUFBFRCkKLQkJZXJyID0gLUVJ
TlZBTDsKLQllbHNlCi0JCWVyciA9IC1FSU87Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoqCi0gKiBu
dGZzX3JsX3RydW5jYXRlX25vbG9jayAtIHRydW5jYXRlIGEgcnVubGlzdCBzdGFydGluZyBhdCBh
IHNwZWNpZmllZCB2Y24KLSAqIEB2b2w6CW50ZnMgdm9sdW1lIChuZWVkZWQgZm9yIGVycm9yIG91
dHB1dCkKLSAqIEBydW5saXN0OglydW5saXN0IHRvIHRydW5jYXRlCi0gKiBAbmV3X2xlbmd0aDoJ
dGhlIG5ldyBsZW5ndGggb2YgdGhlIHJ1bmxpc3QgaW4gVkNOcwotICoKLSAqIFRydW5jYXRlIHRo
ZSBydW5saXN0IGRlc2NyaWJlZCBieSBAcnVubGlzdCBhcyB3ZWxsIGFzIHRoZSBtZW1vcnkgYnVm
ZmVyCi0gKiBob2xkaW5nIHRoZSBydW5saXN0IGVsZW1lbnRzIHRvIGEgbGVuZ3RoIG9mIEBuZXdf
bGVuZ3RoIFZDTnMuCi0gKgotICogSWYgQG5ld19sZW5ndGggbGllcyB3aXRoaW4gdGhlIHJ1bmxp
c3QsIHRoZSBydW5saXN0IGVsZW1lbnRzIHdpdGggVkNOcyBvZgotICogQG5ld19sZW5ndGggYW5k
IGFib3ZlIGFyZSBkaXNjYXJkZWQuICBBcyBhIHNwZWNpYWwgY2FzZSBpZiBAbmV3X2xlbmd0aCBp
cwotICogemVybywgdGhlIHJ1bmxpc3QgaXMgZGlzY2FyZGVkIGFuZCBzZXQgdG8gTlVMTC4KLSAq
Ci0gKiBJZiBAbmV3X2xlbmd0aCBsaWVzIGJleW9uZCB0aGUgcnVubGlzdCwgYSBzcGFyc2UgcnVu
bGlzdCBlbGVtZW50IGlzIGFkZGVkIHRvCi0gKiB0aGUgZW5kIG9mIHRoZSBydW5saXN0IEBydW5s
aXN0IG9yIGlmIHRoZSBsYXN0IHJ1bmxpc3QgZWxlbWVudCBpcyBhIHNwYXJzZQotICogb25lIGFs
cmVhZHksIHRoaXMgaXMgZXh0ZW5kZWQuCi0gKgotICogTm90ZSwgbm8gY2hlY2tpbmcgaXMgZG9u
ZSBmb3IgdW5tYXBwZWQgcnVubGlzdCBlbGVtZW50cy4gIEl0IGlzIGFzc3VtZWQgdGhhdAotICog
dGhlIGNhbGxlciBoYXMgbWFwcGVkIGFueSBlbGVtZW50cyB0aGF0IG5lZWQgdG8gYmUgbWFwcGVk
IGFscmVhZHkuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9y
LgotICoKLSAqIExvY2tpbmc6IFRoZSBjYWxsZXIgbXVzdCBob2xkIEBydW5saXN0LT5sb2NrIGZv
ciB3cml0aW5nLgotICovCi1pbnQgbnRmc19ybF90cnVuY2F0ZV9ub2xvY2soY29uc3QgbnRmc192
b2x1bWUgKnZvbCwgcnVubGlzdCAqY29uc3QgcnVubGlzdCwKLQkJY29uc3QgczY0IG5ld19sZW5n
dGgpCi17Ci0JcnVubGlzdF9lbGVtZW50ICpybDsKLQlpbnQgb2xkX3NpemU7Ci0KLQludGZzX2Rl
YnVnKCJFbnRlcmluZyBmb3IgbmV3X2xlbmd0aCAweCVsbHguIiwgKGxvbmcgbG9uZyluZXdfbGVu
Z3RoKTsKLQlCVUdfT04oIXJ1bmxpc3QpOwotCUJVR19PTihuZXdfbGVuZ3RoIDwgMCk7Ci0Jcmwg
PSBydW5saXN0LT5ybDsKLQlpZiAoIW5ld19sZW5ndGgpIHsKLQkJbnRmc19kZWJ1ZygiRnJlZWlu
ZyBydW5saXN0LiIpOwotCQlydW5saXN0LT5ybCA9IE5VTEw7Ci0JCWlmIChybCkKLQkJCW50ZnNf
ZnJlZShybCk7Ci0JCXJldHVybiAwOwotCX0KLQlpZiAodW5saWtlbHkoIXJsKSkgewotCQkvKgot
CQkgKiBDcmVhdGUgYSBydW5saXN0IGNvbnNpc3Rpbmcgb2YgYSBzcGFyc2UgcnVubGlzdCBlbGVt
ZW50IG9mCi0JCSAqIGxlbmd0aCBAbmV3X2xlbmd0aCBmb2xsb3dlZCBieSBhIHRlcm1pbmF0b3Ig
cnVubGlzdCBlbGVtZW50LgotCQkgKi8KLQkJcmwgPSBudGZzX21hbGxvY19ub2ZzKFBBR0VfU0la
RSk7Ci0JCWlmICh1bmxpa2VseSghcmwpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJOb3Qg
ZW5vdWdoIG1lbW9yeSB0byBhbGxvY2F0ZSAiCi0JCQkJCSJydW5saXN0IGVsZW1lbnQgYnVmZmVy
LiIpOwotCQkJcmV0dXJuIC1FTk9NRU07Ci0JCX0KLQkJcnVubGlzdC0+cmwgPSBybDsKLQkJcmxb
MV0ubGVuZ3RoID0gcmwtPnZjbiA9IDA7Ci0JCXJsLT5sY24gPSBMQ05fSE9MRTsKLQkJcmxbMV0u
dmNuID0gcmwtPmxlbmd0aCA9IG5ld19sZW5ndGg7Ci0JCXJsWzFdLmxjbiA9IExDTl9FTk9FTlQ7
Ci0JCXJldHVybiAwOwotCX0KLQlCVUdfT04obmV3X2xlbmd0aCA8IHJsLT52Y24pOwotCS8qIEZp
bmQgQG5ld19sZW5ndGggaW4gdGhlIHJ1bmxpc3QuICovCi0Jd2hpbGUgKGxpa2VseShybC0+bGVu
Z3RoICYmIG5ld19sZW5ndGggPj0gcmxbMV0udmNuKSkKLQkJcmwrKzsKLQkvKgotCSAqIElmIG5v
dCBhdCB0aGUgZW5kIG9mIHRoZSBydW5saXN0IHdlIG5lZWQgdG8gc2hyaW5rIGl0LgotCSAqIElm
IGF0IHRoZSBlbmQgb2YgdGhlIHJ1bmxpc3Qgd2UgbmVlZCB0byBleHBhbmQgaXQuCi0JICovCi0J
aWYgKHJsLT5sZW5ndGgpIHsKLQkJcnVubGlzdF9lbGVtZW50ICp0cmw7Ci0JCWJvb2wgaXNfZW5k
OwotCi0JCW50ZnNfZGVidWcoIlNocmlua2luZyBydW5saXN0LiIpOwotCQkvKiBEZXRlcm1pbmUg
dGhlIHJ1bmxpc3Qgc2l6ZS4gKi8KLQkJdHJsID0gcmwgKyAxOwotCQl3aGlsZSAobGlrZWx5KHRy
bC0+bGVuZ3RoKSkKLQkJCXRybCsrOwotCQlvbGRfc2l6ZSA9IHRybCAtIHJ1bmxpc3QtPnJsICsg
MTsKLQkJLyogVHJ1bmNhdGUgdGhlIHJ1bi4gKi8KLQkJcmwtPmxlbmd0aCA9IG5ld19sZW5ndGgg
LSBybC0+dmNuOwotCQkvKgotCQkgKiBJZiBhIHJ1biB3YXMgcGFydGlhbGx5IHRydW5jYXRlZCwg
bWFrZSB0aGUgZm9sbG93aW5nIHJ1bmxpc3QKLQkJICogZWxlbWVudCBhIHRlcm1pbmF0b3IuCi0J
CSAqLwotCQlpc19lbmQgPSBmYWxzZTsKLQkJaWYgKHJsLT5sZW5ndGgpIHsKLQkJCXJsKys7Ci0J
CQlpZiAoIXJsLT5sZW5ndGgpCi0JCQkJaXNfZW5kID0gdHJ1ZTsKLQkJCXJsLT52Y24gPSBuZXdf
bGVuZ3RoOwotCQkJcmwtPmxlbmd0aCA9IDA7Ci0JCX0KLQkJcmwtPmxjbiA9IExDTl9FTk9FTlQ7
Ci0JCS8qIFJlYWxsb2NhdGUgbWVtb3J5IGlmIG5lY2Vzc2FyeS4gKi8KLQkJaWYgKCFpc19lbmQp
IHsKLQkJCWludCBuZXdfc2l6ZSA9IHJsIC0gcnVubGlzdC0+cmwgKyAxOwotCQkJcmwgPSBudGZz
X3JsX3JlYWxsb2MocnVubGlzdC0+cmwsIG9sZF9zaXplLCBuZXdfc2l6ZSk7Ci0JCQlpZiAoSVNf
RVJSKHJsKSkKLQkJCQludGZzX3dhcm5pbmcodm9sLT5zYiwgIkZhaWxlZCB0byBzaHJpbmsgIgot
CQkJCQkJInJ1bmxpc3QgYnVmZmVyLiAgVGhpcyBqdXN0ICIKLQkJCQkJCSJ3YXN0ZXMgYSBiaXQg
b2YgbWVtb3J5ICIKLQkJCQkJCSJ0ZW1wb3JhcmlseSBzbyB3ZSBpZ25vcmUgaXQgIgotCQkJCQkJ
ImFuZCByZXR1cm4gc3VjY2Vzcy4iKTsKLQkJCWVsc2UKLQkJCQlydW5saXN0LT5ybCA9IHJsOwot
CQl9Ci0JfSBlbHNlIGlmIChsaWtlbHkoLyogIXJsLT5sZW5ndGggJiYgKi8gbmV3X2xlbmd0aCA+
IHJsLT52Y24pKSB7Ci0JCW50ZnNfZGVidWcoIkV4cGFuZGluZyBydW5saXN0LiIpOwotCQkvKgot
CQkgKiBJZiB0aGVyZSBpcyBhIHByZXZpb3VzIHJ1bmxpc3QgZWxlbWVudCBhbmQgaXQgaXMgYSBz
cGFyc2UKLQkJICogb25lLCBleHRlbmQgaXQuICBPdGhlcndpc2UgbmVlZCB0byBhZGQgYSBuZXcs
IHNwYXJzZSBydW5saXN0Ci0JCSAqIGVsZW1lbnQuCi0JCSAqLwotCQlpZiAoKHJsID4gcnVubGlz
dC0+cmwpICYmICgocmwgLSAxKS0+bGNuID09IExDTl9IT0xFKSkKLQkJCShybCAtIDEpLT5sZW5n
dGggPSBuZXdfbGVuZ3RoIC0gKHJsIC0gMSktPnZjbjsKLQkJZWxzZSB7Ci0JCQkvKiBEZXRlcm1p
bmUgdGhlIHJ1bmxpc3Qgc2l6ZS4gKi8KLQkJCW9sZF9zaXplID0gcmwgLSBydW5saXN0LT5ybCAr
IDE7Ci0JCQkvKiBSZWFsbG9jYXRlIG1lbW9yeSBpZiBuZWNlc3NhcnkuICovCi0JCQlybCA9IG50
ZnNfcmxfcmVhbGxvYyhydW5saXN0LT5ybCwgb2xkX3NpemUsCi0JCQkJCW9sZF9zaXplICsgMSk7
Ci0JCQlpZiAoSVNfRVJSKHJsKSkgewotCQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0
byBleHBhbmQgcnVubGlzdCAiCi0JCQkJCQkiYnVmZmVyLCBhYm9ydGluZy4iKTsKLQkJCQlyZXR1
cm4gUFRSX0VSUihybCk7Ci0JCQl9Ci0JCQlydW5saXN0LT5ybCA9IHJsOwotCQkJLyoKLQkJCSAq
IFNldCBAcmwgdG8gdGhlIHNhbWUgcnVubGlzdCBlbGVtZW50IGluIHRoZSBuZXcKLQkJCSAqIHJ1
bmxpc3QgYXMgYmVmb3JlIGluIHRoZSBvbGQgcnVubGlzdC4KLQkJCSAqLwotCQkJcmwgKz0gb2xk
X3NpemUgLSAxOwotCQkJLyogQWRkIGEgbmV3LCBzcGFyc2UgcnVubGlzdCBlbGVtZW50LiAqLwot
CQkJcmwtPmxjbiA9IExDTl9IT0xFOwotCQkJcmwtPmxlbmd0aCA9IG5ld19sZW5ndGggLSBybC0+
dmNuOwotCQkJLyogQWRkIGEgbmV3IHRlcm1pbmF0b3IgcnVubGlzdCBlbGVtZW50LiAqLwotCQkJ
cmwrKzsKLQkJCXJsLT5sZW5ndGggPSAwOwotCQl9Ci0JCXJsLT52Y24gPSBuZXdfbGVuZ3RoOwot
CQlybC0+bGNuID0gTENOX0VOT0VOVDsKLQl9IGVsc2UgLyogaWYgKHVubGlrZWx5KCFybC0+bGVu
Z3RoICYmIG5ld19sZW5ndGggPT0gcmwtPnZjbikpICovIHsKLQkJLyogUnVubGlzdCBhbHJlYWR5
IGhhcyBzYW1lIHNpemUgYXMgcmVxdWVzdGVkLiAqLwotCQlybC0+bGNuID0gTENOX0VOT0VOVDsK
LQl9Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gMDsKLX0KLQotLyoqCi0gKiBudGZz
X3JsX3B1bmNoX25vbG9jayAtIHB1bmNoIGEgaG9sZSBpbnRvIGEgcnVubGlzdAotICogQHZvbDoJ
bnRmcyB2b2x1bWUgKG5lZWRlZCBmb3IgZXJyb3Igb3V0cHV0KQotICogQHJ1bmxpc3Q6CXJ1bmxp
c3QgdG8gcHVuY2ggYSBob2xlIGludG8KLSAqIEBzdGFydDoJc3RhcnRpbmcgVkNOIG9mIHRoZSBo
b2xlIHRvIGJlIGNyZWF0ZWQKLSAqIEBsZW5ndGg6CXNpemUgb2YgdGhlIGhvbGUgdG8gYmUgY3Jl
YXRlZCBpbiB1bml0cyBvZiBjbHVzdGVycwotICoKLSAqIFB1bmNoIGEgaG9sZSBpbnRvIHRoZSBy
dW5saXN0IEBydW5saXN0IHN0YXJ0aW5nIGF0IFZDTiBAc3RhcnQgYW5kIG9mIHNpemUKLSAqIEBs
ZW5ndGggY2x1c3RlcnMuCi0gKgotICogUmV0dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9u
IGVycm9yLCBpbiB3aGljaCBjYXNlIEBydW5saXN0IGhhcyBub3QgYmVlbgotICogbW9kaWZpZWQu
Ci0gKgotICogSWYgQHN0YXJ0IGFuZC9vciBAc3RhcnQgKyBAbGVuZ3RoIGFyZSBvdXRzaWRlIHRo
ZSBydW5saXN0IHJldHVybiBlcnJvciBjb2RlCi0gKiAtRU5PRU5ULgotICoKLSAqIElmIHRoZSBy
dW5saXN0IGNvbnRhaW5zIHVubWFwcGVkIG9yIGVycm9yIGVsZW1lbnRzIGJldHdlZW4gQHN0YXJ0
IGFuZCBAc3RhcnQKLSAqICsgQGxlbmd0aCByZXR1cm4gZXJyb3IgY29kZSAtRUlOVkFMLgotICoK
LSAqIExvY2tpbmc6IFRoZSBjYWxsZXIgbXVzdCBob2xkIEBydW5saXN0LT5sb2NrIGZvciB3cml0
aW5nLgotICovCi1pbnQgbnRmc19ybF9wdW5jaF9ub2xvY2soY29uc3QgbnRmc192b2x1bWUgKnZv
bCwgcnVubGlzdCAqY29uc3QgcnVubGlzdCwKLQkJY29uc3QgVkNOIHN0YXJ0LCBjb25zdCBzNjQg
bGVuZ3RoKQotewotCWNvbnN0IFZDTiBlbmQgPSBzdGFydCArIGxlbmd0aDsKLQlzNjQgZGVsdGE7
Ci0JcnVubGlzdF9lbGVtZW50ICpybCwgKnJsX2VuZCwgKnJsX3JlYWxfZW5kLCAqdHJsOwotCWlu
dCBvbGRfc2l6ZTsKLQlib29sIGxjbl9maXh1cCA9IGZhbHNlOwotCi0JbnRmc19kZWJ1ZygiRW50
ZXJpbmcgZm9yIHN0YXJ0IDB4JWxseCwgbGVuZ3RoIDB4JWxseC4iLAotCQkJKGxvbmcgbG9uZylz
dGFydCwgKGxvbmcgbG9uZylsZW5ndGgpOwotCUJVR19PTighcnVubGlzdCk7Ci0JQlVHX09OKHN0
YXJ0IDwgMCk7Ci0JQlVHX09OKGxlbmd0aCA8IDApOwotCUJVR19PTihlbmQgPCAwKTsKLQlybCA9
IHJ1bmxpc3QtPnJsOwotCWlmICh1bmxpa2VseSghcmwpKSB7Ci0JCWlmIChsaWtlbHkoIXN0YXJ0
ICYmICFsZW5ndGgpKQotCQkJcmV0dXJuIDA7Ci0JCXJldHVybiAtRU5PRU5UOwotCX0KLQkvKiBG
aW5kIEBzdGFydCBpbiB0aGUgcnVubGlzdC4gKi8KLQl3aGlsZSAobGlrZWx5KHJsLT5sZW5ndGgg
JiYgc3RhcnQgPj0gcmxbMV0udmNuKSkKLQkJcmwrKzsKLQlybF9lbmQgPSBybDsKLQkvKiBGaW5k
IEBlbmQgaW4gdGhlIHJ1bmxpc3QuICovCi0Jd2hpbGUgKGxpa2VseShybF9lbmQtPmxlbmd0aCAm
JiBlbmQgPj0gcmxfZW5kWzFdLnZjbikpIHsKLQkJLyogVmVyaWZ5IHRoZXJlIGFyZSBubyB1bm1h
cHBlZCBvciBlcnJvciBlbGVtZW50cy4gKi8KLQkJaWYgKHVubGlrZWx5KHJsX2VuZC0+bGNuIDwg
TENOX0hPTEUpKQotCQkJcmV0dXJuIC1FSU5WQUw7Ci0JCXJsX2VuZCsrOwotCX0KLQkvKiBDaGVj
ayB0aGUgbGFzdCBlbGVtZW50LiAqLwotCWlmICh1bmxpa2VseShybF9lbmQtPmxlbmd0aCAmJiBy
bF9lbmQtPmxjbiA8IExDTl9IT0xFKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JLyogVGhpcyBjb3Zl
cnMgQHN0YXJ0IGJlaW5nIG91dCBvZiBib3VuZHMsIHRvby4gKi8KLQlpZiAoIXJsX2VuZC0+bGVu
Z3RoICYmIGVuZCA+IHJsX2VuZC0+dmNuKQotCQlyZXR1cm4gLUVOT0VOVDsKLQlpZiAoIWxlbmd0
aCkKLQkJcmV0dXJuIDA7Ci0JaWYgKCFybC0+bGVuZ3RoKQotCQlyZXR1cm4gLUVOT0VOVDsKLQly
bF9yZWFsX2VuZCA9IHJsX2VuZDsKLQkvKiBEZXRlcm1pbmUgdGhlIHJ1bmxpc3Qgc2l6ZS4gKi8K
LQl3aGlsZSAobGlrZWx5KHJsX3JlYWxfZW5kLT5sZW5ndGgpKQotCQlybF9yZWFsX2VuZCsrOwot
CW9sZF9zaXplID0gcmxfcmVhbF9lbmQgLSBydW5saXN0LT5ybCArIDE7Ci0JLyogSWYgQHN0YXJ0
IGlzIGluIGEgaG9sZSBzaW1wbHkgZXh0ZW5kIHRoZSBob2xlLiAqLwotCWlmIChybC0+bGNuID09
IExDTl9IT0xFKSB7Ci0JCS8qCi0JCSAqIElmIGJvdGggQHN0YXJ0IGFuZCBAZW5kIGFyZSBpbiB0
aGUgc2FtZSBzcGFyc2UgcnVuLCB3ZSBhcmUKLQkJICogZG9uZS4KLQkJICovCi0JCWlmIChlbmQg
PD0gcmxbMV0udmNuKSB7Ci0JCQludGZzX2RlYnVnKCJEb25lIChyZXF1ZXN0ZWQgaG9sZSBpcyBh
bHJlYWR5IHNwYXJzZSkuIik7Ci0JCQlyZXR1cm4gMDsKLQkJfQotZXh0ZW5kX2hvbGU6Ci0JCS8q
IEV4dGVuZCB0aGUgaG9sZS4gKi8KLQkJcmwtPmxlbmd0aCA9IGVuZCAtIHJsLT52Y247Ci0JCS8q
IElmIEBlbmQgaXMgaW4gYSBob2xlLCBtZXJnZSBpdCB3aXRoIHRoZSBjdXJyZW50IG9uZS4gKi8K
LQkJaWYgKHJsX2VuZC0+bGNuID09IExDTl9IT0xFKSB7Ci0JCQlybF9lbmQrKzsKLQkJCXJsLT5s
ZW5ndGggPSBybF9lbmQtPnZjbiAtIHJsLT52Y247Ci0JCX0KLQkJLyogV2UgaGF2ZSBkb25lIHRo
ZSBob2xlLiAgTm93IGRlYWwgd2l0aCB0aGUgcmVtYWluaW5nIHRhaWwuICovCi0JCXJsKys7Ci0J
CS8qIEN1dCBvdXQgYWxsIHJ1bmxpc3QgZWxlbWVudHMgdXAgdG8gQGVuZC4gKi8KLQkJaWYgKHJs
IDwgcmxfZW5kKQotCQkJbWVtbW92ZShybCwgcmxfZW5kLCAocmxfcmVhbF9lbmQgLSBybF9lbmQg
KyAxKSAqCi0JCQkJCXNpemVvZigqcmwpKTsKLQkJLyogQWRqdXN0IHRoZSBiZWdpbm5pbmcgb2Yg
dGhlIHRhaWwgaWYgbmVjZXNzYXJ5LiAqLwotCQlpZiAoZW5kID4gcmwtPnZjbikgewotCQkJZGVs
dGEgPSBlbmQgLSBybC0+dmNuOwotCQkJcmwtPnZjbiA9IGVuZDsKLQkJCXJsLT5sZW5ndGggLT0g
ZGVsdGE7Ci0JCQkvKiBPbmx5IGFkanVzdCB0aGUgbGNuIGlmIGl0IGlzIHJlYWwuICovCi0JCQlp
ZiAocmwtPmxjbiA+PSAwKQotCQkJCXJsLT5sY24gKz0gZGVsdGE7Ci0JCX0KLXNocmlua19hbGxv
Y2F0aW9uOgotCQkvKiBSZWFsbG9jYXRlIG1lbW9yeSBpZiB0aGUgYWxsb2NhdGlvbiBjaGFuZ2Vk
LiAqLwotCQlpZiAocmwgPCBybF9lbmQpIHsKLQkJCXJsID0gbnRmc19ybF9yZWFsbG9jKHJ1bmxp
c3QtPnJsLCBvbGRfc2l6ZSwKLQkJCQkJb2xkX3NpemUgLSAocmxfZW5kIC0gcmwpKTsKLQkJCWlm
IChJU19FUlIocmwpKQotCQkJCW50ZnNfd2FybmluZyh2b2wtPnNiLCAiRmFpbGVkIHRvIHNocmlu
ayAiCi0JCQkJCQkicnVubGlzdCBidWZmZXIuICBUaGlzIGp1c3QgIgotCQkJCQkJIndhc3RlcyBh
IGJpdCBvZiBtZW1vcnkgIgotCQkJCQkJInRlbXBvcmFyaWx5IHNvIHdlIGlnbm9yZSBpdCAiCi0J
CQkJCQkiYW5kIHJldHVybiBzdWNjZXNzLiIpOwotCQkJZWxzZQotCQkJCXJ1bmxpc3QtPnJsID0g
cmw7Ci0JCX0KLQkJbnRmc19kZWJ1ZygiRG9uZSAoZXh0ZW5kIGhvbGUpLiIpOwotCQlyZXR1cm4g
MDsKLQl9Ci0JLyoKLQkgKiBJZiBAc3RhcnQgaXMgYXQgdGhlIGJlZ2lubmluZyBvZiBhIHJ1biB0
aGluZ3MgYXJlIGVhc2llciBhcyB0aGVyZSBpcwotCSAqIG5vIG5lZWQgdG8gc3BsaXQgdGhlIGZp
cnN0IHJ1bi4KLQkgKi8KLQlpZiAoc3RhcnQgPT0gcmwtPnZjbikgewotCQkvKgotCQkgKiBAc3Rh
cnQgaXMgYXQgdGhlIGJlZ2lubmluZyBvZiBhIHJ1bi4KLQkJICoKLQkJICogSWYgdGhlIHByZXZp
b3VzIHJ1biBpcyBzcGFyc2UsIGV4dGVuZCBpdHMgaG9sZS4KLQkJICoKLQkJICogSWYgQGVuZCBp
cyBub3QgaW4gdGhlIHNhbWUgcnVuLCBzd2l0Y2ggdGhlIHJ1biB0byBiZSBzcGFyc2UKLQkJICog
YW5kIGV4dGVuZCB0aGUgbmV3bHkgY3JlYXRlZCBob2xlLgotCQkgKgotCQkgKiBUaHVzIGJvdGgg
b2YgdGhlc2UgY2FzZXMgcmVkdWNlIHRoZSBwcm9ibGVtIHRvIHRoZSBhYm92ZQotCQkgKiBjYXNl
IG9mICJAc3RhcnQgaXMgaW4gYSBob2xlIi4KLQkJICovCi0JCWlmIChybCA+IHJ1bmxpc3QtPnJs
ICYmIChybCAtIDEpLT5sY24gPT0gTENOX0hPTEUpIHsKLQkJCXJsLS07Ci0JCQlnb3RvIGV4dGVu
ZF9ob2xlOwotCQl9Ci0JCWlmIChlbmQgPj0gcmxbMV0udmNuKSB7Ci0JCQlybC0+bGNuID0gTENO
X0hPTEU7Ci0JCQlnb3RvIGV4dGVuZF9ob2xlOwotCQl9Ci0JCS8qCi0JCSAqIFRoZSBmaW5hbCBj
YXNlIGlzIHdoZW4gQGVuZCBpcyBpbiB0aGUgc2FtZSBydW4gYXMgQHN0YXJ0LgotCQkgKiBGb3Ig
dGhpcyBuZWVkIHRvIHNwbGl0IHRoZSBydW4gaW50byB0d28uICBPbmUgcnVuIGZvciB0aGUKLQkJ
ICogc3BhcnNlIHJlZ2lvbiBiZXR3ZWVuIHRoZSBiZWdpbm5pbmcgb2YgdGhlIG9sZCBydW4sIGku
ZS4KLQkJICogQHN0YXJ0LCBhbmQgQGVuZCBhbmQgb25lIGZvciB0aGUgcmVtYWluaW5nIG5vbi1z
cGFyc2UKLQkJICogcmVnaW9uLCBpLmUuIGJldHdlZW4gQGVuZCBhbmQgdGhlIGVuZCBvZiB0aGUg
b2xkIHJ1bi4KLQkJICovCi0JCXRybCA9IG50ZnNfcmxfcmVhbGxvYyhydW5saXN0LT5ybCwgb2xk
X3NpemUsIG9sZF9zaXplICsgMSk7Ci0JCWlmIChJU19FUlIodHJsKSkKLQkJCWdvdG8gZW5vbWVt
X291dDsKLQkJb2xkX3NpemUrKzsKLQkJaWYgKHJ1bmxpc3QtPnJsICE9IHRybCkgewotCQkJcmwg
PSB0cmwgKyAocmwgLSBydW5saXN0LT5ybCk7Ci0JCQlybF9lbmQgPSB0cmwgKyAocmxfZW5kIC0g
cnVubGlzdC0+cmwpOwotCQkJcmxfcmVhbF9lbmQgPSB0cmwgKyAocmxfcmVhbF9lbmQgLSBydW5s
aXN0LT5ybCk7Ci0JCQlydW5saXN0LT5ybCA9IHRybDsKLQkJfQotc3BsaXRfZW5kOgotCQkvKiBT
aGlmdCBhbGwgdGhlIHJ1bnMgdXAgYnkgb25lLiAqLwotCQltZW1tb3ZlKHJsICsgMSwgcmwsIChy
bF9yZWFsX2VuZCAtIHJsICsgMSkgKiBzaXplb2YoKnJsKSk7Ci0JCS8qIEZpbmFsbHksIHNldHVw
IHRoZSB0d28gc3BsaXQgcnVucy4gKi8KLQkJcmwtPmxjbiA9IExDTl9IT0xFOwotCQlybC0+bGVu
Z3RoID0gbGVuZ3RoOwotCQlybCsrOwotCQlybC0+dmNuICs9IGxlbmd0aDsKLQkJLyogT25seSBh
ZGp1c3QgdGhlIGxjbiBpZiBpdCBpcyByZWFsLiAqLwotCQlpZiAocmwtPmxjbiA+PSAwIHx8IGxj
bl9maXh1cCkKLQkJCXJsLT5sY24gKz0gbGVuZ3RoOwotCQlybC0+bGVuZ3RoIC09IGxlbmd0aDsK
LQkJbnRmc19kZWJ1ZygiRG9uZSAoc3BsaXQgb25lKS4iKTsKLQkJcmV0dXJuIDA7Ci0JfQotCS8q
Ci0JICogQHN0YXJ0IGlzIG5laXRoZXIgaW4gYSBob2xlIG5vciBhdCB0aGUgYmVnaW5uaW5nIG9m
IGEgcnVuLgotCSAqCi0JICogSWYgQGVuZCBpcyBpbiBhIGhvbGUsIHRoaW5ncyBhcmUgZWFzaWVy
IGFzIHNpbXBseSB0cnVuY2F0aW5nIHRoZSBydW4KLQkgKiBAc3RhcnQgaXMgaW4gdG8gZW5kIGF0
IEBzdGFydCAtIDEsIGRlbGV0aW5nIGFsbCBydW5zIGFmdGVyIHRoYXQgdXAKLQkgKiB0byBAZW5k
LCBhbmQgZmluYWxseSBleHRlbmRpbmcgdGhlIGJlZ2lubmluZyBvZiB0aGUgcnVuIEBlbmQgaXMg
aW4KLQkgKiB0byBiZSBAc3RhcnQgaXMgYWxsIHRoYXQgaXMgbmVlZGVkLgotCSAqLwotCWlmIChy
bF9lbmQtPmxjbiA9PSBMQ05fSE9MRSkgewotCQkvKiBUcnVuY2F0ZSB0aGUgcnVuIGNvbnRhaW5p
bmcgQHN0YXJ0LiAqLwotCQlybC0+bGVuZ3RoID0gc3RhcnQgLSBybC0+dmNuOwotCQlybCsrOwot
CQkvKiBDdXQgb3V0IGFsbCBydW5saXN0IGVsZW1lbnRzIHVwIHRvIEBlbmQuICovCi0JCWlmIChy
bCA8IHJsX2VuZCkKLQkJCW1lbW1vdmUocmwsIHJsX2VuZCwgKHJsX3JlYWxfZW5kIC0gcmxfZW5k
ICsgMSkgKgotCQkJCQlzaXplb2YoKnJsKSk7Ci0JCS8qIEV4dGVuZCB0aGUgYmVnaW5uaW5nIG9m
IHRoZSBydW4gQGVuZCBpcyBpbiB0byBiZSBAc3RhcnQuICovCi0JCXJsLT52Y24gPSBzdGFydDsK
LQkJcmwtPmxlbmd0aCA9IHJsWzFdLnZjbiAtIHN0YXJ0OwotCQlnb3RvIHNocmlua19hbGxvY2F0
aW9uOwotCX0KLQkvKiAKLQkgKiBJZiBAZW5kIGlzIG5vdCBpbiBhIGhvbGUgdGhlcmUgYXJlIHN0
aWxsIHR3byBjYXNlcyB0byBkaXN0aW5ndWlzaC4KLQkgKiBFaXRoZXIgQGVuZCBpcyBvciBpcyBu
b3QgaW4gdGhlIHNhbWUgcnVuIGFzIEBzdGFydC4KLQkgKgotCSAqIFRoZSBzZWNvbmQgY2FzZSBp
cyBlYXNpZXIgYXMgaXQgY2FuIGJlIHJlZHVjZWQgdG8gYW4gYWxyZWFkeSBzb2x2ZWQKLQkgKiBw
cm9ibGVtIGJ5IHRydW5jYXRpbmcgdGhlIHJ1biBAc3RhcnQgaXMgaW4gdG8gZW5kIGF0IEBzdGFy
dCAtIDEuCi0JICogVGhlbiwgaWYgQGVuZCBpcyBpbiB0aGUgbmV4dCBydW4gbmVlZCB0byBzcGxp
dCB0aGUgcnVuIGludG8gYSBzcGFyc2UKLQkgKiBydW4gZm9sbG93ZWQgYnkgYSBub24tc3BhcnNl
IHJ1biAoYWxyZWFkeSBjb3ZlcmVkIGFib3ZlKSBhbmQgaWYgQGVuZAotCSAqIGlzIG5vdCBpbiB0
aGUgbmV4dCBydW4gc3dpdGNoaW5nIGl0IHRvIGJlIHNwYXJzZSwgYWdhaW4gcmVkdWNlcyB0aGUK
LQkgKiBwcm9ibGVtIHRvIHRoZSBhbHJlYWR5IGNvdmVyZWQgY2FzZSBvZiAiQHN0YXJ0IGlzIGlu
IGEgaG9sZSIuCi0JICovCi0JaWYgKGVuZCA+PSBybFsxXS52Y24pIHsKLQkJLyoKLQkJICogSWYg
QGVuZCBpcyBub3QgaW4gdGhlIG5leHQgcnVuLCByZWR1Y2UgdGhlIHByb2JsZW0gdG8gdGhlCi0J
CSAqIGNhc2Ugb2YgIkBzdGFydCBpcyBpbiBhIGhvbGUiLgotCQkgKi8KLQkJaWYgKHJsWzFdLmxl
bmd0aCAmJiBlbmQgPj0gcmxbMl0udmNuKSB7Ci0JCQkvKiBUcnVuY2F0ZSB0aGUgcnVuIGNvbnRh
aW5pbmcgQHN0YXJ0LiAqLwotCQkJcmwtPmxlbmd0aCA9IHN0YXJ0IC0gcmwtPnZjbjsKLQkJCXJs
Kys7Ci0JCQlybC0+dmNuID0gc3RhcnQ7Ci0JCQlybC0+bGNuID0gTENOX0hPTEU7Ci0JCQlnb3Rv
IGV4dGVuZF9ob2xlOwotCQl9Ci0JCXRybCA9IG50ZnNfcmxfcmVhbGxvYyhydW5saXN0LT5ybCwg
b2xkX3NpemUsIG9sZF9zaXplICsgMSk7Ci0JCWlmIChJU19FUlIodHJsKSkKLQkJCWdvdG8gZW5v
bWVtX291dDsKLQkJb2xkX3NpemUrKzsKLQkJaWYgKHJ1bmxpc3QtPnJsICE9IHRybCkgewotCQkJ
cmwgPSB0cmwgKyAocmwgLSBydW5saXN0LT5ybCk7Ci0JCQlybF9lbmQgPSB0cmwgKyAocmxfZW5k
IC0gcnVubGlzdC0+cmwpOwotCQkJcmxfcmVhbF9lbmQgPSB0cmwgKyAocmxfcmVhbF9lbmQgLSBy
dW5saXN0LT5ybCk7Ci0JCQlydW5saXN0LT5ybCA9IHRybDsKLQkJfQotCQkvKiBUcnVuY2F0ZSB0
aGUgcnVuIGNvbnRhaW5pbmcgQHN0YXJ0LiAqLwotCQlybC0+bGVuZ3RoID0gc3RhcnQgLSBybC0+
dmNuOwotCQlybCsrOwotCQkvKgotCQkgKiBAZW5kIGlzIGluIHRoZSBuZXh0IHJ1biwgcmVkdWNl
IHRoZSBwcm9ibGVtIHRvIHRoZSBjYXNlCi0JCSAqIHdoZXJlICJAc3RhcnQgaXMgYXQgdGhlIGJl
Z2lubmluZyBvZiBhIHJ1biBhbmQgQGVuZCBpcyBpbgotCQkgKiB0aGUgc2FtZSBydW4gYXMgQHN0
YXJ0Ii4KLQkJICovCi0JCWRlbHRhID0gcmwtPnZjbiAtIHN0YXJ0OwotCQlybC0+dmNuID0gc3Rh
cnQ7Ci0JCWlmIChybC0+bGNuID49IDApIHsKLQkJCXJsLT5sY24gLT0gZGVsdGE7Ci0JCQkvKiBO
ZWVkIHRoaXMgaW4gY2FzZSB0aGUgbGNuIGp1c3QgYmVjYW1lIG5lZ2F0aXZlLiAqLwotCQkJbGNu
X2ZpeHVwID0gdHJ1ZTsKLQkJfQotCQlybC0+bGVuZ3RoICs9IGRlbHRhOwotCQlnb3RvIHNwbGl0
X2VuZDsKLQl9Ci0JLyoKLQkgKiBUaGUgZmlyc3QgY2FzZSBmcm9tIGFib3ZlLCBpLmUuIEBlbmQg
aXMgaW4gdGhlIHNhbWUgcnVuIGFzIEBzdGFydC4KLQkgKiBXZSBuZWVkIHRvIHNwbGl0IHRoZSBy
dW4gaW50byB0aHJlZS4gIE9uZSBydW4gZm9yIHRoZSBub24tc3BhcnNlCi0JICogcmVnaW9uIGJl
dHdlZW4gdGhlIGJlZ2lubmluZyBvZiB0aGUgb2xkIHJ1biBhbmQgQHN0YXJ0LCBvbmUgZm9yIHRo
ZQotCSAqIHNwYXJzZSByZWdpb24gYmV0d2VlbiBAc3RhcnQgYW5kIEBlbmQsIGFuZCBvbmUgZm9y
IHRoZSByZW1haW5pbmcKLQkgKiBub24tc3BhcnNlIHJlZ2lvbiwgaS5lLiBiZXR3ZWVuIEBlbmQg
YW5kIHRoZSBlbmQgb2YgdGhlIG9sZCBydW4uCi0JICovCi0JdHJsID0gbnRmc19ybF9yZWFsbG9j
KHJ1bmxpc3QtPnJsLCBvbGRfc2l6ZSwgb2xkX3NpemUgKyAyKTsKLQlpZiAoSVNfRVJSKHRybCkp
Ci0JCWdvdG8gZW5vbWVtX291dDsKLQlvbGRfc2l6ZSArPSAyOwotCWlmIChydW5saXN0LT5ybCAh
PSB0cmwpIHsKLQkJcmwgPSB0cmwgKyAocmwgLSBydW5saXN0LT5ybCk7Ci0JCXJsX2VuZCA9IHRy
bCArIChybF9lbmQgLSBydW5saXN0LT5ybCk7Ci0JCXJsX3JlYWxfZW5kID0gdHJsICsgKHJsX3Jl
YWxfZW5kIC0gcnVubGlzdC0+cmwpOwotCQlydW5saXN0LT5ybCA9IHRybDsKLQl9Ci0JLyogU2hp
ZnQgYWxsIHRoZSBydW5zIHVwIGJ5IHR3by4gKi8KLQltZW1tb3ZlKHJsICsgMiwgcmwsIChybF9y
ZWFsX2VuZCAtIHJsICsgMSkgKiBzaXplb2YoKnJsKSk7Ci0JLyogRmluYWxseSwgc2V0dXAgdGhl
IHRocmVlIHNwbGl0IHJ1bnMuICovCi0JcmwtPmxlbmd0aCA9IHN0YXJ0IC0gcmwtPnZjbjsKLQly
bCsrOwotCXJsLT52Y24gPSBzdGFydDsKLQlybC0+bGNuID0gTENOX0hPTEU7Ci0JcmwtPmxlbmd0
aCA9IGxlbmd0aDsKLQlybCsrOwotCWRlbHRhID0gZW5kIC0gcmwtPnZjbjsKLQlybC0+dmNuID0g
ZW5kOwotCXJsLT5sY24gKz0gZGVsdGE7Ci0JcmwtPmxlbmd0aCAtPSBkZWx0YTsKLQludGZzX2Rl
YnVnKCJEb25lIChzcGxpdCBib3RoKS4iKTsKLQlyZXR1cm4gMDsKLWVub21lbV9vdXQ6Ci0JbnRm
c19lcnJvcih2b2wtPnNiLCAiTm90IGVub3VnaCBtZW1vcnkgdG8gZXh0ZW5kIHJ1bmxpc3QgYnVm
ZmVyLiIpOwotCXJldHVybiAtRU5PTUVNOwotfQotCi0jZW5kaWYgLyogTlRGU19SVyAqLwpkaWZm
IC0tZ2l0IGEvZnMvbnRmcy9ydW5saXN0LmggYi9mcy9udGZzL3J1bmxpc3QuaApkZWxldGVkIGZp
bGUgbW9kZSAxMDA2NDQKaW5kZXggMzhkZTBhMzc1ZjU5Li4wMDAwMDAwMDAwMDAKLS0tIGEvZnMv
bnRmcy9ydW5saXN0LmgKKysrIC9kZXYvbnVsbApAQCAtMSw4OCArMCwwIEBACi0vKiBTUERYLUxp
Y2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlciAqLwotLyoKLSAqIHJ1bmxpc3QuaCAt
IERlZmluZXMgZm9yIHJ1bmxpc3QgaGFuZGxpbmcgaW4gTlRGUyBMaW51eCBrZXJuZWwgZHJpdmVy
LgotICoJICAgICAgIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4KLSAqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDEtMjAwNSBBbnRvbiBBbHRhcGFybWFrb3YKLSAqIENvcHlyaWdodCAoYykg
MjAwMiBSaWNoYXJkIFJ1c3NvbgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfUlVOTElTVF9I
Ci0jZGVmaW5lIF9MSU5VWF9OVEZTX1JVTkxJU1RfSAotCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNp
bmNsdWRlICJsYXlvdXQuaCIKLSNpbmNsdWRlICJ2b2x1bWUuaCIKLQotLyoqCi0gKiBydW5saXN0
X2VsZW1lbnQgLSBpbiBtZW1vcnkgdmNuIHRvIGxjbiBtYXBwaW5nIGFycmF5IGVsZW1lbnQKLSAq
IEB2Y246CXN0YXJ0aW5nIHZjbiBvZiB0aGUgY3VycmVudCBhcnJheSBlbGVtZW50Ci0gKiBAbGNu
OglzdGFydGluZyBsY24gb2YgdGhlIGN1cnJlbnQgYXJyYXkgZWxlbWVudAotICogQGxlbmd0aDoJ
bGVuZ3RoIGluIGNsdXN0ZXJzIG9mIHRoZSBjdXJyZW50IGFycmF5IGVsZW1lbnQKLSAqCi0gKiBU
aGUgbGFzdCB2Y24gKGluIGZhY3QgdGhlIGxhc3QgdmNuICsgMSkgaXMgcmVhY2hlZCB3aGVuIGxl
bmd0aCA9PSAwLgotICoKLSAqIFdoZW4gbGNuID09IC0xIHRoaXMgbWVhbnMgdGhhdCB0aGUgY291
bnQgdmNucyBzdGFydGluZyBhdCB2Y24gYXJlIG5vdAotICogcGh5c2ljYWxseSBhbGxvY2F0ZWQg
KGkuZS4gdGhpcyBpcyBhIGhvbGUgLyBkYXRhIGlzIHNwYXJzZSkuCi0gKi8KLXR5cGVkZWYgc3Ry
dWN0IHsJLyogSW4gbWVtb3J5IHZjbiB0byBsY24gbWFwcGluZyBzdHJ1Y3R1cmUgZWxlbWVudC4g
Ki8KLQlWQ04gdmNuOwkvKiB2Y24gPSBTdGFydGluZyB2aXJ0dWFsIGNsdXN0ZXIgbnVtYmVyLiAq
LwotCUxDTiBsY247CS8qIGxjbiA9IFN0YXJ0aW5nIGxvZ2ljYWwgY2x1c3RlciBudW1iZXIuICov
Ci0JczY0IGxlbmd0aDsJLyogUnVuIGxlbmd0aCBpbiBjbHVzdGVycy4gKi8KLX0gcnVubGlzdF9l
bGVtZW50OwotCi0vKioKLSAqIHJ1bmxpc3QgLSBpbiBtZW1vcnkgdmNuIHRvIGxjbiBtYXBwaW5n
IGFycmF5IGluY2x1ZGluZyBhIHJlYWQvd3JpdGUgbG9jawotICogQHJsOgkJcG9pbnRlciB0byBh
biBhcnJheSBvZiBydW5saXN0IGVsZW1lbnRzCi0gKiBAbG9jazoJcmVhZC93cml0ZSBzcGlubG9j
ayBmb3Igc2VyaWFsaXppbmcgYWNjZXNzIHRvIEBybAotICoKLSAqLwotdHlwZWRlZiBzdHJ1Y3Qg
ewotCXJ1bmxpc3RfZWxlbWVudCAqcmw7Ci0Jc3RydWN0IHJ3X3NlbWFwaG9yZSBsb2NrOwotfSBy
dW5saXN0OwotCi1zdGF0aWMgaW5saW5lIHZvaWQgbnRmc19pbml0X3J1bmxpc3QocnVubGlzdCAq
cmwpCi17Ci0JcmwtPnJsID0gTlVMTDsKLQlpbml0X3J3c2VtKCZybC0+bG9jayk7Ci19Ci0KLXR5
cGVkZWYgZW51bSB7Ci0JTENOX0hPTEUJCT0gLTEsCS8qIEtlZXAgdGhpcyBhcyBoaWdoZXN0IHZh
bHVlIG9yIGRpZSEgKi8KLQlMQ05fUkxfTk9UX01BUFBFRAk9IC0yLAotCUxDTl9FTk9FTlQJCT0g
LTMsCi0JTENOX0VOT01FTQkJPSAtNCwKLQlMQ05fRUlPCQkJPSAtNSwKLX0gTENOX1NQRUNJQUxf
VkFMVUVTOwotCi1leHRlcm4gcnVubGlzdF9lbGVtZW50ICpudGZzX3J1bmxpc3RzX21lcmdlKHJ1
bmxpc3RfZWxlbWVudCAqZHJsLAotCQlydW5saXN0X2VsZW1lbnQgKnNybCk7Ci0KLWV4dGVybiBy
dW5saXN0X2VsZW1lbnQgKm50ZnNfbWFwcGluZ19wYWlyc19kZWNvbXByZXNzKGNvbnN0IG50ZnNf
dm9sdW1lICp2b2wsCi0JCWNvbnN0IEFUVFJfUkVDT1JEICphdHRyLCBydW5saXN0X2VsZW1lbnQg
Km9sZF9ybCk7Ci0KLWV4dGVybiBMQ04gbnRmc19ybF92Y25fdG9fbGNuKGNvbnN0IHJ1bmxpc3Rf
ZWxlbWVudCAqcmwsIGNvbnN0IFZDTiB2Y24pOwotCi0jaWZkZWYgTlRGU19SVwotCi1leHRlcm4g
cnVubGlzdF9lbGVtZW50ICpudGZzX3JsX2ZpbmRfdmNuX25vbG9jayhydW5saXN0X2VsZW1lbnQg
KnJsLAotCQljb25zdCBWQ04gdmNuKTsKLQotZXh0ZXJuIGludCBudGZzX2dldF9zaXplX2Zvcl9t
YXBwaW5nX3BhaXJzKGNvbnN0IG50ZnNfdm9sdW1lICp2b2wsCi0JCWNvbnN0IHJ1bmxpc3RfZWxl
bWVudCAqcmwsIGNvbnN0IFZDTiBmaXJzdF92Y24sCi0JCWNvbnN0IFZDTiBsYXN0X3Zjbik7Ci0K
LWV4dGVybiBpbnQgbnRmc19tYXBwaW5nX3BhaXJzX2J1aWxkKGNvbnN0IG50ZnNfdm9sdW1lICp2
b2wsIHM4ICpkc3QsCi0JCWNvbnN0IGludCBkc3RfbGVuLCBjb25zdCBydW5saXN0X2VsZW1lbnQg
KnJsLAotCQljb25zdCBWQ04gZmlyc3RfdmNuLCBjb25zdCBWQ04gbGFzdF92Y24sIFZDTiAqY29u
c3Qgc3RvcF92Y24pOwotCi1leHRlcm4gaW50IG50ZnNfcmxfdHJ1bmNhdGVfbm9sb2NrKGNvbnN0
IG50ZnNfdm9sdW1lICp2b2wsCi0JCXJ1bmxpc3QgKmNvbnN0IHJ1bmxpc3QsIGNvbnN0IHM2NCBu
ZXdfbGVuZ3RoKTsKLQotaW50IG50ZnNfcmxfcHVuY2hfbm9sb2NrKGNvbnN0IG50ZnNfdm9sdW1l
ICp2b2wsIHJ1bmxpc3QgKmNvbnN0IHJ1bmxpc3QsCi0JCWNvbnN0IFZDTiBzdGFydCwgY29uc3Qg
czY0IGxlbmd0aCk7Ci0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0KLSNlbmRpZiAvKiBfTElOVVhf
TlRGU19SVU5MSVNUX0ggKi8KZGlmZiAtLWdpdCBhL2ZzL250ZnMvc3VwZXIuYyBiL2ZzL250ZnMv
c3VwZXIuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNTZhN2Q1YmQzM2U0Li4wMDAw
MDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9zdXBlci5jCisrKyAvZGV2L251bGwKQEAgLTEsMzIwMiAr
MCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgotLyoK
LSAqIHN1cGVyLmMgLSBOVEZTIGtlcm5lbCBzdXBlciBibG9jayBoYW5kbGluZy4gUGFydCBvZiB0
aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMS0yMDEyIEFu
dG9uIEFsdGFwYXJtYWtvdiBhbmQgVHV4ZXJhIEluYy4KLSAqIENvcHlyaWdodCAoYykgMjAwMSwy
MDAyIFJpY2hhcmQgUnVzc29uCi0gKi8KLSNkZWZpbmUgcHJfZm10KGZtdCkgS0JVSUxEX01PRE5B
TUUgIjogIiBmbXQKLQotI2luY2x1ZGUgPGxpbnV4L3N0ZGRlZi5oPgotI2luY2x1ZGUgPGxpbnV4
L2luaXQuaD4KLSNpbmNsdWRlIDxsaW51eC9zbGFiLmg+Ci0jaW5jbHVkZSA8bGludXgvc3RyaW5n
Lmg+Ci0jaW5jbHVkZSA8bGludXgvc3BpbmxvY2suaD4KLSNpbmNsdWRlIDxsaW51eC9ibGtkZXYu
aD4JLyogRm9yIGJkZXZfbG9naWNhbF9ibG9ja19zaXplKCkuICovCi0jaW5jbHVkZSA8bGludXgv
YmFja2luZy1kZXYuaD4KLSNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgotI2luY2x1ZGUg
PGxpbnV4L3Zmcy5oPgotI2luY2x1ZGUgPGxpbnV4L21vZHVsZXBhcmFtLmg+Ci0jaW5jbHVkZSA8
bGludXgvYml0bWFwLmg+Ci0KLSNpbmNsdWRlICJzeXNjdGwuaCIKLSNpbmNsdWRlICJsb2dmaWxl
LmgiCi0jaW5jbHVkZSAicXVvdGEuaCIKLSNpbmNsdWRlICJ1c25qcm5sLmgiCi0jaW5jbHVkZSAi
ZGlyLmgiCi0jaW5jbHVkZSAiZGVidWcuaCIKLSNpbmNsdWRlICJpbmRleC5oIgotI2luY2x1ZGUg
Imlub2RlLmgiCi0jaW5jbHVkZSAiYW9wcy5oIgotI2luY2x1ZGUgImxheW91dC5oIgotI2luY2x1
ZGUgIm1hbGxvYy5oIgotI2luY2x1ZGUgIm50ZnMuaCIKLQotLyogTnVtYmVyIG9mIG1vdW50ZWQg
ZmlsZXN5c3RlbXMgd2hpY2ggaGF2ZSBjb21wcmVzc2lvbiBlbmFibGVkLiAqLwotc3RhdGljIHVu
c2lnbmVkIGxvbmcgbnRmc19ucl9jb21wcmVzc2lvbl91c2VyczsKLQotLyogQSBnbG9iYWwgZGVm
YXVsdCB1cGNhc2UgdGFibGUgYW5kIGEgY29ycmVzcG9uZGluZyByZWZlcmVuY2UgY291bnQuICov
Ci1zdGF0aWMgbnRmc2NoYXIgKmRlZmF1bHRfdXBjYXNlOwotc3RhdGljIHVuc2lnbmVkIGxvbmcg
bnRmc19ucl91cGNhc2VfdXNlcnM7Ci0KLS8qIEVycm9yIGNvbnN0YW50cy9zdHJpbmdzIHVzZWQg
aW4gaW5vZGUuYzo6bnRmc19zaG93X29wdGlvbnMoKS4gKi8KLXR5cGVkZWYgZW51bSB7Ci0JLyog
T25lIG9mIHRoZXNlIG11c3QgYmUgcHJlc2VudCwgZGVmYXVsdCBpcyBPTl9FUlJPUlNfQ09OVElO
VUUuICovCi0JT05fRVJST1JTX1BBTklDCQkJPSAweDAxLAotCU9OX0VSUk9SU19SRU1PVU5UX1JP
CQk9IDB4MDIsCi0JT05fRVJST1JTX0NPTlRJTlVFCQk9IDB4MDQsCi0JLyogT3B0aW9uYWwsIGNh
biBiZSBjb21iaW5lZCB3aXRoIGFueSBvZiB0aGUgYWJvdmUuICovCi0JT05fRVJST1JTX1JFQ09W
RVIJCT0gMHgxMCwKLX0gT05fRVJST1JTX0FDVElPTlM7Ci0KLWNvbnN0IG9wdGlvbl90IG9uX2Vy
cm9yc19hcnJbXSA9IHsKLQl7IE9OX0VSUk9SU19QQU5JQywJInBhbmljIiB9LAotCXsgT05fRVJS
T1JTX1JFTU9VTlRfUk8sCSJyZW1vdW50LXJvIiwgfSwKLQl7IE9OX0VSUk9SU19DT05USU5VRSwJ
ImNvbnRpbnVlIiwgfSwKLQl7IE9OX0VSUk9SU19SRUNPVkVSLAkicmVjb3ZlciIgfSwKLQl7IDAs
CQkJTlVMTCB9Ci19OwotCi0vKioKLSAqIHNpbXBsZV9nZXRib29sIC0gY29udmVydCBpbnB1dCBz
dHJpbmcgdG8gYSBib29sZWFuIHZhbHVlCi0gKiBAczogaW5wdXQgc3RyaW5nIHRvIGNvbnZlcnQK
LSAqIEBzZXR2YWw6IHdoZXJlIHRvIHN0b3JlIHRoZSBvdXRwdXQgYm9vbGVhbiB2YWx1ZQotICoK
LSAqIENvcGllZCBmcm9tIG9sZCBudGZzIGRyaXZlciAod2hpY2ggY29waWVkIGZyb20gdmZhdCBk
cml2ZXIpLgotICoKLSAqICIxIiwgInllcyIsICJ0cnVlIiwgb3IgYW4gZW1wdHkgc3RyaW5nIGFy
ZSBjb252ZXJ0ZWQgdG8gJXRydWUuCi0gKiAiMCIsICJubyIsIGFuZCAiZmFsc2UiIGFyZSBjb252
ZXJ0ZWQgdG8gJWZhbHNlLgotICoKLSAqIFJldHVybjogJTEgaWYgdGhlIHN0cmluZyBpcyBjb252
ZXJ0ZWQgb3Igd2FzIGVtcHR5IGFuZCAqc2V0dmFsIGNvbnRhaW5zIGl0OwotICoJICAgJTAgaWYg
dGhlIHN0cmluZyB3YXMgbm90IHZhbGlkLgotICovCi1zdGF0aWMgaW50IHNpbXBsZV9nZXRib29s
KGNoYXIgKnMsIGJvb2wgKnNldHZhbCkKLXsKLQlpZiAocykgewotCQlpZiAoIXN0cmNtcChzLCAi
MSIpIHx8ICFzdHJjbXAocywgInllcyIpIHx8ICFzdHJjbXAocywgInRydWUiKSkKLQkJCSpzZXR2
YWwgPSB0cnVlOwotCQllbHNlIGlmICghc3RyY21wKHMsICIwIikgfHwgIXN0cmNtcChzLCAibm8i
KSB8fAotCQkJCQkJCSFzdHJjbXAocywgImZhbHNlIikpCi0JCQkqc2V0dmFsID0gZmFsc2U7Ci0J
CWVsc2UKLQkJCXJldHVybiAwOwotCX0gZWxzZQotCQkqc2V0dmFsID0gdHJ1ZTsKLQlyZXR1cm4g
MTsKLX0KLQotLyoqCi0gKiBwYXJzZV9vcHRpb25zIC0gcGFyc2UgdGhlIChyZSltb3VudCBvcHRp
b25zCi0gKiBAdm9sOgludGZzIHZvbHVtZQotICogQG9wdDoJc3RyaW5nIGNvbnRhaW5pbmcgdGhl
IChyZSltb3VudCBvcHRpb25zCi0gKgotICogUGFyc2UgdGhlIHJlY29nbml6ZWQgb3B0aW9ucyBp
biBAb3B0IGZvciB0aGUgbnRmcyB2b2x1bWUgZGVzY3JpYmVkIGJ5IEB2b2wuCi0gKi8KLXN0YXRp
YyBib29sIHBhcnNlX29wdGlvbnMobnRmc192b2x1bWUgKnZvbCwgY2hhciAqb3B0KQotewotCWNo
YXIgKnAsICp2LCAqb3Y7Ci0Jc3RhdGljIGNoYXIgKnV0ZjggPSAidXRmOCI7Ci0JaW50IGVycm9y
cyA9IDAsIHNsb3BweSA9IDA7Ci0Ja3VpZF90IHVpZCA9IElOVkFMSURfVUlEOwotCWtnaWRfdCBn
aWQgPSBJTlZBTElEX0dJRDsKLQl1bW9kZV90IGZtYXNrID0gKHVtb2RlX3QpLTEsIGRtYXNrID0g
KHVtb2RlX3QpLTE7Ci0JaW50IG1mdF96b25lX211bHRpcGxpZXIgPSAtMSwgb25fZXJyb3JzID0g
LTE7Ci0JaW50IHNob3dfc3lzX2ZpbGVzID0gLTEsIGNhc2Vfc2Vuc2l0aXZlID0gLTEsIGRpc2Fi
bGVfc3BhcnNlID0gLTE7Ci0Jc3RydWN0IG5sc190YWJsZSAqbmxzX21hcCA9IE5VTEwsICpvbGRf
bmxzOwotCi0JLyogSSBhbSBsYXp5Li4uICgtOCAqLwotI2RlZmluZSBOVEZTX0dFVE9QVF9XSVRI
X0RFRkFVTFQob3B0aW9uLCB2YXJpYWJsZSwgZGVmYXVsdF92YWx1ZSkJXAotCWlmICghc3RyY21w
KHAsIG9wdGlvbikpIHsJCQkJCVwKLQkJaWYgKCF2IHx8ICEqdikJCQkJCQlcCi0JCQl2YXJpYWJs
ZSA9IGRlZmF1bHRfdmFsdWU7CQkJXAotCQllbHNlIHsJCQkJCQkJXAotCQkJdmFyaWFibGUgPSBz
aW1wbGVfc3RydG91bChvdiA9IHYsICZ2LCAwKTsJXAotCQkJaWYgKCp2KQkJCQkJCVwKLQkJCQln
b3RvIG5lZWRzX3ZhbDsJCQkJXAotCQl9CQkJCQkJCVwKLQl9Ci0jZGVmaW5lIE5URlNfR0VUT1BU
KG9wdGlvbiwgdmFyaWFibGUpCQkJCQlcCi0JaWYgKCFzdHJjbXAocCwgb3B0aW9uKSkgewkJCQkJ
XAotCQlpZiAoIXYgfHwgISp2KQkJCQkJCVwKLQkJCWdvdG8gbmVlZHNfYXJnOwkJCQkJXAotCQl2
YXJpYWJsZSA9IHNpbXBsZV9zdHJ0b3VsKG92ID0gdiwgJnYsIDApOwkJXAotCQlpZiAoKnYpCQkJ
CQkJCVwKLQkJCWdvdG8gbmVlZHNfdmFsOwkJCQkJXAotCX0KLSNkZWZpbmUgTlRGU19HRVRPUFRf
VUlEKG9wdGlvbiwgdmFyaWFibGUpCQkJCVwKLQlpZiAoIXN0cmNtcChwLCBvcHRpb24pKSB7CQkJ
CQlcCi0JCXVpZF90IHVpZF92YWx1ZTsJCQkJCVwKLQkJaWYgKCF2IHx8ICEqdikJCQkJCQlcCi0J
CQlnb3RvIG5lZWRzX2FyZzsJCQkJCVwKLQkJdWlkX3ZhbHVlID0gc2ltcGxlX3N0cnRvdWwob3Yg
PSB2LCAmdiwgMCk7CQlcCi0JCWlmICgqdikJCQkJCQkJXAotCQkJZ290byBuZWVkc192YWw7CQkJ
CQlcCi0JCXZhcmlhYmxlID0gbWFrZV9rdWlkKGN1cnJlbnRfdXNlcl9ucygpLCB1aWRfdmFsdWUp
OwlcCi0JCWlmICghdWlkX3ZhbGlkKHZhcmlhYmxlKSkJCQkJXAotCQkJZ290byBuZWVkc192YWw7
CQkJCQlcCi0JfQotI2RlZmluZSBOVEZTX0dFVE9QVF9HSUQob3B0aW9uLCB2YXJpYWJsZSkJCQkJ
XAotCWlmICghc3RyY21wKHAsIG9wdGlvbikpIHsJCQkJCVwKLQkJZ2lkX3QgZ2lkX3ZhbHVlOwkJ
CQkJXAotCQlpZiAoIXYgfHwgISp2KQkJCQkJCVwKLQkJCWdvdG8gbmVlZHNfYXJnOwkJCQkJXAot
CQlnaWRfdmFsdWUgPSBzaW1wbGVfc3RydG91bChvdiA9IHYsICZ2LCAwKTsJCVwKLQkJaWYgKCp2
KQkJCQkJCQlcCi0JCQlnb3RvIG5lZWRzX3ZhbDsJCQkJCVwKLQkJdmFyaWFibGUgPSBtYWtlX2tn
aWQoY3VycmVudF91c2VyX25zKCksIGdpZF92YWx1ZSk7CVwKLQkJaWYgKCFnaWRfdmFsaWQodmFy
aWFibGUpKQkJCQlcCi0JCQlnb3RvIG5lZWRzX3ZhbDsJCQkJCVwKLQl9Ci0jZGVmaW5lIE5URlNf
R0VUT1BUX09DVEFMKG9wdGlvbiwgdmFyaWFibGUpCQkJCVwKLQlpZiAoIXN0cmNtcChwLCBvcHRp
b24pKSB7CQkJCQlcCi0JCWlmICghdiB8fCAhKnYpCQkJCQkJXAotCQkJZ290byBuZWVkc19hcmc7
CQkJCQlcCi0JCXZhcmlhYmxlID0gc2ltcGxlX3N0cnRvdWwob3YgPSB2LCAmdiwgOCk7CQlcCi0J
CWlmICgqdikJCQkJCQkJXAotCQkJZ290byBuZWVkc192YWw7CQkJCQlcCi0JfQotI2RlZmluZSBO
VEZTX0dFVE9QVF9CT09MKG9wdGlvbiwgdmFyaWFibGUpCQkJCVwKLQlpZiAoIXN0cmNtcChwLCBv
cHRpb24pKSB7CQkJCQlcCi0JCWJvb2wgdmFsOwkJCQkJCVwKLQkJaWYgKCFzaW1wbGVfZ2V0Ym9v
bCh2LCAmdmFsKSkJCQkJXAotCQkJZ290byBuZWVkc19ib29sOwkJCQlcCi0JCXZhcmlhYmxlID0g
dmFsOwkJCQkJCVwKLQl9Ci0jZGVmaW5lIE5URlNfR0VUT1BUX09QVElPTlNfQVJSQVkob3B0aW9u
LCB2YXJpYWJsZSwgb3B0X2FycmF5KQkJXAotCWlmICghc3RyY21wKHAsIG9wdGlvbikpIHsJCQkJ
CVwKLQkJaW50IF9pOwkJCQkJCQlcCi0JCWlmICghdiB8fCAhKnYpCQkJCQkJXAotCQkJZ290byBu
ZWVkc19hcmc7CQkJCQlcCi0JCW92ID0gdjsJCQkJCQkJXAotCQlpZiAodmFyaWFibGUgPT0gLTEp
CQkJCQlcCi0JCQl2YXJpYWJsZSA9IDA7CQkJCQlcCi0JCWZvciAoX2kgPSAwOyBvcHRfYXJyYXlb
X2ldLnN0ciAmJiAqb3B0X2FycmF5W19pXS5zdHI7IF9pKyspIFwKLQkJCWlmICghc3RyY21wKG9w
dF9hcnJheVtfaV0uc3RyLCB2KSkgewkJXAotCQkJCXZhcmlhYmxlIHw9IG9wdF9hcnJheVtfaV0u
dmFsOwkJXAotCQkJCWJyZWFrOwkJCQkJXAotCQkJfQkJCQkJCVwKLQkJaWYgKCFvcHRfYXJyYXlb
X2ldLnN0ciB8fCAhKm9wdF9hcnJheVtfaV0uc3RyKQkJXAotCQkJZ290byBuZWVkc192YWw7CQkJ
CQlcCi0JfQotCWlmICghb3B0IHx8ICEqb3B0KQotCQlnb3RvIG5vX21vdW50X29wdGlvbnM7Ci0J
bnRmc19kZWJ1ZygiRW50ZXJpbmcgd2l0aCBtb3VudCBvcHRpb25zIHN0cmluZzogJXMiLCBvcHQp
OwotCXdoaWxlICgocCA9IHN0cnNlcCgmb3B0LCAiLCIpKSkgewotCQlpZiAoKHYgPSBzdHJjaHIo
cCwgJz0nKSkpCi0JCQkqdisrID0gMDsKLQkJTlRGU19HRVRPUFRfVUlEKCJ1aWQiLCB1aWQpCi0J
CWVsc2UgTlRGU19HRVRPUFRfR0lEKCJnaWQiLCBnaWQpCi0JCWVsc2UgTlRGU19HRVRPUFRfT0NU
QUwoInVtYXNrIiwgZm1hc2sgPSBkbWFzaykKLQkJZWxzZSBOVEZTX0dFVE9QVF9PQ1RBTCgiZm1h
c2siLCBmbWFzaykKLQkJZWxzZSBOVEZTX0dFVE9QVF9PQ1RBTCgiZG1hc2siLCBkbWFzaykKLQkJ
ZWxzZSBOVEZTX0dFVE9QVCgibWZ0X3pvbmVfbXVsdGlwbGllciIsIG1mdF96b25lX211bHRpcGxp
ZXIpCi0JCWVsc2UgTlRGU19HRVRPUFRfV0lUSF9ERUZBVUxUKCJzbG9wcHkiLCBzbG9wcHksIHRy
dWUpCi0JCWVsc2UgTlRGU19HRVRPUFRfQk9PTCgic2hvd19zeXNfZmlsZXMiLCBzaG93X3N5c19m
aWxlcykKLQkJZWxzZSBOVEZTX0dFVE9QVF9CT09MKCJjYXNlX3NlbnNpdGl2ZSIsIGNhc2Vfc2Vu
c2l0aXZlKQotCQllbHNlIE5URlNfR0VUT1BUX0JPT0woImRpc2FibGVfc3BhcnNlIiwgZGlzYWJs
ZV9zcGFyc2UpCi0JCWVsc2UgTlRGU19HRVRPUFRfT1BUSU9OU19BUlJBWSgiZXJyb3JzIiwgb25f
ZXJyb3JzLAotCQkJCW9uX2Vycm9yc19hcnIpCi0JCWVsc2UgaWYgKCFzdHJjbXAocCwgInBvc2l4
IikgfHwgIXN0cmNtcChwLCAic2hvd19pbm9kZXMiKSkKLQkJCW50ZnNfd2FybmluZyh2b2wtPnNi
LCAiSWdub3Jpbmcgb2Jzb2xldGUgb3B0aW9uICVzLiIsCi0JCQkJCXApOwotCQllbHNlIGlmICgh
c3RyY21wKHAsICJubHMiKSB8fCAhc3RyY21wKHAsICJpb2NoYXJzZXQiKSkgewotCQkJaWYgKCFz
dHJjbXAocCwgImlvY2hhcnNldCIpKQotCQkJCW50ZnNfd2FybmluZyh2b2wtPnNiLCAiT3B0aW9u
IGlvY2hhcnNldCBpcyAiCi0JCQkJCQkiZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSAiCi0JCQkJCQki
b3B0aW9uIG5scz08Y2hhcnNldG5hbWU+IGluICIKLQkJCQkJCSJ0aGUgZnV0dXJlLiIpOwotCQkJ
aWYgKCF2IHx8ICEqdikKLQkJCQlnb3RvIG5lZWRzX2FyZzsKLXVzZV91dGY4OgotCQkJb2xkX25s
cyA9IG5sc19tYXA7Ci0JCQlubHNfbWFwID0gbG9hZF9ubHModik7Ci0JCQlpZiAoIW5sc19tYXAp
IHsKLQkJCQlpZiAoIW9sZF9ubHMpIHsKLQkJCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiTkxTIGNo
YXJhY3RlciBzZXQgIgotCQkJCQkJCSIlcyBub3QgZm91bmQuIiwgdik7Ci0JCQkJCXJldHVybiBm
YWxzZTsKLQkJCQl9Ci0JCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiTkxTIGNoYXJhY3RlciBzZXQg
JXMgbm90ICIKLQkJCQkJCSJmb3VuZC4gVXNpbmcgcHJldmlvdXMgb25lICVzLiIsCi0JCQkJCQl2
LCBvbGRfbmxzLT5jaGFyc2V0KTsKLQkJCQlubHNfbWFwID0gb2xkX25sczsKLQkJCX0gZWxzZSAv
KiBubHNfbWFwICovIHsKLQkJCQl1bmxvYWRfbmxzKG9sZF9ubHMpOwotCQkJfQotCQl9IGVsc2Ug
aWYgKCFzdHJjbXAocCwgInV0ZjgiKSkgewotCQkJYm9vbCB2YWwgPSBmYWxzZTsKLQkJCW50ZnNf
d2FybmluZyh2b2wtPnNiLCAiT3B0aW9uIHV0ZjggaXMgbm8gbG9uZ2VyICIKLQkJCQkgICAic3Vw
cG9ydGVkLCB1c2luZyBvcHRpb24gbmxzPXV0ZjguIFBsZWFzZSAiCi0JCQkJICAgInVzZSBvcHRp
b24gbmxzPXV0ZjggaW4gdGhlIGZ1dHVyZSBhbmQgIgotCQkJCSAgICJtYWtlIHN1cmUgdXRmOCBp
cyBjb21waWxlZCBlaXRoZXIgYXMgYSAiCi0JCQkJICAgIm1vZHVsZSBvciBpbnRvIHRoZSBrZXJu
ZWwuIik7Ci0JCQlpZiAoIXYgfHwgISp2KQotCQkJCXZhbCA9IHRydWU7Ci0JCQllbHNlIGlmICgh
c2ltcGxlX2dldGJvb2wodiwgJnZhbCkpCi0JCQkJZ290byBuZWVkc19ib29sOwotCQkJaWYgKHZh
bCkgewotCQkJCXYgPSB1dGY4OwotCQkJCWdvdG8gdXNlX3V0Zjg7Ci0JCQl9Ci0JCX0gZWxzZSB7
Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJVbnJlY29nbml6ZWQgbW91bnQgb3B0aW9uICVzLiIs
IHApOwotCQkJaWYgKGVycm9ycyA8IElOVF9NQVgpCi0JCQkJZXJyb3JzKys7Ci0JCX0KLSN1bmRl
ZiBOVEZTX0dFVE9QVF9PUFRJT05TX0FSUkFZCi0jdW5kZWYgTlRGU19HRVRPUFRfQk9PTAotI3Vu
ZGVmIE5URlNfR0VUT1BUCi0jdW5kZWYgTlRGU19HRVRPUFRfV0lUSF9ERUZBVUxUCi0JfQotbm9f
bW91bnRfb3B0aW9uczoKLQlpZiAoZXJyb3JzICYmICFzbG9wcHkpCi0JCXJldHVybiBmYWxzZTsK
LQlpZiAoc2xvcHB5KQotCQludGZzX3dhcm5pbmcodm9sLT5zYiwgIlNsb3BweSBvcHRpb24gZ2l2
ZW4uIElnbm9yaW5nICIKLQkJCQkidW5yZWNvZ25pemVkIG1vdW50IG9wdGlvbihzKSBhbmQgY29u
dGludWluZy4iKTsKLQkvKiBLZWVwIHRoaXMgZmlyc3QhICovCi0JaWYgKG9uX2Vycm9ycyAhPSAt
MSkgewotCQlpZiAoIW9uX2Vycm9ycykgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiSW52YWxp
ZCBlcnJvcnMgb3B0aW9uIGFyZ3VtZW50ICIKLQkJCQkJIm9yIGJ1ZyBpbiBvcHRpb25zIHBhcnNl
ci4iKTsKLQkJCXJldHVybiBmYWxzZTsKLQkJfQotCX0KLQlpZiAobmxzX21hcCkgewotCQlpZiAo
dm9sLT5ubHNfbWFwICYmIHZvbC0+bmxzX21hcCAhPSBubHNfbWFwKSB7Ci0JCQludGZzX2Vycm9y
KHZvbC0+c2IsICJDYW5ub3QgY2hhbmdlIE5MUyBjaGFyYWN0ZXIgc2V0ICIKLQkJCQkJIm9uIHJl
bW91bnQuIik7Ci0JCQlyZXR1cm4gZmFsc2U7Ci0JCX0gLyogZWxzZSAoIXZvbC0+bmxzX21hcCkg
Ki8KLQkJbnRmc19kZWJ1ZygiVXNpbmcgTkxTIGNoYXJhY3RlciBzZXQgJXMuIiwgbmxzX21hcC0+
Y2hhcnNldCk7Ci0JCXZvbC0+bmxzX21hcCA9IG5sc19tYXA7Ci0JfSBlbHNlIC8qICghbmxzX21h
cCkgKi8gewotCQlpZiAoIXZvbC0+bmxzX21hcCkgewotCQkJdm9sLT5ubHNfbWFwID0gbG9hZF9u
bHNfZGVmYXVsdCgpOwotCQkJaWYgKCF2b2wtPm5sc19tYXApIHsKLQkJCQludGZzX2Vycm9yKHZv
bC0+c2IsICJGYWlsZWQgdG8gbG9hZCBkZWZhdWx0ICIKLQkJCQkJCSJOTFMgY2hhcmFjdGVyIHNl
dC4iKTsKLQkJCQlyZXR1cm4gZmFsc2U7Ci0JCQl9Ci0JCQludGZzX2RlYnVnKCJVc2luZyBkZWZh
dWx0IE5MUyBjaGFyYWN0ZXIgc2V0ICglcykuIiwKLQkJCQkJdm9sLT5ubHNfbWFwLT5jaGFyc2V0
KTsKLQkJfQotCX0KLQlpZiAobWZ0X3pvbmVfbXVsdGlwbGllciAhPSAtMSkgewotCQlpZiAodm9s
LT5tZnRfem9uZV9tdWx0aXBsaWVyICYmIHZvbC0+bWZ0X3pvbmVfbXVsdGlwbGllciAhPQotCQkJ
CW1mdF96b25lX211bHRpcGxpZXIpIHsKLQkJCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNhbm5vdCBj
aGFuZ2UgbWZ0X3pvbmVfbXVsdGlwbGllciAiCi0JCQkJCSJvbiByZW1vdW50LiIpOwotCQkJcmV0
dXJuIGZhbHNlOwotCQl9Ci0JCWlmIChtZnRfem9uZV9tdWx0aXBsaWVyIDwgMSB8fCBtZnRfem9u
ZV9tdWx0aXBsaWVyID4gNCkgewotCQkJbnRmc19lcnJvcih2b2wtPnNiLCAiSW52YWxpZCBtZnRf
em9uZV9tdWx0aXBsaWVyLiAiCi0JCQkJCSJVc2luZyBkZWZhdWx0IHZhbHVlLCBpLmUuIDEuIik7
Ci0JCQltZnRfem9uZV9tdWx0aXBsaWVyID0gMTsKLQkJfQotCQl2b2wtPm1mdF96b25lX211bHRp
cGxpZXIgPSBtZnRfem9uZV9tdWx0aXBsaWVyOwotCX0KLQlpZiAoIXZvbC0+bWZ0X3pvbmVfbXVs
dGlwbGllcikKLQkJdm9sLT5tZnRfem9uZV9tdWx0aXBsaWVyID0gMTsKLQlpZiAob25fZXJyb3Jz
ICE9IC0xKQotCQl2b2wtPm9uX2Vycm9ycyA9IG9uX2Vycm9yczsKLQlpZiAoIXZvbC0+b25fZXJy
b3JzIHx8IHZvbC0+b25fZXJyb3JzID09IE9OX0VSUk9SU19SRUNPVkVSKQotCQl2b2wtPm9uX2Vy
cm9ycyB8PSBPTl9FUlJPUlNfQ09OVElOVUU7Ci0JaWYgKHVpZF92YWxpZCh1aWQpKQotCQl2b2wt
PnVpZCA9IHVpZDsKLQlpZiAoZ2lkX3ZhbGlkKGdpZCkpCi0JCXZvbC0+Z2lkID0gZ2lkOwotCWlm
IChmbWFzayAhPSAodW1vZGVfdCktMSkKLQkJdm9sLT5mbWFzayA9IGZtYXNrOwotCWlmIChkbWFz
ayAhPSAodW1vZGVfdCktMSkKLQkJdm9sLT5kbWFzayA9IGRtYXNrOwotCWlmIChzaG93X3N5c19m
aWxlcyAhPSAtMSkgewotCQlpZiAoc2hvd19zeXNfZmlsZXMpCi0JCQlOVm9sU2V0U2hvd1N5c3Rl
bUZpbGVzKHZvbCk7Ci0JCWVsc2UKLQkJCU5Wb2xDbGVhclNob3dTeXN0ZW1GaWxlcyh2b2wpOwot
CX0KLQlpZiAoY2FzZV9zZW5zaXRpdmUgIT0gLTEpIHsKLQkJaWYgKGNhc2Vfc2Vuc2l0aXZlKQot
CQkJTlZvbFNldENhc2VTZW5zaXRpdmUodm9sKTsKLQkJZWxzZQotCQkJTlZvbENsZWFyQ2FzZVNl
bnNpdGl2ZSh2b2wpOwotCX0KLQlpZiAoZGlzYWJsZV9zcGFyc2UgIT0gLTEpIHsKLQkJaWYgKGRp
c2FibGVfc3BhcnNlKQotCQkJTlZvbENsZWFyU3BhcnNlRW5hYmxlZCh2b2wpOwotCQllbHNlIHsK
LQkJCWlmICghTlZvbFNwYXJzZUVuYWJsZWQodm9sKSAmJgotCQkJCQl2b2wtPm1ham9yX3ZlciAm
JiB2b2wtPm1ham9yX3ZlciA8IDMpCi0JCQkJbnRmc193YXJuaW5nKHZvbC0+c2IsICJOb3QgZW5h
Ymxpbmcgc3BhcnNlICIKLQkJCQkJCSJzdXBwb3J0IGR1ZSB0byBOVEZTIHZvbHVtZSAiCi0JCQkJ
CQkidmVyc2lvbiAlaS4laSAobmVlZCBhdCBsZWFzdCAiCi0JCQkJCQkidmVyc2lvbiAzLjApLiIs
IHZvbC0+bWFqb3JfdmVyLAotCQkJCQkJdm9sLT5taW5vcl92ZXIpOwotCQkJZWxzZQotCQkJCU5W
b2xTZXRTcGFyc2VFbmFibGVkKHZvbCk7Ci0JCX0KLQl9Ci0JcmV0dXJuIHRydWU7Ci1uZWVkc19h
cmc6Ci0JbnRmc19lcnJvcih2b2wtPnNiLCAiVGhlICVzIG9wdGlvbiByZXF1aXJlcyBhbiBhcmd1
bWVudC4iLCBwKTsKLQlyZXR1cm4gZmFsc2U7Ci1uZWVkc19ib29sOgotCW50ZnNfZXJyb3Iodm9s
LT5zYiwgIlRoZSAlcyBvcHRpb24gcmVxdWlyZXMgYSBib29sZWFuIGFyZ3VtZW50LiIsIHApOwot
CXJldHVybiBmYWxzZTsKLW5lZWRzX3ZhbDoKLQludGZzX2Vycm9yKHZvbC0+c2IsICJJbnZhbGlk
ICVzIG9wdGlvbiBhcmd1bWVudDogJXMiLCBwLCBvdik7Ci0JcmV0dXJuIGZhbHNlOwotfQotCi0j
aWZkZWYgTlRGU19SVwotCi0vKioKLSAqIG50ZnNfd3JpdGVfdm9sdW1lX2ZsYWdzIC0gd3JpdGUg
bmV3IGZsYWdzIHRvIHRoZSB2b2x1bWUgaW5mb3JtYXRpb24gZmxhZ3MKLSAqIEB2b2w6CW50ZnMg
dm9sdW1lIG9uIHdoaWNoIHRvIG1vZGlmeSB0aGUgZmxhZ3MKLSAqIEBmbGFnczoJbmV3IGZsYWdz
IHZhbHVlIGZvciB0aGUgdm9sdW1lIGluZm9ybWF0aW9uIGZsYWdzCi0gKgotICogSW50ZXJuYWwg
ZnVuY3Rpb24uICBZb3UgcHJvYmFibHkgd2FudCB0byB1c2UgbnRmc197c2V0LGNsZWFyfV92b2x1
bWVfZmxhZ3MoKQotICogaW5zdGVhZCAoc2VlIGJlbG93KS4KLSAqCi0gKiBSZXBsYWNlIHRoZSB2
b2x1bWUgaW5mb3JtYXRpb24gZmxhZ3Mgb24gdGhlIHZvbHVtZSBAdm9sIHdpdGggdGhlIHZhbHVl
Ci0gKiBzdXBwbGllZCBpbiBAZmxhZ3MuICBOb3RlLCB0aGlzIG92ZXJ3cml0ZXMgdGhlIHZvbHVt
ZSBpbmZvcm1hdGlvbiBmbGFncywgc28KLSAqIG1ha2Ugc3VyZSB0byBjb21iaW5lIHRoZSBmbGFn
cyB5b3Ugd2FudCB0byBtb2RpZnkgd2l0aCB0aGUgb2xkIGZsYWdzIGFuZCB1c2UKLSAqIHRoZSBy
ZXN1bHQgd2hlbiBjYWxsaW5nIG50ZnNfd3JpdGVfdm9sdW1lX2ZsYWdzKCkuCi0gKgotICogUmV0
dXJuIDAgb24gc3VjY2VzcyBhbmQgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0aWMgaW50IG50
ZnNfd3JpdGVfdm9sdW1lX2ZsYWdzKG50ZnNfdm9sdW1lICp2b2wsIGNvbnN0IFZPTFVNRV9GTEFH
UyBmbGFncykKLXsKLQludGZzX2lub2RlICpuaSA9IE5URlNfSSh2b2wtPnZvbF9pbm8pOwotCU1G
VF9SRUNPUkQgKm07Ci0JVk9MVU1FX0lORk9STUFUSU9OICp2aTsKLQludGZzX2F0dHJfc2VhcmNo
X2N0eCAqY3R4OwotCWludCBlcnI7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZywgb2xkIGZsYWdz
ID0gMHgleCwgbmV3IGZsYWdzID0gMHgleC4iLAotCQkJbGUxNl90b19jcHUodm9sLT52b2xfZmxh
Z3MpLCBsZTE2X3RvX2NwdShmbGFncykpOwotCWlmICh2b2wtPnZvbF9mbGFncyA9PSBmbGFncykK
LQkJZ290byBkb25lOwotCUJVR19PTighbmkpOwotCW0gPSBtYXBfbWZ0X3JlY29yZChuaSk7Ci0J
aWYgKElTX0VSUihtKSkgewotCQllcnIgPSBQVFJfRVJSKG0pOwotCQlnb3RvIGVycl9vdXQ7Ci0J
fQotCWN0eCA9IG50ZnNfYXR0cl9nZXRfc2VhcmNoX2N0eChuaSwgbSk7Ci0JaWYgKCFjdHgpIHsK
LQkJZXJyID0gLUVOT01FTTsKLQkJZ290byBwdXRfdW5tX2Vycl9vdXQ7Ci0JfQotCWVyciA9IG50
ZnNfYXR0cl9sb29rdXAoQVRfVk9MVU1FX0lORk9STUFUSU9OLCBOVUxMLCAwLCAwLCAwLCBOVUxM
LCAwLAotCQkJY3R4KTsKLQlpZiAoZXJyKQotCQlnb3RvIHB1dF91bm1fZXJyX291dDsKLQl2aSA9
IChWT0xVTUVfSU5GT1JNQVRJT04qKSgodTgqKWN0eC0+YXR0ciArCi0JCQlsZTE2X3RvX2NwdShj
dHgtPmF0dHItPmRhdGEucmVzaWRlbnQudmFsdWVfb2Zmc2V0KSk7Ci0Jdm9sLT52b2xfZmxhZ3Mg
PSB2aS0+ZmxhZ3MgPSBmbGFnczsKLQlmbHVzaF9kY2FjaGVfbWZ0X3JlY29yZF9wYWdlKGN0eC0+
bnRmc19pbm8pOwotCW1hcmtfbWZ0X3JlY29yZF9kaXJ0eShjdHgtPm50ZnNfaW5vKTsKLQludGZz
X2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQl1bm1hcF9tZnRfcmVjb3JkKG5pKTsKLWRvbmU6
Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gMDsKLXB1dF91bm1fZXJyX291dDoKLQlp
ZiAoY3R4KQotCQludGZzX2F0dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLQl1bm1hcF9tZnRfcmVj
b3JkKG5pKTsKLWVycl9vdXQ6Ci0JbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHdpdGggZXJy
b3IgY29kZSAlaS4iLCAtZXJyKTsKLQlyZXR1cm4gZXJyOwotfQotCi0vKioKLSAqIG50ZnNfc2V0
X3ZvbHVtZV9mbGFncyAtIHNldCBiaXRzIGluIHRoZSB2b2x1bWUgaW5mb3JtYXRpb24gZmxhZ3MK
LSAqIEB2b2w6CW50ZnMgdm9sdW1lIG9uIHdoaWNoIHRvIG1vZGlmeSB0aGUgZmxhZ3MKLSAqIEBm
bGFnczoJZmxhZ3MgdG8gc2V0IG9uIHRoZSB2b2x1bWUKLSAqCi0gKiBTZXQgdGhlIGJpdHMgaW4g
QGZsYWdzIGluIHRoZSB2b2x1bWUgaW5mb3JtYXRpb24gZmxhZ3Mgb24gdGhlIHZvbHVtZSBAdm9s
LgotICoKLSAqIFJldHVybiAwIG9uIHN1Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqLwot
c3RhdGljIGlubGluZSBpbnQgbnRmc19zZXRfdm9sdW1lX2ZsYWdzKG50ZnNfdm9sdW1lICp2b2ws
IFZPTFVNRV9GTEFHUyBmbGFncykKLXsKLQlmbGFncyAmPSBWT0xVTUVfRkxBR1NfTUFTSzsKLQly
ZXR1cm4gbnRmc193cml0ZV92b2x1bWVfZmxhZ3Modm9sLCB2b2wtPnZvbF9mbGFncyB8IGZsYWdz
KTsKLX0KLQotLyoqCi0gKiBudGZzX2NsZWFyX3ZvbHVtZV9mbGFncyAtIGNsZWFyIGJpdHMgaW4g
dGhlIHZvbHVtZSBpbmZvcm1hdGlvbiBmbGFncwotICogQHZvbDoJbnRmcyB2b2x1bWUgb24gd2hp
Y2ggdG8gbW9kaWZ5IHRoZSBmbGFncwotICogQGZsYWdzOglmbGFncyB0byBjbGVhciBvbiB0aGUg
dm9sdW1lCi0gKgotICogQ2xlYXIgdGhlIGJpdHMgaW4gQGZsYWdzIGluIHRoZSB2b2x1bWUgaW5m
b3JtYXRpb24gZmxhZ3Mgb24gdGhlIHZvbHVtZSBAdm9sLgotICoKLSAqIFJldHVybiAwIG9uIHN1
Y2Nlc3MgYW5kIC1lcnJubyBvbiBlcnJvci4KLSAqLwotc3RhdGljIGlubGluZSBpbnQgbnRmc19j
bGVhcl92b2x1bWVfZmxhZ3MobnRmc192b2x1bWUgKnZvbCwgVk9MVU1FX0ZMQUdTIGZsYWdzKQot
ewotCWZsYWdzICY9IFZPTFVNRV9GTEFHU19NQVNLOwotCWZsYWdzID0gdm9sLT52b2xfZmxhZ3Mg
JiBjcHVfdG9fbGUxNih+bGUxNl90b19jcHUoZmxhZ3MpKTsKLQlyZXR1cm4gbnRmc193cml0ZV92
b2x1bWVfZmxhZ3Modm9sLCBmbGFncyk7Ci19Ci0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0KLS8q
KgotICogbnRmc19yZW1vdW50IC0gY2hhbmdlIHRoZSBtb3VudCBvcHRpb25zIG9mIGEgbW91bnRl
ZCBudGZzIGZpbGVzeXN0ZW0KLSAqIEBzYjoJCXN1cGVyYmxvY2sgb2YgbW91bnRlZCBudGZzIGZp
bGVzeXN0ZW0KLSAqIEBmbGFnczoJcmVtb3VudCBmbGFncwotICogQG9wdDoJcmVtb3VudCBvcHRp
b25zIHN0cmluZwotICoKLSAqIENoYW5nZSB0aGUgbW91bnQgb3B0aW9ucyBvZiBhbiBhbHJlYWR5
IG1vdW50ZWQgbnRmcyBmaWxlc3lzdGVtLgotICoKLSAqIE5PVEU6ICBUaGUgVkZTIHNldHMgdGhl
IEBzYi0+c19mbGFncyByZW1vdW50IGZsYWdzIHRvIEBmbGFncyBhZnRlcgotICogbnRmc19yZW1v
dW50KCkgcmV0dXJucyBzdWNjZXNzZnVsbHkgKGkuZS4gcmV0dXJucyAwKS4gIE90aGVyd2lzZSwK
LSAqIEBzYi0+c19mbGFncyBhcmUgbm90IGNoYW5nZWQuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19y
ZW1vdW50KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIGludCAqZmxhZ3MsIGNoYXIgKm9wdCkKLXsK
LQludGZzX3ZvbHVtZSAqdm9sID0gTlRGU19TQihzYik7Ci0KLQludGZzX2RlYnVnKCJFbnRlcmlu
ZyB3aXRoIHJlbW91bnQgb3B0aW9ucyBzdHJpbmc6ICVzIiwgb3B0KTsKLQotCXN5bmNfZmlsZXN5
c3RlbShzYik7Ci0KLSNpZm5kZWYgTlRGU19SVwotCS8qIEZvciByZWFkLW9ubHkgY29tcGlsZWQg
ZHJpdmVyLCBlbmZvcmNlIHJlYWQtb25seSBmbGFnLiAqLwotCSpmbGFncyB8PSBTQl9SRE9OTFk7
Ci0jZWxzZSAvKiBOVEZTX1JXICovCi0JLyoKLQkgKiBGb3IgdGhlIHJlYWQtd3JpdGUgY29tcGls
ZWQgZHJpdmVyLCBpZiB3ZSBhcmUgcmVtb3VudGluZyByZWFkLXdyaXRlLAotCSAqIG1ha2Ugc3Vy
ZSB0aGVyZSBhcmUgbm8gdm9sdW1lIGVycm9ycyBhbmQgdGhhdCBubyB1bnN1cHBvcnRlZCB2b2x1
bWUKLQkgKiBmbGFncyBhcmUgc2V0LiAgQWxzbywgZW1wdHkgdGhlIGxvZ2ZpbGUgam91cm5hbCBh
cyBpdCB3b3VsZCBiZWNvbWUKLQkgKiBzdGFsZSBhcyBzb29uIGFzIHNvbWV0aGluZyBpcyB3cml0
dGVuIHRvIHRoZSB2b2x1bWUgYW5kIG1hcmsgdGhlCi0JICogdm9sdW1lIGRpcnR5IHNvIHRoYXQg
Y2hrZHNrIGlzIHJ1biBpZiB0aGUgdm9sdW1lIGlzIG5vdCB1bW91bnRlZAotCSAqIGNsZWFubHku
ICBGaW5hbGx5LCBtYXJrIHRoZSBxdW90YXMgb3V0IG9mIGRhdGUgc28gV2luZG93cyByZXNjYW5z
Ci0JICogdGhlIHZvbHVtZSBvbiBib290IGFuZCB1cGRhdGVzIHRoZW0uCi0JICoKLQkgKiBXaGVu
IHJlbW91bnRpbmcgcmVhZC1vbmx5LCBtYXJrIHRoZSB2b2x1bWUgY2xlYW4gaWYgbm8gdm9sdW1l
IGVycm9ycwotCSAqIGhhdmUgb2NjdXJyZWQuCi0JICovCi0JaWYgKHNiX3Jkb25seShzYikgJiYg
ISgqZmxhZ3MgJiBTQl9SRE9OTFkpKSB7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplcyA9ICIuICBD
YW5ub3QgcmVtb3VudCByZWFkLXdyaXRlLiI7Ci0KLQkJLyogUmVtb3VudGluZyByZWFkLXdyaXRl
LiAqLwotCQlpZiAoTlZvbEVycm9ycyh2b2wpKSB7Ci0JCQludGZzX2Vycm9yKHNiLCAiVm9sdW1l
IGhhcyBlcnJvcnMgYW5kIGlzIHJlYWQtb25seSVzIiwKLQkJCQkJZXMpOwotCQkJcmV0dXJuIC1F
Uk9GUzsKLQkJfQotCQlpZiAodm9sLT52b2xfZmxhZ3MgJiBWT0xVTUVfSVNfRElSVFkpIHsKLQkJ
CW50ZnNfZXJyb3Ioc2IsICJWb2x1bWUgaXMgZGlydHkgYW5kIHJlYWQtb25seSVzIiwgZXMpOwot
CQkJcmV0dXJuIC1FUk9GUzsKLQkJfQotCQlpZiAodm9sLT52b2xfZmxhZ3MgJiBWT0xVTUVfTU9E
SUZJRURfQllfQ0hLRFNLKSB7Ci0JCQludGZzX2Vycm9yKHNiLCAiVm9sdW1lIGhhcyBiZWVuIG1v
ZGlmaWVkIGJ5IGNoa2RzayAiCi0JCQkJCSJhbmQgaXMgcmVhZC1vbmx5JXMiLCBlcyk7Ci0JCQly
ZXR1cm4gLUVST0ZTOwotCQl9Ci0JCWlmICh2b2wtPnZvbF9mbGFncyAmIFZPTFVNRV9NVVNUX01P
VU5UX1JPX01BU0spIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICJWb2x1bWUgaGFzIHVuc3VwcG9ydGVk
IGZsYWdzIHNldCAiCi0JCQkJCSIoMHgleCkgYW5kIGlzIHJlYWQtb25seSVzIiwKLQkJCQkJKHVu
c2lnbmVkKWxlMTZfdG9fY3B1KHZvbC0+dm9sX2ZsYWdzKSwKLQkJCQkJZXMpOwotCQkJcmV0dXJu
IC1FUk9GUzsKLQkJfQotCQlpZiAobnRmc19zZXRfdm9sdW1lX2ZsYWdzKHZvbCwgVk9MVU1FX0lT
X0RJUlRZKSkgewotCQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBzZXQgZGlydHkgYml0IGlu
IHZvbHVtZSAiCi0JCQkJCSJpbmZvcm1hdGlvbiBmbGFncyVzIiwgZXMpOwotCQkJcmV0dXJuIC1F
Uk9GUzsKLQkJfQotI2lmIDAKLQkJLy8gVE9ETzogRW5hYmxlIHRoaXMgY29kZSBvbmNlIHdlIHN0
YXJ0IG1vZGlmeWluZyBhbnl0aGluZyB0aGF0Ci0JCS8vCSBpcyBkaWZmZXJlbnQgYmV0d2VlbiBO
VEZTIDEuMiBhbmQgMy54Li4uCi0JCS8qIFNldCBOVDQgY29tcGF0aWJpbGl0eSBmbGFnIG9uIG5l
d2VyIE5URlMgdmVyc2lvbiB2b2x1bWVzLiAqLwotCQlpZiAoKHZvbC0+bWFqb3JfdmVyID4gMSkp
IHsKLQkJCWlmIChudGZzX3NldF92b2x1bWVfZmxhZ3Modm9sLCBWT0xVTUVfTU9VTlRFRF9PTl9O
VDQpKSB7Ci0JCQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBzZXQgTlQ0ICIKLQkJCQkJCSJj
b21wYXRpYmlsaXR5IGZsYWclcyIsIGVzKTsKLQkJCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JCQkJ
cmV0dXJuIC1FUk9GUzsKLQkJCX0KLQkJfQotI2VuZGlmCi0JCWlmICghbnRmc19lbXB0eV9sb2dm
aWxlKHZvbC0+bG9nZmlsZV9pbm8pKSB7Ci0JCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGVt
cHR5IGpvdXJuYWwgJExvZ0ZpbGUlcyIsCi0JCQkJCWVzKTsKLQkJCU5Wb2xTZXRFcnJvcnModm9s
KTsKLQkJCXJldHVybiAtRVJPRlM7Ci0JCX0KLQkJaWYgKCFudGZzX21hcmtfcXVvdGFzX291dF9v
Zl9kYXRlKHZvbCkpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICJGYWlsZWQgdG8gbWFyayBxdW90YXMg
b3V0IG9mIGRhdGUlcyIsCi0JCQkJCWVzKTsKLQkJCU5Wb2xTZXRFcnJvcnModm9sKTsKLQkJCXJl
dHVybiAtRVJPRlM7Ci0JCX0KLQkJaWYgKCFudGZzX3N0YW1wX3Vzbmpybmwodm9sKSkgewotCQkJ
bnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBzdGFtcCB0cmFuc2FjdGlvbiBsb2cgIgotCQkJCQki
KCRVc25Kcm5sKSVzIiwgZXMpOwotCQkJTlZvbFNldEVycm9ycyh2b2wpOwotCQkJcmV0dXJuIC1F
Uk9GUzsKLQkJfQotCX0gZWxzZSBpZiAoIXNiX3Jkb25seShzYikgJiYgKCpmbGFncyAmIFNCX1JE
T05MWSkpIHsKLQkJLyogUmVtb3VudGluZyByZWFkLW9ubHkuICovCi0JCWlmICghTlZvbEVycm9y
cyh2b2wpKSB7Ci0JCQlpZiAobnRmc19jbGVhcl92b2x1bWVfZmxhZ3Modm9sLCBWT0xVTUVfSVNf
RElSVFkpKQotCQkJCW50ZnNfd2FybmluZyhzYiwgIkZhaWxlZCB0byBjbGVhciBkaXJ0eSBiaXQg
IgotCQkJCQkJImluIHZvbHVtZSBpbmZvcm1hdGlvbiAiCi0JCQkJCQkiZmxhZ3MuICBSdW4gY2hr
ZHNrLiIpOwotCQl9Ci0JfQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQotCS8vIFRPRE86IERlYWwg
d2l0aCAqZmxhZ3MuCi0KLQlpZiAoIXBhcnNlX29wdGlvbnModm9sLCBvcHQpKQotCQlyZXR1cm4g
LUVJTlZBTDsKLQotCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JcmV0dXJuIDA7Ci19Ci0KLS8qKgot
ICogaXNfYm9vdF9zZWN0b3JfbnRmcyAtIGNoZWNrIHdoZXRoZXIgYSBib290IHNlY3RvciBpcyBh
IHZhbGlkIE5URlMgYm9vdCBzZWN0b3IKLSAqIEBzYjoJCVN1cGVyIGJsb2NrIG9mIHRoZSBkZXZp
Y2UgdG8gd2hpY2ggQGIgYmVsb25ncy4KLSAqIEBiOgkJQm9vdCBzZWN0b3Igb2YgZGV2aWNlIEBz
YiB0byBjaGVjay4KLSAqIEBzaWxlbnQ6CUlmICd0cnVlJywgYWxsIG91dHB1dCB3aWxsIGJlIHNp
bGVuY2VkLgotICoKLSAqIGlzX2Jvb3Rfc2VjdG9yX250ZnMoKSBjaGVja3Mgd2hldGhlciB0aGUg
Ym9vdCBzZWN0b3IgQGIgaXMgYSB2YWxpZCBOVEZTIGJvb3QKLSAqIHNlY3Rvci4gUmV0dXJucyAn
dHJ1ZScgaWYgaXQgaXMgdmFsaWQgYW5kICdmYWxzZScgaWYgbm90LgotICoKLSAqIEBzYiBpcyBv
bmx5IG5lZWRlZCBmb3Igd2FybmluZy9lcnJvciBvdXRwdXQsIGkuZS4gaXQgY2FuIGJlIE5VTEwg
d2hlbiBzaWxlbnQKLSAqIGlzICd0cnVlJy4KLSAqLwotc3RhdGljIGJvb2wgaXNfYm9vdF9zZWN0
b3JfbnRmcyhjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAotCQljb25zdCBOVEZTX0JPT1Rf
U0VDVE9SICpiLCBjb25zdCBib29sIHNpbGVudCkKLXsKLQkvKgotCSAqIENoZWNrIHRoYXQgY2hl
Y2tzdW0gPT0gc3VtIG9mIHUzMiB2YWx1ZXMgZnJvbSBiIHRvIHRoZSBjaGVja3N1bQotCSAqIGZp
ZWxkLiAgSWYgY2hlY2tzdW0gaXMgemVybywgbm8gY2hlY2tpbmcgaXMgZG9uZS4gIFdlIHdpbGwg
d29yayB3aGVuCi0JICogdGhlIGNoZWNrc3VtIHRlc3QgZmFpbHMsIHNpbmNlIHNvbWUgdXRpbGl0
aWVzIHVwZGF0ZSB0aGUgYm9vdCBzZWN0b3IKLQkgKiBpZ25vcmluZyB0aGUgY2hlY2tzdW0gd2hp
Y2ggbGVhdmVzIHRoZSBjaGVja3N1bSBvdXQtb2YtZGF0ZS4gIFdlCi0JICogcmVwb3J0IGEgd2Fy
bmluZyBpZiB0aGlzIGlzIHRoZSBjYXNlLgotCSAqLwotCWlmICgodm9pZCopYiA8ICh2b2lkKikm
Yi0+Y2hlY2tzdW0gJiYgYi0+Y2hlY2tzdW0gJiYgIXNpbGVudCkgewotCQlsZTMyICp1OwotCQl1
MzIgaTsKLQotCQlmb3IgKGkgPSAwLCB1ID0gKGxlMzIqKWI7IHUgPCAobGUzMiopKCZiLT5jaGVj
a3N1bSk7ICsrdSkKLQkJCWkgKz0gbGUzMl90b19jcHVwKHUpOwotCQlpZiAobGUzMl90b19jcHUo
Yi0+Y2hlY2tzdW0pICE9IGkpCi0JCQludGZzX3dhcm5pbmcoc2IsICJJbnZhbGlkIGJvb3Qgc2Vj
dG9yIGNoZWNrc3VtLiIpOwotCX0KLQkvKiBDaGVjayBPRU1pZGVudGlmaWVyIGlzICJOVEZTICAg
ICIgKi8KLQlpZiAoYi0+b2VtX2lkICE9IG1hZ2ljTlRGUykKLQkJZ290byBub3RfbnRmczsKLQkv
KiBDaGVjayBieXRlcyBwZXIgc2VjdG9yIHZhbHVlIGlzIGJldHdlZW4gMjU2IGFuZCA0MDk2LiAq
LwotCWlmIChsZTE2X3RvX2NwdShiLT5icGIuYnl0ZXNfcGVyX3NlY3RvcikgPCAweDEwMCB8fAot
CQkJbGUxNl90b19jcHUoYi0+YnBiLmJ5dGVzX3Blcl9zZWN0b3IpID4gMHgxMDAwKQotCQlnb3Rv
IG5vdF9udGZzOwotCS8qIENoZWNrIHNlY3RvcnMgcGVyIGNsdXN0ZXIgdmFsdWUgaXMgdmFsaWQu
ICovCi0Jc3dpdGNoIChiLT5icGIuc2VjdG9yc19wZXJfY2x1c3RlcikgewotCWNhc2UgMTogY2Fz
ZSAyOiBjYXNlIDQ6IGNhc2UgODogY2FzZSAxNjogY2FzZSAzMjogY2FzZSA2NDogY2FzZSAxMjg6
Ci0JCWJyZWFrOwotCWRlZmF1bHQ6Ci0JCWdvdG8gbm90X250ZnM7Ci0JfQotCS8qIENoZWNrIHRo
ZSBjbHVzdGVyIHNpemUgaXMgbm90IGFib3ZlIHRoZSBtYXhpbXVtICg2NGtpQikuICovCi0JaWYg
KCh1MzIpbGUxNl90b19jcHUoYi0+YnBiLmJ5dGVzX3Blcl9zZWN0b3IpICoKLQkJCWItPmJwYi5z
ZWN0b3JzX3Blcl9jbHVzdGVyID4gTlRGU19NQVhfQ0xVU1RFUl9TSVpFKQotCQlnb3RvIG5vdF9u
dGZzOwotCS8qIENoZWNrIHJlc2VydmVkL3VudXNlZCBmaWVsZHMgYXJlIHJlYWxseSB6ZXJvLiAq
LwotCWlmIChsZTE2X3RvX2NwdShiLT5icGIucmVzZXJ2ZWRfc2VjdG9ycykgfHwKLQkJCWxlMTZf
dG9fY3B1KGItPmJwYi5yb290X2VudHJpZXMpIHx8Ci0JCQlsZTE2X3RvX2NwdShiLT5icGIuc2Vj
dG9ycykgfHwKLQkJCWxlMTZfdG9fY3B1KGItPmJwYi5zZWN0b3JzX3Blcl9mYXQpIHx8Ci0JCQls
ZTMyX3RvX2NwdShiLT5icGIubGFyZ2Vfc2VjdG9ycykgfHwgYi0+YnBiLmZhdHMpCi0JCWdvdG8g
bm90X250ZnM7Ci0JLyogQ2hlY2sgY2x1c3RlcnMgcGVyIGZpbGUgbWZ0IHJlY29yZCB2YWx1ZSBp
cyB2YWxpZC4gKi8KLQlpZiAoKHU4KWItPmNsdXN0ZXJzX3Blcl9tZnRfcmVjb3JkIDwgMHhlMSB8
fAotCQkJKHU4KWItPmNsdXN0ZXJzX3Blcl9tZnRfcmVjb3JkID4gMHhmNykKLQkJc3dpdGNoIChi
LT5jbHVzdGVyc19wZXJfbWZ0X3JlY29yZCkgewotCQljYXNlIDE6IGNhc2UgMjogY2FzZSA0OiBj
YXNlIDg6IGNhc2UgMTY6IGNhc2UgMzI6IGNhc2UgNjQ6Ci0JCQlicmVhazsKLQkJZGVmYXVsdDoK
LQkJCWdvdG8gbm90X250ZnM7Ci0JCX0KLQkvKiBDaGVjayBjbHVzdGVycyBwZXIgaW5kZXggYmxv
Y2sgdmFsdWUgaXMgdmFsaWQuICovCi0JaWYgKCh1OCliLT5jbHVzdGVyc19wZXJfaW5kZXhfcmVj
b3JkIDwgMHhlMSB8fAotCQkJKHU4KWItPmNsdXN0ZXJzX3Blcl9pbmRleF9yZWNvcmQgPiAweGY3
KQotCQlzd2l0Y2ggKGItPmNsdXN0ZXJzX3Blcl9pbmRleF9yZWNvcmQpIHsKLQkJY2FzZSAxOiBj
YXNlIDI6IGNhc2UgNDogY2FzZSA4OiBjYXNlIDE2OiBjYXNlIDMyOiBjYXNlIDY0OgotCQkJYnJl
YWs7Ci0JCWRlZmF1bHQ6Ci0JCQlnb3RvIG5vdF9udGZzOwotCQl9Ci0JLyoKLQkgKiBDaGVjayBm
b3IgdmFsaWQgZW5kIG9mIHNlY3RvciBtYXJrZXIuIFdlIHdpbGwgd29yayB3aXRob3V0IGl0LCBi
dXQKLQkgKiBtYW55IEJJT1NlcyB3aWxsIHJlZnVzZSB0byBib290IGZyb20gYSBib290c2VjdG9y
IGlmIHRoZSBtYWdpYyBpcwotCSAqIGluY29ycmVjdCwgc28gd2UgZW1pdCBhIHdhcm5pbmcuCi0J
ICovCi0JaWYgKCFzaWxlbnQgJiYgYi0+ZW5kX29mX3NlY3Rvcl9tYXJrZXIgIT0gY3B1X3RvX2xl
MTYoMHhhYTU1KSkKLQkJbnRmc193YXJuaW5nKHNiLCAiSW52YWxpZCBlbmQgb2Ygc2VjdG9yIG1h
cmtlci4iKTsKLQlyZXR1cm4gdHJ1ZTsKLW5vdF9udGZzOgotCXJldHVybiBmYWxzZTsKLX0KLQot
LyoqCi0gKiByZWFkX250ZnNfYm9vdF9zZWN0b3IgLSByZWFkIHRoZSBOVEZTIGJvb3Qgc2VjdG9y
IG9mIGEgZGV2aWNlCi0gKiBAc2I6CQlzdXBlciBibG9jayBvZiBkZXZpY2UgdG8gcmVhZCB0aGUg
Ym9vdCBzZWN0b3IgZnJvbQotICogQHNpbGVudDoJaWYgdHJ1ZSwgc3VwcHJlc3MgYWxsIG91dHB1
dAotICoKLSAqIFJlYWRzIHRoZSBib290IHNlY3RvciBmcm9tIHRoZSBkZXZpY2UgYW5kIHZhbGlk
YXRlcyBpdC4gSWYgdGhhdCBmYWlscywgdHJpZXMKLSAqIHRvIHJlYWQgdGhlIGJhY2t1cCBib290
IHNlY3RvciwgZmlyc3QgZnJvbSB0aGUgZW5kIG9mIHRoZSBkZXZpY2UgYS1sYSBOVDQgYW5kCi0g
KiBsYXRlciBhbmQgdGhlbiBmcm9tIHRoZSBtaWRkbGUgb2YgdGhlIGRldmljZSBhLWxhIE5UMy41
MSBhbmQgYmVmb3JlLgotICoKLSAqIElmIGEgdmFsaWQgYm9vdCBzZWN0b3IgaXMgZm91bmQgYnV0
IGl0IGlzIG5vdCB0aGUgcHJpbWFyeSBib290IHNlY3Rvciwgd2UKLSAqIHJlcGFpciB0aGUgcHJp
bWFyeSBib290IHNlY3RvciBzaWxlbnRseSAodW5sZXNzIHRoZSBkZXZpY2UgaXMgcmVhZC1vbmx5
IG9yCi0gKiB0aGUgcHJpbWFyeSBib290IHNlY3RvciBpcyBub3QgYWNjZXNzaWJsZSkuCi0gKgot
ICogTk9URTogVG8gY2FsbCB0aGlzIGZ1bmN0aW9uLCBAc2IgbXVzdCBoYXZlIHRoZSBmaWVsZHMg
c19kZXYsIHRoZSBudGZzIHN1cGVyCi0gKiBibG9jayAodS5udGZzX3NiKSwgbnJfYmxvY2tzIGFu
ZCB0aGUgZGV2aWNlIGZsYWdzIChzX2ZsYWdzKSBpbml0aWFsaXplZAotICogdG8gdGhlaXIgcmVz
cGVjdGl2ZSB2YWx1ZXMuCi0gKgotICogUmV0dXJuIHRoZSB1bmxvY2tlZCBidWZmZXIgaGVhZCBj
b250YWluaW5nIHRoZSBib290IHNlY3RvciBvciBOVUxMIG9uIGVycm9yLgotICovCi1zdGF0aWMg
c3RydWN0IGJ1ZmZlcl9oZWFkICpyZWFkX250ZnNfYm9vdF9zZWN0b3Ioc3RydWN0IHN1cGVyX2Js
b2NrICpzYiwKLQkJY29uc3QgaW50IHNpbGVudCkKLXsKLQljb25zdCBjaGFyICpyZWFkX2Vycl9z
dHIgPSAiVW5hYmxlIHRvIHJlYWQgJXMgYm9vdCBzZWN0b3IuIjsKLQlzdHJ1Y3QgYnVmZmVyX2hl
YWQgKmJoX3ByaW1hcnksICpiaF9iYWNrdXA7Ci0Jc2VjdG9yX3QgbnJfYmxvY2tzID0gTlRGU19T
QihzYiktPm5yX2Jsb2NrczsKLQotCS8qIFRyeSB0byByZWFkIHByaW1hcnkgYm9vdCBzZWN0b3Iu
ICovCi0JaWYgKChiaF9wcmltYXJ5ID0gc2JfYnJlYWQoc2IsIDApKSkgewotCQlpZiAoaXNfYm9v
dF9zZWN0b3JfbnRmcyhzYiwgKE5URlNfQk9PVF9TRUNUT1IqKQotCQkJCWJoX3ByaW1hcnktPmJf
ZGF0YSwgc2lsZW50KSkKLQkJCXJldHVybiBiaF9wcmltYXJ5OwotCQlpZiAoIXNpbGVudCkKLQkJ
CW50ZnNfZXJyb3Ioc2IsICJQcmltYXJ5IGJvb3Qgc2VjdG9yIGlzIGludmFsaWQuIik7Ci0JfSBl
bHNlIGlmICghc2lsZW50KQotCQludGZzX2Vycm9yKHNiLCByZWFkX2Vycl9zdHIsICJwcmltYXJ5
Iik7Ci0JaWYgKCEoTlRGU19TQihzYiktPm9uX2Vycm9ycyAmIE9OX0VSUk9SU19SRUNPVkVSKSkg
ewotCQlpZiAoYmhfcHJpbWFyeSkKLQkJCWJyZWxzZShiaF9wcmltYXJ5KTsKLQkJaWYgKCFzaWxl
bnQpCi0JCQludGZzX2Vycm9yKHNiLCAiTW91bnQgb3B0aW9uIGVycm9ycz1yZWNvdmVyIG5vdCB1
c2VkLiAiCi0JCQkJCSJBYm9ydGluZyB3aXRob3V0IHRyeWluZyB0byByZWNvdmVyLiIpOwotCQly
ZXR1cm4gTlVMTDsKLQl9Ci0JLyogVHJ5IHRvIHJlYWQgTlQ0KyBiYWNrdXAgYm9vdCBzZWN0b3Iu
ICovCi0JaWYgKChiaF9iYWNrdXAgPSBzYl9icmVhZChzYiwgbnJfYmxvY2tzIC0gMSkpKSB7Ci0J
CWlmIChpc19ib290X3NlY3Rvcl9udGZzKHNiLCAoTlRGU19CT09UX1NFQ1RPUiopCi0JCQkJYmhf
YmFja3VwLT5iX2RhdGEsIHNpbGVudCkpCi0JCQlnb3RvIGhvdGZpeF9wcmltYXJ5X2Jvb3Rfc2Vj
dG9yOwotCQlicmVsc2UoYmhfYmFja3VwKTsKLQl9IGVsc2UgaWYgKCFzaWxlbnQpCi0JCW50ZnNf
ZXJyb3Ioc2IsIHJlYWRfZXJyX3N0ciwgImJhY2t1cCIpOwotCS8qIFRyeSB0byByZWFkIE5UMy41
MS0gYmFja3VwIGJvb3Qgc2VjdG9yLiAqLwotCWlmICgoYmhfYmFja3VwID0gc2JfYnJlYWQoc2Is
IG5yX2Jsb2NrcyA+PiAxKSkpIHsKLQkJaWYgKGlzX2Jvb3Rfc2VjdG9yX250ZnMoc2IsIChOVEZT
X0JPT1RfU0VDVE9SKikKLQkJCQliaF9iYWNrdXAtPmJfZGF0YSwgc2lsZW50KSkKLQkJCWdvdG8g
aG90Zml4X3ByaW1hcnlfYm9vdF9zZWN0b3I7Ci0JCWlmICghc2lsZW50KQotCQkJbnRmc19lcnJv
cihzYiwgIkNvdWxkIG5vdCBmaW5kIGEgdmFsaWQgYmFja3VwIGJvb3QgIgotCQkJCQkic2VjdG9y
LiIpOwotCQlicmVsc2UoYmhfYmFja3VwKTsKLQl9IGVsc2UgaWYgKCFzaWxlbnQpCi0JCW50ZnNf
ZXJyb3Ioc2IsIHJlYWRfZXJyX3N0ciwgImJhY2t1cCIpOwotCS8qIFdlIGZhaWxlZC4gQ2xlYW51
cCBhbmQgcmV0dXJuLiAqLwotCWlmIChiaF9wcmltYXJ5KQotCQlicmVsc2UoYmhfcHJpbWFyeSk7
Ci0JcmV0dXJuIE5VTEw7Ci1ob3RmaXhfcHJpbWFyeV9ib290X3NlY3RvcjoKLQlpZiAoYmhfcHJp
bWFyeSkgewotCQkvKgotCQkgKiBJZiB3ZSBtYW5hZ2VkIHRvIHJlYWQgc2VjdG9yIHplcm8gYW5k
IHRoZSB2b2x1bWUgaXMgbm90Ci0JCSAqIHJlYWQtb25seSwgY29weSB0aGUgZm91bmQsIHZhbGlk
IGJhY2t1cCBib290IHNlY3RvciB0byB0aGUKLQkJICogcHJpbWFyeSBib290IHNlY3Rvci4gIE5v
dGUgd2Ugb25seSBjb3B5IHRoZSBhY3R1YWwgYm9vdAotCQkgKiBzZWN0b3Igc3RydWN0dXJlLCBu
b3QgdGhlIGFjdHVhbCB3aG9sZSBkZXZpY2Ugc2VjdG9yIGFzIHRoYXQKLQkJICogbWF5IGJlIGJp
Z2dlciBhbmQgd291bGQgcG90ZW50aWFsbHkgZGFtYWdlIHRoZSAkQm9vdCBzeXN0ZW0KLQkJICog
ZmlsZSAoRklYTUU6IFdvdWxkIGJlIG5pY2UgdG8ga25vdyBpZiB0aGUgYmFja3VwIGJvb3Qgc2Vj
dG9yCi0JCSAqIG9uIGEgbGFyZ2Ugc2VjdG9yIGRldmljZSBjb250YWlucyB0aGUgd2hvbGUgYm9v
dCBsb2FkZXIgb3IKLQkJICoganVzdCB0aGUgZmlyc3QgNTEyIGJ5dGVzKS4KLQkJICovCi0JCWlm
ICghc2JfcmRvbmx5KHNiKSkgewotCQkJbnRmc193YXJuaW5nKHNiLCAiSG90LWZpeDogUmVjb3Zl
cmluZyBpbnZhbGlkIHByaW1hcnkgIgotCQkJCQkiYm9vdCBzZWN0b3IgZnJvbSBiYWNrdXAgY29w
eS4iKTsKLQkJCW1lbWNweShiaF9wcmltYXJ5LT5iX2RhdGEsIGJoX2JhY2t1cC0+Yl9kYXRhLAot
CQkJCQlOVEZTX0JMT0NLX1NJWkUpOwotCQkJbWFya19idWZmZXJfZGlydHkoYmhfcHJpbWFyeSk7
Ci0JCQlzeW5jX2RpcnR5X2J1ZmZlcihiaF9wcmltYXJ5KTsKLQkJCWlmIChidWZmZXJfdXB0b2Rh
dGUoYmhfcHJpbWFyeSkpIHsKLQkJCQlicmVsc2UoYmhfYmFja3VwKTsKLQkJCQlyZXR1cm4gYmhf
cHJpbWFyeTsKLQkJCX0KLQkJCW50ZnNfZXJyb3Ioc2IsICJIb3QtZml4OiBEZXZpY2Ugd3JpdGUg
ZXJyb3Igd2hpbGUgIgotCQkJCQkicmVjb3ZlcmluZyBwcmltYXJ5IGJvb3Qgc2VjdG9yLiIpOwot
CQl9IGVsc2UgewotCQkJbnRmc193YXJuaW5nKHNiLCAiSG90LWZpeDogUmVjb3Zlcnkgb2YgcHJp
bWFyeSBib290ICIKLQkJCQkJInNlY3RvciBmYWlsZWQ6IFJlYWQtb25seSBtb3VudC4iKTsKLQkJ
fQotCQlicmVsc2UoYmhfcHJpbWFyeSk7Ci0JfQotCW50ZnNfd2FybmluZyhzYiwgIlVzaW5nIGJh
Y2t1cCBib290IHNlY3Rvci4iKTsKLQlyZXR1cm4gYmhfYmFja3VwOwotfQotCi0vKioKLSAqIHBh
cnNlX250ZnNfYm9vdF9zZWN0b3IgLSBwYXJzZSB0aGUgYm9vdCBzZWN0b3IgYW5kIHN0b3JlIHRo
ZSBkYXRhIGluIEB2b2wKLSAqIEB2b2w6CXZvbHVtZSBzdHJ1Y3R1cmUgdG8gaW5pdGlhbGlzZSB3
aXRoIGRhdGEgZnJvbSBib290IHNlY3RvcgotICogQGI6CQlib290IHNlY3RvciB0byBwYXJzZQot
ICoKLSAqIFBhcnNlIHRoZSBudGZzIGJvb3Qgc2VjdG9yIEBiIGFuZCBzdG9yZSBhbGwgaW1wb3Jh
bnQgaW5mb3JtYXRpb24gdGhlcmVpbiBpbgotICogdGhlIG50ZnMgc3VwZXIgYmxvY2sgQHZvbC4g
IFJldHVybiAndHJ1ZScgb24gc3VjY2VzcyBhbmQgJ2ZhbHNlJyBvbiBlcnJvci4KLSAqLwotc3Rh
dGljIGJvb2wgcGFyc2VfbnRmc19ib290X3NlY3RvcihudGZzX3ZvbHVtZSAqdm9sLCBjb25zdCBO
VEZTX0JPT1RfU0VDVE9SICpiKQotewotCXVuc2lnbmVkIGludCBzZWN0b3JzX3Blcl9jbHVzdGVy
X2JpdHMsIG5yX2hpZGRlbl9zZWN0czsKLQlpbnQgY2x1c3RlcnNfcGVyX21mdF9yZWNvcmQsIGNs
dXN0ZXJzX3Blcl9pbmRleF9yZWNvcmQ7Ci0JczY0IGxsOwotCi0Jdm9sLT5zZWN0b3Jfc2l6ZSA9
IGxlMTZfdG9fY3B1KGItPmJwYi5ieXRlc19wZXJfc2VjdG9yKTsKLQl2b2wtPnNlY3Rvcl9zaXpl
X2JpdHMgPSBmZnModm9sLT5zZWN0b3Jfc2l6ZSkgLSAxOwotCW50ZnNfZGVidWcoInZvbC0+c2Vj
dG9yX3NpemUgPSAlaSAoMHgleCkiLCB2b2wtPnNlY3Rvcl9zaXplLAotCQkJdm9sLT5zZWN0b3Jf
c2l6ZSk7Ci0JbnRmc19kZWJ1Zygidm9sLT5zZWN0b3Jfc2l6ZV9iaXRzID0gJWkgKDB4JXgpIiwg
dm9sLT5zZWN0b3Jfc2l6ZV9iaXRzLAotCQkJdm9sLT5zZWN0b3Jfc2l6ZV9iaXRzKTsKLQlpZiAo
dm9sLT5zZWN0b3Jfc2l6ZSA8IHZvbC0+c2ItPnNfYmxvY2tzaXplKSB7Ci0JCW50ZnNfZXJyb3Io
dm9sLT5zYiwgIlNlY3RvciBzaXplICglaSkgaXMgc21hbGxlciB0aGFuIHRoZSAiCi0JCQkJImRl
dmljZSBibG9jayBzaXplICglbHUpLiAgVGhpcyBpcyBub3QgIgotCQkJCSJzdXBwb3J0ZWQuICBT
b3JyeS4iLCB2b2wtPnNlY3Rvcl9zaXplLAotCQkJCXZvbC0+c2ItPnNfYmxvY2tzaXplKTsKLQkJ
cmV0dXJuIGZhbHNlOwotCX0KLQludGZzX2RlYnVnKCJzZWN0b3JzX3Blcl9jbHVzdGVyID0gMHgl
eCIsIGItPmJwYi5zZWN0b3JzX3Blcl9jbHVzdGVyKTsKLQlzZWN0b3JzX3Blcl9jbHVzdGVyX2Jp
dHMgPSBmZnMoYi0+YnBiLnNlY3RvcnNfcGVyX2NsdXN0ZXIpIC0gMTsKLQludGZzX2RlYnVnKCJz
ZWN0b3JzX3Blcl9jbHVzdGVyX2JpdHMgPSAweCV4IiwKLQkJCXNlY3RvcnNfcGVyX2NsdXN0ZXJf
Yml0cyk7Ci0JbnJfaGlkZGVuX3NlY3RzID0gbGUzMl90b19jcHUoYi0+YnBiLmhpZGRlbl9zZWN0
b3JzKTsKLQludGZzX2RlYnVnKCJudW1iZXIgb2YgaGlkZGVuIHNlY3RvcnMgPSAweCV4IiwgbnJf
aGlkZGVuX3NlY3RzKTsKLQl2b2wtPmNsdXN0ZXJfc2l6ZSA9IHZvbC0+c2VjdG9yX3NpemUgPDwg
c2VjdG9yc19wZXJfY2x1c3Rlcl9iaXRzOwotCXZvbC0+Y2x1c3Rlcl9zaXplX21hc2sgPSB2b2wt
PmNsdXN0ZXJfc2l6ZSAtIDE7Ci0Jdm9sLT5jbHVzdGVyX3NpemVfYml0cyA9IGZmcyh2b2wtPmNs
dXN0ZXJfc2l6ZSkgLSAxOwotCW50ZnNfZGVidWcoInZvbC0+Y2x1c3Rlcl9zaXplID0gJWkgKDB4
JXgpIiwgdm9sLT5jbHVzdGVyX3NpemUsCi0JCQl2b2wtPmNsdXN0ZXJfc2l6ZSk7Ci0JbnRmc19k
ZWJ1Zygidm9sLT5jbHVzdGVyX3NpemVfbWFzayA9IDB4JXgiLCB2b2wtPmNsdXN0ZXJfc2l6ZV9t
YXNrKTsKLQludGZzX2RlYnVnKCJ2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID0gJWkiLCB2b2wtPmNs
dXN0ZXJfc2l6ZV9iaXRzKTsKLQlpZiAodm9sLT5jbHVzdGVyX3NpemUgPCB2b2wtPnNlY3Rvcl9z
aXplKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkNsdXN0ZXIgc2l6ZSAoJWkpIGlzIHNtYWxs
ZXIgdGhhbiB0aGUgIgotCQkJCSJzZWN0b3Igc2l6ZSAoJWkpLiAgVGhpcyBpcyBub3Qgc3VwcG9y
dGVkLiAgIgotCQkJCSJTb3JyeS4iLCB2b2wtPmNsdXN0ZXJfc2l6ZSwgdm9sLT5zZWN0b3Jfc2l6
ZSk7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0JY2x1c3RlcnNfcGVyX21mdF9yZWNvcmQgPSBiLT5j
bHVzdGVyc19wZXJfbWZ0X3JlY29yZDsKLQludGZzX2RlYnVnKCJjbHVzdGVyc19wZXJfbWZ0X3Jl
Y29yZCA9ICVpICgweCV4KSIsCi0JCQljbHVzdGVyc19wZXJfbWZ0X3JlY29yZCwgY2x1c3RlcnNf
cGVyX21mdF9yZWNvcmQpOwotCWlmIChjbHVzdGVyc19wZXJfbWZ0X3JlY29yZCA+IDApCi0JCXZv
bC0+bWZ0X3JlY29yZF9zaXplID0gdm9sLT5jbHVzdGVyX3NpemUgPDwKLQkJCQkoZmZzKGNsdXN0
ZXJzX3Blcl9tZnRfcmVjb3JkKSAtIDEpOwotCWVsc2UKLQkJLyoKLQkJICogV2hlbiBtZnRfcmVj
b3JkX3NpemUgPCBjbHVzdGVyX3NpemUsIGNsdXN0ZXJzX3Blcl9tZnRfcmVjb3JkCi0JCSAqID0g
LWxvZzIobWZ0X3JlY29yZF9zaXplKSBieXRlcy4gbWZ0X3JlY29yZF9zaXplIG5vcm1hbHkgaXMK
LQkJICogMTAyNCBieXRlcywgd2hpY2ggaXMgZW5jb2RlZCBhcyAweEY2ICgtMTAgaW4gZGVjaW1h
bCkuCi0JCSAqLwotCQl2b2wtPm1mdF9yZWNvcmRfc2l6ZSA9IDEgPDwgLWNsdXN0ZXJzX3Blcl9t
ZnRfcmVjb3JkOwotCXZvbC0+bWZ0X3JlY29yZF9zaXplX21hc2sgPSB2b2wtPm1mdF9yZWNvcmRf
c2l6ZSAtIDE7Ci0Jdm9sLT5tZnRfcmVjb3JkX3NpemVfYml0cyA9IGZmcyh2b2wtPm1mdF9yZWNv
cmRfc2l6ZSkgLSAxOwotCW50ZnNfZGVidWcoInZvbC0+bWZ0X3JlY29yZF9zaXplID0gJWkgKDB4
JXgpIiwgdm9sLT5tZnRfcmVjb3JkX3NpemUsCi0JCQl2b2wtPm1mdF9yZWNvcmRfc2l6ZSk7Ci0J
bnRmc19kZWJ1Zygidm9sLT5tZnRfcmVjb3JkX3NpemVfbWFzayA9IDB4JXgiLAotCQkJdm9sLT5t
ZnRfcmVjb3JkX3NpemVfbWFzayk7Ci0JbnRmc19kZWJ1Zygidm9sLT5tZnRfcmVjb3JkX3NpemVf
Yml0cyA9ICVpICgweCV4KSIsCi0JCQl2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzLCB2b2wtPm1m
dF9yZWNvcmRfc2l6ZV9iaXRzKTsKLQkvKgotCSAqIFdlIGNhbm5vdCBzdXBwb3J0IG1mdCByZWNv
cmQgc2l6ZXMgYWJvdmUgdGhlIFBBR0VfU0laRSBzaW5jZQotCSAqIHdlIHN0b3JlICRNRlQvJERB
VEEsIHRoZSB0YWJsZSBvZiBtZnQgcmVjb3JkcyBpbiB0aGUgcGFnZSBjYWNoZS4KLQkgKi8KLQlp
ZiAodm9sLT5tZnRfcmVjb3JkX3NpemUgPiBQQUdFX1NJWkUpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiTWZ0IHJlY29yZCBzaXplICglaSkgZXhjZWVkcyB0aGUgIgotCQkJCSJQQUdFX1NJWkUg
b24geW91ciBzeXN0ZW0gKCVsdSkuICAiCi0JCQkJIlRoaXMgaXMgbm90IHN1cHBvcnRlZC4gIFNv
cnJ5LiIsCi0JCQkJdm9sLT5tZnRfcmVjb3JkX3NpemUsIFBBR0VfU0laRSk7Ci0JCXJldHVybiBm
YWxzZTsKLQl9Ci0JLyogV2UgY2Fubm90IHN1cHBvcnQgbWZ0IHJlY29yZCBzaXplcyBiZWxvdyB0
aGUgc2VjdG9yIHNpemUuICovCi0JaWYgKHZvbC0+bWZ0X3JlY29yZF9zaXplIDwgdm9sLT5zZWN0
b3Jfc2l6ZSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJNZnQgcmVjb3JkIHNpemUgKCVpKSBp
cyBzbWFsbGVyIHRoYW4gdGhlICIKLQkJCQkic2VjdG9yIHNpemUgKCVpKS4gIFRoaXMgaXMgbm90
IHN1cHBvcnRlZC4gICIKLQkJCQkiU29ycnkuIiwgdm9sLT5tZnRfcmVjb3JkX3NpemUsCi0JCQkJ
dm9sLT5zZWN0b3Jfc2l6ZSk7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0JY2x1c3RlcnNfcGVyX2lu
ZGV4X3JlY29yZCA9IGItPmNsdXN0ZXJzX3Blcl9pbmRleF9yZWNvcmQ7Ci0JbnRmc19kZWJ1Zygi
Y2x1c3RlcnNfcGVyX2luZGV4X3JlY29yZCA9ICVpICgweCV4KSIsCi0JCQljbHVzdGVyc19wZXJf
aW5kZXhfcmVjb3JkLCBjbHVzdGVyc19wZXJfaW5kZXhfcmVjb3JkKTsKLQlpZiAoY2x1c3RlcnNf
cGVyX2luZGV4X3JlY29yZCA+IDApCi0JCXZvbC0+aW5kZXhfcmVjb3JkX3NpemUgPSB2b2wtPmNs
dXN0ZXJfc2l6ZSA8PAotCQkJCShmZnMoY2x1c3RlcnNfcGVyX2luZGV4X3JlY29yZCkgLSAxKTsK
LQllbHNlCi0JCS8qCi0JCSAqIFdoZW4gaW5kZXhfcmVjb3JkX3NpemUgPCBjbHVzdGVyX3NpemUs
Ci0JCSAqIGNsdXN0ZXJzX3Blcl9pbmRleF9yZWNvcmQgPSAtbG9nMihpbmRleF9yZWNvcmRfc2l6
ZSkgYnl0ZXMuCi0JCSAqIGluZGV4X3JlY29yZF9zaXplIG5vcm1hbHkgZXF1YWxzIDQwOTYgYnl0
ZXMsIHdoaWNoIGlzCi0JCSAqIGVuY29kZWQgYXMgMHhGNCAoLTEyIGluIGRlY2ltYWwpLgotCQkg
Ki8KLQkJdm9sLT5pbmRleF9yZWNvcmRfc2l6ZSA9IDEgPDwgLWNsdXN0ZXJzX3Blcl9pbmRleF9y
ZWNvcmQ7Ci0Jdm9sLT5pbmRleF9yZWNvcmRfc2l6ZV9tYXNrID0gdm9sLT5pbmRleF9yZWNvcmRf
c2l6ZSAtIDE7Ci0Jdm9sLT5pbmRleF9yZWNvcmRfc2l6ZV9iaXRzID0gZmZzKHZvbC0+aW5kZXhf
cmVjb3JkX3NpemUpIC0gMTsKLQludGZzX2RlYnVnKCJ2b2wtPmluZGV4X3JlY29yZF9zaXplID0g
JWkgKDB4JXgpIiwKLQkJCXZvbC0+aW5kZXhfcmVjb3JkX3NpemUsIHZvbC0+aW5kZXhfcmVjb3Jk
X3NpemUpOwotCW50ZnNfZGVidWcoInZvbC0+aW5kZXhfcmVjb3JkX3NpemVfbWFzayA9IDB4JXgi
LAotCQkJdm9sLT5pbmRleF9yZWNvcmRfc2l6ZV9tYXNrKTsKLQludGZzX2RlYnVnKCJ2b2wtPmlu
ZGV4X3JlY29yZF9zaXplX2JpdHMgPSAlaSAoMHgleCkiLAotCQkJdm9sLT5pbmRleF9yZWNvcmRf
c2l6ZV9iaXRzLAotCQkJdm9sLT5pbmRleF9yZWNvcmRfc2l6ZV9iaXRzKTsKLQkvKiBXZSBjYW5u
b3Qgc3VwcG9ydCBpbmRleCByZWNvcmQgc2l6ZXMgYmVsb3cgdGhlIHNlY3RvciBzaXplLiAqLwot
CWlmICh2b2wtPmluZGV4X3JlY29yZF9zaXplIDwgdm9sLT5zZWN0b3Jfc2l6ZSkgewotCQludGZz
X2Vycm9yKHZvbC0+c2IsICJJbmRleCByZWNvcmQgc2l6ZSAoJWkpIGlzIHNtYWxsZXIgdGhhbiAi
Ci0JCQkJInRoZSBzZWN0b3Igc2l6ZSAoJWkpLiAgVGhpcyBpcyBub3QgIgotCQkJCSJzdXBwb3J0
ZWQuICBTb3JyeS4iLCB2b2wtPmluZGV4X3JlY29yZF9zaXplLAotCQkJCXZvbC0+c2VjdG9yX3Np
emUpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qCi0JICogR2V0IHRoZSBzaXplIG9mIHRoZSB2
b2x1bWUgaW4gY2x1c3RlcnMgYW5kIGNoZWNrIGZvciA2NC1iaXQtbmVzcy4KLQkgKiBXaW5kb3dz
IGN1cnJlbnRseSBvbmx5IHVzZXMgMzIgYml0cyB0byBzYXZlIHRoZSBjbHVzdGVycyBzbyB3ZSBk
bwotCSAqIHRoZSBzYW1lIGFzIGl0IGlzIG11Y2ggZmFzdGVyIG9uIDMyLWJpdCBDUFVzLgotCSAq
LwotCWxsID0gc2xlNjRfdG9fY3B1KGItPm51bWJlcl9vZl9zZWN0b3JzKSA+PiBzZWN0b3JzX3Bl
cl9jbHVzdGVyX2JpdHM7Ci0JaWYgKCh1NjQpbGwgPj0gMVVMTCA8PCAzMikgewotCQludGZzX2Vy
cm9yKHZvbC0+c2IsICJDYW5ub3QgaGFuZGxlIDY0LWJpdCBjbHVzdGVycy4gIFNvcnJ5LiIpOwot
CQlyZXR1cm4gZmFsc2U7Ci0JfQotCXZvbC0+bnJfY2x1c3RlcnMgPSBsbDsKLQludGZzX2RlYnVn
KCJ2b2wtPm5yX2NsdXN0ZXJzID0gMHglbGx4IiwgKGxvbmcgbG9uZyl2b2wtPm5yX2NsdXN0ZXJz
KTsKLQkvKgotCSAqIE9uIGFuIGFyY2hpdGVjdHVyZSB3aGVyZSB1bnNpZ25lZCBsb25nIGlzIDMy
LWJpdHMsIHdlIHJlc3RyaWN0IHRoZQotCSAqIHZvbHVtZSBzaXplIHRvIDJUaUIgKDJeNDEpLiBP
biBhIDY0LWJpdCBhcmNoaXRlY3R1cmUsIHRoZSBjb21waWxlcgotCSAqIHdpbGwgaG9wZWZ1bGx5
IG9wdGltaXplIHRoZSB3aG9sZSBjaGVjayBhd2F5LgotCSAqLwotCWlmIChzaXplb2YodW5zaWdu
ZWQgbG9uZykgPCA4KSB7Ci0JCWlmICgobGwgPDwgdm9sLT5jbHVzdGVyX3NpemVfYml0cykgPj0g
KDFVTEwgPDwgNDEpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJWb2x1bWUgc2l6ZSAoJWxs
dVRpQikgaXMgdG9vICIKLQkJCQkJImxhcmdlIGZvciB0aGlzIGFyY2hpdGVjdHVyZS4gICIKLQkJ
CQkJIk1heGltdW0gc3VwcG9ydGVkIGlzIDJUaUIuICBTb3JyeS4iLAotCQkJCQkodW5zaWduZWQg
bG9uZyBsb25nKWxsID4+ICg0MCAtCi0JCQkJCXZvbC0+Y2x1c3Rlcl9zaXplX2JpdHMpKTsKLQkJ
CXJldHVybiBmYWxzZTsKLQkJfQotCX0KLQlsbCA9IHNsZTY0X3RvX2NwdShiLT5tZnRfbGNuKTsK
LQlpZiAobGwgPj0gdm9sLT5ucl9jbHVzdGVycykgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJN
RlQgTENOICglbGxpLCAweCVsbHgpIGlzIGJleW9uZCBlbmQgb2YgIgotCQkJCSJ2b2x1bWUuICBX
ZWlyZC4iLCAodW5zaWduZWQgbG9uZyBsb25nKWxsLAotCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcp
bGwpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCXZvbC0+bWZ0X2xjbiA9IGxsOwotCW50ZnNfZGVi
dWcoInZvbC0+bWZ0X2xjbiA9IDB4JWxseCIsIChsb25nIGxvbmcpdm9sLT5tZnRfbGNuKTsKLQls
bCA9IHNsZTY0X3RvX2NwdShiLT5tZnRtaXJyX2xjbik7Ci0JaWYgKGxsID49IHZvbC0+bnJfY2x1
c3RlcnMpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiTUZUTWlyciBMQ04gKCVsbGksIDB4JWxs
eCkgaXMgYmV5b25kIGVuZCAiCi0JCQkJIm9mIHZvbHVtZS4gIFdlaXJkLiIsICh1bnNpZ25lZCBs
b25nIGxvbmcpbGwsCi0JCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylsbCk7Ci0JCXJldHVybiBmYWxz
ZTsKLQl9Ci0Jdm9sLT5tZnRtaXJyX2xjbiA9IGxsOwotCW50ZnNfZGVidWcoInZvbC0+bWZ0bWly
cl9sY24gPSAweCVsbHgiLCAobG9uZyBsb25nKXZvbC0+bWZ0bWlycl9sY24pOwotI2lmZGVmIE5U
RlNfUlcKLQkvKgotCSAqIFdvcmsgb3V0IHRoZSBzaXplIG9mIHRoZSBtZnQgbWlycm9yIGluIG51
bWJlciBvZiBtZnQgcmVjb3Jkcy4gSWYgdGhlCi0JICogY2x1c3RlciBzaXplIGlzIGxlc3MgdGhh
biBvciBlcXVhbCB0byB0aGUgc2l6ZSB0YWtlbiBieSBmb3VyIG1mdAotCSAqIHJlY29yZHMsIHRo
ZSBtZnQgbWlycm9yIHN0b3JlcyB0aGUgZmlyc3QgZm91ciBtZnQgcmVjb3Jkcy4gSWYgdGhlCi0J
ICogY2x1c3RlciBzaXplIGlzIGJpZ2dlciB0aGFuIHRoZSBzaXplIHRha2VuIGJ5IGZvdXIgbWZ0
IHJlY29yZHMsIHRoZQotCSAqIG1mdCBtaXJyb3IgY29udGFpbnMgYXMgbWFueSBtZnQgcmVjb3Jk
cyBhcyB3aWxsIGZpdCBpbnRvIG9uZQotCSAqIGNsdXN0ZXIuCi0JICovCi0JaWYgKHZvbC0+Y2x1
c3Rlcl9zaXplIDw9ICg0IDw8IHZvbC0+bWZ0X3JlY29yZF9zaXplX2JpdHMpKQotCQl2b2wtPm1m
dG1pcnJfc2l6ZSA9IDQ7Ci0JZWxzZQotCQl2b2wtPm1mdG1pcnJfc2l6ZSA9IHZvbC0+Y2x1c3Rl
cl9zaXplID4+Ci0JCQkJdm9sLT5tZnRfcmVjb3JkX3NpemVfYml0czsKLQludGZzX2RlYnVnKCJ2
b2wtPm1mdG1pcnJfc2l6ZSA9ICVpIiwgdm9sLT5tZnRtaXJyX3NpemUpOwotI2VuZGlmIC8qIE5U
RlNfUlcgKi8KLQl2b2wtPnNlcmlhbF9ubyA9IGxlNjRfdG9fY3B1KGItPnZvbHVtZV9zZXJpYWxf
bnVtYmVyKTsKLQludGZzX2RlYnVnKCJ2b2wtPnNlcmlhbF9ubyA9IDB4JWxseCIsCi0JCQkodW5z
aWduZWQgbG9uZyBsb25nKXZvbC0+c2VyaWFsX25vKTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotLyoq
Ci0gKiBudGZzX3NldHVwX2FsbG9jYXRvcnMgLSBpbml0aWFsaXplIHRoZSBjbHVzdGVyIGFuZCBt
ZnQgYWxsb2NhdG9ycwotICogQHZvbDoJdm9sdW1lIHN0cnVjdHVyZSBmb3Igd2hpY2ggdG8gc2V0
dXAgdGhlIGFsbG9jYXRvcnMKLSAqCi0gKiBTZXR1cCB0aGUgY2x1c3RlciAobGNuKSBhbmQgbWZ0
IGFsbG9jYXRvcnMgdG8gdGhlIHN0YXJ0aW5nIHZhbHVlcy4KLSAqLwotc3RhdGljIHZvaWQgbnRm
c19zZXR1cF9hbGxvY2F0b3JzKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0jaWZkZWYgTlRGU19SVwot
CUxDTiBtZnRfem9uZV9zaXplLCBtZnRfbGNuOwotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQotCW50
ZnNfZGVidWcoInZvbC0+bWZ0X3pvbmVfbXVsdGlwbGllciA9IDB4JXgiLAotCQkJdm9sLT5tZnRf
em9uZV9tdWx0aXBsaWVyKTsKLSNpZmRlZiBOVEZTX1JXCi0JLyogRGV0ZXJtaW5lIHRoZSBzaXpl
IG9mIHRoZSBNRlQgem9uZS4gKi8KLQltZnRfem9uZV9zaXplID0gdm9sLT5ucl9jbHVzdGVyczsK
LQlzd2l0Y2ggKHZvbC0+bWZ0X3pvbmVfbXVsdGlwbGllcikgeyAgLyogJSBvZiB2b2x1bWUgc2l6
ZSBpbiBjbHVzdGVycyAqLwotCWNhc2UgNDoKLQkJbWZ0X3pvbmVfc2l6ZSA+Pj0gMTsJCQkvKiA1
MCUgICAqLwotCQlicmVhazsKLQljYXNlIDM6Ci0JCW1mdF96b25lX3NpemUgPSAobWZ0X3pvbmVf
c2l6ZSArCi0JCQkJKG1mdF96b25lX3NpemUgPj4gMSkpID4+IDI7CS8qIDM3LjUlICovCi0JCWJy
ZWFrOwotCWNhc2UgMjoKLQkJbWZ0X3pvbmVfc2l6ZSA+Pj0gMjsJCQkvKiAyNSUgICAqLwotCQli
cmVhazsKLQkvKiBjYXNlIDE6ICovCi0JZGVmYXVsdDoKLQkJbWZ0X3pvbmVfc2l6ZSA+Pj0gMzsJ
CQkvKiAxMi41JSAqLwotCQlicmVhazsKLQl9Ci0JLyogU2V0dXAgdGhlIG1mdCB6b25lLiAqLwot
CXZvbC0+bWZ0X3pvbmVfc3RhcnQgPSB2b2wtPm1mdF96b25lX3BvcyA9IHZvbC0+bWZ0X2xjbjsK
LQludGZzX2RlYnVnKCJ2b2wtPm1mdF96b25lX3BvcyA9IDB4JWxseCIsCi0JCQkodW5zaWduZWQg
bG9uZyBsb25nKXZvbC0+bWZ0X3pvbmVfcG9zKTsKLQkvKgotCSAqIENhbGN1bGF0ZSB0aGUgbWZ0
X2xjbiBmb3IgYW4gdW5tb2RpZmllZCBOVEZTIHZvbHVtZSAoc2VlIG1rbnRmcwotCSAqIHNvdXJj
ZSkgYW5kIGlmIHRoZSBhY3R1YWwgbWZ0X2xjbiBpcyBpbiB0aGUgZXhwZWN0ZWQgcGxhY2Ugb3Ig
ZXZlbgotCSAqIGZ1cnRoZXIgdG8gdGhlIGZyb250IG9mIHRoZSB2b2x1bWUsIGV4dGVuZCB0aGUg
bWZ0X3pvbmUgdG8gY292ZXIgdGhlCi0JICogYmVnaW5uaW5nIG9mIHRoZSB2b2x1bWUgYXMgd2Vs
bC4gIFRoaXMgaXMgaW4gb3JkZXIgdG8gcHJvdGVjdCB0aGUKLQkgKiBhcmVhIHJlc2VydmVkIGZv
ciB0aGUgbWZ0IGJpdG1hcCBhcyB3ZWxsIHdpdGhpbiB0aGUgbWZ0X3pvbmUgaXRzZWxmLgotCSAq
IE9uIG5vbi1zdGFuZGFyZCB2b2x1bWVzIHdlIGRvIG5vdCBwcm90ZWN0IGl0IGFzIHRoZSBvdmVy
aGVhZCB3b3VsZAotCSAqIGJlIGhpZ2hlciB0aGFuIHRoZSBzcGVlZCBpbmNyZWFzZSB3ZSB3b3Vs
ZCBnZXQgYnkgZG9pbmcgaXQuCi0JICovCi0JbWZ0X2xjbiA9ICg4MTkyICsgMiAqIHZvbC0+Y2x1
c3Rlcl9zaXplIC0gMSkgLyB2b2wtPmNsdXN0ZXJfc2l6ZTsKLQlpZiAobWZ0X2xjbiAqIHZvbC0+
Y2x1c3Rlcl9zaXplIDwgMTYgKiAxMDI0KQotCQltZnRfbGNuID0gKDE2ICogMTAyNCArIHZvbC0+
Y2x1c3Rlcl9zaXplIC0gMSkgLwotCQkJCXZvbC0+Y2x1c3Rlcl9zaXplOwotCWlmICh2b2wtPm1m
dF96b25lX3N0YXJ0IDw9IG1mdF9sY24pCi0JCXZvbC0+bWZ0X3pvbmVfc3RhcnQgPSAwOwotCW50
ZnNfZGVidWcoInZvbC0+bWZ0X3pvbmVfc3RhcnQgPSAweCVsbHgiLAotCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZyl2b2wtPm1mdF96b25lX3N0YXJ0KTsKLQkvKgotCSAqIE5lZWQgdG8gY2FwIHRoZSBt
ZnQgem9uZSBvbiBub24tc3RhbmRhcmQgdm9sdW1lcyBzbyB0aGF0IGl0IGRvZXMKLQkgKiBub3Qg
cG9pbnQgb3V0c2lkZSB0aGUgYm91bmRhcmllcyBvZiB0aGUgdm9sdW1lLiAgV2UgZG8gdGhpcyBi
eQotCSAqIGhhbHZpbmcgdGhlIHpvbmUgc2l6ZSB1bnRpbCB3ZSBhcmUgaW5zaWRlIHRoZSB2b2x1
bWUuCi0JICovCi0Jdm9sLT5tZnRfem9uZV9lbmQgPSB2b2wtPm1mdF9sY24gKyBtZnRfem9uZV9z
aXplOwotCXdoaWxlICh2b2wtPm1mdF96b25lX2VuZCA+PSB2b2wtPm5yX2NsdXN0ZXJzKSB7Ci0J
CW1mdF96b25lX3NpemUgPj49IDE7Ci0JCXZvbC0+bWZ0X3pvbmVfZW5kID0gdm9sLT5tZnRfbGNu
ICsgbWZ0X3pvbmVfc2l6ZTsKLQl9Ci0JbnRmc19kZWJ1Zygidm9sLT5tZnRfem9uZV9lbmQgPSAw
eCVsbHgiLAotCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2b2wtPm1mdF96b25lX2VuZCk7Ci0JLyoK
LQkgKiBTZXQgdGhlIGN1cnJlbnQgcG9zaXRpb24gd2l0aGluIGVhY2ggZGF0YSB6b25lIHRvIHRo
ZSBzdGFydCBvZiB0aGUKLQkgKiByZXNwZWN0aXZlIHpvbmUuCi0JICovCi0Jdm9sLT5kYXRhMV96
b25lX3BvcyA9IHZvbC0+bWZ0X3pvbmVfZW5kOwotCW50ZnNfZGVidWcoInZvbC0+ZGF0YTFfem9u
ZV9wb3MgPSAweCVsbHgiLAotCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyl2b2wtPmRhdGExX3pvbmVf
cG9zKTsKLQl2b2wtPmRhdGEyX3pvbmVfcG9zID0gMDsKLQludGZzX2RlYnVnKCJ2b2wtPmRhdGEy
X3pvbmVfcG9zID0gMHglbGx4IiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdm9sLT5kYXRhMl96
b25lX3Bvcyk7Ci0KLQkvKiBTZXQgdGhlIG1mdCBkYXRhIGFsbG9jYXRpb24gcG9zaXRpb24gdG8g
bWZ0IHJlY29yZCAyNC4gKi8KLQl2b2wtPm1mdF9kYXRhX3BvcyA9IDI0OwotCW50ZnNfZGVidWco
InZvbC0+bWZ0X2RhdGFfcG9zID0gMHglbGx4IiwKLQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpdm9s
LT5tZnRfZGF0YV9wb3MpOwotI2VuZGlmIC8qIE5URlNfUlcgKi8KLX0KLQotI2lmZGVmIE5URlNf
UlcKLQotLyoqCi0gKiBsb2FkX2FuZF9pbml0X21mdF9taXJyb3IgLSBsb2FkIGFuZCBzZXR1cCB0
aGUgbWZ0IG1pcnJvciBpbm9kZSBmb3IgYSB2b2x1bWUKLSAqIEB2b2w6CW50ZnMgc3VwZXIgYmxv
Y2sgZGVzY3JpYmluZyBkZXZpY2Ugd2hvc2UgbWZ0IG1pcnJvciB0byBsb2FkCi0gKgotICogUmV0
dXJuICd0cnVlJyBvbiBzdWNjZXNzIG9yICdmYWxzZScgb24gZXJyb3IuCi0gKi8KLXN0YXRpYyBi
b29sIGxvYWRfYW5kX2luaXRfbWZ0X21pcnJvcihudGZzX3ZvbHVtZSAqdm9sKQotewotCXN0cnVj
dCBpbm9kZSAqdG1wX2lubzsKLQludGZzX2lub2RlICp0bXBfbmk7Ci0KLQludGZzX2RlYnVnKCJF
bnRlcmluZy4iKTsKLQkvKiBHZXQgbWZ0IG1pcnJvciBpbm9kZS4gKi8KLQl0bXBfaW5vID0gbnRm
c19pZ2V0KHZvbC0+c2IsIEZJTEVfTUZUTWlycik7Ci0JaWYgKElTX0VSUih0bXBfaW5vKSB8fCBp
c19iYWRfaW5vZGUodG1wX2lubykpIHsKLQkJaWYgKCFJU19FUlIodG1wX2lubykpCi0JCQlpcHV0
KHRtcF9pbm8pOwotCQkvKiBDYWxsZXIgd2lsbCBkaXNwbGF5IGVycm9yIG1lc3NhZ2UuICovCi0J
CXJldHVybiBmYWxzZTsKLQl9Ci0JLyoKLQkgKiBSZS1pbml0aWFsaXplIHNvbWUgc3BlY2lmaWNz
IGFib3V0ICRNRlRNaXJyJ3MgaW5vZGUgYXMKLQkgKiBudGZzX3JlYWRfaW5vZGUoKSB3aWxsIGhh
dmUgc2V0IHVwIHRoZSBkZWZhdWx0IG9uZXMuCi0JICovCi0JLyogU2V0IHVpZCBhbmQgZ2lkIHRv
IHJvb3QuICovCi0JdG1wX2luby0+aV91aWQgPSBHTE9CQUxfUk9PVF9VSUQ7Ci0JdG1wX2luby0+
aV9naWQgPSBHTE9CQUxfUk9PVF9HSUQ7Ci0JLyogUmVndWxhciBmaWxlLiAgTm8gYWNjZXNzIGZv
ciBhbnlvbmUuICovCi0JdG1wX2luby0+aV9tb2RlID0gU19JRlJFRzsKLQkvKiBObyBWRlMgaW5p
dGlhdGVkIG9wZXJhdGlvbnMgYWxsb3dlZCBmb3IgJE1GVE1pcnIuICovCi0JdG1wX2luby0+aV9v
cCA9ICZudGZzX2VtcHR5X2lub2RlX29wczsKLQl0bXBfaW5vLT5pX2ZvcCA9ICZudGZzX2VtcHR5
X2ZpbGVfb3BzOwotCS8qIFB1dCBpbiBvdXIgc3BlY2lhbCBhZGRyZXNzIHNwYWNlIG9wZXJhdGlv
bnMuICovCi0JdG1wX2luby0+aV9tYXBwaW5nLT5hX29wcyA9ICZudGZzX21zdF9hb3BzOwotCXRt
cF9uaSA9IE5URlNfSSh0bXBfaW5vKTsKLQkvKiBUaGUgJE1GVE1pcnIsIGxpa2UgdGhlICRNRlQg
aXMgbXVsdGkgc2VjdG9yIHRyYW5zZmVyIHByb3RlY3RlZC4gKi8KLQlOSW5vU2V0TXN0UHJvdGVj
dGVkKHRtcF9uaSk7Ci0JTklub1NldFNwYXJzZURpc2FibGVkKHRtcF9uaSk7Ci0JLyoKLQkgKiBT
ZXQgdXAgb3VyIGxpdHRsZSBjaGVhdCBhbGxvd2luZyB1cyB0byByZXVzZSB0aGUgYXN5bmMgcmVh
ZCBpbwotCSAqIGNvbXBsZXRpb24gaGFuZGxlciBmb3IgZGlyZWN0b3JpZXMuCi0JICovCi0JdG1w
X25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplID0gdm9sLT5tZnRfcmVjb3JkX3NpemU7Ci0JdG1w
X25pLT5pdHlwZS5pbmRleC5ibG9ja19zaXplX2JpdHMgPSB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9i
aXRzOwotCXZvbC0+bWZ0bWlycl9pbm8gPSB0bXBfaW5vOwotCW50ZnNfZGVidWcoIkRvbmUuIik7
Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLS8qKgotICogY2hlY2tfbWZ0X21pcnJvciAtIGNvbXBhcmUg
Y29udGVudHMgb2YgdGhlIG1mdCBtaXJyb3Igd2l0aCB0aGUgbWZ0Ci0gKiBAdm9sOgludGZzIHN1
cGVyIGJsb2NrIGRlc2NyaWJpbmcgZGV2aWNlIHdob3NlIG1mdCBtaXJyb3IgdG8gY2hlY2sKLSAq
Ci0gKiBSZXR1cm4gJ3RydWUnIG9uIHN1Y2Nlc3Mgb3IgJ2ZhbHNlJyBvbiBlcnJvci4KLSAqCi0g
KiBOb3RlLCB0aGlzIGZ1bmN0aW9uIGFsc28gcmVzdWx0cyBpbiB0aGUgbWZ0IG1pcnJvciBydW5s
aXN0IGJlaW5nIGNvbXBsZXRlbHkKLSAqIG1hcHBlZCBpbnRvIG1lbW9yeS4gIFRoZSBtZnQgbWly
cm9yIHdyaXRlIGNvZGUgcmVxdWlyZXMgdGhpcyBhbmQgd2lsbCBCVUcoKQotICogc2hvdWxkIGl0
IGZpbmQgYW4gdW5tYXBwZWQgcnVubGlzdCBlbGVtZW50LgotICovCi1zdGF0aWMgYm9vbCBjaGVj
a19tZnRfbWlycm9yKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0Jc3RydWN0IHN1cGVyX2Jsb2NrICpz
YiA9IHZvbC0+c2I7Ci0JbnRmc19pbm9kZSAqbWlycl9uaTsKLQlzdHJ1Y3QgcGFnZSAqbWZ0X3Bh
Z2UsICptaXJyX3BhZ2U7Ci0JdTggKmttZnQsICprbWlycjsKLQlydW5saXN0X2VsZW1lbnQgKnJs
LCBybDJbMl07Ci0JcGdvZmZfdCBpbmRleDsKLQlpbnQgbXJlY3NfcGVyX3BhZ2UsIGk7Ci0KLQlu
dGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQkvKiBDb21wYXJlIGNvbnRlbnRzIG9mICRNRlQgYW5k
ICRNRlRNaXJyLiAqLwotCW1yZWNzX3Blcl9wYWdlID0gUEFHRV9TSVpFIC8gdm9sLT5tZnRfcmVj
b3JkX3NpemU7Ci0JQlVHX09OKCFtcmVjc19wZXJfcGFnZSk7Ci0JQlVHX09OKCF2b2wtPm1mdG1p
cnJfc2l6ZSk7Ci0JbWZ0X3BhZ2UgPSBtaXJyX3BhZ2UgPSBOVUxMOwotCWttZnQgPSBrbWlyciA9
IE5VTEw7Ci0JaW5kZXggPSBpID0gMDsKLQlkbyB7Ci0JCXUzMiBieXRlczsKLQotCQkvKiBTd2l0
Y2ggcGFnZXMgaWYgbmVjZXNzYXJ5LiAqLwotCQlpZiAoIShpICUgbXJlY3NfcGVyX3BhZ2UpKSB7
Ci0JCQlpZiAoaW5kZXgpIHsKLQkJCQludGZzX3VubWFwX3BhZ2UobWZ0X3BhZ2UpOwotCQkJCW50
ZnNfdW5tYXBfcGFnZShtaXJyX3BhZ2UpOwotCQkJfQotCQkJLyogR2V0IHRoZSAkTUZUIHBhZ2Uu
ICovCi0JCQltZnRfcGFnZSA9IG50ZnNfbWFwX3BhZ2Uodm9sLT5tZnRfaW5vLT5pX21hcHBpbmcs
Ci0JCQkJCWluZGV4KTsKLQkJCWlmIChJU19FUlIobWZ0X3BhZ2UpKSB7Ci0JCQkJbnRmc19lcnJv
cihzYiwgIkZhaWxlZCB0byByZWFkICRNRlQuIik7Ci0JCQkJcmV0dXJuIGZhbHNlOwotCQkJfQot
CQkJa21mdCA9IHBhZ2VfYWRkcmVzcyhtZnRfcGFnZSk7Ci0JCQkvKiBHZXQgdGhlICRNRlRNaXJy
IHBhZ2UuICovCi0JCQltaXJyX3BhZ2UgPSBudGZzX21hcF9wYWdlKHZvbC0+bWZ0bWlycl9pbm8t
PmlfbWFwcGluZywKLQkJCQkJaW5kZXgpOwotCQkJaWYgKElTX0VSUihtaXJyX3BhZ2UpKSB7Ci0J
CQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byByZWFkICRNRlRNaXJyLiIpOwotCQkJCWdvdG8g
bWZ0X3VubWFwX291dDsKLQkJCX0KLQkJCWttaXJyID0gcGFnZV9hZGRyZXNzKG1pcnJfcGFnZSk7
Ci0JCQkrK2luZGV4OwotCQl9Ci0JCS8qIERvIG5vdCBjaGVjayB0aGUgcmVjb3JkIGlmIGl0IGlz
IG5vdCBpbiB1c2UuICovCi0JCWlmICgoKE1GVF9SRUNPUkQqKWttZnQpLT5mbGFncyAmIE1GVF9S
RUNPUkRfSU5fVVNFKSB7Ci0JCQkvKiBNYWtlIHN1cmUgdGhlIHJlY29yZCBpcyBvay4gKi8KLQkJ
CWlmIChudGZzX2lzX2JhYWRfcmVjb3JkcCgobGUzMiopa21mdCkpIHsKLQkJCQludGZzX2Vycm9y
KHNiLCAiSW5jb21wbGV0ZSBtdWx0aSBzZWN0b3IgIgotCQkJCQkJInRyYW5zZmVyIGRldGVjdGVk
IGluIG1mdCAiCi0JCQkJCQkicmVjb3JkICVpLiIsIGkpOwotbW1fdW5tYXBfb3V0OgotCQkJCW50
ZnNfdW5tYXBfcGFnZShtaXJyX3BhZ2UpOwotbWZ0X3VubWFwX291dDoKLQkJCQludGZzX3VubWFw
X3BhZ2UobWZ0X3BhZ2UpOwotCQkJCXJldHVybiBmYWxzZTsKLQkJCX0KLQkJfQotCQkvKiBEbyBu
b3QgY2hlY2sgdGhlIG1pcnJvciByZWNvcmQgaWYgaXQgaXMgbm90IGluIHVzZS4gKi8KLQkJaWYg
KCgoTUZUX1JFQ09SRCopa21pcnIpLT5mbGFncyAmIE1GVF9SRUNPUkRfSU5fVVNFKSB7Ci0JCQlp
ZiAobnRmc19pc19iYWFkX3JlY29yZHAoKGxlMzIqKWttaXJyKSkgewotCQkJCW50ZnNfZXJyb3Io
c2IsICJJbmNvbXBsZXRlIG11bHRpIHNlY3RvciAiCi0JCQkJCQkidHJhbnNmZXIgZGV0ZWN0ZWQg
aW4gbWZ0ICIKLQkJCQkJCSJtaXJyb3IgcmVjb3JkICVpLiIsIGkpOwotCQkJCWdvdG8gbW1fdW5t
YXBfb3V0OwotCQkJfQotCQl9Ci0JCS8qIEdldCB0aGUgYW1vdW50IG9mIGRhdGEgaW4gdGhlIGN1
cnJlbnQgcmVjb3JkLiAqLwotCQlieXRlcyA9IGxlMzJfdG9fY3B1KCgoTUZUX1JFQ09SRCopa21m
dCktPmJ5dGVzX2luX3VzZSk7Ci0JCWlmIChieXRlcyA8IHNpemVvZihNRlRfUkVDT1JEX09MRCkg
fHwKLQkJCQlieXRlcyA+IHZvbC0+bWZ0X3JlY29yZF9zaXplIHx8Ci0JCQkJbnRmc19pc19iYWFk
X3JlY29yZHAoKGxlMzIqKWttZnQpKSB7Ci0JCQlieXRlcyA9IGxlMzJfdG9fY3B1KCgoTUZUX1JF
Q09SRCopa21pcnIpLT5ieXRlc19pbl91c2UpOwotCQkJaWYgKGJ5dGVzIDwgc2l6ZW9mKE1GVF9S
RUNPUkRfT0xEKSB8fAotCQkJCQlieXRlcyA+IHZvbC0+bWZ0X3JlY29yZF9zaXplIHx8Ci0JCQkJ
CW50ZnNfaXNfYmFhZF9yZWNvcmRwKChsZTMyKilrbWlycikpCi0JCQkJYnl0ZXMgPSB2b2wtPm1m
dF9yZWNvcmRfc2l6ZTsKLQkJfQotCQkvKiBDb21wYXJlIHRoZSB0d28gcmVjb3Jkcy4gKi8KLQkJ
aWYgKG1lbWNtcChrbWZ0LCBrbWlyciwgYnl0ZXMpKSB7Ci0JCQludGZzX2Vycm9yKHNiLCAiJE1G
VCBhbmQgJE1GVE1pcnIgKHJlY29yZCAlaSkgZG8gbm90ICIKLQkJCQkJIm1hdGNoLiAgUnVuIG50
ZnNmaXggb3IgY2hrZHNrLiIsIGkpOwotCQkJZ290byBtbV91bm1hcF9vdXQ7Ci0JCX0KLQkJa21m
dCArPSB2b2wtPm1mdF9yZWNvcmRfc2l6ZTsKLQkJa21pcnIgKz0gdm9sLT5tZnRfcmVjb3JkX3Np
emU7Ci0JfSB3aGlsZSAoKytpIDwgdm9sLT5tZnRtaXJyX3NpemUpOwotCS8qIFJlbGVhc2UgdGhl
IGxhc3QgcGFnZXMuICovCi0JbnRmc191bm1hcF9wYWdlKG1mdF9wYWdlKTsKLQludGZzX3VubWFw
X3BhZ2UobWlycl9wYWdlKTsKLQotCS8qIENvbnN0cnVjdCB0aGUgbWZ0IG1pcnJvciBydW5saXN0
IGJ5IGhhbmQuICovCi0JcmwyWzBdLnZjbiA9IDA7Ci0JcmwyWzBdLmxjbiA9IHZvbC0+bWZ0bWly
cl9sY247Ci0JcmwyWzBdLmxlbmd0aCA9ICh2b2wtPm1mdG1pcnJfc2l6ZSAqIHZvbC0+bWZ0X3Jl
Y29yZF9zaXplICsKLQkJCXZvbC0+Y2x1c3Rlcl9zaXplIC0gMSkgLyB2b2wtPmNsdXN0ZXJfc2l6
ZTsKLQlybDJbMV0udmNuID0gcmwyWzBdLmxlbmd0aDsKLQlybDJbMV0ubGNuID0gTENOX0VOT0VO
VDsKLQlybDJbMV0ubGVuZ3RoID0gMDsKLQkvKgotCSAqIEJlY2F1c2Ugd2UgaGF2ZSBqdXN0IHJl
YWQgYWxsIG9mIHRoZSBtZnQgbWlycm9yLCB3ZSBrbm93IHdlIGhhdmUKLQkgKiBtYXBwZWQgdGhl
IGZ1bGwgcnVubGlzdCBmb3IgaXQuCi0JICovCi0JbWlycl9uaSA9IE5URlNfSSh2b2wtPm1mdG1p
cnJfaW5vKTsKLQlkb3duX3JlYWQoJm1pcnJfbmktPnJ1bmxpc3QubG9jayk7Ci0JcmwgPSBtaXJy
X25pLT5ydW5saXN0LnJsOwotCS8qIENvbXBhcmUgdGhlIHR3byBydW5saXN0cy4gIFRoZXkgbXVz
dCBiZSBpZGVudGljYWwuICovCi0JaSA9IDA7Ci0JZG8gewotCQlpZiAocmwyW2ldLnZjbiAhPSBy
bFtpXS52Y24gfHwgcmwyW2ldLmxjbiAhPSBybFtpXS5sY24gfHwKLQkJCQlybDJbaV0ubGVuZ3Ro
ICE9IHJsW2ldLmxlbmd0aCkgewotCQkJbnRmc19lcnJvcihzYiwgIiRNRlRNaXJyIGxvY2F0aW9u
IG1pc21hdGNoLiAgIgotCQkJCQkiUnVuIGNoa2Rzay4iKTsKLQkJCXVwX3JlYWQoJm1pcnJfbmkt
PnJ1bmxpc3QubG9jayk7Ci0JCQlyZXR1cm4gZmFsc2U7Ci0JCX0KLQl9IHdoaWxlIChybDJbaSsr
XS5sZW5ndGgpOwotCXVwX3JlYWQoJm1pcnJfbmktPnJ1bmxpc3QubG9jayk7Ci0JbnRmc19kZWJ1
ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotLyoqCi0gKiBsb2FkX2FuZF9jaGVja19s
b2dmaWxlIC0gbG9hZCBhbmQgY2hlY2sgdGhlIGxvZ2ZpbGUgaW5vZGUgZm9yIGEgdm9sdW1lCi0g
KiBAdm9sOgludGZzIHN1cGVyIGJsb2NrIGRlc2NyaWJpbmcgZGV2aWNlIHdob3NlIGxvZ2ZpbGUg
dG8gbG9hZAotICoKLSAqIFJldHVybiAndHJ1ZScgb24gc3VjY2VzcyBvciAnZmFsc2UnIG9uIGVy
cm9yLgotICovCi1zdGF0aWMgYm9vbCBsb2FkX2FuZF9jaGVja19sb2dmaWxlKG50ZnNfdm9sdW1l
ICp2b2wsCi0JCVJFU1RBUlRfUEFHRV9IRUFERVIgKipycCkKLXsKLQlzdHJ1Y3QgaW5vZGUgKnRt
cF9pbm87Ci0KLQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsKLQl0bXBfaW5vID0gbnRmc19pZ2V0
KHZvbC0+c2IsIEZJTEVfTG9nRmlsZSk7Ci0JaWYgKElTX0VSUih0bXBfaW5vKSB8fCBpc19iYWRf
aW5vZGUodG1wX2lubykpIHsKLQkJaWYgKCFJU19FUlIodG1wX2lubykpCi0JCQlpcHV0KHRtcF9p
bm8pOwotCQkvKiBDYWxsZXIgd2lsbCBkaXNwbGF5IGVycm9yIG1lc3NhZ2UuICovCi0JCXJldHVy
biBmYWxzZTsKLQl9Ci0JaWYgKCFudGZzX2NoZWNrX2xvZ2ZpbGUodG1wX2lubywgcnApKSB7Ci0J
CWlwdXQodG1wX2lubyk7Ci0JCS8qIG50ZnNfY2hlY2tfbG9nZmlsZSgpIHdpbGwgaGF2ZSBkaXNw
bGF5ZWQgZXJyb3Igb3V0cHV0LiAqLwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCU5Jbm9TZXRTcGFy
c2VEaXNhYmxlZChOVEZTX0kodG1wX2lubykpOwotCXZvbC0+bG9nZmlsZV9pbm8gPSB0bXBfaW5v
OwotCW50ZnNfZGVidWcoIkRvbmUuIik7Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLSNkZWZpbmUgTlRG
U19ISUJFUkZJTF9IRUFERVJfU0laRQk0MDk2Ci0KLS8qKgotICogY2hlY2tfd2luZG93c19oaWJl
cm5hdGlvbl9zdGF0dXMgLSBjaGVjayBpZiBXaW5kb3dzIGlzIHN1c3BlbmRlZCBvbiBhIHZvbHVt
ZQotICogQHZvbDoJbnRmcyBzdXBlciBibG9jayBvZiBkZXZpY2UgdG8gY2hlY2sKLSAqCi0gKiBD
aGVjayBpZiBXaW5kb3dzIGlzIGhpYmVybmF0ZWQgb24gdGhlIG50ZnMgdm9sdW1lIEB2b2wuICBU
aGlzIGlzIGRvbmUgYnkKLSAqIGxvb2tpbmcgZm9yIHRoZSBmaWxlIGhpYmVyZmlsLnN5cyBpbiB0
aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhlIHZvbHVtZS4gIElmCi0gKiB0aGUgZmlsZSBpcyBub3Qg
cHJlc2VudCBXaW5kb3dzIGlzIGRlZmluaXRlbHkgbm90IHN1c3BlbmRlZC4KLSAqCi0gKiBJZiBo
aWJlcmZpbC5zeXMgZXhpc3RzIGFuZCBpcyBsZXNzIHRoYW4gNGtpQiBpbiBzaXplIGl0IG1lYW5z
IFdpbmRvd3MgaXMKLSAqIGRlZmluaXRlbHkgc3VzcGVuZGVkICh0aGlzIHZvbHVtZSBpcyBub3Qg
dGhlIHN5c3RlbSB2b2x1bWUpLiAgQ2F2ZWF0OiAgb24gYQotICogc3lzdGVtIHdpdGggbWFueSB2
b2x1bWVzIGl0IGlzIHBvc3NpYmxlIHRoYXQgdGhlIDwgNGtpQiBjaGVjayBpcyBib2d1cyBidXQK
LSAqIGZvciBub3cgdGhpcyBzaG91bGQgZG8gZmluZS4KLSAqCi0gKiBJZiBoaWJlcmZpbC5zeXMg
ZXhpc3RzIGFuZCBpcyBsYXJnZXIgdGhhbiA0a2lCIGluIHNpemUsIHdlIG5lZWQgdG8gcmVhZCB0
aGUKLSAqIGhpYmVyZmlsIGhlYWRlciAod2hpY2ggaXMgdGhlIGZpcnN0IDRraUIpLiAgSWYgdGhp
cyBiZWdpbnMgd2l0aCAiaGliciIsCi0gKiBXaW5kb3dzIGlzIGRlZmluaXRlbHkgc3VzcGVuZGVk
LiAgSWYgaXQgaXMgY29tcGxldGVseSBmdWxsIG9mIHplcm9lcywKLSAqIFdpbmRvd3MgaXMgZGVm
aW5pdGVseSBub3QgaGliZXJuYXRlZC4gIEFueSBvdGhlciBjYXNlIGlzIHRyZWF0ZWQgYXMgaWYK
LSAqIFdpbmRvd3MgaXMgc3VzcGVuZGVkLiAgVGhpcyBjYXRlcnMgZm9yIHRoZSBhYm92ZSBtZW50
aW9uZWQgY2F2ZWF0IG9mIGEKLSAqIHN5c3RlbSB3aXRoIG1hbnkgdm9sdW1lcyB3aGVyZSBubyAi
aGliciIgbWFnaWMgd291bGQgYmUgcHJlc2VudCBhbmQgdGhlcmUgaXMKLSAqIG5vIHplcm8gaGVh
ZGVyLgotICoKLSAqIFJldHVybiAwIGlmIFdpbmRvd3MgaXMgbm90IGhpYmVybmF0ZWQgb24gdGhl
IHZvbHVtZSwgPjAgaWYgV2luZG93cyBpcwotICogaGliZXJuYXRlZCBvbiB0aGUgdm9sdW1lLCBh
bmQgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0aWMgaW50IGNoZWNrX3dpbmRvd3NfaGliZXJu
YXRpb25fc3RhdHVzKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0JTUZUX1JFRiBtcmVmOwotCXN0cnVj
dCBpbm9kZSAqdmk7Ci0Jc3RydWN0IHBhZ2UgKnBhZ2U7Ci0JdTMyICprYWRkciwgKmtlbmQ7Ci0J
bnRmc19uYW1lICpuYW1lID0gTlVMTDsKLQlpbnQgcmV0ID0gMTsKLQlzdGF0aWMgY29uc3QgbnRm
c2NoYXIgaGliZXJmaWxbMTNdID0geyBjcHVfdG9fbGUxNignaCcpLAotCQkJY3B1X3RvX2xlMTYo
J2knKSwgY3B1X3RvX2xlMTYoJ2InKSwKLQkJCWNwdV90b19sZTE2KCdlJyksIGNwdV90b19sZTE2
KCdyJyksCi0JCQljcHVfdG9fbGUxNignZicpLCBjcHVfdG9fbGUxNignaScpLAotCQkJY3B1X3Rv
X2xlMTYoJ2wnKSwgY3B1X3RvX2xlMTYoJy4nKSwKLQkJCWNwdV90b19sZTE2KCdzJyksIGNwdV90
b19sZTE2KCd5JyksCi0JCQljcHVfdG9fbGUxNigncycpLCAwIH07Ci0KLQludGZzX2RlYnVnKCJF
bnRlcmluZy4iKTsKLQkvKgotCSAqIEZpbmQgdGhlIGlub2RlIG51bWJlciBmb3IgdGhlIGhpYmVy
bmF0aW9uIGZpbGUgYnkgbG9va2luZyB1cCB0aGUKLQkgKiBmaWxlbmFtZSBoaWJlcmZpbC5zeXMg
aW4gdGhlIHJvb3QgZGlyZWN0b3J5LgotCSAqLwotCWlub2RlX2xvY2sodm9sLT5yb290X2lubyk7
Ci0JbXJlZiA9IG50ZnNfbG9va3VwX2lub2RlX2J5X25hbWUoTlRGU19JKHZvbC0+cm9vdF9pbm8p
LCBoaWJlcmZpbCwgMTIsCi0JCQkmbmFtZSk7Ci0JaW5vZGVfdW5sb2NrKHZvbC0+cm9vdF9pbm8p
OwotCWlmIChJU19FUlJfTVJFRihtcmVmKSkgewotCQlyZXQgPSBNUkVGX0VSUihtcmVmKTsKLQkJ
LyogSWYgdGhlIGZpbGUgZG9lcyBub3QgZXhpc3QsIFdpbmRvd3MgaXMgbm90IGhpYmVybmF0ZWQu
ICovCi0JCWlmIChyZXQgPT0gLUVOT0VOVCkgewotCQkJbnRmc19kZWJ1ZygiaGliZXJmaWwuc3lz
IG5vdCBwcmVzZW50LiAgV2luZG93cyBpcyBub3QgIgotCQkJCQkiaGliZXJuYXRlZCBvbiB0aGUg
dm9sdW1lLiIpOwotCQkJcmV0dXJuIDA7Ci0JCX0KLQkJLyogQSByZWFsIGVycm9yIG9jY3VycmVk
LiAqLwotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gZmluZCBpbm9kZSBudW1iZXIg
Zm9yICIKLQkJCQkiaGliZXJmaWwuc3lzLiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQkvKiBXZSBk
byBub3QgY2FyZSBmb3IgdGhlIHR5cGUgb2YgbWF0Y2ggdGhhdCB3YXMgZm91bmQuICovCi0Ja2Zy
ZWUobmFtZSk7Ci0JLyogR2V0IHRoZSBpbm9kZS4gKi8KLQl2aSA9IG50ZnNfaWdldCh2b2wtPnNi
LCBNUkVGKG1yZWYpKTsKLQlpZiAoSVNfRVJSKHZpKSB8fCBpc19iYWRfaW5vZGUodmkpKSB7Ci0J
CWlmICghSVNfRVJSKHZpKSkKLQkJCWlwdXQodmkpOwotCQludGZzX2Vycm9yKHZvbC0+c2IsICJG
YWlsZWQgdG8gbG9hZCBoaWJlcmZpbC5zeXMuIik7Ci0JCXJldHVybiBJU19FUlIodmkpID8gUFRS
X0VSUih2aSkgOiAtRUlPOwotCX0KLQlpZiAodW5saWtlbHkoaV9zaXplX3JlYWQodmkpIDwgTlRG
U19ISUJFUkZJTF9IRUFERVJfU0laRSkpIHsKLQkJbnRmc19kZWJ1ZygiaGliZXJmaWwuc3lzIGlz
IHNtYWxsZXIgdGhhbiA0a2lCICgweCVsbHgpLiAgIgotCQkJCSJXaW5kb3dzIGlzIGhpYmVybmF0
ZWQgb24gdGhlIHZvbHVtZS4gIFRoaXMgIgotCQkJCSJpcyBub3QgdGhlIHN5c3RlbSB2b2x1bWUu
IiwgaV9zaXplX3JlYWQodmkpKTsKLQkJZ290byBpcHV0X291dDsKLQl9Ci0JcGFnZSA9IG50ZnNf
bWFwX3BhZ2UodmktPmlfbWFwcGluZywgMCk7Ci0JaWYgKElTX0VSUihwYWdlKSkgewotCQludGZz
X2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gcmVhZCBmcm9tIGhpYmVyZmlsLnN5cy4iKTsKLQkJ
cmV0ID0gUFRSX0VSUihwYWdlKTsKLQkJZ290byBpcHV0X291dDsKLQl9Ci0Ja2FkZHIgPSAodTMy
KilwYWdlX2FkZHJlc3MocGFnZSk7Ci0JaWYgKCoobGUzMiopa2FkZHIgPT0gY3B1X3RvX2xlMzIo
MHg3MjYyNjk2OCkvKidoaWJyJyovKSB7Ci0JCW50ZnNfZGVidWcoIk1hZ2ljIFwiaGliclwiIGZv
dW5kIGluIGhpYmVyZmlsLnN5cy4gIFdpbmRvd3MgaXMgIgotCQkJCSJoaWJlcm5hdGVkIG9uIHRo
ZSB2b2x1bWUuICBUaGlzIGlzIHRoZSAiCi0JCQkJInN5c3RlbSB2b2x1bWUuIik7Ci0JCWdvdG8g
dW5tX2lwdXRfb3V0OwotCX0KLQlrZW5kID0ga2FkZHIgKyBOVEZTX0hJQkVSRklMX0hFQURFUl9T
SVpFL3NpemVvZigqa2FkZHIpOwotCWRvIHsKLQkJaWYgKHVubGlrZWx5KCprYWRkcikpIHsKLQkJ
CW50ZnNfZGVidWcoImhpYmVyZmlsLnN5cyBpcyBsYXJnZXIgdGhhbiA0a2lCICIKLQkJCQkJIigw
eCVsbHgpLCBkb2VzIG5vdCBjb250YWluIHRoZSAiCi0JCQkJCSJcImhpYnJcIiBtYWdpYywgYW5k
IGRvZXMgbm90IGhhdmUgYSAiCi0JCQkJCSJ6ZXJvIGhlYWRlci4gIFdpbmRvd3MgaXMgaGliZXJu
YXRlZCAiCi0JCQkJCSJvbiB0aGUgdm9sdW1lLiAgVGhpcyBpcyBub3QgdGhlICIKLQkJCQkJInN5
c3RlbSB2b2x1bWUuIiwgaV9zaXplX3JlYWQodmkpKTsKLQkJCWdvdG8gdW5tX2lwdXRfb3V0Owot
CQl9Ci0JfSB3aGlsZSAoKytrYWRkciA8IGtlbmQpOwotCW50ZnNfZGVidWcoImhpYmVyZmlsLnN5
cyBjb250YWlucyBhIHplcm8gaGVhZGVyLiAgV2luZG93cyBpcyBub3QgIgotCQkJImhpYmVybmF0
ZWQgb24gdGhlIHZvbHVtZS4gIFRoaXMgaXMgdGhlIHN5c3RlbSAiCi0JCQkidm9sdW1lLiIpOwot
CXJldCA9IDA7Ci11bm1faXB1dF9vdXQ6Ci0JbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotaXB1dF9v
dXQ6Ci0JaXB1dCh2aSk7Ci0JcmV0dXJuIHJldDsKLX0KLQotLyoqCi0gKiBsb2FkX2FuZF9pbml0
X3F1b3RhIC0gbG9hZCBhbmQgc2V0dXAgdGhlIHF1b3RhIGZpbGUgZm9yIGEgdm9sdW1lIGlmIHBy
ZXNlbnQKLSAqIEB2b2w6CW50ZnMgc3VwZXIgYmxvY2sgZGVzY3JpYmluZyBkZXZpY2Ugd2hvc2Ug
cXVvdGEgZmlsZSB0byBsb2FkCi0gKgotICogUmV0dXJuICd0cnVlJyBvbiBzdWNjZXNzIG9yICdm
YWxzZScgb24gZXJyb3IuICBJZiAkUXVvdGEgaXMgbm90IHByZXNlbnQsIHdlCi0gKiBsZWF2ZSB2
b2wtPnF1b3RhX2lubyBhcyBOVUxMIGFuZCByZXR1cm4gc3VjY2Vzcy4KLSAqLwotc3RhdGljIGJv
b2wgbG9hZF9hbmRfaW5pdF9xdW90YShudGZzX3ZvbHVtZSAqdm9sKQotewotCU1GVF9SRUYgbXJl
ZjsKLQlzdHJ1Y3QgaW5vZGUgKnRtcF9pbm87Ci0JbnRmc19uYW1lICpuYW1lID0gTlVMTDsKLQlz
dGF0aWMgY29uc3QgbnRmc2NoYXIgUXVvdGFbN10gPSB7IGNwdV90b19sZTE2KCckJyksCi0JCQlj
cHVfdG9fbGUxNignUScpLCBjcHVfdG9fbGUxNigndScpLAotCQkJY3B1X3RvX2xlMTYoJ28nKSwg
Y3B1X3RvX2xlMTYoJ3QnKSwKLQkJCWNwdV90b19sZTE2KCdhJyksIDAgfTsKLQlzdGF0aWMgbnRm
c2NoYXIgUVszXSA9IHsgY3B1X3RvX2xlMTYoJyQnKSwKLQkJCWNwdV90b19sZTE2KCdRJyksIDAg
fTsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCS8qCi0JICogRmluZCB0aGUgaW5vZGUg
bnVtYmVyIGZvciB0aGUgcXVvdGEgZmlsZSBieSBsb29raW5nIHVwIHRoZSBmaWxlbmFtZQotCSAq
ICRRdW90YSBpbiB0aGUgZXh0ZW5kZWQgc3lzdGVtIGZpbGVzIGRpcmVjdG9yeSAkRXh0ZW5kLgot
CSAqLwotCWlub2RlX2xvY2sodm9sLT5leHRlbmRfaW5vKTsKLQltcmVmID0gbnRmc19sb29rdXBf
aW5vZGVfYnlfbmFtZShOVEZTX0kodm9sLT5leHRlbmRfaW5vKSwgUXVvdGEsIDYsCi0JCQkmbmFt
ZSk7Ci0JaW5vZGVfdW5sb2NrKHZvbC0+ZXh0ZW5kX2lubyk7Ci0JaWYgKElTX0VSUl9NUkVGKG1y
ZWYpKSB7Ci0JCS8qCi0JCSAqIElmIHRoZSBmaWxlIGRvZXMgbm90IGV4aXN0LCBxdW90YXMgYXJl
IGRpc2FibGVkIGFuZCBoYXZlCi0JCSAqIG5ldmVyIGJlZW4gZW5hYmxlZCBvbiB0aGlzIHZvbHVt
ZSwganVzdCByZXR1cm4gc3VjY2Vzcy4KLQkJICovCi0JCWlmIChNUkVGX0VSUihtcmVmKSA9PSAt
RU5PRU5UKSB7Ci0JCQludGZzX2RlYnVnKCIkUXVvdGEgbm90IHByZXNlbnQuICBWb2x1bWUgZG9l
cyBub3QgaGF2ZSAiCi0JCQkJCSJxdW90YXMgZW5hYmxlZC4iKTsKLQkJCS8qCi0JCQkgKiBObyBu
ZWVkIHRvIHRyeSB0byBzZXQgcXVvdGFzIG91dCBvZiBkYXRlIGlmIHRoZXkgYXJlCi0JCQkgKiBu
b3QgZW5hYmxlZC4KLQkJCSAqLwotCQkJTlZvbFNldFF1b3RhT3V0T2ZEYXRlKHZvbCk7Ci0JCQly
ZXR1cm4gdHJ1ZTsKLQkJfQotCQkvKiBBIHJlYWwgZXJyb3Igb2NjdXJyZWQuICovCi0JCW50ZnNf
ZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBmaW5kIGlub2RlIG51bWJlciBmb3IgJFF1b3RhLiIp
OwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qIFdlIGRvIG5vdCBjYXJlIGZvciB0aGUgdHlwZSBv
ZiBtYXRjaCB0aGF0IHdhcyBmb3VuZC4gKi8KLQlrZnJlZShuYW1lKTsKLQkvKiBHZXQgdGhlIGlu
b2RlLiAqLwotCXRtcF9pbm8gPSBudGZzX2lnZXQodm9sLT5zYiwgTVJFRihtcmVmKSk7Ci0JaWYg
KElTX0VSUih0bXBfaW5vKSB8fCBpc19iYWRfaW5vZGUodG1wX2lubykpIHsKLQkJaWYgKCFJU19F
UlIodG1wX2lubykpCi0JCQlpcHV0KHRtcF9pbm8pOwotCQludGZzX2Vycm9yKHZvbC0+c2IsICJG
YWlsZWQgdG8gbG9hZCAkUXVvdGEuIik7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0Jdm9sLT5xdW90
YV9pbm8gPSB0bXBfaW5vOwotCS8qIEdldCB0aGUgJFEgaW5kZXggYWxsb2NhdGlvbiBhdHRyaWJ1
dGUuICovCi0JdG1wX2lubyA9IG50ZnNfaW5kZXhfaWdldCh2b2wtPnF1b3RhX2lubywgUSwgMik7
Ci0JaWYgKElTX0VSUih0bXBfaW5vKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQg
dG8gbG9hZCAkUXVvdGEvJFEgaW5kZXguIik7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0Jdm9sLT5x
dW90YV9xX2lubyA9IHRtcF9pbm87Ci0JbnRmc19kZWJ1ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1
ZTsKLX0KLQotLyoqCi0gKiBsb2FkX2FuZF9pbml0X3VzbmpybmwgLSBsb2FkIGFuZCBzZXR1cCB0
aGUgdHJhbnNhY3Rpb24gbG9nIGlmIHByZXNlbnQKLSAqIEB2b2w6CW50ZnMgc3VwZXIgYmxvY2sg
ZGVzY3JpYmluZyBkZXZpY2Ugd2hvc2UgdXNuanJubCBmaWxlIHRvIGxvYWQKLSAqCi0gKiBSZXR1
cm4gJ3RydWUnIG9uIHN1Y2Nlc3Mgb3IgJ2ZhbHNlJyBvbiBlcnJvci4KLSAqCi0gKiBJZiAkVXNu
SnJubCBpcyBub3QgcHJlc2VudCBvciBpbiB0aGUgcHJvY2VzcyBvZiBiZWluZyBkaXNhYmxlZCwg
d2Ugc2V0Ci0gKiBOVm9sVXNuSnJubFN0YW1wZWQoKSBhbmQgcmV0dXJuIHN1Y2Nlc3MuCi0gKgot
ICogSWYgdGhlICRVc25Kcm5sICREQVRBLyRKIGF0dHJpYnV0ZSBoYXMgYSBzaXplIGVxdWFsIHRv
IHRoZSBsb3dlc3QgdmFsaWQgdXNuLAotICogaS5lLiB0cmFuc2FjdGlvbiBsb2dnaW5nIGhhcyBv
bmx5IGp1c3QgYmVlbiBlbmFibGVkIG9yIHRoZSBqb3VybmFsIGhhcyBiZWVuCi0gKiBzdGFtcGVk
IGFuZCBub3RoaW5nIGhhcyBiZWVuIGxvZ2dlZCBzaW5jZSwgd2UgYWxzbyBzZXQgTlZvbFVzbkpy
bmxTdGFtcGVkKCkKLSAqIGFuZCByZXR1cm4gc3VjY2Vzcy4KLSAqLwotc3RhdGljIGJvb2wgbG9h
ZF9hbmRfaW5pdF91c25qcm5sKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0JTUZUX1JFRiBtcmVmOwot
CXN0cnVjdCBpbm9kZSAqdG1wX2lubzsKLQludGZzX2lub2RlICp0bXBfbmk7Ci0Jc3RydWN0IHBh
Z2UgKnBhZ2U7Ci0JbnRmc19uYW1lICpuYW1lID0gTlVMTDsKLQlVU05fSEVBREVSICp1aDsKLQlz
dGF0aWMgY29uc3QgbnRmc2NoYXIgVXNuSnJubFs5XSA9IHsgY3B1X3RvX2xlMTYoJyQnKSwKLQkJ
CWNwdV90b19sZTE2KCdVJyksIGNwdV90b19sZTE2KCdzJyksCi0JCQljcHVfdG9fbGUxNignbicp
LCBjcHVfdG9fbGUxNignSicpLAotCQkJY3B1X3RvX2xlMTYoJ3InKSwgY3B1X3RvX2xlMTYoJ24n
KSwKLQkJCWNwdV90b19sZTE2KCdsJyksIDAgfTsKLQlzdGF0aWMgbnRmc2NoYXIgTWF4WzVdID0g
eyBjcHVfdG9fbGUxNignJCcpLAotCQkJY3B1X3RvX2xlMTYoJ00nKSwgY3B1X3RvX2xlMTYoJ2En
KSwKLQkJCWNwdV90b19sZTE2KCd4JyksIDAgfTsKLQlzdGF0aWMgbnRmc2NoYXIgSlszXSA9IHsg
Y3B1X3RvX2xlMTYoJyQnKSwKLQkJCWNwdV90b19sZTE2KCdKJyksIDAgfTsKLQotCW50ZnNfZGVi
dWcoIkVudGVyaW5nLiIpOwotCS8qCi0JICogRmluZCB0aGUgaW5vZGUgbnVtYmVyIGZvciB0aGUg
dHJhbnNhY3Rpb24gbG9nIGZpbGUgYnkgbG9va2luZyB1cCB0aGUKLQkgKiBmaWxlbmFtZSAkVXNu
SnJubCBpbiB0aGUgZXh0ZW5kZWQgc3lzdGVtIGZpbGVzIGRpcmVjdG9yeSAkRXh0ZW5kLgotCSAq
LwotCWlub2RlX2xvY2sodm9sLT5leHRlbmRfaW5vKTsKLQltcmVmID0gbnRmc19sb29rdXBfaW5v
ZGVfYnlfbmFtZShOVEZTX0kodm9sLT5leHRlbmRfaW5vKSwgVXNuSnJubCwgOCwKLQkJCSZuYW1l
KTsKLQlpbm9kZV91bmxvY2sodm9sLT5leHRlbmRfaW5vKTsKLQlpZiAoSVNfRVJSX01SRUYobXJl
ZikpIHsKLQkJLyoKLQkJICogSWYgdGhlIGZpbGUgZG9lcyBub3QgZXhpc3QsIHRyYW5zYWN0aW9u
IGxvZ2dpbmcgaXMgZGlzYWJsZWQsCi0JCSAqIGp1c3QgcmV0dXJuIHN1Y2Nlc3MuCi0JCSAqLwot
CQlpZiAoTVJFRl9FUlIobXJlZikgPT0gLUVOT0VOVCkgewotCQkJbnRmc19kZWJ1ZygiJFVzbkpy
bmwgbm90IHByZXNlbnQuICBWb2x1bWUgZG9lcyBub3QgIgotCQkJCQkiaGF2ZSB0cmFuc2FjdGlv
biBsb2dnaW5nIGVuYWJsZWQuIik7Ci1ub3RfZW5hYmxlZDoKLQkJCS8qCi0JCQkgKiBObyBuZWVk
IHRvIHRyeSB0byBzdGFtcCB0aGUgdHJhbnNhY3Rpb24gbG9nIGlmCi0JCQkgKiB0cmFuc2FjdGlv
biBsb2dnaW5nIGlzIG5vdCBlbmFibGVkLgotCQkJICovCi0JCQlOVm9sU2V0VXNuSnJubFN0YW1w
ZWQodm9sKTsKLQkJCXJldHVybiB0cnVlOwotCQl9Ci0JCS8qIEEgcmVhbCBlcnJvciBvY2N1cnJl
ZC4gKi8KLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGZpbmQgaW5vZGUgbnVtYmVy
IGZvciAiCi0JCQkJIiRVc25Kcm5sLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qIFdlIGRv
IG5vdCBjYXJlIGZvciB0aGUgdHlwZSBvZiBtYXRjaCB0aGF0IHdhcyBmb3VuZC4gKi8KLQlrZnJl
ZShuYW1lKTsKLQkvKiBHZXQgdGhlIGlub2RlLiAqLwotCXRtcF9pbm8gPSBudGZzX2lnZXQodm9s
LT5zYiwgTVJFRihtcmVmKSk7Ci0JaWYgKElTX0VSUih0bXBfaW5vKSB8fCB1bmxpa2VseShpc19i
YWRfaW5vZGUodG1wX2lubykpKSB7Ci0JCWlmICghSVNfRVJSKHRtcF9pbm8pKQotCQkJaXB1dCh0
bXBfaW5vKTsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIGxvYWQgJFVzbkpybmwu
Iik7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0Jdm9sLT51c25qcm5sX2lubyA9IHRtcF9pbm87Ci0J
LyoKLQkgKiBJZiB0aGUgdHJhbnNhY3Rpb24gbG9nIGlzIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5n
IGRlbGV0ZWQsIHdlIGNhbgotCSAqIGlnbm9yZSBpdC4KLQkgKi8KLQlpZiAodW5saWtlbHkodm9s
LT52b2xfZmxhZ3MgJiBWT0xVTUVfREVMRVRFX1VTTl9VTkRFUldBWSkpIHsKLQkJbnRmc19kZWJ1
ZygiJFVzbkpybmwgaW4gdGhlIHByb2Nlc3Mgb2YgYmVpbmcgZGlzYWJsZWQuICAiCi0JCQkJIlZv
bHVtZSBkb2VzIG5vdCBoYXZlIHRyYW5zYWN0aW9uIGxvZ2dpbmcgIgotCQkJCSJlbmFibGVkLiIp
OwotCQlnb3RvIG5vdF9lbmFibGVkOwotCX0KLQkvKiBHZXQgdGhlICREQVRBLyRNYXggYXR0cmli
dXRlLiAqLwotCXRtcF9pbm8gPSBudGZzX2F0dHJfaWdldCh2b2wtPnVzbmpybmxfaW5vLCBBVF9E
QVRBLCBNYXgsIDQpOwotCWlmIChJU19FUlIodG1wX2lubykpIHsKLQkJbnRmc19lcnJvcih2b2wt
PnNiLCAiRmFpbGVkIHRvIGxvYWQgJFVzbkpybmwvJERBVEEvJE1heCAiCi0JCQkJImF0dHJpYnV0
ZS4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQl2b2wtPnVzbmpybmxfbWF4X2lubyA9IHRtcF9p
bm87Ci0JaWYgKHVubGlrZWx5KGlfc2l6ZV9yZWFkKHRtcF9pbm8pIDwgc2l6ZW9mKFVTTl9IRUFE
RVIpKSkgewotCQludGZzX2Vycm9yKHZvbC0+c2IsICJGb3VuZCBjb3JydXB0ICRVc25Kcm5sLyRE
QVRBLyRNYXggIgotCQkJCSJhdHRyaWJ1dGUgKHNpemUgaXMgMHglbGx4IGJ1dCBzaG91bGQgYmUg
YXQgIgotCQkJCSJsZWFzdCAweCV6eCBieXRlcykuIiwgaV9zaXplX3JlYWQodG1wX2lubyksCi0J
CQkJc2l6ZW9mKFVTTl9IRUFERVIpKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQkvKiBHZXQgdGhl
ICREQVRBLyRKIGF0dHJpYnV0ZS4gKi8KLQl0bXBfaW5vID0gbnRmc19hdHRyX2lnZXQodm9sLT51
c25qcm5sX2lubywgQVRfREFUQSwgSiwgMik7Ci0JaWYgKElTX0VSUih0bXBfaW5vKSkgewotCQlu
dGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gbG9hZCAkVXNuSnJubC8kREFUQS8kSiAiCi0J
CQkJImF0dHJpYnV0ZS4iKTsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQl2b2wtPnVzbmpybmxfal9p
bm8gPSB0bXBfaW5vOwotCS8qIFZlcmlmeSAkSiBpcyBub24tcmVzaWRlbnQgYW5kIHNwYXJzZS4g
Ki8KLQl0bXBfbmkgPSBOVEZTX0kodm9sLT51c25qcm5sX2pfaW5vKTsKLQlpZiAodW5saWtlbHko
IU5Jbm9Ob25SZXNpZGVudCh0bXBfbmkpIHx8ICFOSW5vU3BhcnNlKHRtcF9uaSkpKSB7Ci0JCW50
ZnNfZXJyb3Iodm9sLT5zYiwgIiRVc25Kcm5sLyREQVRBLyRKIGF0dHJpYnV0ZSBpcyByZXNpZGVu
dCAiCi0JCQkJImFuZC9vciBub3Qgc3BhcnNlLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8q
IFJlYWQgdGhlIFVTTl9IRUFERVIgZnJvbSAkREFUQS8kTWF4LiAqLwotCXBhZ2UgPSBudGZzX21h
cF9wYWdlKHZvbC0+dXNuanJubF9tYXhfaW5vLT5pX21hcHBpbmcsIDApOwotCWlmIChJU19FUlIo
cGFnZSkpIHsKLQkJbnRmc19lcnJvcih2b2wtPnNiLCAiRmFpbGVkIHRvIHJlYWQgZnJvbSAkVXNu
SnJubC8kREFUQS8kTWF4ICIKLQkJCQkiYXR0cmlidXRlLiIpOwotCQlyZXR1cm4gZmFsc2U7Ci0J
fQotCXVoID0gKFVTTl9IRUFERVIqKXBhZ2VfYWRkcmVzcyhwYWdlKTsKLQkvKiBTYW5pdHkgY2hl
Y2sgdGhlICRNYXguICovCi0JaWYgKHVubGlrZWx5KHNsZTY0X3RvX2NwdSh1aC0+YWxsb2NhdGlv
bl9kZWx0YSkgPgotCQkJc2xlNjRfdG9fY3B1KHVoLT5tYXhpbXVtX3NpemUpKSkgewotCQludGZz
X2Vycm9yKHZvbC0+c2IsICJBbGxvY2F0aW9uIGRlbHRhICgweCVsbHgpIGV4Y2VlZHMgIgotCQkJ
CSJtYXhpbXVtIHNpemUgKDB4JWxseCkuICAkVXNuSnJubCBpcyBjb3JydXB0LiIsCi0JCQkJKGxv
bmcgbG9uZylzbGU2NF90b19jcHUodWgtPmFsbG9jYXRpb25fZGVsdGEpLAotCQkJCShsb25nIGxv
bmcpc2xlNjRfdG9fY3B1KHVoLT5tYXhpbXVtX3NpemUpKTsKLQkJbnRmc191bm1hcF9wYWdlKHBh
Z2UpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCS8qCi0JICogSWYgdGhlIHRyYW5zYWN0aW9uIGxv
ZyBoYXMgYmVlbiBzdGFtcGVkIGFuZCBub3RoaW5nIGhhcyBiZWVuIHdyaXR0ZW4KLQkgKiB0byBp
dCBzaW5jZSwgd2UgZG8gbm90IG5lZWQgdG8gc3RhbXAgaXQuCi0JICovCi0JaWYgKHVubGlrZWx5
KHNsZTY0X3RvX2NwdSh1aC0+bG93ZXN0X3ZhbGlkX3VzbikgPj0KLQkJCWlfc2l6ZV9yZWFkKHZv
bC0+dXNuanJubF9qX2lubykpKSB7Ci0JCWlmIChsaWtlbHkoc2xlNjRfdG9fY3B1KHVoLT5sb3dl
c3RfdmFsaWRfdXNuKSA9PQotCQkJCWlfc2l6ZV9yZWFkKHZvbC0+dXNuanJubF9qX2lubykpKSB7
Ci0JCQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JCQludGZzX2RlYnVnKCIkVXNuSnJubCBpcyBl
bmFibGVkIGJ1dCBub3RoaW5nIGhhcyBiZWVuICIKLQkJCQkJImxvZ2dlZCBzaW5jZSBpdCB3YXMg
bGFzdCBzdGFtcGVkLiAgIgotCQkJCQkiVHJlYXRpbmcgdGhpcyBhcyBpZiB0aGUgdm9sdW1lIGRv
ZXMgIgotCQkJCQkibm90IGhhdmUgdHJhbnNhY3Rpb24gbG9nZ2luZyAiCi0JCQkJCSJlbmFibGVk
LiIpOwotCQkJZ290byBub3RfZW5hYmxlZDsKLQkJfQotCQludGZzX2Vycm9yKHZvbC0+c2IsICIk
VXNuSnJubCBoYXMgbG93ZXN0IHZhbGlkIHVzbiAoMHglbGx4KSAiCi0JCQkJIndoaWNoIGlzIG91
dCBvZiBib3VuZHMgKDB4JWxseCkuICAkVXNuSnJubCAiCi0JCQkJImlzIGNvcnJ1cHQuIiwKLQkJ
CQkobG9uZyBsb25nKXNsZTY0X3RvX2NwdSh1aC0+bG93ZXN0X3ZhbGlkX3VzbiksCi0JCQkJaV9z
aXplX3JlYWQodm9sLT51c25qcm5sX2pfaW5vKSk7Ci0JCW50ZnNfdW5tYXBfcGFnZShwYWdlKTsK
LQkJcmV0dXJuIGZhbHNlOwotCX0KLQludGZzX3VubWFwX3BhZ2UocGFnZSk7Ci0JbnRmc19kZWJ1
ZygiRG9uZS4iKTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotLyoqCi0gKiBsb2FkX2FuZF9pbml0X2F0
dHJkZWYgLSBsb2FkIHRoZSBhdHRyaWJ1dGUgZGVmaW5pdGlvbnMgdGFibGUgZm9yIGEgdm9sdW1l
Ci0gKiBAdm9sOgludGZzIHN1cGVyIGJsb2NrIGRlc2NyaWJpbmcgZGV2aWNlIHdob3NlIGF0dHJk
ZWYgdG8gbG9hZAotICoKLSAqIFJldHVybiAndHJ1ZScgb24gc3VjY2VzcyBvciAnZmFsc2UnIG9u
IGVycm9yLgotICovCi1zdGF0aWMgYm9vbCBsb2FkX2FuZF9pbml0X2F0dHJkZWYobnRmc192b2x1
bWUgKnZvbCkKLXsKLQlsb2ZmX3QgaV9zaXplOwotCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSB2
b2wtPnNiOwotCXN0cnVjdCBpbm9kZSAqaW5vOwotCXN0cnVjdCBwYWdlICpwYWdlOwotCXBnb2Zm
X3QgaW5kZXgsIG1heF9pbmRleDsKLQl1bnNpZ25lZCBpbnQgc2l6ZTsKLQotCW50ZnNfZGVidWco
IkVudGVyaW5nLiIpOwotCS8qIFJlYWQgYXR0cmRlZiB0YWJsZSBhbmQgc2V0dXAgdm9sLT5hdHRy
ZGVmIGFuZCB2b2wtPmF0dHJkZWZfc2l6ZS4gKi8KLQlpbm8gPSBudGZzX2lnZXQoc2IsIEZJTEVf
QXR0ckRlZik7Ci0JaWYgKElTX0VSUihpbm8pIHx8IGlzX2JhZF9pbm9kZShpbm8pKSB7Ci0JCWlm
ICghSVNfRVJSKGlubykpCi0JCQlpcHV0KGlubyk7Ci0JCWdvdG8gZmFpbGVkOwotCX0KLQlOSW5v
U2V0U3BhcnNlRGlzYWJsZWQoTlRGU19JKGlubykpOwotCS8qIFRoZSBzaXplIG9mIEZJTEVfQXR0
ckRlZiBtdXN0IGJlIGFib3ZlIDAgYW5kIGZpdCBpbnNpZGUgMzEgYml0cy4gKi8KLQlpX3NpemUg
PSBpX3NpemVfcmVhZChpbm8pOwotCWlmIChpX3NpemUgPD0gMCB8fCBpX3NpemUgPiAweDdmZmZm
ZmZmKQotCQlnb3RvIGlwdXRfZmFpbGVkOwotCXZvbC0+YXR0cmRlZiA9IChBVFRSX0RFRiopbnRm
c19tYWxsb2Nfbm9mcyhpX3NpemUpOwotCWlmICghdm9sLT5hdHRyZGVmKQotCQlnb3RvIGlwdXRf
ZmFpbGVkOwotCWluZGV4ID0gMDsKLQltYXhfaW5kZXggPSBpX3NpemUgPj4gUEFHRV9TSElGVDsK
LQlzaXplID0gUEFHRV9TSVpFOwotCXdoaWxlIChpbmRleCA8IG1heF9pbmRleCkgewotCQkvKiBS
ZWFkIHRoZSBhdHRyZGVmIHRhYmxlIGFuZCBjb3B5IGl0IGludG8gdGhlIGxpbmVhciBidWZmZXIu
ICovCi1yZWFkX3BhcnRpYWxfYXR0cmRlZl9wYWdlOgotCQlwYWdlID0gbnRmc19tYXBfcGFnZShp
bm8tPmlfbWFwcGluZywgaW5kZXgpOwotCQlpZiAoSVNfRVJSKHBhZ2UpKQotCQkJZ290byBmcmVl
X2lwdXRfZmFpbGVkOwotCQltZW1jcHkoKHU4Kil2b2wtPmF0dHJkZWYgKyAoaW5kZXgrKyA8PCBQ
QUdFX1NISUZUKSwKLQkJCQlwYWdlX2FkZHJlc3MocGFnZSksIHNpemUpOwotCQludGZzX3VubWFw
X3BhZ2UocGFnZSk7Ci0JfQotCWlmIChzaXplID09IFBBR0VfU0laRSkgewotCQlzaXplID0gaV9z
aXplICYgflBBR0VfTUFTSzsKLQkJaWYgKHNpemUpCi0JCQlnb3RvIHJlYWRfcGFydGlhbF9hdHRy
ZGVmX3BhZ2U7Ci0JfQotCXZvbC0+YXR0cmRlZl9zaXplID0gaV9zaXplOwotCW50ZnNfZGVidWco
IlJlYWQgJWxsdSBieXRlcyBmcm9tICRBdHRyRGVmLiIsIGlfc2l6ZSk7Ci0JaXB1dChpbm8pOwot
CXJldHVybiB0cnVlOwotZnJlZV9pcHV0X2ZhaWxlZDoKLQludGZzX2ZyZWUodm9sLT5hdHRyZGVm
KTsKLQl2b2wtPmF0dHJkZWYgPSBOVUxMOwotaXB1dF9mYWlsZWQ6Ci0JaXB1dChpbm8pOwotZmFp
bGVkOgotCW50ZnNfZXJyb3Ioc2IsICJGYWlsZWQgdG8gaW5pdGlhbGl6ZSBhdHRyaWJ1dGUgZGVm
aW5pdGlvbiB0YWJsZS4iKTsKLQlyZXR1cm4gZmFsc2U7Ci19Ci0KLSNlbmRpZiAvKiBOVEZTX1JX
ICovCi0KLS8qKgotICogbG9hZF9hbmRfaW5pdF91cGNhc2UgLSBsb2FkIHRoZSB1cGNhc2UgdGFi
bGUgZm9yIGFuIG50ZnMgdm9sdW1lCi0gKiBAdm9sOgludGZzIHN1cGVyIGJsb2NrIGRlc2NyaWJp
bmcgZGV2aWNlIHdob3NlIHVwY2FzZSB0byBsb2FkCi0gKgotICogUmV0dXJuICd0cnVlJyBvbiBz
dWNjZXNzIG9yICdmYWxzZScgb24gZXJyb3IuCi0gKi8KLXN0YXRpYyBib29sIGxvYWRfYW5kX2lu
aXRfdXBjYXNlKG50ZnNfdm9sdW1lICp2b2wpCi17Ci0JbG9mZl90IGlfc2l6ZTsKLQlzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnNiID0gdm9sLT5zYjsKLQlzdHJ1Y3QgaW5vZGUgKmlubzsKLQlzdHJ1Y3Qg
cGFnZSAqcGFnZTsKLQlwZ29mZl90IGluZGV4LCBtYXhfaW5kZXg7Ci0JdW5zaWduZWQgaW50IHNp
emU7Ci0JaW50IGksIG1heDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCS8qIFJlYWQg
dXBjYXNlIHRhYmxlIGFuZCBzZXR1cCB2b2wtPnVwY2FzZSBhbmQgdm9sLT51cGNhc2VfbGVuLiAq
LwotCWlubyA9IG50ZnNfaWdldChzYiwgRklMRV9VcENhc2UpOwotCWlmIChJU19FUlIoaW5vKSB8
fCBpc19iYWRfaW5vZGUoaW5vKSkgewotCQlpZiAoIUlTX0VSUihpbm8pKQotCQkJaXB1dChpbm8p
OwotCQlnb3RvIHVwY2FzZV9mYWlsZWQ7Ci0JfQotCS8qCi0JICogVGhlIHVwY2FzZSBzaXplIG11
c3Qgbm90IGJlIGFib3ZlIDY0ayBVbmljb2RlIGNoYXJhY3RlcnMsIG11c3Qgbm90Ci0JICogYmUg
emVybyBhbmQgbXVzdCBiZSBhIG11bHRpcGxlIG9mIHNpemVvZihudGZzY2hhcikuCi0JICovCi0J
aV9zaXplID0gaV9zaXplX3JlYWQoaW5vKTsKLQlpZiAoIWlfc2l6ZSB8fCBpX3NpemUgJiAoc2l6
ZW9mKG50ZnNjaGFyKSAtIDEpIHx8Ci0JCQlpX3NpemUgPiA2NFVMTCAqIDEwMjQgKiBzaXplb2Yo
bnRmc2NoYXIpKQotCQlnb3RvIGlwdXRfdXBjYXNlX2ZhaWxlZDsKLQl2b2wtPnVwY2FzZSA9IChu
dGZzY2hhciopbnRmc19tYWxsb2Nfbm9mcyhpX3NpemUpOwotCWlmICghdm9sLT51cGNhc2UpCi0J
CWdvdG8gaXB1dF91cGNhc2VfZmFpbGVkOwotCWluZGV4ID0gMDsKLQltYXhfaW5kZXggPSBpX3Np
emUgPj4gUEFHRV9TSElGVDsKLQlzaXplID0gUEFHRV9TSVpFOwotCXdoaWxlIChpbmRleCA8IG1h
eF9pbmRleCkgewotCQkvKiBSZWFkIHRoZSB1cGNhc2UgdGFibGUgYW5kIGNvcHkgaXQgaW50byB0
aGUgbGluZWFyIGJ1ZmZlci4gKi8KLXJlYWRfcGFydGlhbF91cGNhc2VfcGFnZToKLQkJcGFnZSA9
IG50ZnNfbWFwX3BhZ2UoaW5vLT5pX21hcHBpbmcsIGluZGV4KTsKLQkJaWYgKElTX0VSUihwYWdl
KSkKLQkJCWdvdG8gaXB1dF91cGNhc2VfZmFpbGVkOwotCQltZW1jcHkoKGNoYXIqKXZvbC0+dXBj
YXNlICsgKGluZGV4KysgPDwgUEFHRV9TSElGVCksCi0JCQkJcGFnZV9hZGRyZXNzKHBhZ2UpLCBz
aXplKTsKLQkJbnRmc191bm1hcF9wYWdlKHBhZ2UpOwotCX0KLQlpZiAoc2l6ZSA9PSBQQUdFX1NJ
WkUpIHsKLQkJc2l6ZSA9IGlfc2l6ZSAmIH5QQUdFX01BU0s7Ci0JCWlmIChzaXplKQotCQkJZ290
byByZWFkX3BhcnRpYWxfdXBjYXNlX3BhZ2U7Ci0JfQotCXZvbC0+dXBjYXNlX2xlbiA9IGlfc2l6
ZSA+PiBVQ0hBUl9UX1NJWkVfQklUUzsKLQludGZzX2RlYnVnKCJSZWFkICVsbHUgYnl0ZXMgZnJv
bSAkVXBDYXNlIChleHBlY3RlZCAlenUgYnl0ZXMpLiIsCi0JCQlpX3NpemUsIDY0ICogMTAyNCAq
IHNpemVvZihudGZzY2hhcikpOwotCWlwdXQoaW5vKTsKLQltdXRleF9sb2NrKCZudGZzX2xvY2sp
OwotCWlmICghZGVmYXVsdF91cGNhc2UpIHsKLQkJbnRmc19kZWJ1ZygiVXNpbmcgdm9sdW1lIHNw
ZWNpZmllZCAkVXBDYXNlIHNpbmNlIGRlZmF1bHQgaXMgIgotCQkJCSJub3QgcHJlc2VudC4iKTsK
LQkJbXV0ZXhfdW5sb2NrKCZudGZzX2xvY2spOwotCQlyZXR1cm4gdHJ1ZTsKLQl9Ci0JbWF4ID0g
ZGVmYXVsdF91cGNhc2VfbGVuOwotCWlmIChtYXggPiB2b2wtPnVwY2FzZV9sZW4pCi0JCW1heCA9
IHZvbC0+dXBjYXNlX2xlbjsKLQlmb3IgKGkgPSAwOyBpIDwgbWF4OyBpKyspCi0JCWlmICh2b2wt
PnVwY2FzZVtpXSAhPSBkZWZhdWx0X3VwY2FzZVtpXSkKLQkJCWJyZWFrOwotCWlmIChpID09IG1h
eCkgewotCQludGZzX2ZyZWUodm9sLT51cGNhc2UpOwotCQl2b2wtPnVwY2FzZSA9IGRlZmF1bHRf
dXBjYXNlOwotCQl2b2wtPnVwY2FzZV9sZW4gPSBtYXg7Ci0JCW50ZnNfbnJfdXBjYXNlX3VzZXJz
Kys7Ci0JCW11dGV4X3VubG9jaygmbnRmc19sb2NrKTsKLQkJbnRmc19kZWJ1ZygiVm9sdW1lIHNw
ZWNpZmllZCAkVXBDYXNlIG1hdGNoZXMgZGVmYXVsdC4gVXNpbmcgIgotCQkJCSJkZWZhdWx0LiIp
OwotCQlyZXR1cm4gdHJ1ZTsKLQl9Ci0JbXV0ZXhfdW5sb2NrKCZudGZzX2xvY2spOwotCW50ZnNf
ZGVidWcoIlVzaW5nIHZvbHVtZSBzcGVjaWZpZWQgJFVwQ2FzZSBzaW5jZSBpdCBkb2VzIG5vdCBt
YXRjaCAiCi0JCQkidGhlIGRlZmF1bHQuIik7Ci0JcmV0dXJuIHRydWU7Ci1pcHV0X3VwY2FzZV9m
YWlsZWQ6Ci0JaXB1dChpbm8pOwotCW50ZnNfZnJlZSh2b2wtPnVwY2FzZSk7Ci0Jdm9sLT51cGNh
c2UgPSBOVUxMOwotdXBjYXNlX2ZhaWxlZDoKLQltdXRleF9sb2NrKCZudGZzX2xvY2spOwotCWlm
IChkZWZhdWx0X3VwY2FzZSkgewotCQl2b2wtPnVwY2FzZSA9IGRlZmF1bHRfdXBjYXNlOwotCQl2
b2wtPnVwY2FzZV9sZW4gPSBkZWZhdWx0X3VwY2FzZV9sZW47Ci0JCW50ZnNfbnJfdXBjYXNlX3Vz
ZXJzKys7Ci0JCW11dGV4X3VubG9jaygmbnRmc19sb2NrKTsKLQkJbnRmc19lcnJvcihzYiwgIkZh
aWxlZCB0byBsb2FkICRVcENhc2UgZnJvbSB0aGUgdm9sdW1lLiBVc2luZyAiCi0JCQkJImRlZmF1
bHQuIik7Ci0JCXJldHVybiB0cnVlOwotCX0KLQltdXRleF91bmxvY2soJm50ZnNfbG9jayk7Ci0J
bnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBpbml0aWFsaXplIHVwY2FzZSB0YWJsZS4iKTsKLQly
ZXR1cm4gZmFsc2U7Ci19Ci0KLS8qCi0gKiBUaGUgbGNuIGFuZCBtZnQgYml0bWFwIGlub2RlcyBh
cmUgTlRGUy1pbnRlcm5hbCBpbm9kZXMgd2l0aAotICogdGhlaXIgb3duIHNwZWNpYWwgbG9ja2lu
ZyBydWxlczoKLSAqLwotc3RhdGljIHN0cnVjdCBsb2NrX2NsYXNzX2tleQotCWxjbmJtcF9ydW5s
aXN0X2xvY2tfa2V5LCBsY25ibXBfbXJlY19sb2NrX2tleSwKLQltZnRibXBfcnVubGlzdF9sb2Nr
X2tleSwgbWZ0Ym1wX21yZWNfbG9ja19rZXk7Ci0KLS8qKgotICogbG9hZF9zeXN0ZW1fZmlsZXMg
LSBvcGVuIHRoZSBzeXN0ZW0gZmlsZXMgdXNpbmcgbm9ybWFsIGZ1bmN0aW9ucwotICogQHZvbDoJ
bnRmcyBzdXBlciBibG9jayBkZXNjcmliaW5nIGRldmljZSB3aG9zZSBzeXN0ZW0gZmlsZXMgdG8g
bG9hZAotICoKLSAqIE9wZW4gdGhlIHN5c3RlbSBmaWxlcyB3aXRoIG5vcm1hbCBhY2Nlc3MgZnVu
Y3Rpb25zIGFuZCBjb21wbGV0ZSBzZXR0aW5nIHVwCi0gKiB0aGUgbnRmcyBzdXBlciBibG9jayBA
dm9sLgotICoKLSAqIFJldHVybiAndHJ1ZScgb24gc3VjY2VzcyBvciAnZmFsc2UnIG9uIGVycm9y
LgotICovCi1zdGF0aWMgYm9vbCBsb2FkX3N5c3RlbV9maWxlcyhudGZzX3ZvbHVtZSAqdm9sKQot
ewotCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSB2b2wtPnNiOwotCU1GVF9SRUNPUkQgKm07Ci0J
Vk9MVU1FX0lORk9STUFUSU9OICp2aTsKLQludGZzX2F0dHJfc2VhcmNoX2N0eCAqY3R4OwotI2lm
ZGVmIE5URlNfUlcKLQlSRVNUQVJUX1BBR0VfSEVBREVSICpycDsKLQlpbnQgZXJyOwotI2VuZGlm
IC8qIE5URlNfUlcgKi8KLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotI2lmZGVmIE5URlNf
UlcKLQkvKiBHZXQgbWZ0IG1pcnJvciBpbm9kZSBjb21wYXJlIHRoZSBjb250ZW50cyBvZiAkTUZU
IGFuZCAkTUZUTWlyci4gKi8KLQlpZiAoIWxvYWRfYW5kX2luaXRfbWZ0X21pcnJvcih2b2wpIHx8
ICFjaGVja19tZnRfbWlycm9yKHZvbCkpIHsKLQkJc3RhdGljIGNvbnN0IGNoYXIgKmVzMSA9ICJG
YWlsZWQgdG8gbG9hZCAkTUZUTWlyciI7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczIgPSAiJE1G
VE1pcnIgZG9lcyBub3QgbWF0Y2ggJE1GVCI7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczMgPSAi
LiAgUnVuIG50ZnNmaXggYW5kL29yIGNoa2Rzay4iOwotCi0JCS8qIElmIGEgcmVhZC13cml0ZSBt
b3VudCwgY29udmVydCBpdCB0byBhIHJlYWQtb25seSBtb3VudC4gKi8KLQkJaWYgKCFzYl9yZG9u
bHkoc2IpKSB7Ci0JCQlpZiAoISh2b2wtPm9uX2Vycm9ycyAmIChPTl9FUlJPUlNfUkVNT1VOVF9S
TyB8Ci0JCQkJCU9OX0VSUk9SU19DT05USU5VRSkpKSB7Ci0JCQkJbnRmc19lcnJvcihzYiwgIiVz
IGFuZCBuZWl0aGVyIG9uX2Vycm9ycz0iCi0JCQkJCQkiY29udGludWUgbm9yIG9uX2Vycm9ycz0i
Ci0JCQkJCQkicmVtb3VudC1ybyB3YXMgc3BlY2lmaWVkJXMiLAotCQkJCQkJIXZvbC0+bWZ0bWly
cl9pbm8gPyBlczEgOiBlczIsCi0JCQkJCQllczMpOwotCQkJCWdvdG8gaXB1dF9taXJyX2Vycl9v
dXQ7Ci0JCQl9Ci0JCQlzYi0+c19mbGFncyB8PSBTQl9SRE9OTFk7Ci0JCQludGZzX2Vycm9yKHNi
LCAiJXMuICBNb3VudGluZyByZWFkLW9ubHklcyIsCi0JCQkJCSF2b2wtPm1mdG1pcnJfaW5vID8g
ZXMxIDogZXMyLCBlczMpOwotCQl9IGVsc2UKLQkJCW50ZnNfd2FybmluZyhzYiwgIiVzLiAgV2ls
bCBub3QgYmUgYWJsZSB0byByZW1vdW50ICIKLQkJCQkJInJlYWQtd3JpdGUlcyIsCi0JCQkJCSF2
b2wtPm1mdG1pcnJfaW5vID8gZXMxIDogZXMyLCBlczMpOwotCQkvKiBUaGlzIHdpbGwgcHJldmVu
dCBhIHJlYWQtd3JpdGUgcmVtb3VudC4gKi8KLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCX0KLSNl
bmRpZiAvKiBOVEZTX1JXICovCi0JLyogR2V0IG1mdCBiaXRtYXAgYXR0cmlidXRlIGlub2RlLiAq
LwotCXZvbC0+bWZ0Ym1wX2lubyA9IG50ZnNfYXR0cl9pZ2V0KHZvbC0+bWZ0X2lubywgQVRfQklU
TUFQLCBOVUxMLCAwKTsKLQlpZiAoSVNfRVJSKHZvbC0+bWZ0Ym1wX2lubykpIHsKLQkJbnRmc19l
cnJvcihzYiwgIkZhaWxlZCB0byBsb2FkICRNRlQvJEJJVE1BUCBhdHRyaWJ1dGUuIik7Ci0JCWdv
dG8gaXB1dF9taXJyX2Vycl9vdXQ7Ci0JfQotCWxvY2tkZXBfc2V0X2NsYXNzKCZOVEZTX0kodm9s
LT5tZnRibXBfaW5vKS0+cnVubGlzdC5sb2NrLAotCQkJICAgJm1mdGJtcF9ydW5saXN0X2xvY2tf
a2V5KTsKLQlsb2NrZGVwX3NldF9jbGFzcygmTlRGU19JKHZvbC0+bWZ0Ym1wX2lubyktPm1yZWNf
bG9jaywKLQkJCSAgICZtZnRibXBfbXJlY19sb2NrX2tleSk7Ci0JLyogUmVhZCB1cGNhc2UgdGFi
bGUgYW5kIHNldHVwIEB2b2wtPnVwY2FzZSBhbmQgQHZvbC0+dXBjYXNlX2xlbi4gKi8KLQlpZiAo
IWxvYWRfYW5kX2luaXRfdXBjYXNlKHZvbCkpCi0JCWdvdG8gaXB1dF9tZnRibXBfZXJyX291dDsK
LSNpZmRlZiBOVEZTX1JXCi0JLyoKLQkgKiBSZWFkIGF0dHJpYnV0ZSBkZWZpbml0aW9ucyB0YWJs
ZSBhbmQgc2V0dXAgQHZvbC0+YXR0cmRlZiBhbmQKLQkgKiBAdm9sLT5hdHRyZGVmX3NpemUuCi0J
ICovCi0JaWYgKCFsb2FkX2FuZF9pbml0X2F0dHJkZWYodm9sKSkKLQkJZ290byBpcHV0X3VwY2Fz
ZV9lcnJfb3V0OwotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQkvKgotCSAqIEdldCB0aGUgY2x1c3Rl
ciBhbGxvY2F0aW9uIGJpdG1hcCBpbm9kZSBhbmQgdmVyaWZ5IHRoZSBzaXplLCBubwotCSAqIG5l
ZWQgZm9yIGFueSBsb2NraW5nIGF0IHRoaXMgc3RhZ2UgYXMgd2UgYXJlIGFscmVhZHkgcnVubmlu
ZwotCSAqIGV4Y2x1c2l2ZWx5IGFzIHdlIGFyZSBtb3VudCBpbiBwcm9ncmVzcyB0YXNrLgotCSAq
LwotCXZvbC0+bGNuYm1wX2lubyA9IG50ZnNfaWdldChzYiwgRklMRV9CaXRtYXApOwotCWlmIChJ
U19FUlIodm9sLT5sY25ibXBfaW5vKSB8fCBpc19iYWRfaW5vZGUodm9sLT5sY25ibXBfaW5vKSkg
ewotCQlpZiAoIUlTX0VSUih2b2wtPmxjbmJtcF9pbm8pKQotCQkJaXB1dCh2b2wtPmxjbmJtcF9p
bm8pOwotCQlnb3RvIGJpdG1hcF9mYWlsZWQ7Ci0JfQotCWxvY2tkZXBfc2V0X2NsYXNzKCZOVEZT
X0kodm9sLT5sY25ibXBfaW5vKS0+cnVubGlzdC5sb2NrLAotCQkJICAgJmxjbmJtcF9ydW5saXN0
X2xvY2tfa2V5KTsKLQlsb2NrZGVwX3NldF9jbGFzcygmTlRGU19JKHZvbC0+bGNuYm1wX2lubykt
Pm1yZWNfbG9jaywKLQkJCSAgICZsY25ibXBfbXJlY19sb2NrX2tleSk7Ci0KLQlOSW5vU2V0U3Bh
cnNlRGlzYWJsZWQoTlRGU19JKHZvbC0+bGNuYm1wX2lubykpOwotCWlmICgodm9sLT5ucl9jbHVz
dGVycyArIDcpID4+IDMgPiBpX3NpemVfcmVhZCh2b2wtPmxjbmJtcF9pbm8pKSB7Ci0JCWlwdXQo
dm9sLT5sY25ibXBfaW5vKTsKLWJpdG1hcF9mYWlsZWQ6Ci0JCW50ZnNfZXJyb3Ioc2IsICJGYWls
ZWQgdG8gbG9hZCAkQml0bWFwLiIpOwotCQlnb3RvIGlwdXRfYXR0cmRlZl9lcnJfb3V0OwotCX0K
LQkvKgotCSAqIEdldCB0aGUgdm9sdW1lIGlub2RlIGFuZCBzZXR1cCBvdXIgY2FjaGUgb2YgdGhl
IHZvbHVtZSBmbGFncyBhbmQKLQkgKiB2ZXJzaW9uLgotCSAqLwotCXZvbC0+dm9sX2lubyA9IG50
ZnNfaWdldChzYiwgRklMRV9Wb2x1bWUpOwotCWlmIChJU19FUlIodm9sLT52b2xfaW5vKSB8fCBp
c19iYWRfaW5vZGUodm9sLT52b2xfaW5vKSkgewotCQlpZiAoIUlTX0VSUih2b2wtPnZvbF9pbm8p
KQotCQkJaXB1dCh2b2wtPnZvbF9pbm8pOwotdm9sdW1lX2ZhaWxlZDoKLQkJbnRmc19lcnJvcihz
YiwgIkZhaWxlZCB0byBsb2FkICRWb2x1bWUuIik7Ci0JCWdvdG8gaXB1dF9sY25ibXBfZXJyX291
dDsKLQl9Ci0JbSA9IG1hcF9tZnRfcmVjb3JkKE5URlNfSSh2b2wtPnZvbF9pbm8pKTsKLQlpZiAo
SVNfRVJSKG0pKSB7Ci1pcHV0X3ZvbHVtZV9mYWlsZWQ6Ci0JCWlwdXQodm9sLT52b2xfaW5vKTsK
LQkJZ290byB2b2x1bWVfZmFpbGVkOwotCX0KLQlpZiAoIShjdHggPSBudGZzX2F0dHJfZ2V0X3Nl
YXJjaF9jdHgoTlRGU19JKHZvbC0+dm9sX2lubyksIG0pKSkgewotCQludGZzX2Vycm9yKHNiLCAi
RmFpbGVkIHRvIGdldCBhdHRyaWJ1dGUgc2VhcmNoIGNvbnRleHQuIik7Ci0JCWdvdG8gZ2V0X2N0
eF92b2xfZmFpbGVkOwotCX0KLQlpZiAobnRmc19hdHRyX2xvb2t1cChBVF9WT0xVTUVfSU5GT1JN
QVRJT04sIE5VTEwsIDAsIDAsIDAsIE5VTEwsIDAsCi0JCQljdHgpIHx8IGN0eC0+YXR0ci0+bm9u
X3Jlc2lkZW50IHx8IGN0eC0+YXR0ci0+ZmxhZ3MpIHsKLWVycl9wdXRfdm9sOgotCQludGZzX2F0
dHJfcHV0X3NlYXJjaF9jdHgoY3R4KTsKLWdldF9jdHhfdm9sX2ZhaWxlZDoKLQkJdW5tYXBfbWZ0
X3JlY29yZChOVEZTX0kodm9sLT52b2xfaW5vKSk7Ci0JCWdvdG8gaXB1dF92b2x1bWVfZmFpbGVk
OwotCX0KLQl2aSA9IChWT0xVTUVfSU5GT1JNQVRJT04qKSgoY2hhciopY3R4LT5hdHRyICsKLQkJ
CWxlMTZfdG9fY3B1KGN0eC0+YXR0ci0+ZGF0YS5yZXNpZGVudC52YWx1ZV9vZmZzZXQpKTsKLQkv
KiBTb21lIGJvdW5kcyBjaGVja3MuICovCi0JaWYgKCh1OCopdmkgPCAodTgqKWN0eC0+YXR0ciB8
fCAodTgqKXZpICsKLQkJCWxlMzJfdG9fY3B1KGN0eC0+YXR0ci0+ZGF0YS5yZXNpZGVudC52YWx1
ZV9sZW5ndGgpID4KLQkJCSh1OCopY3R4LT5hdHRyICsgbGUzMl90b19jcHUoY3R4LT5hdHRyLT5s
ZW5ndGgpKQotCQlnb3RvIGVycl9wdXRfdm9sOwotCS8qIENvcHkgdGhlIHZvbHVtZSBmbGFncyBh
bmQgdmVyc2lvbiB0byB0aGUgbnRmc192b2x1bWUgc3RydWN0dXJlLiAqLwotCXZvbC0+dm9sX2Zs
YWdzID0gdmktPmZsYWdzOwotCXZvbC0+bWFqb3JfdmVyID0gdmktPm1ham9yX3ZlcjsKLQl2b2wt
Pm1pbm9yX3ZlciA9IHZpLT5taW5vcl92ZXI7Ci0JbnRmc19hdHRyX3B1dF9zZWFyY2hfY3R4KGN0
eCk7Ci0JdW5tYXBfbWZ0X3JlY29yZChOVEZTX0kodm9sLT52b2xfaW5vKSk7Ci0JcHJfaW5mbygi
dm9sdW1lIHZlcnNpb24gJWkuJWkuXG4iLCB2b2wtPm1ham9yX3ZlciwKLQkJCXZvbC0+bWlub3Jf
dmVyKTsKLQlpZiAodm9sLT5tYWpvcl92ZXIgPCAzICYmIE5Wb2xTcGFyc2VFbmFibGVkKHZvbCkp
IHsKLQkJbnRmc193YXJuaW5nKHZvbC0+c2IsICJEaXNhYmxpbmcgc3BhcnNlIHN1cHBvcnQgZHVl
IHRvIE5URlMgIgotCQkJCSJ2b2x1bWUgdmVyc2lvbiAlaS4laSAobmVlZCBhdCBsZWFzdCB2ZXJz
aW9uICIKLQkJCQkiMy4wKS4iLCB2b2wtPm1ham9yX3Zlciwgdm9sLT5taW5vcl92ZXIpOwotCQlO
Vm9sQ2xlYXJTcGFyc2VFbmFibGVkKHZvbCk7Ci0JfQotI2lmZGVmIE5URlNfUlcKLQkvKiBNYWtl
IHN1cmUgdGhhdCBubyB1bnN1cHBvcnRlZCB2b2x1bWUgZmxhZ3MgYXJlIHNldC4gKi8KLQlpZiAo
dm9sLT52b2xfZmxhZ3MgJiBWT0xVTUVfTVVTVF9NT1VOVF9ST19NQVNLKSB7Ci0JCXN0YXRpYyBj
b25zdCBjaGFyICplczFhID0gIlZvbHVtZSBpcyBkaXJ0eSI7Ci0JCXN0YXRpYyBjb25zdCBjaGFy
ICplczFiID0gIlZvbHVtZSBoYXMgYmVlbiBtb2RpZmllZCBieSBjaGtkc2siOwotCQlzdGF0aWMg
Y29uc3QgY2hhciAqZXMxYyA9ICJWb2x1bWUgaGFzIHVuc3VwcG9ydGVkIGZsYWdzIHNldCI7Ci0J
CXN0YXRpYyBjb25zdCBjaGFyICplczJhID0gIi4gIFJ1biBjaGtkc2sgYW5kIG1vdW50IGluIFdp
bmRvd3MuIjsKLQkJc3RhdGljIGNvbnN0IGNoYXIgKmVzMmIgPSAiLiAgTW91bnQgaW4gV2luZG93
cy4iOwotCQljb25zdCBjaGFyICplczEsICplczI7Ci0KLQkJZXMyID0gZXMyYTsKLQkJaWYgKHZv
bC0+dm9sX2ZsYWdzICYgVk9MVU1FX0lTX0RJUlRZKQotCQkJZXMxID0gZXMxYTsKLQkJZWxzZSBp
ZiAodm9sLT52b2xfZmxhZ3MgJiBWT0xVTUVfTU9ESUZJRURfQllfQ0hLRFNLKSB7Ci0JCQllczEg
PSBlczFiOwotCQkJZXMyID0gZXMyYjsKLQkJfSBlbHNlIHsKLQkJCWVzMSA9IGVzMWM7Ci0JCQlu
dGZzX3dhcm5pbmcoc2IsICJVbnN1cHBvcnRlZCB2b2x1bWUgZmxhZ3MgMHgleCAiCi0JCQkJCSJl
bmNvdW50ZXJlZC4iLAotCQkJCQkodW5zaWduZWQpbGUxNl90b19jcHUodm9sLT52b2xfZmxhZ3Mp
KTsKLQkJfQotCQkvKiBJZiBhIHJlYWQtd3JpdGUgbW91bnQsIGNvbnZlcnQgaXQgdG8gYSByZWFk
LW9ubHkgbW91bnQuICovCi0JCWlmICghc2JfcmRvbmx5KHNiKSkgewotCQkJaWYgKCEodm9sLT5v
bl9lcnJvcnMgJiAoT05fRVJST1JTX1JFTU9VTlRfUk8gfAotCQkJCQlPTl9FUlJPUlNfQ09OVElO
VUUpKSkgewotCQkJCW50ZnNfZXJyb3Ioc2IsICIlcyBhbmQgbmVpdGhlciBvbl9lcnJvcnM9Igot
CQkJCQkJImNvbnRpbnVlIG5vciBvbl9lcnJvcnM9IgotCQkJCQkJInJlbW91bnQtcm8gd2FzIHNw
ZWNpZmllZCVzIiwKLQkJCQkJCWVzMSwgZXMyKTsKLQkJCQlnb3RvIGlwdXRfdm9sX2Vycl9vdXQ7
Ci0JCQl9Ci0JCQlzYi0+c19mbGFncyB8PSBTQl9SRE9OTFk7Ci0JCQludGZzX2Vycm9yKHNiLCAi
JXMuICBNb3VudGluZyByZWFkLW9ubHklcyIsIGVzMSwgZXMyKTsKLQkJfSBlbHNlCi0JCQludGZz
X3dhcm5pbmcoc2IsICIlcy4gIFdpbGwgbm90IGJlIGFibGUgdG8gcmVtb3VudCAiCi0JCQkJCSJy
ZWFkLXdyaXRlJXMiLCBlczEsIGVzMik7Ci0JCS8qCi0JCSAqIERvIG5vdCBzZXQgTlZvbEVycm9y
cygpIGJlY2F1c2UgbnRmc19yZW1vdW50KCkgcmUtY2hlY2tzIHRoZQotCQkgKiBmbGFncyB3aGlj
aCB3ZSBuZWVkIHRvIGRvIGluIGNhc2UgYW55IGZsYWdzIGhhdmUgY2hhbmdlZC4KLQkJICovCi0J
fQotCS8qCi0JICogR2V0IHRoZSBpbm9kZSBmb3IgdGhlIGxvZ2ZpbGUsIGNoZWNrIGl0IGFuZCBk
ZXRlcm1pbmUgaWYgdGhlIHZvbHVtZQotCSAqIHdhcyBzaHV0ZG93biBjbGVhbmx5LgotCSAqLwot
CXJwID0gTlVMTDsKLQlpZiAoIWxvYWRfYW5kX2NoZWNrX2xvZ2ZpbGUodm9sLCAmcnApIHx8Ci0J
CQkhbnRmc19pc19sb2dmaWxlX2NsZWFuKHZvbC0+bG9nZmlsZV9pbm8sIHJwKSkgewotCQlzdGF0
aWMgY29uc3QgY2hhciAqZXMxYSA9ICJGYWlsZWQgdG8gbG9hZCAkTG9nRmlsZSI7Ci0JCXN0YXRp
YyBjb25zdCBjaGFyICplczFiID0gIiRMb2dGaWxlIGlzIG5vdCBjbGVhbiI7Ci0JCXN0YXRpYyBj
b25zdCBjaGFyICplczIgPSAiLiAgTW91bnQgaW4gV2luZG93cy4iOwotCQljb25zdCBjaGFyICpl
czE7Ci0KLQkJZXMxID0gIXZvbC0+bG9nZmlsZV9pbm8gPyBlczFhIDogZXMxYjsKLQkJLyogSWYg
YSByZWFkLXdyaXRlIG1vdW50LCBjb252ZXJ0IGl0IHRvIGEgcmVhZC1vbmx5IG1vdW50LiAqLwot
CQlpZiAoIXNiX3Jkb25seShzYikpIHsKLQkJCWlmICghKHZvbC0+b25fZXJyb3JzICYgKE9OX0VS
Uk9SU19SRU1PVU5UX1JPIHwKLQkJCQkJT05fRVJST1JTX0NPTlRJTlVFKSkpIHsKLQkJCQludGZz
X2Vycm9yKHNiLCAiJXMgYW5kIG5laXRoZXIgb25fZXJyb3JzPSIKLQkJCQkJCSJjb250aW51ZSBu
b3Igb25fZXJyb3JzPSIKLQkJCQkJCSJyZW1vdW50LXJvIHdhcyBzcGVjaWZpZWQlcyIsCi0JCQkJ
CQllczEsIGVzMik7Ci0JCQkJaWYgKHZvbC0+bG9nZmlsZV9pbm8pIHsKLQkJCQkJQlVHX09OKCFy
cCk7Ci0JCQkJCW50ZnNfZnJlZShycCk7Ci0JCQkJfQotCQkJCWdvdG8gaXB1dF9sb2dmaWxlX2Vy
cl9vdXQ7Ci0JCQl9Ci0JCQlzYi0+c19mbGFncyB8PSBTQl9SRE9OTFk7Ci0JCQludGZzX2Vycm9y
KHNiLCAiJXMuICBNb3VudGluZyByZWFkLW9ubHklcyIsIGVzMSwgZXMyKTsKLQkJfSBlbHNlCi0J
CQludGZzX3dhcm5pbmcoc2IsICIlcy4gIFdpbGwgbm90IGJlIGFibGUgdG8gcmVtb3VudCAiCi0J
CQkJCSJyZWFkLXdyaXRlJXMiLCBlczEsIGVzMik7Ci0JCS8qIFRoaXMgd2lsbCBwcmV2ZW50IGEg
cmVhZC13cml0ZSByZW1vdW50LiAqLwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JfQotCW50ZnNf
ZnJlZShycCk7Ci0jZW5kaWYgLyogTlRGU19SVyAqLwotCS8qIEdldCB0aGUgcm9vdCBkaXJlY3Rv
cnkgaW5vZGUgc28gd2UgY2FuIGRvIHBhdGggbG9va3Vwcy4gKi8KLQl2b2wtPnJvb3RfaW5vID0g
bnRmc19pZ2V0KHNiLCBGSUxFX3Jvb3QpOwotCWlmIChJU19FUlIodm9sLT5yb290X2lubykgfHwg
aXNfYmFkX2lub2RlKHZvbC0+cm9vdF9pbm8pKSB7Ci0JCWlmICghSVNfRVJSKHZvbC0+cm9vdF9p
bm8pKQotCQkJaXB1dCh2b2wtPnJvb3RfaW5vKTsKLQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0
byBsb2FkIHJvb3QgZGlyZWN0b3J5LiIpOwotCQlnb3RvIGlwdXRfbG9nZmlsZV9lcnJfb3V0Owot
CX0KLSNpZmRlZiBOVEZTX1JXCi0JLyoKLQkgKiBDaGVjayBpZiBXaW5kb3dzIGlzIHN1c3BlbmRl
ZCB0byBkaXNrIG9uIHRoZSB0YXJnZXQgdm9sdW1lLiAgSWYgaXQKLQkgKiBpcyBoaWJlcm5hdGVk
LCB3ZSBtdXN0IG5vdCB3cml0ZSAqYW55dGhpbmcqIHRvIHRoZSBkaXNrIHNvIHNldAotCSAqIE5W
b2xFcnJvcnMoKSB3aXRob3V0IHNldHRpbmcgdGhlIGRpcnR5IHZvbHVtZSBmbGFnIGFuZCBtb3Vu
dAotCSAqIHJlYWQtb25seS4gIFRoaXMgd2lsbCBwcmV2ZW50IHJlYWQtd3JpdGUgcmVtb3VudGlu
ZyBhbmQgaXQgd2lsbCBhbHNvCi0JICogcHJldmVudCBhbGwgd3JpdGVzLgotCSAqLwotCWVyciA9
IGNoZWNrX3dpbmRvd3NfaGliZXJuYXRpb25fc3RhdHVzKHZvbCk7Ci0JaWYgKHVubGlrZWx5KGVy
cikpIHsKLQkJc3RhdGljIGNvbnN0IGNoYXIgKmVzMWEgPSAiRmFpbGVkIHRvIGRldGVybWluZSBp
ZiBXaW5kb3dzIGlzICIKLQkJCQkiaGliZXJuYXRlZCI7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICpl
czFiID0gIldpbmRvd3MgaXMgaGliZXJuYXRlZCI7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczIg
PSAiLiAgUnVuIGNoa2Rzay4iOwotCQljb25zdCBjaGFyICplczE7Ci0KLQkJZXMxID0gZXJyIDwg
MCA/IGVzMWEgOiBlczFiOwotCQkvKiBJZiBhIHJlYWQtd3JpdGUgbW91bnQsIGNvbnZlcnQgaXQg
dG8gYSByZWFkLW9ubHkgbW91bnQuICovCi0JCWlmICghc2JfcmRvbmx5KHNiKSkgewotCQkJaWYg
KCEodm9sLT5vbl9lcnJvcnMgJiAoT05fRVJST1JTX1JFTU9VTlRfUk8gfAotCQkJCQlPTl9FUlJP
UlNfQ09OVElOVUUpKSkgewotCQkJCW50ZnNfZXJyb3Ioc2IsICIlcyBhbmQgbmVpdGhlciBvbl9l
cnJvcnM9IgotCQkJCQkJImNvbnRpbnVlIG5vciBvbl9lcnJvcnM9IgotCQkJCQkJInJlbW91bnQt
cm8gd2FzIHNwZWNpZmllZCVzIiwKLQkJCQkJCWVzMSwgZXMyKTsKLQkJCQlnb3RvIGlwdXRfcm9v
dF9lcnJfb3V0OwotCQkJfQotCQkJc2ItPnNfZmxhZ3MgfD0gU0JfUkRPTkxZOwotCQkJbnRmc19l
cnJvcihzYiwgIiVzLiAgTW91bnRpbmcgcmVhZC1vbmx5JXMiLCBlczEsIGVzMik7Ci0JCX0gZWxz
ZQotCQkJbnRmc193YXJuaW5nKHNiLCAiJXMuICBXaWxsIG5vdCBiZSBhYmxlIHRvIHJlbW91bnQg
IgotCQkJCQkicmVhZC13cml0ZSVzIiwgZXMxLCBlczIpOwotCQkvKiBUaGlzIHdpbGwgcHJldmVu
dCBhIHJlYWQtd3JpdGUgcmVtb3VudC4gKi8KLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCX0KLQkv
KiBJZiAoc3RpbGwpIGEgcmVhZC13cml0ZSBtb3VudCwgbWFyayB0aGUgdm9sdW1lIGRpcnR5LiAq
LwotCWlmICghc2JfcmRvbmx5KHNiKSAmJiBudGZzX3NldF92b2x1bWVfZmxhZ3Modm9sLCBWT0xV
TUVfSVNfRElSVFkpKSB7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczEgPSAiRmFpbGVkIHRvIHNl
dCBkaXJ0eSBiaXQgaW4gdm9sdW1lICIKLQkJCQkiaW5mb3JtYXRpb24gZmxhZ3MiOwotCQlzdGF0
aWMgY29uc3QgY2hhciAqZXMyID0gIi4gIFJ1biBjaGtkc2suIjsKLQotCQkvKiBDb252ZXJ0IHRv
IGEgcmVhZC1vbmx5IG1vdW50LiAqLwotCQlpZiAoISh2b2wtPm9uX2Vycm9ycyAmIChPTl9FUlJP
UlNfUkVNT1VOVF9STyB8Ci0JCQkJT05fRVJST1JTX0NPTlRJTlVFKSkpIHsKLQkJCW50ZnNfZXJy
b3Ioc2IsICIlcyBhbmQgbmVpdGhlciBvbl9lcnJvcnM9Y29udGludWUgbm9yICIKLQkJCQkJIm9u
X2Vycm9ycz1yZW1vdW50LXJvIHdhcyBzcGVjaWZpZWQlcyIsCi0JCQkJCWVzMSwgZXMyKTsKLQkJ
CWdvdG8gaXB1dF9yb290X2Vycl9vdXQ7Ci0JCX0KLQkJbnRmc19lcnJvcihzYiwgIiVzLiAgTW91
bnRpbmcgcmVhZC1vbmx5JXMiLCBlczEsIGVzMik7Ci0JCXNiLT5zX2ZsYWdzIHw9IFNCX1JET05M
WTsKLQkJLyoKLQkJICogRG8gbm90IHNldCBOVm9sRXJyb3JzKCkgYmVjYXVzZSBudGZzX3JlbW91
bnQoKSBtaWdodCBtYW5hZ2UKLQkJICogdG8gc2V0IHRoZSBkaXJ0eSBmbGFnIGluIHdoaWNoIGNh
c2UgYWxsIHdvdWxkIGJlIHdlbGwuCi0JCSAqLwotCX0KLSNpZiAwCi0JLy8gVE9ETzogRW5hYmxl
IHRoaXMgY29kZSBvbmNlIHdlIHN0YXJ0IG1vZGlmeWluZyBhbnl0aGluZyB0aGF0IGlzCi0JLy8J
IGRpZmZlcmVudCBiZXR3ZWVuIE5URlMgMS4yIGFuZCAzLnguLi4KLQkvKgotCSAqIElmIChzdGls
bCkgYSByZWFkLXdyaXRlIG1vdW50LCBzZXQgdGhlIE5UNCBjb21wYXRpYmlsaXR5IGZsYWcgb24K
LQkgKiBuZXdlciBOVEZTIHZlcnNpb24gdm9sdW1lcy4KLQkgKi8KLQlpZiAoIShzYi0+c19mbGFn
cyAmIFNCX1JET05MWSkgJiYgKHZvbC0+bWFqb3JfdmVyID4gMSkgJiYKLQkJCW50ZnNfc2V0X3Zv
bHVtZV9mbGFncyh2b2wsIFZPTFVNRV9NT1VOVEVEX09OX05UNCkpIHsKLQkJc3RhdGljIGNvbnN0
IGNoYXIgKmVzMSA9ICJGYWlsZWQgdG8gc2V0IE5UNCBjb21wYXRpYmlsaXR5IGZsYWciOwotCQlz
dGF0aWMgY29uc3QgY2hhciAqZXMyID0gIi4gIFJ1biBjaGtkc2suIjsKLQotCQkvKiBDb252ZXJ0
IHRvIGEgcmVhZC1vbmx5IG1vdW50LiAqLwotCQlpZiAoISh2b2wtPm9uX2Vycm9ycyAmIChPTl9F
UlJPUlNfUkVNT1VOVF9STyB8Ci0JCQkJT05fRVJST1JTX0NPTlRJTlVFKSkpIHsKLQkJCW50ZnNf
ZXJyb3Ioc2IsICIlcyBhbmQgbmVpdGhlciBvbl9lcnJvcnM9Y29udGludWUgbm9yICIKLQkJCQkJ
Im9uX2Vycm9ycz1yZW1vdW50LXJvIHdhcyBzcGVjaWZpZWQlcyIsCi0JCQkJCWVzMSwgZXMyKTsK
LQkJCWdvdG8gaXB1dF9yb290X2Vycl9vdXQ7Ci0JCX0KLQkJbnRmc19lcnJvcihzYiwgIiVzLiAg
TW91bnRpbmcgcmVhZC1vbmx5JXMiLCBlczEsIGVzMik7Ci0JCXNiLT5zX2ZsYWdzIHw9IFNCX1JE
T05MWTsKLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCX0KLSNlbmRpZgotCS8qIElmIChzdGlsbCkg
YSByZWFkLXdyaXRlIG1vdW50LCBlbXB0eSB0aGUgbG9nZmlsZS4gKi8KLQlpZiAoIXNiX3Jkb25s
eShzYikgJiYgIW50ZnNfZW1wdHlfbG9nZmlsZSh2b2wtPmxvZ2ZpbGVfaW5vKSkgewotCQlzdGF0
aWMgY29uc3QgY2hhciAqZXMxID0gIkZhaWxlZCB0byBlbXB0eSAkTG9nRmlsZSI7Ci0JCXN0YXRp
YyBjb25zdCBjaGFyICplczIgPSAiLiAgTW91bnQgaW4gV2luZG93cy4iOwotCi0JCS8qIENvbnZl
cnQgdG8gYSByZWFkLW9ubHkgbW91bnQuICovCi0JCWlmICghKHZvbC0+b25fZXJyb3JzICYgKE9O
X0VSUk9SU19SRU1PVU5UX1JPIHwKLQkJCQlPTl9FUlJPUlNfQ09OVElOVUUpKSkgewotCQkJbnRm
c19lcnJvcihzYiwgIiVzIGFuZCBuZWl0aGVyIG9uX2Vycm9ycz1jb250aW51ZSBub3IgIgotCQkJ
CQkib25fZXJyb3JzPXJlbW91bnQtcm8gd2FzIHNwZWNpZmllZCVzIiwKLQkJCQkJZXMxLCBlczIp
OwotCQkJZ290byBpcHV0X3Jvb3RfZXJyX291dDsKLQkJfQotCQludGZzX2Vycm9yKHNiLCAiJXMu
ICBNb3VudGluZyByZWFkLW9ubHklcyIsIGVzMSwgZXMyKTsKLQkJc2ItPnNfZmxhZ3MgfD0gU0Jf
UkRPTkxZOwotCQlOVm9sU2V0RXJyb3JzKHZvbCk7Ci0JfQotI2VuZGlmIC8qIE5URlNfUlcgKi8K
LQkvKiBJZiBvbiBOVEZTIHZlcnNpb25zIGJlZm9yZSAzLjAsIHdlIGFyZSBkb25lLiAqLwotCWlm
ICh1bmxpa2VseSh2b2wtPm1ham9yX3ZlciA8IDMpKQotCQlyZXR1cm4gdHJ1ZTsKLQkvKiBOVEZT
IDMuMCsgc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24uICovCi0JLyogR2V0IHRoZSBzZWN1cml0eSBk
ZXNjcmlwdG9ycyBpbm9kZS4gKi8KLQl2b2wtPnNlY3VyZV9pbm8gPSBudGZzX2lnZXQoc2IsIEZJ
TEVfU2VjdXJlKTsKLQlpZiAoSVNfRVJSKHZvbC0+c2VjdXJlX2lubykgfHwgaXNfYmFkX2lub2Rl
KHZvbC0+c2VjdXJlX2lubykpIHsKLQkJaWYgKCFJU19FUlIodm9sLT5zZWN1cmVfaW5vKSkKLQkJ
CWlwdXQodm9sLT5zZWN1cmVfaW5vKTsKLQkJbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0byBsb2Fk
ICRTZWN1cmUuIik7Ci0JCWdvdG8gaXB1dF9yb290X2Vycl9vdXQ7Ci0JfQotCS8vIFRPRE86IElu
aXRpYWxpemUgc2VjdXJpdHkuCi0JLyogR2V0IHRoZSBleHRlbmRlZCBzeXN0ZW0gZmlsZXMnIGRp
cmVjdG9yeSBpbm9kZS4gKi8KLQl2b2wtPmV4dGVuZF9pbm8gPSBudGZzX2lnZXQoc2IsIEZJTEVf
RXh0ZW5kKTsKLQlpZiAoSVNfRVJSKHZvbC0+ZXh0ZW5kX2lubykgfHwgaXNfYmFkX2lub2RlKHZv
bC0+ZXh0ZW5kX2lubykgfHwKLQkgICAgIVNfSVNESVIodm9sLT5leHRlbmRfaW5vLT5pX21vZGUp
KSB7Ci0JCWlmICghSVNfRVJSKHZvbC0+ZXh0ZW5kX2lubykpCi0JCQlpcHV0KHZvbC0+ZXh0ZW5k
X2lubyk7Ci0JCW50ZnNfZXJyb3Ioc2IsICJGYWlsZWQgdG8gbG9hZCAkRXh0ZW5kLiIpOwotCQln
b3RvIGlwdXRfc2VjX2Vycl9vdXQ7Ci0JfQotI2lmZGVmIE5URlNfUlcKLQkvKiBGaW5kIHRoZSBx
dW90YSBmaWxlLCBsb2FkIGl0IGlmIHByZXNlbnQsIGFuZCBzZXQgaXQgdXAuICovCi0JaWYgKCFs
b2FkX2FuZF9pbml0X3F1b3RhKHZvbCkpIHsKLQkJc3RhdGljIGNvbnN0IGNoYXIgKmVzMSA9ICJG
YWlsZWQgdG8gbG9hZCAkUXVvdGEiOwotCQlzdGF0aWMgY29uc3QgY2hhciAqZXMyID0gIi4gIFJ1
biBjaGtkc2suIjsKLQotCQkvKiBJZiBhIHJlYWQtd3JpdGUgbW91bnQsIGNvbnZlcnQgaXQgdG8g
YSByZWFkLW9ubHkgbW91bnQuICovCi0JCWlmICghc2JfcmRvbmx5KHNiKSkgewotCQkJaWYgKCEo
dm9sLT5vbl9lcnJvcnMgJiAoT05fRVJST1JTX1JFTU9VTlRfUk8gfAotCQkJCQlPTl9FUlJPUlNf
Q09OVElOVUUpKSkgewotCQkJCW50ZnNfZXJyb3Ioc2IsICIlcyBhbmQgbmVpdGhlciBvbl9lcnJv
cnM9IgotCQkJCQkJImNvbnRpbnVlIG5vciBvbl9lcnJvcnM9IgotCQkJCQkJInJlbW91bnQtcm8g
d2FzIHNwZWNpZmllZCVzIiwKLQkJCQkJCWVzMSwgZXMyKTsKLQkJCQlnb3RvIGlwdXRfcXVvdGFf
ZXJyX291dDsKLQkJCX0KLQkJCXNiLT5zX2ZsYWdzIHw9IFNCX1JET05MWTsKLQkJCW50ZnNfZXJy
b3Ioc2IsICIlcy4gIE1vdW50aW5nIHJlYWQtb25seSVzIiwgZXMxLCBlczIpOwotCQl9IGVsc2UK
LQkJCW50ZnNfd2FybmluZyhzYiwgIiVzLiAgV2lsbCBub3QgYmUgYWJsZSB0byByZW1vdW50ICIK
LQkJCQkJInJlYWQtd3JpdGUlcyIsIGVzMSwgZXMyKTsKLQkJLyogVGhpcyB3aWxsIHByZXZlbnQg
YSByZWFkLXdyaXRlIHJlbW91bnQuICovCi0JCU5Wb2xTZXRFcnJvcnModm9sKTsKLQl9Ci0JLyog
SWYgKHN0aWxsKSBhIHJlYWQtd3JpdGUgbW91bnQsIG1hcmsgdGhlIHF1b3RhcyBvdXQgb2YgZGF0
ZS4gKi8KLQlpZiAoIXNiX3Jkb25seShzYikgJiYgIW50ZnNfbWFya19xdW90YXNfb3V0X29mX2Rh
dGUodm9sKSkgewotCQlzdGF0aWMgY29uc3QgY2hhciAqZXMxID0gIkZhaWxlZCB0byBtYXJrIHF1
b3RhcyBvdXQgb2YgZGF0ZSI7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczIgPSAiLiAgUnVuIGNo
a2Rzay4iOwotCi0JCS8qIENvbnZlcnQgdG8gYSByZWFkLW9ubHkgbW91bnQuICovCi0JCWlmICgh
KHZvbC0+b25fZXJyb3JzICYgKE9OX0VSUk9SU19SRU1PVU5UX1JPIHwKLQkJCQlPTl9FUlJPUlNf
Q09OVElOVUUpKSkgewotCQkJbnRmc19lcnJvcihzYiwgIiVzIGFuZCBuZWl0aGVyIG9uX2Vycm9y
cz1jb250aW51ZSBub3IgIgotCQkJCQkib25fZXJyb3JzPXJlbW91bnQtcm8gd2FzIHNwZWNpZmll
ZCVzIiwKLQkJCQkJZXMxLCBlczIpOwotCQkJZ290byBpcHV0X3F1b3RhX2Vycl9vdXQ7Ci0JCX0K
LQkJbnRmc19lcnJvcihzYiwgIiVzLiAgTW91bnRpbmcgcmVhZC1vbmx5JXMiLCBlczEsIGVzMik7
Ci0JCXNiLT5zX2ZsYWdzIHw9IFNCX1JET05MWTsKLQkJTlZvbFNldEVycm9ycyh2b2wpOwotCX0K
LQkvKgotCSAqIEZpbmQgdGhlIHRyYW5zYWN0aW9uIGxvZyBmaWxlICgkVXNuSnJubCksIGxvYWQg
aXQgaWYgcHJlc2VudCwgY2hlY2sKLQkgKiBpdCwgYW5kIHNldCBpdCB1cC4KLQkgKi8KLQlpZiAo
IWxvYWRfYW5kX2luaXRfdXNuanJubCh2b2wpKSB7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczEg
PSAiRmFpbGVkIHRvIGxvYWQgJFVzbkpybmwiOwotCQlzdGF0aWMgY29uc3QgY2hhciAqZXMyID0g
Ii4gIFJ1biBjaGtkc2suIjsKLQotCQkvKiBJZiBhIHJlYWQtd3JpdGUgbW91bnQsIGNvbnZlcnQg
aXQgdG8gYSByZWFkLW9ubHkgbW91bnQuICovCi0JCWlmICghc2JfcmRvbmx5KHNiKSkgewotCQkJ
aWYgKCEodm9sLT5vbl9lcnJvcnMgJiAoT05fRVJST1JTX1JFTU9VTlRfUk8gfAotCQkJCQlPTl9F
UlJPUlNfQ09OVElOVUUpKSkgewotCQkJCW50ZnNfZXJyb3Ioc2IsICIlcyBhbmQgbmVpdGhlciBv
bl9lcnJvcnM9IgotCQkJCQkJImNvbnRpbnVlIG5vciBvbl9lcnJvcnM9IgotCQkJCQkJInJlbW91
bnQtcm8gd2FzIHNwZWNpZmllZCVzIiwKLQkJCQkJCWVzMSwgZXMyKTsKLQkJCQlnb3RvIGlwdXRf
dXNuanJubF9lcnJfb3V0OwotCQkJfQotCQkJc2ItPnNfZmxhZ3MgfD0gU0JfUkRPTkxZOwotCQkJ
bnRmc19lcnJvcihzYiwgIiVzLiAgTW91bnRpbmcgcmVhZC1vbmx5JXMiLCBlczEsIGVzMik7Ci0J
CX0gZWxzZQotCQkJbnRmc193YXJuaW5nKHNiLCAiJXMuICBXaWxsIG5vdCBiZSBhYmxlIHRvIHJl
bW91bnQgIgotCQkJCQkicmVhZC13cml0ZSVzIiwgZXMxLCBlczIpOwotCQkvKiBUaGlzIHdpbGwg
cHJldmVudCBhIHJlYWQtd3JpdGUgcmVtb3VudC4gKi8KLQkJTlZvbFNldEVycm9ycyh2b2wpOwot
CX0KLQkvKiBJZiAoc3RpbGwpIGEgcmVhZC13cml0ZSBtb3VudCwgc3RhbXAgdGhlIHRyYW5zYWN0
aW9uIGxvZy4gKi8KLQlpZiAoIXNiX3Jkb25seShzYikgJiYgIW50ZnNfc3RhbXBfdXNuanJubCh2
b2wpKSB7Ci0JCXN0YXRpYyBjb25zdCBjaGFyICplczEgPSAiRmFpbGVkIHRvIHN0YW1wIHRyYW5z
YWN0aW9uIGxvZyAiCi0JCQkJIigkVXNuSnJubCkiOwotCQlzdGF0aWMgY29uc3QgY2hhciAqZXMy
ID0gIi4gIFJ1biBjaGtkc2suIjsKLQotCQkvKiBDb252ZXJ0IHRvIGEgcmVhZC1vbmx5IG1vdW50
LiAqLwotCQlpZiAoISh2b2wtPm9uX2Vycm9ycyAmIChPTl9FUlJPUlNfUkVNT1VOVF9STyB8Ci0J
CQkJT05fRVJST1JTX0NPTlRJTlVFKSkpIHsKLQkJCW50ZnNfZXJyb3Ioc2IsICIlcyBhbmQgbmVp
dGhlciBvbl9lcnJvcnM9Y29udGludWUgbm9yICIKLQkJCQkJIm9uX2Vycm9ycz1yZW1vdW50LXJv
IHdhcyBzcGVjaWZpZWQlcyIsCi0JCQkJCWVzMSwgZXMyKTsKLQkJCWdvdG8gaXB1dF91c25qcm5s
X2Vycl9vdXQ7Ci0JCX0KLQkJbnRmc19lcnJvcihzYiwgIiVzLiAgTW91bnRpbmcgcmVhZC1vbmx5
JXMiLCBlczEsIGVzMik7Ci0JCXNiLT5zX2ZsYWdzIHw9IFNCX1JET05MWTsKLQkJTlZvbFNldEVy
cm9ycyh2b2wpOwotCX0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0JcmV0dXJuIHRydWU7Ci0jaWZk
ZWYgTlRGU19SVwotaXB1dF91c25qcm5sX2Vycl9vdXQ6Ci0JaXB1dCh2b2wtPnVzbmpybmxfal9p
bm8pOwotCWlwdXQodm9sLT51c25qcm5sX21heF9pbm8pOwotCWlwdXQodm9sLT51c25qcm5sX2lu
byk7Ci1pcHV0X3F1b3RhX2Vycl9vdXQ6Ci0JaXB1dCh2b2wtPnF1b3RhX3FfaW5vKTsKLQlpcHV0
KHZvbC0+cXVvdGFfaW5vKTsKLQlpcHV0KHZvbC0+ZXh0ZW5kX2lubyk7Ci0jZW5kaWYgLyogTlRG
U19SVyAqLwotaXB1dF9zZWNfZXJyX291dDoKLQlpcHV0KHZvbC0+c2VjdXJlX2lubyk7Ci1pcHV0
X3Jvb3RfZXJyX291dDoKLQlpcHV0KHZvbC0+cm9vdF9pbm8pOwotaXB1dF9sb2dmaWxlX2Vycl9v
dXQ6Ci0jaWZkZWYgTlRGU19SVwotCWlwdXQodm9sLT5sb2dmaWxlX2lubyk7Ci1pcHV0X3ZvbF9l
cnJfb3V0OgotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQlpcHV0KHZvbC0+dm9sX2lubyk7Ci1pcHV0
X2xjbmJtcF9lcnJfb3V0OgotCWlwdXQodm9sLT5sY25ibXBfaW5vKTsKLWlwdXRfYXR0cmRlZl9l
cnJfb3V0OgotCXZvbC0+YXR0cmRlZl9zaXplID0gMDsKLQlpZiAodm9sLT5hdHRyZGVmKSB7Ci0J
CW50ZnNfZnJlZSh2b2wtPmF0dHJkZWYpOwotCQl2b2wtPmF0dHJkZWYgPSBOVUxMOwotCX0KLSNp
ZmRlZiBOVEZTX1JXCi1pcHV0X3VwY2FzZV9lcnJfb3V0OgotI2VuZGlmIC8qIE5URlNfUlcgKi8K
LQl2b2wtPnVwY2FzZV9sZW4gPSAwOwotCW11dGV4X2xvY2soJm50ZnNfbG9jayk7Ci0JaWYgKHZv
bC0+dXBjYXNlID09IGRlZmF1bHRfdXBjYXNlKSB7Ci0JCW50ZnNfbnJfdXBjYXNlX3VzZXJzLS07
Ci0JCXZvbC0+dXBjYXNlID0gTlVMTDsKLQl9Ci0JbXV0ZXhfdW5sb2NrKCZudGZzX2xvY2spOwot
CWlmICh2b2wtPnVwY2FzZSkgewotCQludGZzX2ZyZWUodm9sLT51cGNhc2UpOwotCQl2b2wtPnVw
Y2FzZSA9IE5VTEw7Ci0JfQotaXB1dF9tZnRibXBfZXJyX291dDoKLQlpcHV0KHZvbC0+bWZ0Ym1w
X2lubyk7Ci1pcHV0X21pcnJfZXJyX291dDoKLSNpZmRlZiBOVEZTX1JXCi0JaXB1dCh2b2wtPm1m
dG1pcnJfaW5vKTsKLSNlbmRpZiAvKiBOVEZTX1JXICovCi0JcmV0dXJuIGZhbHNlOwotfQotCi0v
KioKLSAqIG50ZnNfcHV0X3N1cGVyIC0gY2FsbGVkIGJ5IHRoZSB2ZnMgdG8gdW5tb3VudCBhIHZv
bHVtZQotICogQHNiOgkJdmZzIHN1cGVyYmxvY2sgb2Ygdm9sdW1lIHRvIHVubW91bnQKLSAqCi0g
KiBudGZzX3B1dF9zdXBlcigpIGlzIGNhbGxlZCBieSB0aGUgVkZTIChmcm9tIGZzL3N1cGVyLmM6
OmRvX3Vtb3VudCgpKSB3aGVuCi0gKiB0aGUgdm9sdW1lIGlzIGJlaW5nIHVubW91bnRlZCAodW1v
dW50IHN5c3RlbSBjYWxsIGhhcyBiZWVuIGludm9rZWQpIGFuZCBpdAotICogcmVsZWFzZXMgYWxs
IGlub2RlcyBhbmQgbWVtb3J5IGJlbG9uZ2luZyB0byB0aGUgTlRGUyBzcGVjaWZpYyBwYXJ0IG9m
IHRoZQotICogc3VwZXIgYmxvY2suCi0gKi8KLXN0YXRpYyB2b2lkIG50ZnNfcHV0X3N1cGVyKHN0
cnVjdCBzdXBlcl9ibG9jayAqc2IpCi17Ci0JbnRmc192b2x1bWUgKnZvbCA9IE5URlNfU0Ioc2Ip
OwotCi0JbnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0KLSNpZmRlZiBOVEZTX1JXCi0JLyoKLQkg
KiBDb21taXQgYWxsIGlub2RlcyB3aGlsZSB0aGV5IGFyZSBzdGlsbCBvcGVuIGluIGNhc2Ugc29t
ZSBvZiB0aGVtCi0JICogY2F1c2Ugb3RoZXJzIHRvIGJlIGRpcnRpZWQuCi0JICovCi0JbnRmc19j
b21taXRfaW5vZGUodm9sLT52b2xfaW5vKTsKLQotCS8qIE5URlMgMy4wKyBzcGVjaWZpYy4gKi8K
LQlpZiAodm9sLT5tYWpvcl92ZXIgPj0gMykgewotCQlpZiAodm9sLT51c25qcm5sX2pfaW5vKQot
CQkJbnRmc19jb21taXRfaW5vZGUodm9sLT51c25qcm5sX2pfaW5vKTsKLQkJaWYgKHZvbC0+dXNu
anJubF9tYXhfaW5vKQotCQkJbnRmc19jb21taXRfaW5vZGUodm9sLT51c25qcm5sX21heF9pbm8p
OwotCQlpZiAodm9sLT51c25qcm5sX2lubykKLQkJCW50ZnNfY29tbWl0X2lub2RlKHZvbC0+dXNu
anJubF9pbm8pOwotCQlpZiAodm9sLT5xdW90YV9xX2lubykKLQkJCW50ZnNfY29tbWl0X2lub2Rl
KHZvbC0+cXVvdGFfcV9pbm8pOwotCQlpZiAodm9sLT5xdW90YV9pbm8pCi0JCQludGZzX2NvbW1p
dF9pbm9kZSh2b2wtPnF1b3RhX2lubyk7Ci0JCWlmICh2b2wtPmV4dGVuZF9pbm8pCi0JCQludGZz
X2NvbW1pdF9pbm9kZSh2b2wtPmV4dGVuZF9pbm8pOwotCQlpZiAodm9sLT5zZWN1cmVfaW5vKQot
CQkJbnRmc19jb21taXRfaW5vZGUodm9sLT5zZWN1cmVfaW5vKTsKLQl9Ci0KLQludGZzX2NvbW1p
dF9pbm9kZSh2b2wtPnJvb3RfaW5vKTsKLQotCWRvd25fd3JpdGUoJnZvbC0+bGNuYm1wX2xvY2sp
OwotCW50ZnNfY29tbWl0X2lub2RlKHZvbC0+bGNuYm1wX2lubyk7Ci0JdXBfd3JpdGUoJnZvbC0+
bGNuYm1wX2xvY2spOwotCi0JZG93bl93cml0ZSgmdm9sLT5tZnRibXBfbG9jayk7Ci0JbnRmc19j
b21taXRfaW5vZGUodm9sLT5tZnRibXBfaW5vKTsKLQl1cF93cml0ZSgmdm9sLT5tZnRibXBfbG9j
ayk7Ci0KLQlpZiAodm9sLT5sb2dmaWxlX2lubykKLQkJbnRmc19jb21taXRfaW5vZGUodm9sLT5s
b2dmaWxlX2lubyk7Ci0KLQlpZiAodm9sLT5tZnRtaXJyX2lubykKLQkJbnRmc19jb21taXRfaW5v
ZGUodm9sLT5tZnRtaXJyX2lubyk7Ci0JbnRmc19jb21taXRfaW5vZGUodm9sLT5tZnRfaW5vKTsK
LQotCS8qCi0JICogSWYgYSByZWFkLXdyaXRlIG1vdW50IGFuZCBubyB2b2x1bWUgZXJyb3JzIGhh
dmUgb2NjdXJyZWQsIG1hcmsgdGhlCi0JICogdm9sdW1lIGNsZWFuLiAgQWxzbywgcmUtY29tbWl0
IGFsbCBhZmZlY3RlZCBpbm9kZXMuCi0JICovCi0JaWYgKCFzYl9yZG9ubHkoc2IpKSB7Ci0JCWlm
ICghTlZvbEVycm9ycyh2b2wpKSB7Ci0JCQlpZiAobnRmc19jbGVhcl92b2x1bWVfZmxhZ3Modm9s
LCBWT0xVTUVfSVNfRElSVFkpKQotCQkJCW50ZnNfd2FybmluZyhzYiwgIkZhaWxlZCB0byBjbGVh
ciBkaXJ0eSBiaXQgIgotCQkJCQkJImluIHZvbHVtZSBpbmZvcm1hdGlvbiAiCi0JCQkJCQkiZmxh
Z3MuICBSdW4gY2hrZHNrLiIpOwotCQkJbnRmc19jb21taXRfaW5vZGUodm9sLT52b2xfaW5vKTsK
LQkJCW50ZnNfY29tbWl0X2lub2RlKHZvbC0+cm9vdF9pbm8pOwotCQkJaWYgKHZvbC0+bWZ0bWly
cl9pbm8pCi0JCQkJbnRmc19jb21taXRfaW5vZGUodm9sLT5tZnRtaXJyX2lubyk7Ci0JCQludGZz
X2NvbW1pdF9pbm9kZSh2b2wtPm1mdF9pbm8pOwotCQl9IGVsc2UgewotCQkJbnRmc193YXJuaW5n
KHNiLCAiVm9sdW1lIGhhcyBlcnJvcnMuICBMZWF2aW5nIHZvbHVtZSAiCi0JCQkJCSJtYXJrZWQg
ZGlydHkuICBSdW4gY2hrZHNrLiIpOwotCQl9Ci0JfQotI2VuZGlmIC8qIE5URlNfUlcgKi8KLQot
CWlwdXQodm9sLT52b2xfaW5vKTsKLQl2b2wtPnZvbF9pbm8gPSBOVUxMOwotCi0JLyogTlRGUyAz
LjArIHNwZWNpZmljIGNsZWFuIHVwLiAqLwotCWlmICh2b2wtPm1ham9yX3ZlciA+PSAzKSB7Ci0j
aWZkZWYgTlRGU19SVwotCQlpZiAodm9sLT51c25qcm5sX2pfaW5vKSB7Ci0JCQlpcHV0KHZvbC0+
dXNuanJubF9qX2lubyk7Ci0JCQl2b2wtPnVzbmpybmxfal9pbm8gPSBOVUxMOwotCQl9Ci0JCWlm
ICh2b2wtPnVzbmpybmxfbWF4X2lubykgewotCQkJaXB1dCh2b2wtPnVzbmpybmxfbWF4X2lubyk7
Ci0JCQl2b2wtPnVzbmpybmxfbWF4X2lubyA9IE5VTEw7Ci0JCX0KLQkJaWYgKHZvbC0+dXNuanJu
bF9pbm8pIHsKLQkJCWlwdXQodm9sLT51c25qcm5sX2lubyk7Ci0JCQl2b2wtPnVzbmpybmxfaW5v
ID0gTlVMTDsKLQkJfQotCQlpZiAodm9sLT5xdW90YV9xX2lubykgewotCQkJaXB1dCh2b2wtPnF1
b3RhX3FfaW5vKTsKLQkJCXZvbC0+cXVvdGFfcV9pbm8gPSBOVUxMOwotCQl9Ci0JCWlmICh2b2wt
PnF1b3RhX2lubykgewotCQkJaXB1dCh2b2wtPnF1b3RhX2lubyk7Ci0JCQl2b2wtPnF1b3RhX2lu
byA9IE5VTEw7Ci0JCX0KLSNlbmRpZiAvKiBOVEZTX1JXICovCi0JCWlmICh2b2wtPmV4dGVuZF9p
bm8pIHsKLQkJCWlwdXQodm9sLT5leHRlbmRfaW5vKTsKLQkJCXZvbC0+ZXh0ZW5kX2lubyA9IE5V
TEw7Ci0JCX0KLQkJaWYgKHZvbC0+c2VjdXJlX2lubykgewotCQkJaXB1dCh2b2wtPnNlY3VyZV9p
bm8pOwotCQkJdm9sLT5zZWN1cmVfaW5vID0gTlVMTDsKLQkJfQotCX0KLQotCWlwdXQodm9sLT5y
b290X2lubyk7Ci0Jdm9sLT5yb290X2lubyA9IE5VTEw7Ci0KLQlkb3duX3dyaXRlKCZ2b2wtPmxj
bmJtcF9sb2NrKTsKLQlpcHV0KHZvbC0+bGNuYm1wX2lubyk7Ci0Jdm9sLT5sY25ibXBfaW5vID0g
TlVMTDsKLQl1cF93cml0ZSgmdm9sLT5sY25ibXBfbG9jayk7Ci0KLQlkb3duX3dyaXRlKCZ2b2wt
Pm1mdGJtcF9sb2NrKTsKLQlpcHV0KHZvbC0+bWZ0Ym1wX2lubyk7Ci0Jdm9sLT5tZnRibXBfaW5v
ID0gTlVMTDsKLQl1cF93cml0ZSgmdm9sLT5tZnRibXBfbG9jayk7Ci0KLSNpZmRlZiBOVEZTX1JX
Ci0JaWYgKHZvbC0+bG9nZmlsZV9pbm8pIHsKLQkJaXB1dCh2b2wtPmxvZ2ZpbGVfaW5vKTsKLQkJ
dm9sLT5sb2dmaWxlX2lubyA9IE5VTEw7Ci0JfQotCWlmICh2b2wtPm1mdG1pcnJfaW5vKSB7Ci0J
CS8qIFJlLWNvbW1pdCB0aGUgbWZ0IG1pcnJvciBhbmQgbWZ0IGp1c3QgaW4gY2FzZS4gKi8KLQkJ
bnRmc19jb21taXRfaW5vZGUodm9sLT5tZnRtaXJyX2lubyk7Ci0JCW50ZnNfY29tbWl0X2lub2Rl
KHZvbC0+bWZ0X2lubyk7Ci0JCWlwdXQodm9sLT5tZnRtaXJyX2lubyk7Ci0JCXZvbC0+bWZ0bWly
cl9pbm8gPSBOVUxMOwotCX0KLQkvKgotCSAqIFdlIHNob3VsZCBoYXZlIG5vIGRpcnR5IGlub2Rl
cyBsZWZ0LCBkdWUgdG8KLQkgKiBtZnQuYzo6bnRmc19tZnRfd3JpdGVwYWdlKCkgY2xlYW5pbmcg
YWxsIHRoZSBkaXJ0eSBwYWdlcyBhcwotCSAqIHRoZSB1bmRlcmx5aW5nIG1mdCByZWNvcmRzIGFy
ZSB3cml0dGVuIG91dCBhbmQgY2xlYW5lZC4KLQkgKi8KLQludGZzX2NvbW1pdF9pbm9kZSh2b2wt
Pm1mdF9pbm8pOwotCXdyaXRlX2lub2RlX25vdyh2b2wtPm1mdF9pbm8sIDEpOwotI2VuZGlmIC8q
IE5URlNfUlcgKi8KLQotCWlwdXQodm9sLT5tZnRfaW5vKTsKLQl2b2wtPm1mdF9pbm8gPSBOVUxM
OwotCi0JLyogVGhyb3cgYXdheSB0aGUgdGFibGUgb2YgYXR0cmlidXRlIGRlZmluaXRpb25zLiAq
LwotCXZvbC0+YXR0cmRlZl9zaXplID0gMDsKLQlpZiAodm9sLT5hdHRyZGVmKSB7Ci0JCW50ZnNf
ZnJlZSh2b2wtPmF0dHJkZWYpOwotCQl2b2wtPmF0dHJkZWYgPSBOVUxMOwotCX0KLQl2b2wtPnVw
Y2FzZV9sZW4gPSAwOwotCS8qCi0JICogRGVzdHJveSB0aGUgZ2xvYmFsIGRlZmF1bHQgdXBjYXNl
IHRhYmxlIGlmIG5lY2Vzc2FyeS4gIEFsc28gZGVjcmVhc2UKLQkgKiB0aGUgbnVtYmVyIG9mIHVw
Y2FzZSB1c2VycyBpZiB3ZSBhcmUgYSB1c2VyLgotCSAqLwotCW11dGV4X2xvY2soJm50ZnNfbG9j
ayk7Ci0JaWYgKHZvbC0+dXBjYXNlID09IGRlZmF1bHRfdXBjYXNlKSB7Ci0JCW50ZnNfbnJfdXBj
YXNlX3VzZXJzLS07Ci0JCXZvbC0+dXBjYXNlID0gTlVMTDsKLQl9Ci0JaWYgKCFudGZzX25yX3Vw
Y2FzZV91c2VycyAmJiBkZWZhdWx0X3VwY2FzZSkgewotCQludGZzX2ZyZWUoZGVmYXVsdF91cGNh
c2UpOwotCQlkZWZhdWx0X3VwY2FzZSA9IE5VTEw7Ci0JfQotCWlmICh2b2wtPmNsdXN0ZXJfc2l6
ZSA8PSA0MDk2ICYmICEtLW50ZnNfbnJfY29tcHJlc3Npb25fdXNlcnMpCi0JCWZyZWVfY29tcHJl
c3Npb25fYnVmZmVycygpOwotCW11dGV4X3VubG9jaygmbnRmc19sb2NrKTsKLQlpZiAodm9sLT51
cGNhc2UpIHsKLQkJbnRmc19mcmVlKHZvbC0+dXBjYXNlKTsKLQkJdm9sLT51cGNhc2UgPSBOVUxM
OwotCX0KLQotCXVubG9hZF9ubHModm9sLT5ubHNfbWFwKTsKLQotCXNiLT5zX2ZzX2luZm8gPSBO
VUxMOwotCWtmcmVlKHZvbCk7Ci19Ci0KLS8qKgotICogZ2V0X25yX2ZyZWVfY2x1c3RlcnMgLSBy
ZXR1cm4gdGhlIG51bWJlciBvZiBmcmVlIGNsdXN0ZXJzIG9uIGEgdm9sdW1lCi0gKiBAdm9sOglu
dGZzIHZvbHVtZSBmb3Igd2hpY2ggdG8gb2J0YWluIGZyZWUgY2x1c3RlciBjb3VudAotICoKLSAq
IENhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIGZyZWUgY2x1c3RlcnMgb24gdGhlIG1vdW50ZWQgTlRG
UyB2b2x1bWUgQHZvbC4gV2UKLSAqIGFjdHVhbGx5IGNhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIGNs
dXN0ZXJzIGluIHVzZSBpbnN0ZWFkIGJlY2F1c2UgdGhpcwotICogYWxsb3dzIHVzIHRvIG5vdCBj
YXJlIGFib3V0IHBhcnRpYWwgcGFnZXMgYXMgdGhlc2Ugd2lsbCBiZSBqdXN0IHplcm8gZmlsbGVk
Ci0gKiBhbmQgaGVuY2Ugbm90IGJlIGNvdW50ZWQgYXMgYWxsb2NhdGVkIGNsdXN0ZXJzLgotICoK
LSAqIFRoZSBvbmx5IHBhcnRpY3VsYXJpdHkgaXMgdGhhdCBjbHVzdGVycyBiZXlvbmQgdGhlIGVu
ZCBvZiB0aGUgbG9naWNhbCBudGZzCi0gKiB2b2x1bWUgd2lsbCBiZSBtYXJrZWQgYXMgYWxsb2Nh
dGVkIHRvIHByZXZlbnQgZXJyb3JzIHdoaWNoIG1lYW5zIHdlIGhhdmUgdG8KLSAqIGRpc2NvdW50
IHRob3NlIGF0IHRoZSBlbmQuIFRoaXMgaXMgaW1wb3J0YW50IGFzIHRoZSBjbHVzdGVyIGJpdG1h
cCBhbHdheXMKLSAqIGhhcyBhIHNpemUgaW4gbXVsdGlwbGVzIG9mIDggYnl0ZXMsIGkuZS4gdXAg
dG8gNjMgY2x1c3RlcnMgY291bGQgYmUgb3V0c2lkZQotICogdGhlIGxvZ2ljYWwgdm9sdW1lIGFu
ZCBtYXJrZWQgaW4gdXNlIHdoZW4gdGhleSBhcmUgbm90IGFzIHRoZXkgZG8gbm90IGV4aXN0Lgot
ICoKLSAqIElmIGFueSBwYWdlcyBjYW5ub3QgYmUgcmVhZCB3ZSBhc3N1bWUgYWxsIGNsdXN0ZXJz
IGluIHRoZSBlcnJvcmluZyBwYWdlcyBhcmUKLSAqIGluIHVzZS4gVGhpcyBtZWFucyB3ZSByZXR1
cm4gYW4gdW5kZXJlc3RpbWF0ZSBvbiBlcnJvcnMgd2hpY2ggaXMgYmV0dGVyIHRoYW4KLSAqIGFu
IG92ZXJlc3RpbWF0ZS4KLSAqLwotc3RhdGljIHM2NCBnZXRfbnJfZnJlZV9jbHVzdGVycyhudGZz
X3ZvbHVtZSAqdm9sKQotewotCXM2NCBucl9mcmVlID0gdm9sLT5ucl9jbHVzdGVyczsKLQlzdHJ1
Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZyA9IHZvbC0+bGNuYm1wX2luby0+aV9tYXBwaW5nOwot
CXN0cnVjdCBwYWdlICpwYWdlOwotCXBnb2ZmX3QgaW5kZXgsIG1heF9pbmRleDsKLQotCW50ZnNf
ZGVidWcoIkVudGVyaW5nLiIpOwotCS8qIFNlcmlhbGl6ZSBhY2Nlc3NlcyB0byB0aGUgY2x1c3Rl
ciBiaXRtYXAuICovCi0JZG93bl9yZWFkKCZ2b2wtPmxjbmJtcF9sb2NrKTsKLQkvKgotCSAqIENv
bnZlcnQgdGhlIG51bWJlciBvZiBiaXRzIGludG8gYnl0ZXMgcm91bmRlZCB1cCwgdGhlbiBjb252
ZXJ0IGludG8KLQkgKiBtdWx0aXBsZXMgb2YgUEFHRV9TSVpFLCByb3VuZGluZyB1cCBzbyB0aGF0
IGlmIHdlIGhhdmUgb25lCi0JICogZnVsbCBhbmQgb25lIHBhcnRpYWwgcGFnZSBtYXhfaW5kZXgg
PSAyLgotCSAqLwotCW1heF9pbmRleCA9ICgoKHZvbC0+bnJfY2x1c3RlcnMgKyA3KSA+PiAzKSAr
IFBBR0VfU0laRSAtIDEpID4+Ci0JCQlQQUdFX1NISUZUOwotCS8qIFVzZSBtdWx0aXBsZXMgb2Yg
NCBieXRlcywgdGh1cyBtYXhfc2l6ZSBpcyBQQUdFX1NJWkUgLyA0LiAqLwotCW50ZnNfZGVidWco
IlJlYWRpbmcgJEJpdG1hcCwgbWF4X2luZGV4ID0gMHglbHgsIG1heF9zaXplID0gMHglbHguIiwK
LQkJCW1heF9pbmRleCwgUEFHRV9TSVpFIC8gNCk7Ci0JZm9yIChpbmRleCA9IDA7IGluZGV4IDwg
bWF4X2luZGV4OyBpbmRleCsrKSB7Ci0JCXVuc2lnbmVkIGxvbmcgKmthZGRyOwotCi0JCS8qCi0J
CSAqIFJlYWQgdGhlIHBhZ2UgZnJvbSBwYWdlIGNhY2hlLCBnZXR0aW5nIGl0IGZyb20gYmFja2lu
ZyBzdG9yZQotCQkgKiBpZiBuZWNlc3NhcnksIGFuZCBpbmNyZW1lbnQgdGhlIHVzZSBjb3VudC4K
LQkJICovCi0JCXBhZ2UgPSByZWFkX21hcHBpbmdfcGFnZShtYXBwaW5nLCBpbmRleCwgTlVMTCk7
Ci0JCS8qIElnbm9yZSBwYWdlcyB3aGljaCBlcnJvcmVkIHN5bmNocm9ub3VzbHkuICovCi0JCWlm
IChJU19FUlIocGFnZSkpIHsKLQkJCW50ZnNfZGVidWcoInJlYWRfbWFwcGluZ19wYWdlKCkgZXJy
b3IuIFNraXBwaW5nICIKLQkJCQkJInBhZ2UgKGluZGV4IDB4JWx4KS4iLCBpbmRleCk7Ci0JCQlu
cl9mcmVlIC09IFBBR0VfU0laRSAqIDg7Ci0JCQljb250aW51ZTsKLQkJfQotCQlrYWRkciA9IGtt
YXBfYXRvbWljKHBhZ2UpOwotCQkvKgotCQkgKiBTdWJ0cmFjdCB0aGUgbnVtYmVyIG9mIHNldCBi
aXRzLiBJZiB0aGlzCi0JCSAqIGlzIHRoZSBsYXN0IHBhZ2UgYW5kIGl0IGlzIHBhcnRpYWwgd2Ug
ZG9uJ3QgcmVhbGx5IGNhcmUgYXMKLQkJICogaXQganVzdCBtZWFucyB3ZSBkbyBhIGxpdHRsZSBl
eHRyYSB3b3JrIGJ1dCBpdCB3b24ndCBhZmZlY3QKLQkJICogdGhlIHJlc3VsdCBhcyBhbGwgb3V0
IG9mIHJhbmdlIGJ5dGVzIGFyZSBzZXQgdG8gemVybyBieQotCQkgKiBudGZzX3JlYWRwYWdlKCku
Ci0JCSAqLwotCQlucl9mcmVlIC09IGJpdG1hcF93ZWlnaHQoa2FkZHIsCi0JCQkJCVBBR0VfU0la
RSAqIEJJVFNfUEVSX0JZVEUpOwotCQlrdW5tYXBfYXRvbWljKGthZGRyKTsKLQkJcHV0X3BhZ2Uo
cGFnZSk7Ci0JfQotCW50ZnNfZGVidWcoIkZpbmlzaGVkIHJlYWRpbmcgJEJpdG1hcCwgbGFzdCBp
bmRleCA9IDB4JWx4LiIsIGluZGV4IC0gMSk7Ci0JLyoKLQkgKiBGaXh1cCBmb3IgZXZlbnR1YWwg
Yml0cyBvdXRzaWRlIGxvZ2ljYWwgbnRmcyB2b2x1bWUgKHNlZSBmdW5jdGlvbgotCSAqIGRlc2Ny
aXB0aW9uIGFib3ZlKS4KLQkgKi8KLQlpZiAodm9sLT5ucl9jbHVzdGVycyAmIDYzKQotCQlucl9m
cmVlICs9IDY0IC0gKHZvbC0+bnJfY2x1c3RlcnMgJiA2Myk7Ci0JdXBfcmVhZCgmdm9sLT5sY25i
bXBfbG9jayk7Ci0JLyogSWYgZXJyb3JzIG9jY3VycmVkIHdlIG1heSB3ZWxsIGhhdmUgZ29uZSBi
ZWxvdyB6ZXJvLCBmaXggdGhpcy4gKi8KLQlpZiAobnJfZnJlZSA8IDApCi0JCW5yX2ZyZWUgPSAw
OwotCW50ZnNfZGVidWcoIkV4aXRpbmcuIik7Ci0JcmV0dXJuIG5yX2ZyZWU7Ci19Ci0KLS8qKgot
ICogX19nZXRfbnJfZnJlZV9tZnRfcmVjb3JkcyAtIHJldHVybiB0aGUgbnVtYmVyIG9mIGZyZWUg
aW5vZGVzIG9uIGEgdm9sdW1lCi0gKiBAdm9sOgludGZzIHZvbHVtZSBmb3Igd2hpY2ggdG8gb2J0
YWluIGZyZWUgaW5vZGUgY291bnQKLSAqIEBucl9mcmVlOgludW1iZXIgb2YgbWZ0IHJlY29yZHMg
aW4gZmlsZXN5c3RlbQotICogQG1heF9pbmRleDoJbWF4aW11bSBudW1iZXIgb2YgcGFnZXMgY29u
dGFpbmluZyBzZXQgYml0cwotICoKLSAqIENhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIGZyZWUgbWZ0
IHJlY29yZHMgKGlub2Rlcykgb24gdGhlIG1vdW50ZWQgTlRGUwotICogdm9sdW1lIEB2b2wuIFdl
IGFjdHVhbGx5IGNhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIG1mdCByZWNvcmRzIGluIHVzZSBpbnN0
ZWFkCi0gKiBiZWNhdXNlIHRoaXMgYWxsb3dzIHVzIHRvIG5vdCBjYXJlIGFib3V0IHBhcnRpYWwg
cGFnZXMgYXMgdGhlc2Ugd2lsbCBiZSBqdXN0Ci0gKiB6ZXJvIGZpbGxlZCBhbmQgaGVuY2Ugbm90
IGJlIGNvdW50ZWQgYXMgYWxsb2NhdGVkIG1mdCByZWNvcmQuCi0gKgotICogSWYgYW55IHBhZ2Vz
IGNhbm5vdCBiZSByZWFkIHdlIGFzc3VtZSBhbGwgbWZ0IHJlY29yZHMgaW4gdGhlIGVycm9yaW5n
IHBhZ2VzCi0gKiBhcmUgaW4gdXNlLiBUaGlzIG1lYW5zIHdlIHJldHVybiBhbiB1bmRlcmVzdGlt
YXRlIG9uIGVycm9ycyB3aGljaCBpcyBiZXR0ZXIKLSAqIHRoYW4gYW4gb3ZlcmVzdGltYXRlLgot
ICoKLSAqIE5PVEU6IENhbGxlciBtdXN0IGhvbGQgbWZ0Ym1wX2xvY2sgcndfc2VtYXBob3JlIGZv
ciByZWFkaW5nIG9yIHdyaXRpbmcuCi0gKi8KLXN0YXRpYyB1bnNpZ25lZCBsb25nIF9fZ2V0X25y
X2ZyZWVfbWZ0X3JlY29yZHMobnRmc192b2x1bWUgKnZvbCwKLQkJczY0IG5yX2ZyZWUsIGNvbnN0
IHBnb2ZmX3QgbWF4X2luZGV4KQotewotCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nID0g
dm9sLT5tZnRibXBfaW5vLT5pX21hcHBpbmc7Ci0Jc3RydWN0IHBhZ2UgKnBhZ2U7Ci0JcGdvZmZf
dCBpbmRleDsKLQotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIpOwotCS8qIFVzZSBtdWx0aXBsZXMg
b2YgNCBieXRlcywgdGh1cyBtYXhfc2l6ZSBpcyBQQUdFX1NJWkUgLyA0LiAqLwotCW50ZnNfZGVi
dWcoIlJlYWRpbmcgJE1GVC8kQklUTUFQLCBtYXhfaW5kZXggPSAweCVseCwgbWF4X3NpemUgPSAi
Ci0JCQkiMHglbHguIiwgbWF4X2luZGV4LCBQQUdFX1NJWkUgLyA0KTsKLQlmb3IgKGluZGV4ID0g
MDsgaW5kZXggPCBtYXhfaW5kZXg7IGluZGV4KyspIHsKLQkJdW5zaWduZWQgbG9uZyAqa2FkZHI7
Ci0KLQkJLyoKLQkJICogUmVhZCB0aGUgcGFnZSBmcm9tIHBhZ2UgY2FjaGUsIGdldHRpbmcgaXQg
ZnJvbSBiYWNraW5nIHN0b3JlCi0JCSAqIGlmIG5lY2Vzc2FyeSwgYW5kIGluY3JlbWVudCB0aGUg
dXNlIGNvdW50LgotCQkgKi8KLQkJcGFnZSA9IHJlYWRfbWFwcGluZ19wYWdlKG1hcHBpbmcsIGlu
ZGV4LCBOVUxMKTsKLQkJLyogSWdub3JlIHBhZ2VzIHdoaWNoIGVycm9yZWQgc3luY2hyb25vdXNs
eS4gKi8KLQkJaWYgKElTX0VSUihwYWdlKSkgewotCQkJbnRmc19kZWJ1ZygicmVhZF9tYXBwaW5n
X3BhZ2UoKSBlcnJvci4gU2tpcHBpbmcgIgotCQkJCQkicGFnZSAoaW5kZXggMHglbHgpLiIsIGlu
ZGV4KTsKLQkJCW5yX2ZyZWUgLT0gUEFHRV9TSVpFICogODsKLQkJCWNvbnRpbnVlOwotCQl9Ci0J
CWthZGRyID0ga21hcF9hdG9taWMocGFnZSk7Ci0JCS8qCi0JCSAqIFN1YnRyYWN0IHRoZSBudW1i
ZXIgb2Ygc2V0IGJpdHMuIElmIHRoaXMKLQkJICogaXMgdGhlIGxhc3QgcGFnZSBhbmQgaXQgaXMg
cGFydGlhbCB3ZSBkb24ndCByZWFsbHkgY2FyZSBhcwotCQkgKiBpdCBqdXN0IG1lYW5zIHdlIGRv
IGEgbGl0dGxlIGV4dHJhIHdvcmsgYnV0IGl0IHdvbid0IGFmZmVjdAotCQkgKiB0aGUgcmVzdWx0
IGFzIGFsbCBvdXQgb2YgcmFuZ2UgYnl0ZXMgYXJlIHNldCB0byB6ZXJvIGJ5Ci0JCSAqIG50ZnNf
cmVhZHBhZ2UoKS4KLQkJICovCi0JCW5yX2ZyZWUgLT0gYml0bWFwX3dlaWdodChrYWRkciwKLQkJ
CQkJUEFHRV9TSVpFICogQklUU19QRVJfQllURSk7Ci0JCWt1bm1hcF9hdG9taWMoa2FkZHIpOwot
CQlwdXRfcGFnZShwYWdlKTsKLQl9Ci0JbnRmc19kZWJ1ZygiRmluaXNoZWQgcmVhZGluZyAkTUZU
LyRCSVRNQVAsIGxhc3QgaW5kZXggPSAweCVseC4iLAotCQkJaW5kZXggLSAxKTsKLQkvKiBJZiBl
cnJvcnMgb2NjdXJyZWQgd2UgbWF5IHdlbGwgaGF2ZSBnb25lIGJlbG93IHplcm8sIGZpeCB0aGlz
LiAqLwotCWlmIChucl9mcmVlIDwgMCkKLQkJbnJfZnJlZSA9IDA7Ci0JbnRmc19kZWJ1ZygiRXhp
dGluZy4iKTsKLQlyZXR1cm4gbnJfZnJlZTsKLX0KLQotLyoqCi0gKiBudGZzX3N0YXRmcyAtIHJl
dHVybiBpbmZvcm1hdGlvbiBhYm91dCBtb3VudGVkIE5URlMgdm9sdW1lCi0gKiBAZGVudHJ5Oglk
ZW50cnkgZnJvbSBtb3VudGVkIHZvbHVtZQotICogQHNmczoJc3RhdGZzIHN0cnVjdHVyZSBpbiB3
aGljaCB0byByZXR1cm4gdGhlIGluZm9ybWF0aW9uCi0gKgotICogUmV0dXJuIGluZm9ybWF0aW9u
IGFib3V0IHRoZSBtb3VudGVkIE5URlMgdm9sdW1lIEBkZW50cnkgaW4gdGhlIHN0YXRmcyBzdHJ1
Y3R1cmUKLSAqIHBvaW50ZWQgdG8gYnkgQHNmcyAodGhpcyBpcyBpbml0aWFsaXplZCB3aXRoIHpl
cm9zIGJlZm9yZSBudGZzX3N0YXRmcyBpcwotICogY2FsbGVkKS4gV2UgaW50ZXJwcmV0IHRoZSB2
YWx1ZXMgdG8gYmUgY29ycmVjdCBvZiB0aGUgbW9tZW50IGluIHRpbWUgYXQKLSAqIHdoaWNoIHdl
IGFyZSBjYWxsZWQuIE1vc3QgdmFsdWVzIGFyZSB2YXJpYWJsZSBvdGhlcndpc2UgYW5kIHRoaXMg
aXNuJ3QganVzdAotICogdGhlIGZyZWUgdmFsdWVzIGJ1dCB0aGUgdG90YWxzIGFzIHdlbGwuIEZv
ciBleGFtcGxlIHdlIGNhbiBpbmNyZWFzZSB0aGUKLSAqIHRvdGFsIG51bWJlciBvZiBmaWxlIG5v
ZGVzIGlmIHdlIHJ1biBvdXQgYW5kIHdlIGNhbiBrZWVwIGRvaW5nIHRoaXMgdW50aWwKLSAqIHRo
ZXJlIGlzIG5vIG1vcmUgc3BhY2Ugb24gdGhlIHZvbHVtZSBsZWZ0IGF0IGFsbC4KLSAqCi0gKiBD
YWxsZWQgZnJvbSB2ZnNfc3RhdGZzIHdoaWNoIGlzIHVzZWQgdG8gaGFuZGxlIHRoZSBzdGF0ZnMs
IGZzdGF0ZnMsIGFuZAotICogdXN0YXQgc3lzdGVtIGNhbGxzLgotICoKLSAqIFJldHVybiAwIG9u
IHN1Y2Nlc3Mgb3IgLWVycm5vIG9uIGVycm9yLgotICovCi1zdGF0aWMgaW50IG50ZnNfc3RhdGZz
KHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgc3RydWN0IGtzdGF0ZnMgKnNmcykKLXsKLQlzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnNiID0gZGVudHJ5LT5kX3NiOwotCXM2NCBzaXplOwotCW50ZnNfdm9sdW1l
ICp2b2wgPSBOVEZTX1NCKHNiKTsKLQludGZzX2lub2RlICptZnRfbmkgPSBOVEZTX0kodm9sLT5t
ZnRfaW5vKTsKLQlwZ29mZl90IG1heF9pbmRleDsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwotCi0J
bnRmc19kZWJ1ZygiRW50ZXJpbmcuIik7Ci0JLyogVHlwZSBvZiBmaWxlc3lzdGVtLiAqLwotCXNm
cy0+Zl90eXBlICAgPSBOVEZTX1NCX01BR0lDOwotCS8qIE9wdGltYWwgdHJhbnNmZXIgYmxvY2sg
c2l6ZS4gKi8KLQlzZnMtPmZfYnNpemUgID0gUEFHRV9TSVpFOwotCS8qCi0JICogVG90YWwgZGF0
YSBibG9ja3MgaW4gZmlsZXN5c3RlbSBpbiB1bml0cyBvZiBmX2JzaXplIGFuZCBzaW5jZQotCSAq
IGlub2RlcyBhcmUgYWxzbyBzdG9yZWQgaW4gZGF0YSBibG9jcyAoJE1GVCBpcyBhIGZpbGUpIHRo
aXMgaXMganVzdAotCSAqIHRoZSB0b3RhbCBjbHVzdGVycy4KLQkgKi8KLQlzZnMtPmZfYmxvY2tz
ID0gdm9sLT5ucl9jbHVzdGVycyA8PCB2b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID4+Ci0JCQkJUEFH
RV9TSElGVDsKLQkvKiBGcmVlIGRhdGEgYmxvY2tzIGluIGZpbGVzeXN0ZW0gaW4gdW5pdHMgb2Yg
Zl9ic2l6ZS4gKi8KLQlzaXplCSAgICAgID0gZ2V0X25yX2ZyZWVfY2x1c3RlcnModm9sKSA8PCB2
b2wtPmNsdXN0ZXJfc2l6ZV9iaXRzID4+Ci0JCQkJUEFHRV9TSElGVDsKLQlpZiAoc2l6ZSA8IDBM
TCkKLQkJc2l6ZSA9IDBMTDsKLQkvKiBGcmVlIGJsb2NrcyBhdmFpbCB0byBub24tc3VwZXJ1c2Vy
LCBzYW1lIGFzIGFib3ZlIG9uIE5URlMuICovCi0Jc2ZzLT5mX2JhdmFpbCA9IHNmcy0+Zl9iZnJl
ZSA9IHNpemU7Ci0JLyogU2VyaWFsaXplIGFjY2Vzc2VzIHRvIHRoZSBpbm9kZSBiaXRtYXAuICov
Ci0JZG93bl9yZWFkKCZ2b2wtPm1mdGJtcF9sb2NrKTsKLQlyZWFkX2xvY2tfaXJxc2F2ZSgmbWZ0
X25pLT5zaXplX2xvY2ssIGZsYWdzKTsKLQlzaXplID0gaV9zaXplX3JlYWQodm9sLT5tZnRfaW5v
KSA+PiB2b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzOwotCS8qCi0JICogQ29udmVydCB0aGUgbWF4
aW11bSBudW1iZXIgb2Ygc2V0IGJpdHMgaW50byBieXRlcyByb3VuZGVkIHVwLCB0aGVuCi0JICog
Y29udmVydCBpbnRvIG11bHRpcGxlcyBvZiBQQUdFX1NJWkUsIHJvdW5kaW5nIHVwIHNvIHRoYXQg
aWYgd2UKLQkgKiBoYXZlIG9uZSBmdWxsIGFuZCBvbmUgcGFydGlhbCBwYWdlIG1heF9pbmRleCA9
IDIuCi0JICovCi0JbWF4X2luZGV4ID0gKCgoKG1mdF9uaS0+aW5pdGlhbGl6ZWRfc2l6ZSA+PiB2
b2wtPm1mdF9yZWNvcmRfc2l6ZV9iaXRzKQotCQkJKyA3KSA+PiAzKSArIFBBR0VfU0laRSAtIDEp
ID4+IFBBR0VfU0hJRlQ7Ci0JcmVhZF91bmxvY2tfaXJxcmVzdG9yZSgmbWZ0X25pLT5zaXplX2xv
Y2ssIGZsYWdzKTsKLQkvKiBOdW1iZXIgb2YgaW5vZGVzIGluIGZpbGVzeXN0ZW0gKGF0IHRoaXMg
cG9pbnQgaW4gdGltZSkuICovCi0Jc2ZzLT5mX2ZpbGVzID0gc2l6ZTsKLQkvKiBGcmVlIGlub2Rl
cyBpbiBmcyAoYmFzZWQgb24gY3VycmVudCB0b3RhbCBjb3VudCkuICovCi0Jc2ZzLT5mX2ZmcmVl
ID0gX19nZXRfbnJfZnJlZV9tZnRfcmVjb3Jkcyh2b2wsIHNpemUsIG1heF9pbmRleCk7Ci0JdXBf
cmVhZCgmdm9sLT5tZnRibXBfbG9jayk7Ci0JLyoKLQkgKiBGaWxlIHN5c3RlbSBpZC4gVGhpcyBp
cyBleHRyZW1lbHkgKm5peCBmbGF2b3VyIGRlcGVuZGVudCBhbmQgZXZlbgotCSAqIHdpdGhpbiBM
aW51eCBpdHNlbGYgYWxsIGZzIGRvIHRoZWlyIG93biB0aGluZy4gSSBpbnRlcnByZXQgdGhpcyB0
bwotCSAqIG1lYW4gYSB1bmlxdWUgaWQgYXNzb2NpYXRlZCB3aXRoIHRoZSBtb3VudGVkIGZzIGFu
ZCBub3QgdGhlIGlkCi0JICogYXNzb2NpYXRlZCB3aXRoIHRoZSBmaWxlc3lzdGVtIGRyaXZlciwg
dGhlIGxhdHRlciBpcyBhbHJlYWR5IGdpdmVuCi0JICogYnkgdGhlIGZpbGVzeXN0ZW0gdHlwZSBp
biBzZnMtPmZfdHlwZS4gVGh1cyB3ZSB1c2UgdGhlIDY0LWJpdAotCSAqIHZvbHVtZSBzZXJpYWwg
bnVtYmVyIHNwbGl0dGluZyBpdCBpbnRvIHR3byAzMi1iaXQgcGFydHMuIFdlIGVudGVyCi0JICog
dGhlIGxlYXN0IHNpZ25pZmljYW50IDMyLWJpdHMgaW4gZl9mc2lkWzBdIGFuZCB0aGUgbW9zdCBz
aWduaWZpY2FudAotCSAqIDMyLWJpdHMgaW4gZl9mc2lkWzFdLgotCSAqLwotCXNmcy0+Zl9mc2lk
ID0gdTY0X3RvX2ZzaWQodm9sLT5zZXJpYWxfbm8pOwotCS8qIE1heGltdW0gbGVuZ3RoIG9mIGZp
bGVuYW1lcy4gKi8KLQlzZnMtPmZfbmFtZWxlbgkgICA9IE5URlNfTUFYX05BTUVfTEVOOwotCXJl
dHVybiAwOwotfQotCi0jaWZkZWYgTlRGU19SVwotc3RhdGljIGludCBudGZzX3dyaXRlX2lub2Rl
KHN0cnVjdCBpbm9kZSAqdmksIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqd2JjKQotewotCXJl
dHVybiBfX250ZnNfd3JpdGVfaW5vZGUodmksIHdiYy0+c3luY19tb2RlID09IFdCX1NZTkNfQUxM
KTsKLX0KLSNlbmRpZgotCi0vKgotICogVGhlIGNvbXBsZXRlIHN1cGVyIG9wZXJhdGlvbnMuCi0g
Ki8KLXN0YXRpYyBjb25zdCBzdHJ1Y3Qgc3VwZXJfb3BlcmF0aW9ucyBudGZzX3NvcHMgPSB7Ci0J
LmFsbG9jX2lub2RlCT0gbnRmc19hbGxvY19iaWdfaW5vZGUsCSAgLyogVkZTOiBBbGxvY2F0ZSBu
ZXcgaW5vZGUuICovCi0JLmZyZWVfaW5vZGUJPSBudGZzX2ZyZWVfYmlnX2lub2RlLCAvKiBWRlM6
IERlYWxsb2NhdGUgaW5vZGUuICovCi0jaWZkZWYgTlRGU19SVwotCS53cml0ZV9pbm9kZQk9IG50
ZnNfd3JpdGVfaW5vZGUsCS8qIFZGUzogV3JpdGUgZGlydHkgaW5vZGUgdG8KLQkJCQkJCSAgIGRp
c2suICovCi0jZW5kaWYgLyogTlRGU19SVyAqLwotCS5wdXRfc3VwZXIJPSBudGZzX3B1dF9zdXBl
ciwJLyogU3lzY2FsbDogdW1vdW50LiAqLwotCS5zdGF0ZnMJCT0gbnRmc19zdGF0ZnMsCQkvKiBT
eXNjYWxsOiBzdGF0ZnMgKi8KLQkucmVtb3VudF9mcwk9IG50ZnNfcmVtb3VudCwJCS8qIFN5c2Nh
bGw6IG1vdW50IC1vIHJlbW91bnQuICovCi0JLmV2aWN0X2lub2RlCT0gbnRmc19ldmljdF9iaWdf
aW5vZGUsCS8qIFZGUzogQ2FsbGVkIHdoZW4gYW4gaW5vZGUgaXMKLQkJCQkJCSAgIHJlbW92ZWQg
ZnJvbSBtZW1vcnkuICovCi0JLnNob3dfb3B0aW9ucwk9IG50ZnNfc2hvd19vcHRpb25zLAkvKiBT
aG93IG1vdW50IG9wdGlvbnMgaW4KLQkJCQkJCSAgIHByb2MuICovCi19OwotCi0vKioKLSAqIG50
ZnNfZmlsbF9zdXBlciAtIG1vdW50IGFuIG50ZnMgZmlsZXN5c3RlbQotICogQHNiOgkJc3VwZXIg
YmxvY2sgb2YgbnRmcyBmaWxlc3lzdGVtIHRvIG1vdW50Ci0gKiBAb3B0OglzdHJpbmcgY29udGFp
bmluZyB0aGUgbW91bnQgb3B0aW9ucwotICogQHNpbGVudDoJc2lsZW5jZSBlcnJvciBvdXRwdXQK
LSAqCi0gKiBudGZzX2ZpbGxfc3VwZXIoKSBpcyBjYWxsZWQgYnkgdGhlIFZGUyB0byBtb3VudCB0
aGUgZGV2aWNlIGRlc2NyaWJlZCBieSBAc2IKLSAqIHdpdGggdGhlIG1vdW50IG90aW9ucyBpbiBA
ZGF0YSB3aXRoIHRoZSBOVEZTIGZpbGVzeXN0ZW0uCi0gKgotICogSWYgQHNpbGVudCBpcyB0cnVl
LCByZW1haW4gc2lsZW50IGV2ZW4gaWYgZXJyb3JzIGFyZSBkZXRlY3RlZC4gVGhpcyBpcyB1c2Vk
Ci0gKiBkdXJpbmcgYm9vdHVwLCB3aGVuIHRoZSBrZXJuZWwgdHJpZXMgdG8gbW91bnQgdGhlIHJv
b3QgZmlsZXN5c3RlbSB3aXRoIGFsbAotICogcmVnaXN0ZXJlZCBmaWxlc3lzdGVtcyBvbmUgYWZ0
ZXIgdGhlIG90aGVyIHVudGlsIG9uZSBzdWNjZWVkcy4gVGhpcyBpbXBsaWVzCi0gKiB0aGF0IGFs
bCBmaWxlc3lzdGVtcyBleGNlcHQgdGhlIGNvcnJlY3Qgb25lIHdpbGwgcXVpdGUgY29ycmVjdGx5
IGFuZAotICogZXhwZWN0ZWRseSByZXR1cm4gYW4gZXJyb3IsIGJ1dCBub2JvZHkgd2FudHMgdG8g
c2VlIGVycm9yIG1lc3NhZ2VzIHdoZW4gaW4KLSAqIGZhY3QgdGhpcyBpcyB3aGF0IGlzIHN1cHBv
c2VkIHRvIGhhcHBlbi4KLSAqCi0gKiBOT1RFOiBAc2ItPnNfZmxhZ3MgY29udGFpbnMgdGhlIG1v
dW50IG9wdGlvbnMgZmxhZ3MuCi0gKi8KLXN0YXRpYyBpbnQgbnRmc19maWxsX3N1cGVyKHN0cnVj
dCBzdXBlcl9ibG9jayAqc2IsIHZvaWQgKm9wdCwgY29uc3QgaW50IHNpbGVudCkKLXsKLQludGZz
X3ZvbHVtZSAqdm9sOwotCXN0cnVjdCBidWZmZXJfaGVhZCAqYmg7Ci0Jc3RydWN0IGlub2RlICp0
bXBfaW5vOwotCWludCBibG9ja3NpemUsIHJlc3VsdDsKLQotCS8qCi0JICogV2UgZG8gYSBwcmV0
dHkgZGlmZmljdWx0IHBpZWNlIG9mIGJvb3RzdHJhcCBieSByZWFkaW5nIHRoZQotCSAqIE1GVCAo
YW5kIG90aGVyIG1ldGFkYXRhKSBmcm9tIGRpc2sgaW50byBtZW1vcnkuIFdlJ2xsIG9ubHkKLQkg
KiByZWxlYXNlIHRoaXMgbWV0YWRhdGEgZHVyaW5nIHVtb3VudCwgc28gdGhlIGxvY2tpbmcgcGF0
dGVybnMKLQkgKiBvYnNlcnZlZCBkdXJpbmcgYm9vdHN0cmFwIGRvIG5vdCBjb3VudC4gU28gdHVy
biBvZmYgdGhlCi0JICogb2JzZXJ2YXRpb24gb2YgbG9ja2luZyBwYXR0ZXJucyAoc3RyaWN0bHkg
Zm9yIHRoaXMgY29udGV4dAotCSAqIG9ubHkpIHdoaWxlIG1vdW50aW5nIE5URlMuIFtUaGUgdmFs
aWRhdG9yIGlzIHN0aWxsIGFjdGl2ZQotCSAqIG90aGVyd2lzZSwgZXZlbiBmb3IgdGhpcyBjb250
ZXh0OiBpdCB3aWxsIGZvciBleGFtcGxlIHJlY29yZAotCSAqIGxvY2sgY2xhc3MgcmVnaXN0cmF0
aW9ucy5dCi0JICovCi0JbG9ja2RlcF9vZmYoKTsKLQludGZzX2RlYnVnKCJFbnRlcmluZy4iKTsK
LSNpZm5kZWYgTlRGU19SVwotCXNiLT5zX2ZsYWdzIHw9IFNCX1JET05MWTsKLSNlbmRpZiAvKiAh
IE5URlNfUlcgKi8KLQkvKiBBbGxvY2F0ZSBhIG5ldyBudGZzX3ZvbHVtZSBhbmQgcGxhY2UgaXQg
aW4gc2ItPnNfZnNfaW5mby4gKi8KLQlzYi0+c19mc19pbmZvID0ga21hbGxvYyhzaXplb2YobnRm
c192b2x1bWUpLCBHRlBfTk9GUyk7Ci0Jdm9sID0gTlRGU19TQihzYik7Ci0JaWYgKCF2b2wpIHsK
LQkJaWYgKCFzaWxlbnQpCi0JCQludGZzX2Vycm9yKHNiLCAiQWxsb2NhdGlvbiBvZiBOVEZTIHZv
bHVtZSBzdHJ1Y3R1cmUgIgotCQkJCQkiZmFpbGVkLiBBYm9ydGluZyBtb3VudC4uLiIpOwotCQls
b2NrZGVwX29uKCk7Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQkvKiBJbml0aWFsaXplIG50ZnNf
dm9sdW1lIHN0cnVjdHVyZS4gKi8KLQkqdm9sID0gKG50ZnNfdm9sdW1lKSB7Ci0JCS5zYiA9IHNi
LAotCQkvKgotCQkgKiBEZWZhdWx0IGlzIGdyb3VwIGFuZCBvdGhlciBkb24ndCBoYXZlIGFueSBh
Y2Nlc3MgdG8gZmlsZXMgb3IKLQkJICogZGlyZWN0b3JpZXMgd2hpbGUgb3duZXIgaGFzIGZ1bGwg
YWNjZXNzLiBGdXJ0aGVyLCBmaWxlcyBieQotCQkgKiBkZWZhdWx0IGFyZSBub3QgZXhlY3V0YWJs
ZSBidXQgZGlyZWN0b3JpZXMgYXJlIG9mIGNvdXJzZQotCQkgKiBicm93c2VhYmxlLgotCQkgKi8K
LQkJLmZtYXNrID0gMDE3NywKLQkJLmRtYXNrID0gMDA3NywKLQl9OwotCWluaXRfcndzZW0oJnZv
bC0+bWZ0Ym1wX2xvY2spOwotCWluaXRfcndzZW0oJnZvbC0+bGNuYm1wX2xvY2spOwotCi0JLyog
QnkgZGVmYXVsdCwgZW5hYmxlIHNwYXJzZSBzdXBwb3J0LiAqLwotCU5Wb2xTZXRTcGFyc2VFbmFi
bGVkKHZvbCk7Ci0KLQkvKiBJbXBvcnRhbnQgdG8gZ2V0IHRoZSBtb3VudCBvcHRpb25zIGRlYWx0
IHdpdGggbm93LiAqLwotCWlmICghcGFyc2Vfb3B0aW9ucyh2b2wsIChjaGFyKilvcHQpKQotCQln
b3RvIGVycl9vdXRfbm93OwotCi0JLyogV2Ugc3VwcG9ydCBzZWN0b3Igc2l6ZXMgdXAgdG8gdGhl
IFBBR0VfU0laRS4gKi8KLQlpZiAoYmRldl9sb2dpY2FsX2Jsb2NrX3NpemUoc2ItPnNfYmRldikg
PiBQQUdFX1NJWkUpIHsKLQkJaWYgKCFzaWxlbnQpCi0JCQludGZzX2Vycm9yKHNiLCAiRGV2aWNl
IGhhcyB1bnN1cHBvcnRlZCBzZWN0b3Igc2l6ZSAiCi0JCQkJCSIoJWkpLiAgVGhlIG1heGltdW0g
c3VwcG9ydGVkIHNlY3RvciAiCi0JCQkJCSJzaXplIG9uIHRoaXMgYXJjaGl0ZWN0dXJlIGlzICVs
dSAiCi0JCQkJCSJieXRlcy4iLAotCQkJCQliZGV2X2xvZ2ljYWxfYmxvY2tfc2l6ZShzYi0+c19i
ZGV2KSwKLQkJCQkJUEFHRV9TSVpFKTsKLQkJZ290byBlcnJfb3V0X25vdzsKLQl9Ci0JLyoKLQkg
KiBTZXR1cCB0aGUgZGV2aWNlIGFjY2VzcyBibG9jayBzaXplIHRvIE5URlNfQkxPQ0tfU0laRSBv
ciB0aGUgaGFyZAotCSAqIHNlY3RvciBzaXplLCB3aGljaGV2ZXIgaXMgYmlnZ2VyLgotCSAqLwot
CWJsb2Nrc2l6ZSA9IHNiX21pbl9ibG9ja3NpemUoc2IsIE5URlNfQkxPQ0tfU0laRSk7Ci0JaWYg
KGJsb2Nrc2l6ZSA8IE5URlNfQkxPQ0tfU0laRSkgewotCQlpZiAoIXNpbGVudCkKLQkJCW50ZnNf
ZXJyb3Ioc2IsICJVbmFibGUgdG8gc2V0IGRldmljZSBibG9jayBzaXplLiIpOwotCQlnb3RvIGVy
cl9vdXRfbm93OwotCX0KLQlCVUdfT04oYmxvY2tzaXplICE9IHNiLT5zX2Jsb2Nrc2l6ZSk7Ci0J
bnRmc19kZWJ1ZygiU2V0IGRldmljZSBibG9jayBzaXplIHRvICVpIGJ5dGVzIChibG9jayBzaXpl
IGJpdHMgJWkpLiIsCi0JCQlibG9ja3NpemUsIHNiLT5zX2Jsb2Nrc2l6ZV9iaXRzKTsKLQkvKiBE
ZXRlcm1pbmUgdGhlIHNpemUgb2YgdGhlIGRldmljZSBpbiB1bml0cyBvZiBibG9ja19zaXplIGJ5
dGVzLiAqLwotCXZvbC0+bnJfYmxvY2tzID0gc2JfYmRldl9ucl9ibG9ja3Moc2IpOwotCWlmICgh
dm9sLT5ucl9ibG9ja3MpIHsKLQkJaWYgKCFzaWxlbnQpCi0JCQludGZzX2Vycm9yKHNiLCAiVW5h
YmxlIHRvIGRldGVybWluZSBkZXZpY2Ugc2l6ZS4iKTsKLQkJZ290byBlcnJfb3V0X25vdzsKLQl9
Ci0JLyogUmVhZCB0aGUgYm9vdCBzZWN0b3IgYW5kIHJldHVybiB1bmxvY2tlZCBidWZmZXIgaGVh
ZCB0byBpdC4gKi8KLQlpZiAoIShiaCA9IHJlYWRfbnRmc19ib290X3NlY3RvcihzYiwgc2lsZW50
KSkpIHsKLQkJaWYgKCFzaWxlbnQpCi0JCQludGZzX2Vycm9yKHNiLCAiTm90IGFuIE5URlMgdm9s
dW1lLiIpOwotCQlnb3RvIGVycl9vdXRfbm93OwotCX0KLQkvKgotCSAqIEV4dHJhY3QgdGhlIGRh
dGEgZnJvbSB0aGUgYm9vdCBzZWN0b3IgYW5kIHNldHVwIHRoZSBudGZzIHZvbHVtZQotCSAqIHVz
aW5nIGl0LgotCSAqLwotCXJlc3VsdCA9IHBhcnNlX250ZnNfYm9vdF9zZWN0b3Iodm9sLCAoTlRG
U19CT09UX1NFQ1RPUiopYmgtPmJfZGF0YSk7Ci0JYnJlbHNlKGJoKTsKLQlpZiAoIXJlc3VsdCkg
ewotCQlpZiAoIXNpbGVudCkKLQkJCW50ZnNfZXJyb3Ioc2IsICJVbnN1cHBvcnRlZCBOVEZTIGZp
bGVzeXN0ZW0uIik7Ci0JCWdvdG8gZXJyX291dF9ub3c7Ci0JfQotCS8qCi0JICogSWYgdGhlIGJv
b3Qgc2VjdG9yIGluZGljYXRlcyBhIHNlY3RvciBzaXplIGJpZ2dlciB0aGFuIHRoZSBjdXJyZW50
Ci0JICogZGV2aWNlIGJsb2NrIHNpemUsIHN3aXRjaCB0aGUgZGV2aWNlIGJsb2NrIHNpemUgdG8g
dGhlIHNlY3RvciBzaXplLgotCSAqIFRPRE86IEl0IG1heSBiZSBwb3NzaWJsZSB0byBzdXBwb3J0
IHRoaXMgY2FzZSBldmVuIHdoZW4gdGhlIHNldAotCSAqIGJlbG93IGZhaWxzLCB3ZSB3b3VsZCBq
dXN0IGJlIGJyZWFraW5nIHVwIHRoZSBpL28gZm9yIGVhY2ggc2VjdG9yCi0JICogaW50byBtdWx0
aXBsZSBibG9ja3MgZm9yIGkvbyBwdXJwb3NlcyBidXQgb3RoZXJ3aXNlIGl0IHNob3VsZCBqdXN0
Ci0JICogd29yay4gIEhvd2V2ZXIgaXQgaXMgc2FmZXIgdG8gbGVhdmUgZGlzYWJsZWQgdW50aWwg
c29tZW9uZSBoaXRzIHRoaXMKLQkgKiBlcnJvciBtZXNzYWdlIGFuZCB0aGVuIHdlIGNhbiBnZXQg
dGhlbSB0byB0cnkgaXQgd2l0aG91dCB0aGUgc2V0dGluZwotCSAqIHNvIHdlIGtub3cgZm9yIHN1
cmUgdGhhdCBpdCB3b3Jrcy4KLQkgKi8KLQlpZiAodm9sLT5zZWN0b3Jfc2l6ZSA+IGJsb2Nrc2l6
ZSkgewotCQlibG9ja3NpemUgPSBzYl9zZXRfYmxvY2tzaXplKHNiLCB2b2wtPnNlY3Rvcl9zaXpl
KTsKLQkJaWYgKGJsb2Nrc2l6ZSAhPSB2b2wtPnNlY3Rvcl9zaXplKSB7Ci0JCQlpZiAoIXNpbGVu
dCkKLQkJCQludGZzX2Vycm9yKHNiLCAiVW5hYmxlIHRvIHNldCBkZXZpY2UgYmxvY2sgIgotCQkJ
CQkJInNpemUgdG8gc2VjdG9yIHNpemUgKCVpKS4iLAotCQkJCQkJdm9sLT5zZWN0b3Jfc2l6ZSk7
Ci0JCQlnb3RvIGVycl9vdXRfbm93OwotCQl9Ci0JCUJVR19PTihibG9ja3NpemUgIT0gc2ItPnNf
YmxvY2tzaXplKTsKLQkJdm9sLT5ucl9ibG9ja3MgPSBzYl9iZGV2X25yX2Jsb2NrcyhzYik7Ci0J
CW50ZnNfZGVidWcoIkNoYW5nZWQgZGV2aWNlIGJsb2NrIHNpemUgdG8gJWkgYnl0ZXMgKGJsb2Nr
IHNpemUgIgotCQkJCSJiaXRzICVpKSB0byBtYXRjaCB2b2x1bWUgc2VjdG9yIHNpemUuIiwKLQkJ
CQlibG9ja3NpemUsIHNiLT5zX2Jsb2Nrc2l6ZV9iaXRzKTsKLQl9Ci0JLyogSW5pdGlhbGl6ZSB0
aGUgY2x1c3RlciBhbmQgbWZ0IGFsbG9jYXRvcnMuICovCi0JbnRmc19zZXR1cF9hbGxvY2F0b3Jz
KHZvbCk7Ci0JLyogU2V0dXAgcmVtYWluaW5nIGZpZWxkcyBpbiB0aGUgc3VwZXIgYmxvY2suICov
Ci0Jc2ItPnNfbWFnaWMgPSBOVEZTX1NCX01BR0lDOwotCS8qCi0JICogTnRmcyBhbGxvd3MgNjMg
Yml0cyBmb3IgdGhlIGZpbGUgc2l6ZSwgaS5lLiBjb3JyZWN0IHdvdWxkIGJlOgotCSAqCXNiLT5z
X21heGJ5dGVzID0gfjBVTEwgPj4gMTsKLQkgKiBCdXQgdGhlIGtlcm5lbCB1c2VzIGEgbG9uZyBh
cyB0aGUgcGFnZSBjYWNoZSBwYWdlIGluZGV4IHdoaWNoIG9uCi0JICogMzItYml0IGFyY2hpdGVj
dHVyZXMgaXMgb25seSAzMi1iaXRzLiBNQVhfTEZTX0ZJTEVTSVpFIGlzIGtlcm5lbAotCSAqIGRl
ZmluZWQgdG8gdGhlIG1heGltdW0gdGhlIHBhZ2UgY2FjaGUgcGFnZSBpbmRleCBjYW4gY29wZSB3
aXRoCi0JICogd2l0aG91dCBvdmVyZmxvd2luZyB0aGUgaW5kZXggb3IgdG8gMl42MyAtIDEsIHdo
aWNoZXZlciBpcyBzbWFsbGVyLgotCSAqLwotCXNiLT5zX21heGJ5dGVzID0gTUFYX0xGU19GSUxF
U0laRTsKLQkvKiBOdGZzIG1lYXN1cmVzIHRpbWUgaW4gMTAwbnMgaW50ZXJ2YWxzLiAqLwotCXNi
LT5zX3RpbWVfZ3JhbiA9IDEwMDsKLQkvKgotCSAqIE5vdyBsb2FkIHRoZSBtZXRhZGF0YSByZXF1
aXJlZCBmb3IgdGhlIHBhZ2UgY2FjaGUgYW5kIG91ciBhZGRyZXNzCi0JICogc3BhY2Ugb3BlcmF0
aW9ucyB0byBmdW5jdGlvbi4gV2UgZG8gdGhpcyBieSBzZXR0aW5nIHVwIGEgc3BlY2lhbGlzZWQK
LQkgKiByZWFkX2lub2RlIG1ldGhvZCBhbmQgdGhlbiBqdXN0IGNhbGxpbmcgdGhlIG5vcm1hbCBp
Z2V0KCkgdG8gb2J0YWluCi0JICogdGhlIGlub2RlIGZvciAkTUZUIHdoaWNoIGlzIHN1ZmZpY2ll
bnQgdG8gYWxsb3cgb3VyIG5vcm1hbCBpbm9kZQotCSAqIG9wZXJhdGlvbnMgYW5kIGFzc29jaWF0
ZWQgYWRkcmVzcyBzcGFjZSBvcGVyYXRpb25zIHRvIGZ1bmN0aW9uLgotCSAqLwotCXNiLT5zX29w
ID0gJm50ZnNfc29wczsKLQl0bXBfaW5vID0gbmV3X2lub2RlKHNiKTsKLQlpZiAoIXRtcF9pbm8p
IHsKLQkJaWYgKCFzaWxlbnQpCi0JCQludGZzX2Vycm9yKHNiLCAiRmFpbGVkIHRvIGxvYWQgZXNz
ZW50aWFsIG1ldGFkYXRhLiIpOwotCQlnb3RvIGVycl9vdXRfbm93OwotCX0KLQl0bXBfaW5vLT5p
X2lubyA9IEZJTEVfTUZUOwotCWluc2VydF9pbm9kZV9oYXNoKHRtcF9pbm8pOwotCWlmIChudGZz
X3JlYWRfaW5vZGVfbW91bnQodG1wX2lubykgPCAwKSB7Ci0JCWlmICghc2lsZW50KQotCQkJbnRm
c19lcnJvcihzYiwgIkZhaWxlZCB0byBsb2FkIGVzc2VudGlhbCBtZXRhZGF0YS4iKTsKLQkJZ290
byBpcHV0X3RtcF9pbm9fZXJyX291dF9ub3c7Ci0JfQotCW11dGV4X2xvY2soJm50ZnNfbG9jayk7
Ci0JLyoKLQkgKiBUaGUgY3VycmVudCBtb3VudCBpcyBhIGNvbXByZXNzaW9uIHVzZXIgaWYgdGhl
IGNsdXN0ZXIgc2l6ZSBpcwotCSAqIGxlc3MgdGhhbiBvciBlcXVhbCA0a2lCLgotCSAqLwotCWlm
ICh2b2wtPmNsdXN0ZXJfc2l6ZSA8PSA0MDk2ICYmICFudGZzX25yX2NvbXByZXNzaW9uX3VzZXJz
KyspIHsKLQkJcmVzdWx0ID0gYWxsb2NhdGVfY29tcHJlc3Npb25fYnVmZmVycygpOwotCQlpZiAo
cmVzdWx0KSB7Ci0JCQludGZzX2Vycm9yKE5VTEwsICJGYWlsZWQgdG8gYWxsb2NhdGUgYnVmZmVy
cyAiCi0JCQkJCSJmb3IgY29tcHJlc3Npb24gZW5naW5lLiIpOwotCQkJbnRmc19ucl9jb21wcmVz
c2lvbl91c2Vycy0tOwotCQkJbXV0ZXhfdW5sb2NrKCZudGZzX2xvY2spOwotCQkJZ290byBpcHV0
X3RtcF9pbm9fZXJyX291dF9ub3c7Ci0JCX0KLQl9Ci0JLyoKLQkgKiBHZW5lcmF0ZSB0aGUgZ2xv
YmFsIGRlZmF1bHQgdXBjYXNlIHRhYmxlIGlmIG5lY2Vzc2FyeS4gIEFsc28KLQkgKiB0ZW1wb3Jh
cmlseSBpbmNyZW1lbnQgdGhlIG51bWJlciBvZiB1cGNhc2UgdXNlcnMgdG8gYXZvaWQgcmFjZQot
CSAqIGNvbmRpdGlvbnMgd2l0aCBjb25jdXJyZW50ICh1KW1vdW50cy4KLQkgKi8KLQlpZiAoIWRl
ZmF1bHRfdXBjYXNlKQotCQlkZWZhdWx0X3VwY2FzZSA9IGdlbmVyYXRlX2RlZmF1bHRfdXBjYXNl
KCk7Ci0JbnRmc19ucl91cGNhc2VfdXNlcnMrKzsKLQltdXRleF91bmxvY2soJm50ZnNfbG9jayk7
Ci0JLyoKLQkgKiBGcm9tIG5vdyBvbiwgaWdub3JlIEBzaWxlbnQgcGFyYW1ldGVyLiBJZiB3ZSBm
YWlsIGJlbG93IHRoaXMgbGluZSwKLQkgKiBpdCB3aWxsIGJlIGR1ZSB0byBhIGNvcnJ1cHQgZnMg
b3IgYSBzeXN0ZW0gZXJyb3IsIHNvIHdlIHJlcG9ydCBpdC4KLQkgKi8KLQkvKgotCSAqIE9wZW4g
dGhlIHN5c3RlbSBmaWxlcyB3aXRoIG5vcm1hbCBhY2Nlc3MgZnVuY3Rpb25zIGFuZCBjb21wbGV0
ZQotCSAqIHNldHRpbmcgdXAgdGhlIG50ZnMgc3VwZXIgYmxvY2suCi0JICovCi0JaWYgKCFsb2Fk
X3N5c3RlbV9maWxlcyh2b2wpKSB7Ci0JCW50ZnNfZXJyb3Ioc2IsICJGYWlsZWQgdG8gbG9hZCBz
eXN0ZW0gZmlsZXMuIik7Ci0JCWdvdG8gdW5sX3VwY2FzZV9pcHV0X3RtcF9pbm9fZXJyX291dF9u
b3c7Ci0JfQotCi0JLyogV2UgZ3JhYiBhIHJlZmVyZW5jZSwgc2ltdWxhdGluZyBhbiBudGZzX2ln
ZXQoKS4gKi8KLQlpaG9sZCh2b2wtPnJvb3RfaW5vKTsKLQlpZiAoKHNiLT5zX3Jvb3QgPSBkX21h
a2Vfcm9vdCh2b2wtPnJvb3RfaW5vKSkpIHsKLQkJbnRmc19kZWJ1ZygiRXhpdGluZywgc3RhdHVz
IHN1Y2Nlc3NmdWwuIik7Ci0JCS8qIFJlbGVhc2UgdGhlIGRlZmF1bHQgdXBjYXNlIGlmIGl0IGhh
cyBubyB1c2Vycy4gKi8KLQkJbXV0ZXhfbG9jaygmbnRmc19sb2NrKTsKLQkJaWYgKCEtLW50ZnNf
bnJfdXBjYXNlX3VzZXJzICYmIGRlZmF1bHRfdXBjYXNlKSB7Ci0JCQludGZzX2ZyZWUoZGVmYXVs
dF91cGNhc2UpOwotCQkJZGVmYXVsdF91cGNhc2UgPSBOVUxMOwotCQl9Ci0JCW11dGV4X3VubG9j
aygmbnRmc19sb2NrKTsKLQkJc2ItPnNfZXhwb3J0X29wID0gJm50ZnNfZXhwb3J0X29wczsKLQkJ
bG9ja2RlcF9vbigpOwotCQlyZXR1cm4gMDsKLQl9Ci0JbnRmc19lcnJvcihzYiwgIkZhaWxlZCB0
byBhbGxvY2F0ZSByb290IGRpcmVjdG9yeS4iKTsKLQkvKiBDbGVhbiB1cCBhZnRlciB0aGUgc3Vj
Y2Vzc2Z1bCBsb2FkX3N5c3RlbV9maWxlcygpIGNhbGwgZnJvbSBhYm92ZS4gKi8KLQkvLyBUT0RP
OiBVc2UgbnRmc19wdXRfc3VwZXIoKSBpbnN0ZWFkIG9mIHJlcGVhdGluZyBhbGwgdGhpcyBjb2Rl
Li4uCi0JLy8gRklYTUU6IFNob3VsZCBtYXJrIHRoZSB2b2x1bWUgY2xlYW4gYXMgdGhlIGVycm9y
IGlzIG1vc3QgbGlrZWx5Ci0JLy8gCSAgLUVOT01FTS4KLQlpcHV0KHZvbC0+dm9sX2lubyk7Ci0J
dm9sLT52b2xfaW5vID0gTlVMTDsKLQkvKiBOVEZTIDMuMCsgc3BlY2lmaWMgY2xlYW4gdXAuICov
Ci0JaWYgKHZvbC0+bWFqb3JfdmVyID49IDMpIHsKLSNpZmRlZiBOVEZTX1JXCi0JCWlmICh2b2wt
PnVzbmpybmxfal9pbm8pIHsKLQkJCWlwdXQodm9sLT51c25qcm5sX2pfaW5vKTsKLQkJCXZvbC0+
dXNuanJubF9qX2lubyA9IE5VTEw7Ci0JCX0KLQkJaWYgKHZvbC0+dXNuanJubF9tYXhfaW5vKSB7
Ci0JCQlpcHV0KHZvbC0+dXNuanJubF9tYXhfaW5vKTsKLQkJCXZvbC0+dXNuanJubF9tYXhfaW5v
ID0gTlVMTDsKLQkJfQotCQlpZiAodm9sLT51c25qcm5sX2lubykgewotCQkJaXB1dCh2b2wtPnVz
bmpybmxfaW5vKTsKLQkJCXZvbC0+dXNuanJubF9pbm8gPSBOVUxMOwotCQl9Ci0JCWlmICh2b2wt
PnF1b3RhX3FfaW5vKSB7Ci0JCQlpcHV0KHZvbC0+cXVvdGFfcV9pbm8pOwotCQkJdm9sLT5xdW90
YV9xX2lubyA9IE5VTEw7Ci0JCX0KLQkJaWYgKHZvbC0+cXVvdGFfaW5vKSB7Ci0JCQlpcHV0KHZv
bC0+cXVvdGFfaW5vKTsKLQkJCXZvbC0+cXVvdGFfaW5vID0gTlVMTDsKLQkJfQotI2VuZGlmIC8q
IE5URlNfUlcgKi8KLQkJaWYgKHZvbC0+ZXh0ZW5kX2lubykgewotCQkJaXB1dCh2b2wtPmV4dGVu
ZF9pbm8pOwotCQkJdm9sLT5leHRlbmRfaW5vID0gTlVMTDsKLQkJfQotCQlpZiAodm9sLT5zZWN1
cmVfaW5vKSB7Ci0JCQlpcHV0KHZvbC0+c2VjdXJlX2lubyk7Ci0JCQl2b2wtPnNlY3VyZV9pbm8g
PSBOVUxMOwotCQl9Ci0JfQotCWlwdXQodm9sLT5yb290X2lubyk7Ci0Jdm9sLT5yb290X2lubyA9
IE5VTEw7Ci0JaXB1dCh2b2wtPmxjbmJtcF9pbm8pOwotCXZvbC0+bGNuYm1wX2lubyA9IE5VTEw7
Ci0JaXB1dCh2b2wtPm1mdGJtcF9pbm8pOwotCXZvbC0+bWZ0Ym1wX2lubyA9IE5VTEw7Ci0jaWZk
ZWYgTlRGU19SVwotCWlmICh2b2wtPmxvZ2ZpbGVfaW5vKSB7Ci0JCWlwdXQodm9sLT5sb2dmaWxl
X2lubyk7Ci0JCXZvbC0+bG9nZmlsZV9pbm8gPSBOVUxMOwotCX0KLQlpZiAodm9sLT5tZnRtaXJy
X2lubykgewotCQlpcHV0KHZvbC0+bWZ0bWlycl9pbm8pOwotCQl2b2wtPm1mdG1pcnJfaW5vID0g
TlVMTDsKLQl9Ci0jZW5kaWYgLyogTlRGU19SVyAqLwotCS8qIFRocm93IGF3YXkgdGhlIHRhYmxl
IG9mIGF0dHJpYnV0ZSBkZWZpbml0aW9ucy4gKi8KLQl2b2wtPmF0dHJkZWZfc2l6ZSA9IDA7Ci0J
aWYgKHZvbC0+YXR0cmRlZikgewotCQludGZzX2ZyZWUodm9sLT5hdHRyZGVmKTsKLQkJdm9sLT5h
dHRyZGVmID0gTlVMTDsKLQl9Ci0Jdm9sLT51cGNhc2VfbGVuID0gMDsKLQltdXRleF9sb2NrKCZu
dGZzX2xvY2spOwotCWlmICh2b2wtPnVwY2FzZSA9PSBkZWZhdWx0X3VwY2FzZSkgewotCQludGZz
X25yX3VwY2FzZV91c2Vycy0tOwotCQl2b2wtPnVwY2FzZSA9IE5VTEw7Ci0JfQotCW11dGV4X3Vu
bG9jaygmbnRmc19sb2NrKTsKLQlpZiAodm9sLT51cGNhc2UpIHsKLQkJbnRmc19mcmVlKHZvbC0+
dXBjYXNlKTsKLQkJdm9sLT51cGNhc2UgPSBOVUxMOwotCX0KLQlpZiAodm9sLT5ubHNfbWFwKSB7
Ci0JCXVubG9hZF9ubHModm9sLT5ubHNfbWFwKTsKLQkJdm9sLT5ubHNfbWFwID0gTlVMTDsKLQl9
Ci0JLyogRXJyb3IgZXhpdCBjb2RlIHBhdGguICovCi11bmxfdXBjYXNlX2lwdXRfdG1wX2lub19l
cnJfb3V0X25vdzoKLQkvKgotCSAqIERlY3JlYXNlIHRoZSBudW1iZXIgb2YgdXBjYXNlIHVzZXJz
IGFuZCBkZXN0cm95IHRoZSBnbG9iYWwgZGVmYXVsdAotCSAqIHVwY2FzZSB0YWJsZSBpZiBuZWNl
c3NhcnkuCi0JICovCi0JbXV0ZXhfbG9jaygmbnRmc19sb2NrKTsKLQlpZiAoIS0tbnRmc19ucl91
cGNhc2VfdXNlcnMgJiYgZGVmYXVsdF91cGNhc2UpIHsKLQkJbnRmc19mcmVlKGRlZmF1bHRfdXBj
YXNlKTsKLQkJZGVmYXVsdF91cGNhc2UgPSBOVUxMOwotCX0KLQlpZiAodm9sLT5jbHVzdGVyX3Np
emUgPD0gNDA5NiAmJiAhLS1udGZzX25yX2NvbXByZXNzaW9uX3VzZXJzKQotCQlmcmVlX2NvbXBy
ZXNzaW9uX2J1ZmZlcnMoKTsKLQltdXRleF91bmxvY2soJm50ZnNfbG9jayk7Ci1pcHV0X3RtcF9p
bm9fZXJyX291dF9ub3c6Ci0JaXB1dCh0bXBfaW5vKTsKLQlpZiAodm9sLT5tZnRfaW5vICYmIHZv
bC0+bWZ0X2lubyAhPSB0bXBfaW5vKQotCQlpcHV0KHZvbC0+bWZ0X2lubyk7Ci0Jdm9sLT5tZnRf
aW5vID0gTlVMTDsKLQkvKiBFcnJvcnMgYXQgdGhpcyBzdGFnZSBhcmUgaXJyZWxldmFudC4gKi8K
LWVycl9vdXRfbm93OgotCXNiLT5zX2ZzX2luZm8gPSBOVUxMOwotCWtmcmVlKHZvbCk7Ci0JbnRm
c19kZWJ1ZygiRmFpbGVkLCByZXR1cm5pbmcgLUVJTlZBTC4iKTsKLQlsb2NrZGVwX29uKCk7Ci0J
cmV0dXJuIC1FSU5WQUw7Ci19Ci0KLS8qCi0gKiBUaGlzIGlzIGEgc2xhYiBjYWNoZSB0byBvcHRp
bWl6ZSBhbGxvY2F0aW9ucyBhbmQgZGVhbGxvY2F0aW9ucyBvZiBVbmljb2RlCi0gKiBzdHJpbmdz
IG9mIHRoZSBtYXhpbXVtIGxlbmd0aCBhbGxvd2VkIGJ5IE5URlMsIHdoaWNoIGlzIE5URlNfTUFY
X05BTUVfTEVOCi0gKiAoMjU1KSBVbmljb2RlIGNoYXJhY3RlcnMgKyBhIHRlcm1pbmF0aW5nIE5V
TEwgVW5pY29kZSBjaGFyYWN0ZXIuCi0gKi8KLXN0cnVjdCBrbWVtX2NhY2hlICpudGZzX25hbWVf
Y2FjaGU7Ci0KLS8qIFNsYWIgY2FjaGVzIGZvciBlZmZpY2llbnQgYWxsb2NhdGlvbi9kZWFsbG9j
YXRpb24gb2YgaW5vZGVzLiAqLwotc3RydWN0IGttZW1fY2FjaGUgKm50ZnNfaW5vZGVfY2FjaGU7
Ci1zdHJ1Y3Qga21lbV9jYWNoZSAqbnRmc19iaWdfaW5vZGVfY2FjaGU7Ci0KLS8qIEluaXQgb25j
ZSBjb25zdHJ1Y3RvciBmb3IgdGhlIGlub2RlIHNsYWIgY2FjaGUuICovCi1zdGF0aWMgdm9pZCBu
dGZzX2JpZ19pbm9kZV9pbml0X29uY2Uodm9pZCAqZm9vKQotewotCW50ZnNfaW5vZGUgKm5pID0g
KG50ZnNfaW5vZGUgKilmb287Ci0KLQlpbm9kZV9pbml0X29uY2UoVkZTX0kobmkpKTsKLX0KLQot
LyoKLSAqIFNsYWIgY2FjaGVzIHRvIG9wdGltaXplIGFsbG9jYXRpb25zIGFuZCBkZWFsbG9jYXRp
b25zIG9mIGF0dHJpYnV0ZSBzZWFyY2gKLSAqIGNvbnRleHRzIGFuZCBpbmRleCBjb250ZXh0cywg
cmVzcGVjdGl2ZWx5LgotICovCi1zdHJ1Y3Qga21lbV9jYWNoZSAqbnRmc19hdHRyX2N0eF9jYWNo
ZTsKLXN0cnVjdCBrbWVtX2NhY2hlICpudGZzX2luZGV4X2N0eF9jYWNoZTsKLQotLyogRHJpdmVy
IHdpZGUgbXV0ZXguICovCi1ERUZJTkVfTVVURVgobnRmc19sb2NrKTsKLQotc3RhdGljIHN0cnVj
dCBkZW50cnkgKm50ZnNfbW91bnQoc3RydWN0IGZpbGVfc3lzdGVtX3R5cGUgKmZzX3R5cGUsCi0J
aW50IGZsYWdzLCBjb25zdCBjaGFyICpkZXZfbmFtZSwgdm9pZCAqZGF0YSkKLXsKLQlyZXR1cm4g
bW91bnRfYmRldihmc190eXBlLCBmbGFncywgZGV2X25hbWUsIGRhdGEsIG50ZnNfZmlsbF9zdXBl
cik7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgZmlsZV9zeXN0ZW1fdHlwZSBudGZzX2ZzX3R5cGUgPSB7
Ci0JLm93bmVyCQk9IFRISVNfTU9EVUxFLAotCS5uYW1lCQk9ICJudGZzIiwKLQkubW91bnQJCT0g
bnRmc19tb3VudCwKLQkua2lsbF9zYgk9IGtpbGxfYmxvY2tfc3VwZXIsCi0JLmZzX2ZsYWdzCT0g
RlNfUkVRVUlSRVNfREVWLAotfTsKLU1PRFVMRV9BTElBU19GUygibnRmcyIpOwotCi0vKiBTdGFi
bGUgbmFtZXMgZm9yIHRoZSBzbGFiIGNhY2hlcy4gKi8KLXN0YXRpYyBjb25zdCBjaGFyIG50ZnNf
aW5kZXhfY3R4X2NhY2hlX25hbWVbXSA9ICJudGZzX2luZGV4X2N0eF9jYWNoZSI7Ci1zdGF0aWMg
Y29uc3QgY2hhciBudGZzX2F0dHJfY3R4X2NhY2hlX25hbWVbXSA9ICJudGZzX2F0dHJfY3R4X2Nh
Y2hlIjsKLXN0YXRpYyBjb25zdCBjaGFyIG50ZnNfbmFtZV9jYWNoZV9uYW1lW10gPSAibnRmc19u
YW1lX2NhY2hlIjsKLXN0YXRpYyBjb25zdCBjaGFyIG50ZnNfaW5vZGVfY2FjaGVfbmFtZVtdID0g
Im50ZnNfaW5vZGVfY2FjaGUiOwotc3RhdGljIGNvbnN0IGNoYXIgbnRmc19iaWdfaW5vZGVfY2Fj
aGVfbmFtZVtdID0gIm50ZnNfYmlnX2lub2RlX2NhY2hlIjsKLQotc3RhdGljIGludCBfX2luaXQg
aW5pdF9udGZzX2ZzKHZvaWQpCi17Ci0JaW50IGVyciA9IDA7Ci0KLQkvKiBUaGlzIG1heSBiZSB1
Z2x5IGJ1dCBpdCByZXN1bHRzIGluIHByZXR0eSBvdXRwdXQgc28gd2hvIGNhcmVzLiAoLTggKi8K
LQlwcl9pbmZvKCJkcml2ZXIgIiBOVEZTX1ZFUlNJT04gIiBbRmxhZ3M6IFIvIgotI2lmZGVmIE5U
RlNfUlcKLQkJCSJXIgotI2Vsc2UKLQkJCSJPIgotI2VuZGlmCi0jaWZkZWYgREVCVUcKLQkJCSIg
REVCVUciCi0jZW5kaWYKLSNpZmRlZiBNT0RVTEUKLQkJCSIgTU9EVUxFIgotI2VuZGlmCi0JCQki
XS5cbiIpOwotCi0JbnRmc19kZWJ1ZygiRGVidWcgbWVzc2FnZXMgYXJlIGVuYWJsZWQuIik7Ci0K
LQludGZzX2luZGV4X2N0eF9jYWNoZSA9IGttZW1fY2FjaGVfY3JlYXRlKG50ZnNfaW5kZXhfY3R4
X2NhY2hlX25hbWUsCi0JCQlzaXplb2YobnRmc19pbmRleF9jb250ZXh0KSwgMCAvKiBvZmZzZXQg
Ki8sCi0JCQlTTEFCX0hXQ0FDSEVfQUxJR04sIE5VTEwgLyogY3RvciAqLyk7Ci0JaWYgKCFudGZz
X2luZGV4X2N0eF9jYWNoZSkgewotCQlwcl9jcml0KCJGYWlsZWQgdG8gY3JlYXRlICVzIVxuIiwg
bnRmc19pbmRleF9jdHhfY2FjaGVfbmFtZSk7Ci0JCWdvdG8gaWN0eF9lcnJfb3V0OwotCX0KLQlu
dGZzX2F0dHJfY3R4X2NhY2hlID0ga21lbV9jYWNoZV9jcmVhdGUobnRmc19hdHRyX2N0eF9jYWNo
ZV9uYW1lLAotCQkJc2l6ZW9mKG50ZnNfYXR0cl9zZWFyY2hfY3R4KSwgMCAvKiBvZmZzZXQgKi8s
Ci0JCQlTTEFCX0hXQ0FDSEVfQUxJR04sIE5VTEwgLyogY3RvciAqLyk7Ci0JaWYgKCFudGZzX2F0
dHJfY3R4X2NhY2hlKSB7Ci0JCXByX2NyaXQoIk5URlM6IEZhaWxlZCB0byBjcmVhdGUgJXMhXG4i
LAotCQkJbnRmc19hdHRyX2N0eF9jYWNoZV9uYW1lKTsKLQkJZ290byBhY3R4X2Vycl9vdXQ7Ci0J
fQotCi0JbnRmc19uYW1lX2NhY2hlID0ga21lbV9jYWNoZV9jcmVhdGUobnRmc19uYW1lX2NhY2hl
X25hbWUsCi0JCQkoTlRGU19NQVhfTkFNRV9MRU4rMSkgKiBzaXplb2YobnRmc2NoYXIpLCAwLAot
CQkJU0xBQl9IV0NBQ0hFX0FMSUdOLCBOVUxMKTsKLQlpZiAoIW50ZnNfbmFtZV9jYWNoZSkgewot
CQlwcl9jcml0KCJGYWlsZWQgdG8gY3JlYXRlICVzIVxuIiwgbnRmc19uYW1lX2NhY2hlX25hbWUp
OwotCQlnb3RvIG5hbWVfZXJyX291dDsKLQl9Ci0KLQludGZzX2lub2RlX2NhY2hlID0ga21lbV9j
YWNoZV9jcmVhdGUobnRmc19pbm9kZV9jYWNoZV9uYW1lLAotCQkJc2l6ZW9mKG50ZnNfaW5vZGUp
LCAwLAotCQkJU0xBQl9SRUNMQUlNX0FDQ09VTlR8U0xBQl9NRU1fU1BSRUFELCBOVUxMKTsKLQlp
ZiAoIW50ZnNfaW5vZGVfY2FjaGUpIHsKLQkJcHJfY3JpdCgiRmFpbGVkIHRvIGNyZWF0ZSAlcyFc
biIsIG50ZnNfaW5vZGVfY2FjaGVfbmFtZSk7Ci0JCWdvdG8gaW5vZGVfZXJyX291dDsKLQl9Ci0K
LQludGZzX2JpZ19pbm9kZV9jYWNoZSA9IGttZW1fY2FjaGVfY3JlYXRlKG50ZnNfYmlnX2lub2Rl
X2NhY2hlX25hbWUsCi0JCQlzaXplb2YoYmlnX250ZnNfaW5vZGUpLCAwLAotCQkJU0xBQl9IV0NB
Q0hFX0FMSUdOfFNMQUJfUkVDTEFJTV9BQ0NPVU5UfFNMQUJfTUVNX1NQUkVBRHwKLQkJCVNMQUJf
QUNDT1VOVCwgbnRmc19iaWdfaW5vZGVfaW5pdF9vbmNlKTsKLQlpZiAoIW50ZnNfYmlnX2lub2Rl
X2NhY2hlKSB7Ci0JCXByX2NyaXQoIkZhaWxlZCB0byBjcmVhdGUgJXMhXG4iLCBudGZzX2JpZ19p
bm9kZV9jYWNoZV9uYW1lKTsKLQkJZ290byBiaWdfaW5vZGVfZXJyX291dDsKLQl9Ci0KLQkvKiBS
ZWdpc3RlciB0aGUgbnRmcyBzeXNjdGxzLiAqLwotCWVyciA9IG50ZnNfc3lzY3RsKDEpOwotCWlm
IChlcnIpIHsKLQkJcHJfY3JpdCgiRmFpbGVkIHRvIHJlZ2lzdGVyIE5URlMgc3lzY3RscyFcbiIp
OwotCQlnb3RvIHN5c2N0bF9lcnJfb3V0OwotCX0KLQotCWVyciA9IHJlZ2lzdGVyX2ZpbGVzeXN0
ZW0oJm50ZnNfZnNfdHlwZSk7Ci0JaWYgKCFlcnIpIHsKLQkJbnRmc19kZWJ1ZygiTlRGUyBkcml2
ZXIgcmVnaXN0ZXJlZCBzdWNjZXNzZnVsbHkuIik7Ci0JCXJldHVybiAwOyAvKiBTdWNjZXNzISAq
LwotCX0KLQlwcl9jcml0KCJGYWlsZWQgdG8gcmVnaXN0ZXIgTlRGUyBmaWxlc3lzdGVtIGRyaXZl
ciFcbiIpOwotCi0JLyogVW5yZWdpc3RlciB0aGUgbnRmcyBzeXNjdGxzLiAqLwotCW50ZnNfc3lz
Y3RsKDApOwotc3lzY3RsX2Vycl9vdXQ6Ci0Ja21lbV9jYWNoZV9kZXN0cm95KG50ZnNfYmlnX2lu
b2RlX2NhY2hlKTsKLWJpZ19pbm9kZV9lcnJfb3V0OgotCWttZW1fY2FjaGVfZGVzdHJveShudGZz
X2lub2RlX2NhY2hlKTsKLWlub2RlX2Vycl9vdXQ6Ci0Ja21lbV9jYWNoZV9kZXN0cm95KG50ZnNf
bmFtZV9jYWNoZSk7Ci1uYW1lX2Vycl9vdXQ6Ci0Ja21lbV9jYWNoZV9kZXN0cm95KG50ZnNfYXR0
cl9jdHhfY2FjaGUpOwotYWN0eF9lcnJfb3V0OgotCWttZW1fY2FjaGVfZGVzdHJveShudGZzX2lu
ZGV4X2N0eF9jYWNoZSk7Ci1pY3R4X2Vycl9vdXQ6Ci0JaWYgKCFlcnIpIHsKLQkJcHJfY3JpdCgi
QWJvcnRpbmcgTlRGUyBmaWxlc3lzdGVtIGRyaXZlciByZWdpc3RyYXRpb24uLi5cbiIpOwotCQll
cnIgPSAtRU5PTUVNOwotCX0KLQlyZXR1cm4gZXJyOwotfQotCi1zdGF0aWMgdm9pZCBfX2V4aXQg
ZXhpdF9udGZzX2ZzKHZvaWQpCi17Ci0JbnRmc19kZWJ1ZygiVW5yZWdpc3RlcmluZyBOVEZTIGRy
aXZlci4iKTsKLQotCXVucmVnaXN0ZXJfZmlsZXN5c3RlbSgmbnRmc19mc190eXBlKTsKLQotCS8q
Ci0JICogTWFrZSBzdXJlIGFsbCBkZWxheWVkIHJjdSBmcmVlIGlub2RlcyBhcmUgZmx1c2hlZCBi
ZWZvcmUgd2UKLQkgKiBkZXN0cm95IGNhY2hlLgotCSAqLwotCXJjdV9iYXJyaWVyKCk7Ci0Ja21l
bV9jYWNoZV9kZXN0cm95KG50ZnNfYmlnX2lub2RlX2NhY2hlKTsKLQlrbWVtX2NhY2hlX2Rlc3Ry
b3kobnRmc19pbm9kZV9jYWNoZSk7Ci0Ja21lbV9jYWNoZV9kZXN0cm95KG50ZnNfbmFtZV9jYWNo
ZSk7Ci0Ja21lbV9jYWNoZV9kZXN0cm95KG50ZnNfYXR0cl9jdHhfY2FjaGUpOwotCWttZW1fY2Fj
aGVfZGVzdHJveShudGZzX2luZGV4X2N0eF9jYWNoZSk7Ci0JLyogVW5yZWdpc3RlciB0aGUgbnRm
cyBzeXNjdGxzLiAqLwotCW50ZnNfc3lzY3RsKDApOwotfQotCi1NT0RVTEVfQVVUSE9SKCJBbnRv
biBBbHRhcGFybWFrb3YgPGFudG9uQHR1eGVyYS5jb20+Iik7Ci1NT0RVTEVfREVTQ1JJUFRJT04o
Ik5URlMgMS4yLzMueCBkcml2ZXIgLSBDb3B5cmlnaHQgKGMpIDIwMDEtMjAxNCBBbnRvbiBBbHRh
cGFybWFrb3YgYW5kIFR1eGVyYSBJbmMuIik7Ci1NT0RVTEVfVkVSU0lPTihOVEZTX1ZFUlNJT04p
OwotTU9EVUxFX0xJQ0VOU0UoIkdQTCIpOwotI2lmZGVmIERFQlVHCi1tb2R1bGVfcGFyYW0oZGVi
dWdfbXNncywgYmludCwgMCk7Ci1NT0RVTEVfUEFSTV9ERVNDKGRlYnVnX21zZ3MsICJFbmFibGUg
ZGVidWcgbWVzc2FnZXMuIik7Ci0jZW5kaWYKLQotbW9kdWxlX2luaXQoaW5pdF9udGZzX2ZzKQot
bW9kdWxlX2V4aXQoZXhpdF9udGZzX2ZzKQpkaWZmIC0tZ2l0IGEvZnMvbnRmcy9zeXNjdGwuYyBi
L2ZzL250ZnMvc3lzY3RsLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDRlOTgwMTcw
ZDg2YS4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250ZnMvc3lzY3RsLmMKKysrIC9kZXYvbnVsbApA
QCAtMSw1OCArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1s
YXRlcgotLyoKLSAqIHN5c2N0bC5jIC0gQ29kZSBmb3Igc3lzY3RsIGhhbmRsaW5nIGluIE5URlMg
TGludXgga2VybmVsIGRyaXZlci4gUGFydCBvZgotICoJICAgICAgdGhlIExpbnV4LU5URlMgcHJv
amVjdC4gQWRhcHRlZCBmcm9tIHRoZSBvbGQgTlRGUyBkcml2ZXIsCi0gKgkgICAgICBDb3B5cmln
aHQgKEMpIDE5OTcgTWFydGluIHZvbiBMw7Z3aXMsIFLDqWdpcyBEdWNoZXNuZQotICoKLSAqIENv
cHlyaWdodCAoYykgMjAwMi0yMDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZmRlZiBE
RUJVRwotCi0jaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+Ci0KLSNpZmRlZiBDT05GSUdfU1lTQ1RM
Ci0KLSNpbmNsdWRlIDxsaW51eC9wcm9jX2ZzLmg+Ci0jaW5jbHVkZSA8bGludXgvc3lzY3RsLmg+
Ci0KLSNpbmNsdWRlICJzeXNjdGwuaCIKLSNpbmNsdWRlICJkZWJ1Zy5oIgotCi0vKiBEZWZpbml0
aW9uIG9mIHRoZSBudGZzIHN5c2N0bC4gKi8KLXN0YXRpYyBzdHJ1Y3QgY3RsX3RhYmxlIG50ZnNf
c3lzY3Rsc1tdID0gewotCXsKLQkJLnByb2NuYW1lCT0gIm50ZnMtZGVidWciLAotCQkuZGF0YQkJ
PSAmZGVidWdfbXNncywJCS8qIERhdGEgcG9pbnRlciBhbmQgc2l6ZS4gKi8KLQkJLm1heGxlbgkJ
PSBzaXplb2YoZGVidWdfbXNncyksCi0JCS5tb2RlCQk9IDA2NDQsCQkJLyogTW9kZSwgcHJvYyBo
YW5kbGVyLiAqLwotCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYwotCX0sCi19OwotCi0v
KiBTdG9yYWdlIGZvciB0aGUgc3lzY3RscyBoZWFkZXIuICovCi1zdGF0aWMgc3RydWN0IGN0bF90
YWJsZV9oZWFkZXIgKnN5c2N0bHNfcm9vdF90YWJsZTsKLQotLyoqCi0gKiBudGZzX3N5c2N0bCAt
IGFkZCBvciByZW1vdmUgdGhlIGRlYnVnIHN5c2N0bAotICogQGFkZDoJYWRkICgxKSBvciByZW1v
dmUgKDApIHRoZSBzeXNjdGwKLSAqCi0gKiBBZGQgb3IgcmVtb3ZlIHRoZSBkZWJ1ZyBzeXNjdGwu
IFJldHVybiAwIG9uIHN1Y2Nlc3Mgb3IgLWVycm5vIG9uIGVycm9yLgotICovCi1pbnQgbnRmc19z
eXNjdGwoaW50IGFkZCkKLXsKLQlpZiAoYWRkKSB7Ci0JCUJVR19PTihzeXNjdGxzX3Jvb3RfdGFi
bGUpOwotCQlzeXNjdGxzX3Jvb3RfdGFibGUgPSByZWdpc3Rlcl9zeXNjdGwoImZzIiwgbnRmc19z
eXNjdGxzKTsKLQkJaWYgKCFzeXNjdGxzX3Jvb3RfdGFibGUpCi0JCQlyZXR1cm4gLUVOT01FTTsK
LQl9IGVsc2UgewotCQlCVUdfT04oIXN5c2N0bHNfcm9vdF90YWJsZSk7Ci0JCXVucmVnaXN0ZXJf
c3lzY3RsX3RhYmxlKHN5c2N0bHNfcm9vdF90YWJsZSk7Ci0JCXN5c2N0bHNfcm9vdF90YWJsZSA9
IE5VTEw7Ci0JfQotCXJldHVybiAwOwotfQotCi0jZW5kaWYgLyogQ09ORklHX1NZU0NUTCAqLwot
I2VuZGlmIC8qIERFQlVHICovCmRpZmYgLS1naXQgYS9mcy9udGZzL3N5c2N0bC5oIGIvZnMvbnRm
cy9zeXNjdGwuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggOTZiYjIyOTlkMmQ1Li4w
MDAwMDAwMDAwMDAKLS0tIGEvZnMvbnRmcy9zeXNjdGwuaAorKysgL2Rldi9udWxsCkBAIC0xLDI3
ICswLDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyICov
Ci0vKgotICogc3lzY3RsLmggLSBEZWZpbmVzIGZvciBzeXNjdGwgaGFuZGxpbmcgaW4gTlRGUyBM
aW51eCBrZXJuZWwgZHJpdmVyLiBQYXJ0IG9mCi0gKgkgICAgICB0aGUgTGludXgtTlRGUyBwcm9q
ZWN0LiBBZGFwdGVkIGZyb20gdGhlIG9sZCBOVEZTIGRyaXZlciwKLSAqCSAgICAgIENvcHlyaWdo
dCAoQykgMTk5NyBNYXJ0aW4gdm9uIEzDtndpcywgUsOpZ2lzIER1Y2hlc25lCi0gKgotICogQ29w
eXJpZ2h0IChjKSAyMDAyLTIwMDQgQW50b24gQWx0YXBhcm1ha292Ci0gKi8KLQotI2lmbmRlZiBf
TElOVVhfTlRGU19TWVNDVExfSAotI2RlZmluZSBfTElOVVhfTlRGU19TWVNDVExfSAotCi0KLSNp
ZiBkZWZpbmVkKERFQlVHKSAmJiBkZWZpbmVkKENPTkZJR19TWVNDVEwpCi0KLWV4dGVybiBpbnQg
bnRmc19zeXNjdGwoaW50IGFkZCk7Ci0KLSNlbHNlCi0KLS8qIEp1c3QgcmV0dXJuIHN1Y2Nlc3Mu
ICovCi1zdGF0aWMgaW5saW5lIGludCBudGZzX3N5c2N0bChpbnQgYWRkKQotewotCXJldHVybiAw
OwotfQotCi0jZW5kaWYgLyogREVCVUcgJiYgQ09ORklHX1NZU0NUTCAqLwotI2VuZGlmIC8qIF9M
SU5VWF9OVEZTX1NZU0NUTF9IICovCmRpZmYgLS1naXQgYS9mcy9udGZzL3RpbWUuaCBiL2ZzL250
ZnMvdGltZS5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA2YjYzMjYxMzAwY2MuLjAw
MDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL3RpbWUuaAorKysgL2Rldi9udWxsCkBAIC0xLDg5ICsw
LDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyICovCi0v
KgotICogdGltZS5oIC0gTlRGUyB0aW1lIGNvbnZlcnNpb24gZnVuY3Rpb25zLiAgUGFydCBvZiB0
aGUgTGludXgtTlRGUyBwcm9qZWN0LgotICoKLSAqIENvcHlyaWdodCAoYykgMjAwMS0yMDA1IEFu
dG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfVElNRV9ICi0jZGVm
aW5lIF9MSU5VWF9OVEZTX1RJTUVfSAotCi0jaW5jbHVkZSA8bGludXgvdGltZS5oPgkJLyogRm9y
IGN1cnJlbnRfa2VybmVsX3RpbWUoKS4gKi8KLSNpbmNsdWRlIDxhc20vZGl2NjQuaD4JCS8qIEZv
ciBkb19kaXYoKS4gKi8KLQotI2luY2x1ZGUgImVuZGlhbi5oIgotCi0jZGVmaW5lIE5URlNfVElN
RV9PRkZTRVQgKChzNjQpKDM2OSAqIDM2NSArIDg5KSAqIDI0ICogMzYwMCAqIDEwMDAwMDAwKQot
Ci0vKioKLSAqIHV0YzJudGZzIC0gY29udmVydCBMaW51eCBVVEMgdGltZSB0byBOVEZTIHRpbWUK
LSAqIEB0czoJCUxpbnV4IFVUQyB0aW1lIHRvIGNvbnZlcnQgdG8gTlRGUyB0aW1lCi0gKgotICog
Q29udmVydCB0aGUgTGludXggVVRDIHRpbWUgQHRzIHRvIGl0cyBjb3JyZXNwb25kaW5nIE5URlMg
dGltZSBhbmQgcmV0dXJuCi0gKiB0aGF0IGluIGxpdHRsZSBlbmRpYW4gZm9ybWF0LgotICoKLSAq
IExpbnV4IHN0b3JlcyB0aW1lIGluIGEgc3RydWN0IHRpbWVzcGVjNjQgY29uc2lzdGluZyBvZiBh
IHRpbWU2NF90IHR2X3NlYwotICogYW5kIGEgbG9uZyB0dl9uc2VjIHdoZXJlIHR2X3NlYyBpcyB0
aGUgbnVtYmVyIG9mIDEtc2Vjb25kIGludGVydmFscyBzaW5jZQotICogMXN0IEphbnVhcnkgMTk3
MCwgMDA6MDA6MDAgVVRDIGFuZCB0dl9uc2VjIGlzIHRoZSBudW1iZXIgb2YgMS1uYW5vLXNlY29u
ZAotICogaW50ZXJ2YWxzIHNpbmNlIHRoZSB2YWx1ZSBvZiB0dl9zZWMuCi0gKgotICogTlRGUyB1
c2VzIE1pY3Jvc29mdCdzIHN0YW5kYXJkIHRpbWUgZm9ybWF0IHdoaWNoIGlzIHN0b3JlZCBpbiBh
IHM2NCBhbmQgaXMKLSAqIG1lYXN1cmVkIGFzIHRoZSBudW1iZXIgb2YgMTAwLW5hbm8tc2Vjb25k
IGludGVydmFscyBzaW5jZSAxc3QgSmFudWFyeSAxNjAxLAotICogMDA6MDA6MDAgVVRDLgotICov
Ci1zdGF0aWMgaW5saW5lIHNsZTY0IHV0YzJudGZzKGNvbnN0IHN0cnVjdCB0aW1lc3BlYzY0IHRz
KQotewotCS8qCi0JICogQ29udmVydCB0aGUgc2Vjb25kcyB0byAxMDBucyBpbnRlcnZhbHMsIGFk
ZCB0aGUgbmFuby1zZWNvbmRzCi0JICogY29udmVydGVkIHRvIDEwMG5zIGludGVydmFscywgYW5k
IHRoZW4gYWRkIHRoZSBOVEZTIHRpbWUgb2Zmc2V0LgotCSAqLwotCXJldHVybiBjcHVfdG9fc2xl
NjQoKHM2NCl0cy50dl9zZWMgKiAxMDAwMDAwMCArIHRzLnR2X25zZWMgLyAxMDAgKwotCQkJTlRG
U19USU1FX09GRlNFVCk7Ci19Ci0KLS8qKgotICogZ2V0X2N1cnJlbnRfbnRmc190aW1lIC0gZ2V0
IHRoZSBjdXJyZW50IHRpbWUgaW4gbGl0dGxlIGVuZGlhbiBOVEZTIGZvcm1hdAotICoKLSAqIEdl
dCB0aGUgY3VycmVudCB0aW1lIGZyb20gdGhlIExpbnV4IGtlcm5lbCwgY29udmVydCBpdCB0byBp
dHMgY29ycmVzcG9uZGluZwotICogTlRGUyB0aW1lIGFuZCByZXR1cm4gdGhhdCBpbiBsaXR0bGUg
ZW5kaWFuIGZvcm1hdC4KLSAqLwotc3RhdGljIGlubGluZSBzbGU2NCBnZXRfY3VycmVudF9udGZz
X3RpbWUodm9pZCkKLXsKLQlzdHJ1Y3QgdGltZXNwZWM2NCB0czsKLQotCWt0aW1lX2dldF9jb2Fy
c2VfcmVhbF90czY0KCZ0cyk7Ci0JcmV0dXJuIHV0YzJudGZzKHRzKTsKLX0KLQotLyoqCi0gKiBu
dGZzMnV0YyAtIGNvbnZlcnQgTlRGUyB0aW1lIHRvIExpbnV4IHRpbWUKLSAqIEB0aW1lOglOVEZT
IHRpbWUgKGxpdHRsZSBlbmRpYW4pIHRvIGNvbnZlcnQgdG8gTGludXggVVRDCi0gKgotICogQ29u
dmVydCB0aGUgbGl0dGxlIGVuZGlhbiBOVEZTIHRpbWUgQHRpbWUgdG8gaXRzIGNvcnJlc3BvbmRp
bmcgTGludXggVVRDCi0gKiB0aW1lIGFuZCByZXR1cm4gdGhhdCBpbiBjcHUgZm9ybWF0LgotICoK
LSAqIExpbnV4IHN0b3JlcyB0aW1lIGluIGEgc3RydWN0IHRpbWVzcGVjNjQgY29uc2lzdGluZyBv
ZiBhIHRpbWU2NF90IHR2X3NlYwotICogYW5kIGEgbG9uZyB0dl9uc2VjIHdoZXJlIHR2X3NlYyBp
cyB0aGUgbnVtYmVyIG9mIDEtc2Vjb25kIGludGVydmFscyBzaW5jZQotICogMXN0IEphbnVhcnkg
MTk3MCwgMDA6MDA6MDAgVVRDIGFuZCB0dl9uc2VjIGlzIHRoZSBudW1iZXIgb2YgMS1uYW5vLXNl
Y29uZAotICogaW50ZXJ2YWxzIHNpbmNlIHRoZSB2YWx1ZSBvZiB0dl9zZWMuCi0gKgotICogTlRG
UyB1c2VzIE1pY3Jvc29mdCdzIHN0YW5kYXJkIHRpbWUgZm9ybWF0IHdoaWNoIGlzIHN0b3JlZCBp
biBhIHM2NCBhbmQgaXMKLSAqIG1lYXN1cmVkIGFzIHRoZSBudW1iZXIgb2YgMTAwIG5hbm8tc2Vj
b25kIGludGVydmFscyBzaW5jZSAxc3QgSmFudWFyeSAxNjAxLAotICogMDA6MDA6MDAgVVRDLgot
ICovCi1zdGF0aWMgaW5saW5lIHN0cnVjdCB0aW1lc3BlYzY0IG50ZnMydXRjKGNvbnN0IHNsZTY0
IHRpbWUpCi17Ci0Jc3RydWN0IHRpbWVzcGVjNjQgdHM7Ci0KLQkvKiBTdWJ0cmFjdCB0aGUgTlRG
UyB0aW1lIG9mZnNldC4gKi8KLQl1NjQgdCA9ICh1NjQpKHNsZTY0X3RvX2NwdSh0aW1lKSAtIE5U
RlNfVElNRV9PRkZTRVQpOwotCS8qCi0JICogQ29udmVydCB0aGUgdGltZSB0byAxLXNlY29uZCBp
bnRlcnZhbHMgYW5kIHRoZSByZW1haW5kZXIgdG8KLQkgKiAxLW5hbm8tc2Vjb25kIGludGVydmFs
cy4KLQkgKi8KLQl0cy50dl9uc2VjID0gZG9fZGl2KHQsIDEwMDAwMDAwKSAqIDEwMDsKLQl0cy50
dl9zZWMgPSB0OwotCXJldHVybiB0czsKLX0KLQotI2VuZGlmIC8qIF9MSU5VWF9OVEZTX1RJTUVf
SCAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmcy90eXBlcy5oIGIvZnMvbnRmcy90eXBlcy5oCmRlbGV0
ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA5YTQ3ODU5ZTdhMDYuLjAwMDAwMDAwMDAwMAotLS0g
YS9mcy9udGZzL3R5cGVzLmgKKysrIC9kZXYvbnVsbApAQCAtMSw1NSArMCwwIEBACi0vKiBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlciAqLwotLyoKLSAqIHR5cGVzLmgg
LSBEZWZpbmVzIGZvciBOVEZTIExpbnV4IGtlcm5lbCBkcml2ZXIgc3BlY2lmaWMgdHlwZXMuCi0g
KgkgICAgIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4KLSAqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDEtMjAwNSBBbnRvbiBBbHRhcGFybWFrb3YKLSAqLwotCi0jaWZuZGVmIF9MSU5VWF9O
VEZTX1RZUEVTX0gKLSNkZWZpbmUgX0xJTlVYX05URlNfVFlQRVNfSAotCi0jaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KLQotdHlwZWRlZiBfX2xlMTYgbGUxNjsKLXR5cGVkZWYgX19sZTMyIGxlMzI7
Ci10eXBlZGVmIF9fbGU2NCBsZTY0OwotdHlwZWRlZiBfX3UxNiBfX2JpdHdpc2Ugc2xlMTY7Ci10
eXBlZGVmIF9fdTMyIF9fYml0d2lzZSBzbGUzMjsKLXR5cGVkZWYgX191NjQgX19iaXR3aXNlIHNs
ZTY0OwotCi0vKiAyLWJ5dGUgVW5pY29kZSBjaGFyYWN0ZXIgdHlwZS4gKi8KLXR5cGVkZWYgbGUx
NiBudGZzY2hhcjsKLSNkZWZpbmUgVUNIQVJfVF9TSVpFX0JJVFMgMQotCi0vKgotICogQ2x1c3Rl
cnMgYXJlIHNpZ25lZCA2NC1iaXQgdmFsdWVzIG9uIE5URlMgdm9sdW1lcy4gV2UgZGVmaW5lIHR3
byB0eXBlcywgTENOCi0gKiBhbmQgVkNOLCB0byBhbGxvdyBmb3IgdHlwZSBjaGVja2luZyBhbmQg
YmV0dGVyIGNvZGUgcmVhZGFiaWxpdHkuCi0gKi8KLXR5cGVkZWYgczY0IFZDTjsKLXR5cGVkZWYg
c2xlNjQgbGVWQ047Ci10eXBlZGVmIHM2NCBMQ047Ci10eXBlZGVmIHNsZTY0IGxlTENOOwotCi0v
KgotICogVGhlIE5URlMgam91cm5hbCAkTG9nRmlsZSB1c2VzIGxvZyBzZXF1ZW5jZSBudW1iZXJz
IHdoaWNoIGFyZSBzaWduZWQgNjQtYml0Ci0gKiB2YWx1ZXMuICBXZSBkZWZpbmUgb3VyIG93biB0
eXBlIExTTiwgdG8gYWxsb3cgZm9yIHR5cGUgY2hlY2tpbmcgYW5kIGJldHRlcgotICogY29kZSBy
ZWFkYWJpbGl0eS4KLSAqLwotdHlwZWRlZiBzNjQgTFNOOwotdHlwZWRlZiBzbGU2NCBsZUxTTjsK
LQotLyoKLSAqIFRoZSBOVEZTIHRyYW5zYWN0aW9uIGxvZyAkVXNuSnJubCB1c2VzIHVzbiB3aGlj
aCBhcmUgc2lnbmVkIDY0LWJpdCB2YWx1ZXMuCi0gKiBXZSBkZWZpbmUgb3VyIG93biB0eXBlIFVT
TiwgdG8gYWxsb3cgZm9yIHR5cGUgY2hlY2tpbmcgYW5kIGJldHRlciBjb2RlCi0gKiByZWFkYWJp
bGl0eS4KLSAqLwotdHlwZWRlZiBzNjQgVVNOOwotdHlwZWRlZiBzbGU2NCBsZVVTTjsKLQotdHlw
ZWRlZiBlbnVtIHsKLQlDQVNFX1NFTlNJVElWRSA9IDAsCi0JSUdOT1JFX0NBU0UgPSAxLAotfSBJ
R05PUkVfQ0FTRV9CT09MOwotCi0jZW5kaWYgLyogX0xJTlVYX05URlNfVFlQRVNfSCAqLwpkaWZm
IC0tZ2l0IGEvZnMvbnRmcy91bmlzdHIuYyBiL2ZzL250ZnMvdW5pc3RyLmMKZGVsZXRlZCBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IGE2YjZjNjRmMTRhOS4uMDAwMDAwMDAwMDAwCi0tLSBhL2ZzL250
ZnMvdW5pc3RyLmMKKysrIC9kZXYvbnVsbApAQCAtMSwzODQgKzAsMCBAQAotLy8gU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0gKiB1bmlzdHIuYyAtIE5URlMg
VW5pY29kZSBzdHJpbmcgaGFuZGxpbmcuIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4K
LSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAwNiBBbnRvbiBBbHRhcGFybWFrb3YKLSAqLwot
Ci0jaW5jbHVkZSA8bGludXgvc2xhYi5oPgotCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRl
ICJkZWJ1Zy5oIgotI2luY2x1ZGUgIm50ZnMuaCIKLQotLyoKLSAqIElNUE9SVEFOVAotICogPT09
PT09PT09Ci0gKgotICogQWxsIHRoZXNlIHJvdXRpbmVzIGFzc3VtZSB0aGF0IHRoZSBVbmljb2Rl
IGNoYXJhY3RlcnMgYXJlIGluIGxpdHRsZSBlbmRpYW4KLSAqIGVuY29kaW5nIGluc2lkZSB0aGUg
c3RyaW5ncyEhIQotICovCi0KLS8qCi0gKiBUaGlzIGlzIHVzZWQgYnkgdGhlIG5hbWUgY29sbGF0
aW9uIGZ1bmN0aW9ucyB0byBxdWlja2x5IGRldGVybWluZSB3aGF0Ci0gKiBjaGFyYWN0ZXJzIGFy
ZSAoaW4pdmFsaWQuCi0gKi8KLXN0YXRpYyBjb25zdCB1OCBsZWdhbF9hbnNpX2NoYXJfYXJyYXlb
MHg0MF0gPSB7Ci0JMHgwMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgx
MCwKLQkweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLAotCi0J
MHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwgMHgxMCwKLQkweDEwLCAw
eDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLCAweDEwLAotCi0JMHgxNywgMHgwNywg
MHgxOCwgMHgxNywgMHgxNywgMHgxNywgMHgxNywgMHgxNywKLQkweDE3LCAweDE3LCAweDE4LCAw
eDE2LCAweDE2LCAweDE3LCAweDA3LCAweDAwLAotCi0JMHgxNywgMHgxNywgMHgxNywgMHgxNywg
MHgxNywgMHgxNywgMHgxNywgMHgxNywKLQkweDE3LCAweDE3LCAweDA0LCAweDE2LCAweDE4LCAw
eDE2LCAweDE4LCAweDE4LAotfTsKLQotLyoqCi0gKiBudGZzX2FyZV9uYW1lc19lcXVhbCAtIGNv
bXBhcmUgdHdvIFVuaWNvZGUgbmFtZXMgZm9yIGVxdWFsaXR5Ci0gKiBAczE6CQkJbmFtZSB0byBj
b21wYXJlIHRvIEBzMgotICogQHMxX2xlbjoJCWxlbmd0aCBpbiBVbmljb2RlIGNoYXJhY3RlcnMg
b2YgQHMxCi0gKiBAczI6CQkJbmFtZSB0byBjb21wYXJlIHRvIEBzMQotICogQHMyX2xlbjoJCWxl
bmd0aCBpbiBVbmljb2RlIGNoYXJhY3RlcnMgb2YgQHMyCi0gKiBAaWM6CQkJaWdub3JlIGNhc2Ug
Ym9vbAotICogQHVwY2FzZToJCXVwY2FzZSB0YWJsZSAob25seSBpZiBAaWMgPT0gSUdOT1JFX0NB
U0UpCi0gKiBAdXBjYXNlX3NpemU6CWxlbmd0aCBpbiBVbmljb2RlIGNoYXJhY3RlcnMgb2YgQHVw
Y2FzZSAoaWYgcHJlc2VudCkKLSAqCi0gKiBDb21wYXJlIHRoZSBuYW1lcyBAczEgYW5kIEBzMiBh
bmQgcmV0dXJuICd0cnVlJyAoMSkgaWYgdGhlIG5hbWVzIGFyZQotICogaWRlbnRpY2FsLCBvciAn
ZmFsc2UnICgwKSBpZiB0aGV5IGFyZSBub3QgaWRlbnRpY2FsLiBJZiBAaWMgaXMgSUdOT1JFX0NB
U0UsCi0gKiB0aGUgQHVwY2FzZSB0YWJsZSBpcyB1c2VkIHRvIHBlcmZvcm1hIGEgY2FzZSBpbnNl
bnNpdGl2ZSBjb21wYXJpc29uLgotICovCi1ib29sIG50ZnNfYXJlX25hbWVzX2VxdWFsKGNvbnN0
IG50ZnNjaGFyICpzMSwgc2l6ZV90IHMxX2xlbiwKLQkJY29uc3QgbnRmc2NoYXIgKnMyLCBzaXpl
X3QgczJfbGVuLCBjb25zdCBJR05PUkVfQ0FTRV9CT09MIGljLAotCQljb25zdCBudGZzY2hhciAq
dXBjYXNlLCBjb25zdCB1MzIgdXBjYXNlX3NpemUpCi17Ci0JaWYgKHMxX2xlbiAhPSBzMl9sZW4p
Ci0JCXJldHVybiBmYWxzZTsKLQlpZiAoaWMgPT0gQ0FTRV9TRU5TSVRJVkUpCi0JCXJldHVybiAh
bnRmc191Y3NuY21wKHMxLCBzMiwgczFfbGVuKTsKLQlyZXR1cm4gIW50ZnNfdWNzbmNhc2VjbXAo
czEsIHMyLCBzMV9sZW4sIHVwY2FzZSwgdXBjYXNlX3NpemUpOwotfQotCi0vKioKLSAqIG50ZnNf
Y29sbGF0ZV9uYW1lcyAtIGNvbGxhdGUgdHdvIFVuaWNvZGUgbmFtZXMKLSAqIEBuYW1lMToJZmly
c3QgVW5pY29kZSBuYW1lIHRvIGNvbXBhcmUKLSAqIEBuYW1lMjoJc2Vjb25kIFVuaWNvZGUgbmFt
ZSB0byBjb21wYXJlCi0gKiBAZXJyX3ZhbDoJaWYgQG5hbWUxIGNvbnRhaW5zIGFuIGludmFsaWQg
Y2hhcmFjdGVyIHJldHVybiB0aGlzIHZhbHVlCi0gKiBAaWM6CQllaXRoZXIgQ0FTRV9TRU5TSVRJ
VkUgb3IgSUdOT1JFX0NBU0UKLSAqIEB1cGNhc2U6CXVwY2FzZSB0YWJsZSAoaWdub3JlZCBpZiBA
aWMgaXMgQ0FTRV9TRU5TSVRJVkUpCi0gKiBAdXBjYXNlX2xlbjoJdXBjYXNlIHRhYmxlIHNpemUg
KGlnbm9yZWQgaWYgQGljIGlzIENBU0VfU0VOU0lUSVZFKQotICoKLSAqIG50ZnNfY29sbGF0ZV9u
YW1lcyBjb2xsYXRlcyB0d28gVW5pY29kZSBuYW1lcyBhbmQgcmV0dXJuczoKLSAqCi0gKiAgLTEg
aWYgdGhlIGZpcnN0IG5hbWUgY29sbGF0ZXMgYmVmb3JlIHRoZSBzZWNvbmQgb25lLAotICogICAw
IGlmIHRoZSBuYW1lcyBtYXRjaCwKLSAqICAgMSBpZiB0aGUgc2Vjb25kIG5hbWUgY29sbGF0ZXMg
YmVmb3JlIHRoZSBmaXJzdCBvbmUsIG9yCi0gKiBAZXJyX3ZhbCBpZiBhbiBpbnZhbGlkIGNoYXJh
Y3RlciBpcyBmb3VuZCBpbiBAbmFtZTEgZHVyaW5nIHRoZSBjb21wYXJpc29uLgotICoKLSAqIFRo
ZSBmb2xsb3dpbmcgY2hhcmFjdGVycyBhcmUgY29uc2lkZXJlZCBpbnZhbGlkOiAnIicsICcqJywg
JzwnLCAnPicgYW5kICc/Jy4KLSAqLwotaW50IG50ZnNfY29sbGF0ZV9uYW1lcyhjb25zdCBudGZz
Y2hhciAqbmFtZTEsIGNvbnN0IHUzMiBuYW1lMV9sZW4sCi0JCWNvbnN0IG50ZnNjaGFyICpuYW1l
MiwgY29uc3QgdTMyIG5hbWUyX2xlbiwKLQkJY29uc3QgaW50IGVycl92YWwsIGNvbnN0IElHTk9S
RV9DQVNFX0JPT0wgaWMsCi0JCWNvbnN0IG50ZnNjaGFyICp1cGNhc2UsIGNvbnN0IHUzMiB1cGNh
c2VfbGVuKQotewotCXUzMiBjbnQsIG1pbl9sZW47Ci0JdTE2IGMxLCBjMjsKLQotCW1pbl9sZW4g
PSBuYW1lMV9sZW47Ci0JaWYgKG5hbWUxX2xlbiA+IG5hbWUyX2xlbikKLQkJbWluX2xlbiA9IG5h
bWUyX2xlbjsKLQlmb3IgKGNudCA9IDA7IGNudCA8IG1pbl9sZW47ICsrY250KSB7Ci0JCWMxID0g
bGUxNl90b19jcHUoKm5hbWUxKyspOwotCQljMiA9IGxlMTZfdG9fY3B1KCpuYW1lMisrKTsKLQkJ
aWYgKGljKSB7Ci0JCQlpZiAoYzEgPCB1cGNhc2VfbGVuKQotCQkJCWMxID0gbGUxNl90b19jcHUo
dXBjYXNlW2MxXSk7Ci0JCQlpZiAoYzIgPCB1cGNhc2VfbGVuKQotCQkJCWMyID0gbGUxNl90b19j
cHUodXBjYXNlW2MyXSk7Ci0JCX0KLQkJaWYgKGMxIDwgNjQgJiYgbGVnYWxfYW5zaV9jaGFyX2Fy
cmF5W2MxXSAmIDgpCi0JCQlyZXR1cm4gZXJyX3ZhbDsKLQkJaWYgKGMxIDwgYzIpCi0JCQlyZXR1
cm4gLTE7Ci0JCWlmIChjMSA+IGMyKQotCQkJcmV0dXJuIDE7Ci0JfQotCWlmIChuYW1lMV9sZW4g
PCBuYW1lMl9sZW4pCi0JCXJldHVybiAtMTsKLQlpZiAobmFtZTFfbGVuID09IG5hbWUyX2xlbikK
LQkJcmV0dXJuIDA7Ci0JLyogbmFtZTFfbGVuID4gbmFtZTJfbGVuICovCi0JYzEgPSBsZTE2X3Rv
X2NwdSgqbmFtZTEpOwotCWlmIChjMSA8IDY0ICYmIGxlZ2FsX2Fuc2lfY2hhcl9hcnJheVtjMV0g
JiA4KQotCQlyZXR1cm4gZXJyX3ZhbDsKLQlyZXR1cm4gMTsKLX0KLQotLyoqCi0gKiBudGZzX3Vj
c25jbXAgLSBjb21wYXJlIHR3byBsaXR0bGUgZW5kaWFuIFVuaWNvZGUgc3RyaW5ncwotICogQHMx
OgkJZmlyc3Qgc3RyaW5nCi0gKiBAczI6CQlzZWNvbmQgc3RyaW5nCi0gKiBAbjoJCW1heGltdW0g
dW5pY29kZSBjaGFyYWN0ZXJzIHRvIGNvbXBhcmUKLSAqCi0gKiBDb21wYXJlIHRoZSBmaXJzdCBA
biBjaGFyYWN0ZXJzIG9mIHRoZSBVbmljb2RlIHN0cmluZ3MgQHMxIGFuZCBAczIsCi0gKiBUaGUg
c3RyaW5ncyBpbiBsaXR0bGUgZW5kaWFuIGZvcm1hdCBhbmQgYXBwcm9wcmlhdGUgbGUxNl90b19j
cHUoKQotICogY29udmVyc2lvbiBpcyBwZXJmb3JtZWQgb24gbm9uLWxpdHRsZSBlbmRpYW4gbWFj
aGluZXMuCi0gKgotICogVGhlIGZ1bmN0aW9uIHJldHVybnMgYW4gaW50ZWdlciBsZXNzIHRoYW4s
IGVxdWFsIHRvLCBvciBncmVhdGVyIHRoYW4gemVybwotICogaWYgQHMxIChvciB0aGUgZmlyc3Qg
QG4gVW5pY29kZSBjaGFyYWN0ZXJzIHRoZXJlb2YpIGlzIGZvdW5kLCByZXNwZWN0aXZlbHksCi0g
KiB0byBiZSBsZXNzIHRoYW4sIHRvIG1hdGNoLCBvciBiZSBncmVhdGVyIHRoYW4gQHMyLgotICov
Ci1pbnQgbnRmc191Y3NuY21wKGNvbnN0IG50ZnNjaGFyICpzMSwgY29uc3QgbnRmc2NoYXIgKnMy
LCBzaXplX3QgbikKLXsKLQl1MTYgYzEsIGMyOwotCXNpemVfdCBpOwotCi0JZm9yIChpID0gMDsg
aSA8IG47ICsraSkgewotCQljMSA9IGxlMTZfdG9fY3B1KHMxW2ldKTsKLQkJYzIgPSBsZTE2X3Rv
X2NwdShzMltpXSk7Ci0JCWlmIChjMSA8IGMyKQotCQkJcmV0dXJuIC0xOwotCQlpZiAoYzEgPiBj
MikKLQkJCXJldHVybiAxOwotCQlpZiAoIWMxKQotCQkJYnJlYWs7Ci0JfQotCXJldHVybiAwOwot
fQotCi0vKioKLSAqIG50ZnNfdWNzbmNhc2VjbXAgLSBjb21wYXJlIHR3byBsaXR0bGUgZW5kaWFu
IFVuaWNvZGUgc3RyaW5ncywgaWdub3JpbmcgY2FzZQotICogQHMxOgkJCWZpcnN0IHN0cmluZwot
ICogQHMyOgkJCXNlY29uZCBzdHJpbmcKLSAqIEBuOgkJCW1heGltdW0gdW5pY29kZSBjaGFyYWN0
ZXJzIHRvIGNvbXBhcmUKLSAqIEB1cGNhc2U6CQl1cGNhc2UgdGFibGUKLSAqIEB1cGNhc2Vfc2l6
ZToJdXBjYXNlIHRhYmxlIHNpemUgaW4gVW5pY29kZSBjaGFyYWN0ZXJzCi0gKgotICogQ29tcGFy
ZSB0aGUgZmlyc3QgQG4gY2hhcmFjdGVycyBvZiB0aGUgVW5pY29kZSBzdHJpbmdzIEBzMSBhbmQg
QHMyLAotICogaWdub3JpbmcgY2FzZS4gVGhlIHN0cmluZ3MgaW4gbGl0dGxlIGVuZGlhbiBmb3Jt
YXQgYW5kIGFwcHJvcHJpYXRlCi0gKiBsZTE2X3RvX2NwdSgpIGNvbnZlcnNpb24gaXMgcGVyZm9y
bWVkIG9uIG5vbi1saXR0bGUgZW5kaWFuIG1hY2hpbmVzLgotICoKLSAqIEVhY2ggY2hhcmFjdGVy
IGlzIHVwcGVyY2FzZWQgdXNpbmcgdGhlIEB1cGNhc2UgdGFibGUgYmVmb3JlIHRoZSBjb21wYXJp
c29uLgotICoKLSAqIFRoZSBmdW5jdGlvbiByZXR1cm5zIGFuIGludGVnZXIgbGVzcyB0aGFuLCBl
cXVhbCB0bywgb3IgZ3JlYXRlciB0aGFuIHplcm8KLSAqIGlmIEBzMSAob3IgdGhlIGZpcnN0IEBu
IFVuaWNvZGUgY2hhcmFjdGVycyB0aGVyZW9mKSBpcyBmb3VuZCwgcmVzcGVjdGl2ZWx5LAotICog
dG8gYmUgbGVzcyB0aGFuLCB0byBtYXRjaCwgb3IgYmUgZ3JlYXRlciB0aGFuIEBzMi4KLSAqLwot
aW50IG50ZnNfdWNzbmNhc2VjbXAoY29uc3QgbnRmc2NoYXIgKnMxLCBjb25zdCBudGZzY2hhciAq
czIsIHNpemVfdCBuLAotCQljb25zdCBudGZzY2hhciAqdXBjYXNlLCBjb25zdCB1MzIgdXBjYXNl
X3NpemUpCi17Ci0Jc2l6ZV90IGk7Ci0JdTE2IGMxLCBjMjsKLQotCWZvciAoaSA9IDA7IGkgPCBu
OyArK2kpIHsKLQkJaWYgKChjMSA9IGxlMTZfdG9fY3B1KHMxW2ldKSkgPCB1cGNhc2Vfc2l6ZSkK
LQkJCWMxID0gbGUxNl90b19jcHUodXBjYXNlW2MxXSk7Ci0JCWlmICgoYzIgPSBsZTE2X3RvX2Nw
dShzMltpXSkpIDwgdXBjYXNlX3NpemUpCi0JCQljMiA9IGxlMTZfdG9fY3B1KHVwY2FzZVtjMl0p
OwotCQlpZiAoYzEgPCBjMikKLQkJCXJldHVybiAtMTsKLQkJaWYgKGMxID4gYzIpCi0JCQlyZXR1
cm4gMTsKLQkJaWYgKCFjMSkKLQkJCWJyZWFrOwotCX0KLQlyZXR1cm4gMDsKLX0KLQotdm9pZCBu
dGZzX3VwY2FzZV9uYW1lKG50ZnNjaGFyICpuYW1lLCB1MzIgbmFtZV9sZW4sIGNvbnN0IG50ZnNj
aGFyICp1cGNhc2UsCi0JCWNvbnN0IHUzMiB1cGNhc2VfbGVuKQotewotCXUzMiBpOwotCXUxNiB1
OwotCi0JZm9yIChpID0gMDsgaSA8IG5hbWVfbGVuOyBpKyspCi0JCWlmICgodSA9IGxlMTZfdG9f
Y3B1KG5hbWVbaV0pKSA8IHVwY2FzZV9sZW4pCi0JCQluYW1lW2ldID0gdXBjYXNlW3VdOwotfQot
Ci12b2lkIG50ZnNfZmlsZV91cGNhc2VfdmFsdWUoRklMRV9OQU1FX0FUVFIgKmZpbGVfbmFtZV9h
dHRyLAotCQljb25zdCBudGZzY2hhciAqdXBjYXNlLCBjb25zdCB1MzIgdXBjYXNlX2xlbikKLXsK
LQludGZzX3VwY2FzZV9uYW1lKChudGZzY2hhciopJmZpbGVfbmFtZV9hdHRyLT5maWxlX25hbWUs
Ci0JCQlmaWxlX25hbWVfYXR0ci0+ZmlsZV9uYW1lX2xlbmd0aCwgdXBjYXNlLCB1cGNhc2VfbGVu
KTsKLX0KLQotaW50IG50ZnNfZmlsZV9jb21wYXJlX3ZhbHVlcyhGSUxFX05BTUVfQVRUUiAqZmls
ZV9uYW1lX2F0dHIxLAotCQlGSUxFX05BTUVfQVRUUiAqZmlsZV9uYW1lX2F0dHIyLAotCQljb25z
dCBpbnQgZXJyX3ZhbCwgY29uc3QgSUdOT1JFX0NBU0VfQk9PTCBpYywKLQkJY29uc3QgbnRmc2No
YXIgKnVwY2FzZSwgY29uc3QgdTMyIHVwY2FzZV9sZW4pCi17Ci0JcmV0dXJuIG50ZnNfY29sbGF0
ZV9uYW1lcygobnRmc2NoYXIqKSZmaWxlX25hbWVfYXR0cjEtPmZpbGVfbmFtZSwKLQkJCWZpbGVf
bmFtZV9hdHRyMS0+ZmlsZV9uYW1lX2xlbmd0aCwKLQkJCShudGZzY2hhciopJmZpbGVfbmFtZV9h
dHRyMi0+ZmlsZV9uYW1lLAotCQkJZmlsZV9uYW1lX2F0dHIyLT5maWxlX25hbWVfbGVuZ3RoLAot
CQkJZXJyX3ZhbCwgaWMsIHVwY2FzZSwgdXBjYXNlX2xlbik7Ci19Ci0KLS8qKgotICogbnRmc19u
bHN0b3VjcyAtIGNvbnZlcnQgTkxTIHN0cmluZyB0byBsaXR0bGUgZW5kaWFuIFVuaWNvZGUgc3Ry
aW5nCi0gKiBAdm9sOgludGZzIHZvbHVtZSB3aGljaCB3ZSBhcmUgd29ya2luZyB3aXRoCi0gKiBA
aW5zOglpbnB1dCBOTFMgc3RyaW5nIGJ1ZmZlcgotICogQGluc19sZW46CWxlbmd0aCBvZiBpbnB1
dCBzdHJpbmcgaW4gYnl0ZXMKLSAqIEBvdXRzOglvbiByZXR1cm4gY29udGFpbnMgdGhlIGFsbG9j
YXRlZCBvdXRwdXQgVW5pY29kZSBzdHJpbmcgYnVmZmVyCi0gKgotICogQ29udmVydCB0aGUgaW5w
dXQgc3RyaW5nIEBpbnMsIHdoaWNoIGlzIGluIHdoYXRldmVyIGZvcm1hdCB0aGUgbG9hZGVkIE5M
UwotICogbWFwIGRpY3RhdGVzLCBpbnRvIGEgbGl0dGxlIGVuZGlhbiwgMi1ieXRlIFVuaWNvZGUg
c3RyaW5nLgotICoKLSAqIFRoaXMgZnVuY3Rpb24gYWxsb2NhdGVzIHRoZSBzdHJpbmcgYW5kIHRo
ZSBjYWxsZXIgaXMgcmVzcG9uc2libGUgZm9yCi0gKiBjYWxsaW5nIGttZW1fY2FjaGVfZnJlZShu
dGZzX25hbWVfY2FjaGUsICpAb3V0cyk7IHdoZW4gZmluaXNoZWQgd2l0aCBpdC4KLSAqCi0gKiBP
biBzdWNjZXNzIHRoZSBmdW5jdGlvbiByZXR1cm5zIHRoZSBudW1iZXIgb2YgVW5pY29kZSBjaGFy
YWN0ZXJzIHdyaXR0ZW4gdG8KLSAqIHRoZSBvdXRwdXQgc3RyaW5nICpAb3V0cyAoPj0gMCksIG5v
dCBjb3VudGluZyB0aGUgdGVybWluYXRpbmcgVW5pY29kZSBOVUxMCi0gKiBjaGFyYWN0ZXIuICpA
b3V0cyBpcyBzZXQgdG8gdGhlIGFsbG9jYXRlZCBvdXRwdXQgc3RyaW5nIGJ1ZmZlci4KLSAqCi0g
KiBPbiBlcnJvciwgYSBuZWdhdGl2ZSBudW1iZXIgY29ycmVzcG9uZGluZyB0byB0aGUgZXJyb3Ig
Y29kZSBpcyByZXR1cm5lZC4gSW4KLSAqIHRoYXQgY2FzZSB0aGUgb3V0cHV0IHN0cmluZyBpcyBu
b3QgYWxsb2NhdGVkLiBCb3RoICpAb3V0cyBhbmQgKkBvdXRzX2xlbgotICogYXJlIHRoZW4gdW5k
ZWZpbmVkLgotICoKLSAqIFRoaXMgbWlnaHQgbG9vayBhIGJpdCBvZGQgZHVlIHRvIGZhc3QgcGF0
aCBvcHRpbWl6YXRpb24uLi4KLSAqLwotaW50IG50ZnNfbmxzdG91Y3MoY29uc3QgbnRmc192b2x1
bWUgKnZvbCwgY29uc3QgY2hhciAqaW5zLAotCQljb25zdCBpbnQgaW5zX2xlbiwgbnRmc2NoYXIg
KipvdXRzKQotewotCXN0cnVjdCBubHNfdGFibGUgKm5scyA9IHZvbC0+bmxzX21hcDsKLQludGZz
Y2hhciAqdWNzOwotCXdjaGFyX3Qgd2M7Ci0JaW50IGksIG8sIHdjX2xlbjsKLQotCS8qIFdlIGRv
IG5vdCB0cnVzdCBvdXRzaWRlIHNvdXJjZXMuICovCi0JaWYgKGxpa2VseShpbnMpKSB7Ci0JCXVj
cyA9IGttZW1fY2FjaGVfYWxsb2MobnRmc19uYW1lX2NhY2hlLCBHRlBfTk9GUyk7Ci0JCWlmIChs
aWtlbHkodWNzKSkgewotCQkJZm9yIChpID0gbyA9IDA7IGkgPCBpbnNfbGVuOyBpICs9IHdjX2xl
bikgewotCQkJCXdjX2xlbiA9IG5scy0+Y2hhcjJ1bmkoaW5zICsgaSwgaW5zX2xlbiAtIGksCi0J
CQkJCQkmd2MpOwotCQkJCWlmIChsaWtlbHkod2NfbGVuID49IDAgJiYKLQkJCQkJCW8gPCBOVEZT
X01BWF9OQU1FX0xFTikpIHsKLQkJCQkJaWYgKGxpa2VseSh3YykpIHsKLQkJCQkJCXVjc1tvKytd
ID0gY3B1X3RvX2xlMTYod2MpOwotCQkJCQkJY29udGludWU7Ci0JCQkJCX0gLyogZWxzZSBpZiAo
IXdjKSAqLwotCQkJCQlicmVhazsKLQkJCQl9IC8qIGVsc2UgaWYgKHdjX2xlbiA8IDAgfHwKLQkJ
CQkJCW8gPj0gTlRGU19NQVhfTkFNRV9MRU4pICovCi0JCQkJZ290byBuYW1lX2VycjsKLQkJCX0K
LQkJCXVjc1tvXSA9IDA7Ci0JCQkqb3V0cyA9IHVjczsKLQkJCXJldHVybiBvOwotCQl9IC8qIGVs
c2UgaWYgKCF1Y3MpICovCi0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIkZhaWxlZCB0byBhbGxvY2F0
ZSBidWZmZXIgZm9yIGNvbnZlcnRlZCAiCi0JCQkJIm5hbWUgZnJvbSBudGZzX25hbWVfY2FjaGUu
Iik7Ci0JCXJldHVybiAtRU5PTUVNOwotCX0gLyogZWxzZSBpZiAoIWlucykgKi8KLQludGZzX2Vy
cm9yKHZvbC0+c2IsICJSZWNlaXZlZCBOVUxMIHBvaW50ZXIuIik7Ci0JcmV0dXJuIC1FSU5WQUw7
Ci1uYW1lX2VycjoKLQlrbWVtX2NhY2hlX2ZyZWUobnRmc19uYW1lX2NhY2hlLCB1Y3MpOwotCWlm
ICh3Y19sZW4gPCAwKSB7Ci0JCW50ZnNfZXJyb3Iodm9sLT5zYiwgIk5hbWUgdXNpbmcgY2hhcmFj
dGVyIHNldCAlcyBjb250YWlucyAiCi0JCQkJImNoYXJhY3RlcnMgdGhhdCBjYW5ub3QgYmUgY29u
dmVydGVkIHRvICIKLQkJCQkiVW5pY29kZS4iLCBubHMtPmNoYXJzZXQpOwotCQlpID0gLUVJTFNF
UTsKLQl9IGVsc2UgLyogaWYgKG8gPj0gTlRGU19NQVhfTkFNRV9MRU4pICovIHsKLQkJbnRmc19l
cnJvcih2b2wtPnNiLCAiTmFtZSBpcyB0b28gbG9uZyAobWF4aW11bSBsZW5ndGggZm9yIGEgIgot
CQkJCSJuYW1lIG9uIE5URlMgaXMgJWQgVW5pY29kZSBjaGFyYWN0ZXJzLiIsCi0JCQkJTlRGU19N
QVhfTkFNRV9MRU4pOwotCQlpID0gLUVOQU1FVE9PTE9ORzsKLQl9Ci0JcmV0dXJuIGk7Ci19Ci0K
LS8qKgotICogbnRmc191Y3N0b25scyAtIGNvbnZlcnQgbGl0dGxlIGVuZGlhbiBVbmljb2RlIHN0
cmluZyB0byBOTFMgc3RyaW5nCi0gKiBAdm9sOgludGZzIHZvbHVtZSB3aGljaCB3ZSBhcmUgd29y
a2luZyB3aXRoCi0gKiBAaW5zOglpbnB1dCBVbmljb2RlIHN0cmluZyBidWZmZXIKLSAqIEBpbnNf
bGVuOglsZW5ndGggb2YgaW5wdXQgc3RyaW5nIGluIFVuaWNvZGUgY2hhcmFjdGVycwotICogQG91
dHM6CW9uIHJldHVybiBjb250YWlucyB0aGUgKGFsbG9jYXRlZCkgb3V0cHV0IE5MUyBzdHJpbmcg
YnVmZmVyCi0gKiBAb3V0c19sZW46CWxlbmd0aCBvZiBvdXRwdXQgc3RyaW5nIGJ1ZmZlciBpbiBi
eXRlcwotICoKLSAqIENvbnZlcnQgdGhlIGlucHV0IGxpdHRsZSBlbmRpYW4sIDItYnl0ZSBVbmlj
b2RlIHN0cmluZyBAaW5zLCBvZiBsZW5ndGgKLSAqIEBpbnNfbGVuIGludG8gdGhlIHN0cmluZyBm
b3JtYXQgZGljdGF0ZWQgYnkgdGhlIGxvYWRlZCBOTFMuCi0gKgotICogSWYgKkBvdXRzIGlzIE5V
TEwsIHRoaXMgZnVuY3Rpb24gYWxsb2NhdGVzIHRoZSBzdHJpbmcgYW5kIHRoZSBjYWxsZXIgaXMK
LSAqIHJlc3BvbnNpYmxlIGZvciBjYWxsaW5nIGtmcmVlKCpAb3V0cyk7IHdoZW4gZmluaXNoZWQg
d2l0aCBpdC4gSW4gdGhpcyBjYXNlCi0gKiBAb3V0c19sZW4gaXMgaWdub3JlZCBhbmQgY2FuIGJl
IDAuCi0gKgotICogT24gc3VjY2VzcyB0aGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgbnVtYmVyIG9m
IGJ5dGVzIHdyaXR0ZW4gdG8gdGhlIG91dHB1dAotICogc3RyaW5nICpAb3V0cyAoPj0gMCksIG5v
dCBjb3VudGluZyB0aGUgdGVybWluYXRpbmcgTlVMTCBieXRlLiBJZiB0aGUgb3V0cHV0Ci0gKiBz
dHJpbmcgYnVmZmVyIHdhcyBhbGxvY2F0ZWQsICpAb3V0cyBpcyBzZXQgdG8gaXQuCi0gKgotICog
T24gZXJyb3IsIGEgbmVnYXRpdmUgbnVtYmVyIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGVycm9yIGNv
ZGUgaXMgcmV0dXJuZWQuIEluCi0gKiB0aGF0IGNhc2UgdGhlIG91dHB1dCBzdHJpbmcgaXMgbm90
IGFsbG9jYXRlZC4gVGhlIGNvbnRlbnRzIG9mICpAb3V0cyBhcmUKLSAqIHRoZW4gdW5kZWZpbmVk
LgotICoKLSAqIFRoaXMgbWlnaHQgbG9vayBhIGJpdCBvZGQgZHVlIHRvIGZhc3QgcGF0aCBvcHRp
bWl6YXRpb24uLi4KLSAqLwotaW50IG50ZnNfdWNzdG9ubHMoY29uc3QgbnRmc192b2x1bWUgKnZv
bCwgY29uc3QgbnRmc2NoYXIgKmlucywKLQkJY29uc3QgaW50IGluc19sZW4sIHVuc2lnbmVkIGNo
YXIgKipvdXRzLCBpbnQgb3V0c19sZW4pCi17Ci0Jc3RydWN0IG5sc190YWJsZSAqbmxzID0gdm9s
LT5ubHNfbWFwOwotCXVuc2lnbmVkIGNoYXIgKm5zOwotCWludCBpLCBvLCBuc19sZW4sIHdjOwot
Ci0JLyogV2UgZG9uJ3QgdHJ1c3Qgb3V0c2lkZSBzb3VyY2VzLiAqLwotCWlmIChpbnMpIHsKLQkJ
bnMgPSAqb3V0czsKLQkJbnNfbGVuID0gb3V0c19sZW47Ci0JCWlmIChucyAmJiAhbnNfbGVuKSB7
Ci0JCQl3YyA9IC1FTkFNRVRPT0xPTkc7Ci0JCQlnb3RvIGNvbnZlcnNpb25fZXJyOwotCQl9Ci0J
CWlmICghbnMpIHsKLQkJCW5zX2xlbiA9IGluc19sZW4gKiBOTFNfTUFYX0NIQVJTRVRfU0laRTsK
LQkJCW5zID0ga21hbGxvYyhuc19sZW4gKyAxLCBHRlBfTk9GUyk7Ci0JCQlpZiAoIW5zKQotCQkJ
CWdvdG8gbWVtX2Vycl9vdXQ7Ci0JCX0KLQkJZm9yIChpID0gbyA9IDA7IGkgPCBpbnNfbGVuOyBp
KyspIHsKLXJldHJ5OgkJCXdjID0gbmxzLT51bmkyY2hhcihsZTE2X3RvX2NwdShpbnNbaV0pLCBu
cyArIG8sCi0JCQkJCW5zX2xlbiAtIG8pOwotCQkJaWYgKHdjID4gMCkgewotCQkJCW8gKz0gd2M7
Ci0JCQkJY29udGludWU7Ci0JCQl9IGVsc2UgaWYgKCF3YykKLQkJCQlicmVhazsKLQkJCWVsc2Ug
aWYgKHdjID09IC1FTkFNRVRPT0xPTkcgJiYgbnMgIT0gKm91dHMpIHsKLQkJCQl1bnNpZ25lZCBj
aGFyICp0YzsKLQkJCQkvKiBHcm93IGluIG11bHRpcGxlcyBvZiA2NCBieXRlcy4gKi8KLQkJCQl0
YyA9IGttYWxsb2MoKG5zX2xlbiArIDY0KSAmCi0JCQkJCQl+NjMsIEdGUF9OT0ZTKTsKLQkJCQlp
ZiAodGMpIHsKLQkJCQkJbWVtY3B5KHRjLCBucywgbnNfbGVuKTsKLQkJCQkJbnNfbGVuID0gKChu
c19sZW4gKyA2NCkgJiB+NjMpIC0gMTsKLQkJCQkJa2ZyZWUobnMpOwotCQkJCQlucyA9IHRjOwot
CQkJCQlnb3RvIHJldHJ5OwotCQkJCX0gLyogTm8gbWVtb3J5IHNvIGdvdG8gY29udmVyc2lvbl9l
cnJvcjsgKi8KLQkJCX0gLyogd2MgPCAwLCByZWFsIGVycm9yLiAqLwotCQkJZ290byBjb252ZXJz
aW9uX2VycjsKLQkJfQotCQluc1tvXSA9IDA7Ci0JCSpvdXRzID0gbnM7Ci0JCXJldHVybiBvOwot
CX0gLyogZWxzZSAoIWlucykgKi8KLQludGZzX2Vycm9yKHZvbC0+c2IsICJSZWNlaXZlZCBOVUxM
IHBvaW50ZXIuIik7Ci0JcmV0dXJuIC1FSU5WQUw7Ci1jb252ZXJzaW9uX2VycjoKLQludGZzX2Vy
cm9yKHZvbC0+c2IsICJVbmljb2RlIG5hbWUgY29udGFpbnMgY2hhcmFjdGVycyB0aGF0IGNhbm5v
dCBiZSAiCi0JCQkiY29udmVydGVkIHRvIGNoYXJhY3RlciBzZXQgJXMuICBZb3UgbWlnaHQgd2Fu
dCB0byAiCi0JCQkidHJ5IHRvIHVzZSB0aGUgbW91bnQgb3B0aW9uIG5scz11dGY4LiIsIG5scy0+
Y2hhcnNldCk7Ci0JaWYgKG5zICE9ICpvdXRzKQotCQlrZnJlZShucyk7Ci0JaWYgKHdjICE9IC1F
TkFNRVRPT0xPTkcpCi0JCXdjID0gLUVJTFNFUTsKLQlyZXR1cm4gd2M7Ci1tZW1fZXJyX291dDoK
LQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gYWxsb2NhdGUgbmFtZSEiKTsKLQlyZXR1
cm4gLUVOT01FTTsKLX0KZGlmZiAtLWdpdCBhL2ZzL250ZnMvdXBjYXNlLmMgYi9mcy9udGZzL3Vw
Y2FzZS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA0ZWJlODRhNzhkZWEuLjAwMDAw
MDAwMDAwMAotLS0gYS9mcy9udGZzL3VwY2FzZS5jCisrKyAvZGV2L251bGwKQEAgLTEsNzMgKzAs
MCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLS8qCi0g
KiB1cGNhc2UuYyAtIEdlbmVyYXRlIHRoZSBmdWxsIE5URlMgVW5pY29kZSB1cGNhc2UgdGFibGUg
aW4gbGl0dGxlIGVuZGlhbi4KLSAqCSAgICAgIFBhcnQgb2YgdGhlIExpbnV4LU5URlMgcHJvamVj
dC4KLSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDEgUmljaGFyZCBSdXNzb24gPG50ZnNAZmxhdGNh
cC5vcmc+Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDEtMjAwNiBBbnRvbiBBbHRhcGFybWFrb3YKLSAq
LwotCi0jaW5jbHVkZSAibWFsbG9jLmgiCi0jaW5jbHVkZSAibnRmcy5oIgotCi1udGZzY2hhciAq
Z2VuZXJhdGVfZGVmYXVsdF91cGNhc2Uodm9pZCkKLXsKLQlzdGF0aWMgY29uc3QgaW50IHVjX3J1
bl90YWJsZVtdWzNdID0geyAvKiBTdGFydCwgRW5kLCBBZGQgKi8KLQl7MHgwMDYxLCAweDAwN0Is
ICAtMzJ9LCB7MHgwNDUxLCAweDA0NUQsIC04MH0sIHsweDFGNzAsIDB4MUY3MiwgIDc0fSwKLQl7
MHgwMEUwLCAweDAwRjcsICAtMzJ9LCB7MHgwNDVFLCAweDA0NjAsIC04MH0sIHsweDFGNzIsIDB4
MUY3NiwgIDg2fSwKLQl7MHgwMEY4LCAweDAwRkYsICAtMzJ9LCB7MHgwNTYxLCAweDA1ODcsIC00
OH0sIHsweDFGNzYsIDB4MUY3OCwgMTAwfSwKLQl7MHgwMjU2LCAweDAyNTgsIC0yMDV9LCB7MHgx
RjAwLCAweDFGMDgsICAgOH0sIHsweDFGNzgsIDB4MUY3QSwgMTI4fSwKLQl7MHgwMjhBLCAweDAy
OEMsIC0yMTd9LCB7MHgxRjEwLCAweDFGMTYsICAgOH0sIHsweDFGN0EsIDB4MUY3QywgMTEyfSwK
LQl7MHgwM0FDLCAweDAzQUQsICAtMzh9LCB7MHgxRjIwLCAweDFGMjgsICAgOH0sIHsweDFGN0Ms
IDB4MUY3RSwgMTI2fSwKLQl7MHgwM0FELCAweDAzQjAsICAtMzd9LCB7MHgxRjMwLCAweDFGMzgs
ICAgOH0sIHsweDFGQjAsIDB4MUZCMiwgICA4fSwKLQl7MHgwM0IxLCAweDAzQzIsICAtMzJ9LCB7
MHgxRjQwLCAweDFGNDYsICAgOH0sIHsweDFGRDAsIDB4MUZEMiwgICA4fSwKLQl7MHgwM0MyLCAw
eDAzQzMsICAtMzF9LCB7MHgxRjUxLCAweDFGNTIsICAgOH0sIHsweDFGRTAsIDB4MUZFMiwgICA4
fSwKLQl7MHgwM0MzLCAweDAzQ0MsICAtMzJ9LCB7MHgxRjUzLCAweDFGNTQsICAgOH0sIHsweDFG
RTUsIDB4MUZFNiwgICA3fSwKLQl7MHgwM0NDLCAweDAzQ0QsICAtNjR9LCB7MHgxRjU1LCAweDFG
NTYsICAgOH0sIHsweDIxNzAsIDB4MjE4MCwgLTE2fSwKLQl7MHgwM0NELCAweDAzQ0YsICAtNjN9
LCB7MHgxRjU3LCAweDFGNTgsICAgOH0sIHsweDI0RDAsIDB4MjRFQSwgLTI2fSwKLQl7MHgwNDMw
LCAweDA0NTAsICAtMzJ9LCB7MHgxRjYwLCAweDFGNjgsICAgOH0sIHsweEZGNDEsIDB4RkY1Qiwg
LTMyfSwKLQl7MH0KLQl9OwotCi0Jc3RhdGljIGNvbnN0IGludCB1Y19kdXBfdGFibGVbXVsyXSA9
IHsgLyogU3RhcnQsIEVuZCAqLwotCXsweDAxMDAsIDB4MDEyRn0sIHsweDAxQTAsIDB4MDFBNn0s
IHsweDAzRTIsIDB4MDNFRn0sIHsweDA0Q0IsIDB4MDRDQ30sCi0JezB4MDEzMiwgMHgwMTM3fSwg
ezB4MDFCMywgMHgwMUI3fSwgezB4MDQ2MCwgMHgwNDgxfSwgezB4MDREMCwgMHgwNEVCfSwKLQl7
MHgwMTM5LCAweDAxNDl9LCB7MHgwMUNELCAweDAxRER9LCB7MHgwNDkwLCAweDA0QkZ9LCB7MHgw
NEVFLCAweDA0RjV9LAotCXsweDAxNEEsIDB4MDE3OH0sIHsweDAxREUsIDB4MDFFRn0sIHsweDA0
QkYsIDB4MDRCRn0sIHsweDA0RjgsIDB4MDRGOX0sCi0JezB4MDE3OSwgMHgwMTdFfSwgezB4MDFG
NCwgMHgwMUY1fSwgezB4MDRDMSwgMHgwNEM0fSwgezB4MUUwMCwgMHgxRTk1fSwKLQl7MHgwMThC
LCAweDAxOEJ9LCB7MHgwMUZBLCAweDAyMTh9LCB7MHgwNEM3LCAweDA0Qzh9LCB7MHgxRUEwLCAw
eDFFRjl9LAotCXswfQotCX07Ci0KLQlzdGF0aWMgY29uc3QgaW50IHVjX3dvcmRfdGFibGVbXVsy
XSA9IHsgLyogT2Zmc2V0LCBWYWx1ZSAqLwotCXsweDAwRkYsIDB4MDE3OH0sIHsweDAxQUQsIDB4
MDFBQ30sIHsweDAxRjMsIDB4MDFGMX0sIHsweDAyNjksIDB4MDE5Nn0sCi0JezB4MDE4MywgMHgw
MTgyfSwgezB4MDFCMCwgMHgwMUFGfSwgezB4MDI1MywgMHgwMTgxfSwgezB4MDI2RiwgMHgwMTlD
fSwKLQl7MHgwMTg1LCAweDAxODR9LCB7MHgwMUI5LCAweDAxQjh9LCB7MHgwMjU0LCAweDAxODZ9
LCB7MHgwMjcyLCAweDAxOUR9LAotCXsweDAxODgsIDB4MDE4N30sIHsweDAxQkQsIDB4MDFCQ30s
IHsweDAyNTksIDB4MDE4Rn0sIHsweDAyNzUsIDB4MDE5Rn0sCi0JezB4MDE4QywgMHgwMThCfSwg
ezB4MDFDNiwgMHgwMUM0fSwgezB4MDI1QiwgMHgwMTkwfSwgezB4MDI4MywgMHgwMUE5fSwKLQl7
MHgwMTkyLCAweDAxOTF9LCB7MHgwMUM5LCAweDAxQzd9LCB7MHgwMjYwLCAweDAxOTN9LCB7MHgw
Mjg4LCAweDAxQUV9LAotCXsweDAxOTksIDB4MDE5OH0sIHsweDAxQ0MsIDB4MDFDQX0sIHsweDAy
NjMsIDB4MDE5NH0sIHsweDAyOTIsIDB4MDFCN30sCi0JezB4MDFBOCwgMHgwMUE3fSwgezB4MDFE
RCwgMHgwMThFfSwgezB4MDI2OCwgMHgwMTk3fSwKLQl7MH0KLQl9OwotCi0JaW50IGksIHI7Ci0J
bnRmc2NoYXIgKnVjOwotCi0JdWMgPSBudGZzX21hbGxvY19ub2ZzKGRlZmF1bHRfdXBjYXNlX2xl
biAqIHNpemVvZihudGZzY2hhcikpOwotCWlmICghdWMpCi0JCXJldHVybiB1YzsKLQltZW1zZXQo
dWMsIDAsIGRlZmF1bHRfdXBjYXNlX2xlbiAqIHNpemVvZihudGZzY2hhcikpOwotCS8qIEdlbmVy
YXRlIHRoZSBsaXR0bGUgZW5kaWFuIFVuaWNvZGUgdXBjYXNlIHRhYmxlIHVzZWQgYnkgbnRmcy4g
Ki8KLQlmb3IgKGkgPSAwOyBpIDwgZGVmYXVsdF91cGNhc2VfbGVuOyBpKyspCi0JCXVjW2ldID0g
Y3B1X3RvX2xlMTYoaSk7Ci0JZm9yIChyID0gMDsgdWNfcnVuX3RhYmxlW3JdWzBdOyByKyspCi0J
CWZvciAoaSA9IHVjX3J1bl90YWJsZVtyXVswXTsgaSA8IHVjX3J1bl90YWJsZVtyXVsxXTsgaSsr
KQotCQkJbGUxNl9hZGRfY3B1KCZ1Y1tpXSwgdWNfcnVuX3RhYmxlW3JdWzJdKTsKLQlmb3IgKHIg
PSAwOyB1Y19kdXBfdGFibGVbcl1bMF07IHIrKykKLQkJZm9yIChpID0gdWNfZHVwX3RhYmxlW3Jd
WzBdOyBpIDwgdWNfZHVwX3RhYmxlW3JdWzFdOyBpICs9IDIpCi0JCQlsZTE2X2FkZF9jcHUoJnVj
W2kgKyAxXSwgLTEpOwotCWZvciAociA9IDA7IHVjX3dvcmRfdGFibGVbcl1bMF07IHIrKykKLQkJ
dWNbdWNfd29yZF90YWJsZVtyXVswXV0gPSBjcHVfdG9fbGUxNih1Y193b3JkX3RhYmxlW3JdWzFd
KTsKLQlyZXR1cm4gdWM7Ci19CmRpZmYgLS1naXQgYS9mcy9udGZzL3VzbmpybmwuYyBiL2ZzL250
ZnMvdXNuanJubC5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA5MDk3YTBiNGVmMjUu
LjAwMDAwMDAwMDAwMAotLS0gYS9mcy9udGZzL3VzbmpybmwuYworKysgL2Rldi9udWxsCkBAIC0x
LDcwICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVy
Ci0vKgotICogdXNuanJubC5oIC0gTlRGUyBrZXJuZWwgdHJhbnNhY3Rpb24gbG9nICgkVXNuSnJu
bCkgaGFuZGxpbmcuICBQYXJ0IG9mIHRoZQotICoJICAgICAgIExpbnV4LU5URlMgcHJvamVjdC4K
LSAqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUgQW50b24gQWx0YXBhcm1ha292Ci0gKi8KLQotI2lm
ZGVmIE5URlNfUlcKLQotI2luY2x1ZGUgPGxpbnV4L2ZzLmg+Ci0jaW5jbHVkZSA8bGludXgvaGln
aG1lbS5oPgotI2luY2x1ZGUgPGxpbnV4L21tLmg+Ci0KLSNpbmNsdWRlICJhb3BzLmgiCi0jaW5j
bHVkZSAiZGVidWcuaCIKLSNpbmNsdWRlICJlbmRpYW4uaCIKLSNpbmNsdWRlICJ0aW1lLmgiCi0j
aW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJ1c25qcm5sLmgiCi0jaW5jbHVkZSAidm9sdW1l
LmgiCi0KLS8qKgotICogbnRmc19zdGFtcF91c25qcm5sIC0gc3RhbXAgdGhlIHRyYW5zYWN0aW9u
IGxvZyAoJFVzbkpybmwpIG9uIGFuIG50ZnMgdm9sdW1lCi0gKiBAdm9sOgludGZzIHZvbHVtZSBv
biB3aGljaCB0byBzdGFtcCB0aGUgdHJhbnNhY3Rpb24gbG9nCi0gKgotICogU3RhbXAgdGhlIHRy
YW5zYWN0aW9uIGxvZyAoJFVzbkpybmwpIG9uIHRoZSBudGZzIHZvbHVtZSBAdm9sIGFuZCByZXR1
cm4KLSAqICd0cnVlJyBvbiBzdWNjZXNzIGFuZCAnZmFsc2UnIG9uIGVycm9yLgotICoKLSAqIFRo
aXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IHRoZSB0cmFuc2FjdGlvbiBsb2cgaGFzIGFscmVhZHkg
YmVlbiBsb2FkZWQgYW5kCi0gKiBjb25zaXN0ZW5jeSBjaGVja2VkIGJ5IGEgY2FsbCB0byBmcy9u
dGZzL3N1cGVyLmM6OmxvYWRfYW5kX2luaXRfdXNuanJubCgpLgotICovCi1ib29sIG50ZnNfc3Rh
bXBfdXNuanJubChudGZzX3ZvbHVtZSAqdm9sKQotewotCW50ZnNfZGVidWcoIkVudGVyaW5nLiIp
OwotCWlmIChsaWtlbHkoIU5Wb2xVc25Kcm5sU3RhbXBlZCh2b2wpKSkgewotCQlzbGU2NCBzdGFt
cDsKLQkJc3RydWN0IHBhZ2UgKnBhZ2U7Ci0JCVVTTl9IRUFERVIgKnVoOwotCi0JCXBhZ2UgPSBu
dGZzX21hcF9wYWdlKHZvbC0+dXNuanJubF9tYXhfaW5vLT5pX21hcHBpbmcsIDApOwotCQlpZiAo
SVNfRVJSKHBhZ2UpKSB7Ci0JCQludGZzX2Vycm9yKHZvbC0+c2IsICJGYWlsZWQgdG8gcmVhZCBm
cm9tICIKLQkJCQkJIiRVc25Kcm5sLyREQVRBLyRNYXggYXR0cmlidXRlLiIpOwotCQkJcmV0dXJu
IGZhbHNlOwotCQl9Ci0JCXVoID0gKFVTTl9IRUFERVIqKXBhZ2VfYWRkcmVzcyhwYWdlKTsKLQkJ
c3RhbXAgPSBnZXRfY3VycmVudF9udGZzX3RpbWUoKTsKLQkJbnRmc19kZWJ1ZygiU3RhbXBpbmcg
dHJhbnNhY3Rpb24gbG9nICgkVXNuSnJubCk6IG9sZCAiCi0JCQkJImpvdXJuYWxfaWQgMHglbGx4
LCBvbGQgbG93ZXN0X3ZhbGlkX3VzbiAiCi0JCQkJIjB4JWxseCwgbmV3IGpvdXJuYWxfaWQgMHgl
bGx4LCBuZXcgIgotCQkJCSJsb3dlc3RfdmFsaWRfdXNuIDB4JWxseC4iLAotCQkJCShsb25nIGxv
bmcpc2xlNjRfdG9fY3B1KHVoLT5qb3VybmFsX2lkKSwKLQkJCQkobG9uZyBsb25nKXNsZTY0X3Rv
X2NwdSh1aC0+bG93ZXN0X3ZhbGlkX3VzbiksCi0JCQkJKGxvbmcgbG9uZylzbGU2NF90b19jcHUo
c3RhbXApLAotCQkJCWlfc2l6ZV9yZWFkKHZvbC0+dXNuanJubF9qX2lubykpOwotCQl1aC0+bG93
ZXN0X3ZhbGlkX3VzbiA9Ci0JCQkJY3B1X3RvX3NsZTY0KGlfc2l6ZV9yZWFkKHZvbC0+dXNuanJu
bF9qX2lubykpOwotCQl1aC0+am91cm5hbF9pZCA9IHN0YW1wOwotCQlmbHVzaF9kY2FjaGVfcGFn
ZShwYWdlKTsKLQkJc2V0X3BhZ2VfZGlydHkocGFnZSk7Ci0JCW50ZnNfdW5tYXBfcGFnZShwYWdl
KTsKLQkJLyogU2V0IHRoZSBmbGFnIHNvIHdlIGRvIG5vdCBoYXZlIHRvIGRvIGl0IGFnYWluIG9u
IHJlbW91bnQuICovCi0JCU5Wb2xTZXRVc25Kcm5sU3RhbXBlZCh2b2wpOwotCX0KLQludGZzX2Rl
YnVnKCJEb25lLiIpOwotCXJldHVybiB0cnVlOwotfQotCi0jZW5kaWYgLyogTlRGU19SVyAqLwpk
aWZmIC0tZ2l0IGEvZnMvbnRmcy91c25qcm5sLmggYi9mcy9udGZzL3VzbmpybmwuaApkZWxldGVk
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggODVmNTMxYjU5Mzk1Li4wMDAwMDAwMDAwMDAKLS0tIGEv
ZnMvbnRmcy91c25qcm5sLmgKKysrIC9kZXYvbnVsbApAQCAtMSwxOTEgKzAsMCBAQAotLyogU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiB1c25qcm5s
LmggLSBEZWZpbmVzIGZvciBOVEZTIGtlcm5lbCB0cmFuc2FjdGlvbiBsb2cgKCRVc25Kcm5sKSBo
YW5kbGluZy4KLSAqCSAgICAgICBQYXJ0IG9mIHRoZSBMaW51eC1OVEZTIHByb2plY3QuCi0gKgot
ICogQ29weXJpZ2h0IChjKSAyMDA1IEFudG9uIEFsdGFwYXJtYWtvdgotICovCi0KLSNpZm5kZWYg
X0xJTlVYX05URlNfVVNOSlJOTF9ICi0jZGVmaW5lIF9MSU5VWF9OVEZTX1VTTkpSTkxfSAotCi0j
aWZkZWYgTlRGU19SVwotCi0jaW5jbHVkZSAidHlwZXMuaCIKLSNpbmNsdWRlICJlbmRpYW4uaCIK
LSNpbmNsdWRlICJsYXlvdXQuaCIKLSNpbmNsdWRlICJ2b2x1bWUuaCIKLQotLyoKLSAqIFRyYW5z
YWN0aW9uIGxvZyAoJFVzbkpybmwpIG9yZ2FuaXphdGlvbjoKLSAqCi0gKiBUaGUgdHJhbnNhY3Rp
b24gbG9nIHJlY29yZHMgd2hlbmV2ZXIgYSBmaWxlIGlzIG1vZGlmaWVkIGluIGFueSB3YXkuICBT
byBmb3IKLSAqIGV4YW1wbGUgaXQgd2lsbCByZWNvcmQgdGhhdCBmaWxlICJibGFoIiB3YXMgd3Jp
dHRlbiB0byBhdCBhIHBhcnRpY3VsYXIgdGltZQotICogYnV0IG5vdCB3aGF0IHdhcyB3cml0dGVu
LiAgSWYgd2lsbCByZWNvcmQgdGhhdCBhIGZpbGUgd2FzIGRlbGV0ZWQgb3IKLSAqIGNyZWF0ZWQs
IHRoYXQgYSBmaWxlIHdhcyB0cnVuY2F0ZWQsIGV0Yy4gIFNlZSBiZWxvdyBmb3IgYWxsIHRoZSBy
ZWFzb24KLSAqIGNvZGVzIHVzZWQuCi0gKgotICogVGhlIHRyYW5zYWN0aW9uIGxvZyBpcyBpbiB0
aGUgJEV4dGVuZCBkaXJlY3Rvcnkgd2hpY2ggaXMgaW4gdGhlIHJvb3QKLSAqIGRpcmVjdG9yeSBv
ZiBlYWNoIHZvbHVtZS4gIElmIGl0IGlzIG5vdCBwcmVzZW50IGl0IG1lYW5zIHRyYW5zYWN0aW9u
Ci0gKiBsb2dnaW5nIGlzIGRpc2FibGVkLiAgSWYgaXQgaXMgcHJlc2VudCBpdCBtZWFucyB0cmFu
c2FjdGlvbiBsb2dnaW5nIGlzCi0gKiBlaXRoZXIgZW5hYmxlZCBvciBpbiB0aGUgcHJvY2VzcyBv
ZiBiZWluZyBkaXNhYmxlZCBpbiB3aGljaCBjYXNlIHdlIGNhbgotICogaWdub3JlIGl0IGFzIGl0
IHdpbGwgZ28gYXdheSBhcyBzb29uIGFzIFdpbmRvd3MgZ2V0cyBpdHMgaGFuZHMgb24gaXQuCi0g
KgotICogVG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHRyYW5zYWN0aW9uIGxvZ2dpbmcgaXMgZW5h
YmxlZCBvciBpbiB0aGUgcHJvY2VzcwotICogb2YgYmVpbmcgZGlzYWJsZWQsIG5lZWQgdG8gY2hl
Y2sgdGhlIHZvbHVtZSBmbGFncyBpbiB0aGUKLSAqICRWT0xVTUVfSU5GT1JNQVRJT04gYXR0cmli
dXRlIGluIHRoZSAkVm9sdW1lIHN5c3RlbSBmaWxlICh3aGljaCBpcyBwcmVzZW50Ci0gKiBpbiB0
aGUgcm9vdCBkaXJlY3RvcnkgYW5kIGhhcyBhIGZpeGVkIG1mdCByZWNvcmQgbnVtYmVyLCBzZWUg
bGF5b3V0LmgpLgotICogSWYgdGhlIGZsYWcgVk9MVU1FX0RFTEVURV9VU05fVU5ERVJXQVkgaXMg
c2V0IGl0IG1lYW5zIHRoZSB0cmFuc2FjdGlvbiBsb2cKLSAqIGlzIGluIHRoZSBwcm9jZXNzIG9m
IGJlaW5nIGRpc2FibGVkIGFuZCBpZiB0aGlzIGZsYWcgaXMgY2xlYXIgaXQgbWVhbnMgdGhlCi0g
KiB0cmFuc2FjdGlvbiBsb2cgaXMgZW5hYmxlZC4KLSAqCi0gKiBUaGUgdHJhbnNhY3Rpb24gbG9n
IGNvbnNpc3RzIG9mIHR3byBwYXJ0czsgdGhlICREQVRBLyRNYXggYXR0cmlidXRlIGFzIHdlbGwK
LSAqIGFzIHRoZSAkREFUQS8kSiBhdHRyaWJ1dGUuICAkTWF4IGlzIGEgaGVhZGVyIGRlc2NyaWJp
bmcgdGhlIHRyYW5zYWN0aW9uCi0gKiBsb2cgd2hpbHN0ICRKIGlzIHRoZSB0cmFuc2FjdGlvbiBs
b2cgZGF0YSBpdHNlbGYgYXMgYSBzZXF1ZW5jZSBvZiB2YXJpYWJsZQotICogc2l6ZWQgVVNOX1JF
Q09SRHMgKHNlZSBiZWxvdyBmb3IgYWxsIHRoZSBzdHJ1Y3R1cmVzKS4KLSAqCi0gKiBXZSBkbyBu
b3QgY2FyZSBhYm91dCB0cmFuc2FjdGlvbiBsb2dnaW5nIGF0IHRoaXMgcG9pbnQgaW4gdGltZSBi
dXQgd2Ugc3RpbGwKLSAqIG5lZWQgdG8gbGV0IHdpbmRvd3Mga25vdyB0aGF0IHRoZSB0cmFuc2Fj
dGlvbiBsb2cgaXMgb3V0IG9mIGRhdGUuICBUbyBkbwotICogdGhpcyB3ZSBuZWVkIHRvIHN0YW1w
IHRoZSB0cmFuc2FjdGlvbiBsb2cuICBUaGlzIGludm9sdmVzIHNldHRpbmcgdGhlCi0gKiBsb3dl
c3RfdmFsaWRfdXNuIGZpZWxkIGluIHRoZSAkREFUQS8kTWF4IGF0dHJpYnV0ZSB0byB0aGUgdXNu
IHRvIGJlIHVzZWQKLSAqIGZvciB0aGUgbmV4dCBhZGRlZCBVU05fUkVDT1JEIHRvIHRoZSAkREFU
QS8kSiBhdHRyaWJ1dGUgYXMgd2VsbCBhcwotICogZ2VuZXJhdGluZyBhIG5ldyBqb3VybmFsX2lk
IGluICREQVRBLyRNYXguCi0gKgotICogVGhlIGpvdXJuYWxfaWQgaXMgYXMgb2YgdGhlIGN1cnJl
bnQgdmVyc2lvbiAoMi4wKSBvZiB0aGUgdHJhbnNhY3Rpb24gbG9nCi0gKiBzaW1wbHkgdGhlIDY0
LWJpdCB0aW1lc3RhbXAgb2Ygd2hlbiB0aGUgam91cm5hbCB3YXMgZWl0aGVyIGNyZWF0ZWQgb3Ig
bGFzdAotICogc3RhbXBlZC4KLSAqCi0gKiBUbyBkZXRlcm1pbmUgdGhlIG5leHQgdXNuIHRoZXJl
IGFyZSB0d28gd2F5cy4gIFRoZSBmaXJzdCBpcyB0byBwYXJzZQotICogJERBVEEvJEogYW5kIHRv
IGZpbmQgdGhlIGxhc3QgVVNOX1JFQ09SRCBpbiBpdCBhbmQgdG8gYWRkIGl0cyByZWNvcmRfbGVu
Z3RoCi0gKiB0byBpdHMgdXNuICh3aGljaCBpcyB0aGUgYnl0ZSBvZmZzZXQgaW4gdGhlICREQVRB
LyRKIGF0dHJpYnV0ZSkuICBUaGUKLSAqIHNlY29uZCBpcyBzaW1wbHkgdG8gdGFrZSB0aGUgZGF0
YSBzaXplIG9mIHRoZSBhdHRyaWJ1dGUuICBTaW5jZSB0aGUgdXNucwotICogYXJlIHNpbXBseSBi
eXRlIG9mZnNldHMgaW50byAkREFUQS8kSiwgdGhpcyBpcyBleGFjdGx5IHRoZSBuZXh0IHVzbi4g
IEZvcgotICogb2J2aW91cyByZWFzb25zIHdlIHVzZSB0aGUgc2Vjb25kIG1ldGhvZCBhcyBpdCBp
cyBtdWNoIHNpbXBsZXIgYW5kIGZhc3Rlci4KLSAqCi0gKiBBcyBhbiBhc2lkZSwgbm90ZSB0aGF0
IHRvIGFjdHVhbGx5IGRpc2FibGUgdGhlIHRyYW5zYWN0aW9uIGxvZywgb25lIHdvdWxkCi0gKiBu
ZWVkIHRvIHNldCB0aGUgVk9MVU1FX0RFTEVURV9VU05fVU5ERVJXQVkgZmxhZyAoc2VlIGFib3Zl
KSwgdGhlbiBnbwotICogdGhyb3VnaCBhbGwgdGhlIG1mdCByZWNvcmRzIG9uIHRoZSB2b2x1bWUg
YW5kIHNldCB0aGUgdXNuIGZpZWxkIGluIHRoZWlyCi0gKiAkU1RBTkRBUkRfSU5GT1JNQVRJT04g
YXR0cmlidXRlIHRvIHplcm8uICBPbmNlIHRoYXQgaXMgZG9uZSwgb25lIHdvdWxkIG5lZWQKLSAq
IHRvIGRlbGV0ZSB0aGUgdHJhbnNhY3Rpb24gbG9nIGZpbGUsIGkuZS4gXCRFeHRlbnRcJFVzbkpy
bmwsIGFuZCBmaW5hbGx5LAotICogb25lIHdvdWxkIG5lZWQgdG8gY2xlYXIgdGhlIFZPTFVNRV9E
RUxFVEVfVVNOX1VOREVSV0FZIGZsYWcuCi0gKgotICogTm90ZSB0aGF0IGlmIGEgdm9sdW1lIGlz
IHVubW91bnRlZCB3aGlsc3QgdGhlIHRyYW5zYWN0aW9uIGxvZyBpcyBiZWluZwotICogZGlzYWJs
ZWQsIHRoZSBwcm9jZXNzIHdpbGwgY29udGludWUgdGhlIG5leHQgdGltZSB0aGUgdm9sdW1lIGlz
IG1vdW50ZWQuCi0gKiBUaGlzIGlzIHdoeSB3ZSBjYW4gc2FmZWx5IG1vdW50IHJlYWQtd3JpdGUg
d2hlbiB3ZSBzZWUgYSB0cmFuc2FjdGlvbiBsb2cKLSAqIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5n
IGRlbGV0ZWQuCi0gKi8KLQotLyogU29tZSAkVXNuSnJubCByZWxhdGVkIGNvbnN0YW50cy4gKi8K
LSNkZWZpbmUgVXNuSnJubE1ham9yVmVyCQkyCi0jZGVmaW5lIFVzbkpybmxNaW5vclZlcgkJMAot
Ci0vKgotICogJERBVEEvJE1heCBhdHRyaWJ1dGUuICBUaGlzIGlzIChhbHdheXM/KSByZXNpZGVu
dCBhbmQgaGFzIGEgZml4ZWQgc2l6ZSBvZgotICogMzIgYnl0ZXMuICBJdCBjb250YWlucyB0aGUg
aGVhZGVyIGRlc2NyaWJpbmcgdGhlIHRyYW5zYWN0aW9uIGxvZy4KLSAqLwotdHlwZWRlZiBzdHJ1
Y3QgewotLypPZnMqLwotLyogICAwKi9zbGU2NCBtYXhpbXVtX3NpemU7CS8qIFRoZSBtYXhpbXVt
IG9uLWRpc2sgc2l6ZSBvZiB0aGUgJERBVEEvJEoKLQkJCQkgICBhdHRyaWJ1dGUuICovCi0vKiAg
IDgqL3NsZTY0IGFsbG9jYXRpb25fZGVsdGE7CS8qIE51bWJlciBvZiBieXRlcyBieSB3aGljaCB0
byBpbmNyZWFzZSB0aGUKLQkJCQkgICBzaXplIG9mIHRoZSAkREFUQS8kSiBhdHRyaWJ1dGUuICov
Ci0vKjB4MTAqL3NsZTY0IGpvdXJuYWxfaWQ7CS8qIEN1cnJlbnQgaWQgb2YgdGhlIHRyYW5zYWN0
aW9uIGxvZy4gKi8KLS8qMHgxOCovbGVVU04gbG93ZXN0X3ZhbGlkX3VzbjsJLyogTG93ZXN0IHZh
bGlkIHVzbiBpbiAkREFUQS8kSiBmb3IgdGhlCi0JCQkJICAgY3VycmVudCBqb3VybmFsX2lkLiAq
LwotLyogc2l6ZW9mKCkgPSAzMiAoMHgyMCkgYnl0ZXMgKi8KLX0gX19hdHRyaWJ1dGVfXyAoKF9f
cGFja2VkX18pKSBVU05fSEVBREVSOwotCi0vKgotICogUmVhc29uIGZsYWdzICgzMi1iaXQpLiAg
Q3VtdWxhdGl2ZSBmbGFncyBkZXNjcmliaW5nIHRoZSBjaGFuZ2UocykgdG8gdGhlCi0gKiBmaWxl
IHNpbmNlIGl0IHdhcyBsYXN0IG9wZW5lZC4gIEkgdGhpbmsgdGhlIG5hbWVzIHNwZWFrIGZvciB0
aGVtc2VsdmVzIGJ1dAotICogaWYgeW91IGRpc2FncmVlIGNoZWNrIG91dCB0aGUgZGVzY3JpcHRp
b25zIGluIHRoZSBMaW51eCBOVEZTIHByb2plY3QgTlRGUwotICogZG9jdW1lbnRhdGlvbjogaHR0
cDovL3d3dy5saW51eC1udGZzLm9yZy8KLSAqLwotZW51bSB7Ci0JVVNOX1JFQVNPTl9EQVRBX09W
RVJXUklURQk9IGNwdV90b19sZTMyKDB4MDAwMDAwMDEpLAotCVVTTl9SRUFTT05fREFUQV9FWFRF
TkQJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwMiksCi0JVVNOX1JFQVNPTl9EQVRBX1RSVU5DQVRJ
T04JPSBjcHVfdG9fbGUzMigweDAwMDAwMDA0KSwKLQlVU05fUkVBU09OX05BTUVEX0RBVEFfT1ZF
UldSSVRFCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAxMCksCi0JVVNOX1JFQVNPTl9OQU1FRF9EQVRB
X0VYVEVORAk9IGNwdV90b19sZTMyKDB4MDAwMDAwMjApLAotCVVTTl9SRUFTT05fTkFNRURfREFU
QV9UUlVOQ0FUSU9OPSBjcHVfdG9fbGUzMigweDAwMDAwMDQwKSwKLQlVU05fUkVBU09OX0ZJTEVf
Q1JFQVRFCQk9IGNwdV90b19sZTMyKDB4MDAwMDAxMDApLAotCVVTTl9SRUFTT05fRklMRV9ERUxF
VEUJCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDIwMCksCi0JVVNOX1JFQVNPTl9FQV9DSEFOR0UJCT0g
Y3B1X3RvX2xlMzIoMHgwMDAwMDQwMCksCi0JVVNOX1JFQVNPTl9TRUNVUklUWV9DSEFOR0UJPSBj
cHVfdG9fbGUzMigweDAwMDAwODAwKSwKLQlVU05fUkVBU09OX1JFTkFNRV9PTERfTkFNRQk9IGNw
dV90b19sZTMyKDB4MDAwMDEwMDApLAotCVVTTl9SRUFTT05fUkVOQU1FX05FV19OQU1FCT0gY3B1
X3RvX2xlMzIoMHgwMDAwMjAwMCksCi0JVVNOX1JFQVNPTl9JTkRFWEFCTEVfQ0hBTkdFCT0gY3B1
X3RvX2xlMzIoMHgwMDAwNDAwMCksCi0JVVNOX1JFQVNPTl9CQVNJQ19JTkZPX0NIQU5HRQk9IGNw
dV90b19sZTMyKDB4MDAwMDgwMDApLAotCVVTTl9SRUFTT05fSEFSRF9MSU5LX0NIQU5HRQk9IGNw
dV90b19sZTMyKDB4MDAwMTAwMDApLAotCVVTTl9SRUFTT05fQ09NUFJFU1NJT05fQ0hBTkdFCT0g
Y3B1X3RvX2xlMzIoMHgwMDAyMDAwMCksCi0JVVNOX1JFQVNPTl9FTkNSWVBUSU9OX0NIQU5HRQk9
IGNwdV90b19sZTMyKDB4MDAwNDAwMDApLAotCVVTTl9SRUFTT05fT0JKRUNUX0lEX0NIQU5HRQk9
IGNwdV90b19sZTMyKDB4MDAwODAwMDApLAotCVVTTl9SRUFTT05fUkVQQVJTRV9QT0lOVF9DSEFO
R0UJPSBjcHVfdG9fbGUzMigweDAwMTAwMDAwKSwKLQlVU05fUkVBU09OX1NUUkVBTV9DSEFOR0UJ
PSBjcHVfdG9fbGUzMigweDAwMjAwMDAwKSwKLQlVU05fUkVBU09OX0NMT1NFCQk9IGNwdV90b19s
ZTMyKDB4ODAwMDAwMDApLAotfTsKLQotdHlwZWRlZiBsZTMyIFVTTl9SRUFTT05fRkxBR1M7Ci0K
LS8qCi0gKiBTb3VyY2UgaW5mbyBmbGFncyAoMzItYml0KS4gIEluZm9ybWF0aW9uIGFib3V0IHRo
ZSBzb3VyY2Ugb2YgdGhlIGNoYW5nZShzKQotICogdG8gdGhlIGZpbGUuICBGb3IgZGV0YWlsZWQg
ZGVzY3JpcHRpb25zIG9mIHdoYXQgdGhlc2UgbWVhbiwgc2VlIHRoZSBMaW51eAotICogTlRGUyBw
cm9qZWN0IE5URlMgZG9jdW1lbnRhdGlvbjoKLSAqCWh0dHA6Ly93d3cubGludXgtbnRmcy5vcmcv
Ci0gKi8KLWVudW0gewotCVVTTl9TT1VSQ0VfREFUQV9NQU5BR0VNRU5UCSAgPSBjcHVfdG9fbGUz
MigweDAwMDAwMDAxKSwKLQlVU05fU09VUkNFX0FVWElMSUFSWV9EQVRBCSAgPSBjcHVfdG9fbGUz
MigweDAwMDAwMDAyKSwKLQlVU05fU09VUkNFX1JFUExJQ0FUSU9OX01BTkFHRU1FTlQgPSBjcHVf
dG9fbGUzMigweDAwMDAwMDA0KSwKLX07Ci0KLXR5cGVkZWYgbGUzMiBVU05fU09VUkNFX0lORk9f
RkxBR1M7Ci0KLS8qCi0gKiAkREFUQS8kSiBhdHRyaWJ1dGUuICBUaGlzIGlzIGFsd2F5cyBub24t
cmVzaWRlbnQsIGlzIG1hcmtlZCBhcyBzcGFyc2UsIGFuZAotICogaXMgb2YgdmFyaWFibGVkIHNp
emUuICBJdCBjb25zaXN0cyBvZiBhIHNlcXVlbmNlIG9mIHZhcmlhYmxlIHNpemUKLSAqIFVTTl9S
RUNPUkRTLiAgVGhlIG1pbmltdW0gYWxsb2NhdGVkX3NpemUgaXMgYWxsb2NhdGlvbl9kZWx0YSBh
cwotICogc3BlY2lmaWVkIGluICREQVRBLyRNYXguICBXaGVuIHRoZSBtYXhpbXVtX3NpemUgc3Bl
Y2lmaWVkIGluICREQVRBLyRNYXggaXMKLSAqIGV4Y2VlZGVkIGJ5IG1vcmUgdGhhbiBhbGxvY2F0
aW9uX2RlbHRhIGJ5dGVzLCBhbGxvY2F0aW9uX2RlbHRhIGJ5dGVzIGFyZQotICogYWxsb2NhdGVk
IGFuZCBhcHBlbmRlZCB0byB0aGUgJERBVEEvJEogYXR0cmlidXRlIGFuZCBhbiBlcXVhbCBudW1i
ZXIgb2YKLSAqIGJ5dGVzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGF0dHJpYnV0ZSBhcmUgZnJl
ZWQgYW5kIG1hZGUgc3BhcnNlLiAgTm90ZSB0aGUKLSAqIG1ha2luZyBzcGFyc2Ugb25seSBoYXBw
ZW5zIGF0IHZvbHVtZSBjaGVja3BvaW50cyBhbmQgaGVuY2UgdGhlIGFjdHVhbAotICogJERBVEEv
JEogc2l6ZSBjYW4gZXhjZWVkIG1heGltdW1fc2l6ZSArIGFsbG9jYXRpb25fZGVsdGEgdGVtcG9y
YXJpbHkuCi0gKi8KLXR5cGVkZWYgc3RydWN0IHsKLS8qT2ZzKi8KLS8qICAgMCovbGUzMiBsZW5n
dGg7CQkvKiBCeXRlIHNpemUgb2YgdGhpcyByZWNvcmQgKDgtYnl0ZQotCQkJCSAgIGFsaWduZWQp
LiAqLwotLyogICA0Ki9sZTE2IG1ham9yX3ZlcjsJCS8qIE1ham9yIHZlcnNpb24gb2YgdGhlIHRy
YW5zYWN0aW9uIGxvZyB1c2VkCi0JCQkJICAgZm9yIHRoaXMgcmVjb3JkLiAqLwotLyogICA2Ki9s
ZTE2IG1pbm9yX3ZlcjsJCS8qIE1pbm9yIHZlcnNpb24gb2YgdGhlIHRyYW5zYWN0aW9uIGxvZyB1
c2VkCi0JCQkJICAgZm9yIHRoaXMgcmVjb3JkLiAqLwotLyogICA4Ki9sZU1GVF9SRUYgbWZ0X3Jl
ZmVyZW5jZTsvKiBUaGUgbWZ0IHJlZmVyZW5jZSBvZiB0aGUgZmlsZSAob3IKLQkJCQkgICBkaXJl
Y3RvcnkpIGRlc2NyaWJlZCBieSB0aGlzIHJlY29yZC4gKi8KLS8qMHgxMCovbGVNRlRfUkVGIHBh
cmVudF9kaXJlY3Rvcnk7LyogVGhlIG1mdCByZWZlcmVuY2Ugb2YgdGhlIHBhcmVudAotCQkJCSAg
IGRpcmVjdG9yeSBvZiB0aGUgZmlsZSBkZXNjcmliZWQgYnkgdGhpcwotCQkJCSAgIHJlY29yZC4g
Ki8KLS8qMHgxOCovbGVVU04gdXNuOwkJLyogVGhlIHVzbiBvZiB0aGlzIHJlY29yZC4gIEVxdWFs
cyB0aGUgb2Zmc2V0Ci0JCQkJICAgd2l0aGluIHRoZSAkREFUQS8kSiBhdHRyaWJ1dGUuICovCi0v
KjB4MjAqL3NsZTY0IHRpbWU7CQkvKiBUaW1lIHdoZW4gdGhpcyByZWNvcmQgd2FzIGNyZWF0ZWQu
ICovCi0vKjB4MjgqL1VTTl9SRUFTT05fRkxBR1MgcmVhc29uOy8qIFJlYXNvbiBmbGFncyAoc2Vl
IGFib3ZlKS4gKi8KLS8qMHgyYyovVVNOX1NPVVJDRV9JTkZPX0ZMQUdTIHNvdXJjZV9pbmZvOy8q
IFNvdXJjZSBpbmZvIGZsYWdzIChzZWUgYWJvdmUpLiAqLwotLyoweDMwKi9sZTMyIHNlY3VyaXR5
X2lkOwkvKiBGaWxlIHNlY3VyaXR5X2lkIGNvcGllZCBmcm9tCi0JCQkJICAgJFNUQU5EQVJEX0lO
Rk9STUFUSU9OLiAqLwotLyoweDM0Ki9GSUxFX0FUVFJfRkxBR1MgZmlsZV9hdHRyaWJ1dGVzOwkv
KiBGaWxlIGF0dHJpYnV0ZXMgY29waWVkIGZyb20KLQkJCQkgICAkU1RBTkRBUkRfSU5GT1JNQVRJ
T04gb3IgJEZJTEVfTkFNRSAobm90Ci0JCQkJICAgc3VyZSB3aGljaCkuICovCi0vKjB4MzgqL2xl
MTYgZmlsZV9uYW1lX3NpemU7CS8qIFNpemUgb2YgdGhlIGZpbGUgbmFtZSBpbiBieXRlcy4gKi8K
LS8qMHgzYSovbGUxNiBmaWxlX25hbWVfb2Zmc2V0OwkvKiBPZmZzZXQgdG8gdGhlIGZpbGUgbmFt
ZSBpbiBieXRlcyBmcm9tIHRoZQotCQkJCSAgIHN0YXJ0IG9mIHRoaXMgcmVjb3JkLiAqLwotLyow
eDNjKi9udGZzY2hhciBmaWxlX25hbWVbMF07CS8qIFVzZSB3aGVuIGNyZWF0aW5nIG9ubHkuICBX
aGVuIHJlYWRpbmcgdXNlCi0JCQkJICAgZmlsZV9uYW1lX29mZnNldCB0byBkZXRlcm1pbmUgdGhl
IGxvY2F0aW9uCi0JCQkJICAgb2YgdGhlIG5hbWUuICovCi0vKiBzaXplb2YoKSA9IDYwICgweDNj
KSBieXRlcyAqLwotfSBfX2F0dHJpYnV0ZV9fICgoX19wYWNrZWRfXykpIFVTTl9SRUNPUkQ7Ci0K
LWV4dGVybiBib29sIG50ZnNfc3RhbXBfdXNuanJubChudGZzX3ZvbHVtZSAqdm9sKTsKLQotI2Vu
ZGlmIC8qIE5URlNfUlcgKi8KLQotI2VuZGlmIC8qIF9MSU5VWF9OVEZTX1VTTkpSTkxfSCAqLwpk
aWZmIC0tZ2l0IGEvZnMvbnRmcy92b2x1bWUuaCBiL2ZzL250ZnMvdm9sdW1lLmgKZGVsZXRlZCBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDkzMGE5YWU4YTA1My4uMDAwMDAwMDAwMDAwCi0tLSBhL2Zz
L250ZnMvdm9sdW1lLmgKKysrIC9kZXYvbnVsbApAQCAtMSwxNjQgKzAsMCBAQAotLyogU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIgKi8KLS8qCi0gKiB2b2x1bWUuaCAt
IERlZmluZXMgZm9yIHZvbHVtZSBzdHJ1Y3R1cmVzIGluIE5URlMgTGludXgga2VybmVsIGRyaXZl
ci4gUGFydAotICoJICAgICAgb2YgdGhlIExpbnV4LU5URlMgcHJvamVjdC4KLSAqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDEtMjAwNiBBbnRvbiBBbHRhcGFybWFrb3YKLSAqIENvcHlyaWdodCAoYykg
MjAwMiBSaWNoYXJkIFJ1c3NvbgotICovCi0KLSNpZm5kZWYgX0xJTlVYX05URlNfVk9MVU1FX0gK
LSNkZWZpbmUgX0xJTlVYX05URlNfVk9MVU1FX0gKLQotI2luY2x1ZGUgPGxpbnV4L3J3c2VtLmg+
Ci0jaW5jbHVkZSA8bGludXgvdWlkZ2lkLmg+Ci0KLSNpbmNsdWRlICJ0eXBlcy5oIgotI2luY2x1
ZGUgImxheW91dC5oIgotCi0vKgotICogVGhlIE5URlMgaW4gbWVtb3J5IHN1cGVyIGJsb2NrIHN0
cnVjdHVyZS4KLSAqLwotdHlwZWRlZiBzdHJ1Y3QgewotCS8qCi0JICogRklYTUU6IFJlb3JkZXIg
dG8gaGF2ZSBjb21tb25seSB1c2VkIHRvZ2V0aGVyIGVsZW1lbnQgd2l0aGluIHRoZQotCSAqIHNh
bWUgY2FjaGUgbGluZSwgYWltaW5nIGF0IGEgY2FjaGUgbGluZSBzaXplIG9mIDMyIGJ5dGVzLiBB
aW0gZm9yCi0JICogNjQgYnl0ZXMgZm9yIGxlc3MgY29tbW9ubHkgdXNlZCB0b2dldGhlciBlbGVt
ZW50cy4gUHV0IG1vc3QgY29tbW9ubHkKLQkgKiB1c2VkIGVsZW1lbnRzIHRvIGZyb250IG9mIHN0
cnVjdHVyZS4gT2J2aW91c2x5IGRvIHRoaXMgb25seSB3aGVuIHRoZQotCSAqIHN0cnVjdHVyZSBo
YXMgc3RhYmlsaXplZC4uLiAoQUlBKQotCSAqLwotCS8qIERldmljZSBzcGVjaWZpY3MuICovCi0J
c3RydWN0IHN1cGVyX2Jsb2NrICpzYjsJCS8qIFBvaW50ZXIgYmFjayB0byB0aGUgc3VwZXJfYmxv
Y2suICovCi0JTENOIG5yX2Jsb2NrczsJCQkvKiBOdW1iZXIgb2Ygc2ItPnNfYmxvY2tzaXplIGJ5
dGVzCi0JCQkJCSAgIHNpemVkIGJsb2NrcyBvbiB0aGUgZGV2aWNlLiAqLwotCS8qIENvbmZpZ3Vy
YXRpb24gcHJvdmlkZWQgYnkgdXNlciBhdCBtb3VudCB0aW1lLiAqLwotCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CQkvKiBNaXNjZWxsYW5lb3VzIGZsYWdzLCBzZWUgYmVsb3cuICovCi0Ja3VpZF90IHVp
ZDsJCQkvKiB1aWQgdGhhdCBmaWxlcyB3aWxsIGJlIG1vdW50ZWQgYXMuICovCi0Ja2dpZF90IGdp
ZDsJCQkvKiBnaWQgdGhhdCBmaWxlcyB3aWxsIGJlIG1vdW50ZWQgYXMuICovCi0JdW1vZGVfdCBm
bWFzazsJCQkvKiBUaGUgbWFzayBmb3IgZmlsZSBwZXJtaXNzaW9ucy4gKi8KLQl1bW9kZV90IGRt
YXNrOwkJCS8qIFRoZSBtYXNrIGZvciBkaXJlY3RvcnkKLQkJCQkJICAgcGVybWlzc2lvbnMuICov
Ci0JdTggbWZ0X3pvbmVfbXVsdGlwbGllcjsJCS8qIEluaXRpYWwgbWZ0IHpvbmUgbXVsdGlwbGll
ci4gKi8KLQl1OCBvbl9lcnJvcnM7CQkJLyogV2hhdCB0byBkbyBvbiBmaWxlc3lzdGVtIGVycm9y
cy4gKi8KLQkvKiBOVEZTIGJvb3RzZWN0b3IgcHJvdmlkZWQgaW5mb3JtYXRpb24uICovCi0JdTE2
IHNlY3Rvcl9zaXplOwkJLyogaW4gYnl0ZXMgKi8KLQl1OCBzZWN0b3Jfc2l6ZV9iaXRzOwkJLyog
bG9nMihzZWN0b3Jfc2l6ZSkgKi8KLQl1MzIgY2x1c3Rlcl9zaXplOwkJLyogaW4gYnl0ZXMgKi8K
LQl1MzIgY2x1c3Rlcl9zaXplX21hc2s7CQkvKiBjbHVzdGVyX3NpemUgLSAxICovCi0JdTggY2x1
c3Rlcl9zaXplX2JpdHM7CQkvKiBsb2cyKGNsdXN0ZXJfc2l6ZSkgKi8KLQl1MzIgbWZ0X3JlY29y
ZF9zaXplOwkJLyogaW4gYnl0ZXMgKi8KLQl1MzIgbWZ0X3JlY29yZF9zaXplX21hc2s7CS8qIG1m
dF9yZWNvcmRfc2l6ZSAtIDEgKi8KLQl1OCBtZnRfcmVjb3JkX3NpemVfYml0czsJLyogbG9nMiht
ZnRfcmVjb3JkX3NpemUpICovCi0JdTMyIGluZGV4X3JlY29yZF9zaXplOwkJLyogaW4gYnl0ZXMg
Ki8KLQl1MzIgaW5kZXhfcmVjb3JkX3NpemVfbWFzazsJLyogaW5kZXhfcmVjb3JkX3NpemUgLSAx
ICovCi0JdTggaW5kZXhfcmVjb3JkX3NpemVfYml0czsJLyogbG9nMihpbmRleF9yZWNvcmRfc2l6
ZSkgKi8KLQlMQ04gbnJfY2x1c3RlcnM7CQkvKiBWb2x1bWUgc2l6ZSBpbiBjbHVzdGVycyA9PSBu
dW1iZXIgb2YKLQkJCQkJICAgYml0cyBpbiBsY24gYml0bWFwLiAqLwotCUxDTiBtZnRfbGNuOwkJ
CS8qIENsdXN0ZXIgbG9jYXRpb24gb2YgbWZ0IGRhdGEuICovCi0JTENOIG1mdG1pcnJfbGNuOwkJ
LyogQ2x1c3RlciBsb2NhdGlvbiBvZiBjb3B5IG9mIG1mdC4gKi8KLQl1NjQgc2VyaWFsX25vOwkJ
CS8qIFRoZSB2b2x1bWUgc2VyaWFsIG51bWJlci4gKi8KLQkvKiBNb3VudCBzcGVjaWZpYyBOVEZT
IGluZm9ybWF0aW9uLiAqLwotCXUzMiB1cGNhc2VfbGVuOwkJCS8qIE51bWJlciBvZiBlbnRyaWVz
IGluIHVwY2FzZVtdLiAqLwotCW50ZnNjaGFyICp1cGNhc2U7CQkvKiBUaGUgdXBjYXNlIHRhYmxl
LiAqLwotCi0JczMyIGF0dHJkZWZfc2l6ZTsJCS8qIFNpemUgb2YgdGhlIGF0dHJpYnV0ZSBkZWZp
bml0aW9uCi0JCQkJCSAgIHRhYmxlIGluIGJ5dGVzLiAqLwotCUFUVFJfREVGICphdHRyZGVmOwkJ
LyogVGFibGUgb2YgYXR0cmlidXRlIGRlZmluaXRpb25zLgotCQkJCQkgICBPYnRhaW5lZCBmcm9t
IEZJTEVfQXR0ckRlZi4gKi8KLQotI2lmZGVmIE5URlNfUlcKLQkvKiBWYXJpYWJsZXMgdXNlZCBi
eSB0aGUgY2x1c3RlciBhbmQgbWZ0IGFsbG9jYXRvcnMuICovCi0JczY0IG1mdF9kYXRhX3BvczsJ
CS8qIE1mdCByZWNvcmQgbnVtYmVyIGF0IHdoaWNoIHRvCi0JCQkJCSAgIGFsbG9jYXRlIHRoZSBu
ZXh0IG1mdCByZWNvcmQuICovCi0JTENOIG1mdF96b25lX3N0YXJ0OwkJLyogRmlyc3QgY2x1c3Rl
ciBvZiB0aGUgbWZ0IHpvbmUuICovCi0JTENOIG1mdF96b25lX2VuZDsJCS8qIEZpcnN0IGNsdXN0
ZXIgYmV5b25kIHRoZSBtZnQgem9uZS4gKi8KLQlMQ04gbWZ0X3pvbmVfcG9zOwkJLyogQ3VycmVu
dCBwb3NpdGlvbiBpbiB0aGUgbWZ0IHpvbmUuICovCi0JTENOIGRhdGExX3pvbmVfcG9zOwkJLyog
Q3VycmVudCBwb3NpdGlvbiBpbiB0aGUgZmlyc3QgZGF0YQotCQkJCQkgICB6b25lLiAqLwotCUxD
TiBkYXRhMl96b25lX3BvczsJCS8qIEN1cnJlbnQgcG9zaXRpb24gaW4gdGhlIHNlY29uZCBkYXRh
Ci0JCQkJCSAgIHpvbmUuICovCi0jZW5kaWYgLyogTlRGU19SVyAqLwotCi0Jc3RydWN0IGlub2Rl
ICptZnRfaW5vOwkJLyogVGhlIFZGUyBpbm9kZSBvZiAkTUZULiAqLwotCi0Jc3RydWN0IGlub2Rl
ICptZnRibXBfaW5vOwkvKiBBdHRyaWJ1dGUgaW5vZGUgZm9yICRNRlQvJEJJVE1BUC4gKi8KLQlz
dHJ1Y3Qgcndfc2VtYXBob3JlIG1mdGJtcF9sb2NrOyAvKiBMb2NrIGZvciBzZXJpYWxpemluZyBh
Y2Nlc3NlcyB0byB0aGUKLQkJCQkJICAgIG1mdCByZWNvcmQgYml0bWFwICgkTUZULyRCSVRNQVAp
LiAqLwotI2lmZGVmIE5URlNfUlcKLQlzdHJ1Y3QgaW5vZGUgKm1mdG1pcnJfaW5vOwkvKiBUaGUg
VkZTIGlub2RlIG9mICRNRlRNaXJyLiAqLwotCWludCBtZnRtaXJyX3NpemU7CQkvKiBTaXplIG9m
IG1mdCBtaXJyb3IgaW4gbWZ0IHJlY29yZHMuICovCi0KLQlzdHJ1Y3QgaW5vZGUgKmxvZ2ZpbGVf
aW5vOwkvKiBUaGUgVkZTIGlub2RlIG9mICRMb2dGaWxlLiAqLwotI2VuZGlmIC8qIE5URlNfUlcg
Ki8KLQotCXN0cnVjdCBpbm9kZSAqbGNuYm1wX2lubzsJLyogVGhlIFZGUyBpbm9kZSBvZiAkQml0
bWFwLiAqLwotCXN0cnVjdCByd19zZW1hcGhvcmUgbGNuYm1wX2xvY2s7IC8qIExvY2sgZm9yIHNl
cmlhbGl6aW5nIGFjY2Vzc2VzIHRvIHRoZQotCQkJCQkgICAgY2x1c3RlciBiaXRtYXAgKCRCaXRt
YXAvJERBVEEpLiAqLwotCi0Jc3RydWN0IGlub2RlICp2b2xfaW5vOwkJLyogVGhlIFZGUyBpbm9k
ZSBvZiAkVm9sdW1lLiAqLwotCVZPTFVNRV9GTEFHUyB2b2xfZmxhZ3M7CQkvKiBWb2x1bWUgZmxh
Z3MuICovCi0JdTggbWFqb3JfdmVyOwkJCS8qIE50ZnMgbWFqb3IgdmVyc2lvbiBvZiB2b2x1bWUu
ICovCi0JdTggbWlub3JfdmVyOwkJCS8qIE50ZnMgbWlub3IgdmVyc2lvbiBvZiB2b2x1bWUuICov
Ci0KLQlzdHJ1Y3QgaW5vZGUgKnJvb3RfaW5vOwkJLyogVGhlIFZGUyBpbm9kZSBvZiB0aGUgcm9v
dAotCQkJCQkgICBkaXJlY3RvcnkuICovCi0Jc3RydWN0IGlub2RlICpzZWN1cmVfaW5vOwkvKiBU
aGUgVkZTIGlub2RlIG9mICRTZWN1cmUgKE5URlMzLjArCi0JCQkJCSAgIG9ubHksIG90aGVyd2lz
ZSBOVUxMKS4gKi8KLQlzdHJ1Y3QgaW5vZGUgKmV4dGVuZF9pbm87CS8qIFRoZSBWRlMgaW5vZGUg
b2YgJEV4dGVuZCAoTlRGUzMuMCsKLQkJCQkJICAgb25seSwgb3RoZXJ3aXNlIE5VTEwpLiAqLwot
I2lmZGVmIE5URlNfUlcKLQkvKiAkUXVvdGEgc3R1ZmYgaXMgTlRGUzMuMCsgc3BlY2lmaWMuICBV
bnVzZWQvTlVMTCBvdGhlcndpc2UuICovCi0Jc3RydWN0IGlub2RlICpxdW90YV9pbm87CS8qIFRo
ZSBWRlMgaW5vZGUgb2YgJFF1b3RhLiAqLwotCXN0cnVjdCBpbm9kZSAqcXVvdGFfcV9pbm87CS8q
IEF0dHJpYnV0ZSBpbm9kZSBmb3IgJFF1b3RhLyRRLiAqLwotCS8qICRVc25Kcm5sIHN0dWZmIGlz
IE5URlMzLjArIHNwZWNpZmljLiAgVW51c2VkL05VTEwgb3RoZXJ3aXNlLiAqLwotCXN0cnVjdCBp
bm9kZSAqdXNuanJubF9pbm87CS8qIFRoZSBWRlMgaW5vZGUgb2YgJFVzbkpybmwuICovCi0Jc3Ry
dWN0IGlub2RlICp1c25qcm5sX21heF9pbm87CS8qIEF0dHJpYnV0ZSBpbm9kZSBmb3IgJFVzbkpy
bmwvJE1heC4gKi8KLQlzdHJ1Y3QgaW5vZGUgKnVzbmpybmxfal9pbm87CS8qIEF0dHJpYnV0ZSBp
bm9kZSBmb3IgJFVzbkpybmwvJEouICovCi0jZW5kaWYgLyogTlRGU19SVyAqLwotCXN0cnVjdCBu
bHNfdGFibGUgKm5sc19tYXA7Ci19IG50ZnNfdm9sdW1lOwotCi0vKgotICogRGVmaW5lZCBiaXRz
IGZvciB0aGUgZmxhZ3MgZmllbGQgaW4gdGhlIG50ZnNfdm9sdW1lIHN0cnVjdHVyZS4KLSAqLwot
dHlwZWRlZiBlbnVtIHsKLQlOVl9FcnJvcnMsCQkvKiAxOiBWb2x1bWUgaGFzIGVycm9ycywgcHJl
dmVudCByZW1vdW50IHJ3LiAqLwotCU5WX1Nob3dTeXN0ZW1GaWxlcywJLyogMTogUmV0dXJuIHN5
c3RlbSBmaWxlcyBpbiBudGZzX3JlYWRkaXIoKS4gKi8KLQlOVl9DYXNlU2Vuc2l0aXZlLAkvKiAx
OiBUcmVhdCBmaWxlIG5hbWVzIGFzIGNhc2Ugc2Vuc2l0aXZlIGFuZAotCQkJCSAgICAgIGNyZWF0
ZSBmaWxlbmFtZXMgaW4gdGhlIFBPU0lYIG5hbWVzcGFjZS4KLQkJCQkgICAgICBPdGhlcndpc2Ug
YmUgY2FzZSBpbnNlbnNpdGl2ZSBidXQgc3RpbGwKLQkJCQkgICAgICBjcmVhdGUgZmlsZSBuYW1l
cyBpbiBQT1NJWCBuYW1lc3BhY2UuICovCi0JTlZfTG9nRmlsZUVtcHR5LAkvKiAxOiAkTG9nRmls
ZSBqb3VybmFsIGlzIGVtcHR5LiAqLwotCU5WX1F1b3RhT3V0T2ZEYXRlLAkvKiAxOiAkUXVvdGEg
aXMgb3V0IG9mIGRhdGUuICovCi0JTlZfVXNuSnJubFN0YW1wZWQsCS8qIDE6ICRVc25Kcm5sIGhh
cyBiZWVuIHN0YW1wZWQuICovCi0JTlZfU3BhcnNlRW5hYmxlZCwJLyogMTogTWF5IGNyZWF0ZSBz
cGFyc2UgZmlsZXMuICovCi19IG50ZnNfdm9sdW1lX2ZsYWdzOwotCi0vKgotICogTWFjcm8gdHJp
Y2tzIHRvIGV4cGFuZCB0aGUgTlZvbEZvbygpLCBOVm9sU2V0Rm9vKCksIGFuZCBOVm9sQ2xlYXJG
b28oKQotICogZnVuY3Rpb25zLgotICovCi0jZGVmaW5lIERFRklORV9OVk9MX0JJVF9PUFMoZmxh
ZykJCQkJCVwKLXN0YXRpYyBpbmxpbmUgaW50IE5Wb2wjI2ZsYWcobnRmc192b2x1bWUgKnZvbCkJ
CVwKLXsJCQkJCQkJXAotCXJldHVybiB0ZXN0X2JpdChOVl8jI2ZsYWcsICYodm9sKS0+ZmxhZ3Mp
OwlcCi19CQkJCQkJCVwKLXN0YXRpYyBpbmxpbmUgdm9pZCBOVm9sU2V0IyNmbGFnKG50ZnNfdm9s
dW1lICp2b2wpCVwKLXsJCQkJCQkJXAotCXNldF9iaXQoTlZfIyNmbGFnLCAmKHZvbCktPmZsYWdz
KTsJCVwKLX0JCQkJCQkJXAotc3RhdGljIGlubGluZSB2b2lkIE5Wb2xDbGVhciMjZmxhZyhudGZz
X3ZvbHVtZSAqdm9sKQlcCi17CQkJCQkJCVwKLQljbGVhcl9iaXQoTlZfIyNmbGFnLCAmKHZvbCkt
PmZsYWdzKTsJCVwKLX0KLQotLyogRW1pdCB0aGUgbnRmcyB2b2x1bWUgYml0b3BzIGZ1bmN0aW9u
cy4gKi8KLURFRklORV9OVk9MX0JJVF9PUFMoRXJyb3JzKQotREVGSU5FX05WT0xfQklUX09QUyhT
aG93U3lzdGVtRmlsZXMpCi1ERUZJTkVfTlZPTF9CSVRfT1BTKENhc2VTZW5zaXRpdmUpCi1ERUZJ
TkVfTlZPTF9CSVRfT1BTKExvZ0ZpbGVFbXB0eSkKLURFRklORV9OVk9MX0JJVF9PUFMoUXVvdGFP
dXRPZkRhdGUpCi1ERUZJTkVfTlZPTF9CSVRfT1BTKFVzbkpybmxTdGFtcGVkKQotREVGSU5FX05W
T0xfQklUX09QUyhTcGFyc2VFbmFibGVkKQotCi0jZW5kaWYgLyogX0xJTlVYX05URlNfVk9MVU1F
X0ggKi8KLS0gCjIuNDMuMAoKCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpMaW51eC1udGZzLWRldiBtYWlsaW5nIGxpc3QKTGludXgtbnRmcy1kZXZAbGlz
dHMuc291cmNlZm9yZ2UubmV0Cmh0dHBzOi8vbGlzdHMuc291cmNlZm9yZ2UubmV0L2xpc3RzL2xp
c3RpbmZvL2xpbnV4LW50ZnMtZGV2Cg==
