Return-Path: <linux-ntfs-dev-bounces@lists.sourceforge.net>
X-Original-To: lists+linux-ntfs-dev@lfdr.de
Delivered-To: lists+linux-ntfs-dev@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id D1F506564F7
	for <lists+linux-ntfs-dev@lfdr.de>; Mon, 26 Dec 2022 21:37:08 +0100 (CET)
Received: from [127.0.0.1] (helo=sfs-ml-4.v29.lw.sourceforge.com)
	by sfs-ml-4.v29.lw.sourceforge.com with esmtp (Exim 4.95)
	(envelope-from <linux-ntfs-dev-bounces@lists.sourceforge.net>)
	id 1p9uDb-0004vH-0P;
	Mon, 26 Dec 2022 20:37:07 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-4.v29.lw.sourceforge.com with esmtps (TLS1.2) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <pali@kernel.org>) id 1p9oMv-0006U4-2A;
 Mon, 26 Dec 2022 14:22:21 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=Content-Transfer-Encoding:Content-Type:MIME-Version
 :References:In-Reply-To:Message-Id:Date:Subject:To:From:Sender:Reply-To:Cc:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=nGAEkuN8Pz1SWXAdKNK9d9pZZPNH7hdrCFRMfPpyujg=; b=fHqSyAu+HEW7QdI8EB8HCGqGhM
 lq5cjBOKve9oJqU1C/Ssd0+W6mg1SqxO8rMHbQ3ORBfLWD2VWzPV6iOekSPUCsFv/cGwJXqYS6/rT
 WOxby7UovwDWyNBpTSPtxr5sEG/5q+dpweOknGfagoFJWgHLTWg91KoDFKTKIuN5BBnk=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:
 In-Reply-To:Message-Id:Date:Subject:To:From:Sender:Reply-To:Cc:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:List-Subscribe:
 List-Post:List-Owner:List-Archive;
 bh=nGAEkuN8Pz1SWXAdKNK9d9pZZPNH7hdrCFRMfPpyujg=; b=f75GS8EGqOnSNKtbHr6WXZKH/M
 r+6Qpz4G1/c57gBUjsUKI6eRoQ6LhBpS0uAcvltiq3kopa3qYY7a4AL3zZCkZaMESdXOZ7PidowQ8
 fwksYoFCO4+p3VOJD30cMFtsQSRvq+VNmXEYD39Nh5Au3odqOIonXxOuZ9qmGvwYsLa8=;
Received: from dfw.source.kernel.org ([139.178.84.217])
 by sfi-mx-2.v28.lw.sourceforge.com with esmtps
 (TLS1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.95)
 id 1p9oMt-0002CE-DT; Mon, 26 Dec 2022 14:22:20 +0000
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id 46DF360EB5;
 Mon, 26 Dec 2022 14:22:19 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 5ED7AC433F0;
 Mon, 26 Dec 2022 14:22:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1672064538;
 bh=fCynkXJ2ApONoQQC/ojXHkaREg+LG2l1GbUTcOSrgdM=;
 h=From:To:Subject:Date:In-Reply-To:References:From;
 b=TywsxGype9uslbISt9pHvZte/7BFs4KYX5tGNNHq6Gup5Au/egJh7ajRWW3I5ZY6Q
 dNfGRf9udc6MGdngo3llDZgMSBEXVBbCV8dA/hlX3gRFavc1BrO/Kp3IKliFEjPAFL
 1KvJTFn/9E+la6xGnkOkAu2oJJB2kvshIF/swsc6BufW1QvXw9vpZD+mXHVM69klHw
 4aLnUwBp/aHUw2sDfrITGtGlVVvQHLgvPAKuIx1lt20P7xTRAGAiKpkdtqYn8LJUef
 oVMbChNvkmBGKIonMuxEPSwToZQRH0hnn7xKYy4NeWiawDHyYfsC0+oQuZG2dkxgLk
 XdDQgRcxyvCtw==
Received: by pali.im (Postfix)
 id 1AAC69D7; Mon, 26 Dec 2022 15:22:18 +0100 (CET)
From: =?UTF-8?q?Pali=20Roh=C3=A1r?= <pali@kernel.org>
To: linux-fsdevel@vger.kernel.org, linux-ntfs-dev@lists.sourceforge.net,
 linux-cifs@vger.kernel.org, jfs-discussion@lists.sourceforge.net,
 linux-kernel@vger.kernel.org, Alexander Viro <viro@zeniv.linux.org.uk>,
 Jan Kara <jack@suse.cz>, "Theodore Y . Ts'o" <tytso@mit.edu>,
 Anton Altaparmakov <anton@tuxera.com>,
 OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>,
 Luis de Bethencourt <luisbg@kernel.org>,
 Salah Triki <salah.triki@gmail.com>, Steve French <sfrench@samba.org>,
 Paulo Alcantara <pc@cjr.nz>, Ronnie Sahlberg <lsahlber@redhat.com>,
 Shyam Prasad N <sprasad@microsoft.com>, Tom Talpey <tom@talpey.com>,
 Dave Kleikamp <shaggy@kernel.org>,
 Andrew Morton <akpm@linux-foundation.org>, Pavel Machek <pavel@ucw.cz>,
 Christoph Hellwig <hch@infradead.org>,
 Kari Argillander <kari.argillander@gmail.com>,
 Viacheslav Dubeyko <slava@dubeyko.com>
Date: Mon, 26 Dec 2022 15:21:48 +0100
Message-Id: <20221226142150.13324-17-pali@kernel.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20221226142150.13324-1-pali@kernel.org>
References: <20221226142150.13324-1-pali@kernel.org>
MIME-Version: 1.0
X-Spam-Score: -5.2 (-----)
X-Spam-Report: Spam detection software,
 running on the system "util-spamd-2.v13.lw.sourceforge.com", 
 has NOT identified this incoming email as spam.  The original
 message has been attached to this so you can view it or label
 similar future email.  If you have any questions, see
 the administrator of that system for details.
 Content preview: NLS table for utf8 is broken and cannot be fixed. So instead
 of broken utf8 nls functions char2uni() and uni2char() use functions
 utf8s_to_utf16s()
 and utf16s_to_utf8s() which implements correct conversion between UTF-16
 and UTF-8. 
 Content analysis details:   (-5.2 points, 6.0 required)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -5.0 RCVD_IN_DNSWL_HI       RBL: Sender listed at https://www.dnswl.org/,
 high trust [139.178.84.217 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.0 DKIMWL_WL_HIGH         DKIMwl.org - High trust sender
X-Headers-End: 1p9oMt-0002CE-DT
X-Mailman-Approved-At: Mon, 26 Dec 2022 20:37:01 +0000
Subject: [Linux-NTFS-Dev] [RFC PATCH v2 16/18] cifs: Do not use broken utf8
 NLS table for iocharset=utf8 mount option
X-BeenThere: linux-ntfs-dev@lists.sourceforge.net
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: "Discussion related to Linux NTFS development."
 <linux-ntfs-dev.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=linux-ntfs-dev>
List-Post: <mailto:linux-ntfs-dev@lists.sourceforge.net>
List-Help: <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-ntfs-dev-bounces@lists.sourceforge.net

TkxTIHRhYmxlIGZvciB1dGY4IGlzIGJyb2tlbiBhbmQgY2Fubm90IGJlIGZpeGVkLgoKU28gaW5z
dGVhZCBvZiBicm9rZW4gdXRmOCBubHMgZnVuY3Rpb25zIGNoYXIydW5pKCkgYW5kIHVuaTJjaGFy
KCkgdXNlCmZ1bmN0aW9ucyB1dGY4c190b191dGYxNnMoKSBhbmQgdXRmMTZzX3RvX3V0ZjhzKCkg
d2hpY2ggaW1wbGVtZW50cyBjb3JyZWN0CmNvbnZlcnNpb24gYmV0d2VlbiBVVEYtMTYgYW5kIFVU
Ri04LgoKV2hlbiBpb2NoYXRzZXQ9dXRmOCBpcyB1c2VkIHRoZW4gc2V0IGN0eC0+aW9jaGFyc2V0
IHRvIE5VTEwgYW5kIHVzZSBpdCBmb3IKZGlzdGluZ3Vpc2ggYmV0d2VlbiB0aGUgZmFjdCBpZiBO
TFMgdGFibGUgb3IgbmF0aXZlIFVURi04IGZ1bmN0aW9ucyBzaG91bGQKYmUgdXNlZC4KClNpZ25l
ZC1vZmYtYnk6IFBhbGkgUm9ow6FyIDxwYWxpQGtlcm5lbC5vcmc+Ci0tLQogZnMvY2lmcy9jaWZz
X3VuaWNvZGUuYyB8IDEyOCArKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0t
LQogZnMvY2lmcy9jaWZzX3VuaWNvZGUuaCB8ICAgMiArLQogZnMvY2lmcy9jaWZzZnMuYyAgICAg
ICB8ICAgMiArCiBmcy9jaWZzL2Nvbm5lY3QuYyAgICAgIHwgICA4ICsrLQogZnMvY2lmcy9kaXIu
YyAgICAgICAgICB8ICAyOCArKysrKysrLS0KIGZzL2NpZnMvd2ludWNhc2UuYyAgICAgfCAgMTQg
KysrLS0KIDYgZmlsZXMgY2hhbmdlZCwgMTI0IGluc2VydGlvbnMoKyksIDU4IGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc191bmljb2RlLmMgYi9mcy9jaWZzL2NpZnNfdW5p
Y29kZS5jCmluZGV4IGU3NTgyZGQ3OTE3OS4uOTRiODYxZTY2NmUzIDEwMDY0NAotLS0gYS9mcy9j
aWZzL2NpZnNfdW5pY29kZS5jCisrKyBiL2ZzL2NpZnMvY2lmc191bmljb2RlLmMKQEAgLTEzMCwy
MCArMTMwLDE3IEBAIGNpZnNfbWFwY2hhcihjaGFyICp0YXJnZXQsIGNvbnN0IF9fdTE2ICpmcm9t
LCBjb25zdCBzdHJ1Y3QgbmxzX3RhYmxlICpjcCwKIAkJICBjb252ZXJ0X3NmdV9jaGFyKHNyY19j
aGFyLCB0YXJnZXQpKQogCQlyZXR1cm4gbGVuOwogCi0JLyogaWYgY2hhcmFjdGVyIG5vdCBvbmUg
b2Ygc2V2ZW4gaW4gc3BlY2lhbCByZW1hcCBzZXQgKi8KLQlsZW4gPSBjcC0+dW5pMmNoYXIoc3Jj
X2NoYXIsIHRhcmdldCwgTkxTX01BWF9DSEFSU0VUX1NJWkUpOwotCWlmIChsZW4gPD0gMCkKLQkJ
Z290byBzdXJyb2dhdGVfcGFpcjsKLQotCXJldHVybiBsZW47CisJaWYgKGNwKSB7CisJCS8qIGlm
IGNoYXJhY3RlciBub3Qgb25lIG9mIHNldmVuIGluIHNwZWNpYWwgcmVtYXAgc2V0ICovCisJCWxl
biA9IGNwLT51bmkyY2hhcihzcmNfY2hhciwgdGFyZ2V0LCBOTFNfTUFYX0NIQVJTRVRfU0laRSk7
CisJCWlmIChsZW4gPD0gMCkKKwkJCWdvdG8gdW5rbm93bjsKKwl9IGVsc2UgeworCQlsZW4gPSB1
dGYxNnNfdG9fdXRmOHMoZnJvbSwgMywgVVRGMTZfTElUVExFX0VORElBTiwgdGFyZ2V0LCA2KTsK
KwkJaWYgKGxlbiA8PSAwKQorCQkJZ290byB1bmtub3duOworCX0KIAotc3Vycm9nYXRlX3BhaXI6
Ci0JLyogY29udmVydCBTVVJST0dBVEVfUEFJUiBhbmQgSVZTICovCi0JaWYgKHN0cmNtcChjcC0+
Y2hhcnNldCwgInV0ZjgiKSkKLQkJZ290byB1bmtub3duOwotCWxlbiA9IHV0ZjE2c190b191dGY4
cyhmcm9tLCAzLCBVVEYxNl9MSVRUTEVfRU5ESUFOLCB0YXJnZXQsIDYpOwotCWlmIChsZW4gPD0g
MCkKLQkJZ290byB1bmtub3duOwogCXJldHVybiBsZW47CiAKIHVua25vd246CkBAIC0yMzksNiAr
MjM2LDM3IEBAIGNpZnNfZnJvbV91dGYxNihjaGFyICp0bywgY29uc3QgX19sZTE2ICpmcm9tLCBp
bnQgdG9sZW4sIGludCBmcm9tbGVuLAogCXJldHVybiBvdXRsZW47CiB9CiAKK3N0YXRpYyBpbnQg
Y2lmc191dGY4c190b191dGYxNnMoY29uc3QgY2hhciAqcywgaW50IGlubGVuLCBfX2xlMTYgKnB3
Y3MpCit7CisJX19sZTE2ICpvcDsKKwlpbnQgc2l6ZTsKKwl1bmljb2RlX3QgdTsKKworCW9wID0g
cHdjczsKKwl3aGlsZSAoaW5sZW4gPiAwICYmICpzKSB7CisJCWlmICgqcyAmIDB4ODApIHsKKwkJ
CXNpemUgPSB1dGY4X3RvX3V0ZjMyKHMsIGlubGVuLCAmdSk7CisJCQlpZiAoc2l6ZSA8PSAwKSB7
CisJCQkJdSA9IDB4MDAzZjsgLyogQSBxdWVzdGlvbiBtYXJrICovCisJCQkJc2l6ZSA9IDE7CisJ
CQl9CisJCQlzICs9IHNpemU7CisJCQlpbmxlbiAtPSBzaXplOworCQkJaWYgKHUgPj0gMHgxMDAw
MCkgeworCQkJCXUgLT0gMHgxMDAwMDsKKwkJCQkqb3ArKyA9IF9fY3B1X3RvX2xlMTYoMHhkODAw
IHwgKCh1ID4+IDEwKSAmIDB4MDNmZikpOworCQkJCSpvcCsrID0gX19jcHVfdG9fbGUxNigweGRj
MDAgfCAodSAmIDB4MDNmZikpOworCQkJfSBlbHNlIHsKKwkJCQkqb3ArKyA9IF9fY3B1X3RvX2xl
MTYodSk7CisJCQl9CisJCX0gZWxzZSB7CisJCQkqb3ArKyA9IF9fY3B1X3RvX2xlMTYoKnMrKyk7
CisJCQlpbmxlbi0tOworCQl9CisJfQorCXJldHVybiBvcCAtIHB3Y3M7Cit9CisKIC8qCiAgKiBO
QU1FOgljaWZzX3N0cnRvVVRGMTYoKQogICoKQEAgLTI1NCwyNCArMjgyLDE0IEBAIGNpZnNfc3Ry
dG9VVEYxNihfX2xlMTYgKnRvLCBjb25zdCBjaGFyICpmcm9tLCBpbnQgbGVuLAogCXdjaGFyX3Qg
d2NoYXJfdG87IC8qIG5lZWRlZCB0byBxdWlldCBzcGFyc2UgKi8KIAogCS8qIHNwZWNpYWwgY2Fz
ZSBmb3IgdXRmOCB0byBoYW5kbGUgbm8gcGxhbmUwIGNoYXJzICovCi0JaWYgKCFzdHJjbXAoY29k
ZXBhZ2UtPmNoYXJzZXQsICJ1dGY4IikpIHsKKwlpZiAoIWNvZGVwYWdlKSB7CiAJCS8qCiAJCSAq
IGNvbnZlcnQgdXRmOCAtPiB1dGYxNiwgd2UgYXNzdW1lIHdlIGhhdmUgZW5vdWdoIHNwYWNlCiAJ
CSAqIGFzIGNhbGxlciBzaG91bGQgaGF2ZSBhc3N1bWVkIGNvbnZlcnNpb24gZG9lcyBub3Qgb3Zl
cmZsb3cKLQkJICogaW4gZGVzdGluYXRpb24gbGVuIGlzIGxlbmd0aCBpbiB3Y2hhcl90IHVuaXRz
ICgxNmJpdHMpCi0JCSAqLwotCQlpICA9IHV0ZjhzX3RvX3V0ZjE2cyhmcm9tLCBsZW4sIFVURjE2
X0xJVFRMRV9FTkRJQU4sCi0JCQkJICAgICAgICh3Y2hhcl90ICopIHRvLCBsZW4pOwotCi0JCS8q
IGlmIHN1Y2Nlc3MgdGVybWluYXRlIGFuZCBleGl0ICovCi0JCWlmIChpID49IDApCi0JCQlnb3Rv
IHN1Y2Nlc3M7Ci0JCS8qCi0JCSAqIGlmIGZhaWxzIGZhbGwgYmFjayB0byBVQ1MgZW5jb2Rpbmcg
YXMgdGhpcwotCQkgKiBmdW5jdGlvbiBzaG91bGQgbm90IHJldHVybiBuZWdhdGl2ZSB2YWx1ZXMK
LQkJICogY3VycmVudGx5IGNhbiBmYWlsIG9ubHkgaWYgc291cmNlIGNvbnRhaW5zCi0JCSAqIGlu
dmFsaWQgZW5jb2RlZCBjaGFyYWN0ZXJzCisJCSAqIGluIGRlc3RpbmF0aW9uIGxlbiBpcyBsZW5n
dGggaW4gX19sZTE2IHVuaXRzCiAJCSAqLworCQlpICA9IGNpZnNfdXRmOHNfdG9fdXRmMTZzKGZy
b20sIGxlbiwgdG8pOworCQlnb3RvIHN1Y2Nlc3M7CiAJfQogCiAJZm9yIChpID0gMDsgbGVuICYm
ICpmcm9tOyBpKyssIGZyb20gKz0gY2hhcmxlbiwgbGVuIC09IGNoYXJsZW4pIHsKQEAgLTUwMiwy
NSArNTIwLDI5IEBAIGNpZnNDb252ZXJ0VG9VVEYxNihfX2xlMTYgKnRhcmdldCwgY29uc3QgY2hh
ciAqc291cmNlLCBpbnQgc3JjbGVuLAogCQkgKiBhcyB0aGV5IHVzZSBiYWNrc2xhc2ggYXMgc2Vw
YXJhdG9yLgogCQkgKi8KIAkJaWYgKGRzdF9jaGFyID09IDApIHsKLQkJCWNoYXJsZW4gPSBjcC0+
Y2hhcjJ1bmkoc291cmNlICsgaSwgc3JjbGVuIC0gaSwgJnRtcCk7Ci0JCQlkc3RfY2hhciA9IGNw
dV90b19sZTE2KHRtcCk7Ci0KLQkJCS8qCi0JCQkgKiBpZiBubyBtYXRjaCwgdXNlIHF1ZXN0aW9u
IG1hcmssIHdoaWNoIGF0IGxlYXN0IGluCi0JCQkgKiBzb21lIGNhc2VzIHNlcnZlcyBhcyB3aWxk
IGNhcmQKLQkJCSAqLwotCQkJaWYgKGNoYXJsZW4gPiAwKQotCQkJCWdvdG8gY3RvVVRGMTY7Ci0K
LQkJCS8qIGNvbnZlcnQgU1VSUk9HQVRFX1BBSVIgKi8KLQkJCWlmIChzdHJjbXAoY3AtPmNoYXJz
ZXQsICJ1dGY4IikgfHwgIXdjaGFyX3RvKQotCQkJCWdvdG8gdW5rbm93bjsKLQkJCWlmICgqKHNv
dXJjZSArIGkpICYgMHg4MCkgewotCQkJCWNoYXJsZW4gPSB1dGY4X3RvX3V0ZjMyKHNvdXJjZSAr
IGksIDYsICZ1KTsKLQkJCQlpZiAoY2hhcmxlbiA8IDApCisJCQlpZiAoY3ApIHsKKwkJCQljaGFy
bGVuID0gY3AtPmNoYXIydW5pKHNvdXJjZSArIGksIHNyY2xlbiAtIGksICZ0bXApOworCQkJCWRz
dF9jaGFyID0gY3B1X3RvX2xlMTYodG1wKTsKKworCQkJCS8qCisJCQkJICogaWYgbm8gbWF0Y2gs
IHVzZSBxdWVzdGlvbiBtYXJrLCB3aGljaCBhdCBsZWFzdCBpbgorCQkJCSAqIHNvbWUgY2FzZXMg
c2VydmVzIGFzIHdpbGQgY2FyZAorCQkJCSAqLworCQkJCWlmIChjaGFybGVuID4gMCkKKwkJCQkJ
Z290byBjdG9VVEYxNjsKKwkJCQllbHNlCiAJCQkJCWdvdG8gdW5rbm93bjsKLQkJCX0gZWxzZQor
CQkJfQorCisJCQkvKiBVVEYtOCB0byBVVEYtMTYgY29udmVyc2lvbiAqLworCisJCQlpZiAoIXdj
aGFyX3RvKQogCQkJCWdvdG8gdW5rbm93bjsKKworCQkJY2hhcmxlbiA9IHV0ZjhfdG9fdXRmMzIo
c291cmNlICsgaSwgNiwgJnUpOworCQkJaWYgKGNoYXJsZW4gPCAwKQorCQkJCWdvdG8gdW5rbm93
bjsKKwogCQkJcmV0ICA9IHV0ZjhzX3RvX3V0ZjE2cyhzb3VyY2UgKyBpLCBjaGFybGVuLAogCQkJ
CQkgICAgICAgVVRGMTZfTElUVExFX0VORElBTiwKIAkJCQkJICAgICAgIHdjaGFyX3RvLCA2KTsK
QEAgLTU4OSw4ICs2MTEsMjYgQEAgY2lmc19sb2NhbF90b191dGYxNl9ieXRlcyhjb25zdCBjaGFy
ICpmcm9tLCBpbnQgbGVuLAogewogCWludCBjaGFybGVuOwogCWludCBpOworCWludCBvdXRsZW47
CisJdW5pY29kZV90IHVfdG87CiAJd2NoYXJfdCB3Y2hhcl90bzsKIAorCWlmICghY29kZXBhZ2Up
IHsKKwkJb3V0bGVuID0gMDsKKwkJZm9yIChpID0gMDsgbGVuICYmICpmcm9tOyBpKyssIGZyb20g
Kz0gY2hhcmxlbiwgbGVuIC09IGNoYXJsZW4pIHsKKwkJCWNoYXJsZW4gPSB1dGY4X3RvX3V0ZjMy
KGZyb20sIGxlbiwgJnVfdG8pOworCQkJLyogRmFpbGVkIGNvbnZlcnNpb24gZGVmYXVsdHMgdG8g
YSBxdWVzdGlvbiBtYXJrICovCisJCQlpZiAoY2hhcmxlbiA8IDEpIHsKKwkJCQljaGFybGVuID0g
MTsKKwkJCQlvdXRsZW4gKz0gMjsKKwkJCX0gZWxzZSBpZiAodV90byA8PSAweEZGRkYpCisJCQkJ
b3V0bGVuICs9IDI7CisJCQllbHNlCisJCQkJb3V0bGVuICs9IDQ7CisJCX0KKwkJcmV0dXJuIG91
dGxlbjsKKwl9CisKIAlmb3IgKGkgPSAwOyBsZW4gJiYgKmZyb207IGkrKywgZnJvbSArPSBjaGFy
bGVuLCBsZW4gLT0gY2hhcmxlbikgewogCQljaGFybGVuID0gY29kZXBhZ2UtPmNoYXIydW5pKGZy
b20sIGxlbiwgJndjaGFyX3RvKTsKIAkJLyogRmFpbGVkIGNvbnZlcnNpb24gZGVmYXVsdHMgdG8g
YSBxdWVzdGlvbiBtYXJrICovCmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNfdW5pY29kZS5oIGIv
ZnMvY2lmcy9jaWZzX3VuaWNvZGUuaAppbmRleCA4MGIzZDg0NTQxOWYuLmI5YTMyOTBmYWFmNyAx
MDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzX3VuaWNvZGUuaAorKysgYi9mcy9jaWZzL2NpZnNfdW5p
Y29kZS5oCkBAIC0xMDYsNyArMTA2LDcgQEAgZXh0ZXJuIF9fbGUxNiAqY2lmc19zdHJuZHVwX3Rv
X3V0ZjE2KGNvbnN0IGNoYXIgKnNyYywgY29uc3QgaW50IG1heGxlbiwKIAkJCQkgICAgIGludCBy
ZW1hcCk7CiAjZW5kaWYKIAotd2NoYXJfdCBjaWZzX3RvdXBwZXIod2NoYXJfdCBpbik7Cit1bmlj
b2RlX3QgY2lmc190b3VwcGVyKHVuaWNvZGVfdCBpbik7CiAKIC8qCiAgKiBVbmlTdHJjYXQ6ICBD
b25jYXRlbmF0ZSB0aGUgc2Vjb25kIHN0cmluZyB0byB0aGUgZmlyc3QKZGlmZiAtLWdpdCBhL2Zz
L2NpZnMvY2lmc2ZzLmMgYi9mcy9jaWZzL2NpZnNmcy5jCmluZGV4IDEwZTAwYzYyNDkyMi4uMTUz
N2JjOGJiNjk4IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNmcy5jCisrKyBiL2ZzL2NpZnMvY2lm
c2ZzLmMKQEAgLTU5MSw2ICs1OTEsOCBAQCBjaWZzX3Nob3dfb3B0aW9ucyhzdHJ1Y3Qgc2VxX2Zp
bGUgKnMsIHN0cnVjdCBkZW50cnkgKnJvb3QpCiAJCQkJCSAgIGNpZnNfc2ItPmN0eC0+ZGlyX21v
ZGUpOwogCWlmIChjaWZzX3NiLT5jdHgtPmlvY2hhcnNldCkKIAkJc2VxX3ByaW50ZihzLCAiLGlv
Y2hhcnNldD0lcyIsIGNpZnNfc2ItPmN0eC0+aW9jaGFyc2V0KTsKKwllbHNlCisJCXNlcV9wdXRz
KHMsICIsaW9jaGFyc2V0PXV0ZjgiKTsKIAlpZiAodGNvbi0+c2VhbCkKIAkJc2VxX3B1dHMocywg
IixzZWFsIik7CiAJZWxzZSBpZiAodGNvbi0+c2VzLT5zZXJ2ZXItPmlnbm9yZV9zaWduYXR1cmUp
CmRpZmYgLS1naXQgYS9mcy9jaWZzL2Nvbm5lY3QuYyBiL2ZzL2NpZnMvY29ubmVjdC5jCmluZGV4
IGQzNzEyNTlkNjgwOC4uZmI4NDFhN2JhZWY2IDEwMDY0NAotLS0gYS9mcy9jaWZzL2Nvbm5lY3Qu
YworKysgYi9mcy9jaWZzL2Nvbm5lY3QuYwpAQCAtMjY3Niw3ICsyNjc2LDExIEBAIGNvbXBhcmVf
bW91bnRfb3B0aW9ucyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBzdHJ1Y3QgY2lmc19tbnRfZGF0
YSAqbW50X2RhdGEpCiAJICAgIG9sZC0+Y3R4LT5kaXJfbW9kZSAhPSBuZXctPmN0eC0+ZGlyX21v
ZGUpCiAJCXJldHVybiAwOwogCi0JaWYgKHN0cmNtcChvbGQtPmxvY2FsX25scy0+Y2hhcnNldCwg
bmV3LT5sb2NhbF9ubHMtPmNoYXJzZXQpKQorCWlmIChvbGQtPmxvY2FsX25scyAmJiAhbmV3LT5s
b2NhbF9ubHMpCisJCXJldHVybiAwOworCWlmICghb2xkLT5sb2NhbF9ubHMgJiYgbmV3LT5sb2Nh
bF9ubHMpCisJCXJldHVybiAwOworCWlmIChvbGQtPmxvY2FsX25scyAmJiBuZXctPmxvY2FsX25s
cyAmJiBzdHJjbXAob2xkLT5sb2NhbF9ubHMtPmNoYXJzZXQsIG5ldy0+bG9jYWxfbmxzLT5jaGFy
c2V0KSkKIAkJcmV0dXJuIDA7CiAKIAlpZiAob2xkLT5jdHgtPmFjcmVnbWF4ICE9IG5ldy0+Y3R4
LT5hY3JlZ21heCkKQEAgLTMxNjIsNyArMzE2Niw3IEBAIGludCBjaWZzX3NldHVwX2NpZnNfc2Io
c3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYikKIAlpZiAoY3R4LT5pb2NoYXJzZXQgPT0gTlVM
TCkgewogCQkvKiBsb2FkX25sc19kZWZhdWx0IGNhbm5vdCByZXR1cm4gbnVsbCAqLwogCQljaWZz
X3NiLT5sb2NhbF9ubHMgPSBsb2FkX25sc19kZWZhdWx0KCk7Ci0JfSBlbHNlIHsKKwl9IGVsc2Ug
aWYgKHN0cmNtcChjdHgtPmlvY2hhcnNldCwgInV0ZjgiKSAhPSAwKSB7CiAJCWNpZnNfc2ItPmxv
Y2FsX25scyA9IGxvYWRfbmxzKGN0eC0+aW9jaGFyc2V0KTsKIAkJaWYgKGNpZnNfc2ItPmxvY2Fs
X25scyA9PSBOVUxMKSB7CiAJCQljaWZzX2RiZyhWRlMsICJDSUZTIG1vdW50IGVycm9yOiBpb2No
YXJzZXQgJXMgbm90IGZvdW5kXG4iLApkaWZmIC0tZ2l0IGEvZnMvY2lmcy9kaXIuYyBiL2ZzL2Np
ZnMvZGlyLmMKaW5kZXggYWQ0MjA4YmYxZTMyLi44M2RlYmE2NWUxODggMTAwNjQ0Ci0tLSBhL2Zz
L2NpZnMvZGlyLmMKKysrIGIvZnMvY2lmcy9kaXIuYwpAQCAtODA0LDE2ICs4MDQsMjIgQEAgc3Rh
dGljIGludCBjaWZzX2NpX2hhc2goY29uc3Qgc3RydWN0IGRlbnRyeSAqZGVudHJ5LCBzdHJ1Y3Qg
cXN0ciAqcSkKIHsKIAlzdHJ1Y3QgbmxzX3RhYmxlICpjb2RlcGFnZSA9IENJRlNfU0IoZGVudHJ5
LT5kX3NiKS0+bG9jYWxfbmxzOwogCXVuc2lnbmVkIGxvbmcgaGFzaDsKKwl1bmljb2RlX3QgdTsK
IAl3Y2hhcl90IGM7CiAJaW50IGksIGNoYXJsZW47CiAKIAloYXNoID0gaW5pdF9uYW1lX2hhc2go
ZGVudHJ5KTsKIAlmb3IgKGkgPSAwOyBpIDwgcS0+bGVuOyBpICs9IGNoYXJsZW4pIHsKLQkJY2hh
cmxlbiA9IGNvZGVwYWdlLT5jaGFyMnVuaSgmcS0+bmFtZVtpXSwgcS0+bGVuIC0gaSwgJmMpOwor
CQlpZiAoY29kZXBhZ2UpIHsKKwkJCWNoYXJsZW4gPSBjb2RlcGFnZS0+Y2hhcjJ1bmkoJnEtPm5h
bWVbaV0sIHEtPmxlbiAtIGksICZjKTsKKwkJCWlmIChsaWtlbHkoY2hhcmxlbiA+IDApKQorCQkJ
CXUgPSBjOworCQl9IGVsc2UKKwkJCWNoYXJsZW4gPSB1dGY4X3RvX3V0ZjMyKCZxLT5uYW1lW2ld
LCBxLT5sZW4gLSBpLCAmdSk7CiAJCS8qIGVycm9yIG91dCBpZiB3ZSBjYW4ndCBjb252ZXJ0IHRo
ZSBjaGFyYWN0ZXIgKi8KIAkJaWYgKHVubGlrZWx5KGNoYXJsZW4gPCAwKSkKIAkJCXJldHVybiBj
aGFybGVuOwotCQloYXNoID0gcGFydGlhbF9uYW1lX2hhc2goY2lmc190b3VwcGVyKGMpLCBoYXNo
KTsKKwkJaGFzaCA9IHBhcnRpYWxfbmFtZV9oYXNoKGNpZnNfdG91cHBlcih1KSwgaGFzaCk7CiAJ
fQogCXEtPmhhc2ggPSBlbmRfbmFtZV9oYXNoKGhhc2gpOwogCkBAIC04MjQsNiArODMwLDcgQEAg
c3RhdGljIGludCBjaWZzX2NpX2NvbXBhcmUoY29uc3Qgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAog
CQl1bnNpZ25lZCBpbnQgbGVuLCBjb25zdCBjaGFyICpzdHIsIGNvbnN0IHN0cnVjdCBxc3RyICpu
YW1lKQogewogCXN0cnVjdCBubHNfdGFibGUgKmNvZGVwYWdlID0gQ0lGU19TQihkZW50cnktPmRf
c2IpLT5sb2NhbF9ubHM7CisJdW5pY29kZV90IHUxLCB1MjsKIAl3Y2hhcl90IGMxLCBjMjsKIAlp
bnQgaSwgbDEsIGwyOwogCkBAIC04MzcsOSArODQ0LDE4IEBAIHN0YXRpYyBpbnQgY2lmc19jaV9j
b21wYXJlKGNvbnN0IHN0cnVjdCBkZW50cnkgKmRlbnRyeSwKIAkJcmV0dXJuIDE7CiAKIAlmb3Ig
KGkgPSAwOyBpIDwgbGVuOyBpICs9IGwxKSB7Ci0JCS8qIENvbnZlcnQgY2hhcmFjdGVycyBpbiBi
b3RoIHN0cmluZ3MgdG8gVVRGLTE2LiAqLwotCQlsMSA9IGNvZGVwYWdlLT5jaGFyMnVuaSgmc3Ry
W2ldLCBsZW4gLSBpLCAmYzEpOwotCQlsMiA9IGNvZGVwYWdlLT5jaGFyMnVuaSgmbmFtZS0+bmFt
ZVtpXSwgbmFtZS0+bGVuIC0gaSwgJmMyKTsKKwkJLyogQ29udmVydCBjaGFyYWN0ZXJzIGluIGJv
dGggc3RyaW5ncyB0byBVVEYtMzIuICovCisJCWlmIChjb2RlcGFnZSkgeworCQkJbDEgPSBjb2Rl
cGFnZS0+Y2hhcjJ1bmkoJnN0cltpXSwgbGVuIC0gaSwgJmMxKTsKKwkJCWwyID0gY29kZXBhZ2Ut
PmNoYXIydW5pKCZuYW1lLT5uYW1lW2ldLCBuYW1lLT5sZW4gLSBpLCAmYzIpOworCQkJaWYgKGxp
a2VseShsMSA+IDApKQorCQkJCXUxID0gYzE7CisJCQlpZiAobGlrZWx5KGwyID4gMCkpCisJCQkJ
dTIgPSBjMjsKKwkJfSBlbHNlIHsKKwkJCWwxID0gdXRmOF90b191dGYzMigmc3RyW2ldLCBsZW4g
LSBpLCAmdTEpOworCQkJbDIgPSB1dGY4X3RvX3V0ZjMyKCZuYW1lLT5uYW1lW2ldLCBuYW1lLT5s
ZW4gLSBpLCAmdTIpOworCQl9CiAKIAkJLyoKIAkJICogSWYgd2UgY2FuJ3QgY29udmVydCBlaXRo
ZXIgY2hhcmFjdGVyLCBqdXN0IGRlY2xhcmUgaXQgdG8KQEAgLTg2MCw3ICs4NzYsNyBAQCBzdGF0
aWMgaW50IGNpZnNfY2lfY29tcGFyZShjb25zdCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCiAJCQly
ZXR1cm4gMTsKIAogCQkvKiBOb3cgY29tcGFyZSB1cHBlcmNhc2UgdmVyc2lvbnMgb2YgdGhlc2Ug
Y2hhcmFjdGVycyAqLwotCQlpZiAoY2lmc190b3VwcGVyKGMxKSAhPSBjaWZzX3RvdXBwZXIoYzIp
KQorCQlpZiAoY2lmc190b3VwcGVyKHUxKSAhPSBjaWZzX3RvdXBwZXIodTIpKQogCQkJcmV0dXJu
IDE7CiAJfQogCmRpZmYgLS1naXQgYS9mcy9jaWZzL3dpbnVjYXNlLmMgYi9mcy9jaWZzL3dpbnVj
YXNlLmMKaW5kZXggMmYwNzViNWI1MGRmLi5iMzY0N2IzNWE3ZTEgMTAwNjQ0Ci0tLSBhL2ZzL2Np
ZnMvd2ludWNhc2UuYworKysgYi9mcy9jaWZzL3dpbnVjYXNlLmMKQEAgLTE3LDcgKzE3LDcgQEAK
IAogI2luY2x1ZGUgPGxpbnV4L25scy5oPgogCi13Y2hhcl90IGNpZnNfdG91cHBlcih3Y2hhcl90
IGluKTsgIC8qIHF1aWV0IHNwYXJzZSAqLwordW5pY29kZV90IGNpZnNfdG91cHBlcih1bmljb2Rl
X3QgaW4pOyAgLyogcXVpZXQgc3BhcnNlICovCiAKIHN0YXRpYyBjb25zdCB3Y2hhcl90IHQyXzAw
WzI1Nl0gPSB7CiAJMHgwMDAwLCAweDAwMDAsIDB4MDAwMCwgMHgwMDAwLCAweDAwMDAsIDB4MDAw
MCwgMHgwMDAwLCAweDAwMDAsCkBAIC02MTUsMjAgKzYxNSwyNCBAQCBzdGF0aWMgY29uc3Qgd2No
YXJfdCAqY29uc3QgdG9wbGV2ZWxbMjU2XSA9IHsKIH07CiAKIC8qKgotICogY2lmc190b3VwcGVy
IC0gY29udmVydCBhIHdjaGFyX3QgZnJvbSBsb3dlciB0byB1cHBlcmNhc2UKKyAqIGNpZnNfdG91
cHBlciAtIGNvbnZlcnQgYSB1bmljb2RlX3QgZnJvbSBsb3dlciB0byB1cHBlcmNhc2UKICAqIEBp
bjogY2hhcmFjdGVyIHRvIGNvbnZlcnQgZnJvbSBsb3dlciB0byB1cHBlcmNhc2UKICAqCi0gKiBU
aGlzIGZ1bmN0aW9uIGNvbnN1bHRzIHRoZSBzdGF0aWMgdGFibGVzIGFib3ZlIHRvIGNvbnZlcnQg
YSB3Y2hhcl90IGZyb20KKyAqIFRoaXMgZnVuY3Rpb24gY29uc3VsdHMgdGhlIHN0YXRpYyB0YWJs
ZXMgYWJvdmUgdG8gY29udmVydCBhIHVuaWNvZGVfdCBmcm9tCiAgKiBsb3dlciB0byB1cHBlcmNh
c2UuIEluIHRoZSBldmVudCB0aGF0IHRoZXJlIGlzIG5vIG1hcHBpbmcsIHRoZSBvcmlnaW5hbAog
ICogImluIiBjaGFyYWN0ZXIgaXMgcmV0dXJuZWQuCiAgKi8KLXdjaGFyX3QKLWNpZnNfdG91cHBl
cih3Y2hhcl90IGluKQordW5pY29kZV90CitjaWZzX3RvdXBwZXIodW5pY29kZV90IGluKQogewog
CXVuc2lnbmVkIGNoYXIgaWR4OwogCWNvbnN0IHdjaGFyX3QgKnRibDsKIAl3Y2hhcl90IG91dDsK
IAorCS8qIGNpZnNfdG91cHBlciB0YWJsZSBoYXMgb25seSBkZWZpbmVzIGZvciBwbGFuZS0wICov
CisJaWYgKGluID4gMHhmZmZmKQorCQlyZXR1cm4gaW47CisKIAkvKiBncmFiIHVwcGVyIGJ5dGUg
Ki8KIAlpZHggPSAoaW4gJiAweGZmMDApID4+IDg7CiAKLS0gCjIuMjAuMQoKCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1OVEZTLURldiBtYWls
aW5nIGxpc3QKTGludXgtTlRGUy1EZXZAbGlzdHMuc291cmNlZm9yZ2UubmV0Cmh0dHBzOi8vbGlz
dHMuc291cmNlZm9yZ2UubmV0L2xpc3RzL2xpc3RpbmZvL2xpbnV4LW50ZnMtZGV2Cg==
