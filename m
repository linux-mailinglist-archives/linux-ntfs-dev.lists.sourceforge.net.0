Return-Path: <linux-ntfs-dev-bounces@lists.sourceforge.net>
X-Original-To: lists+linux-ntfs-dev@lfdr.de
Delivered-To: lists+linux-ntfs-dev@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id 2817B3DF1B5
	for <lists+linux-ntfs-dev@lfdr.de>; Tue,  3 Aug 2021 17:41:37 +0200 (CEST)
Received: from [127.0.0.1] (helo=sfs-ml-2.v29.lw.sourceforge.com)
	by sfs-ml-2.v29.lw.sourceforge.com with esmtp (Exim 4.92.3)
	(envelope-from <linux-ntfs-dev-bounces@lists.sourceforge.net>)
	id 1mAwXs-0002RV-0V; Tue, 03 Aug 2021 15:41:32 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-2.v29.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.92.3)
 (envelope-from <kari.argillander@gmail.com>) id 1mAt3O-0002p2-4F
 for linux-ntfs-dev@lists.sourceforge.net; Tue, 03 Aug 2021 11:57:50 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=In-Reply-To:Content-Transfer-Encoding:Content-Type:
 MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=7m2QeRXUesY1+XwzhK8rdZuJSuRay3FEG7M5hVgxgfE=; b=jTj2aBIQJmoxBkbEE4cI3oLvBE
 drmZ6WEUXeEHbNeG/b76uecMhQT01VTufwUjC0kauom797dpc8G8XgFMcvrzMLLnagB/n3qT8kPT6
 EJnmDq6f6Jy3D/oZD4xyYGoZGq7eUo+jR5EIZGy0bXw0vsbzXHlKgJ39hdlY0IeB9naM=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=In-Reply-To:Content-Transfer-Encoding:Content-Type:MIME-Version:
 References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:List-Subscribe:
 List-Post:List-Owner:List-Archive;
 bh=7m2QeRXUesY1+XwzhK8rdZuJSuRay3FEG7M5hVgxgfE=; b=gn87ZgccKCS9sLCUBDxyPNaVKv
 lsJbvJkaGKZJnT6ey3/icTFzGV+35EAnRR+k2Amg//My6DYb/18iIf0pjxy+bmRAdaedIfkxt9v5F
 CeGXNOSrW5qJxHY41WhqPSoxwCGaG0XXPw8MgrMkyVoXAJTj7TZ4MlxIn08ZJgL+EPiA=;
Received: from mail-lf1-f42.google.com ([209.85.167.42])
 by sfi-mx-2.v28.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128) (Exim 4.92.3)
 id 1mAt2w-00044U-Vc
 for linux-ntfs-dev@lists.sourceforge.net; Tue, 03 Aug 2021 11:57:50 +0000
Received: by mail-lf1-f42.google.com with SMTP id p38so24337409lfa.0
 for <linux-ntfs-dev@lists.sourceforge.net>;
 Tue, 03 Aug 2021 04:57:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-disposition:content-transfer-encoding:in-reply-to;
 bh=7m2QeRXUesY1+XwzhK8rdZuJSuRay3FEG7M5hVgxgfE=;
 b=u5epg6nZlZgNUPAycwX9zMPEuy//QWx3ylhMsHPbLahPq5hYthADjTmJLC0rws9mSZ
 gkoy2mB/rBFfOY7wCzPbnt+EaZfcORAb7chvUW1pSbPascc2bSD5SaKuozqghNhm6iNE
 HupuQzPAGVmn2vUrMgTja4lFHfj7JgHzOfQohjH8orrK38zMs/YhPIHpgP9ulblBDhDa
 dhoPF7CnzsZNggpv5LXHZcZgus3xQ7nXVkGMmjdGYTJ3D3dTLZkvAv2oHtpivAITJPwF
 wVEzR5GtVCq3/B/LPF4WYgbMk52QdxUJmNhe/qQrTTIPgOvPP6TaUieNnwmnKTu5QLjI
 l0SQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:references
 :mime-version:content-disposition:content-transfer-encoding
 :in-reply-to;
 bh=7m2QeRXUesY1+XwzhK8rdZuJSuRay3FEG7M5hVgxgfE=;
 b=syyNcfMccIa0yfNs7n6IfSmvLTlyNXPWbqZlPYHqsjiwxXE6m3PAwWeuWKC4qub+uE
 kPen0pGsvxcW3Zdn+3oTgCrBYtVQxRBhkHGZ1/2szbX4tn5M9gV5WFpzwqZcYfsaSVtp
 rLcY3nrmLGpfJkImV9aWMT8C85a2/dwDv6qShk7tYRncQuyG1EFXrEwBHW3tFewrhg0H
 4jE4Swu9P7zV/GgWORcNrFUdmonvfjRTVffFSMuipTSRa0RMmrw690WBGTyjMbLh0pKX
 V07v3NFnxjwVr7GAKV1uXSQmQP2Z4JNIPHQUZUs7eQo1pYKoYMyAEGZyVbFAQ0yvsj9f
 i89A==
X-Gm-Message-State: AOAM530LwnfzUWzNREo4RrgVCzi3sftkduRUSbMbdrgpizjb8E5JS4JG
 4dDBomQNzl623riOflVV1Ug=
X-Google-Smtp-Source: ABdhPJyi+UDPN9ENz3A64pBsD5HVs1q8U3Ht/xaEo6NrGec1Jpbx5SsEypxjBIwcj/OtummQdjbdEQ==
X-Received: by 2002:a05:6512:15a7:: with SMTP id
 bp39mr6325729lfb.218.1627991834216; 
 Tue, 03 Aug 2021 04:57:14 -0700 (PDT)
Received: from kari-VirtualBox (85-23-89-224.bb.dnainternet.fi. [85.23.89.224])
 by smtp.gmail.com with ESMTPSA id y4sm1041698ljc.109.2021.08.03.04.57.10
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Tue, 03 Aug 2021 04:57:13 -0700 (PDT)
Date: Tue, 3 Aug 2021 14:57:09 +0300
From: Kari Argillander <kari.argillander@gmail.com>
To: Konstantin Komarov <almaz.alexandrovich@paragon-software.com>
Message-ID: <20210803115709.zd3gjmxw7oe6b4zk@kari-VirtualBox>
References: <20210729134943.778917-1-almaz.alexandrovich@paragon-software.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20210729134943.778917-1-almaz.alexandrovich@paragon-software.com>
X-Spam-Score: 0.0 (/)
X-Spam-Report: Spam Filtering performed by mx.sourceforge.net.
 See http://spamassassin.org/tag/ for more details.
 0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 (kari.argillander[at]gmail.com)
 -0.0 RCVD_IN_MSPIKE_H2      RBL: Average reputation (+2)
 [209.85.167.42 listed in wl.mailspike.net]
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/, no
 trust [209.85.167.42 listed in list.dnswl.org]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 0.0 TIME_LIMIT_EXCEEDED    Exceeded time limit / deadline
X-Headers-End: 1mAt2w-00044U-Vc
X-Mailman-Approved-At: Tue, 03 Aug 2021 15:41:30 +0000
Subject: [Linux-NTFS-Dev] [PATCH] Restyle comments to better align with
 kernel-doc
X-BeenThere: linux-ntfs-dev@lists.sourceforge.net
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: "Discussion related to Linux NTFS development."
 <linux-ntfs-dev.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=linux-ntfs-dev>
List-Post: <mailto:linux-ntfs-dev@lists.sourceforge.net>
List-Help: <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=subscribe>
Cc: andy.lavr@gmail.com, nborisov@suse.com, linux-kernel@vger.kernel.org,
 oleksandr@natalenko.name, rdunlap@infradead.org, aaptel@suse.com,
 willy@infradead.org, dsterba@suse.cz, ebiggers@kernel.org, joe@perches.com,
 hch@lst.de, viro@zeniv.linux.org.uk, linux-fsdevel@vger.kernel.org,
 linux-ntfs-dev@lists.sourceforge.net, dan.carpenter@oracle.com,
 pali@kernel.org, mark@harmstone.com, anton@tuxera.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-ntfs-dev-bounces@lists.sourceforge.net

Q2FwaXRhbGl6ZSBjb21tZW50cyBhbmQgZW5kIHdpdGggcGVyaW9kIGZvciBiZXR0ZXIgcmVhZGlu
Zy4KCkFsc28gZnVuY3Rpb24gY29tbWVudHMgYXJlIG5vdyBsaXR0bGUgbW9yZSBrZXJuZWwtZG9j
IHN0eWxlLiBUaGlzIHdheSB3ZQpjYW4gZWFzaWx5IGNvbnZlcnQgdGhlbSB0byBrZXJuZWwtZG9j
IHN0eWxlIGlmIHdlIHdhbnQuIE5vdGUgdGhhdCB0aGVzZQphcmUgbm90IHlldCBjb21wbGV0ZSB3
aXRoIHRoaXMgc3R5bGUuIEV4YW1wbGUgZnVuY3Rpb24gY29tbWVudHMgc3RhcnQKd2l0aCAvKiBh
bmQgaW4ga2VybmVsLWRvYyBzdHlsZSB0aGV5IHN0YXJ0IC8qKi4KClVzZSBpbXBlcmF0aXZlIG1v
b2QgaW4gZnVuY3Rpb24gZGVzY3JpcHRpb25zLgoKQ2hhbmdlIHdvcmRzIGxpa2UgbnRmcyAtPiBO
VEZTLCBsaW51eCAtPiBMaW51eC4KClVzZSAid2UiIG5vdCAiSSIgd2hlbiBjb21tZW50aW5nIGNv
ZGUuCgpTaWduZWQtb2ZmLWJ5OiBLYXJpIEFyZ2lsbGFuZGVyIDxrYXJpLmFyZ2lsbGFuZGVyQGdt
YWlsLmNvbT4KLS0tClllcyBJIGtub3cgdGhhdCB0aGlzIHBhdGNoIGlzIHF1aXRlIG1vbnN0ZXIu
IFRoYXQncyB3aHkgSSB0cnkgdG8gc2VuZCB0aGlzCm5vdyBiZWZvcmUgcGF0Y2ggc2VyaWVzIGdl
dCBtZXJnZWQuIEFmdGVyIHRoYXQgdGhpcyBwYXRjaCBwcm9iZWJseSBuZWVkcyB0bwpiZSBzcGxp
dHRlZCBtb3JlIGFuZCBzZW5kZWQgaW4gcGF0Y2ggc2VyaWVzLgoKSWYgc29tZW9uZSB0aGlua3Mg
dGhpcyBzaG91bGQgbm90IGJlIGFkZGVkIG5vdyBpdCBpcyBvay4gSSBoYXZlIHRyeSB0byByZWFk
CndoYXQgaXMga2VybmVsIHBoaWxvc29waHkgaW4gY2FzZSAicGF0Y2ggdG8gcGF0Y2giIGJ1dCBo
YXZlbid0IGZvdW5kIGFueQpnb29kIGluZm9ybWF0aW9uIGFib3V0IGl0LiBJdCBpcyBubyBiaWcg
ZGVhbCB0byBhZGQgbGF0ZXIuIEluIG15IG93biBtaW5kIEkKZG8gbm90IHdhbnQgdG8gdG91Y2gg
c28gbXVjaCBjb21tZW50cyBhZnRlciBjb2RlIGlzIGluLgoKSSBhbHNvIGRvbid0IGtub3cgaG93
IGVhc3kgdGhpcyBraW5kIG9mIHBhdGNoIGlzIGFwcGx5IHRvcCBvZiB0aGUgcGF0Y2gKc2VyaWVz
LgotLS0KIGZzL250ZnMzL2F0dHJpYi5jICAgfCAyMzIgKysrKysrKy0tLS0tLS0KIGZzL250ZnMz
L2F0dHJsaXN0LmMgfCAgNjQgKystLQogZnMvbnRmczMvYml0ZnVuYy5jICB8ICAgNyArLQogZnMv
bnRmczMvYml0bWFwLmMgICB8IDIwMyArKysrKystLS0tLS0KIGZzL250ZnMzL2RlYnVnLmggICAg
fCAgIDUgKy0KIGZzL250ZnMzL2Rpci5jICAgICAgfCAgNjEgKystLQogZnMvbnRmczMvZmlsZS5j
ICAgICB8ICA5OCArKystLS0KIGZzL250ZnMzL2ZyZWNvcmQuYyAgfCA0MTMgKysrKysrKysrKysr
LS0tLS0tLS0tLS0tLQogZnMvbnRmczMvZnNsb2cuYyAgICB8IDcyOCArKysrKysrKysrKysrKysr
KysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZnMvbnRmczMvZnNudGZzLmMgICB8IDI0NCAr
KysrKysrLS0tLS0tLS0KIGZzL250ZnMzL2luZGV4LmMgICAgfCA0MDAgKysrKysrKysrKysrLS0t
LS0tLS0tLS0tCiBmcy9udGZzMy9pbm9kZS5jICAgIHwgMjQzICsrKysrKysrLS0tLS0tLQogZnMv
bnRmczMvbHpudC5jICAgICB8ICA4NiArKystLS0KIGZzL250ZnMzL25hbWVpLmMgICAgfCAgNzIg
KystLS0KIGZzL250ZnMzL250ZnMuaCAgICAgfCA1MTcgKysrKysrKysrKysrKysrLS0tLS0tLS0t
LS0tLS0tLQogZnMvbnRmczMvbnRmc19mcy5oICB8IDE5OCArKysrKystLS0tLS0KIGZzL250ZnMz
L3JlY29yZC5jICAgfCAgNjAgKystLQogZnMvbnRmczMvcnVuLmMgICAgICB8IDE4NyArKysrKyst
LS0tLS0KIGZzL250ZnMzL3N1cGVyLmMgICAgfCAxNjAgKysrKystLS0tLQogZnMvbnRmczMvdXBj
YXNlLmMgICB8ICAgOSArLQogZnMvbnRmczMveGF0dHIuYyAgICB8IDEwNyArKystLS0tCiAyMSBm
aWxlcyBjaGFuZ2VkLCAyMDA4IGluc2VydGlvbnMoKyksIDIwODYgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZnMvbnRmczMvYXR0cmliLmMgYi9mcy9udGZzMy9hdHRyaWIuYwppbmRleCBiY2E4
NWU3YjZlYWYuLjRkYzYzMGIyODgxNyAxMDA2NDQKLS0tIGEvZnMvbnRmczMvYXR0cmliLmMKKysr
IGIvZnMvbnRmczMvYXR0cmliLmMKQEAgLTMsNyArMyw3IEBACiAgKgogICogQ29weXJpZ2h0IChD
KSAyMDE5LTIwMjEgUGFyYWdvbiBTb2Z0d2FyZSBHbWJILCBBbGwgcmlnaHRzIHJlc2VydmVkLgog
ICoKLSAqIFRPRE86IG1lcmdlIGF0dHJfc2V0X3NpemUvYXR0cl9kYXRhX2dldF9ibG9jay9hdHRy
X2FsbG9jYXRlX2ZyYW1lPworICogVE9ETzogTWVyZ2UgYXR0cl9zZXRfc2l6ZS9hdHRyX2RhdGFf
Z2V0X2Jsb2NrL2F0dHJfYWxsb2NhdGVfZnJhbWU/CiAgKi8KCiAjaW5jbHVkZSA8bGludXgvYmxr
ZGV2Lmg+CkBAIC0yMCw3ICsyMCw3IEBACgogLyoKICAqIFlvdSBjYW4gc2V0IGV4dGVybmFsIE5U
RlNfTUlOX0xPRzJfT0ZfQ0xVTVAvTlRGU19NQVhfTE9HMl9PRl9DTFVNUCB0byBtYW5hZ2UKLSAq
IHByZWFsbG9jYXRlIGFsZ29yaXRobQorICogcHJlYWxsb2NhdGUgYWxnb3JpdGhtLgogICovCiAj
aWZuZGVmIE5URlNfTUlOX0xPRzJfT0ZfQ0xVTVAKICNkZWZpbmUgTlRGU19NSU5fTE9HMl9PRl9D
TFVNUCAxNgpAQCAtMzUsMTAgKzM1LDYgQEAKIC8vIDE2RwogI2RlZmluZSBOVEZTX0NMVU1QX01B
WCAoMXVsbCA8PCAoTlRGU19NQVhfTE9HMl9PRl9DTFVNUCArIDgpKQoKLS8qCi0gKiBnZXRfcHJl
X2FsbG9jYXRlZAotICoKLSAqLwogc3RhdGljIGlubGluZSB1NjQgZ2V0X3ByZV9hbGxvY2F0ZWQo
dTY0IHNpemUpCiB7CiAJdTMyIGNsdW1wOwpAQCAtNjUsNyArNjEsNyBAQCBzdGF0aWMgaW5saW5l
IHU2NCBnZXRfcHJlX2FsbG9jYXRlZCh1NjQgc2l6ZSkKIC8qCiAgKiBhdHRyX211c3RfYmVfcmVz
aWRlbnQKICAqCi0gKiByZXR1cm5zIHRydWUgaWYgYXR0cmlidXRlIG11c3QgYmUgcmVzaWRlbnQK
KyAqIFJldHVybjogVHJ1ZSBpZiBhdHRyaWJ1dGUgbXVzdCBiZSByZXNpZGVudC4KICAqLwogc3Rh
dGljIGlubGluZSBib29sIGF0dHJfbXVzdF9iZV9yZXNpZGVudChzdHJ1Y3QgbnRmc19zYl9pbmZv
ICpzYmksCiAJCQkJCSBlbnVtIEFUVFJfVFlQRSB0eXBlKQpAQCAtOTAsOSArODYsNyBAQCBzdGF0
aWMgaW5saW5lIGJvb2wgYXR0cl9tdXN0X2JlX3Jlc2lkZW50KHN0cnVjdCBudGZzX3NiX2luZm8g
KnNiaSwKIH0KCiAvKgotICogYXR0cl9sb2FkX3J1bnMKLSAqCi0gKiBsb2FkIGFsbCBydW5zIHN0
b3JlZCBpbiAnYXR0cicKKyAqIGF0dHJfbG9hZF9ydW5zIC0gTG9hZCBhbGwgcnVucyBzdG9yZWQg
aW4gQGF0dHIuCiAgKi8KIGludCBhdHRyX2xvYWRfcnVucyhzdHJ1Y3QgQVRUUklCICphdHRyLCBz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCSAgIHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgY29uc3Qg
Q0xTVCAqdmNuKQpAQCAtMTIxLDkgKzExNSw3IEBAIGludCBhdHRyX2xvYWRfcnVucyhzdHJ1Y3Qg
QVRUUklCICphdHRyLCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiB9CgogLyoKLSAqIGludCBydW5f
ZGVhbGxvY2F0ZV9leAotICoKLSAqIERlYWxsb2NhdGUgY2x1c3RlcnMKKyAqIHJ1bl9kZWFsbG9j
YXRlX2V4IC0gRGVhbGxvY2F0ZSBjbHVzdGVycy4KICAqLwogc3RhdGljIGludCBydW5fZGVhbGxv
Y2F0ZV9leChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIHN0cnVjdCBydW5zX3RyZWUgKnJ1biwK
IAkJCSAgICAgQ0xTVCB2Y24sIENMU1QgbGVuLCBDTFNUICpkb25lLCBib29sIHRyaW0pCkBAIC0x
NjMsNyArMTU1LDcgQEAgc3RhdGljIGludCBydW5fZGVhbGxvY2F0ZV9leChzdHJ1Y3QgbnRmc19z
Yl9pbmZvICpzYmksIHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKIAkJdmNuX25leHQgPSB2Y24gKyBj
bGVuOwogCQlpZiAoIXJ1bl9nZXRfZW50cnkocnVuLCArK2lkeCwgJnZjbiwgJmxjbiwgJmNsZW4p
IHx8CiAJCSAgICB2Y24gIT0gdmNuX25leHQpIHsKLQkJCS8vIHNhdmUgbWVtb3J5IC0gZG9uJ3Qg
bG9hZCBlbnRpcmUgcnVuCisJCQkvKiBTYXZlIG1lbW9yeSAtIGRvbid0IGxvYWQgZW50aXJlIHJ1
bi4gKi8KIAkJCWdvdG8gZmFpbGVkOwogCQl9CiAJfQpAQCAtMTc2LDkgKzE2OCw3IEBAIHN0YXRp
YyBpbnQgcnVuX2RlYWxsb2NhdGVfZXgoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1Y3Qg
cnVuc190cmVlICpydW4sCiB9CgogLyoKLSAqIGF0dHJfYWxsb2NhdGVfY2x1c3RlcnMKLSAqCi0g
KiBmaW5kIGZyZWUgc3BhY2UsIG1hcmsgaXQgYXMgdXNlZCBhbmQgc3RvcmUgaW4gJ3J1bicKKyAq
IGF0dHJfYWxsb2NhdGVfY2x1c3RlcnMgLSBGaW5kIGZyZWUgc3BhY2UsIG1hcmsgaXQgYXMgdXNl
ZCBhbmQgc3RvcmUgaW4gQHJ1bi4KICAqLwogaW50IGF0dHJfYWxsb2NhdGVfY2x1c3RlcnMoc3Ry
dWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1Y3QgcnVuc190cmVlICpydW4sCiAJCQkgICBDTFNU
IHZjbiwgQ0xTVCBsY24sIENMU1QgbGVuLCBDTFNUICpwcmVfYWxsb2MsCkBAIC0yMDcsNyArMTk3
LDcgQEAgaW50IGF0dHJfYWxsb2NhdGVfY2x1c3RlcnMoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2Jp
LCBzdHJ1Y3QgcnVuc190cmVlICpydW4sCiAJCWlmIChuZXdfbGNuICYmIHZjbiA9PSB2Y24wKQog
CQkJKm5ld19sY24gPSBsY247CgotCQkvKiBBZGQgbmV3IGZyYWdtZW50IGludG8gcnVuIHN0b3Jh
Z2UgKi8KKwkJLyogQWRkIG5ldyBmcmFnbWVudCBpbnRvIHJ1biBzdG9yYWdlLiAqLwogCQlpZiAo
IXJ1bl9hZGRfZW50cnkocnVuLCB2Y24sIGxjbiwgZmxlbiwgb3B0ID09IEFMTE9DQVRFX01GVCkp
IHsKIAkJCWRvd25fd3JpdGVfbmVzdGVkKCZ3bmQtPnJ3X2xvY2ssIEJJVE1BUF9NVVRFWF9DTFVT
VEVSUyk7CiAJCQl3bmRfc2V0X2ZyZWUod25kLCBsY24sIGZsZW4pOwpAQCAtMjI4LDcgKzIxOCw3
IEBAIGludCBhdHRyX2FsbG9jYXRlX2NsdXN0ZXJzKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwg
c3RydWN0IHJ1bnNfdHJlZSAqcnVuLAogCX0KCiBvdXQ6Ci0JLyogdW5kbyAqLworCS8qIFVuZG8u
ICovCiAJcnVuX2RlYWxsb2NhdGVfZXgoc2JpLCBydW4sIHZjbjAsIHZjbiAtIHZjbjAsIE5VTEws
IGZhbHNlKTsKIAlydW5fdHJ1bmNhdGUocnVuLCB2Y24wKTsKCkBAIC0yMzYsOCArMjI2LDEwIEBA
IGludCBhdHRyX2FsbG9jYXRlX2NsdXN0ZXJzKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgc3Ry
dWN0IHJ1bnNfdHJlZSAqcnVuLAogfQoKIC8qCi0gKiBpZiBwYWdlIGlzIG5vdCBOVUxMIC0gaXQg
aXMgYWxyZWFkeSBjb250YWlucyByZXNpZGVudCBkYXRhCi0gKiBhbmQgbG9ja2VkIChjYWxsZWQg
ZnJvbSBuaV93cml0ZV9mcmFtZSkKKyAqIGF0dHJfbWFrZV9ub25yZXNpZGVudAorICoKKyAqIElm
IHBhZ2UgaXMgbm90IE5VTEwgLSBpdCBpcyBhbHJlYWR5IGNvbnRhaW5zIHJlc2lkZW50IGRhdGEK
KyAqIGFuZCBsb2NrZWQgKGNhbGxlZCBmcm9tIG5pX3dyaXRlX2ZyYW1lKCkpLgogICovCiBpbnQg
YXR0cl9tYWtlX25vbnJlc2lkZW50KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJJ
QiAqYXR0ciwKIAkJCSAgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUsIHN0cnVjdCBtZnRfaW5v
ZGUgKm1pLApAQCAtMjc1LDcgKzI2Nyw3IEBAIGludCBhdHRyX21ha2Vfbm9ucmVzaWRlbnQoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAoKIAlydW5faW5pdChydW4p
OwoKLQkvKiBtYWtlIGEgY29weSBvZiBvcmlnaW5hbCBhdHRyaWJ1dGUgKi8KKwkvKiBNYWtlIGEg
Y29weSBvZiBvcmlnaW5hbCBhdHRyaWJ1dGUuICovCiAJYXR0cl9zID0gbnRmc19tZW1kdXAoYXR0
ciwgYXNpemUpOwogCWlmICghYXR0cl9zKSB7CiAJCWVyciA9IC1FTk9NRU07CkBAIC0yODMsNyAr
Mjc1LDcgQEAgaW50IGF0dHJfbWFrZV9ub25yZXNpZGVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJfQoKIAlpZiAoIWxlbikgewotCQkvKiBlbXB0eSByZXNp
ZGVudCAtPiBlbXB0eSBub25yZXNpZGVudCAqLworCQkvKiBFbXB0eSByZXNpZGVudCAtPiBFbXB0
eSBub25yZXNpZGVudC4gKi8KIAkJYWxlbiA9IDA7CiAJfSBlbHNlIHsKIAkJY29uc3QgY2hhciAq
ZGF0YSA9IHJlc2lkZW50X2RhdGEoYXR0cik7CkBAIC0yOTQsNyArMjg2LDcgQEAgaW50IGF0dHJf
bWFrZV9ub25yZXNpZGVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0
dHIsCiAJCQlnb3RvIG91dDE7CgogCQlpZiAoIXJzaXplKSB7Ci0JCQkvKiBlbXB0eSByZXNpZGVu
dCAtPiBub24gZW1wdHkgbm9ucmVzaWRlbnQgKi8KKwkJCS8qIEVtcHR5IHJlc2lkZW50IC0+IE5v
biBlbXB0eSBub25yZXNpZGVudC4gKi8KIAkJfSBlbHNlIGlmICghaXNfZGF0YSkgewogCQkJZXJy
ID0gbnRmc19zYl93cml0ZV9ydW4oc2JpLCBydW4sIDAsIGRhdGEsIHJzaXplKTsKIAkJCWlmIChl
cnIpCkBAIC0zMTksNyArMzExLDcgQEAgaW50IGF0dHJfbWFrZV9ub25yZXNpZGVudChzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJCX0KIAl9CgotCS8qIHJlbW92
ZSBvcmlnaW5hbCBhdHRyaWJ1dGUgKi8KKwkvKiBSZW1vdmUgb3JpZ2luYWwgYXR0cmlidXRlLiAq
LwogCXVzZWQgLT0gYXNpemU7CiAJbWVtbW92ZShhdHRyLCBBZGQyUHRyKGF0dHIsIGFzaXplKSwg
dXNlZCAtIGFvZmYpOwogCXJlYy0+dXNlZCA9IGNwdV90b19sZTMyKHVzZWQpOwpAQCAtMzQyLDcg
KzMzNCw3IEBAIGludCBhdHRyX21ha2Vfbm9ucmVzaWRlbnQoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBzdHJ1Y3QgQVRUUklCICphdHRyLAogCWlmIChpc19kYXRhKQogCQluaS0+bmlfZmxhZ3MgJj0g
fk5JX0ZMQUdfUkVTSURFTlQ7CgotCS8qIFJlc2lkZW50IGF0dHJpYnV0ZSBiZWNvbWVzIG5vbiBy
ZXNpZGVudCAqLworCS8qIFJlc2lkZW50IGF0dHJpYnV0ZSBiZWNvbWVzIG5vbiByZXNpZGVudC4g
Ki8KIAlyZXR1cm4gMDsKCiBvdXQzOgpAQCAtMzUyLDIwICszNDQsMTggQEAgaW50IGF0dHJfbWFr
ZV9ub25yZXNpZGVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIs
CiAJcmVjLT51c2VkID0gY3B1X3RvX2xlMzIodXNlZCArIGFzaXplKTsKIAltaS0+ZGlydHkgPSB0
cnVlOwogb3V0MjoKLQkvKiB1bmRvOiBkbyBub3QgdHJpbSBuZXcgYWxsb2NhdGVkIGNsdXN0ZXJz
ICovCisJLyogVW5kbzogRG8gbm90IHRyaW0gbmV3IGFsbG9jYXRlZCBjbHVzdGVycy4gKi8KIAly
dW5fZGVhbGxvY2F0ZShzYmksIHJ1biwgZmFsc2UpOwogCXJ1bl9jbG9zZShydW4pOwogb3V0MToK
IAludGZzX2ZyZWUoYXR0cl9zKTsKLQkvKnJlaW5zZXJ0IGxlKi8KKwkvKiBSZWluc2VydCBsZS4g
Ki8KIG91dDoKIAlyZXR1cm4gZXJyOwogfQoKIC8qCi0gKiBhdHRyX3NldF9zaXplX3JlcwotICoK
LSAqIGhlbHBlciBmb3IgYXR0cl9zZXRfc2l6ZQorICogYXR0cl9zZXRfc2l6ZV9yZXMgLSBIZWxw
ZXIgZm9yIGF0dHJfc2V0X3NpemUoKS4KICAqLwogc3RhdGljIGludCBhdHRyX3NldF9zaXplX3Jl
cyhzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJCQkgICAgIHN0
cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlLCBzdHJ1Y3QgbWZ0X2lub2RlICptaSwKQEAgLTQwNywx
NCArMzk3LDEzIEBAIHN0YXRpYyBpbnQgYXR0cl9zZXRfc2l6ZV9yZXMoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAogfQoKIC8qCi0gKiBhdHRyX3NldF9zaXplCisg
KiBhdHRyX3NldF9zaXplIC0gQ2hhbmdlIHRoZSBzaXplIG9mIGF0dHJpYnV0ZS4KICAqCi0gKiBj
aGFuZ2UgdGhlIHNpemUgb2YgYXR0cmlidXRlCiAgKiBFeHRlbmQ6Ci0gKiAgIC0gc3BhcnNlL2Nv
bXByZXNzZWQ6IG5vIGFsbG9jYXRlZCBjbHVzdGVycwotICogICAtIG5vcm1hbDogYXBwZW5kIGFs
bG9jYXRlZCBhbmQgcHJlYWxsb2NhdGVkIG5ldyBjbHVzdGVycworICogICAtIFNwYXJzZS9jb21w
cmVzc2VkOiBObyBhbGxvY2F0ZWQgY2x1c3RlcnMuCisgKiAgIC0gTm9ybWFsOiBBcHBlbmQgYWxs
b2NhdGVkIGFuZCBwcmVhbGxvY2F0ZWQgbmV3IGNsdXN0ZXJzLgogICogU2hyaW5rOgotICogICAt
IG5vIGRlYWxsb2NhdGUgaWYga2VlcF9wcmVhbGxvYyBpcyBzZXQKKyAqICAgLSBObyBkZWFsbG9j
YXRlIGlmIEBrZWVwX3ByZWFsbG9jIGlzIHNldC4KICAqLwogaW50IGF0dHJfc2V0X3NpemUoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJfVFlQRSB0eXBlLAogCQkgIGNvbnN0IF9fbGUx
NiAqbmFtZSwgdTggbmFtZV9sZW4sIHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKQEAgLTQ1MSw3ICs0
NDAsNyBAQCBpbnQgYXR0cl9zZXRfc2l6ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRU
Ul9UWVBFIHR5cGUsCiAJCWlmIChlcnIgfHwgIWF0dHJfYi0+bm9uX3JlcykKIAkJCWdvdG8gb3V0
OwoKLQkJLyogbGF5b3V0IG9mIHJlY29yZHMgbWF5IGJlIGNoYW5nZWQsIHNvIGRvIGEgZnVsbCBz
ZWFyY2ggKi8KKwkJLyogTGF5b3V0IG9mIHJlY29yZHMgbWF5IGJlIGNoYW5nZWQsIHNvIGRvIGEg
ZnVsbCBzZWFyY2guICovCiAJCWdvdG8gYWdhaW47CiAJfQoKQEAgLTUzMCwxMCArNTE5LDEwIEBA
IGludCBhdHRyX3NldF9zaXplKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUg
dHlwZSwKIGFkZF9hbGxvY19pbl9zYW1lX2F0dHJfc2VnOgogCQlsY24gPSAwOwogCQlpZiAoaXNf
bWZ0KSB7Ci0JCQkvKiBtZnQgYWxsb2NhdGVzIGNsdXN0ZXJzIGZyb20gbWZ0em9uZSAqLworCQkJ
LyogTUZUIGFsbG9jYXRlcyBjbHVzdGVycyBmcm9tIE1GVCB6b25lLiAqLwogCQkJcHJlX2FsbG9j
ID0gMDsKIAkJfSBlbHNlIGlmIChpc19leHQpIHsKLQkJCS8qIG5vIHByZWFsbG9jYXRlIGZvciBz
cGFyc2UvY29tcHJlc3MgKi8KKwkJCS8qIE5vIHByZWFsbG9jYXRlIGZvciBzcGFyc2UvY29tcHJl
c3MuICovCiAJCQlwcmVfYWxsb2MgPSAwOwogCQl9IGVsc2UgaWYgKHByZV9hbGxvYyA9PSAtMSkg
ewogCQkJcHJlX2FsbG9jID0gMDsKQEAgLTU0NCw3ICs1MzMsNyBAQCBpbnQgYXR0cl9zZXRfc2l6
ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCQkJcHJlX2Fs
bG9jID0gbmV3X2FsZW4yIC0gbmV3X2FsZW47CiAJCQl9CgotCQkJLyogR2V0IHRoZSBsYXN0IGxj
biB0byBhbGxvY2F0ZSBmcm9tICovCisJCQkvKiBHZXQgdGhlIGxhc3QgTENOIHRvIGFsbG9jYXRl
IGZyb20uICovCiAJCQlpZiAob2xkX2FsZW4gJiYKIAkJCSAgICAhcnVuX2xvb2t1cF9lbnRyeShy
dW4sIHZjbiwgJmxjbiwgTlVMTCwgTlVMTCkpIHsKIAkJCQlsY24gPSBTUEFSU0VfTENOOwpAQCAt
NTc1LDcgKzU2NCw3IEBAIGludCBhdHRyX3NldF9zaXplKHN0cnVjdCBudGZzX2lub2RlICpuaSwg
ZW51bSBBVFRSX1RZUEUgdHlwZSwKIAkJCX0KIAkJCWFsZW4gPSB0b19hbGxvY2F0ZTsKIAkJfSBl
bHNlIHsKLQkJCS8qIH4zIGJ5dGVzIHBlciBmcmFnbWVudCAqLworCQkJLyogfjMgYnl0ZXMgcGVy
IGZyYWdtZW50LiAqLwogCQkJZXJyID0gYXR0cl9hbGxvY2F0ZV9jbHVzdGVycygKIAkJCQlzYmks
IHJ1biwgdmNuLCBsY24sIHRvX2FsbG9jYXRlLCAmcHJlX2FsbG9jLAogCQkJCWlzX21mdCA/IEFM
TE9DQVRFX01GVCA6IDAsICZhbGVuLApAQCAtNjA3LDEyICs1OTYsMTIgQEAgaW50IGF0dHJfc2V0
X3NpemUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJfVFlQRSB0eXBlLAogCQltaV9i
LT5kaXJ0eSA9IHRydWU7CgogCQlpZiAobmV4dF9zdmNuID49IHZjbiAmJiAhdG9fYWxsb2NhdGUp
IHsKLQkJCS8qIE5vcm1hbCB3YXkuIHVwZGF0ZSBhdHRyaWJ1dGUgYW5kIGV4aXQgKi8KKwkJCS8q
IE5vcm1hbCB3YXkuIFVwZGF0ZSBhdHRyaWJ1dGUgYW5kIGV4aXQuICovCiAJCQlhdHRyX2ItPm5y
ZXMuZGF0YV9zaXplID0gY3B1X3RvX2xlNjQobmV3X3NpemUpOwogCQkJZ290byBvazsKIAkJfQoK
LQkJLyogYXQgbGVhc3QgdHdvIG1mdCB0byBhdm9pZCByZWN1cnNpdmUgbG9vcCovCisJCS8qIEF0
IGxlYXN0IHR3byBNRlQgdG8gYXZvaWQgcmVjdXJzaXZlIGxvb3AuICovCiAJCWlmIChpc19tZnQg
JiYgbmV4dF9zdmNuID09IHZjbiAmJgogCQkgICAgKCh1NjQpZG9uZSA8PCBzYmktPmNsdXN0ZXJf
Yml0cykgPj0gMiAqIHNiaS0+cmVjb3JkX3NpemUpIHsKIAkJCW5ld19zaXplID0gbmV3X2FsbG9j
X3RtcDsKQEAgLTYzNyw3ICs2MjYsNyBAQCBpbnQgYXR0cl9zZXRfc2l6ZShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCQlpZiAobmV4dF9zdmNuIDwgdmNuKQog
CQkJCWdvdG8gcGFja19ydW5zOwoKLQkJCS8qIGxheW91dCBvZiByZWNvcmRzIGlzIGNoYW5nZWQg
Ki8KKwkJCS8qIExheW91dCBvZiByZWNvcmRzIGlzIGNoYW5nZWQuICovCiAJCQlnb3RvIGFnYWlu
OwogCQl9CgpAQCAtNjQ1LDE1ICs2MzQsMTUgQEAgaW50IGF0dHJfc2V0X3NpemUoc3RydWN0IG50
ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJfVFlQRSB0eXBlLAogCQkJZXJyID0gbmlfY3JlYXRlX2F0
dHJfbGlzdChuaSk7CiAJCQlpZiAoZXJyKQogCQkJCWdvdG8gb3V0OwotCQkJLyogbGF5b3V0IG9m
IHJlY29yZHMgaXMgY2hhbmdlZCAqLworCQkJLyogTGF5b3V0IG9mIHJlY29yZHMgaXMgY2hhbmdl
ZC4gKi8KIAkJfQoKIAkJaWYgKG5leHRfc3ZjbiA+PSB2Y24pIHsKLQkJCS8qIHRoaXMgaXMgbWZ0
IGRhdGEsIHJlcGVhdCAqLworCQkJLyogVGhpcyBpcyBNRlQgZGF0YSwgcmVwZWF0LiAqLwogCQkJ
Z290byBhZ2FpbjsKIAkJfQoKLQkJLyogaW5zZXJ0IG5ldyBhdHRyaWJ1dGUgc2VnbWVudCAqLwor
CQkvKiBJbnNlcnQgbmV3IGF0dHJpYnV0ZSBzZWdtZW50LiAqLwogCQllcnIgPSBuaV9pbnNlcnRf
bm9ucmVzaWRlbnQobmksIHR5cGUsIG5hbWUsIG5hbWVfbGVuLCBydW4sCiAJCQkJCSAgICBuZXh0
X3N2Y24sIHZjbiAtIG5leHRfc3ZjbiwKIAkJCQkJICAgIGF0dHJfYi0+ZmxhZ3MsICZhdHRyLCAm
bWkpOwpAQCAtNjY3LDggKzY1NiwxMCBAQCBpbnQgYXR0cl9zZXRfc2l6ZShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCWV2Y24gPSBsZTY0X3RvX2NwdShhdHRy
LT5ucmVzLmV2Y24pOwoKIAkJbGVfYiA9IE5VTEw7Ci0JCS8qIGxheW91dCBvZiByZWNvcmRzIG1h
eWJlIGNoYW5nZWQgKi8KLQkJLyogZmluZCBiYXNlIGF0dHJpYnV0ZSB0byB1cGRhdGUqLworCQkv
KgorCQkgKiBMYXlvdXQgb2YgcmVjb3JkcyBtYXliZSBjaGFuZ2VkLgorCQkgKiBGaW5kIGJhc2Ug
YXR0cmlidXRlIHRvIHVwZGF0ZS4KKwkJICovCiAJCWF0dHJfYiA9IG5pX2ZpbmRfYXR0cihuaSwg
TlVMTCwgJmxlX2IsIHR5cGUsIG5hbWUsIG5hbWVfbGVuLAogCQkJCSAgICAgIE5VTEwsICZtaV9i
KTsKIAkJaWYgKCFhdHRyX2IpIHsKQEAgLTcwNCwxMSArNjk1LDExIEBAIGludCBhdHRyX3NldF9z
aXplKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIAkJCXUxNiBs
ZV9zeiA9IGxlMTZfdG9fY3B1KGxlLT5zaXplKTsKCiAJCQkvKgotCQkJICogTk9URTogbGlzdCBl
bnRyaWVzIGZvciBvbmUgYXR0cmlidXRlIGFyZSBhbHdheXMKKwkJCSAqIE5PVEU6IExpc3QgZW50
cmllcyBmb3Igb25lIGF0dHJpYnV0ZSBhcmUgYWx3YXlzCiAJCQkgKiB0aGUgc2FtZSBzaXplLiBX
ZSBkZWFsIHdpdGggbGFzdCBlbnRyeSAodmNuPT0wKQogCQkJICogYW5kIGl0IGlzIG5vdCBmaXJz
dCBpbiBlbnRyaWVzIGFycmF5Ci0JCQkgKiAobGlzdCBlbnRyeSBmb3Igc3RkIGF0dHJpYnV0ZSBh
bHdheXMgZmlyc3QpCi0JCQkgKiBTbyBpdCBpcyBzYWZlIHRvIHN0ZXAgYmFjaworCQkJICogKGxp
c3QgZW50cnkgZm9yIHN0ZCBhdHRyaWJ1dGUgYWx3YXlzIGZpcnN0KS4KKwkJCSAqIFNvIGl0IGlz
IHNhZmUgdG8gc3RlcCBiYWNrLgogCQkJICovCiAJCQltaV9yZW1vdmVfYXR0cihtaSwgYXR0cik7
CgpAQCAtNzkzLDcgKzc4NCw3IEBAIGludCBhdHRyX3NldF9zaXplKHN0cnVjdCBudGZzX2lub2Rl
ICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIAlpZiAoIWVyciAmJiBhdHRyX2IgJiYgcmV0KQog
CQkqcmV0ID0gYXR0cl9iOwoKLQkvKiB1cGRhdGUgaW5vZGVfc2V0X2J5dGVzKi8KKwkvKiBVcGRh
dGUgaW5vZGVfc2V0X2J5dGVzLiAqLwogCWlmICghZXJyICYmICgodHlwZSA9PSBBVFRSX0RBVEEg
JiYgIW5hbWVfbGVuKSB8fAogCQkgICAgICh0eXBlID09IEFUVFJfQUxMT0MgJiYgbmFtZSA9PSBJ
MzBfTkFNRSkpKSB7CiAJCWJvb2wgZGlydHkgPSBmYWxzZTsKQEAgLTg0Myw3ICs4MzQsNyBAQCBp
bnQgYXR0cl9kYXRhX2dldF9ibG9jayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIENMU1QgdmNuLCBD
TFNUIGNsZW4sIENMU1QgKmxjbiwKIAl1cF9yZWFkKCZuaS0+ZmlsZS5ydW5fbG9jayk7CgogCWlm
IChvayAmJiAoKmxjbiAhPSBTUEFSU0VfTENOIHx8ICFuZXcpKSB7Ci0JCS8qIG5vcm1hbCB3YXkg
Ki8KKwkJLyogTm9ybWFsIHdheS4gKi8KIAkJcmV0dXJuIDA7CiAJfQoKQEAgLTkwOSw3ICs5MDAs
NyBAQCBpbnQgYXR0cl9kYXRhX2dldF9ibG9jayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIENMU1Qg
dmNuLCBDTFNUIGNsZW4sIENMU1QgKmxjbiwKIAlpZiAoIW9rKSB7CiAJCW9rID0gcnVuX2xvb2t1
cF9lbnRyeShydW4sIHZjbiwgbGNuLCBsZW4sIE5VTEwpOwogCQlpZiAob2sgJiYgKCpsY24gIT0g
U1BBUlNFX0xDTiB8fCAhbmV3KSkgewotCQkJLyogbm9ybWFsIHdheSAqLworCQkJLyogTm9ybWFs
IHdheS4gKi8KIAkJCWVyciA9IDA7CiAJCQlnb3RvIG9rOwogCQl9CkBAIC05MzIsNyArOTIzLDcg
QEAgaW50IGF0dHJfZGF0YV9nZXRfYmxvY2soc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBDTFNUIHZj
biwgQ0xTVCBjbGVuLCBDTFNUICpsY24sCiAJCWdvdG8gb3V0OwogCX0KCi0JLyogR2V0IHRoZSBs
YXN0IGxjbiB0byBhbGxvY2F0ZSBmcm9tICovCisJLyogR2V0IHRoZSBsYXN0IExDTiB0byBhbGxv
Y2F0ZSBmcm9tLiAqLwogCWhpbnQgPSAwOwoKIAlpZiAodmNuID4gZXZjbjEpIHsKQEAgLTk3MCwy
MCArOTYxLDIwIEBAIGludCBhdHRyX2RhdGFfZ2V0X2Jsb2NrKHN0cnVjdCBudGZzX2lub2RlICpu
aSwgQ0xTVCB2Y24sIENMU1QgY2xlbiwgQ0xTVCAqbGNuLAogCW1pX2ItPmRpcnR5ID0gdHJ1ZTsK
IAltYXJrX2lub2RlX2RpcnR5KCZuaS0+dmZzX2lub2RlKTsKCi0JLyogc3RvcmVkIFt2Y24gOiBu
ZXh0X3N2Y24pIGZyb20gW3ZjbiA6IGVuZCkgKi8KKwkvKiBTdG9yZWQgW3ZjbiA6IG5leHRfc3Zj
bikgZnJvbSBbdmNuIDogZW5kKS4gKi8KIAluZXh0X3N2Y24gPSBsZTY0X3RvX2NwdShhdHRyLT5u
cmVzLmV2Y24pICsgMTsKCiAJaWYgKGVuZCA8PSBldmNuMSkgewogCQlpZiAobmV4dF9zdmNuID09
IGV2Y24xKSB7Ci0JCQkvKiBOb3JtYWwgd2F5LiB1cGRhdGUgYXR0cmlidXRlIGFuZCBleGl0ICov
CisJCQkvKiBOb3JtYWwgd2F5LiBVcGRhdGUgYXR0cmlidXRlIGFuZCBleGl0LiAqLwogCQkJZ290
byBvazsKIAkJfQotCQkvKiBhZGQgbmV3IHNlZ21lbnQgW25leHRfc3ZjbiA6IGV2Y24xIC0gbmV4
dF9zdmNuICkqLworCQkvKiBBZGQgbmV3IHNlZ21lbnQgW25leHRfc3ZjbiA6IGV2Y24xIC0gbmV4
dF9zdmNuKS4gKi8KIAkJaWYgKCFuaS0+YXR0cl9saXN0LnNpemUpIHsKIAkJCWVyciA9IG5pX2Ny
ZWF0ZV9hdHRyX2xpc3QobmkpOwogCQkJaWYgKGVycikKIAkJCQlnb3RvIG91dDsKLQkJCS8qIGxh
eW91dCBvZiByZWNvcmRzIGlzIGNoYW5nZWQgKi8KKwkJCS8qIExheW91dCBvZiByZWNvcmRzIGlz
IGNoYW5nZWQuICovCiAJCQlsZV9iID0gTlVMTDsKIAkJCWF0dHJfYiA9IG5pX2ZpbmRfYXR0cihu
aSwgTlVMTCwgJmxlX2IsIEFUVFJfREFUQSwgTlVMTCwKIAkJCQkJICAgICAgMCwgTlVMTCwgJm1p
X2IpOwpAQCAtMTAwMSw3ICs5OTIsNyBAQCBpbnQgYXR0cl9kYXRhX2dldF9ibG9jayhzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksIENMU1QgdmNuLCBDTFNUIGNsZW4sIENMU1QgKmxjbiwKCiAJc3ZjbiA9
IGV2Y24xOwoKLQkvKiBFc3RpbWF0ZSBuZXh0IGF0dHJpYnV0ZSAqLworCS8qIEVzdGltYXRlIG5l
eHQgYXR0cmlidXRlLiAqLwogCWF0dHIgPSBuaV9maW5kX2F0dHIobmksIGF0dHIsICZsZSwgQVRU
Ul9EQVRBLCBOVUxMLCAwLCAmc3ZjbiwgJm1pKTsKCiAJaWYgKGF0dHIpIHsKQEAgLTEwMTIsNyAr
MTAwMyw3IEBAIGludCBhdHRyX2RhdGFfZ2V0X2Jsb2NrKHN0cnVjdCBudGZzX2lub2RlICpuaSwg
Q0xTVCB2Y24sIENMU1QgY2xlbiwgQ0xTVCAqbGNuLAogCQlpZiAoZW5kIDwgbmV4dF9zdmNuKQog
CQkJZW5kID0gbmV4dF9zdmNuOwogCQl3aGlsZSAoZW5kID4gZXZjbikgewotCQkJLyogcmVtb3Zl
IHNlZ21lbnQgW3N2Y24gOiBldmNuKSovCisJCQkvKiBSZW1vdmUgc2VnbWVudCBbc3ZjbiA6IGV2
Y24pLiAqLwogCQkJbWlfcmVtb3ZlX2F0dHIobWksIGF0dHIpOwoKIAkJCWlmICghYWxfcmVtb3Zl
X2xlKG5pLCBsZSkpIHsKQEAgLTEwMjEsNyArMTAxMiw3IEBAIGludCBhdHRyX2RhdGFfZ2V0X2Js
b2NrKHN0cnVjdCBudGZzX2lub2RlICpuaSwgQ0xTVCB2Y24sIENMU1QgY2xlbiwgQ0xTVCAqbGNu
LAogCQkJfQoKIAkJCWlmIChldmNuICsgMSA+PSBhbGxvYykgewotCQkJCS8qIGxhc3QgYXR0cmli
dXRlIHNlZ21lbnQgKi8KKwkJCQkvKiBMYXN0IGF0dHJpYnV0ZSBzZWdtZW50LiAqLwogCQkJCWV2
Y24xID0gZXZjbiArIDE7CiAJCQkJZ290byBpbnNfZXh0OwogCQkJfQpAQCAtMTEyNSw3ICsxMTE2
LDcgQEAgaW50IGF0dHJfZGF0YV93cml0ZV9yZXNpZGVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IHN0cnVjdCBwYWdlICpwYWdlKQogCQlyZXR1cm4gLUVJTlZBTDsKCiAJaWYgKGF0dHItPm5vbl9y
ZXMpIHsKLQkJLypyZXR1cm4gc3BlY2lhbCBlcnJvciBjb2RlIHRvIGNoZWNrIHRoaXMgY2FzZSov
CisJCS8qIFJldHVybiBzcGVjaWFsIGVycm9yIGNvZGUgdG8gY2hlY2sgdGhpcyBjYXNlLiAqLwog
CQlyZXR1cm4gRV9OVEZTX05PTlJFU0lERU5UOwogCX0KCkBAIC0xMTQ4LDkgKzExMzksNyBAQCBp
bnQgYXR0cl9kYXRhX3dyaXRlX3Jlc2lkZW50KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0
IHBhZ2UgKnBhZ2UpCiB9CgogLyoKLSAqIGF0dHJfbG9hZF9ydW5zX3ZjbgotICoKLSAqIGxvYWQg
cnVucyB3aXRoIHZjbgorICogYXR0cl9sb2FkX3J1bnNfdmNuIC0gTG9hZCBydW5zIHdpdGggVkNO
LgogICovCiBpbnQgYXR0cl9sb2FkX3J1bnNfdmNuKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51
bSBBVFRSX1RZUEUgdHlwZSwKIAkJICAgICAgIGNvbnN0IF9fbGUxNiAqbmFtZSwgdTggbmFtZV9s
ZW4sIHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKQEAgLTExODAsNyArMTE2OSw3IEBAIGludCBhdHRy
X2xvYWRfcnVuc192Y24oc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJfVFlQRSB0eXBl
LAogfQoKIC8qCi0gKiBsb2FkIHJ1bnMgZm9yIGdpdmVuIHJhbmdlIFtmcm9tIHRvKQorICogYXR0
cl93b2ZfbG9hZF9ydW5zX3JhbmdlIC0gTG9hZCBydW5zIGZvciBnaXZlbiByYW5nZSBbZnJvbSB0
bykuCiAgKi8KIGludCBhdHRyX2xvYWRfcnVuc19yYW5nZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCQkgY29uc3QgX19sZTE2ICpuYW1lLCB1OCBuYW1lX2xl
biwgc3RydWN0IHJ1bnNfdHJlZSAqcnVuLApAQCAtMTE5OSw3ICsxMTg4LDcgQEAgaW50IGF0dHJf
bG9hZF9ydW5zX3JhbmdlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlw
ZSwKIAkJCQkJCSB2Y24pOwogCQkJaWYgKGVycikKIAkJCQlyZXR1cm4gZXJyOwotCQkJY2xlbiA9
IDA7IC8qbmV4dCBydW5fbG9va3VwX2VudHJ5KHZjbikgbXVzdCBiZSBzdWNjZXNzKi8KKwkJCWNs
ZW4gPSAwOyAvKiBOZXh0IHJ1bl9sb29rdXBfZW50cnkodmNuKSBtdXN0IGJlIHN1Y2Nlc3MuICov
CiAJCX0KIAl9CgpAQCAtMTIxMCw3ICsxMTk5LDcgQEAgaW50IGF0dHJfbG9hZF9ydW5zX3Jhbmdl
KHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIC8qCiAgKiBhdHRy
X3dvZl9mcmFtZV9pbmZvCiAgKgotICogcmVhZCBoZWFkZXIgb2YgeHByZXNzL2x6eCBmaWxlIHRv
IGdldCBpbmZvIGFib3V0IGZyYW1lCisgKiBSZWFkIGhlYWRlciBvZiBYcHJlc3MvTFpYIGZpbGUg
dG8gZ2V0IGluZm8gYWJvdXQgZnJhbWUuCiAgKi8KIGludCBhdHRyX3dvZl9mcmFtZV9pbmZvKHN0
cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJJQiAqYXR0ciwKIAkJCXN0cnVjdCBydW5z
X3RyZWUgKnJ1biwgdTY0IGZyYW1lLCB1NjQgZnJhbWVzLApAQCAtMTIyNywyMCArMTIxNiwyMCBA
QCBpbnQgYXR0cl93b2ZfZnJhbWVfaW5mbyhzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBB
VFRSSUIgKmF0dHIsCiAJX19sZTY0ICpvZmY2NDsKCiAJaWYgKG5pLT52ZnNfaW5vZGUuaV9zaXpl
IDwgMHgxMDAwMDAwMDB1bGwpIHsKLQkJLyogZmlsZSBzdGFydHMgd2l0aCBhcnJheSBvZiAzMiBi
aXQgb2Zmc2V0cyAqLworCQkvKiBGaWxlIHN0YXJ0cyB3aXRoIGFycmF5IG9mIDMyIGJpdCBvZmZz
ZXRzLiAqLwogCQlieXRlc19wZXJfb2ZmID0gc2l6ZW9mKF9fbGUzMik7CiAJCXZib1sxXSA9IGZy
YW1lIDw8IDI7CiAJCSp2Ym9fZGF0YSA9IGZyYW1lcyA8PCAyOwogCX0gZWxzZSB7Ci0JCS8qIGZp
bGUgc3RhcnRzIHdpdGggYXJyYXkgb2YgNjQgYml0IG9mZnNldHMgKi8KKwkJLyogRmlsZSBzdGFy
dHMgd2l0aCBhcnJheSBvZiA2NCBiaXQgb2Zmc2V0cy4gKi8KIAkJYnl0ZXNfcGVyX29mZiA9IHNp
emVvZihfX2xlNjQpOwogCQl2Ym9bMV0gPSBmcmFtZSA8PCAzOwogCQkqdmJvX2RhdGEgPSBmcmFt
ZXMgPDwgMzsKIAl9CgogCS8qCi0JICogcmVhZCA0LzggYnl0ZXMgYXQgW3ZibyAtIDQoOCldID09
IG9mZnNldCB3aGVyZSBjb21wcmVzc2VkIGZyYW1lIHN0YXJ0cwotCSAqIHJlYWQgNC84IGJ5dGVz
IGF0IFt2Ym9dID09IG9mZnNldCB3aGVyZSBjb21wcmVzc2VkIGZyYW1lIGVuZHMKKwkgKiBSZWFk
IDQvOCBieXRlcyBhdCBbdmJvIC0gNCg4KV0gPT0gb2Zmc2V0IHdoZXJlIGNvbXByZXNzZWQgZnJh
bWUgc3RhcnRzLgorCSAqIFJlYWQgNC84IGJ5dGVzIGF0IFt2Ym9dID09IG9mZnNldCB3aGVyZSBj
b21wcmVzc2VkIGZyYW1lIGVuZHMuCiAJICovCiAJaWYgKCFhdHRyLT5ub25fcmVzKSB7CiAJCWlm
ICh2Ym9bMV0gKyBieXRlc19wZXJfb2ZmID4gbGUzMl90b19jcHUoYXR0ci0+cmVzLmRhdGFfc2l6
ZSkpIHsKQEAgLTEzMjksNyArMTMxOCw3IEBAIGludCBhdHRyX3dvZl9mcmFtZV9pbmZvKHN0cnVj
dCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJJQiAqYXR0ciwKIAkJCQlvZmZbMF0gPSBsZTY0
X3RvX2NwdSgqb2ZmNjQpOwogCQkJfQogCQl9IGVsc2UgewotCQkJLyogdHdvIHZhbHVlcyBpbiBv
bmUgcGFnZSovCisJCQkvKiBUd28gdmFsdWVzIGluIG9uZSBwYWdlLiAqLwogCQkJaWYgKGJ5dGVz
X3Blcl9vZmYgPT0gc2l6ZW9mKF9fbGUzMikpIHsKIAkJCQlvZmYzMiA9IEFkZDJQdHIoYWRkciwg
dm9mZik7CiAJCQkJb2ZmWzBdID0gbGUzMl90b19jcHUob2ZmMzJbLTFdKTsKQEAgLTEzNTUsOSAr
MTM0NCw3IEBAIGludCBhdHRyX3dvZl9mcmFtZV9pbmZvKHN0cnVjdCBudGZzX2lub2RlICpuaSwg
c3RydWN0IEFUVFJJQiAqYXR0ciwKICNlbmRpZgoKIC8qCi0gKiBhdHRyX2lzX2ZyYW1lX2NvbXBy
ZXNzZWQKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gZGV0ZWN0IGNvbXByZXNzZWQg
ZnJhbWUKKyAqIGF0dHJfaXNfZnJhbWVfY29tcHJlc3NlZCAtIFVzZWQgdG8gZGV0ZWN0IGNvbXBy
ZXNzZWQgZnJhbWUuCiAgKi8KIGludCBhdHRyX2lzX2ZyYW1lX2NvbXByZXNzZWQoc3RydWN0IG50
ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAogCQkJICAgICBDTFNUIGZyYW1lLCBD
TFNUICpjbHN0X2RhdGEpCkBAIC0xMzkxLDE0ICsxMzc4LDE0IEBAIGludCBhdHRyX2lzX2ZyYW1l
X2NvbXByZXNzZWQoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAog
CX0KCiAJaWYgKGxjbiA9PSBTUEFSU0VfTENOKSB7Ci0JCS8qIHNwYXJzZWQgZnJhbWUgKi8KKwkJ
LyogU3BhcnNlZCBmcmFtZS4gKi8KIAkJcmV0dXJuIDA7CiAJfQoKIAlpZiAoY2xlbiA+PSBjbHN0
X2ZyYW1lKSB7CiAJCS8qCiAJCSAqIFRoZSBmcmFtZSBpcyBub3QgY29tcHJlc3NlZCAnY2F1c2UK
LQkJICogaXQgZG9lcyBub3QgY29udGFpbiBhbnkgc3BhcnNlIGNsdXN0ZXJzCisJCSAqIGl0IGRv
ZXMgbm90IGNvbnRhaW4gYW55IHNwYXJzZSBjbHVzdGVycy4KIAkJICovCiAJCSpjbHN0X2RhdGEg
PSBjbHN0X2ZyYW1lOwogCQlyZXR1cm4gMDsKQEAgLTE0MDksOCArMTM5Niw4IEBAIGludCBhdHRy
X2lzX2ZyYW1lX2NvbXByZXNzZWQoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklC
ICphdHRyLAogCSpjbHN0X2RhdGEgPSBjbGVuOwoKIAkvKgotCSAqIFRoZSBmcmFtZSBpcyBjb21w
cmVzc2VkIGlmICpjbHN0X2RhdGEgKyBzbGVuID49IGNsc3RfZnJhbWUKLQkgKiBDaGVjayBuZXh0
IGZyYWdtZW50cworCSAqIFRoZSBmcmFtZSBpcyBjb21wcmVzc2VkIGlmICpjbHN0X2RhdGEgKyBz
bGVuID49IGNsc3RfZnJhbWUuCisJICogQ2hlY2sgbmV4dCBmcmFnbWVudHMuCiAJICovCiAJd2hp
bGUgKCh2Y24gKz0gY2xlbikgPCBhbGVuKSB7CiAJCXZjbl9uZXh0ID0gdmNuOwpAQCAtMTQzMyw4
ICsxNDIwLDggQEAgaW50IGF0dHJfaXNfZnJhbWVfY29tcHJlc3NlZChzdHJ1Y3QgbnRmc19pbm9k
ZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJCX0gZWxzZSB7CiAJCQlpZiAoc2xlbikgewog
CQkJCS8qCi0JCQkJICogZGF0YV9jbHVzdGVycyArIHNwYXJzZV9jbHVzdGVycyA9Ci0JCQkJICog
bm90IGVub3VnaCBmb3IgZnJhbWUKKwkJCQkgKiBEYXRhX2NsdXN0ZXJzICsgc3BhcnNlX2NsdXN0
ZXJzID0KKwkJCQkgKiBub3QgZW5vdWdoIGZvciBmcmFtZS4KIAkJCQkgKi8KIAkJCQlyZXR1cm4g
LUVJTlZBTDsKIAkJCX0KQEAgLTE0NDUsMTEgKzE0MzIsMTEgQEAgaW50IGF0dHJfaXNfZnJhbWVf
Y29tcHJlc3NlZChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJ
CQlpZiAoIXNsZW4pIHsKIAkJCQkvKgogCQkJCSAqIFRoZXJlIGlzIG5vIHNwYXJzZWQgY2x1c3Rl
cnMgaW4gdGhpcyBmcmFtZQotCQkJCSAqIFNvIGl0IGlzIG5vdCBjb21wcmVzc2VkCisJCQkJICog
c28gaXQgaXMgbm90IGNvbXByZXNzZWQuCiAJCQkJICovCiAJCQkJKmNsc3RfZGF0YSA9IGNsc3Rf
ZnJhbWU7CiAJCQl9IGVsc2UgewotCQkJCS8qZnJhbWUgaXMgY29tcHJlc3NlZCovCisJCQkJLyog
RnJhbWUgaXMgY29tcHJlc3NlZC4gKi8KIAkJCX0KIAkJCWJyZWFrOwogCQl9CkBAIC0xNDU5LDEw
ICsxNDQ2LDkgQEAgaW50IGF0dHJfaXNfZnJhbWVfY29tcHJlc3NlZChzdHJ1Y3QgbnRmc19pbm9k
ZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiB9CgogLyoKLSAqIGF0dHJfYWxsb2NhdGVfZnJh
bWUKKyAqIGF0dHJfYWxsb2NhdGVfZnJhbWUgLSBBbGxvY2F0ZS9mcmVlIGNsdXN0ZXJzIGZvciBA
ZnJhbWUuCiAgKgotICogYWxsb2NhdGUvZnJlZSBjbHVzdGVycyBmb3IgJ2ZyYW1lJwotICogYXNz
dW1lZDogZG93bl93cml0ZSgmbmktPmZpbGUucnVuX2xvY2spOworICogQXNzdW1lZDogZG93bl93
cml0ZSgmbmktPmZpbGUucnVuX2xvY2spOwogICovCiBpbnQgYXR0cl9hbGxvY2F0ZV9mcmFtZShz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksIENMU1QgZnJhbWUsIHNpemVfdCBjb21wcl9zaXplLAogCQkJ
dTY0IG5ld192YWxpZCkKQEAgLTE1MzgsMTAgKzE1MjQsMTAgQEAgaW50IGF0dHJfYWxsb2NhdGVf
ZnJhbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBDTFNUIGZyYW1lLCBzaXplX3QgY29tcHJfc2l6
ZSwKIAkJCWdvdG8gb3V0OwogCQl9CiAJCWVuZCA9IHZjbiArIGNsc3RfZGF0YTsKLQkJLyogcnVu
IGNvbnRhaW5zIHVwZGF0ZWQgcmFuZ2UgW3ZjbiArIGxlbiA6IGVuZCkgKi8KKwkJLyogUnVuIGNv
bnRhaW5zIHVwZGF0ZWQgcmFuZ2UgW3ZjbiArIGxlbiA6IGVuZCkuICovCiAJfSBlbHNlIHsKIAkJ
Q0xTVCBhbGVuLCBoaW50ID0gMDsKLQkJLyogR2V0IHRoZSBsYXN0IGxjbiB0byBhbGxvY2F0ZSBm
cm9tICovCisJCS8qIEdldCB0aGUgbGFzdCBMQ04gdG8gYWxsb2NhdGUgZnJvbS4gKi8KIAkJaWYg
KHZjbiArIGNsc3RfZGF0YSAmJgogCQkgICAgIXJ1bl9sb29rdXBfZW50cnkocnVuLCB2Y24gKyBj
bHN0X2RhdGEgLSAxLCAmaGludCwgTlVMTCwKIAkJCQkgICAgICBOVUxMKSkgewpAQCAtMTU1NSw3
ICsxNTQxLDcgQEAgaW50IGF0dHJfYWxsb2NhdGVfZnJhbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBDTFNUIGZyYW1lLCBzaXplX3QgY29tcHJfc2l6ZSwKIAkJCWdvdG8gb3V0OwoKIAkJZW5kID0g
dmNuICsgbGVuOwotCQkvKiBydW4gY29udGFpbnMgdXBkYXRlZCByYW5nZSBbdmNuICsgY2xzdF9k
YXRhIDogZW5kKSAqLworCQkvKiBSdW4gY29udGFpbnMgdXBkYXRlZCByYW5nZSBbdmNuICsgY2xz
dF9kYXRhIDogZW5kKS4gKi8KIAl9CgogCXRvdGFsX3NpemUgKz0gKHU2NClsZW4gPDwgc2JpLT5j
bHVzdGVyX2JpdHM7CkBAIC0xNTcxLDIwICsxNTU3LDIwIEBAIGludCBhdHRyX2FsbG9jYXRlX2Zy
YW1lKHN0cnVjdCBudGZzX2lub2RlICpuaSwgQ0xTVCBmcmFtZSwgc2l6ZV90IGNvbXByX3NpemUs
CiAJbWlfYi0+ZGlydHkgPSB0cnVlOwogCW1hcmtfaW5vZGVfZGlydHkoJm5pLT52ZnNfaW5vZGUp
OwoKLQkvKiBzdG9yZWQgW3ZjbiA6IG5leHRfc3ZjbikgZnJvbSBbdmNuIDogZW5kKSAqLworCS8q
IFN0b3JlZCBbdmNuIDogbmV4dF9zdmNuKSBmcm9tIFt2Y24gOiBlbmQpLiAqLwogCW5leHRfc3Zj
biA9IGxlNjRfdG9fY3B1KGF0dHItPm5yZXMuZXZjbikgKyAxOwoKIAlpZiAoZW5kIDw9IGV2Y24x
KSB7CiAJCWlmIChuZXh0X3N2Y24gPT0gZXZjbjEpIHsKLQkJCS8qIE5vcm1hbCB3YXkuIHVwZGF0
ZSBhdHRyaWJ1dGUgYW5kIGV4aXQgKi8KKwkJCS8qIE5vcm1hbCB3YXkuIFVwZGF0ZSBhdHRyaWJ1
dGUgYW5kIGV4aXQuICovCiAJCQlnb3RvIG9rOwogCQl9Ci0JCS8qIGFkZCBuZXcgc2VnbWVudCBb
bmV4dF9zdmNuIDogZXZjbjEgLSBuZXh0X3N2Y24gKSovCisJCS8qIEFkZCBuZXcgc2VnbWVudCBb
bmV4dF9zdmNuIDogZXZjbjEgLSBuZXh0X3N2Y24pLiAqLwogCQlpZiAoIW5pLT5hdHRyX2xpc3Qu
c2l6ZSkgewogCQkJZXJyID0gbmlfY3JlYXRlX2F0dHJfbGlzdChuaSk7CiAJCQlpZiAoZXJyKQog
CQkJCWdvdG8gb3V0OwotCQkJLyogbGF5b3V0IG9mIHJlY29yZHMgaXMgY2hhbmdlZCAqLworCQkJ
LyogTGF5b3V0IG9mIHJlY29yZHMgaXMgY2hhbmdlZC4gKi8KIAkJCWxlX2IgPSBOVUxMOwogCQkJ
YXR0cl9iID0gbmlfZmluZF9hdHRyKG5pLCBOVUxMLCAmbGVfYiwgQVRUUl9EQVRBLCBOVUxMLAog
CQkJCQkgICAgICAwLCBOVUxMLCAmbWlfYik7CkBAIC0xNjAyLDcgKzE1ODgsNyBAQCBpbnQgYXR0
cl9hbGxvY2F0ZV9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIENMU1QgZnJhbWUsIHNpemVf
dCBjb21wcl9zaXplLAoKIAlzdmNuID0gZXZjbjE7CgotCS8qIEVzdGltYXRlIG5leHQgYXR0cmli
dXRlICovCisJLyogRXN0aW1hdGUgbmV4dCBhdHRyaWJ1dGUuICovCiAJYXR0ciA9IG5pX2ZpbmRf
YXR0cihuaSwgYXR0ciwgJmxlLCBBVFRSX0RBVEEsIE5VTEwsIDAsICZzdmNuLCAmbWkpOwoKIAlp
ZiAoYXR0cikgewpAQCAtMTYxMyw3ICsxNTk5LDcgQEAgaW50IGF0dHJfYWxsb2NhdGVfZnJhbWUo
c3RydWN0IG50ZnNfaW5vZGUgKm5pLCBDTFNUIGZyYW1lLCBzaXplX3QgY29tcHJfc2l6ZSwKIAkJ
aWYgKGVuZCA8IG5leHRfc3ZjbikKIAkJCWVuZCA9IG5leHRfc3ZjbjsKIAkJd2hpbGUgKGVuZCA+
IGV2Y24pIHsKLQkJCS8qIHJlbW92ZSBzZWdtZW50IFtzdmNuIDogZXZjbikqLworCQkJLyogUmVt
b3ZlIHNlZ21lbnQgW3N2Y24gOiBldmNuKS4gKi8KIAkJCW1pX3JlbW92ZV9hdHRyKG1pLCBhdHRy
KTsKCiAJCQlpZiAoIWFsX3JlbW92ZV9sZShuaSwgbGUpKSB7CkBAIC0xNjIyLDcgKzE2MDgsNyBA
QCBpbnQgYXR0cl9hbGxvY2F0ZV9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIENMU1QgZnJh
bWUsIHNpemVfdCBjb21wcl9zaXplLAogCQkJfQoKIAkJCWlmIChldmNuICsgMSA+PSBhbGxvYykg
ewotCQkJCS8qIGxhc3QgYXR0cmlidXRlIHNlZ21lbnQgKi8KKwkJCQkvKiBMYXN0IGF0dHJpYnV0
ZSBzZWdtZW50LiAqLwogCQkJCWV2Y24xID0gZXZjbiArIDE7CiAJCQkJZ290byBpbnNfZXh0Owog
CQkJfQpAQCAtMTY4NCw3ICsxNjcwLDkgQEAgaW50IGF0dHJfYWxsb2NhdGVfZnJhbWUoc3RydWN0
IG50ZnNfaW5vZGUgKm5pLCBDTFNUIGZyYW1lLCBzaXplX3QgY29tcHJfc2l6ZSwKIAlyZXR1cm4g
ZXJyOwogfQoKLS8qIENvbGxhcHNlIHJhbmdlIGluIGZpbGUgKi8KKy8qCisgKiBhdHRyX2NvbGxh
cHNlX3JhbmdlIC0gQ29sbGFwc2UgcmFuZ2UgaW4gZmlsZS4KKyAqLwogaW50IGF0dHJfY29sbGFw
c2VfcmFuZ2Uoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1NjQgdmJvLCB1NjQgYnl0ZXMpCiB7CiAJ
aW50IGVyciA9IDA7CkBAIC0xNzI1LDcgKzE3MTMsNyBAQCBpbnQgYXR0cl9jb2xsYXBzZV9yYW5n
ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykKIAl9CgogCWlmICgo
dmJvICYgbWFzaykgfHwgKGJ5dGVzICYgbWFzaykpIHsKLQkJLyogYWxsb3cgdG8gY29sbGFwc2Ug
b25seSBjbHVzdGVyIGFsaWduZWQgcmFuZ2VzICovCisJCS8qIEFsbG93IHRvIGNvbGxhcHNlIG9u
bHkgY2x1c3RlciBhbGlnbmVkIHJhbmdlcy4gKi8KIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQoKQEAg
LTE3MzcsNyArMTcyNSw3IEBAIGludCBhdHRyX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgdTY0IHZibywgdTY0IGJ5dGVzKQogCWlmICh2Ym8gKyBieXRlcyA+PSBkYXRhX3Np
emUpIHsKIAkJdTY0IG5ld192YWxpZCA9IG1pbihuaS0+aV92YWxpZCwgdmJvKTsKCi0JCS8qIFNp
bXBsZSB0cnVuY2F0ZSBmaWxlIGF0ICd2Ym8nICovCisJCS8qIFNpbXBsZSB0cnVuY2F0ZSBmaWxl
IGF0ICd2Ym8nLiAqLwogCQl0cnVuY2F0ZV9zZXRzaXplKCZuaS0+dmZzX2lub2RlLCB2Ym8pOwog
CQllcnIgPSBhdHRyX3NldF9zaXplKG5pLCBBVFRSX0RBVEEsIE5VTEwsIDAsICZuaS0+ZmlsZS5y
dW4sIHZibywKIAkJCQkgICAgJm5ld192YWxpZCwgdHJ1ZSwgTlVMTCk7CkBAIC0xNzQ5LDcgKzE3
MzcsNyBAQCBpbnQgYXR0cl9jb2xsYXBzZV9yYW5nZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2
NCB2Ym8sIHU2NCBieXRlcykKIAl9CgogCS8qCi0JICogRW51bWVyYXRlIGFsbCBhdHRyaWJ1dGUg
c2VnbWVudHMgYW5kIGNvbGxhcHNlCisJICogRW51bWVyYXRlIGFsbCBhdHRyaWJ1dGUgc2VnbWVu
dHMgYW5kIGNvbGxhcHNlLgogCSAqLwogCWFsZW4gPSBhbGxvY19zaXplID4+IHNiaS0+Y2x1c3Rl
cl9iaXRzOwogCXZjbiA9IHZibyA+PiBzYmktPmNsdXN0ZXJfYml0czsKQEAgLTE3ODIsNyArMTc3
MCw3IEBAIGludCBhdHRyX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0
IHZibywgdTY0IGJ5dGVzKQoKIAlmb3IgKDs7KSB7CiAJCWlmIChzdmNuID49IGVuZCkgewotCQkJ
Lyogc2hpZnQgdmNuICovCisJCQkvKiBTaGlmdCBWQ04tICovCiAJCQlhdHRyLT5ucmVzLnN2Y24g
PSBjcHVfdG9fbGU2NChzdmNuIC0gbGVuKTsKIAkJCWF0dHItPm5yZXMuZXZjbiA9IGNwdV90b19s
ZTY0KGV2Y24xIC0gMSAtIGxlbik7CiAJCQlpZiAobGUpIHsKQEAgLTE3OTMsNyArMTc4MSw3IEBA
IGludCBhdHRyX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IHZibywg
dTY0IGJ5dGVzKQogCQl9IGVsc2UgaWYgKHN2Y24gPCB2Y24gfHwgZW5kIDwgZXZjbjEpIHsKIAkJ
CUNMU1QgdmNuMSwgZWF0LCBuZXh0X3N2Y247CgotCQkJLyogY29sbGFwc2UgYSBwYXJ0IG9mIHRo
aXMgYXR0cmlidXRlIHNlZ21lbnQgKi8KKwkJCS8qIENvbGxhcHNlIGEgcGFydCBvZiB0aGlzIGF0
dHJpYnV0ZSBzZWdtZW50LiAqLwogCQkJZXJyID0gYXR0cl9sb2FkX3J1bnMoYXR0ciwgbmksIHJ1
biwgJnN2Y24pOwogCQkJaWYgKGVycikKIAkJCQlnb3RvIG91dDsKQEAgLTE4MTEsNyArMTc5OSw3
IEBAIGludCBhdHRyX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IHZi
bywgdTY0IGJ5dGVzKQogCQkJfQoKIAkJCWlmIChzdmNuID49IHZjbikgewotCQkJCS8qIHNoaWZ0
IHZjbiAqLworCQkJCS8qIFNoaWZ0IFZDTiAqLwogCQkJCWF0dHItPm5yZXMuc3ZjbiA9IGNwdV90
b19sZTY0KHZjbik7CiAJCQkJaWYgKGxlKSB7CiAJCQkJCWxlLT52Y24gPSBhdHRyLT5ucmVzLnN2
Y247CkBAIC0xODMyLDcgKzE4MjAsNyBAQCBpbnQgYXR0cl9jb2xsYXBzZV9yYW5nZShzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykKIAkJCQlpZiAoZXJyKQogCQkJCQln
b3RvIG91dDsKCi0JCQkJLyogbGF5b3V0IG9mIHJlY29yZHMgbWF5YmUgY2hhbmdlZCAqLworCQkJ
CS8qIExheW91dCBvZiByZWNvcmRzIG1heWJlIGNoYW5nZWQuICovCiAJCQkJYXR0cl9iID0gTlVM
TDsKIAkJCQlsZSA9IGFsX2ZpbmRfZXgobmksIE5VTEwsIEFUVFJfREFUQSwgTlVMTCwgMCwKIAkJ
CQkJCSZuZXh0X3N2Y24pOwpAQCAtMTg0MiwxOCArMTgzMCwxOCBAQCBpbnQgYXR0cl9jb2xsYXBz
ZV9yYW5nZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykKIAkJCQl9
CiAJCQl9CgotCQkJLyogZnJlZSBhbGwgYWxsb2NhdGVkIG1lbW9yeSAqLworCQkJLyogRnJlZSBh
bGwgYWxsb2NhdGVkIG1lbW9yeS4gKi8KIAkJCXJ1bl90cnVuY2F0ZShydW4sIDApOwogCQl9IGVs
c2UgewogCQkJdTE2IGxlX3N6OwogCQkJdTE2IHJvZmYgPSBsZTE2X3RvX2NwdShhdHRyLT5ucmVz
LnJ1bl9vZmYpOwoKLQkJCS8qcnVuPT0xIG1lYW5zIHVucGFjayBhbmQgZGVhbGxvY2F0ZSovCisJ
CQkvKiBydW49PTEgbWVhbnMgdW5wYWNrIGFuZCBkZWFsbG9jYXRlLiAqLwogCQkJcnVuX3VucGFj
a19leChSVU5fREVBTExPQ0FURSwgc2JpLCBuaS0+bWkucm5vLCBzdmNuLAogCQkJCSAgICAgIGV2
Y24xIC0gMSwgc3ZjbiwgQWRkMlB0cihhdHRyLCByb2ZmKSwKIAkJCQkgICAgICBsZTMyX3RvX2Nw
dShhdHRyLT5zaXplKSAtIHJvZmYpOwoKLQkJCS8qIGRlbGV0ZSB0aGlzIGF0dHJpYnV0ZSBzZWdt
ZW50ICovCisJCQkvKiBEZWxldGUgdGhpcyBhdHRyaWJ1dGUgc2VnbWVudC4gKi8KIAkJCW1pX3Jl
bW92ZV9hdHRyKG1pLCBhdHRyKTsKIAkJCWlmICghbGUpCiAJCQkJYnJlYWs7CkBAIC0xODY4LDEz
ICsxODU2LDEzIEBAIGludCBhdHRyX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBudGZzX2lub2RlICpu
aSwgdTY0IHZibywgdTY0IGJ5dGVzKQogCQkJCWJyZWFrOwoKIAkJCWlmICghc3ZjbikgewotCQkJ
CS8qIExvYWQgbmV4dCByZWNvcmQgdGhhdCBjb250YWlucyB0aGlzIGF0dHJpYnV0ZSAqLworCQkJ
CS8qIExvYWQgbmV4dCByZWNvcmQgdGhhdCBjb250YWlucyB0aGlzIGF0dHJpYnV0ZS4gKi8KIAkJ
CQlpZiAobmlfbG9hZF9taShuaSwgbGUsICZtaSkpIHsKIAkJCQkJZXJyID0gLUVJTlZBTDsKIAkJ
CQkJZ290byBvdXQ7CiAJCQkJfQoKLQkJCQkvKiBMb29rIGZvciByZXF1aXJlZCBhdHRyaWJ1dGUg
Ki8KKwkJCQkvKiBMb29rIGZvciByZXF1aXJlZCBhdHRyaWJ1dGUuICovCiAJCQkJYXR0ciA9IG1p
X2ZpbmRfYXR0cihtaSwgTlVMTCwgQVRUUl9EQVRBLCBOVUxMLAogCQkJCQkJICAgIDAsICZsZS0+
aWQpOwogCQkJCWlmICghYXR0cikgewpAQCAtMTkyNSw3ICsxOTEzLDcgQEAgaW50IGF0dHJfY29s
bGFwc2VfcmFuZ2Uoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1NjQgdmJvLCB1NjQgYnl0ZXMpCiAJ
CWF0dHJfYi0+bnJlcy50b3RhbF9zaXplID0gY3B1X3RvX2xlNjQodG90YWxfc2l6ZSk7CiAJbWlf
Yi0+ZGlydHkgPSB0cnVlOwoKLQkvKnVwZGF0ZSBpbm9kZSBzaXplKi8KKwkvKiBVcGRhdGUgaW5v
ZGUgc2l6ZS4gKi8KIAluaS0+aV92YWxpZCA9IHZhbGlkX3NpemU7CiAJbmktPnZmc19pbm9kZS5p
X3NpemUgPSBkYXRhX3NpemU7CiAJaW5vZGVfc2V0X2J5dGVzKCZuaS0+dmZzX2lub2RlLCB0b3Rh
bF9zaXplKTsKQEAgLTE5NDAsNyArMTkyOCwxMSBAQCBpbnQgYXR0cl9jb2xsYXBzZV9yYW5nZShz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykKIAlyZXR1cm4gZXJyOwog
fQoKLS8qIG5vdCBmb3Igbm9ybWFsIGZpbGVzICovCisvKgorICogYXR0cl9wdW5jaF9ob2xlCisg
KgorICAqIE5vdCBmb3Igbm9ybWFsIGZpbGVzLgorICAqLwogaW50IGF0dHJfcHVuY2hfaG9sZShz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykKIHsKIAlpbnQgZXJyID0g
MDsKQEAgLTE5NzMsNyArMTk2NSw3IEBAIGludCBhdHRyX3B1bmNoX2hvbGUoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLCB1NjQgdmJvLCB1NjQgYnl0ZXMpCiAJCXJldHVybiAwOwogCX0KCi0JLyogVE9E
TzogYWRkIHN1cHBvcnQgZm9yIG5vcm1hbCBmaWxlcyB0b28gKi8KKwkvKiBUT0RPOiBBZGQgc3Vw
cG9ydCBmb3Igbm9ybWFsIGZpbGVzIHRvby4gKi8KIAlpZiAoIWlzX2F0dHJfZXh0KGF0dHJfYikp
CiAJCXJldHVybiAtRU9QTk9UU1VQUDsKCkBAIC0xOTgxLDcgKzE5NzMsNyBAQCBpbnQgYXR0cl9w
dW5jaF9ob2xlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IHZibywgdTY0IGJ5dGVzKQogCXRv
dGFsX3NpemUgPSBsZTY0X3RvX2NwdShhdHRyX2ItPm5yZXMudG90YWxfc2l6ZSk7CgogCWlmICh2
Ym8gPj0gYWxsb2Nfc2l6ZSkgewotCQkvLyBOT1RFOiBpdCBpcyBhbGxvd2VkCisJCS8vIE5PVEU6
IEl0IGlzIGFsbG93ZWQuCiAJCXJldHVybiAwOwogCX0KCkBAIC0xOTkwLDcgKzE5ODIsNyBAQCBp
bnQgYXR0cl9wdW5jaF9ob2xlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IHZibywgdTY0IGJ5
dGVzKQoKIAlkb3duX3dyaXRlKCZuaS0+ZmlsZS5ydW5fbG9jayk7CiAJLyoKLQkgKiBFbnVtZXJh
dGUgYWxsIGF0dHJpYnV0ZSBzZWdtZW50cyBhbmQgcHVuY2ggaG9sZSB3aGVyZSBuZWNlc3NhcnkK
KwkgKiBFbnVtZXJhdGUgYWxsIGF0dHJpYnV0ZSBzZWdtZW50cyBhbmQgcHVuY2ggaG9sZSB3aGVy
ZSBuZWNlc3NhcnkuCiAJICovCiAJYWxlbiA9IGFsbG9jX3NpemUgPj4gc2JpLT5jbHVzdGVyX2Jp
dHM7CiAJdmNuID0gdmJvID4+IHNiaS0+Y2x1c3Rlcl9iaXRzOwpAQCAtMjAzNiw3ICsyMDI4LDcg
QEAgaW50IGF0dHJfcHVuY2hfaG9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2
NCBieXRlcykKIAkJCWdvdG8gb3V0OwoKIAkJaWYgKGRlYWxsb2MyID09IGRlYWxsb2MpIHsKLQkJ
CS8qIGxvb2tzIGxpa2UgIHRoZSByZXF1aXJlZCByYW5nZSBpcyBhbHJlYWR5IHNwYXJzZWQgKi8K
KwkJCS8qIExvb2tzIGxpa2UgdGhlIHJlcXVpcmVkIHJhbmdlIGlzIGFscmVhZHkgc3BhcnNlZC4g
Ki8KIAkJfSBlbHNlIHsKIAkJCWlmICghcnVuX2FkZF9lbnRyeShydW4sIHZjbjEsIFNQQVJTRV9M
Q04sIHplcm8sCiAJCQkJCSAgIGZhbHNlKSkgewpAQCAtMjA0OCw3ICsyMDQwLDcgQEAgaW50IGF0
dHJfcHVuY2hfaG9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcykK
IAkJCWlmIChlcnIpCiAJCQkJZ290byBvdXQ7CiAJCX0KLQkJLyogZnJlZSBhbGwgYWxsb2NhdGVk
IG1lbW9yeSAqLworCQkvKiBGcmVlIGFsbCBhbGxvY2F0ZWQgbWVtb3J5LiAqLwogCQlydW5fdHJ1
bmNhdGUocnVuLCAwKTsKCiAJCWlmIChldmNuMSA+PSBhbGVuKQpAQCAtMjA2OCw3ICsyMDYwLDcg
QEAgaW50IGF0dHJfcHVuY2hfaG9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2
NCBieXRlcykKIAlhdHRyX2ItPm5yZXMudG90YWxfc2l6ZSA9IGNwdV90b19sZTY0KHRvdGFsX3Np
emUpOwogCW1pX2ItPmRpcnR5ID0gdHJ1ZTsKCi0JLyp1cGRhdGUgaW5vZGUgc2l6ZSovCisJLyog
VXBkYXRlIGlub2RlIHNpemUuICovCiAJaW5vZGVfc2V0X2J5dGVzKCZuaS0+dmZzX2lub2RlLCB0
b3RhbF9zaXplKTsKIAluaS0+bmlfZmxhZ3MgfD0gTklfRkxBR19VUERBVEVfUEFSRU5UOwogCW1h
cmtfaW5vZGVfZGlydHkoJm5pLT52ZnNfaW5vZGUpOwpkaWZmIC0tZ2l0IGEvZnMvbnRmczMvYXR0
cmxpc3QuYyBiL2ZzL250ZnMzL2F0dHJsaXN0LmMKaW5kZXggZWE1NjEzNjFiNTc2Li41YmFiYzdk
MmIxYjIgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL2F0dHJsaXN0LmMKKysrIGIvZnMvbnRmczMvYXR0
cmxpc3QuYwpAQCAtMTQsNyArMTQsMTEgQEAKICNpbmNsdWRlICJudGZzLmgiCiAjaW5jbHVkZSAi
bnRmc19mcy5oIgoKLS8qIFJldHVybnMgdHJ1ZSBpZiBsZSBpcyB2YWxpZCAqLworLyoKKyAqIGFs
X2lzX3ZhbGlkX2xlCisgKgorICogUmV0dXJuOiBUcnVlIGlmIEBsZSBpcyB2YWxpZC4KKyAqLwog
c3RhdGljIGlubGluZSBib29sIGFsX2lzX3ZhbGlkX2xlKGNvbnN0IHN0cnVjdCBudGZzX2lub2Rl
ICpuaSwKIAkJCQkgIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlKQogewpAQCAtMTAxLDggKzEw
NSw5IEBAIGludCBudGZzX2xvYWRfYXR0cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3Ry
dWN0IEFUVFJJQiAqYXR0cikKIC8qCiAgKiBhbF9lbnVtZXJhdGUKICAqCi0gKiBSZXR1cm5zIHRo
ZSBuZXh0IGxpc3QgJ2xlJwotICogaWYgJ2xlJyBpcyBOVUxMIHRoZW4gcmV0dXJucyB0aGUgZmly
c3QgJ2xlJworICogUmV0dXJuOgorICogKiBUaGUgbmV4dCBsaXN0IGxlLgorICogKiBJZiBAbGUg
aXMgTlVMTCB0aGVuIHJldHVybiB0aGUgZmlyc3QgbGUuCiAgKi8KIHN0cnVjdCBBVFRSX0xJU1Rf
RU5UUlkgKmFsX2VudW1lcmF0ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCQkJICAgICBzdHJ1
Y3QgQVRUUl9MSVNUX0VOVFJZICpsZSkKQEAgLTExNSwyMiArMTIwLDIyIEBAIHN0cnVjdCBBVFRS
X0xJU1RfRU5UUlkgKmFsX2VudW1lcmF0ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJfSBlbHNl
IHsKIAkJc3ogPSBsZTE2X3RvX2NwdShsZS0+c2l6ZSk7CiAJCWlmIChzeiA8IHNpemVvZihzdHJ1
Y3QgQVRUUl9MSVNUX0VOVFJZKSkgewotCQkJLyogSW1wb3NzaWJsZSAnY2F1c2Ugd2Ugc2hvdWxk
IG5vdCByZXR1cm4gc3VjaCAnbGUnICovCisJCQkvKiBJbXBvc3NpYmxlICdjYXVzZSB3ZSBzaG91
bGQgbm90IHJldHVybiBzdWNoIGxlLiAqLwogCQkJcmV0dXJuIE5VTEw7CiAJCX0KIAkJbGUgPSBB
ZGQyUHRyKGxlLCBzeik7CiAJfQoKLQkvKiBDaGVjayBib3VuZGFyeSAqLworCS8qIENoZWNrIGJv
dW5kYXJ5LiAqLwogCW9mZiA9IFB0ck9mZnNldChuaS0+YXR0cl9saXN0LmxlLCBsZSk7CiAJaWYg
KG9mZiArIHNpemVvZihzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZKSA+IG5pLT5hdHRyX2xpc3Quc2l6
ZSkgewotCQkvLyBUaGUgcmVndWxhciBlbmQgb2YgbGlzdAorCQkvKiBUaGUgcmVndWxhciBlbmQg
b2YgbGlzdC4gKi8KIAkJcmV0dXJuIE5VTEw7CiAJfQoKIAlzeiA9IGxlMTZfdG9fY3B1KGxlLT5z
aXplKTsKCi0JLyogQ2hlY2sgJ2xlJyBmb3IgZXJyb3JzICovCisJLyogQ2hlY2sgbGUgZm9yIGVy
cm9ycy4gKi8KIAlpZiAoc3ogPCBzaXplb2Yoc3RydWN0IEFUVFJfTElTVF9FTlRSWSkgfHwKIAkg
ICAgb2ZmICsgc3ogPiBuaS0+YXR0cl9saXN0LnNpemUgfHwKIAkgICAgc3ogPCBsZS0+bmFtZV9v
ZmYgKyBsZS0+bmFtZV9sZW4gKiBzaXplb2Yoc2hvcnQpKSB7CkBAIC0xNDMsOCArMTQ4LDkgQEAg
c3RydWN0IEFUVFJfTElTVF9FTlRSWSAqYWxfZW51bWVyYXRlKHN0cnVjdCBudGZzX2lub2RlICpu
aSwKIC8qCiAgKiBhbF9maW5kX2xlCiAgKgotICogZmluZHMgdGhlIGZpcnN0ICdsZScgaW4gdGhl
IGxpc3Qgd2hpY2ggbWF0Y2hlcyB0eXBlLCBuYW1lIGFuZCB2Y24KLSAqIFJldHVybnMgTlVMTCBp
ZiBub3QgZm91bmQKKyAqIEZpbmQgdGhlIGZpcnN0IGxlIGluIHRoZSBsaXN0IHdoaWNoIG1hdGNo
ZXMgdHlwZSwgbmFtZSBhbmQgVkNOLgorICoKKyAqIFJldHVybjogTlVMTCBpZiBub3QgZm91bmQu
CiAgKi8KIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmFsX2ZpbmRfbGUoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLAogCQkJCSAgIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlLApAQCAtMTU5LDggKzE2
NSw5IEBAIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmFsX2ZpbmRfbGUoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLAogLyoKICAqIGFsX2ZpbmRfZXgKICAqCi0gKiBmaW5kcyB0aGUgZmlyc3QgJ2xlJyBp
biB0aGUgbGlzdCB3aGljaCBtYXRjaGVzIHR5cGUsIG5hbWUgYW5kIHZjbgotICogUmV0dXJucyBO
VUxMIGlmIG5vdCBmb3VuZAorICogRmluZCB0aGUgZmlyc3QgbGUgaW4gdGhlIGxpc3Qgd2hpY2gg
bWF0Y2hlcyB0eXBlLCBuYW1lIGFuZCBWQ04uCisgKgorICogUmV0dXJuOiBOVUxMIGlmIG5vdCBm
b3VuZC4KICAqLwogc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqYWxfZmluZF9leChzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksCiAJCQkJICAgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUsCkBAIC0xNzQs
NyArMTgxLDcgQEAgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqYWxfZmluZF9leChzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksCiAJCXU2NCBsZV92Y247CiAJCWludCBkaWZmID0gbGUzMl90b19jcHUobGUt
PnR5cGUpIC0gdHlwZV9pbjsKCi0JCS8qIExpc3QgZW50cmllcyBhcmUgc29ydGVkIGJ5IHR5cGUs
IG5hbWUgYW5kIHZjbiAqLworCQkvKiBMaXN0IGVudHJpZXMgYXJlIHNvcnRlZCBieSB0eXBlLCBu
YW1lIGFuZCBWQ04uICovCiAJCWlmIChkaWZmIDwgMCkKIAkJCWNvbnRpbnVlOwoKQEAgLTE4Nyw3
ICsxOTQsNyBAQCBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZICphbF9maW5kX2V4KHN0cnVjdCBudGZz
X2lub2RlICpuaSwKIAkJbGVfdmNuID0gbGU2NF90b19jcHUobGUtPnZjbik7CiAJCWlmICghbGVf
dmNuKSB7CiAJCQkvKgotCQkJICogY29tcGFyZSBlbnRyeSBuYW1lcyBvbmx5IGZvciBlbnRyeSB3
aXRoIHZjbiA9PSAwCisJCQkgKiBDb21wYXJlIGVudHJ5IG5hbWVzIG9ubHkgZm9yIGVudHJ5IHdp
dGggdmNuID09IDAuCiAJCQkgKi8KIAkJCWRpZmYgPSBudGZzX2NtcF9uYW1lcyhsZV9uYW1lKGxl
KSwgbmFtZV9sZW4sIG5hbWUsCiAJCQkJCSAgICAgIG5hbWVfbGVuLCBuaS0+bWkuc2JpLT51cGNh
c2UsCkBAIC0yMTUsOSArMjIyLDkgQEAgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqYWxfZmluZF9l
eChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiB9CgogLyoKLSAqIGFsX2ZpbmRfbGVfdG9faW5zZXJ0
CisgKiBhbF9maW5kX2xlX3RvX2luc2VydAogICoKLSAqIGZpbmRzIHRoZSBmaXJzdCBsaXN0IGVu
dHJ5IHdoaWNoIG1hdGNoZXMgdHlwZSwgbmFtZSBhbmQgdmNuCisgKiBGaW5kIHRoZSBmaXJzdCBs
aXN0IGVudHJ5IHdoaWNoIG1hdGNoZXMgdHlwZSwgbmFtZSBhbmQgVkNOLgogICovCiBzdGF0aWMg
c3RydWN0IEFUVFJfTElTVF9FTlRSWSAqYWxfZmluZF9sZV90b19pbnNlcnQoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLAogCQkJCQkJICAgIGVudW0gQVRUUl9UWVBFIHR5cGUsCkBAIC0yMjcsNyArMjM0
LDcgQEAgc3RhdGljIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmFsX2ZpbmRfbGVfdG9faW5zZXJ0
KHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAlzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZICpsZSA9IE5V
TEwsICpwcmV2OwogCXUzMiB0eXBlX2luID0gbGUzMl90b19jcHUodHlwZSk7CgotCS8qIExpc3Qg
ZW50cmllcyBhcmUgc29ydGVkIGJ5IHR5cGUsIG5hbWUsIHZjbiAqLworCS8qIExpc3QgZW50cmll
cyBhcmUgc29ydGVkIGJ5IHR5cGUsIG5hbWUgYW5kIFZDTi4gKi8KIAl3aGlsZSAoKGxlID0gYWxf
ZW51bWVyYXRlKG5pLCBwcmV2ID0gbGUpKSkgewogCQlpbnQgZGlmZiA9IGxlMzJfdG9fY3B1KGxl
LT50eXBlKSAtIHR5cGVfaW47CgpAQCAtMjM5LDcgKzI0Niw3IEBAIHN0YXRpYyBzdHJ1Y3QgQVRU
Ul9MSVNUX0VOVFJZICphbF9maW5kX2xlX3RvX2luc2VydChzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
CgogCQlpZiAoIWxlLT52Y24pIHsKIAkJCS8qCi0JCQkgKiBjb21wYXJlIGVudHJ5IG5hbWVzIG9u
bHkgZm9yIGVudHJ5IHdpdGggdmNuID09IDAKKwkJCSAqIENvbXBhcmUgZW50cnkgbmFtZXMgb25s
eSBmb3IgZW50cnkgd2l0aCB2Y24gPT0gMC4KIAkJCSAqLwogCQkJZGlmZiA9IG50ZnNfY21wX25h
bWVzKGxlX25hbWUobGUpLCBsZS0+bmFtZV9sZW4sIG5hbWUsCiAJCQkJCSAgICAgIG5hbWVfbGVu
LCBuaS0+bWkuc2JpLT51cGNhc2UsCkBAIC0yNjEsNyArMjY4LDcgQEAgc3RhdGljIHN0cnVjdCBB
VFRSX0xJU1RfRU5UUlkgKmFsX2ZpbmRfbGVfdG9faW5zZXJ0KHN0cnVjdCBudGZzX2lub2RlICpu
aSwKIC8qCiAgKiBhbF9hZGRfbGUKICAqCi0gKiBhZGRzIGFuICJhdHRyaWJ1dGUgbGlzdCBlbnRy
eSIgdG8gdGhlIGxpc3QuCisgKiBBZGQgYW4gImF0dHJpYnV0ZSBsaXN0IGVudHJ5IiB0byB0aGUg
bGlzdC4KICAqLwogaW50IGFsX2FkZF9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRU
Ul9UWVBFIHR5cGUsIGNvbnN0IF9fbGUxNiAqbmFtZSwKIAkgICAgICB1OCBuYW1lX2xlbiwgQ0xT
VCBzdmNuLCBfX2xlMTYgaWQsIGNvbnN0IHN0cnVjdCBNRlRfUkVGICpyZWYsCkBAIC0zMzUsOSAr
MzQyLDcgQEAgaW50IGFsX2FkZF9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9U
WVBFIHR5cGUsIGNvbnN0IF9fbGUxNiAqbmFtZSwKIH0KCiAvKgotICogYWxfcmVtb3ZlX2xlCi0g
KgotICogcmVtb3ZlcyAnbGUnIGZyb20gYXR0cmlidXRlIGxpc3QKKyAqIGFsX3JlbW92ZV9sZSAt
IFJlbW92ZSBAbGUgZnJvbSBhdHRyaWJ1dGUgbGlzdC4KICAqLwogYm9vbCBhbF9yZW1vdmVfbGUo
c3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZICpsZSkKIHsKQEAg
LTM2MSw5ICszNjYsNyBAQCBib29sIGFsX3JlbW92ZV9sZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlKQogfQoKIC8qCi0gKiBhbF9kZWxldGVfbGUKLSAq
Ci0gKiBkZWxldGVzIGZyb20gdGhlIGxpc3QgdGhlIGZpcnN0ICdsZScgd2hpY2ggbWF0Y2hlcyBp
dHMgcGFyYW1ldGVycy4KKyAqIGFsX2RlbGV0ZV9sZSAtIERlbGV0ZSBmaXJzdCBsZSBmcm9tIHRo
ZSBsaXN0IHdoaWNoIG1hdGNoZXMgaXRzIHBhcmFtZXRlcnMuCiAgKi8KIGJvb2wgYWxfZGVsZXRl
X2xlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwgQ0xTVCB2Y24s
CiAJCSAgY29uc3QgX19sZTE2ICpuYW1lLCBzaXplX3QgbmFtZV9sZW4sCkBAIC0zNzQsNyArMzc3
LDcgQEAgYm9vbCBhbF9kZWxldGVfbGUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJf
VFlQRSB0eXBlLCBDTFNUIHZjbiwKIAlzaXplX3Qgb2ZmOwogCXR5cGVvZihuaS0+YXR0cl9saXN0
KSAqYWwgPSAmbmktPmF0dHJfbGlzdDsKCi0JLyogU2NhbiBmb3J3YXJkIHRvIHRoZSBmaXJzdCAn
bGUnIHRoYXQgbWF0Y2hlcyB0aGUgaW5wdXQgKi8KKwkvKiBTY2FuIGZvcndhcmQgdG8gdGhlIGZp
cnN0IGxlIHRoYXQgbWF0Y2hlcyB0aGUgaW5wdXQuICovCiAJbGUgPSBhbF9maW5kX2V4KG5pLCBO
VUxMLCB0eXBlLCBuYW1lLCBuYW1lX2xlbiwgJnZjbik7CiAJaWYgKCFsZSkKIAkJcmV0dXJuIGZh
bHNlOwpAQCAtNDA1LDkgKzQwOCw5IEBAIGJvb2wgYWxfZGVsZXRlX2xlKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwgQ0xTVCB2Y24sCiAJCWdvdG8gbmV4dDsKIAl9
CgotCS8qIFNhdmUgb24gc3RhY2sgdGhlIHNpemUgb2YgJ2xlJyAqLworCS8qIFNhdmUgb24gc3Rh
Y2sgdGhlIHNpemUgb2YgJ2xlJy4gKi8KIAlzaXplID0gbGUxNl90b19jcHUobGUtPnNpemUpOwot
CS8qIERlbGV0ZSAnbGUnLiAqLworCS8qIERlbGV0ZSB0aGUgbGUuICovCiAJbWVtbW92ZShsZSwg
QWRkMlB0cihsZSwgc2l6ZSksIGFsLT5zaXplIC0gKG9mZiArIHNpemUpKTsKCiAJYWwtPnNpemUg
LT0gc2l6ZTsKQEAgLTQxNiw5ICs0MTksNiBAQCBib29sIGFsX2RlbGV0ZV9sZShzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsIENMU1QgdmNuLAogCXJldHVybiB0cnVl
OwogfQoKLS8qCi0gKiBhbF91cGRhdGUKLSAqLwogaW50IGFsX3VwZGF0ZShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmkpCiB7CiAJaW50IGVycjsKQEAgLTQyOSw4ICs0MjksOCBAQCBpbnQgYWxfdXBkYXRl
KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIAkJcmV0dXJuIDA7CgogCS8qCi0JICogYXR0cmlidXRl
IGxpc3QgaW5jcmVhc2VkIG9uIGRlbWFuZCBpbiBhbF9hZGRfbGUKLQkgKiBhdHRyaWJ1dGUgbGlz
dCBkZWNyZWFzZWQgaGVyZQorCSAqIEF0dHJpYnV0ZSBsaXN0IGluY3JlYXNlZCBvbiBkZW1hbmQg
aW4gYWxfYWRkX2xlLgorCSAqIEF0dHJpYnV0ZSBsaXN0IGRlY3JlYXNlZCBoZXJlLgogCSAqLwog
CWVyciA9IGF0dHJfc2V0X3NpemUobmksIEFUVFJfTElTVCwgTlVMTCwgMCwgJmFsLT5ydW4sIGFs
LT5zaXplLCBOVUxMLAogCQkJICAgIGZhbHNlLCAmYXR0cik7CmRpZmYgLS1naXQgYS9mcy9udGZz
My9iaXRmdW5jLmMgYi9mcy9udGZzMy9iaXRmdW5jLmMKaW5kZXggMmRlNWZhZWYyNzIxLi5jZTMw
NGQ0MGI1ZTEgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL2JpdGZ1bmMuYworKysgYi9mcy9udGZzMy9i
aXRmdW5jLmMKQEAgLTQsNiArNCw3IEBACiAgKiBDb3B5cmlnaHQgKEMpIDIwMTktMjAyMSBQYXJh
Z29uIFNvZnR3YXJlIEdtYkgsIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgKgogICovCisKICNpbmNs
dWRlIDxsaW51eC9ibGtkZXYuaD4KICNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgogI2lu
Y2x1ZGUgPGxpbnV4L2ZzLmg+CkBAIC0zMiw3ICszMyw3IEBAIHN0YXRpYyBjb25zdCB1OCB6ZXJv
X21hc2tbXSA9IHsgMHhGRiwgMHhGRSwgMHhGQywgMHhGOCwgMHhGMCwKIC8qCiAgKiBhcmVfYml0
c19jbGVhcgogICoKLSAqIFJldHVybnMgdHJ1ZSBpZiBhbGwgYml0cyBbYml0LCBiaXQrbmJpdHMp
IGFyZSB6ZXJvcyAiMCIKKyAqIFJldHVybjogVHJ1ZSBpZiBhbGwgYml0cyBbYml0LCBiaXQrbmJp
dHMpIGFyZSB6ZXJvcyAiMCIuCiAgKi8KIGJvb2wgYXJlX2JpdHNfY2xlYXIoY29uc3QgdWxvbmcg
KmxtYXAsIHNpemVfdCBiaXQsIHNpemVfdCBuYml0cykKIHsKQEAgLTc0LDE0ICs3NSwxMyBAQCBi
b29sIGFyZV9iaXRzX2NsZWFyKGNvbnN0IHVsb25nICpsbWFwLCBzaXplX3QgYml0LCBzaXplX3Qg
bmJpdHMpCiAJaWYgKHBvcyAmJiAoKm1hcCAmIGZpbGxfbWFza1twb3NdKSkKIAkJcmV0dXJuIGZh
bHNlOwoKLQkvLyBBbGwgYml0cyBhcmUgemVybwogCXJldHVybiB0cnVlOwogfQoKIC8qCiAgKiBh
cmVfYml0c19zZXQKICAqCi0gKiBSZXR1cm5zIHRydWUgaWYgYWxsIGJpdHMgW2JpdCwgYml0K25i
aXRzKSBhcmUgb25lcyAiMSIKKyAqIFJldHVybjogVHJ1ZSBpZiBhbGwgYml0cyBbYml0LCBiaXQr
bmJpdHMpIGFyZSBvbmVzICIxIi4KICAqLwogYm9vbCBhcmVfYml0c19zZXQoY29uc3QgdWxvbmcg
KmxtYXAsIHNpemVfdCBiaXQsIHNpemVfdCBuYml0cykKIHsKQEAgLTEzMCw2ICsxMzAsNSBAQCBi
b29sIGFyZV9iaXRzX3NldChjb25zdCB1bG9uZyAqbG1hcCwgc2l6ZV90IGJpdCwgc2l6ZV90IG5i
aXRzKQogCQkJcmV0dXJuIGZhbHNlOwogCX0KCi0JLy8gQWxsIGJpdHMgYXJlIG9uZXMKIAlyZXR1
cm4gdHJ1ZTsKIH0KZGlmZiAtLWdpdCBhL2ZzL250ZnMzL2JpdG1hcC5jIGIvZnMvbnRmczMvYml0
bWFwLmMKaW5kZXggMzJhYWIwMDMxMjIxLi5mZjU4Njc5OGI2MmEgMTAwNjQ0Ci0tLSBhL2ZzL250
ZnMzL2JpdG1hcC5jCisrKyBiL2ZzL250ZnMzL2JpdG1hcC5jCkBAIC02LDcgKzYsNyBAQAogICog
VGhpcyBjb2RlIGJ1aWxkcyB0d28gdHJlZXMgb2YgZnJlZSBjbHVzdGVycyBleHRlbnRzLgogICog
VHJlZXMgYXJlIHNvcnRlZCBieSBzdGFydCBvZiBleHRlbnQgYW5kIGJ5IGxlbmd0aCBvZiBleHRl
bnQuCiAgKiBOVEZTX01BWF9XTkRfRVhURU5UUyBkZWZpbmVzIHRoZSBtYXhpbXVtIG51bWJlciBv
ZiBlbGVtZW50cyBpbiB0cmVlcy4KLSAqIEluIGV4dHJlbWUgY2FzZSBjb2RlIHJlYWRzIG9uLWRp
c2sgYml0bWFwIHRvIGZpbmQgZnJlZSBjbHVzdGVycworICogSW4gZXh0cmVtZSBjYXNlIGNvZGUg
cmVhZHMgb24tZGlzayBiaXRtYXAgdG8gZmluZCBmcmVlIGNsdXN0ZXJzLgogICoKICAqLwoKQEAg
LTI5LDEyICsyOSwxMCBAQCBzdHJ1Y3QgcmJfbm9kZV9rZXkgewogCXNpemVfdCBrZXk7CiB9OwoK
LS8qCi0gKiBUcmVlIGlzIHNvcnRlZCBieSBzdGFydCAoa2V5KQotICovCisvKiBUcmVlIGlzIHNv
cnRlZCBieSBzdGFydCAoa2V5KS4gKi8KIHN0cnVjdCBlX25vZGUgewotCXN0cnVjdCByYl9ub2Rl
X2tleSBzdGFydDsgLyogVHJlZSBzb3J0ZWQgYnkgc3RhcnQgKi8KLQlzdHJ1Y3QgcmJfbm9kZV9r
ZXkgY291bnQ7IC8qIFRyZWUgc29ydGVkIGJ5IGxlbiovCisJc3RydWN0IHJiX25vZGVfa2V5IHN0
YXJ0OyAvKiBUcmVlIHNvcnRlZCBieSBzdGFydC4gKi8KKwlzdHJ1Y3QgcmJfbm9kZV9rZXkgY291
bnQ7IC8qIFRyZWUgc29ydGVkIGJ5IGxlbi4gKi8KIH07Cgogc3RhdGljIGludCB3bmRfcmVzY2Fu
KHN0cnVjdCB3bmRfYml0bWFwICp3bmQpOwpAQCAtNjIsOSArNjAsMTIgQEAgc3RhdGljIGlubGlu
ZSB1MzIgd25kX2JpdHMoY29uc3Qgc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGkpCiB9
CgogLyoKLSAqIGJfcG9zICsgYl9sZW4gLSBiaWdnZXN0IGZyYWdtZW50Ci0gKiBTY2FuIHJhbmdl
IFt3cG9zIHdiaXRzKSB3aW5kb3cgJ2J1ZicKLSAqIFJldHVybnMgLTEgaWYgbm90IGZvdW5kCisg
KiB3bmRfc2NhbgorICoKKyAqIGJfcG9zICsgYl9sZW4gLSBiaWdnZXN0IGZyYWdtZW50LgorICog
U2NhbiByYW5nZSBbd3BvcyB3Yml0cykgd2luZG93IEBidWYuCisgKgorICogUmV0dXJuOiAtMSBp
ZiBub3QgZm91bmQuCiAgKi8KIHN0YXRpYyBzaXplX3Qgd25kX3NjYW4oY29uc3QgdWxvbmcgKmJ1
Ziwgc2l6ZV90IHdiaXQsIHUzMiB3cG9zLCB1MzIgd2VuZCwKIAkJICAgICAgIHNpemVfdCB0b19h
bGxvYywgc2l6ZV90ICpwcmV2X3RhaWwsIHNpemVfdCAqYl9wb3MsCkBAIC05Niw3ICs5Nyw3IEBA
IHN0YXRpYyBzaXplX3Qgd25kX3NjYW4oY29uc3QgdWxvbmcgKmJ1Ziwgc2l6ZV90IHdiaXQsIHUz
MiB3cG9zLCB1MzIgd2VuZCwKIAkJfQoKIAkJLyoKLQkJICogTm93IHdlIGhhdmUgYSBmcmFnbWVu
dCBbd3Bvcywgd2VuZCkgc3RhcmluZyB3aXRoIDAKKwkJICogTm93IHdlIGhhdmUgYSBmcmFnbWVu
dCBbd3Bvcywgd2VuZCkgc3RhcmluZyB3aXRoIDAuCiAJCSAqLwogCQllbmQgPSB3cG9zICsgdG9f
YWxsb2MgLSAqcHJldl90YWlsOwogCQlmcmVlX2JpdHMgPSBmaW5kX25leHRfYml0KGJ1ZiwgbWlu
KGVuZCwgd2VuZCksIHdwb3MpOwpAQCAtMTI1LDkgKzEyNiw3IEBAIHN0YXRpYyBzaXplX3Qgd25k
X3NjYW4oY29uc3QgdWxvbmcgKmJ1Ziwgc2l6ZV90IHdiaXQsIHUzMiB3cG9zLCB1MzIgd2VuZCwK
IH0KCiAvKgotICogd25kX2Nsb3NlCi0gKgotICogRnJlZXMgYWxsIHJlc291cmNlcworICogd25k
X2Nsb3NlIC0gRnJlZXMgYWxsIHJlc291cmNlcy4KICAqLwogdm9pZCB3bmRfY2xvc2Uoc3RydWN0
IHduZF9iaXRtYXAgKnduZCkKIHsKQEAgLTE3MCw5ICsxNjksNyBAQCBzdGF0aWMgc3RydWN0IHJi
X25vZGUgKnJiX2xvb2t1cChzdHJ1Y3QgcmJfcm9vdCAqcm9vdCwgc2l6ZV90IHYpCiB9CgogLyoK
LSAqIHJiX2luc2VydF9jb3VudAotICoKLSAqIEhlbHBlciBmdW5jdGlvbiB0byBpbnNlcnQgc3Bl
Y2lhbCBraW5kIG9mICdjb3VudCcgdHJlZQorICogcmJfaW5zZXJ0X2NvdW50IC0gSGVscGVyIGZ1
bmN0aW9uIHRvIGluc2VydCBzcGVjaWFsIGtpbmQgb2YgJ2NvdW50JyB0cmVlLgogICovCiBzdGF0
aWMgaW5saW5lIGJvb2wgcmJfaW5zZXJ0X2NvdW50KHN0cnVjdCByYl9yb290ICpyb290LCBzdHJ1
Y3QgZV9ub2RlICplKQogewpAQCAtMjA1LDkgKzIwMiw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBy
Yl9pbnNlcnRfY291bnQoc3RydWN0IHJiX3Jvb3QgKnJvb3QsIHN0cnVjdCBlX25vZGUgKmUpCiB9
CgogLyoKLSAqIGlubGluZSBib29sIHJiX2luc2VydF9zdGFydAotICoKLSAqIEhlbHBlciBmdW5j
dGlvbiB0byBpbnNlcnQgc3BlY2lhbCBraW5kIG9mICdzdGFydCcgdHJlZQorICogcmJfaW5zZXJ0
X3N0YXJ0IC0gSGVscGVyIGZ1bmN0aW9uIHRvIGluc2VydCBzcGVjaWFsIGtpbmQgb2YgJ2NvdW50
JyB0cmVlLgogICovCiBzdGF0aWMgaW5saW5lIGJvb2wgcmJfaW5zZXJ0X3N0YXJ0KHN0cnVjdCBy
Yl9yb290ICpyb290LCBzdHJ1Y3QgZV9ub2RlICplKQogewpAQCAtMjM3LDEwICsyMzIsOCBAQCBz
dGF0aWMgaW5saW5lIGJvb2wgcmJfaW5zZXJ0X3N0YXJ0KHN0cnVjdCByYl9yb290ICpyb290LCBz
dHJ1Y3QgZV9ub2RlICplKQogfQoKIC8qCi0gKiB3bmRfYWRkX2ZyZWVfZXh0Ci0gKgotICogYWRk
cyBhIG5ldyBleHRlbnQgb2YgZnJlZSBzcGFjZQotICogYnVpbGQgPSAxIHdoZW4gYnVpbGRpbmcg
dHJlZQorICogd25kX2FkZF9mcmVlX2V4dCAtIEFkZHMgYSBuZXcgZXh0ZW50IG9mIGZyZWUgc3Bh
Y2UuCisgKiBAYnVpbGQ6CTEgd2hlbiBidWlsZGluZyB0cmVlLgogICovCiBzdGF0aWMgdm9pZCB3
bmRfYWRkX2ZyZWVfZXh0KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVf
dCBsZW4sCiAJCQkgICAgIGJvb2wgYnVpbGQpCkBAIC0yNTAsMTQgKzI0MywxNCBAQCBzdGF0aWMg
dm9pZCB3bmRfYWRkX2ZyZWVfZXh0KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQs
IHNpemVfdCBsZW4sCiAJc3RydWN0IHJiX25vZGUgKm47CgogCWlmIChidWlsZCkgewotCQkvKiBV
c2UgZXh0ZW50X21pbiB0byBmaWx0ZXIgdG9vIHNob3J0IGV4dGVudHMgKi8KKwkJLyogVXNlIGV4
dGVudF9taW4gdG8gZmlsdGVyIHRvbyBzaG9ydCBleHRlbnRzLiAqLwogCQlpZiAod25kLT5jb3Vu
dCA+PSBOVEZTX01BWF9XTkRfRVhURU5UUyAmJgogCQkgICAgbGVuIDw9IHduZC0+ZXh0ZW50X21p
bikgewogCQkJd25kLT51cHRvZGF0ZWQgPSAtMTsKIAkJCXJldHVybjsKIAkJfQogCX0gZWxzZSB7
Ci0JCS8qIFRyeSB0byBmaW5kIGV4dGVudCBiZWZvcmUgJ2JpdCcgKi8KKwkJLyogVHJ5IHRvIGZp
bmQgZXh0ZW50IGJlZm9yZSAnYml0Jy4gKi8KIAkJbiA9IHJiX2xvb2t1cCgmd25kLT5zdGFydF90
cmVlLCBiaXQpOwoKIAkJaWYgKCFuKSB7CkBAIC0yNjYsNyArMjU5LDcgQEAgc3RhdGljIHZvaWQg
d25kX2FkZF9mcmVlX2V4dChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgYml0LCBzaXpl
X3QgbGVuLAogCQkJZSA9IHJiX2VudHJ5KG4sIHN0cnVjdCBlX25vZGUsIHN0YXJ0Lm5vZGUpOwog
CQkJbiA9IHJiX25leHQobik7CiAJCQlpZiAoZS0+c3RhcnQua2V5ICsgZS0+Y291bnQua2V5ID09
IGJpdCkgewotCQkJCS8qIFJlbW92ZSBsZWZ0ICovCisJCQkJLyogUmVtb3ZlIGxlZnQuICovCiAJ
CQkJYml0ID0gZS0+c3RhcnQua2V5OwogCQkJCWxlbiArPSBlLT5jb3VudC5rZXk7CiAJCQkJcmJf
ZXJhc2UoJmUtPnN0YXJ0Lm5vZGUsICZ3bmQtPnN0YXJ0X3RyZWUpOwpAQCAtMjg0LDcgKzI3Nyw3
IEBAIHN0YXRpYyB2b2lkIHduZF9hZGRfZnJlZV9leHQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwg
c2l6ZV90IGJpdCwgc2l6ZV90IGxlbiwKIAkJCWlmIChlLT5zdGFydC5rZXkgPiBlbmRfaW4pCiAJ
CQkJYnJlYWs7CgotCQkJLyogUmVtb3ZlIHJpZ2h0ICovCisJCQkvKiBSZW1vdmUgcmlnaHQuICov
CiAJCQluID0gcmJfbmV4dChuKTsKIAkJCWxlbiArPSBuZXh0X2VuZCAtIGVuZF9pbjsKIAkJCWVu
ZF9pbiA9IG5leHRfZW5kOwpAQCAtMjk5LDcgKzI5Miw3IEBAIHN0YXRpYyB2b2lkIHduZF9hZGRf
ZnJlZV9leHQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90IGxlbiwK
IAkJfQoKIAkJaWYgKHduZC0+dXB0b2RhdGVkICE9IDEpIHsKLQkJCS8qIENoZWNrIGJpdHMgYmVm
b3JlICdiaXQnICovCisJCQkvKiBDaGVjayBiaXRzIGJlZm9yZSAnYml0Jy4gKi8KIAkJCWliID0g
d25kLT56b25lX2JpdCA9PSB3bmQtPnpvbmVfZW5kIHx8CiAJCQkJCSAgICAgYml0IDwgd25kLT56
b25lX2VuZAogCQkJCSAgICAgPyAwCkBAIC0zMTAsNyArMzAzLDcgQEAgc3RhdGljIHZvaWQgd25k
X2FkZF9mcmVlX2V4dChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgYml0LCBzaXplX3Qg
bGVuLAogCQkJCWxlbiArPSAxOwogCQkJfQoKLQkJCS8qIENoZWNrIGJpdHMgYWZ0ZXIgJ2VuZF9p
bicgKi8KKwkJCS8qIENoZWNrIGJpdHMgYWZ0ZXIgJ2VuZF9pbicuICovCiAJCQlpYiA9IHduZC0+
em9uZV9iaXQgPT0gd25kLT56b25lX2VuZCB8fAogCQkJCQkgICAgIGVuZF9pbiA+IHduZC0+em9u
ZV9iaXQKIAkJCQkgICAgID8gd25kLT5uYml0cwpAQCAtMzIyLDI5ICszMTUsMjkgQEAgc3RhdGlj
IHZvaWQgd25kX2FkZF9mcmVlX2V4dChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgYml0
LCBzaXplX3QgbGVuLAogCQkJfQogCQl9CiAJfQotCS8qIEluc2VydCBuZXcgZnJhZ21lbnQgKi8K
KwkvKiBJbnNlcnQgbmV3IGZyYWdtZW50LiAqLwogCWlmICh3bmQtPmNvdW50ID49IE5URlNfTUFY
X1dORF9FWFRFTlRTKSB7CiAJCWlmIChlMCkKIAkJCWttZW1fY2FjaGVfZnJlZShudGZzX2Vub2Rl
X2NhY2hlcCwgZTApOwoKIAkJd25kLT51cHRvZGF0ZWQgPSAtMTsKCi0JCS8qIENvbXBhcmUgd2l0
aCBzbWFsbGVzdCBmcmFnbWVudCAqLworCQkvKiBDb21wYXJlIHdpdGggc21hbGxlc3QgZnJhZ21l
bnQuICovCiAJCW4gPSByYl9sYXN0KCZ3bmQtPmNvdW50X3RyZWUpOwogCQllID0gcmJfZW50cnko
biwgc3RydWN0IGVfbm9kZSwgY291bnQubm9kZSk7CiAJCWlmIChsZW4gPD0gZS0+Y291bnQua2V5
KQotCQkJZ290byBvdXQ7IC8qIERvIG5vdCBpbnNlcnQgc21hbGwgZnJhZ21lbnRzICovCisJCQln
b3RvIG91dDsgLyogRG8gbm90IGluc2VydCBzbWFsbCBmcmFnbWVudHMuICovCgogCQlpZiAoYnVp
bGQpIHsKIAkJCXN0cnVjdCBlX25vZGUgKmUyOwoKIAkJCW4gPSByYl9wcmV2KG4pOwogCQkJZTIg
PSByYl9lbnRyeShuLCBzdHJ1Y3QgZV9ub2RlLCBjb3VudC5ub2RlKTsKLQkJCS8qIHNtYWxsZXN0
IGZyYWdtZW50IHdpbGwgYmUgJ2UyLT5jb3VudC5rZXknICovCisJCQkvKiBTbWFsbGVzdCBmcmFn
bWVudCB3aWxsIGJlICdlMi0+Y291bnQua2V5Jy4gKi8KIAkJCXduZC0+ZXh0ZW50X21pbiA9IGUy
LT5jb3VudC5rZXk7CiAJCX0KCi0JCS8qIFJlcGxhY2Ugc21hbGxlc3QgZnJhZ21lbnQgYnkgbmV3
IG9uZSAqLworCQkvKiBSZXBsYWNlIHNtYWxsZXN0IGZyYWdtZW50IGJ5IG5ldyBvbmUuICovCiAJ
CXJiX2VyYXNlKCZlLT5zdGFydC5ub2RlLCAmd25kLT5zdGFydF90cmVlKTsKIAkJcmJfZXJhc2Uo
JmUtPmNvdW50Lm5vZGUsICZ3bmQtPmNvdW50X3RyZWUpOwogCQl3bmQtPmNvdW50IC09IDE7CkBA
IC0zNzEsOSArMzY0LDcgQEAgb3V0OjsKIH0KCiAvKgotICogd25kX3JlbW92ZV9mcmVlX2V4dAot
ICoKLSAqIHJlbW92ZXMgYSBydW4gZnJvbSB0aGUgY2FjaGVkIGZyZWUgc3BhY2UKKyAqIHduZF9y
ZW1vdmVfZnJlZV9leHQgLSBSZW1vdmUgYSBydW4gZnJvbSB0aGUgY2FjaGVkIGZyZWUgc3BhY2Uu
CiAgKi8KIHN0YXRpYyB2b2lkIHduZF9yZW1vdmVfZnJlZV9leHQoc3RydWN0IHduZF9iaXRtYXAg
KnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90IGxlbikKIHsKQEAgLTM4Miw3ICszNzMsNyBAQCBzdGF0
aWMgdm9pZCB3bmRfcmVtb3ZlX2ZyZWVfZXh0KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVf
dCBiaXQsIHNpemVfdCBsZW4pCiAJc2l6ZV90IGVuZF9pbiA9IGJpdCArIGxlbjsKIAlzaXplX3Qg
ZW5kMywgZW5kLCBuZXdfa2V5LCBuZXdfbGVuLCBtYXhfbmV3X2xlbjsKCi0JLyogVHJ5IHRvIGZp
bmQgZXh0ZW50IGJlZm9yZSAnYml0JyAqLworCS8qIFRyeSB0byBmaW5kIGV4dGVudCBiZWZvcmUg
J2JpdCcuICovCiAJbiA9IHJiX2xvb2t1cCgmd25kLT5zdGFydF90cmVlLCBiaXQpOwoKIAlpZiAo
IW4pCkBAIC0zOTQsMTEgKzM4NSwxMSBAQCBzdGF0aWMgdm9pZCB3bmRfcmVtb3ZlX2ZyZWVfZXh0
KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVfdCBsZW4pCiAJbmV3X2tl
eSA9IG5ld19sZW4gPSAwOwogCWxlbiA9IGUtPmNvdW50LmtleTsKCi0JLyogUmFuZ2UgW2JpdCxl
bmRfaW4pIG11c3QgYmUgaW5zaWRlICdlJyBvciBvdXRzaWRlICdlJyBhbmQgJ24nICovCisJLyog
UmFuZ2UgW2JpdCxlbmRfaW4pIG11c3QgYmUgaW5zaWRlICdlJyBvciBvdXRzaWRlICdlJyBhbmQg
J24nLiAqLwogCWlmIChlLT5zdGFydC5rZXkgPiBiaXQpCiAJCTsKIAllbHNlIGlmIChlbmRfaW4g
PD0gZW5kKSB7Ci0JCS8qIFJhbmdlIFtiaXQsZW5kX2luKSBpbnNpZGUgJ2UnICovCisJCS8qIFJh
bmdlIFtiaXQsZW5kX2luKSBpbnNpZGUgJ2UnLiAqLwogCQluZXdfa2V5ID0gZW5kX2luOwogCQlu
ZXdfbGVuID0gZW5kIC0gZW5kX2luOwogCQlsZW4gPSBiaXQgLSBlLT5zdGFydC5rZXk7CkBAIC00
NzgsMTMgKzQ2OSwxMyBAQCBzdGF0aWMgdm9pZCB3bmRfcmVtb3ZlX2ZyZWVfZXh0KHN0cnVjdCB3
bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVfdCBsZW4pCiAJaWYgKHduZC0+Y291bnQg
Pj0gTlRGU19NQVhfV05EX0VYVEVOVFMpIHsKIAkJd25kLT51cHRvZGF0ZWQgPSAtMTsKCi0JCS8q
IEdldCBtaW5pbWFsIGV4dGVudCAqLworCQkvKiBHZXQgbWluaW1hbCBleHRlbnQuICovCiAJCWUg
PSByYl9lbnRyeShyYl9sYXN0KCZ3bmQtPmNvdW50X3RyZWUpLCBzdHJ1Y3QgZV9ub2RlLAogCQkJ
ICAgICBjb3VudC5ub2RlKTsKIAkJaWYgKGUtPmNvdW50LmtleSA+IG5ld19sZW4pCiAJCQlnb3Rv
IG91dDsKCi0JCS8qIFJlcGxhY2UgbWluaW11bSAqLworCQkvKiBSZXBsYWNlIG1pbmltdW0uICov
CiAJCXJiX2VyYXNlKCZlLT5zdGFydC5ub2RlLCAmd25kLT5zdGFydF90cmVlKTsKIAkJcmJfZXJh
c2UoJmUtPmNvdW50Lm5vZGUsICZ3bmQtPmNvdW50X3RyZWUpOwogCQl3bmQtPmNvdW50IC09IDE7
CkBAIC01MDgsOSArNDk5LDcgQEAgc3RhdGljIHZvaWQgd25kX3JlbW92ZV9mcmVlX2V4dChzdHJ1
Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgYml0LCBzaXplX3QgbGVuKQogfQoKIC8qCi0gKiB3
bmRfcmVzY2FuCi0gKgotICogU2NhbiBhbGwgYml0bWFwLiB1c2VkIHdoaWxlIGluaXRpYWxpemF0
aW9uLgorICogd25kX3Jlc2NhbiAtIFNjYW4gYWxsIGJpdG1hcC4gVXNlZCB3aGlsZSBpbml0aWFs
aXphdGlvbi4KICAqLwogc3RhdGljIGludCB3bmRfcmVzY2FuKHN0cnVjdCB3bmRfYml0bWFwICp3
bmQpCiB7CkBAIC01NDEsNyArNTMwLDcgQEAgc3RhdGljIGludCB3bmRfcmVzY2FuKHN0cnVjdCB3
bmRfYml0bWFwICp3bmQpCgogCQlpZiAod25kLT5pbml0ZWQpIHsKIAkJCWlmICghd25kLT5mcmVl
X2JpdHNbaXddKSB7Ci0JCQkJLyogYWxsIG9uZXMgKi8KKwkJCQkvKiBBbGwgb25lcy4gKi8KIAkJ
CQlpZiAocHJldl90YWlsKSB7CiAJCQkJCXduZF9hZGRfZnJlZV9leHQod25kLAogCQkJCQkJCSB2
Ym8gKiA4IC0gcHJldl90YWlsLApAQCAtNTUxLDcgKzU0MCw3IEBAIHN0YXRpYyBpbnQgd25kX3Jl
c2NhbihzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kKQogCQkJCWdvdG8gbmV4dF93bmQ7CiAJCQl9CiAJ
CQlpZiAod2JpdHMgPT0gd25kLT5mcmVlX2JpdHNbaXddKSB7Ci0JCQkJLyogYWxsIHplcm9lcyAq
LworCQkJCS8qIEFsbCB6ZXJvZXMuICovCiAJCQkJcHJldl90YWlsICs9IHdiaXRzOwogCQkJCXdu
ZC0+dG90YWxfemVyb2VzICs9IHdiaXRzOwogCQkJCWdvdG8gbmV4dF93bmQ7CkBAIC02MDQsMTQg
KzU5MywxNCBAQCBzdGF0aWMgaW50IHduZF9yZXNjYW4oc3RydWN0IHduZF9iaXRtYXAgKnduZCkK
IAkJCXdwb3MgPSB1c2VkOwoKIAkJCWlmICh3cG9zID49IHdiaXRzKSB7Ci0JCQkJLyogTm8gZnJl
ZSBibG9ja3MgKi8KKwkJCQkvKiBObyBmcmVlIGJsb2Nrcy4gKi8KIAkJCQlwcmV2X3RhaWwgPSAw
OwogCQkJCWJyZWFrOwogCQkJfQoKIAkJCWZyYiA9IGZpbmRfbmV4dF9iaXQoYnVmLCB3Yml0cywg
d3Bvcyk7CiAJCQlpZiAoZnJiID49IHdiaXRzKSB7Ci0JCQkJLyoga2VlcCBsYXN0IGZyZWUgYmxv
Y2sgKi8KKwkJCQkvKiBLZWVwIGxhc3QgZnJlZSBibG9jay4gKi8KIAkJCQlwcmV2X3RhaWwgKz0g
ZnJiIC0gd3BvczsKIAkJCQlicmVhazsKIAkJCX0KQEAgLTYxOSw5ICs2MDgsOSBAQCBzdGF0aWMg
aW50IHduZF9yZXNjYW4oc3RydWN0IHduZF9iaXRtYXAgKnduZCkKIAkJCXduZF9hZGRfZnJlZV9l
eHQod25kLCB3Yml0ICsgd3BvcyAtIHByZXZfdGFpbCwKIAkJCQkJIGZyYiArIHByZXZfdGFpbCAt
IHdwb3MsIHRydWUpOwoKLQkJCS8qIFNraXAgZnJlZSBibG9jayBhbmQgZmlyc3QgJzEnICovCisJ
CQkvKiBTa2lwIGZyZWUgYmxvY2sgYW5kIGZpcnN0ICcxJy4gKi8KIAkJCXdwb3MgPSBmcmIgKyAx
OwotCQkJLyogUmVzZXQgcHJldmlvdXMgdGFpbCAqLworCQkJLyogUmVzZXQgcHJldmlvdXMgdGFp
bC4gKi8KIAkJCXByZXZfdGFpbCA9IDA7CiAJCX0gd2hpbGUgKHdwb3MgPCB3Yml0cyk7CgpAQCAt
NjM4LDE1ICs2MjcsMTUgQEAgc3RhdGljIGludCB3bmRfcmVzY2FuKHN0cnVjdCB3bmRfYml0bWFw
ICp3bmQpCiAJCX0KIAl9CgotCS8qIEFkZCBsYXN0IGJsb2NrICovCisJLyogQWRkIGxhc3QgYmxv
Y2suICovCiAJaWYgKHByZXZfdGFpbCkKIAkJd25kX2FkZF9mcmVlX2V4dCh3bmQsIHduZC0+bmJp
dHMgLSBwcmV2X3RhaWwsIHByZXZfdGFpbCwgdHJ1ZSk7CgogCS8qCi0JICogQmVmb3JlIGluaXQg
Y3ljbGUgd25kLT51cHRvZGF0ZWQgd2FzIDAKKwkgKiBCZWZvcmUgaW5pdCBjeWNsZSB3bmQtPnVw
dG9kYXRlZCB3YXMgMC4KIAkgKiBJZiBhbnkgZXJyb3JzIG9yIGxpbWl0cyBvY2N1cnMgd2hpbGUg
aW5pdGlhbGl6YXRpb24gdGhlbgotCSAqIHduZC0+dXB0b2RhdGVkIHdpbGwgYmUgLTEKLQkgKiBJ
ZiAndXB0b2RhdGVkJyBpcyBzdGlsbCAwIHRoZW4gVHJlZSBpcyByZWFsbHkgdXBkYXRlZAorCSAq
IHduZC0+dXB0b2RhdGVkIHdpbGwgYmUgLTEuCisJICogSWYgJ3VwdG9kYXRlZCcgaXMgc3RpbGwg
MCB0aGVuIFRyZWUgaXMgcmVhbGx5IHVwZGF0ZWQuCiAJICovCiAJaWYgKCF3bmQtPnVwdG9kYXRl
ZCkKIAkJd25kLT51cHRvZGF0ZWQgPSAxOwpAQCAtNjYyLDkgKzY1MSw2IEBAIHN0YXRpYyBpbnQg
d25kX3Jlc2NhbihzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kKQogCXJldHVybiBlcnI7CiB9CgotLyoK
LSAqIHduZF9pbml0Ci0gKi8KIGludCB3bmRfaW5pdChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBzaXplX3QgbmJpdHMpCiB7CiAJaW50IGVycjsKQEAgLTY5
Nyw5ICs2ODMsNyBAQCBpbnQgd25kX2luaXQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc3RydWN0
IHN1cGVyX2Jsb2NrICpzYiwgc2l6ZV90IG5iaXRzKQogfQoKIC8qCi0gKiB3bmRfbWFwCi0gKgot
ICogY2FsbCBzYl9icmVhZCBmb3IgcmVxdWVzdGVkIHdpbmRvdworICogd25kX21hcCAtIENhbGwg
c2JfYnJlYWQgZm9yIHJlcXVlc3RlZCB3aW5kb3cuCiAgKi8KIHN0YXRpYyBzdHJ1Y3QgYnVmZmVy
X2hlYWQgKnduZF9tYXAoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGl3KQogewpAQCAt
NzI4LDkgKzcxMiw3IEBAIHN0YXRpYyBzdHJ1Y3QgYnVmZmVyX2hlYWQgKnduZF9tYXAoc3RydWN0
IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGl3KQogfQoKIC8qCi0gKiB3bmRfc2V0X2ZyZWUKLSAq
Ci0gKiBNYXJrcyB0aGUgYml0cyByYW5nZSBmcm9tIGJpdCB0byBiaXQgKyBiaXRzIGFzIGZyZWUK
KyAqIHduZF9zZXRfZnJlZSAtIE1hcmsgdGhlIGJpdHMgcmFuZ2UgZnJvbSBiaXQgdG8gYml0ICsg
Yml0cyBhcyBmcmVlLgogICovCiBpbnQgd25kX3NldF9mcmVlKHN0cnVjdCB3bmRfYml0bWFwICp3
bmQsIHNpemVfdCBiaXQsIHNpemVfdCBiaXRzKQogewpAQCAtNzgzLDkgKzc2NSw3IEBAIGludCB3
bmRfc2V0X2ZyZWUoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90IGJp
dHMpCiB9CgogLyoKLSAqIHduZF9zZXRfdXNlZAotICoKLSAqIE1hcmtzIHRoZSBiaXRzIHJhbmdl
IGZyb20gYml0IHRvIGJpdCArIGJpdHMgYXMgdXNlZAorICogd25kX3NldF91c2VkIC0gTWFyayB0
aGUgYml0cyByYW5nZSBmcm9tIGJpdCB0byBiaXQgKyBiaXRzIGFzIHVzZWQuCiAgKi8KIGludCB3
bmRfc2V0X3VzZWQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90IGJp
dHMpCiB7CkBAIC04MzksNyArODE5LDcgQEAgaW50IHduZF9zZXRfdXNlZChzdHJ1Y3Qgd25kX2Jp
dG1hcCAqd25kLCBzaXplX3QgYml0LCBzaXplX3QgYml0cykKIC8qCiAgKiB3bmRfaXNfZnJlZV9o
bHAKICAqCi0gKiBSZXR1cm5zIHRydWUgaWYgYWxsIGNsdXN0ZXJzIFtiaXQsIGJpdCtiaXRzKSBh
cmUgZnJlZSAoYml0bWFwIG9ubHkpCisgKiBSZXR1cm46IFRydWUgaWYgYWxsIGNsdXN0ZXJzIFti
aXQsIGJpdCtiaXRzKSBhcmUgZnJlZSAoYml0bWFwIG9ubHkpLgogICovCiBzdGF0aWMgYm9vbCB3
bmRfaXNfZnJlZV9obHAoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90
IGJpdHMpCiB7CkBAIC04ODIsNyArODYyLDcgQEAgc3RhdGljIGJvb2wgd25kX2lzX2ZyZWVfaGxw
KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVfdCBiaXRzKQogLyoKICAq
IHduZF9pc19mcmVlCiAgKgotICogUmV0dXJucyB0cnVlIGlmIGFsbCBjbHVzdGVycyBbYml0LCBi
aXQrYml0cykgYXJlIGZyZWUKKyAqIFJldHVybjogVHJ1ZSBpZiBhbGwgY2x1c3RlcnMgW2JpdCwg
Yml0K2JpdHMpIGFyZSBmcmVlLgogICovCiBib29sIHduZF9pc19mcmVlKHN0cnVjdCB3bmRfYml0
bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVfdCBiaXRzKQogewpAQCAtOTE0LDcgKzg5NCw3IEBA
IGJvb2wgd25kX2lzX2ZyZWUoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6
ZV90IGJpdHMpCiAvKgogICogd25kX2lzX3VzZWQKICAqCi0gKiBSZXR1cm5zIHRydWUgaWYgYWxs
IGNsdXN0ZXJzIFtiaXQsIGJpdCtiaXRzKSBhcmUgdXNlZAorICogUmV0dXJuOiBUcnVlIGlmIGFs
bCBjbHVzdGVycyBbYml0LCBiaXQrYml0cykgYXJlIHVzZWQuCiAgKi8KIGJvb2wgd25kX2lzX3Vz
ZWQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJpdCwgc2l6ZV90IGJpdHMpCiB7CkBA
IC05NzMsMTEgKzk1MywxMSBAQCBib29sIHduZF9pc191c2VkKHN0cnVjdCB3bmRfYml0bWFwICp3
bmQsIHNpemVfdCBiaXQsIHNpemVfdCBiaXRzKQogfQoKIC8qCi0gKiB3bmRfZmluZAotICogLSBm
bGFncyAtIEJJVE1BUF9GSU5EX1hYWCBmbGFncworICogd25kX2ZpbmQgLSBMb29rIGZvciBmcmVl
IHNwYWNlLgogICoKLSAqIGxvb2tzIGZvciBmcmVlIHNwYWNlCi0gKiBSZXR1cm5zIDAgaWYgbm90
IGZvdW5kCisgKiAtIGZsYWdzIC0gQklUTUFQX0ZJTkRfWFhYIGZsYWdzCisgKgorICogUmV0dXJu
OiAwIGlmIG5vdCBmb3VuZC4KICAqLwogc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3bmRfYml0bWFw
ICp3bmQsIHNpemVfdCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiAJCXNpemVfdCBmbGFncywgc2l6
ZV90ICphbGxvY2F0ZWQpCkBAIC05OTQsNyArOTc0LDcgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVj
dCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiAJYm9vbCBm
Yml0c192YWxpZDsKIAlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoOwoKLQkvKiBmYXN0IGNoZWNraW5n
IGZvciBhdmFpbGFibGUgZnJlZSBzcGFjZSAqLworCS8qIEZhc3QgY2hlY2tpbmcgZm9yIGF2YWls
YWJsZSBmcmVlIHNwYWNlLiAqLwogCWlmIChmbGFncyAmIEJJVE1BUF9GSU5EX0ZVTEwpIHsKIAkJ
c2l6ZV90IHplcm9lcyA9IHduZF96ZXJvZXMod25kKTsKCkBAIC0xMDIwLDcgKzEwMDAsNyBAQCBz
aXplX3Qgd25kX2ZpbmQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IHRvX2FsbG9jLCBz
aXplX3QgaGludCwKCiAJaWYgKFJCX0VNUFRZX1JPT1QoJnduZC0+c3RhcnRfdHJlZSkpIHsKIAkJ
aWYgKHduZC0+dXB0b2RhdGVkID09IDEpIHsKLQkJCS8qIGV4dGVudHMgdHJlZSBpcyB1cGRhdGVk
IC0+IG5vIGZyZWUgc3BhY2UgKi8KKwkJCS8qIEV4dGVudHMgdHJlZSBpcyB1cGRhdGVkIC0+IE5v
IGZyZWUgc3BhY2UuICovCiAJCQlnb3RvIG5vX3NwYWNlOwogCQl9CiAJCWdvdG8gc2Nhbl9iaXRt
YXA7CkBAIC0xMDMwLDcgKzEwMTAsNyBAQCBzaXplX3Qgd25kX2ZpbmQoc3RydWN0IHduZF9iaXRt
YXAgKnduZCwgc2l6ZV90IHRvX2FsbG9jLCBzaXplX3QgaGludCwKIAlpZiAoIWhpbnQpCiAJCWdv
dG8gYWxsb2NhdGVfYmlnZ2VzdDsKCi0JLyogVXNlIGhpbnQ6IGVudW1lcmF0ZSBleHRlbnRzIGJ5
IHN0YXJ0ID49IGhpbnQgKi8KKwkvKiBVc2UgaGludDogRW51bWVyYXRlIGV4dGVudHMgYnkgc3Rh
cnQgPj0gaGludC4gKi8KIAlwciA9IE5VTEw7CiAJY3IgPSB3bmQtPnN0YXJ0X3RyZWUucmJfbm9k
ZTsKCkBAIC0xMDU5LDcgKzEwMzksNyBAQCBzaXplX3Qgd25kX2ZpbmQoc3RydWN0IHduZF9iaXRt
YXAgKnduZCwgc2l6ZV90IHRvX2FsbG9jLCBzaXplX3QgaGludCwKIAkJZ290byBhbGxvY2F0ZV9i
aWdnZXN0OwoKIAlpZiAoZS0+c3RhcnQua2V5ICsgZS0+Y291bnQua2V5ID4gaGludCkgewotCQkv
KiBXZSBoYXZlIGZvdW5kIGV4dGVuc2lvbiB3aXRoICdoaW50JyBpbnNpZGUgKi8KKwkJLyogV2Ug
aGF2ZSBmb3VuZCBleHRlbnNpb24gd2l0aCAnaGludCcgaW5zaWRlLiAqLwogCQlzaXplX3QgbGVu
ID0gZS0+c3RhcnQua2V5ICsgZS0+Y291bnQua2V5IC0gaGludDsKCiAJCWlmIChsZW4gPj0gdG9f
YWxsb2MgJiYgaGludCArIHRvX2FsbG9jIDw9IG1heF9hbGxvYykgewpAQCAtMTA4MCw3ICsxMDYw
LDcgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCB0b19h
bGxvYywgc2l6ZV90IGhpbnQsCiAJfQoKIGFsbG9jYXRlX2JpZ2dlc3Q6Ci0JLyogQWxsb2NhdGUg
ZnJvbSBiaWdnZXN0IGZyZWUgZXh0ZW50ICovCisJLyogQWxsb2NhdGUgZnJvbSBiaWdnZXN0IGZy
ZWUgZXh0ZW50LiAqLwogCWUgPSByYl9lbnRyeShyYl9maXJzdCgmd25kLT5jb3VudF90cmVlKSwg
c3RydWN0IGVfbm9kZSwgY291bnQubm9kZSk7CiAJaWYgKGUtPmNvdW50LmtleSAhPSB3bmQtPmV4
dGVudF9tYXgpCiAJCXduZC0+ZXh0ZW50X21heCA9IGUtPmNvdW50LmtleTsKQEAgLTEwOTAsMTQg
KzEwNzAsMTQgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVf
dCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiAJCQk7CiAJCX0gZWxzZSBpZiAoZmxhZ3MgJiBCSVRN
QVBfRklORF9GVUxMKSB7CiAJCQlpZiAoZS0+Y291bnQua2V5IDwgdG9fYWxsb2MwKSB7Ci0JCQkJ
LyogQmlnZ2VzdCBmcmVlIGJsb2NrIGlzIGxlc3MgdGhlbiByZXF1ZXN0ZWQgKi8KKwkJCQkvKiBC
aWdnZXN0IGZyZWUgYmxvY2sgaXMgbGVzcyB0aGVuIHJlcXVlc3RlZC4gKi8KIAkJCQlnb3RvIG5v
X3NwYWNlOwogCQkJfQogCQkJdG9fYWxsb2MgPSBlLT5jb3VudC5rZXk7CiAJCX0gZWxzZSBpZiAo
LTEgIT0gd25kLT51cHRvZGF0ZWQpIHsKIAkJCXRvX2FsbG9jID0gZS0+Y291bnQua2V5OwogCQl9
IGVsc2UgewotCQkJLyogQ2hlY2sgaWYgd2UgY2FuIHVzZSBtb3JlIGJpdHMgKi8KKwkJCS8qIENo
ZWNrIGlmIHdlIGNhbiB1c2UgbW9yZSBiaXRzLiAqLwogCQkJc2l6ZV90IG9wLCBtYXhfY2hlY2s7
CiAJCQlzdHJ1Y3QgcmJfcm9vdCBzdGFydF90cmVlOwoKQEAgLTExMTgsNyArMTA5OCw3IEBAIHNp
emVfdCB3bmRfZmluZChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgdG9fYWxsb2MsIHNp
emVfdCBoaW50LAogCQkJdG9fYWxsb2MgPSBvcCAtIGUtPnN0YXJ0LmtleTsKIAkJfQoKLQkJLyog
UHJlcGFyZSB0byByZXR1cm4gKi8KKwkJLyogUHJlcGFyZSB0byByZXR1cm4uICovCiAJCWZuZCA9
IGUtPnN0YXJ0LmtleTsKIAkJaWYgKGUtPnN0YXJ0LmtleSArIHRvX2FsbG9jID4gbWF4X2FsbG9j
KQogCQkJdG9fYWxsb2MgPSBtYXhfYWxsb2MgLSBlLT5zdGFydC5rZXk7CkBAIC0xMTI2LDcgKzEx
MDYsNyBAQCBzaXplX3Qgd25kX2ZpbmQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IHRv
X2FsbG9jLCBzaXplX3QgaGludCwKIAl9CgogCWlmICh3bmQtPnVwdG9kYXRlZCA9PSAxKSB7Ci0J
CS8qIGV4dGVudHMgdHJlZSBpcyB1cGRhdGVkIC0+IG5vIGZyZWUgc3BhY2UgKi8KKwkJLyogRXh0
ZW50cyB0cmVlIGlzIHVwZGF0ZWQgLT4gbm8gZnJlZSBzcGFjZS4gKi8KIAkJZ290byBub19zcGFj
ZTsKIAl9CgpAQCAtMTE0MCw3ICsxMTIwLDcgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3bmRf
Yml0bWFwICp3bmQsIHNpemVfdCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiAJLyogQXQgbW9zdCB0
d28gcmFuZ2VzIFtoaW50LCBtYXhfYWxsb2MpICsgWzAsIGhpbnQpICovCiBBZ2FpbjoKCi0JLyog
VE9ETzogb3B0aW1pemUgcmVxdWVzdCBmb3IgY2FzZSBuYml0cyA+IHdiaXRzICovCisJLyogVE9E
TzogT3B0aW1pemUgcmVxdWVzdCBmb3IgY2FzZSBuYml0cyA+IHdiaXRzLiAqLwogCWl3ID0gaGlu
dCA+PiBsb2cyX2JpdHM7CiAJd2JpdHMgPSBzYi0+c19ibG9ja3NpemUgKiA4OwogCXdwb3MgPSBo
aW50ICYgKHdiaXRzIC0gMSk7CkBAIC0xMTU1LDcgKzExMzUsNyBAQCBzaXplX3Qgd25kX2ZpbmQo
c3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IHRvX2FsbG9jLCBzaXplX3QgaGludCwKIAkJ
bnduZCA9IGxpa2VseSh0ID4gbWF4X2FsbG9jKSA/ICh0ID4+IGxvZzJfYml0cykgOiB3bmQtPm53
bmQ7CiAJfQoKLQkvKiBFbnVtZXJhdGUgYWxsIHdpbmRvd3MgKi8KKwkvKiBFbnVtZXJhdGUgYWxs
IHdpbmRvd3MuICovCiAJZm9yICg7IGl3IDwgbnduZDsgaXcrKykgewogCQl3Yml0ID0gaXcgPDwg
bG9nMl9iaXRzOwoKQEAgLTExNjUsNyArMTE0NSw3IEBAIHNpemVfdCB3bmRfZmluZChzdHJ1Y3Qg
d25kX2JpdG1hcCAqd25kLCBzaXplX3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LAogCQkJCWJfbGVu
ID0gcHJldl90YWlsOwogCQkJfQoKLQkJCS8qIFNraXAgZnVsbCB1c2VkIHdpbmRvdyAqLworCQkJ
LyogU2tpcCBmdWxsIHVzZWQgd2luZG93LiAqLwogCQkJcHJldl90YWlsID0gMDsKIAkJCXdwb3Mg
PSAwOwogCQkJY29udGludWU7CkBAIC0xMTg5LDI1ICsxMTY5LDI1IEBAIHNpemVfdCB3bmRfZmlu
ZChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LAog
CQkJemJpdCA9IG1heCh3bmQtPnpvbmVfYml0LCB3Yml0KTsKIAkJCXplbmQgPSBtaW4od25kLT56
b25lX2VuZCwgZWJpdCk7CgotCQkJLyogSGVyZSB3ZSBoYXZlIGEgd2luZG93IFt3Yml0LCBlYml0
KSBhbmQgem9uZSBbemJpdCwgemVuZCkgKi8KKwkJCS8qIEhlcmUgd2UgaGF2ZSBhIHdpbmRvdyBb
d2JpdCwgZWJpdCkgYW5kIHpvbmUgW3piaXQsIHplbmQpLiAqLwogCQkJaWYgKHplbmQgPD0gemJp
dCkgewotCQkJCS8qIFpvbmUgZG9lcyBub3Qgb3ZlcmxhcCB3aW5kb3cgKi8KKwkJCQkvKiBab25l
IGRvZXMgbm90IG92ZXJsYXAgd2luZG93LiAqLwogCQkJfSBlbHNlIHsKIAkJCQl3emJpdCA9IHpi
aXQgLSB3Yml0OwogCQkJCXd6ZW5kID0gemVuZCAtIHdiaXQ7CgotCQkJCS8qIFpvbmUgb3Zlcmxh
cHMgd2luZG93ICovCisJCQkJLyogWm9uZSBvdmVybGFwcyB3aW5kb3cuICovCiAJCQkJaWYgKHdu
ZC0+ZnJlZV9iaXRzW2l3XSA9PSB3emVuZCAtIHd6Yml0KSB7CiAJCQkJCXByZXZfdGFpbCA9IDA7
CiAJCQkJCXdwb3MgPSAwOwogCQkJCQljb250aW51ZTsKIAkJCQl9CgotCQkJCS8qIFNjYW4gdHdv
IHJhbmdlcyB3aW5kb3c6IFt3Yml0LCB6Yml0KSBhbmQgW3plbmQsIGViaXQpICovCisJCQkJLyog
U2NhbiB0d28gcmFuZ2VzIHdpbmRvdzogW3diaXQsIHpiaXQpIGFuZCBbemVuZCwgZWJpdCkuICov
CiAJCQkJYmggPSB3bmRfbWFwKHduZCwgaXcpOwoKIAkJCQlpZiAoSVNfRVJSKGJoKSkgewotCQkJ
CQkvKiBUT0RPOiBlcnJvciAqLworCQkJCQkvKiBUT0RPOiBFcnJvciAqLwogCQkJCQlwcmV2X3Rh
aWwgPSAwOwogCQkJCQl3cG9zID0gMDsKIAkJCQkJY29udGludWU7CkBAIC0xMjE1LDkgKzExOTUs
OSBAQCBzaXplX3Qgd25kX2ZpbmQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IHRvX2Fs
bG9jLCBzaXplX3QgaGludCwKCiAJCQkJYnVmID0gKHVsb25nICopYmgtPmJfZGF0YTsKCi0JCQkJ
LyogU2NhbiByYW5nZSBbd2JpdCwgemJpdCkgKi8KKwkJCQkvKiBTY2FuIHJhbmdlIFt3Yml0LCB6
Yml0KS4gKi8KIAkJCQlpZiAod3BvcyA8IHd6Yml0KSB7Ci0JCQkJCS8qIFNjYW4gcmFuZ2UgW3dw
b3MsIHpiaXQpICovCisJCQkJCS8qIFNjYW4gcmFuZ2UgW3dwb3MsIHpiaXQpLiAqLwogCQkJCQlm
bmQgPSB3bmRfc2NhbihidWYsIHdiaXQsIHdwb3MsIHd6Yml0LAogCQkJCQkJICAgICAgIHRvX2Fs
bG9jLCAmcHJldl90YWlsLAogCQkJCQkJICAgICAgICZiX3BvcywgJmJfbGVuKTsKQEAgLTEyMjks
NyArMTIwOSw3IEBAIHNpemVfdCB3bmRfZmluZChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXpl
X3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LAoKIAkJCQlwcmV2X3RhaWwgPSAwOwoKLQkJCQkvKiBT
Y2FuIHJhbmdlIFt6ZW5kLCBlYml0KSAqLworCQkJCS8qIFNjYW4gcmFuZ2UgW3plbmQsIGViaXQp
LiAqLwogCQkJCWlmICh3emVuZCA8IHdiaXRzKSB7CiAJCQkJCWZuZCA9IHduZF9zY2FuKGJ1Ziwg
d2JpdCwKIAkJCQkJCSAgICAgICBtYXgod3plbmQsIHdwb3MpLCB3Yml0cywKQEAgLTEyNDcsMjQg
KzEyMjcsMjQgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVf
dCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiAJCQl9CiAJCX0KCi0JCS8qIEN1cnJlbnQgd2luZG93
IGRvZXMgbm90IG92ZXJsYXAgem9uZSAqLworCQkvKiBDdXJyZW50IHdpbmRvdyBkb2VzIG5vdCBv
dmVybGFwIHpvbmUuICovCiAJCWlmICghd3BvcyAmJiBmYml0c192YWxpZCAmJiB3bmQtPmZyZWVf
Yml0c1tpd10gPT0gd2JpdHMpIHsKLQkJCS8qIHdpbmRvdyBpcyBlbXB0eSAqLworCQkJLyogV2lu
ZG93IGlzIGVtcHR5LiAqLwogCQkJaWYgKHByZXZfdGFpbCArIHdiaXRzID49IHRvX2FsbG9jKSB7
CiAJCQkJZm5kID0gd2JpdCArIHdwb3MgLSBwcmV2X3RhaWw7CiAJCQkJZ290byBmb3VuZDsKIAkJ
CX0KCi0JCQkvKiBJbmNyZWFzZSAncHJldl90YWlsJyBhbmQgcHJvY2VzcyBuZXh0IHdpbmRvdyAq
LworCQkJLyogSW5jcmVhc2UgJ3ByZXZfdGFpbCcgYW5kIHByb2Nlc3MgbmV4dCB3aW5kb3cuICov
CiAJCQlwcmV2X3RhaWwgKz0gd2JpdHM7CiAJCQl3cG9zID0gMDsKIAkJCWNvbnRpbnVlOwogCQl9
CgotCQkvKiByZWFkIHdpbmRvdyAqLworCQkvKiBSZWFkIHdpbmRvdyAqLwogCQliaCA9IHduZF9t
YXAod25kLCBpdyk7CiAJCWlmIChJU19FUlIoYmgpKSB7Ci0JCQkvLyBUT0RPOiBlcnJvcgorCQkJ
Ly8gVE9ETzogRXJyb3IuCiAJCQlwcmV2X3RhaWwgPSAwOwogCQkJd3BvcyA9IDA7CiAJCQljb250
aW51ZTsKQEAgLTEyNzIsNyArMTI1Miw3IEBAIHNpemVfdCB3bmRfZmluZChzdHJ1Y3Qgd25kX2Jp
dG1hcCAqd25kLCBzaXplX3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LAoKIAkJYnVmID0gKHVsb25n
ICopYmgtPmJfZGF0YTsKCi0JCS8qIFNjYW4gcmFuZ2UgW3dwb3MsIGVCaXRzKSAqLworCQkvKiBT
Y2FuIHJhbmdlIFt3cG9zLCBlQml0cykuICovCiAJCWZuZCA9IHduZF9zY2FuKGJ1Ziwgd2JpdCwg
d3Bvcywgd2JpdHMsIHRvX2FsbG9jLCAmcHJldl90YWlsLAogCQkJICAgICAgICZiX3BvcywgJmJf
bGVuKTsKIAkJcHV0X2JoKGJoKTsKQEAgLTEyODEsMTUgKzEyNjEsMTUgQEAgc2l6ZV90IHduZF9m
aW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCB0b19hbGxvYywgc2l6ZV90IGhpbnQs
CiAJfQoKIAlpZiAoYl9sZW4gPCBwcmV2X3RhaWwpIHsKLQkJLyogVGhlIGxhc3QgZnJhZ21lbnQg
Ki8KKwkJLyogVGhlIGxhc3QgZnJhZ21lbnQuICovCiAJCWJfbGVuID0gcHJldl90YWlsOwogCQli
X3BvcyA9IG1heF9hbGxvYyAtIHByZXZfdGFpbDsKIAl9CgogCWlmIChoaW50KSB7CiAJCS8qCi0J
CSAqIFdlIGhhdmUgc2Nhbm5lZCByYW5nZSBbaGludCBtYXhfYWxsb2MpCi0JCSAqIFByZXBhcmUg
dG8gc2NhbiByYW5nZSBbMCBoaW50ICsgdG9fYWxsb2MpCisJCSAqIFdlIGhhdmUgc2Nhbm5lZCBy
YW5nZSBbaGludCBtYXhfYWxsb2MpLgorCQkgKiBQcmVwYXJlIHRvIHNjYW4gcmFuZ2UgWzAgaGlu
dCArIHRvX2FsbG9jKS4KIAkJICovCiAJCXNpemVfdCBuZXh0bWF4ID0gaGludCArIHRvX2FsbG9j
OwoKQEAgLTEzMTIsNyArMTI5Miw3IEBAIHNpemVfdCB3bmRfZmluZChzdHJ1Y3Qgd25kX2JpdG1h
cCAqd25kLCBzaXplX3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LAoKIGZvdW5kOgogCWlmIChmbGFn
cyAmIEJJVE1BUF9GSU5EX01BUktfQVNfVVNFRCkgewotCQkvKiBUT0RPIG9wdGltaXplIHJlbW92
ZSBleHRlbnQgKHBhc3MgJ2UnPykgKi8KKwkJLyogVE9ETzogT3B0aW1pemUgcmVtb3ZlIGV4dGVu
dCAocGFzcyAnZSc/KS4gKi8KIAkJaWYgKHduZF9zZXRfdXNlZCh3bmQsIGZuZCwgdG9fYWxsb2Mp
KQogCQkJZ290byBub19zcGFjZTsKIAl9IGVsc2UgaWYgKHduZC0+ZXh0ZW50X21heCAhPSBNSU5V
U19PTkVfVCAmJgpAQCAtMTMyOCw5ICsxMzA4LDcgQEAgc2l6ZV90IHduZF9maW5kKHN0cnVjdCB3
bmRfYml0bWFwICp3bmQsIHNpemVfdCB0b19hbGxvYywgc2l6ZV90IGhpbnQsCiB9CgogLyoKLSAq
IHduZF9leHRlbmQKLSAqCi0gKiBFeHRlbmQgYml0bWFwICgkTUZUIGJpdG1hcCkKKyAqIHduZF9l
eHRlbmQgLSBFeHRlbmQgYml0bWFwICgkTUZUIGJpdG1hcCkuCiAgKi8KIGludCB3bmRfZXh0ZW5k
KHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBuZXdfYml0cykKIHsKQEAgLTEzNDcsNyAr
MTMyNSw3IEBAIGludCB3bmRfZXh0ZW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBu
ZXdfYml0cykKIAlpZiAobmV3X2JpdHMgPD0gb2xkX2JpdHMpCiAJCXJldHVybiAtRUlOVkFMOwoK
LQkvKiBhbGlnbiB0byA4IGJ5dGUgYm91bmRhcnkgKi8KKwkvKiBBbGlnbiB0byA4IGJ5dGUgYm91
bmRhcnkuICovCiAJbmV3X3duZCA9IGJ5dGVzX3RvX2Jsb2NrKHNiLCBiaXRtYXBfc2l6ZShuZXdf
Yml0cykpOwogCW5ld19sYXN0ID0gbmV3X2JpdHMgJiAod2JpdHMgLSAxKTsKIAlpZiAoIW5ld19s
YXN0KQpAQCAtMTM2Nyw3ICsxMzQ1LDcgQEAgaW50IHduZF9leHRlbmQoc3RydWN0IHduZF9iaXRt
YXAgKnduZCwgc2l6ZV90IG5ld19iaXRzKQogCQl3bmQtPmZyZWVfYml0cyA9IG5ld19mcmVlOwog
CX0KCi0JLyogWmVybyBiaXRzIFtvbGRfYml0cyxuZXdfYml0cykgKi8KKwkvKiBaZXJvIGJpdHMg
W29sZF9iaXRzLG5ld19iaXRzKS4gKi8KIAliaXRzID0gbmV3X2JpdHMgLSBvbGRfYml0czsKIAli
MCA9IG9sZF9iaXRzICYgKHdiaXRzIC0gMSk7CgpAQCAtMTQwMyw3ICsxMzgxLDcgQEAgaW50IHdu
ZF9leHRlbmQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IG5ld19iaXRzKQogCQlzZXRf
YnVmZmVyX3VwdG9kYXRlKGJoKTsKIAkJbWFya19idWZmZXJfZGlydHkoYmgpOwogCQl1bmxvY2tf
YnVmZmVyKGJoKTsKLQkJLyplcnIgPSBzeW5jX2RpcnR5X2J1ZmZlcihiaCk7Ki8KKwkJLyogZXJy
ID0gc3luY19kaXJ0eV9idWZmZXIoYmgpOyAqLwoKIAkJYjAgPSAwOwogCQliaXRzIC09IG9wOwpA
QCAtMTQxOCw5ICsxMzk2LDYgQEAgaW50IHduZF9leHRlbmQoc3RydWN0IHduZF9iaXRtYXAgKndu
ZCwgc2l6ZV90IG5ld19iaXRzKQogCXJldHVybiAwOwogfQoKLS8qCi0gKiB3bmRfem9uZV9zZXQK
LSAqLwogdm9pZCB3bmRfem9uZV9zZXQoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGxj
biwgc2l6ZV90IGxlbikKIHsKIAlzaXplX3QgemxlbjsKQEAgLTE1MDIsNyArMTQ3Nyw3IEBAIGlu
dCBudGZzX3RyaW1fZnMoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1Y3QgZnN0cmltX3Jh
bmdlICpyYW5nZSkKIAkJcHV0X2JoKGJoKTsKIAl9CgotCS8qIFByb2Nlc3MgdGhlIGxhc3QgZnJh
Z21lbnQgKi8KKwkvKiBQcm9jZXNzIHRoZSBsYXN0IGZyYWdtZW50LiAqLwogCWlmIChsZW4gPj0g
bWlubGVuKSB7CiAJCWVyciA9IG50ZnNfZGlzY2FyZChzYmksIGxjbiwgbGVuKTsKIAkJaWYgKGVy
cikKZGlmZiAtLWdpdCBhL2ZzL250ZnMzL2RlYnVnLmggYi9mcy9udGZzMy9kZWJ1Zy5oCmluZGV4
IGRmYWE0Yzc5ZGM2ZC4uOTNlZDgwZjkwMmIzIDEwMDY0NAotLS0gYS9mcy9udGZzMy9kZWJ1Zy5o
CisrKyBiL2ZzL250ZnMzL2RlYnVnLmgKQEAgLTMsNyArMyw4IEBACiAgKgogICogQ29weXJpZ2h0
IChDKSAyMDE5LTIwMjEgUGFyYWdvbiBTb2Z0d2FyZSBHbWJILCBBbGwgcmlnaHRzIHJlc2VydmVk
LgogICoKLSAqIHVzZWZ1bCBmdW5jdGlvbnMgZm9yIGRlYnVnaW5nCisgKiAgVXNlZnVsIGZ1bmN0
aW9ucyBmb3IgZGVidWdpbmcuCisgKgogICovCgogLy8gY2xhbmctZm9ybWF0IG9mZgpAQCAtNDEs
NyArNDIsNyBAQCB2b2lkIG50ZnNfaW5vZGVfcHJpbnRrKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNv
bnN0IGNoYXIgKmZtdCwgLi4uKQogI2VuZGlmCgogLyoKLSAqIExvZ2dpbmcgbWFjcm9zICggdGhh
bmtzIEpvZSBQZXJjaGVzIDxqb2VAcGVyY2hlcy5jb20+IGZvciBpbXBsZW1lbnRhdGlvbiApCisg
KiBMb2dnaW5nIG1hY3Jvcy4gVGhhbmtzIEpvZSBQZXJjaGVzIDxqb2VAcGVyY2hlcy5jb20+IGZv
ciBpbXBsZW1lbnRhdGlvbi4KICAqLwoKICNkZWZpbmUgbnRmc19lcnIoc2IsIGZtdCwgLi4uKSAg
bnRmc19wcmludGsoc2IsIEtFUk5fRVJSIGZtdCwgIyNfX1ZBX0FSR1NfXykKZGlmZiAtLWdpdCBh
L2ZzL250ZnMzL2Rpci5jIGIvZnMvbnRmczMvZGlyLmMKaW5kZXggOWVjNjAxMmM0MDViLi5hZGRl
MmJiMGRlYjQgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL2Rpci5jCisrKyBiL2ZzL250ZnMzL2Rpci5j
CkBAIC0zLDkgKzMsMTAgQEAKICAqCiAgKiBDb3B5cmlnaHQgKEMpIDIwMTktMjAyMSBQYXJhZ29u
IFNvZnR3YXJlIEdtYkgsIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgKgotICogIGRpcmVjdG9yeSBo
YW5kbGluZyBmdW5jdGlvbnMgZm9yIG50ZnMtYmFzZWQgZmlsZXN5c3RlbXMKKyAqICBEaXJlY3Rv
cnkgaGFuZGxpbmcgZnVuY3Rpb25zIGZvciBOVEZTLWJhc2VkIGZpbGVzeXN0ZW1zLgogICoKICAq
LworCiAjaW5jbHVkZSA8bGludXgvYmxrZGV2Lmg+CiAjaW5jbHVkZSA8bGludXgvYnVmZmVyX2hl
YWQuaD4KICNpbmNsdWRlIDxsaW51eC9mcy5oPgpAQCAtMTYsOSArMTcsNyBAQAogI2luY2x1ZGUg
Im50ZnMuaCIKICNpbmNsdWRlICJudGZzX2ZzLmgiCgotLyoKLSAqIENvbnZlcnQgbGl0dGxlIGVu
ZGlhbiB1dGYxNiB0byBubHMgc3RyaW5nCi0gKi8KKy8qIENvbnZlcnQgbGl0dGxlIGVuZGlhbiBV
VEYtMTYgdG8gTkxTIHN0cmluZy4gKi8KIGludCBudGZzX3V0ZjE2X3RvX25scyhzdHJ1Y3QgbnRm
c19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBsZV9zdHIgKnVuaSwKIAkJICAgICAgdTggKmJ1
ZiwgaW50IGJ1Zl9sZW4pCiB7CkBAIC0zMCw3ICsyOSw3IEBAIGludCBudGZzX3V0ZjE2X3RvX25s
cyhzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBsZV9zdHIgKnVuaSwKIAlz
dGF0aWNfYXNzZXJ0KHNpemVvZih3Y2hhcl90KSA9PSBzaXplb2YoX19sZTE2KSk7CgogCWlmICgh
bmxzKSB7Ci0JCS8qIHV0ZjE2IC0+IHV0ZjggKi8KKwkJLyogVVRGLTE2IC0+IFVURi04ICovCiAJ
CXJldCA9IHV0ZjE2c190b191dGY4cygod2NoYXJfdCAqKXVuaS0+bmFtZSwgdW5pLT5sZW4sCiAJ
CQkJICAgICAgVVRGMTZfTElUVExFX0VORElBTiwgYnVmLCBidWZfbGVuKTsKIAkJYnVmW3JldF0g
PSAnXDAnOwpAQCAtODksOCArODgsOSBAQCBpbnQgbnRmc191dGYxNl90b19ubHMoc3RydWN0IG50
ZnNfc2JfaW5mbyAqc2JpLCBjb25zdCBzdHJ1Y3QgbGVfc3RyICp1bmksCiAvLyBjbGFuZy1mb3Jt
YXQgb24KCiAvKgotICogbW9kaWZpZWQgdmVyc2lvbiBvZiBwdXRfdXRmMTYgZnJvbSBmcy9ubHMv
bmxzX2Jhc2UuYwotICogaXMgc3BhcnNlIHdhcm5pbmdzIGZyZWUKKyAqIHB1dF91dGYxNiAtIE1v
ZGlmaWVkIHZlcnNpb24gb2YgcHV0X3V0ZjE2IGZyb20gZnMvbmxzL25sc19iYXNlLmMKKyAqCisg
KiBGdW5jdGlvbiBpcyBzcGFyc2Ugd2FybmluZ3MgZnJlZS4KICAqLwogc3RhdGljIGlubGluZSB2
b2lkIHB1dF91dGYxNih3Y2hhcl90ICpzLCB1bnNpZ25lZCBpbnQgYywKIAkJCSAgICAgZW51bSB1
dGYxNl9lbmRpYW4gZW5kaWFuKQpAQCAtMTEyLDggKzExMiwxMCBAQCBzdGF0aWMgaW5saW5lIHZv
aWQgcHV0X3V0ZjE2KHdjaGFyX3QgKnMsIHVuc2lnbmVkIGludCBjLAogfQoKIC8qCi0gKiBtb2Rp
ZmllZCB2ZXJzaW9uIG9mICd1dGY4c190b191dGYxNnMnIGFsbG93cyB0bwotICogZGV0ZWN0IC1F
TkFNRVRPT0xPTkcgd2l0aG91dCB3cml0aW5nIG91dCBvZiBleHBlY3RlZCBtYXhpbXVtCisgKiBf
dXRmOHNfdG9fdXRmMTZzCisgKgorICogTW9kaWZpZWQgdmVyc2lvbiBvZiAndXRmOHNfdG9fdXRm
MTZzJyBhbGxvd3MgdG8KKyAqIGRldGVjdCAtRU5BTUVUT09MT05HIHdpdGhvdXQgd3JpdGluZyBv
dXQgb2YgZXhwZWN0ZWQgbWF4aW11bS4KICAqLwogc3RhdGljIGludCBfdXRmOHNfdG9fdXRmMTZz
KGNvbnN0IHU4ICpzLCBpbnQgaW5sZW4sIGVudW0gdXRmMTZfZW5kaWFuIGVuZGlhbiwKIAkJCSAg
ICB3Y2hhcl90ICpwd2NzLCBpbnQgbWF4b3V0KQpAQCAtMTY1LDE3ICsxNjcsMTggQEAgc3RhdGlj
IGludCBfdXRmOHNfdG9fdXRmMTZzKGNvbnN0IHU4ICpzLCBpbnQgaW5sZW4sIGVudW0gdXRmMTZf
ZW5kaWFuIGVuZGlhbiwKIH0KCiAvKgotICogQ29udmVydCBpbnB1dCBzdHJpbmcgdG8gdXRmMTYK
LSAqCi0gKiBuYW1lLCBuYW1lX2xlbiAtIGlucHV0IG5hbWUKLSAqIHVuaSwgbWF4X3VsZW4gLSBk
ZXN0aW5hdGlvbiBtZW1vcnkKLSAqIGVuZGlhbiAtIGVuZGlhbiBvZiB0YXJnZXQgdXRmMTYgc3Ry
aW5nCisgKiBudGZzX25sc190b191dGYxNiAtIENvbnZlcnQgaW5wdXQgc3RyaW5nIHRvIFVURi0x
Ni4KKyAqIEBuYW1lOglJbnB1dCBuYW1lLgorICogQG5hbWVfbGVuOglJbnB1dCBuYW1lIGxlbmd0
aC4KKyAqIEB1bmk6CURlc3RpbmF0aW9uIG1lbW9yeS4KKyAqIEBtYXhfdWxlbjoJRGVzdGluYXRp
b24gbWVtb3J5LgorICogQGVuZGlhbjoJRW5kaWFuIG9mIHRhcmdldCBVVEYtMTYgc3RyaW5nLgog
ICoKICAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkOgotICogLSB0byBjcmVhdGUgbnRmcyBuYW1l
CisgKiAtIHRvIGNyZWF0ZSBOVEZTIG5hbWUKICAqIC0gdG8gY3JlYXRlIHN5bWxpbmsKICAqCi0g
KiByZXR1cm5zIHV0ZjE2IHN0cmluZyBsZW5ndGggb3IgZXJyb3IgKGlmIG5lZ2F0aXZlKQorICog
UmV0dXJuOiBVVEYtMTYgc3RyaW5nIGxlbmd0aCBvciBlcnJvciAoaWYgbmVnYXRpdmUpLgogICov
CiBpbnQgbnRmc19ubHNfdG9fdXRmMTYoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBjb25zdCB1
OCAqbmFtZSwgdTMyIG5hbWVfbGVuLAogCQkgICAgICBzdHJ1Y3QgY3B1X3N0ciAqdW5pLCB1MzIg
bWF4X3VsZW4sCkBAIC0yMzAsNyArMjMzLDkgQEAgaW50IG50ZnNfbmxzX3RvX3V0ZjE2KHN0cnVj
dCBudGZzX3NiX2luZm8gKnNiaSwgY29uc3QgdTggKm5hbWUsIHUzMiBuYW1lX2xlbiwKIAlyZXR1
cm4gcmV0OwogfQoKLS8qIGhlbHBlciBmdW5jdGlvbiAqLworLyoKKyAqIGRpcl9zZWFyY2hfdSAt
IEhlbHBlciBmdW5jdGlvbi4KKyAqLwogc3RydWN0IGlub2RlICpkaXJfc2VhcmNoX3Uoc3RydWN0
IGlub2RlICpkaXIsIGNvbnN0IHN0cnVjdCBjcHVfc3RyICp1bmksCiAJCQkgICBzdHJ1Y3QgbnRm
c19mbmQgKmZuZCkKIHsKQEAgLTI5NSw3ICszMDAsNyBAQCBzdGF0aWMgaW5saW5lIGludCBudGZz
X2ZpbGxkaXIoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
CiAJaWYgKGlubyA9PSBNRlRfUkVDX1JPT1QpCiAJCXJldHVybiAwOwoKLQkvKiBTa2lwIG1ldGEg
ZmlsZXMgKCB1bmxlc3Mgb3B0aW9uIHRvIHNob3cgbWV0YWZpbGVzIGlzIHNldCApICovCisJLyog
U2tpcCBtZXRhIGZpbGVzLiBVbmxlc3Mgb3B0aW9uIHRvIHNob3cgbWV0YWZpbGVzIGlzIHNldC4g
Ki8KIAlpZiAoIXNiaS0+b3B0aW9ucy5zaG93bWV0YSAmJiBudGZzX2lzX21ldGFfZmlsZShzYmks
IGlubykpCiAJCXJldHVybiAwOwoKQEAgLTMxNiw5ICszMjEsNyBAQCBzdGF0aWMgaW5saW5lIGlu
dCBudGZzX2ZpbGxkaXIoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1Y3QgbnRmc19pbm9k
ZSAqbmksCiB9CgogLyoKLSAqIG50ZnNfcmVhZF9oZHIKLSAqCi0gKiBoZWxwZXIgZnVuY3Rpb24g
J250ZnNfcmVhZGRpcicKKyAqIG50ZnNfcmVhZF9oZHIgLSBIZWxwZXIgZnVuY3Rpb24gZm9yIG50
ZnNfcmVhZGRpcigpLgogICovCiBzdGF0aWMgaW50IG50ZnNfcmVhZF9oZHIoc3RydWN0IG50ZnNf
c2JfaW5mbyAqc2JpLCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCQkgY29uc3Qgc3RydWN0IElO
REVYX0hEUiAqaGRyLCB1NjQgdmJvLCB1NjQgcG9zLApAQCAtMzQyLDcgKzM0NSw3IEBAIHN0YXRp
YyBpbnQgbnRmc19yZWFkX2hkcihzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIHN0cnVjdCBudGZz
X2lub2RlICpuaSwKIAkJaWYgKGRlX2lzX2xhc3QoZSkpCiAJCQlyZXR1cm4gMDsKCi0JCS8qIFNr
aXAgYWxyZWFkeSBlbnVtZXJhdGVkKi8KKwkJLyogU2tpcCBhbHJlYWR5IGVudW1lcmF0ZWQuICov
CiAJCWlmICh2Ym8gKyBvZmYgPCBwb3MpCiAJCQljb250aW51ZTsKCkBAIC0zNTksMTEgKzM2Miwx
MSBAQCBzdGF0aWMgaW50IG50ZnNfcmVhZF9oZHIoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksCiB9CgogLyoKLSAqIGZpbGVfb3BlcmF0aW9uczo6aXRlcmF0
ZV9zaGFyZWQKKyAqIG50ZnNfcmVhZGRpciAtIGZpbGVfb3BlcmF0aW9uczo6aXRlcmF0ZV9zaGFy
ZWQKICAqCiAgKiBVc2Ugbm9uIHNvcnRlZCBlbnVtZXJhdGlvbi4KICAqIFdlIGhhdmUgYW4gZXhh
bXBsZSBvZiBicm9rZW4gdm9sdW1lIHdoZXJlIHNvcnRlZCBlbnVtZXJhdGlvbgotICogY291bnRz
IGVhY2ggbmFtZSB0d2ljZQorICogY291bnRzIGVhY2ggbmFtZSB0d2ljZS4KICAqLwogc3RhdGlj
IGludCBudGZzX3JlYWRkaXIoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBkaXJfY29udGV4dCAq
Y3R4KQogewpAQCAtMzgyLDcgKzM4NSw3IEBAIHN0YXRpYyBpbnQgbnRmc19yZWFkZGlyKHN0cnVj
dCBmaWxlICpmaWxlLCBzdHJ1Y3QgZGlyX2NvbnRleHQgKmN0eCkKIAlzdHJ1Y3QgaW5keF9ub2Rl
ICpub2RlID0gTlVMTDsKIAl1OCBpbmRleF9iaXRzID0gbmktPmRpci5pbmRleF9iaXRzOwoKLQkv
KiBuYW1lIGlzIGEgYnVmZmVyIG9mIFBBVEhfTUFYIGxlbmd0aCAqLworCS8qIE5hbWUgaXMgYSBi
dWZmZXIgb2YgUEFUSF9NQVggbGVuZ3RoLiAqLwogCXN0YXRpY19hc3NlcnQoTlRGU19OQU1FX0xF
TiAqIDQgPCBQQVRIX01BWCk7CgogCWVvZCA9IGlfc2l6ZSArIHNiaS0+cmVjb3JkX3NpemU7CkBA
IC0zOTMsMTYgKzM5NiwxNiBAQCBzdGF0aWMgaW50IG50ZnNfcmVhZGRpcihzdHJ1Y3QgZmlsZSAq
ZmlsZSwgc3RydWN0IGRpcl9jb250ZXh0ICpjdHgpCiAJaWYgKCFkaXJfZW1pdF9kb3RzKGZpbGUs
IGN0eCkpCiAJCXJldHVybiAwOwoKLQkvKiBhbGxvY2F0ZSBQQVRIX01BWCBieXRlcyAqLworCS8q
IEFsbG9jYXRlIFBBVEhfTUFYIGJ5dGVzLiAqLwogCW5hbWUgPSBfX2dldG5hbWUoKTsKIAlpZiAo
IW5hbWUpCiAJCXJldHVybiAtRU5PTUVNOwoKIAlpZiAoIW5pLT5taV9sb2FkZWQgJiYgbmktPmF0
dHJfbGlzdC5zaXplKSB7CiAJCS8qCi0JCSAqIGRpcmVjdG9yeSBpbm9kZSBpcyBsb2NrZWQgZm9y
IHJlYWQKLQkJICogbG9hZCBhbGwgc3VicmVjb3JkcyB0byBhdm9pZCAnd3JpdGUnIGFjY2VzcyB0
byAnbmknIGR1cmluZwotCQkgKiBkaXJlY3RvcnkgcmVhZGluZworCQkgKiBEaXJlY3RvcnkgaW5v
ZGUgaXMgbG9ja2VkIGZvciByZWFkLgorCQkgKiBMb2FkIGFsbCBzdWJyZWNvcmRzIHRvIGF2b2lk
ICd3cml0ZScgYWNjZXNzIHRvICduaScgZHVyaW5nCisJCSAqIGRpcmVjdG9yeSByZWFkaW5nLgog
CQkgKi8KIAkJbmlfbG9jayhuaSk7CiAJCWlmICghbmktPm1pX2xvYWRlZCAmJiBuaS0+YXR0cl9s
aXN0LnNpemUpIHsKZGlmZiAtLWdpdCBhL2ZzL250ZnMzL2ZpbGUuYyBiL2ZzL250ZnMzL2ZpbGUu
YwppbmRleCBiNDM2OWM2MWE4MWIuLjdkMjliNTAwMTlmOCAxMDA2NDQKLS0tIGEvZnMvbnRmczMv
ZmlsZS5jCisrKyBiL2ZzL250ZnMzL2ZpbGUuYwpAQCAtMyw4ICszLDEwIEBACiAgKgogICogQ29w
eXJpZ2h0IChDKSAyMDE5LTIwMjEgUGFyYWdvbiBTb2Z0d2FyZSBHbWJILCBBbGwgcmlnaHRzIHJl
c2VydmVkLgogICoKLSAqICByZWd1bGFyIGZpbGUgaGFuZGxpbmcgcHJpbWl0aXZlcyBmb3IgbnRm
cy1iYXNlZCBmaWxlc3lzdGVtcworICogIFJlZ3VsYXIgZmlsZSBoYW5kbGluZyBwcmltaXRpdmVz
IGZvciBOVEZTLWJhc2VkIGZpbGVzeXN0ZW1zLgorICoKICAqLworCiAjaW5jbHVkZSA8bGludXgv
YmFja2luZy1kZXYuaD4KICNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgogI2luY2x1ZGUg
PGxpbnV4L2NvbXBhdC5oPgpAQCAtNjIsNyArNjQsNyBAQCBzdGF0aWMgbG9uZyBudGZzX2lvY3Rs
KHN0cnVjdCBmaWxlICpmaWxwLCB1MzIgY21kLCB1bnNpZ25lZCBsb25nIGFyZykKIAljYXNlIEZJ
VFJJTToKIAkJcmV0dXJuIG50ZnNfaW9jdGxfZml0cmltKHNiaSwgYXJnKTsKIAl9Ci0JcmV0dXJu
IC1FTk9UVFk7IC8qIEluYXBwcm9wcmlhdGUgaW9jdGwgZm9yIGRldmljZSAqLworCXJldHVybiAt
RU5PVFRZOyAvKiBJbmFwcHJvcHJpYXRlIGlvY3RsIGZvciBkZXZpY2UuICovCiB9CgogI2lmZGVm
IENPTkZJR19DT01QQVQKQEAgLTc0LDcgKzc2LDcgQEAgc3RhdGljIGxvbmcgbnRmc19jb21wYXRf
aW9jdGwoc3RydWN0IGZpbGUgKmZpbHAsIHUzMiBjbWQsIHVuc2lnbmVkIGxvbmcgYXJnKQogI2Vu
ZGlmCgogLyoKLSAqIGlub2RlX29wZXJhdGlvbnM6OmdldGF0dHIKKyAqIG50ZnNfZ2V0YXR0ciAt
IGlub2RlX29wZXJhdGlvbnM6OmdldGF0dHIKICAqLwogaW50IG50ZnNfZ2V0YXR0cihzdHJ1Y3Qg
dXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIGNvbnN0IHN0cnVjdCBwYXRoICpwYXRoLAogCQkg
c3RydWN0IGtzdGF0ICpzdGF0LCB1MzIgcmVxdWVzdF9tYXNrLCB1MzIgZmxhZ3MpCkBAIC0xNjks
NyArMTcxLDcgQEAgc3RhdGljIGludCBudGZzX2V4dGVuZF9pbml0aWFsaXplZF9zaXplKHN0cnVj
dCBmaWxlICpmaWxlLAoKIAkJemVyb191c2VyX3NlZ21lbnQocGFnZSwgemVyb2Zyb20sIFBBR0Vf
U0laRSk7CgotCQkvKiB0aGlzIGZ1bmN0aW9uIGluIGFueSBjYXNlIHB1dHMgcGFnZSovCisJCS8q
IFRoaXMgZnVuY3Rpb24gaW4gYW55IGNhc2UgcHV0cyBwYWdlLiAqLwogCQllcnIgPSBwYWdlY2Fj
aGVfd3JpdGVfZW5kKGZpbGUsIG1hcHBpbmcsIHBvcywgbGVuLCBsZW4sIHBhZ2UsCiAJCQkJCSAg
ZnNkYXRhKTsKIAkJaWYgKGVyciA8IDApCkBAIC0xOTYsOSArMTk4LDcgQEAgc3RhdGljIGludCBu
dGZzX2V4dGVuZF9pbml0aWFsaXplZF9zaXplKHN0cnVjdCBmaWxlICpmaWxlLAogfQoKIC8qCi0g
KiBudGZzX3NwYXJzZV9jbHVzdGVyCi0gKgotICogSGVscGVyIGZ1bmN0aW9uIHRvIHplcm8gYSBu
ZXcgYWxsb2NhdGVkIGNsdXN0ZXJzCisgKiBudGZzX3NwYXJzZV9jbHVzdGVyIC0gSGVscGVyIGZ1
bmN0aW9uIHRvIHplcm8gYSBuZXcgYWxsb2NhdGVkIGNsdXN0ZXJzLgogICovCiB2b2lkIG50ZnNf
c3BhcnNlX2NsdXN0ZXIoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBhZ2UgKnBhZ2UwLCBD
TFNUIHZjbiwKIAkJCSBDTFNUIGxlbikKQEAgLTIzNyw3ICsyMzcsNyBAQCB2b2lkIG50ZnNfc3Bh
cnNlX2NsdXN0ZXIoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBhZ2UgKnBhZ2UwLCBDTFNU
IHZjbiwKIAkJCQludGZzX2lub2RlX2VycigKIAkJCQkJaW5vZGUsCiAJCQkJCSJmYWlsZWQgdG8g
YWxsb2NhdGUgcGFnZSBidWZmZXJzLiIpOwotCQkJCS8qZXJyID0gLUVOT01FTTsqLworCQkJCS8q
IGVyciA9IC1FTk9NRU07ICovCiAJCQkJZ290byB1bmxvY2tfcGFnZTsKIAkJCX0KIAkJfQpAQCAt
Mjc5LDcgKzI3OSw3IEBAIHZvaWQgbnRmc19zcGFyc2VfY2x1c3RlcihzdHJ1Y3QgaW5vZGUgKmlu
b2RlLCBzdHJ1Y3QgcGFnZSAqcGFnZTAsIENMU1QgdmNuLAogfQoKIC8qCi0gKiBmaWxlX29wZXJh
dGlvbnM6Om1tYXAKKyAqIG50ZnNfZmlsZV9tbWFwIC0gZmlsZV9vcGVyYXRpb25zOjptbWFwCiAg
Ki8KIHN0YXRpYyBpbnQgbnRmc19maWxlX21tYXAoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCB2
bV9hcmVhX3N0cnVjdCAqdm1hKQogewpAQCAtMzEyLDcgKzMxMiw3IEBAIHN0YXRpYyBpbnQgbnRm
c19maWxlX21tYXAoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1h
KQogCQkgICBmcm9tICsgdm1hLT52bV9lbmQgLSB2bWEtPnZtX3N0YXJ0KTsKCiAJaWYgKGlzX3Nw
YXJzZWQobmkpKSB7Ci0JCS8qIGFsbG9jYXRlIGNsdXN0ZXJzIGZvciBydyBtYXAgKi8KKwkJLyog
QWxsb2NhdGUgY2x1c3RlcnMgZm9yIHJ3IG1hcC4gKi8KIAkJc3RydWN0IG50ZnNfc2JfaW5mbyAq
c2JpID0gaW5vZGUtPmlfc2ItPnNfZnNfaW5mbzsKIAkJQ0xTVCB2Y24sIGxjbiwgbGVuOwogCQlD
TFNUIGVuZCA9IGJ5dGVzX3RvX2NsdXN0ZXIoc2JpLCB0byk7CkBAIC0zNTQsNyArMzU0LDcgQEAg
c3RhdGljIGludCBudGZzX2V4dGVuZChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBsb2ZmX3QgcG9zLCBz
aXplX3QgY291bnQsCiAJaWYgKGVuZCA8PSBpbm9kZS0+aV9zaXplICYmICFleHRlbmRfaW5pdCkK
IAkJcmV0dXJuIDA7CgotCS8qbWFyayBydyBudGZzIGFzIGRpcnR5LiBpdCB3aWxsIGJlIGNsZWFy
ZWQgYXQgdW1vdW50Ki8KKwkvKiBNYXJrIHJ3IG50ZnMgYXMgZGlydHkuIEl0IHdpbGwgYmUgY2xl
YXJlZCBhdCB1bW91bnQuICovCiAJbnRmc19zZXRfc3RhdGUobmktPm1pLnNiaSwgTlRGU19ESVJU
WV9ESVJUWSk7CgogCWlmIChlbmQgPiBpbm9kZS0+aV9zaXplKSB7CkBAIC00NDgsNiArNDQ4LDgg
QEAgc3RhdGljIGludCBudGZzX3RydW5jYXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBu
ZXdfc2l6ZSkKIH0KCiAvKgorICogbnRmc19mYWxsb2NhdGUKKyAqCiAgKiBQcmVhbGxvY2F0ZSBz
cGFjZSBmb3IgYSBmaWxlLiBUaGlzIGltcGxlbWVudHMgbnRmcydzIGZhbGxvY2F0ZSBmaWxlCiAg
KiBvcGVyYXRpb24sIHdoaWNoIGdldHMgY2FsbGVkIGZyb20gc3lzX2ZhbGxvY2F0ZSBzeXN0ZW0g
Y2FsbC4gVXNlcgogICogc3BhY2UgcmVxdWVzdHMgJ2xlbicgYnl0ZXMgYXQgJ3ZibycuIElmIEZB
TExPQ19GTF9LRUVQX1NJWkUgaXMgc2V0CkBAIC00NjUsMTEgKzQ2NywxMSBAQCBzdGF0aWMgbG9u
ZyBudGZzX2ZhbGxvY2F0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgaW50IG1vZGUsIGxvZmZfdCB2Ym8s
IGxvZmZfdCBsZW4pCiAJbG9mZl90IGlfc2l6ZTsKIAlpbnQgZXJyOwoKLQkvKiBObyBzdXBwb3J0
IGZvciBkaXIgKi8KKwkvKiBObyBzdXBwb3J0IGZvciBkaXIuICovCiAJaWYgKCFTX0lTUkVHKGlu
b2RlLT5pX21vZGUpKQogCQlyZXR1cm4gLUVPUE5PVFNVUFA7CgotCS8qIFJldHVybiBlcnJvciBp
ZiBtb2RlIGlzIG5vdCBzdXBwb3J0ZWQgKi8KKwkvKiBSZXR1cm4gZXJyb3IgaWYgbW9kZSBpcyBu
b3Qgc3VwcG9ydGVkLiAqLwogCWlmIChtb2RlICYgfihGQUxMT0NfRkxfS0VFUF9TSVpFIHwgRkFM
TE9DX0ZMX1BVTkNIX0hPTEUgfAogCQkgICAgIEZBTExPQ19GTF9DT0xMQVBTRV9SQU5HRSkpCiAJ
CXJldHVybiAtRU9QTk9UU1VQUDsKQEAgLTQ4MCw3ICs0ODIsNyBAQCBzdGF0aWMgbG9uZyBudGZz
X2ZhbGxvY2F0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgaW50IG1vZGUsIGxvZmZfdCB2Ym8sIGxvZmZf
dCBsZW4pCiAJaV9zaXplID0gaW5vZGUtPmlfc2l6ZTsKCiAJaWYgKFdBUk5fT04obmktPm5pX2Zs
YWdzICYgTklfRkxBR19DT01QUkVTU0VEX01BU0spKSB7Ci0JCS8qIHNob3VsZCBuZXZlciBiZSBo
ZXJlLCBzZWUgbnRmc19maWxlX29wZW4qLworCQkvKiBTaG91bGQgbmV2ZXIgYmUgaGVyZSwgc2Vl
IG50ZnNfZmlsZV9vcGVuLiAqLwogCQllcnIgPSAtRU9QTk9UU1VQUDsKIAkJZ290byBvdXQ7CiAJ
fQpAQCAtNTMxLDcgKzUzMyw3IEBAIHN0YXRpYyBsb25nIG50ZnNfZmFsbG9jYXRlKHN0cnVjdCBm
aWxlICpmaWxlLCBpbnQgbW9kZSwgbG9mZl90IHZibywgbG9mZl90IGxlbikKCiAJCS8qCiAJCSAq
IFdyaXRlIGRhdGEgdGhhdCB3aWxsIGJlIHNoaWZ0ZWQgdG8gcHJlc2VydmUgdGhlbQotCQkgKiB3
aGVuIGRpc2NhcmRpbmcgcGFnZSBjYWNoZSBiZWxvdworCQkgKiB3aGVuIGRpc2NhcmRpbmcgcGFn
ZSBjYWNoZSBiZWxvdy4KIAkJICovCiAJCWVyciA9IGZpbGVtYXBfd3JpdGVfYW5kX3dhaXRfcmFu
Z2UoaW5vZGUtPmlfbWFwcGluZywgZW5kLAogCQkJCQkJICAgTExPTkdfTUFYKTsKQEAgLTU0NSw3
ICs1NDcsNyBAQCBzdGF0aWMgbG9uZyBudGZzX2ZhbGxvY2F0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwg
aW50IG1vZGUsIGxvZmZfdCB2Ym8sIGxvZmZfdCBsZW4pCiAJCW5pX3VubG9jayhuaSk7CiAJfSBl
bHNlIHsKIAkJLyoKLQkJICogbm9ybWFsIGZpbGU6IGFsbG9jYXRlIGNsdXN0ZXJzLCBkbyBub3Qg
Y2hhbmdlICd2YWxpZCcgc2l6ZQorCQkgKiBOb3JtYWwgZmlsZTogQWxsb2NhdGUgY2x1c3RlcnMs
IGRvIG5vdCBjaGFuZ2UgJ3ZhbGlkJyBzaXplLgogCQkgKi8KIAkJZXJyID0gbnRmc19zZXRfc2l6
ZShpbm9kZSwgbWF4KGVuZCwgaV9zaXplKSk7CiAJCWlmIChlcnIpCkBAIC01NTksMTAgKzU2MSwx
MCBAQCBzdGF0aWMgbG9uZyBudGZzX2ZhbGxvY2F0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgaW50IG1v
ZGUsIGxvZmZfdCB2Ym8sIGxvZmZfdCBsZW4pCiAJCQlib29sIG5ldzsKCiAJCQkvKgotCQkJICog
YWxsb2NhdGUgYnV0IG5vdCB6ZXJvIG5ldyBjbHVzdGVycyAoc2VlIGJlbG93IGNvbW1lbnRzKQot
CQkJICogdGhpcyBicmVha3Mgc2VjdXJpdHkgKG9uZSBjYW4gcmVhZCB1bnVzZWQgb24tZGlzayBh
cmVhcykKLQkJCSAqIHplcm9pbmcgdGhlc2UgY2x1c3RlcnMgbWF5IGJlIHRvbyBsb25nCi0JCQkg
KiBtYXkgYmUgd2Ugc2hvdWxkIGNoZWNrIGhlcmUgZm9yIHJvb3QgcmlnaHRzPworCQkJICogQWxs
b2NhdGUgYnV0IGRvIG5vdCB6ZXJvIG5ldyBjbHVzdGVycy4gKHNlZSBiZWxvdyBjb21tZW50cykK
KwkJCSAqIFRoaXMgYnJlYWtzIHNlY3VyaXR5OiBPbmUgY2FuIHJlYWQgdW51c2VkIG9uLWRpc2sg
YXJlYXMuCisJCQkgKiBaZXJvaW5nIHRoZXNlIGNsdXN0ZXJzIG1heSBiZSB0b28gbG9uZy4KKwkJ
CSAqIE1heWJlIHdlIHNob3VsZCBjaGVjayBoZXJlIGZvciByb290IHJpZ2h0cz8KIAkJCSAqLwog
CQkJZm9yICg7IHZjbiA8IGNlbmQ7IHZjbiArPSBjbGVuKSB7CiAJCQkJZXJyID0gYXR0cl9kYXRh
X2dldF9ibG9jayhuaSwgdmNuLCBjZW5kIC0gdmNuLApAQCAtNTczLDE1ICs1NzUsMTUgQEAgc3Rh
dGljIGxvbmcgbnRmc19mYWxsb2NhdGUoc3RydWN0IGZpbGUgKmZpbGUsIGludCBtb2RlLCBsb2Zm
X3QgdmJvLCBsb2ZmX3QgbGVuKQogCQkJCQljb250aW51ZTsKCiAJCQkJLyoKLQkJCQkgKiBVbndy
aXR0ZW4gYXJlYQotCQkJCSAqIE5URlMgaXMgbm90IGFibGUgdG8gc3RvcmUgc2V2ZXJhbCB1bndy
aXR0ZW4gYXJlYXMKLQkJCQkgKiBBY3RpdmF0ZSAnbnRmc19zcGFyc2VfY2x1c3RlcicgdG8gemVy
byBuZXcgYWxsb2NhdGVkIGNsdXN0ZXJzCisJCQkJICogVW53cml0dGVuIGFyZWEuCisJCQkJICog
TlRGUyBpcyBub3QgYWJsZSB0byBzdG9yZSBzZXZlcmFsIHVud3JpdHRlbiBhcmVhcy4KKwkJCQkg
KiBBY3RpdmF0ZSAnbnRmc19zcGFyc2VfY2x1c3RlcicgdG8gemVybyBuZXcgYWxsb2NhdGVkIGNs
dXN0ZXJzLgogCQkJCSAqCiAJCQkJICogRGFuZ2Vyb3VzIGluIGNhc2U6CiAJCQkJICogMUcgb2Yg
c3BhcnNlZCBjbHVzdGVycyArIDEgY2x1c3RlciBvZiBkYXRhID0+CiAJCQkJICogdmFsaWRfc2l6
ZSA9PSAxRyArIDEgY2x1c3RlcgogCQkJCSAqIGZhbGxvY2F0ZSgxRykgd2lsbCB6ZXJvIDFHIGFu
ZCB0aGlzIGNhbiBiZSB2ZXJ5IGxvbmcKLQkJCQkgKiB4ZnN0ZXN0IDAxNi8wODYgd2lsbCBmYWls
IHdpdGhvdXQgJ250ZnNfc3BhcnNlX2NsdXN0ZXInCisJCQkJICogeGZzdGVzdCAwMTYvMDg2IHdp
bGwgZmFpbCB3aXRob3V0ICdudGZzX3NwYXJzZV9jbHVzdGVyJy4KIAkJCQkgKi8KIAkJCQkvKm50
ZnNfc3BhcnNlX2NsdXN0ZXIoaW5vZGUsIE5VTEwsIHZjbiwKIAkJCQkgKgkJICAgIG1pbih2Y25f
diAtIHZjbiwgY2xlbikpOwpAQCAtNTkxLDcgKzU5Myw3IEBAIHN0YXRpYyBsb25nIG50ZnNfZmFs
bG9jYXRlKHN0cnVjdCBmaWxlICpmaWxlLCBpbnQgbW9kZSwgbG9mZl90IHZibywgbG9mZl90IGxl
bikKCiAJCWlmIChtb2RlICYgRkFMTE9DX0ZMX0tFRVBfU0laRSkgewogCQkJbmlfbG9jayhuaSk7
Ci0JCQkvKnRydWUgLSBrZWVwIHByZWFsbG9jYXRlZCovCisJCQkvKiBUcnVlIC0gS2VlcCBwcmVh
bGxvY2F0ZWQuICovCiAJCQllcnIgPSBhdHRyX3NldF9zaXplKG5pLCBBVFRSX0RBVEEsIE5VTEws
IDAsCiAJCQkJCSAgICAmbmktPmZpbGUucnVuLCBpX3NpemUsICZuaS0+aV92YWxpZCwKIAkJCQkJ
ICAgIHRydWUsIE5VTEwpOwpAQCAtNjEyLDcgKzYxNCw3IEBAIHN0YXRpYyBsb25nIG50ZnNfZmFs
bG9jYXRlKHN0cnVjdCBmaWxlICpmaWxlLCBpbnQgbW9kZSwgbG9mZl90IHZibywgbG9mZl90IGxl
bikKIH0KCiAvKgotICogaW5vZGVfb3BlcmF0aW9uczo6c2V0YXR0cgorICogbnRmczNfc2V0YXR0
ciAtIGlub2RlX29wZXJhdGlvbnM6OnNldGF0dHIKICAqLwogaW50IG50ZnMzX3NldGF0dHIoc3Ry
dWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCiAJ
CSAgc3RydWN0IGlhdHRyICphdHRyKQpAQCAtNjI2LDkgKzYyOCw5IEBAIGludCBudGZzM19zZXRh
dHRyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGRlbnRyeSAqZGVu
dHJ5LAogCWludCBlcnI7CgogCWlmIChzYmktPm9wdGlvbnMubm9fYWNzX3J1bGVzKSB7Ci0JCS8q
ICJubyBhY2Nlc3MgcnVsZXMiIC0gZm9yY2UgYW55IGNoYW5nZXMgb2YgdGltZSBldGMuICovCisJ
CS8qICJObyBhY2Nlc3MgcnVsZXMiIC0gRm9yY2UgYW55IGNoYW5nZXMgb2YgdGltZSBldGMuICov
CiAJCWF0dHItPmlhX3ZhbGlkIHw9IEFUVFJfRk9SQ0U7Ci0JCS8qIGFuZCBkaXNhYmxlIGZvciBl
ZGl0aW5nIHNvbWUgYXR0cmlidXRlcyAqLworCQkvKiBhbmQgZGlzYWJsZSBmb3IgZWRpdGluZyBz
b21lIGF0dHJpYnV0ZXMuICovCiAJCWF0dHItPmlhX3ZhbGlkICY9IH4oQVRUUl9VSUQgfCBBVFRS
X0dJRCB8IEFUVFJfTU9ERSk7CiAJCWlhX3ZhbGlkID0gYXR0ci0+aWFfdmFsaWQ7CiAJfQpAQCAt
NjQxLDcgKzY0Myw3IEBAIGludCBudGZzM19zZXRhdHRyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAq
bW50X3VzZXJucywgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAogCQlsb2ZmX3Qgb2xkc2l6ZSA9IGlu
b2RlLT5pX3NpemU7CgogCQlpZiAoV0FSTl9PTihuaS0+bmlfZmxhZ3MgJiBOSV9GTEFHX0NPTVBS
RVNTRURfTUFTSykpIHsKLQkJCS8qIHNob3VsZCBuZXZlciBiZSBoZXJlLCBzZWUgbnRmc19maWxl
X29wZW4qLworCQkJLyogU2hvdWxkIG5ldmVyIGJlIGhlcmUsIHNlZSBudGZzX2ZpbGVfb3Blbigp
LiAqLwogCQkJZXJyID0gLUVPUE5PVFNVUFA7CiAJCQlnb3RvIG91dDsKIAkJfQpAQCAtNjY1LDcg
KzY2Nyw3IEBAIGludCBudGZzM19zZXRhdHRyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3Vz
ZXJucywgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAogCQlpZiAoZXJyKQogCQkJZ290byBvdXQ7Cgot
CQkvKiBsaW51eCAndycgLT4gd2luZG93cyAncm8nICovCisJCS8qIExpbnV4ICd3JyAtPiBXaW5k
b3dzICdybycuICovCiAJCWlmICgwMjIyICYgaW5vZGUtPmlfbW9kZSkKIAkJCW5pLT5zdGRfZmEg
Jj0gfkZJTEVfQVRUUklCVVRFX1JFQURPTkxZOwogCQllbHNlCkBAIC03MTQsNyArNzE2LDExIEBA
IHN0YXRpYyBzc2l6ZV90IG50ZnNfZmlsZV9yZWFkX2l0ZXIoc3RydWN0IGtpb2NiICppb2NiLCBz
dHJ1Y3QgaW92X2l0ZXIgKml0ZXIpCiAJcmV0dXJuIGVycjsKIH0KCi0vKiByZXR1cm5zIGFycmF5
IG9mIGxvY2tlZCBwYWdlcyAqLworLyoKKyAqIG50ZnNfZ2V0X2ZyYW1lX3BhZ2VzCisgKgorICog
UmV0dXJuOiBBcnJheSBvZiBsb2NrZWQgcGFnZXMuCisgKi8KIHN0YXRpYyBpbnQgbnRmc19nZXRf
ZnJhbWVfcGFnZXMoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsIHBnb2ZmX3QgaW5kZXgs
CiAJCQkJc3RydWN0IHBhZ2UgKipwYWdlcywgdTMyIHBhZ2VzX3Blcl9mcmFtZSwKIAkJCQlib29s
ICpmcmFtZV91cHRvZGF0ZSkKQEAgLTc0Nyw3ICs3NTMsOSBAQCBzdGF0aWMgaW50IG50ZnNfZ2V0
X2ZyYW1lX3BhZ2VzKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCBwZ29mZl90IGluZGV4
LAogCXJldHVybiAwOwogfQoKLS8qaGVscGVyIGZvciBudGZzX2ZpbGVfd3JpdGVfaXRlciAoY29t
cHJlc3NlZCBmaWxlcykqLworLyoKKyAqIG50ZnNfY29tcHJlc3Nfd3JpdGUgLSBIZWxwZXIgZm9y
IG50ZnNfZmlsZV93cml0ZV9pdGVyKCkgKGNvbXByZXNzZWQgZmlsZXMpLgorICovCiBzdGF0aWMg
c3NpemVfdCBudGZzX2NvbXByZXNzX3dyaXRlKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlv
dl9pdGVyICpmcm9tKQogewogCWludCBlcnI7CkBAIC03OTMsNyArODAxLDcgQEAgc3RhdGljIHNz
aXplX3QgbnRmc19jb21wcmVzc193cml0ZShzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3Zf
aXRlciAqZnJvbSkKIAlpZiAoZXJyKQogCQlnb3RvIG91dDsKCi0JLyogemVybyByYW5nZSBbdmFs
aWQgOiBwb3MpICovCisJLyogWmVybyByYW5nZSBbdmFsaWQgOiBwb3MpLiAqLwogCXdoaWxlICh2
YWxpZCA8IHBvcykgewogCQlDTFNUIGxjbiwgY2xlbjsKCkBAIC04MTIsNyArODIwLDcgQEAgc3Rh
dGljIHNzaXplX3QgbnRmc19jb21wcmVzc193cml0ZShzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVj
dCBpb3ZfaXRlciAqZnJvbSkKIAkJCWNvbnRpbnVlOwogCQl9CgotCQkvKiBMb2FkIGZ1bGwgZnJh
bWUgKi8KKwkJLyogTG9hZCBmdWxsIGZyYW1lLiAqLwogCQllcnIgPSBudGZzX2dldF9mcmFtZV9w
YWdlcyhtYXBwaW5nLCBmcmFtZV92Ym8gPj4gUEFHRV9TSElGVCwKIAkJCQkJICAgcGFnZXMsIHBh
Z2VzX3Blcl9mcmFtZSwKIAkJCQkJICAgJmZyYW1lX3VwdG9kYXRlKTsKQEAgLTg1OCw3ICs4NjYs
NyBAQCBzdGF0aWMgc3NpemVfdCBudGZzX2NvbXByZXNzX3dyaXRlKHN0cnVjdCBraW9jYiAqaW9j
Yiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQogCQluaS0+aV92YWxpZCA9IHZhbGlkID0gZnJhbWVf
dmJvICsgZnJhbWVfc2l6ZTsKIAl9CgotCS8qIGNvcHkgdXNlciBkYXRhIFtwb3MgOiBwb3MgKyBj
b3VudCkgKi8KKwkvKiBDb3B5IHVzZXIgZGF0YSBbcG9zIDogcG9zICsgY291bnQpLiAqLwogCXdo
aWxlIChjb3VudCkgewogCQlzaXplX3QgY29waWVkLCBieXRlczsKCkBAIC04NzYsNyArODg0LDcg
QEAgc3RhdGljIHNzaXplX3QgbnRmc19jb21wcmVzc193cml0ZShzdHJ1Y3Qga2lvY2IgKmlvY2Is
IHN0cnVjdCBpb3ZfaXRlciAqZnJvbSkKIAkJCWdvdG8gb3V0OwogCQl9CgotCQkvKiBMb2FkIGZ1
bGwgZnJhbWUgKi8KKwkJLyogTG9hZCBmdWxsIGZyYW1lLiAqLwogCQllcnIgPSBudGZzX2dldF9m
cmFtZV9wYWdlcyhtYXBwaW5nLCBpbmRleCwgcGFnZXMsCiAJCQkJCSAgIHBhZ2VzX3Blcl9mcmFt
ZSwgJmZyYW1lX3VwdG9kYXRlKTsKIAkJaWYgKGVycikKQEAgLTkwNSw3ICs5MTMsNyBAQCBzdGF0
aWMgc3NpemVfdCBudGZzX2NvbXByZXNzX3dyaXRlKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0
IGlvdl9pdGVyICpmcm9tKQogCQlpcCA9IG9mZiA+PiBQQUdFX1NISUZUOwogCQlvZmYgPSBvZmZz
ZXRfaW5fcGFnZShwb3MpOwoKLQkJLyogY29weSB1c2VyIGRhdGEgdG8gcGFnZXMgKi8KKwkJLyog
Q29weSB1c2VyIGRhdGEgdG8gcGFnZXMuICovCiAJCWZvciAoOzspIHsKIAkJCXNpemVfdCBjcCwg
dGFpbCA9IFBBR0VfU0laRSAtIG9mZjsKCkBAIC05NzEsNyArOTc5LDcgQEAgc3RhdGljIHNzaXpl
X3QgbnRmc19jb21wcmVzc193cml0ZShzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRl
ciAqZnJvbSkKIH0KCiAvKgotICogZmlsZV9vcGVyYXRpb25zOjp3cml0ZV9pdGVyCisgKiBudGZz
X2ZpbGVfd3JpdGVfaXRlciAtIGZpbGVfb3BlcmF0aW9uczo6d3JpdGVfaXRlcgogICovCiBzdGF0
aWMgc3NpemVfdCBudGZzX2ZpbGVfd3JpdGVfaXRlcihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVj
dCBpb3ZfaXRlciAqZnJvbSkKIHsKQEAgLTEwMDcsNyArMTAxNSw3IEBAIHN0YXRpYyBzc2l6ZV90
IG50ZnNfZmlsZV93cml0ZV9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICpmcm9tKQogCQlnb3RvIG91dDsKCiAJaWYgKFdBUk5fT04obmktPm5pX2ZsYWdzICYgTklfRkxB
R19DT01QUkVTU0VEX01BU0spKSB7Ci0JCS8qIHNob3VsZCBuZXZlciBiZSBoZXJlLCBzZWUgbnRm
c19maWxlX29wZW4qLworCQkvKiBTaG91bGQgbmV2ZXIgYmUgaGVyZSwgc2VlIG50ZnNfZmlsZV9v
cGVuKCkgKi8KIAkJcmV0ID0gLUVPUE5PVFNVUFA7CiAJCWdvdG8gb3V0OwogCX0KQEAgLTEwMjks
NyArMTAzNyw3IEBAIHN0YXRpYyBzc2l6ZV90IG50ZnNfZmlsZV93cml0ZV9pdGVyKHN0cnVjdCBr
aW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQogfQoKIC8qCi0gKiBmaWxlX29wZXJh
dGlvbnM6Om9wZW4KKyAqIG50ZnNfZmlsZV9vcGVuIC0gZmlsZV9vcGVyYXRpb25zOjpvcGVuCiAg
Ki8KIGludCBudGZzX2ZpbGVfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAq
ZmlsZSkKIHsKQEAgLTEwNDAsNyArMTA0OCw3IEBAIGludCBudGZzX2ZpbGVfb3BlbihzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAkJcmV0dXJuIC1FT1BOT1RTVVBQOwog
CX0KCi0JLyogRGVjb21wcmVzcyAiZXh0ZXJuYWwgY29tcHJlc3NlZCIgZmlsZSBpZiBvcGVuZWQg
Zm9yIHJ3ICovCisJLyogRGVjb21wcmVzcyAiZXh0ZXJuYWwgY29tcHJlc3NlZCIgZmlsZSBpZiBv
cGVuZWQgZm9yIHJ3LiAqLwogCWlmICgobmktPm5pX2ZsYWdzICYgTklfRkxBR19DT01QUkVTU0VE
X01BU0spICYmCiAJICAgIChmaWxlLT5mX2ZsYWdzICYgKE9fV1JPTkxZIHwgT19SRFdSIHwgT19U
UlVOQykpKSB7CiAjaWZkZWYgQ09ORklHX05URlMzX0xaWF9YUFJFU1MKQEAgLTEwNjAsNyArMTA2
OCw3IEBAIGludCBudGZzX2ZpbGVfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmls
ZSAqZmlsZSkKIH0KCiAvKgotICogZmlsZV9vcGVyYXRpb25zOjpyZWxlYXNlCisgKiBudGZzX2Zp
bGVfcmVsZWFzZSAtIGZpbGVfb3BlcmF0aW9uczo6cmVsZWFzZQogICovCiBzdGF0aWMgaW50IG50
ZnNfZmlsZV9yZWxlYXNlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQog
ewpAQCAtMTA2OCw3ICsxMDc2LDcgQEAgc3RhdGljIGludCBudGZzX2ZpbGVfcmVsZWFzZShzdHJ1
Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAlzdHJ1Y3QgbnRmc19zYl9pbmZv
ICpzYmkgPSBuaS0+bWkuc2JpOwogCWludCBlcnIgPSAwOwoKLQkvKiBpZiB3ZSBhcmUgdGhlIGxh
c3Qgd3JpdGVyIG9uIHRoZSBpbm9kZSwgZHJvcCB0aGUgYmxvY2sgcmVzZXJ2YXRpb24gKi8KKwkv
KiBJZiB3ZSBhcmUgbGFzdCB3cml0ZXIgb24gdGhlIGlub2RlLCBkcm9wIHRoZSBibG9jayByZXNl
cnZhdGlvbi4gKi8KIAlpZiAoc2JpLT5vcHRpb25zLnByZWFsbG9jICYmICgoZmlsZS0+Zl9tb2Rl
ICYgRk1PREVfV1JJVEUpICYmCiAJCQkJICAgICAgYXRvbWljX3JlYWQoJmlub2RlLT5pX3dyaXRl
Y291bnQpID09IDEpKSB7CiAJCW5pX2xvY2sobmkpOwpAQCAtMTA4Myw3ICsxMDkxLDkgQEAgc3Rh
dGljIGludCBudGZzX2ZpbGVfcmVsZWFzZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmls
ZSAqZmlsZSkKIAlyZXR1cm4gZXJyOwogfQoKLS8qIGZpbGVfb3BlcmF0aW9uczo6ZmllbWFwICov
CisvKgorICogbnRmc19maWVtYXAgLSBmaWxlX29wZXJhdGlvbnM6OmZpZW1hcAorICovCiBpbnQg
bnRmc19maWVtYXAoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpZW1hcF9leHRlbnRfaW5m
byAqZmllaW5mbywKIAkJX191NjQgc3RhcnQsIF9fdTY0IGxlbikKIHsKZGlmZiAtLWdpdCBhL2Zz
L250ZnMzL2ZyZWNvcmQuYyBiL2ZzL250ZnMzL2ZyZWNvcmQuYwppbmRleCA1ZmE3Mzc4NTA2NzMu
LjBmMjY4YWY5ZDM0MyAxMDA2NDQKLS0tIGEvZnMvbnRmczMvZnJlY29yZC5jCisrKyBiL2ZzL250
ZnMzL2ZyZWNvcmQuYwpAQCAtNDcsOSArNDcsNyBAQCBzdGF0aWMgc3RydWN0IG1mdF9pbm9kZSAq
bmlfaW5zX21pKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IHJiX3Jvb3QgKnRyZWUsCiB9
CgogLyoKLSAqIG5pX2ZpbmRfbWkKLSAqCi0gKiBmaW5kcyBtZnRfaW5vZGUgYnkgcmVjb3JkIG51
bWJlcgorICogbmlfZmluZF9taSAtIEZpbmQgbWZ0X2lub2RlIGJ5IHJlY29yZCBudW1iZXIuCiAg
Ki8KIHN0YXRpYyBzdHJ1Y3QgbWZ0X2lub2RlICpuaV9maW5kX21pKHN0cnVjdCBudGZzX2lub2Rl
ICpuaSwgQ0xTVCBybm8pCiB7CkBAIC01NywyOSArNTUsMjQgQEAgc3RhdGljIHN0cnVjdCBtZnRf
aW5vZGUgKm5pX2ZpbmRfbWkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBDTFNUIHJubykKIH0KCiAv
KgotICogbmlfYWRkX21pCi0gKgotICogYWRkcyBuZXcgbWZ0X2lub2RlIGludG8gbnRmc19pbm9k
ZQotICovCisgKiBuaV9hZGRfbWkgLSBBZGQgbmV3IG1mdF9pbm9kZSBpbnRvIG50ZnNfaW5vZGUu
CisqLwogc3RhdGljIHZvaWQgbmlfYWRkX21pKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0
IG1mdF9pbm9kZSAqbWkpCiB7CiAJbmlfaW5zX21pKG5pLCAmbmktPm1pX3RyZWUsIG1pLT5ybm8s
ICZtaS0+bm9kZSk7CiB9CgogLyoKLSAqIG5pX3JlbW92ZV9taQotICoKLSAqIHJlbW92ZXMgbWZ0
X2lub2RlIGZyb20gbnRmc19pbm9kZQorICogbmlfcmVtb3ZlX21pIC0gUmVtb3ZlIG1mdF9pbm9k
ZSBmcm9tIG50ZnNfaW5vZGUuCiAgKi8KIHZvaWQgbmlfcmVtb3ZlX21pKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgc3RydWN0IG1mdF9pbm9kZSAqbWkpCiB7CiAJcmJfZXJhc2UoJm1pLT5ub2RlLCAm
bmktPm1pX3RyZWUpOwogfQoKLS8qCi0gKiBuaV9zdGQKKy8qIG5pX3N0ZAogICoKLSAqIHJldHVy
bnMgcG9pbnRlciBpbnRvIHN0ZF9pbmZvIGZyb20gcHJpbWFyeSByZWNvcmQKKyAqIFJldHVybjog
UG9pbnRlciBpbnRvIHN0ZF9pbmZvIGZyb20gcHJpbWFyeSByZWNvcmQuCiAgKi8KIHN0cnVjdCBB
VFRSX1NURF9JTkZPICpuaV9zdGQoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogewpAQCAtOTMsNyAr
ODYsNyBAQCBzdHJ1Y3QgQVRUUl9TVERfSU5GTyAqbmlfc3RkKHN0cnVjdCBudGZzX2lub2RlICpu
aSkKIC8qCiAgKiBuaV9zdGQ1CiAgKgotICogcmV0dXJucyBwb2ludGVyIGludG8gc3RkX2luZm8g
ZnJvbSBwcmltYXJ5IHJlY29yZAorICogUmV0dXJuOiBQb2ludGVyIGludG8gc3RkX2luZm8gZnJv
bSBwcmltYXJ5IHJlY29yZC4KICAqLwogc3RydWN0IEFUVFJfU1REX0lORk81ICpuaV9zdGQ1KHN0
cnVjdCBudGZzX2lub2RlICpuaSkKIHsKQEAgLTEwNiw5ICs5OSw3IEBAIHN0cnVjdCBBVFRSX1NU
RF9JTkZPNSAqbmlfc3RkNShzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiB9CgogLyoKLSAqIG5pX2Ns
ZWFyCi0gKgotICogY2xlYXJzIHJlc291cmNlcyBhbGxvY2F0ZWQgYnkgbnRmc19pbm9kZQorICog
bmlfY2xlYXIgLSBDbGVhciByZXNvdXJjZXMgYWxsb2NhdGVkIGJ5IG50ZnNfaW5vZGUuCiAgKi8K
IHZvaWQgbmlfY2xlYXIoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogewpAQCAtMTI4LDE0ICsxMTks
MTQgQEAgdm9pZCBuaV9jbGVhcihzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCW5vZGUgPSBuZXh0
OwogCX0KCi0JLyogYmFkIGlub2RlIGFsd2F5cyBoYXMgbW9kZSA9PSBTX0lGUkVHICovCisJLyog
QmFkIGlub2RlIGFsd2F5cyBoYXMgbW9kZSA9PSBTX0lGUkVHLiAqLwogCWlmIChuaS0+bmlfZmxh
Z3MgJiBOSV9GTEFHX0RJUikKIAkJaW5keF9jbGVhcigmbmktPmRpcik7CiAJZWxzZSB7CiAJCXJ1
bl9jbG9zZSgmbmktPmZpbGUucnVuKTsKICNpZmRlZiBDT05GSUdfTlRGUzNfTFpYX1hQUkVTUwog
CQlpZiAobmktPmZpbGUub2Zmc19wYWdlKSB7Ci0JCQkvKiBvbi1kZW1hbmQgYWxsb2NhdGVkIHBh
Z2UgZm9yIG9mZnNldHMgKi8KKwkJCS8qIE9uLWRlbWFuZCBhbGxvY2F0ZWQgcGFnZSBmb3Igb2Zm
c2V0cy4gKi8KIAkJCXB1dF9wYWdlKG5pLT5maWxlLm9mZnNfcGFnZSk7CiAJCQluaS0+ZmlsZS5v
ZmZzX3BhZ2UgPSBOVUxMOwogCQl9CkBAIC0xNDYsOSArMTM3LDcgQEAgdm9pZCBuaV9jbGVhcihz
dHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiB9CgogLyoKLSAqIG5pX2xvYWRfbWlfZXgKLSAqCi0gKiBm
aW5kcyBtZnRfaW5vZGUgYnkgcmVjb3JkIG51bWJlci4KKyAqIG5pX2xvYWRfbWlfZXggLSBGaW5k
IG1mdF9pbm9kZSBieSByZWNvcmQgbnVtYmVyLgogICovCiBpbnQgbmlfbG9hZF9taV9leChzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIENMU1Qgcm5vLCBzdHJ1Y3QgbWZ0X2lub2RlICoqbWkpCiB7CkBA
IC0xNzIsOSArMTYxLDcgQEAgaW50IG5pX2xvYWRfbWlfZXgoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBDTFNUIHJubywgc3RydWN0IG1mdF9pbm9kZSAqKm1pKQogfQoKIC8qCi0gKiBuaV9sb2FkX21p
Ci0gKgotICogbG9hZCBtZnRfaW5vZGUgY29ycmVzcG9uZGVkIGxpc3RfZW50cnkKKyAqIG5pX2xv
YWRfbWkgLSBMb2FkIG1mdF9pbm9kZSBjb3JyZXNwb25kZWQgbGlzdF9lbnRyeS4KICAqLwogaW50
IG5pX2xvYWRfbWkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZ
ICpsZSwKIAkgICAgICAgc3RydWN0IG1mdF9pbm9kZSAqKm1pKQpAQCAtMTk3LDcgKzE4NCw3IEBA
IGludCBuaV9sb2FkX21pKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJfTElTVF9F
TlRSWSAqbGUsCiAvKgogICogbmlfZmluZF9hdHRyCiAgKgotICogcmV0dXJucyBhdHRyaWJ1dGUg
YW5kIHJlY29yZCB0aGlzIGF0dHJpYnV0ZSBiZWxvbmdzIHRvCisgKiBSZXR1cm46IEF0dHJpYnV0
ZSBhbmQgcmVjb3JkIHRoaXMgYXR0cmlidXRlIGJlbG9uZ3MgdG8uCiAgKi8KIHN0cnVjdCBBVFRS
SUIgKm5pX2ZpbmRfYXR0cihzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0
dHIsCiAJCQkgICAgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqKmxlX28sIGVudW0gQVRUUl9UWVBF
IHR5cGUsCkBAIC0yMTQsMTEgKzIwMSwxMSBAQCBzdHJ1Y3QgQVRUUklCICpuaV9maW5kX2F0dHIo
c3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAogCQlpZiAobWkpCiAJ
CQkqbWkgPSAmbmktPm1pOwoKLQkJLyogTG9vayBmb3IgcmVxdWlyZWQgYXR0cmlidXRlIGluIHBy
aW1hcnkgcmVjb3JkICovCisJCS8qIExvb2sgZm9yIHJlcXVpcmVkIGF0dHJpYnV0ZSBpbiBwcmlt
YXJ5IHJlY29yZC4gKi8KIAkJcmV0dXJuIG1pX2ZpbmRfYXR0cigmbmktPm1pLCBhdHRyLCB0eXBl
LCBuYW1lLCBuYW1lX2xlbiwgTlVMTCk7CiAJfQoKLQkvKiBmaXJzdCBsb29rIGZvciBsaXN0IGVu
dHJ5IG9mIHJlcXVpcmVkIHR5cGUgKi8KKwkvKiBGaXJzdCBsb29rIGZvciBsaXN0IGVudHJ5IG9m
IHJlcXVpcmVkIHR5cGUuICovCiAJbGUgPSBhbF9maW5kX2V4KG5pLCBsZV9vID8gKmxlX28gOiBO
VUxMLCB0eXBlLCBuYW1lLCBuYW1lX2xlbiwgdmNuKTsKIAlpZiAoIWxlKQogCQlyZXR1cm4gTlVM
TDsKQEAgLTIyNiwxMSArMjEzLDExIEBAIHN0cnVjdCBBVFRSSUIgKm5pX2ZpbmRfYXR0cihzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJaWYgKGxlX28pCiAJCSps
ZV9vID0gbGU7CgotCS8qIExvYWQgcmVjb3JkIHRoYXQgY29udGFpbnMgdGhpcyBhdHRyaWJ1dGUg
Ki8KKwkvKiBMb2FkIHJlY29yZCB0aGF0IGNvbnRhaW5zIHRoaXMgYXR0cmlidXRlLiAqLwogCWlm
IChuaV9sb2FkX21pKG5pLCBsZSwgJm0pKQogCQlyZXR1cm4gTlVMTDsKCi0JLyogTG9vayBmb3Ig
cmVxdWlyZWQgYXR0cmlidXRlICovCisJLyogTG9vayBmb3IgcmVxdWlyZWQgYXR0cmlidXRlLiAq
LwogCWF0dHIgPSBtaV9maW5kX2F0dHIobSwgTlVMTCwgdHlwZSwgbmFtZSwgbmFtZV9sZW4sICZs
ZS0+aWQpOwoKIAlpZiAoIWF0dHIpCkBAIC0yNTcsOSArMjQ0LDcgQEAgc3RydWN0IEFUVFJJQiAq
bmlfZmluZF9hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJJQiAqYXR0ciwK
IH0KCiAvKgotICogbmlfZW51bV9hdHRyX2V4Ci0gKgotICogZW51bWVyYXRlcyBhdHRyaWJ1dGVz
IGluIG50ZnNfaW5vZGUKKyAqIG5pX2VudW1fYXR0cl9leCAtIEVudW1lcmF0ZXMgYXR0cmlidXRl
cyBpbiBudGZzX2lub2RlLgogICovCiBzdHJ1Y3QgQVRUUklCICpuaV9lbnVtX2F0dHJfZXgoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAogCQkJICAgICAgIHN0cnVj
dCBBVFRSX0xJU1RfRU5UUlkgKipsZSwKQEAgLTI3MywzMCArMjU4LDI4IEBAIHN0cnVjdCBBVFRS
SUIgKm5pX2VudW1fYXR0cl9leChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIg
KmF0dHIsCiAJCSpsZSA9IE5VTEw7CiAJCWlmIChtaSkKIAkJCSptaSA9ICZuaS0+bWk7Ci0JCS8q
IEVudW0gYXR0cmlidXRlcyBpbiBwcmltYXJ5IHJlY29yZCAqLworCQkvKiBFbnVtIGF0dHJpYnV0
ZXMgaW4gcHJpbWFyeSByZWNvcmQuICovCiAJCXJldHVybiBtaV9lbnVtX2F0dHIoJm5pLT5taSwg
YXR0cik7CiAJfQoKLQkvKiBnZXQgbmV4dCBsaXN0IGVudHJ5ICovCisJLyogR2V0IG5leHQgbGlz
dCBlbnRyeS4gKi8KIAlsZTIgPSAqbGUgPSBhbF9lbnVtZXJhdGUobmksIGF0dHIgPyAqbGUgOiBO
VUxMKTsKIAlpZiAoIWxlMikKIAkJcmV0dXJuIE5VTEw7CgotCS8qIExvYWQgcmVjb3JkIHRoYXQg
Y29udGFpbnMgdGhlIHJlcXVpcmVkIGF0dHJpYnV0ZSAqLworCS8qIExvYWQgcmVjb3JkIHRoYXQg
Y29udGFpbnMgdGhlIHJlcXVpcmVkIGF0dHJpYnV0ZS4gKi8KIAlpZiAobmlfbG9hZF9taShuaSwg
bGUyLCAmbWkyKSkKIAkJcmV0dXJuIE5VTEw7CgogCWlmIChtaSkKIAkJKm1pID0gbWkyOwoKLQkv
KiBGaW5kIGF0dHJpYnV0ZSBpbiBsb2FkZWQgcmVjb3JkICovCisJLyogRmluZCBhdHRyaWJ1dGUg
aW4gbG9hZGVkIHJlY29yZC4gKi8KIAlyZXR1cm4gcmVjX2ZpbmRfYXR0cl9sZShtaTIsIGxlMik7
CiB9CgogLyoKLSAqIG5pX2xvYWRfYXR0cgotICoKLSAqIGxvYWRzIGF0dHJpYnV0ZSB0aGF0IGNv
bnRhaW5zIGdpdmVuIHZjbgorICogbmlfbG9hZF9hdHRyIC0gTG9hZCBhdHRyaWJ1dGUgdGhhdCBj
b250YWlucyBnaXZlbiBWQ04uCiAgKi8KIHN0cnVjdCBBVFRSSUIgKm5pX2xvYWRfYXR0cihzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCQkgICAgY29uc3QgX19s
ZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwgQ0xTVCB2Y24sCkBAIC0zMTgsOSArMzAxLDkgQEAgc3Ry
dWN0IEFUVFJJQiAqbmlfbG9hZF9hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRS
X1RZUEUgdHlwZSwKIAkJcmV0dXJuIE5VTEw7CgogCS8qCi0JICogVW5mb3J0dW5hdGVseSBBVFRS
X0xJU1RfRU5UUlkgY29udGFpbnMgb25seSBzdGFydCB2Y24KKwkgKiBVbmZvcnR1bmF0ZWx5IEFU
VFJfTElTVF9FTlRSWSBjb250YWlucyBvbmx5IHN0YXJ0IFZDTi4KIAkgKiBTbyB0byBmaW5kIHRo
ZSBBVFRSSUIgc2VnbWVudCB0aGF0IGNvbnRhaW5zICd2Y24nIHdlIHNob3VsZAotCSAqIGVudW1l
cmF0ZSBzb21lIGVudHJpZXMKKwkgKiBlbnVtZXJhdGUgc29tZSBlbnRyaWVzLgogCSAqLwogCWlm
ICh2Y24pIHsKIAkJZm9yICg7OyBsZSA9IG5leHQpIHsKQEAgLTM1MSw5ICszMzQsNyBAQCBzdHJ1
Y3QgQVRUUklCICpuaV9sb2FkX2F0dHIoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJf
VFlQRSB0eXBlLAogfQoKIC8qCi0gKiBuaV9sb2FkX2FsbF9taQotICoKLSAqIGxvYWRzIGFsbCBz
dWJyZWNvcmRzCisgKiBuaV9sb2FkX2FsbF9taSAtIExvYWQgYWxsIHN1YnJlY29yZHMuCiAgKi8K
IGludCBuaV9sb2FkX2FsbF9taShzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiB7CkBAIC0zODAsOSAr
MzYxLDcgQEAgaW50IG5pX2xvYWRfYWxsX21pKHN0cnVjdCBudGZzX2lub2RlICpuaSkKIH0KCiAv
KgotICogbmlfYWRkX3N1YnJlY29yZAotICoKLSAqIGFsbG9jYXRlICsgZm9ybWF0ICsgYXR0YWNo
IGEgbmV3IHN1YnJlY29yZAorICogbmlfYWRkX3N1YnJlY29yZCAtIEFsbG9jYXRlICsgZm9ybWF0
ICsgYXR0YWNoIGEgbmV3IHN1YnJlY29yZC4KICAqLwogYm9vbCBuaV9hZGRfc3VicmVjb3JkKHN0
cnVjdCBudGZzX2lub2RlICpuaSwgQ0xTVCBybm8sIHN0cnVjdCBtZnRfaW5vZGUgKiptaSkKIHsK
QEAgLTQwNSwxMCArMzg0LDggQEAgYm9vbCBuaV9hZGRfc3VicmVjb3JkKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgQ0xTVCBybm8sIHN0cnVjdCBtZnRfaW5vZGUgKiptaSkKIH0KCiAvKgotICogbmlf
cmVtb3ZlX2F0dHIKLSAqCi0gKiByZW1vdmVzIGFsbCBhdHRyaWJ1dGVzIGZvciB0aGUgZ2l2ZW4g
dHlwZS9uYW1lL2lkCi0gKi8KKyAqIG5pX3JlbW92ZV9hdHRyIC0gUmVtb3ZlIGFsbCBhdHRyaWJ1
dGVzIGZvciB0aGUgZ2l2ZW4gdHlwZS9uYW1lL2lkLgorKi8KIGludCBuaV9yZW1vdmVfYXR0cihz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCSAgIGNvbnN0IF9f
bGUxNiAqbmFtZSwgc2l6ZV90IG5hbWVfbGVuLCBib29sIGJhc2Vfb25seSwKIAkJICAgY29uc3Qg
X19sZTE2ICppZCkKQEAgLTQ3MywxMCArNDUwLDkgQEAgaW50IG5pX3JlbW92ZV9hdHRyKHN0cnVj
dCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIH0KCiAvKgotICogbmlfaW5z
X25ld19hdHRyCisgKiBuaV9pbnNfbmV3X2F0dHIgLSBJbnNlcnQgdGhlIGF0dHJpYnV0ZSBpbnRv
IHJlY29yZC4KICAqCi0gKiBpbnNlcnRzIHRoZSBhdHRyaWJ1dGUgaW50byByZWNvcmQKLSAqIFJl
dHVybnMgbm90IGZ1bGwgY29uc3RydWN0ZWQgYXR0cmlidXRlIG9yIE5VTEwgaWYgbm90IHBvc3Np
YmxlIHRvIGNyZWF0ZQorICogUmV0dXJuOiBOb3QgZnVsbCBjb25zdHJ1Y3RlZCBhdHRyaWJ1dGUg
b3IgTlVMTCBpZiBub3QgcG9zc2libGUgdG8gY3JlYXRlLgogICovCiBzdGF0aWMgc3RydWN0IEFU
VFJJQiAqbmlfaW5zX25ld19hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAkJCQkgICAgICBz
dHJ1Y3QgbWZ0X2lub2RlICptaSwKQEAgLTQ5Niw3ICs0NzIsNyBAQCBzdGF0aWMgc3RydWN0IEFU
VFJJQiAqbmlfaW5zX25ld19hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAkJZXJyID0gYWxf
YWRkX2xlKG5pLCB0eXBlLCBuYW1lLCBuYW1lX2xlbiwgc3ZjbiwgY3B1X3RvX2xlMTYoLTEpLAog
CQkJCSZyZWYsICZsZSk7CiAJCWlmIChlcnIpIHsKLQkJCS8qIG5vIG1lbW9yeSBvciBubyBzcGFj
ZSAqLworCQkJLyogTm8gbWVtb3J5IG9yIG5vIHNwYWNlLiAqLwogCQkJcmV0dXJuIE5VTEw7CiAJ
CX0KIAkJbGVfYWRkZWQgPSB0cnVlOwpAQCAtNTA1LDcgKzQ4MSw3IEBAIHN0YXRpYyBzdHJ1Y3Qg
QVRUUklCICpuaV9pbnNfbmV3X2F0dHIoc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQkgKiBhbF9h
ZGRfbGUgLT4gYXR0cl9zZXRfc2l6ZSAobGlzdCkgLT4gbmlfZXhwYW5kX2xpc3QKIAkJICogd2hp
Y2ggbW92ZXMgc29tZSBhdHRyaWJ1dGVzIG91dCBvZiBwcmltYXJ5IHJlY29yZAogCQkgKiB0aGlz
IG1lYW5zIHRoYXQgbmFtZSBtYXkgcG9pbnQgaW50byBtb3ZlZCBtZW1vcnkKLQkJICogcmVpbml0
ICduYW1lJyBmcm9tIGxlCisJCSAqIHJlaW5pdCAnbmFtZScgZnJvbSBsZS4KIAkJICovCiAJCW5h
bWUgPSBsZS0+bmFtZTsKIAl9CkBAIC01MTgsMTQgKzQ5NCwxNCBAQCBzdGF0aWMgc3RydWN0IEFU
VFJJQiAqbmlfaW5zX25ld19hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAl9CgogCWlmICh0
eXBlID09IEFUVFJfTElTVCkgewotCQkvKmF0dHIgbGlzdCBpcyBub3QgaW4gbGlzdCBlbnRyeSBh
cnJheSovCisJCS8qIEF0dHIgbGlzdCBpcyBub3QgaW4gbGlzdCBlbnRyeSBhcnJheS4gKi8KIAkJ
Z290byBvdXQ7CiAJfQoKIAlpZiAoIWxlKQogCQlnb3RvIG91dDsKCi0JLyogVXBkYXRlIEFUVFJJ
QiBJZCBhbmQgcmVjb3JkIHJlZmVyZW5jZSAqLworCS8qIFVwZGF0ZSBBVFRSSUIgSWQgYW5kIHJl
Y29yZCByZWZlcmVuY2UuICovCiAJbGUtPmlkID0gYXR0ci0+aWQ7CiAJbmktPmF0dHJfbGlzdC5k
aXJ0eSA9IHRydWU7CiAJbGUtPnJlZiA9IHJlZjsKQEAgLTUzNSw5ICs1MTEsMTEgQEAgc3RhdGlj
IHN0cnVjdCBBVFRSSUIgKm5pX2luc19uZXdfYXR0cihzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiB9
CgogLyoKLSAqIHJhbmRvbSB3cml0ZSBhY2Nlc3MgdG8gc3BhcnNlZCBvciBjb21wcmVzc2VkIGZp
bGUgbWF5IHJlc3VsdCB0bworICogbmlfcmVwYWNrCisgKgorICogUmFuZG9tIHdyaXRlIGFjY2Vz
cyB0byBzcGFyc2VkIG9yIGNvbXByZXNzZWQgZmlsZSBtYXkgcmVzdWx0IHRvCiAgKiBub3Qgb3B0
aW1pemVkIHBhY2tlZCBydW5zLgotICogSGVyZSBpdCBpcyB0aGUgcGxhY2UgdG8gb3B0aW1pemUg
aXQKKyAqIEhlcmUgaXMgdGhlIHBsYWNlIHRvIG9wdGltaXplIGl0LgogICovCiBzdGF0aWMgaW50
IG5pX3JlcGFjayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiB7CkBAIC01ODEsMTEgKzU1OSwxMSBA
QCBzdGF0aWMgaW50IG5pX3JlcGFjayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCX0KCiAJCWlm
ICghbWlfcCkgewotCQkJLyogZG8gbm90IHRyeSBpZiB0b28gbGl0dGxlIGZyZWUgc3BhY2UgKi8K
KwkJCS8qIERvIG5vdCB0cnkgaWYgbm90IGVub2doIGZyZWUgc3BhY2UuICovCiAJCQlpZiAobGUz
Ml90b19jcHUobWktPm1yZWMtPnVzZWQpICsgOCA+PSBycykKIAkJCQljb250aW51ZTsKCi0JCQkv
KiBkbyBub3QgdHJ5IGlmIGxhc3QgYXR0cmlidXRlIHNlZ21lbnQgKi8KKwkJCS8qIERvIG5vdCB0
cnkgaWYgbGFzdCBhdHRyaWJ1dGUgc2VnbWVudC4gKi8KIAkJCWlmIChldmNuICsgMSA9PSBhbGxv
YykKIAkJCQljb250aW51ZTsKIAkJCXJ1bl9jbG9zZSgmcnVuKTsKQEAgLTYwOSw4ICs1ODcsOCBA
QCBzdGF0aWMgaW50IG5pX3JlcGFjayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCX0KCiAJCS8q
Ci0JCSAqIHJ1biBjb250YWlucyBkYXRhIGZyb20gdHdvIHJlY29yZHM6IG1pX3AgYW5kIG1pCi0J
CSAqIHRyeSB0byBwYWNrIGluIG9uZQorCQkgKiBSdW4gY29udGFpbnMgZGF0YSBmcm9tIHR3byBy
ZWNvcmRzOiBtaV9wIGFuZCBtaQorCQkgKiBUcnkgdG8gcGFjayBpbiBvbmUuCiAJCSAqLwogCQll
cnIgPSBtaV9wYWNrX3J1bnMobWlfcCwgYXR0cl9wLCAmcnVuLCBldmNuICsgMSAtIHN2Y25fcCk7
CiAJCWlmIChlcnIpCkBAIC02MTksNyArNTk3LDcgQEAgc3RhdGljIGludCBuaV9yZXBhY2soc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pKQogCQluZXh0X3N2Y24gPSBsZTY0X3RvX2NwdShhdHRyX3AtPm5y
ZXMuZXZjbikgKyAxOwoKIAkJaWYgKG5leHRfc3ZjbiA+PSBldmNuICsgMSkgewotCQkJLyogd2Ug
Y2FuIHJlbW92ZSB0aGlzIGF0dHJpYnV0ZSBzZWdtZW50ICovCisJCQkvKiBXZSBjYW4gcmVtb3Zl
IHRoaXMgYXR0cmlidXRlIHNlZ21lbnQuICovCiAJCQlhbF9yZW1vdmVfbGUobmksIGxlKTsKIAkJ
CW1pX3JlbW92ZV9hdHRyKG1pLCBhdHRyKTsKIAkJCWxlID0gbGVfcDsKQEAgLTY1MCw3ICs2Mjgs
NyBAQCBzdGF0aWMgaW50IG5pX3JlcGFjayhzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCW50ZnNf
aW5vZGVfd2FybigmbmktPnZmc19pbm9kZSwgInJlcGFjayBwcm9ibGVtIik7CiAJCW50ZnNfc2V0
X3N0YXRlKHNiaSwgTlRGU19ESVJUWV9FUlJPUik7CgotCQkvKiBQYWNrIGxvYWRlZCBidXQgbm90
IHBhY2tlZCBydW5zICovCisJCS8qIFBhY2sgbG9hZGVkIGJ1dCBub3QgcGFja2VkIHJ1bnMuICov
CiAJCWlmIChtaV9wKQogCQkJbWlfcGFja19ydW5zKG1pX3AsIGF0dHJfcCwgJnJ1biwgZXZjbl9w
ICsgMSAtIHN2Y25fcCk7CiAJfQpAQCAtNjYzLDcgKzY0MSw3IEBAIHN0YXRpYyBpbnQgbmlfcmVw
YWNrKHN0cnVjdCBudGZzX2lub2RlICpuaSkKICAqIG5pX3RyeV9yZW1vdmVfYXR0cl9saXN0CiAg
KgogICogQ2FuIHdlIHJlbW92ZSBhdHRyaWJ1dGUgbGlzdD8KLSAqIENoZWNrIHRoZSBjYXNlIHdo
ZW4gcHJpbWFyeSByZWNvcmQgY29udGFpbnMgZW5vdWdoIHNwYWNlIGZvciBhbGwgYXR0cmlidXRl
cworICogQ2hlY2sgdGhlIGNhc2Ugd2hlbiBwcmltYXJ5IHJlY29yZCBjb250YWlucyBlbm91Z2gg
c3BhY2UgZm9yIGFsbCBhdHRyaWJ1dGVzLgogICovCiBzdGF0aWMgaW50IG5pX3RyeV9yZW1vdmVf
YXR0cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIHsKQEAgLTY4OSw3ICs2NjcsNyBAQCBz
dGF0aWMgaW50IG5pX3RyeV9yZW1vdmVfYXR0cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkK
CiAJYXNpemUgPSBsZTMyX3RvX2NwdShhdHRyX2xpc3QtPnNpemUpOwoKLQkvKiBmcmVlIHNwYWNl
IGluIHByaW1hcnkgcmVjb3JkIHdpdGhvdXQgYXR0cmlidXRlIGxpc3QgKi8KKwkvKiBGcmVlIHNw
YWNlIGluIHByaW1hcnkgcmVjb3JkIHdpdGhvdXQgYXR0cmlidXRlIGxpc3QuICovCiAJZnJlZSA9
IHNiaS0+cmVjb3JkX3NpemUgLSBsZTMyX3RvX2NwdShuaS0+bWkubXJlYy0+dXNlZCkgKyBhc2l6
ZTsKIAltaV9nZXRfcmVmKCZuaS0+bWksICZyZWYpOwoKQEAgLTcxNyw3ICs2OTUsNyBAQCBzdGF0
aWMgaW50IG5pX3RyeV9yZW1vdmVfYXR0cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIAkJ
ZnJlZSAtPSBhc2l6ZTsKIAl9CgotCS8qIElzIHNlZW1zIHRoYXQgYXR0cmlidXRlIGxpc3QgY2Fu
IGJlIHJlbW92ZWQgZnJvbSBwcmltYXJ5IHJlY29yZCAqLworCS8qIElzIHNlZW1zIHRoYXQgYXR0
cmlidXRlIGxpc3QgY2FuIGJlIHJlbW92ZWQgZnJvbSBwcmltYXJ5IHJlY29yZC4gKi8KIAltaV9y
ZW1vdmVfYXR0cigmbmktPm1pLCBhdHRyX2xpc3QpOwoKIAkvKgpAQCAtNzM1LDE3ICs3MTMsMTcg
QEAgc3RhdGljIGludCBuaV90cnlfcmVtb3ZlX2F0dHJfbGlzdChzdHJ1Y3QgbnRmc19pbm9kZSAq
bmkpCiAJCQkJICAgIGxlLT5uYW1lX2xlbiwgJmxlLT5pZCk7CiAJCWFzaXplID0gbGUzMl90b19j
cHUoYXR0ci0+c2l6ZSk7CgotCQkvKiBpbnNlcnQgaW50byBwcmltYXJ5IHJlY29yZCAqLworCQkv
KiBJbnNlcnQgaW50byBwcmltYXJ5IHJlY29yZC4gKi8KIAkJYXR0cl9pbnMgPSBtaV9pbnNlcnRf
YXR0cigmbmktPm1pLCBsZS0+dHlwZSwgbGVfbmFtZShsZSksCiAJCQkJCSAgbGUtPm5hbWVfbGVu
LCBhc2l6ZSwKIAkJCQkJICBsZTE2X3RvX2NwdShhdHRyLT5uYW1lX29mZikpOwogCQlpZCA9IGF0
dHJfaW5zLT5pZDsKCi0JCS8qIGNvcHkgYWxsIGV4Y2VwdCBpZCAqLworCQkvKiBDb3B5IGFsbCBl
eGNlcHQgaWQuICovCiAJCW1lbWNweShhdHRyX2lucywgYXR0ciwgYXNpemUpOwogCQlhdHRyX2lu
cy0+aWQgPSBpZDsKCi0JCS8qIHJlbW92ZSBmcm9tIG9yaWdpbmFsIHJlY29yZCAqLworCQkvKiBS
ZW1vdmUgZnJvbSBvcmlnaW5hbCByZWNvcmQuICovCiAJCW1pX3JlbW92ZV9hdHRyKG1pLCBhdHRy
KTsKIAl9CgpAQCAtNzYwLDEwICs3MzgsOCBAQCBzdGF0aWMgaW50IG5pX3RyeV9yZW1vdmVfYXR0
cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIH0KCiAvKgotICogbmlfY3JlYXRlX2F0dHJf
bGlzdAotICoKLSAqIGdlbmVyYXRlcyBhbiBhdHRyaWJ1dGUgbGlzdCBmb3IgdGhpcyBwcmltYXJ5
IHJlY29yZAotICovCisgKiBuaV9jcmVhdGVfYXR0cl9saXN0IC0gR2VuZXJhdGVzIGFuIGF0dHJp
YnV0ZSBsaXN0IGZvciB0aGlzIHByaW1hcnkgcmVjb3JkLgorKi8KIGludCBuaV9jcmVhdGVfYXR0
cl9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIHsKIAlzdHJ1Y3QgbnRmc19zYl9pbmZvICpz
YmkgPSBuaS0+bWkuc2JpOwpAQCAtNzg0LDggKzc2MCw4IEBAIGludCBuaV9jcmVhdGVfYXR0cl9s
aXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIAlycyA9IHNiaS0+cmVjb3JkX3NpemU7CgogCS8q
Ci0JICogU2tpcCBlc3RpbWF0aW5nIGV4YWN0IG1lbW9yeSByZXF1aXJlbWVudAotCSAqIExvb2tz
IGxpa2Ugb25lIHJlY29yZF9zaXplIGlzIGFsd2F5cyBlbm91Z2gKKwkgKiBTa2lwIGVzdGltYXRp
bmcgZXhhY3QgbWVtb3J5IHJlcXVpcmVtZW50LgorCSAqIExvb2tzIGxpa2Ugb25lIHJlY29yZF9z
aXplIGlzIGFsd2F5cyBlbm91Z2guCiAJICovCiAJbGUgPSBudGZzX21hbGxvYyhhbF9hbGlnbmVk
KHJzKSk7CiAJaWYgKCFsZSkgewpAQCAtODQ0LDEyICs4MjAsMTIgQEAgaW50IG5pX2NyZWF0ZV9h
dHRyX2xpc3Qoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogCQl9CiAJfQoKLQkvKiBBbGxvY2F0ZSBj
aGlsZCBtZnQuICovCisJLyogQWxsb2NhdGUgY2hpbGQgTUZULiAqLwogCWVyciA9IG50ZnNfbG9v
a19mcmVlX21mdChzYmksICZybm8sIGlzX21mdCwgbmksICZtaSk7CiAJaWYgKGVycikKIAkJZ290
byBvdXQxOwoKLQkvKiBDYWxsICdtaV9yZW1vdmVfYXR0cicgaW4gcmV2ZXJzZSBvcmRlciB0byBr
ZWVwIHBvaW50ZXJzICdhcnJfbW92ZScgdmFsaWQgKi8KKwkvKiBDYWxsIG1pX3JlbW92ZV9hdHRy
KCkgaW4gcmV2ZXJzZSBvcmRlciB0byBrZWVwIHBvaW50ZXJzICdhcnJfbW92ZScgdmFsaWQuICov
CiAJd2hpbGUgKHRvX2ZyZWUgPiAwKSB7CiAJCXN0cnVjdCBBVFRSSUIgKmIgPSBhcnJfbW92ZVst
LW5iXTsKIAkJdTMyIGFzaXplID0gbGUzMl90b19jcHUoYi0+c2l6ZSk7CkBAIC04NjIsNyArODM4
LDcgQEAgaW50IG5pX2NyZWF0ZV9hdHRyX2xpc3Qoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogCQlt
aV9nZXRfcmVmKG1pLCAmbGVfYltuYl0tPnJlZik7CiAJCWxlX2JbbmJdLT5pZCA9IGF0dHItPmlk
OwoKLQkJLyogY29weSBhbGwgZXhjZXB0IGlkICovCisJCS8qIENvcHkgYWxsIGV4Y2VwdCBpZC4g
Ki8KIAkJbWVtY3B5KGF0dHIsIGIsIGFzaXplKTsKIAkJYXR0ci0+aWQgPSBsZV9iW25iXS0+aWQ7
CgpAQCAtOTAyLDkgKzg3OCw3IEBAIGludCBuaV9jcmVhdGVfYXR0cl9saXN0KHN0cnVjdCBudGZz
X2lub2RlICpuaSkKIH0KCiAvKgotICogbmlfaW5zX2F0dHJfZXh0Ci0gKgotICogVGhpcyBtZXRo
b2QgYWRkcyBhbiBleHRlcm5hbCBhdHRyaWJ1dGUgdG8gdGhlIG50ZnNfaW5vZGUuCisgKiBuaV9p
bnNfYXR0cl9leHQgLSBBZGQgYW4gZXh0ZXJuYWwgYXR0cmlidXRlIHRvIHRoZSBudGZzX2lub2Rl
LgogICovCiBzdGF0aWMgaW50IG5pX2luc19hdHRyX2V4dChzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlLAogCQkJICAgZW51bSBBVFRSX1RZUEUgdHlwZSwg
Y29uc3QgX19sZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwKQEAgLTkyOSw4ICs5MDMsOCBAQCBzdGF0
aWMgaW50IG5pX2luc19hdHRyX2V4dChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRS
X0xJU1RfRU5UUlkgKmxlLAogCX0KCiAJLyoKLQkgKiBzdGFuZGFyZCBpbmZvcm1hdGlvbiBhbmQg
YXR0cl9saXN0IGNhbm5vdCBiZSBtYWRlIGV4dGVybmFsLgotCSAqIFRoZSBMb2cgRmlsZSBjYW5u
b3QgaGF2ZSBhbnkgZXh0ZXJuYWwgYXR0cmlidXRlcworCSAqIFN0YW5kYXJkIGluZm9ybWF0aW9u
IGFuZCBhdHRyX2xpc3QgY2Fubm90IGJlIG1hZGUgZXh0ZXJuYWwuCisJICogVGhlIExvZyBGaWxl
IGNhbm5vdCBoYXZlIGFueSBleHRlcm5hbCBhdHRyaWJ1dGVzLgogCSAqLwogCWlmICh0eXBlID09
IEFUVFJfU1REIHx8IHR5cGUgPT0gQVRUUl9MSVNUIHx8CiAJICAgIG5pLT5taS5ybm8gPT0gTUZU
X1JFQ19MT0cpIHsKQEAgLTkzOCw3ICs5MTIsNyBAQCBzdGF0aWMgaW50IG5pX2luc19hdHRyX2V4
dChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxlLAogCQln
b3RvIG91dDsKIAl9CgotCS8qIENyZWF0ZSBhdHRyaWJ1dGUgbGlzdCBpZiBpdCBpcyBub3QgYWxy
ZWFkeSBleGlzdGVkICovCisJLyogQ3JlYXRlIGF0dHJpYnV0ZSBsaXN0IGlmIGl0IGlzIG5vdCBh
bHJlYWR5IGV4aXN0ZWQuICovCiAJaWYgKCFuaS0+YXR0cl9saXN0LnNpemUpIHsKIAkJZXJyID0g
bmlfY3JlYXRlX2F0dHJfbGlzdChuaSk7CiAJCWlmIChlcnIpCkBAIC05NTUsMTQgKzkyOSwxNCBA
QCBzdGF0aWMgaW50IG5pX2luc19hdHRyX2V4dChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVj
dCBBVFRSX0xJU1RfRU5UUlkgKmxlLAogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKLQkvKiBDaGVj
ayBlYWNoIG9mIGxvYWRlZCBzdWJyZWNvcmQgKi8KKwkvKiBDaGVjayBlYWNoIG9mIGxvYWRlZCBz
dWJyZWNvcmQuICovCiAJZm9yIChub2RlID0gcmJfZmlyc3QoJm5pLT5taV90cmVlKTsgbm9kZTsg
bm9kZSA9IHJiX25leHQobm9kZSkpIHsKIAkJbWkgPSByYl9lbnRyeShub2RlLCBzdHJ1Y3QgbWZ0
X2lub2RlLCBub2RlKTsKCiAJCWlmIChpc19tZnRfZGF0YSAmJgogCQkgICAgKG1pX2VudW1fYXR0
cihtaSwgTlVMTCkgfHwKIAkJICAgICB2Ym8gPD0gKCh1NjQpbWktPnJubyA8PCBzYmktPnJlY29y
ZF9iaXRzKSkpIHsKLQkJCS8qIFdlIGNhbid0IGFjY2VwdCB0aGlzIHJlY29yZCAnY2FzZSBNRlQn
cyBib290c3RyYXBwaW5nICovCisJCQkvKiBXZSBjYW4ndCBhY2NlcHQgdGhpcyByZWNvcmQgJ2Nh
c2UgTUZUJ3MgYm9vdHN0cmFwcGluZy4gKi8KIAkJCWNvbnRpbnVlOwogCQl9CiAJCWlmIChpc19t
ZnQgJiYKQEAgLTk3NiwxMSArOTUwLDExIEBAIHN0YXRpYyBpbnQgbmlfaW5zX2F0dHJfZXh0KHN0
cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUsCgogCQlpZiAo
KHR5cGUgIT0gQVRUUl9OQU1FIHx8IG5hbWVfbGVuKSAmJgogCQkgICAgbWlfZmluZF9hdHRyKG1p
LCBOVUxMLCB0eXBlLCBuYW1lLCBuYW1lX2xlbiwgTlVMTCkpIHsKLQkJCS8qIE9ubHkgaW5kZXhl
ZCBhdHRyaWJ1dGVzIGNhbiBzaGFyZSBzYW1lIHJlY29yZCAqLworCQkJLyogT25seSBpbmRleGVk
IGF0dHJpYnV0ZXMgY2FuIHNoYXJlIHNhbWUgcmVjb3JkLiAqLwogCQkJY29udGludWU7CiAJCX0K
Ci0JCS8qIFRyeSB0byBpbnNlcnQgYXR0cmlidXRlIGludG8gdGhpcyBzdWJyZWNvcmQgKi8KKwkJ
LyogVHJ5IHRvIGluc2VydCBhdHRyaWJ1dGUgaW50byB0aGlzIHN1YnJlY29yZC4gKi8KIAkJYXR0
ciA9IG5pX2luc19uZXdfYXR0cihuaSwgbWksIGxlLCB0eXBlLCBuYW1lLCBuYW1lX2xlbiwgYXNp
emUsCiAJCQkJICAgICAgIG5hbWVfb2ZmLCBzdmNuKTsKIAkJaWYgKCFhdHRyKQpAQCAtOTkyLDcg
Kzk2Niw3IEBAIHN0YXRpYyBpbnQgbmlfaW5zX2F0dHJfZXh0KHN0cnVjdCBudGZzX2lub2RlICpu
aSwgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUsCiAJfQoKIGluc2VydF9leHQ6Ci0JLyogV2Ug
aGF2ZSB0byBhbGxvY2F0ZSBhIG5ldyBjaGlsZCBzdWJyZWNvcmQqLworCS8qIFdlIGhhdmUgdG8g
YWxsb2NhdGUgYSBuZXcgY2hpbGQgc3VicmVjb3JkLiAqLwogCWVyciA9IG50ZnNfbG9va19mcmVl
X21mdChzYmksICZybm8sIGlzX21mdF9kYXRhLCBuaSwgJm1pKTsKIAlpZiAoZXJyKQogCQlnb3Rv
IG91dDsKQEAgLTEwMjcsOSArMTAwMSw3IEBAIHN0YXRpYyBpbnQgbmlfaW5zX2F0dHJfZXh0KHN0
cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUsCiB9CgogLyoK
LSAqIG5pX2luc2VydF9hdHRyCi0gKgotICogaW5zZXJ0cyBhbiBhdHRyaWJ1dGUgaW50byB0aGUg
ZmlsZS4KKyAqIG5pX2luc2VydF9hdHRyIC0gSW5zZXJ0IGFuIGF0dHJpYnV0ZSBpbnRvIHRoZSBm
aWxlLgogICoKICAqIElmIHRoZSBwcmltYXJ5IHJlY29yZCBoYXMgcm9vbSwgaXQgd2lsbCBqdXN0
IGluc2VydCB0aGUgYXR0cmlidXRlLgogICogSWYgbm90LCBpdCBtYXkgbWFrZSB0aGUgYXR0cmli
dXRlIGV4dGVybmFsLgpAQCAtMTAzOCw4ICsxMDEwLDggQEAgc3RhdGljIGludCBuaV9pbnNfYXR0
cl9leHQoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZICpsZSwK
ICAqCiAgKiBOT1RFOgogICogVGhlIEFUVFJfTElTVCBhbmQgQVRUUl9TVEQgY2Fubm90IGJlIG1h
ZGUgZXh0ZXJuYWwuCi0gKiBUaGlzIGZ1bmN0aW9uIGRvZXMgbm90IGZpbGwgbmV3IGF0dHJpYnV0
ZSBmdWxsCi0gKiBJdCBvbmx5IGZpbGxzICdzaXplJy8ndHlwZScvJ2lkJy8nbmFtZV9sZW4nIGZp
ZWxkcworICogVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCBmaWxsIG5ldyBhdHRyaWJ1dGUgZnVsbC4K
KyAqIEl0IG9ubHkgZmlsbHMgJ3NpemUnLyd0eXBlJy8naWQnLyduYW1lX2xlbicgZmllbGRzLgog
ICovCiBzdGF0aWMgaW50IG5pX2luc2VydF9hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51
bSBBVFRSX1RZUEUgdHlwZSwKIAkJCSAgY29uc3QgX19sZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwg
dTMyIGFzaXplLApAQCAtMTA2NCw3ICsxMDM2LDcgQEAgc3RhdGljIGludCBuaV9pbnNlcnRfYXR0
cihzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJZnJlZSA9IHNi
aS0+cmVjb3JkX3NpemUgLSB1c2VkOwoKIAlpZiAoaXNfbWZ0ICYmIHR5cGUgIT0gQVRUUl9MSVNU
KSB7Ci0JCS8qIFJlc2VydmUgc3BhY2UgZm9yIHRoZSBBVFRSSUIgTGlzdC4gKi8KKwkJLyogUmVz
ZXJ2ZSBzcGFjZSBmb3IgdGhlIEFUVFJJQiBsaXN0LiAqLwogCQlpZiAoZnJlZSA8IGxpc3RfcmVz
ZXJ2ZSkKIAkJCWZyZWUgPSAwOwogCQllbHNlCkBAIC0xMDkyLDcgKzEwNjQsNyBAQCBzdGF0aWMg
aW50IG5pX2luc2VydF9hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUg
dHlwZSwKIAl9CgogCS8qCi0JICogSGVyZSB3ZSBoYXZlOiAiaXNfbWZ0ICYmIHR5cGUgPT0gQVRU
Ul9EQVRBICYmICFzdmNuCisJICogSGVyZSB3ZSBoYXZlOiAiaXNfbWZ0ICYmIHR5cGUgPT0gQVRU
Ul9EQVRBICYmICFzdmNuIgogCSAqCiAJICogVGhlIGZpcnN0IGNodW5rIG9mIHRoZSAkTUZUOjpE
YXRhIEFUVFJJQiBtdXN0IGJlIHRoZSBiYXNlIHJlY29yZC4KIAkgKiBFdmljdCBhcyBtYW55IG90
aGVyIGF0dHJpYnV0ZXMgYXMgcG9zc2libGUuCkBAIC0xMTExLDcgKzEwODMsNyBAQCBzdGF0aWMg
aW50IG5pX2luc2VydF9hdHRyKHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRSX1RZUEUg
dHlwZSwKIAl9CgogCWlmIChtYXhfZnJlZSA8IGFzaXplICsgbGlzdF9yZXNlcnZlKSB7Ci0JCS8q
IEltcG9zc2libGUgdG8gaW5zZXJ0IHRoaXMgYXR0cmlidXRlIGludG8gcHJpbWFyeSByZWNvcmQg
Ki8KKwkJLyogSW1wb3NzaWJsZSB0byBpbnNlcnQgdGhpcyBhdHRyaWJ1dGUgaW50byBwcmltYXJ5
IHJlY29yZC4gKi8KIAkJZXJyID0gLUVJTlZBTDsKIAkJZ290byBvdXQ7CiAJfQpAQCAtMTEyMiwx
MiArMTA5NCwxMiBAQCBzdGF0aWMgaW50IG5pX2luc2VydF9hdHRyKHN0cnVjdCBudGZzX2lub2Rl
ICpuaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIAlmb3IgKDs7KSB7CiAJCWF0dHIgPSBtaV9lbnVt
X2F0dHIoJm5pLT5taSwgYXR0cik7CiAJCWlmICghYXR0cikgewotCQkJLyogV2Ugc2hvdWxkIG5l
dmVyIGJlIGhlcmUgJ2NhdXNlIHdlIGhhdmUgYWxyZWFkeSBjaGVjayB0aGlzIGNhc2UgKi8KKwkJ
CS8qIFdlIHNob3VsZCBuZXZlciBiZSBoZXJlICdjYXVzZSB3ZSBoYXZlIGFscmVhZHkgY2hlY2sg
dGhpcyBjYXNlLiAqLwogCQkJZXJyID0gLUVJTlZBTDsKIAkJCWdvdG8gb3V0OwogCQl9CgotCQkv
KiBTa2lwIGF0dHJpYnV0ZXMgdGhhdCBNVVNUIGJlIHByaW1hcnkgcmVjb3JkICovCisJCS8qIFNr
aXAgYXR0cmlidXRlcyB0aGF0IE1VU1QgYmUgcHJpbWFyeSByZWNvcmQuICovCiAJCWlmIChhdHRy
LT50eXBlID09IEFUVFJfU1REIHx8IGF0dHItPnR5cGUgPT0gQVRUUl9MSVNUKQogCQkJY29udGlu
dWU7CgpAQCAtMTEzNSw3ICsxMTA3LDcgQEAgc3RhdGljIGludCBuaV9pbnNlcnRfYXR0cihzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCWlmIChuaS0+YXR0cl9s
aXN0LnNpemUpIHsKIAkJCWxlID0gYWxfZmluZF9sZShuaSwgTlVMTCwgYXR0cik7CiAJCQlpZiAo
IWxlKSB7Ci0JCQkJLyogUmVhbGx5IHRoaXMgaXMgYSBzZXJpb3VzIGJ1ZyAqLworCQkJCS8qIFJl
YWxseSB0aGlzIGlzIGEgc2VyaW91cyBidWcuICovCiAJCQkJZXJyID0gLUVJTlZBTDsKIAkJCQln
b3RvIG91dDsKIAkJCX0KQEAgLTExNTMsMTAgKzExMjUsMTAgQEAgc3RhdGljIGludCBuaV9pbnNl
cnRfYXR0cihzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCW1l
bWNweShlYXR0ciwgYXR0ciwgdDMyKTsKIAkJZWF0dHItPmlkID0gaWQ7CgotCQkvKiByZW1vdmUg
YXR0cmliIGZyb20gcHJpbWFyeSByZWNvcmQgKi8KKwkJLyogUmVtb3ZlIGF0dHJpYiBmcm9tIHBy
aW1hcnkgcmVjb3JkLiAqLwogCQltaV9yZW1vdmVfYXR0cigmbmktPm1pLCBhdHRyKTsKCi0JCS8q
IGF0dHIgbm93IHBvaW50cyB0byBuZXh0IGF0dHJpYnV0ZSAqLworCQkvKiBhdHRyIG5vdyBwb2lu
dHMgdG8gbmV4dCBhdHRyaWJ1dGUuICovCiAJCWlmIChhdHRyLT50eXBlID09IEFUVFJfRU5EKQog
CQkJZ290byBvdXQ7CiAJfQpAQCAtMTE3OSwxMSArMTE1MSw3IEBAIHN0YXRpYyBpbnQgbmlfaW5z
ZXJ0X2F0dHIoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEFUVFJfVFlQRSB0eXBlLAogCXJl
dHVybiBlcnI7CiB9CgotLyoKLSAqIG5pX2V4cGFuZF9tZnRfbGlzdAotICoKLSAqIFRoaXMgbWV0
aG9kIHNwbGl0cyBBVFRSX0RBVEEgb2YgJE1GVAotICovCisvKiBuaV9leHBhbmRfbWZ0X2xpc3Qg
LSBTcGxpdCBBVFRSX0RBVEEgb2YgJE1GVC4gKi8KIHN0YXRpYyBpbnQgbmlfZXhwYW5kX21mdF9s
aXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIHsKIAlpbnQgZXJyID0gMDsKQEAgLTExOTUsNyAr
MTE2Myw3IEBAIHN0YXRpYyBpbnQgbmlfZXhwYW5kX21mdF9saXN0KHN0cnVjdCBudGZzX2lub2Rl
ICpuaSkKIAlzdHJ1Y3QgbWZ0X2lub2RlICptaSwgKm1pX21pbiwgKm1pX25ldzsKIAlzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmkgPSBuaS0+bWkuc2JpOwoKLQkvKiBGaW5kIHRoZSBuZWFyZXN0IE1m
dCAqLworCS8qIEZpbmQgdGhlIG5lYXJlc3QgTUZULiAqLwogCW1mdF9taW4gPSAwOwogCW1mdF9u
ZXcgPSAwOwogCW1pX21pbiA9IE5VTEw7CkBAIC0xMjE0LDcgKzExODIsNyBAQCBzdGF0aWMgaW50
IG5pX2V4cGFuZF9tZnRfbGlzdChzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCgogCWlmIChudGZzX2xv
b2tfZnJlZV9tZnQoc2JpLCAmbWZ0X25ldywgdHJ1ZSwgbmksICZtaV9uZXcpKSB7CiAJCW1mdF9u
ZXcgPSAwOwotCQkvLyByZWFsbHkgdGhpcyBpcyBub3QgY3JpdGljYWwKKwkJLyogUmVhbGx5IHRo
aXMgaXMgbm90IGNyaXRpY2FsLiAqLwogCX0gZWxzZSBpZiAobWZ0X21pbiA+IG1mdF9uZXcpIHsK
IAkJbWZ0X21pbiA9IG1mdF9uZXc7CiAJCW1pX21pbiA9IG1pX25ldzsKQEAgLTEyNDAsOSArMTIw
OCw5IEBAIHN0YXRpYyBpbnQgbmlfZXhwYW5kX21mdF9saXN0KHN0cnVjdCBudGZzX2lub2RlICpu
aSkKIAl9CgogCS8qCi0JICogc3BsaXQgcHJpbWFyeSBhdHRyaWJ1dGUgWzAgZXZjbl0gaW4gdHdv
IHBhcnRzIFswIHN2Y24pICsgW3N2Y24gZXZjbl0KKwkgKiBTcGxpdCBwcmltYXJ5IGF0dHJpYnV0
ZSBbMCBldmNuXSBpbiB0d28gcGFydHMgWzAgc3ZjbikgKyBbc3ZjbiBldmNuXS4KIAkgKgotCSAq
IFVwZGF0ZSBmaXJzdCBwYXJ0IG9mIEFUVFJfREFUQSBpbiAncHJpbWFyeSBNRlQKKwkgKiBVcGRh
dGUgZmlyc3QgcGFydCBvZiBBVFRSX0RBVEEgaW4gJ3ByaW1hcnkgTUZULgogCSAqLwogCWVyciA9
IHJ1bl9wYWNrKHJ1biwgMCwgc3ZjbiwgQWRkMlB0cihhdHRyLCBTSVpFT0ZfTk9OUkVTSURFTlQp
LAogCQkgICAgICAgYXNpemUgLSBTSVpFT0ZfTk9OUkVTSURFTlQsICZwbGVuKTsKQEAgLTEyNTks
MTEgKzEyMjcsMTEgQEAgc3RhdGljIGludCBuaV9leHBhbmRfbWZ0X2xpc3Qoc3RydWN0IG50ZnNf
aW5vZGUgKm5pKQoKIAlhdHRyLT5ucmVzLmV2Y24gPSBjcHVfdG9fbGU2NChzdmNuIC0gMSk7CiAJ
YXR0ci0+c2l6ZSA9IGNwdV90b19sZTMyKHJ1bl9zaXplICsgU0laRU9GX05PTlJFU0lERU5UKTsK
LQkvKiAnZG9uZScgLSBob3cgbWFueSBieXRlcyBvZiBwcmltYXJ5IE1GVCBiZWNvbWVzIGZyZWUg
Ki8KKwkvKiAnZG9uZScgLSBIb3cgbWFueSBieXRlcyBvZiBwcmltYXJ5IE1GVCBiZWNvbWVzIGZy
ZWUuICovCiAJZG9uZSA9IGFzaXplIC0gcnVuX3NpemUgLSBTSVpFT0ZfTk9OUkVTSURFTlQ7CiAJ
bGUzMl9zdWJfY3B1KCZuaS0+bWkubXJlYy0+dXNlZCwgZG9uZSk7CgotCS8qIEVzdGltYXRlIHRo
ZSBzaXplIG9mIHNlY29uZCBwYXJ0OiBydW5fYnVmPU5VTEwgKi8KKwkvKiBFc3RpbWF0ZSB0aGUg
c2l6ZSBvZiBzZWNvbmQgcGFydDogcnVuX2J1Zj1OVUxMLiAqLwogCWVyciA9IHJ1bl9wYWNrKHJ1
biwgc3ZjbiwgZXZjbiArIDEgLSBzdmNuLCBOVUxMLCBzYmktPnJlY29yZF9zaXplLAogCQkgICAg
ICAgJnBsZW4pOwogCWlmIChlcnIgPCAwKQpAQCAtMTI3OCw4ICsxMjQ2LDggQEAgc3RhdGljIGlu
dCBuaV9leHBhbmRfbWZ0X2xpc3Qoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogCX0KCiAJLyoKLQkg
KiBUaGlzIGZ1bmN0aW9uIG1heSBpbXBsaWNpdGx5IGNhbGwgZXhwYW5kIGF0dHJfbGlzdAotCSAq
IEluc2VydCBzZWNvbmQgcGFydCBvZiBBVFRSX0RBVEEgaW4gJ21pX21pbicKKwkgKiBUaGlzIGZ1
bmN0aW9uIG1heSBpbXBsaWNpdGx5IGNhbGwgZXhwYW5kIGF0dHJfbGlzdC4KKwkgKiBJbnNlcnQg
c2Vjb25kIHBhcnQgb2YgQVRUUl9EQVRBIGluICdtaV9taW4nLgogCSAqLwogCWF0dHIgPSBuaV9p
bnNfbmV3X2F0dHIobmksIG1pX21pbiwgTlVMTCwgQVRUUl9EQVRBLCBOVUxMLCAwLAogCQkJICAg
ICAgIFNJWkVPRl9OT05SRVNJREVOVCArIHJ1bl9zaXplLApAQCAtMTMxMCw5ICsxMjc4LDcgQEAg
c3RhdGljIGludCBuaV9leHBhbmRfbWZ0X2xpc3Qoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogfQoK
IC8qCi0gKiBuaV9leHBhbmRfbGlzdAotICoKLSAqIFRoaXMgbWV0aG9kIG1vdmVzIGFsbCBwb3Nz
aWJsZSBhdHRyaWJ1dGVzIG91dCBvZiBwcmltYXJ5IHJlY29yZAorICogbmlfZXhwYW5kX2xpc3Qg
LSBNb3ZlIGFsbCBwb3NzaWJsZSBhdHRyaWJ1dGVzIG91dCBvZiBwcmltYXJ5IHJlY29yZC4KICAq
LwogaW50IG5pX2V4cGFuZF9saXN0KHN0cnVjdCBudGZzX2lub2RlICpuaSkKIHsKQEAgLTEzMzYs
NyArMTMwMiw3IEBAIGludCBuaV9leHBhbmRfbGlzdChzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJ
CWlmIChpc19tZnQgJiYgbGUtPnR5cGUgPT0gQVRUUl9EQVRBKQogCQkJY29udGludWU7CgotCQkv
KiBGaW5kIGF0dHJpYnV0ZSBpbiBwcmltYXJ5IHJlY29yZCAqLworCQkvKiBGaW5kIGF0dHJpYnV0
ZSBpbiBwcmltYXJ5IHJlY29yZC4gKi8KIAkJYXR0ciA9IHJlY19maW5kX2F0dHJfbGUoJm5pLT5t
aSwgbGUpOwogCQlpZiAoIWF0dHIpIHsKIAkJCWVyciA9IC1FSU5WQUw7CkBAIC0xMzQ1LDcgKzEz
MTEsNyBAQCBpbnQgbmlfZXhwYW5kX2xpc3Qoc3RydWN0IG50ZnNfaW5vZGUgKm5pKQoKIAkJYXNp
emUgPSBsZTMyX3RvX2NwdShhdHRyLT5zaXplKTsKCi0JCS8qIEFsd2F5cyBpbnNlcnQgaW50byBu
ZXcgcmVjb3JkIHRvIGF2b2lkIGNvbGxpc2lvbnMgKGRlZXAgcmVjdXJzaXZlKSAqLworCQkvKiBB
bHdheXMgaW5zZXJ0IGludG8gbmV3IHJlY29yZCB0byBhdm9pZCBjb2xsaXNpb25zIChkZWVwIHJl
Y3Vyc2l2ZSkuICovCiAJCWVyciA9IG5pX2luc19hdHRyX2V4dChuaSwgbGUsIGF0dHItPnR5cGUs
IGF0dHJfbmFtZShhdHRyKSwKIAkJCQkgICAgICBhdHRyLT5uYW1lX2xlbiwgYXNpemUsIGF0dHJf
c3ZjbihhdHRyKSwKIAkJCQkgICAgICBsZTE2X3RvX2NwdShhdHRyLT5uYW1lX29mZiksIHRydWUs
CkBAIC0xMzYzLDExICsxMzI5LDExIEBAIGludCBuaV9leHBhbmRfbGlzdChzdHJ1Y3QgbnRmc19p
bm9kZSAqbmkpCiAJfQoKIAlpZiAoIWlzX21mdCkgewotCQllcnIgPSAtRUZCSUc7IC8qIGF0dHIg
bGlzdCBpcyB0b28gYmlnKD8pICovCisJCWVyciA9IC1FRkJJRzsgLyogQXR0ciBsaXN0IGlzIHRv
byBiaWcoPykgKi8KIAkJZ290byBvdXQ7CiAJfQoKLQkvKiBzcGxpdCBtZnQgZGF0YSBhcyBtdWNo
IGFzIHBvc3NpYmxlICovCisJLyogU3BsaXQgTUZUIGRhdGEgYXMgbXVjaCBhcyBwb3NzaWJsZS4g
Ki8KIAllcnIgPSBuaV9leHBhbmRfbWZ0X2xpc3QobmkpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0
OwpAQCAtMTM3Nyw5ICsxMzQzLDcgQEAgaW50IG5pX2V4cGFuZF9saXN0KHN0cnVjdCBudGZzX2lu
b2RlICpuaSkKIH0KCiAvKgotICogbmlfaW5zZXJ0X25vbnJlc2lkZW50Ci0gKgotICogaW5zZXJ0
cyBuZXcgbm9ucmVzaWRlbnQgYXR0cmlidXRlCisgKiBuaV9pbnNlcnRfbm9ucmVzaWRlbnQgLSBJ
bnNlcnQgbmV3IG5vbnJlc2lkZW50IGF0dHJpYnV0ZS4KICAqLwogaW50IG5pX2luc2VydF9ub25y
ZXNpZGVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJCQkg
IGNvbnN0IF9fbGUxNiAqbmFtZSwgdTggbmFtZV9sZW4sCkBAIC0xNDU0LDkgKzE0MTgsNyBAQCBp
bnQgbmlfaW5zZXJ0X25vbnJlc2lkZW50KHN0cnVjdCBudGZzX2lub2RlICpuaSwgZW51bSBBVFRS
X1RZUEUgdHlwZSwKIH0KCiAvKgotICogbmlfaW5zZXJ0X3Jlc2lkZW50Ci0gKgotICogaW5zZXJ0
cyBuZXcgcmVzaWRlbnQgYXR0cmlidXRlCisgKiBuaV9pbnNlcnRfcmVzaWRlbnQgLSBJbnNlcnRz
IG5ldyByZXNpZGVudCBhdHRyaWJ1dGUuCiAgKi8KIGludCBuaV9pbnNlcnRfcmVzaWRlbnQoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCB1MzIgZGF0YV9zaXplLAogCQkgICAgICAgZW51bSBBVFRSX1RZ
UEUgdHlwZSwgY29uc3QgX19sZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwKQEAgLTE0ODgsOSArMTQ1
MCw3IEBAIGludCBuaV9pbnNlcnRfcmVzaWRlbnQoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1MzIg
ZGF0YV9zaXplLAogfQoKIC8qCi0gKiBuaV9yZW1vdmVfYXR0cl9sZQotICoKLSAqIHJlbW92ZXMg
YXR0cmlidXRlIGZyb20gcmVjb3JkCisgKiBuaV9yZW1vdmVfYXR0cl9sZSAtIFJlbW92ZSBhdHRy
aWJ1dGUgZnJvbSByZWNvcmQuCiAgKi8KIGludCBuaV9yZW1vdmVfYXR0cl9sZShzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJCSAgICAgIHN0cnVjdCBBVFRSX0xJ
U1RfRU5UUlkgKmxlKQpAQCAtMTUxMSwxMCArMTQ3MSw5IEBAIGludCBuaV9yZW1vdmVfYXR0cl9s
ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiB9CgogLyoKLSAq
IG5pX2RlbGV0ZV9hbGwKKyAqIG5pX2RlbGV0ZV9hbGwgLSBSZW1vdmUgYWxsIGF0dHJpYnV0ZXMg
YW5kIGZyZWVzIGFsbG9jYXRlcyBzcGFjZS4KICAqCi0gKiByZW1vdmVzIGFsbCBhdHRyaWJ1dGVz
IGFuZCBmcmVlcyBhbGxvY2F0ZXMgc3BhY2UKLSAqIG50ZnNfZXZpY3RfaW5vZGUtPm50ZnNfY2xl
YXJfaW5vZGUtPm5pX2RlbGV0ZV9hbGwgKGlmIG5vIGxpbmtzKQorICogbnRmc19ldmljdF9pbm9k
ZS0+bnRmc19jbGVhcl9pbm9kZS0+bmlfZGVsZXRlX2FsbCAoaWYgbm8gbGlua3MpLgogICovCiBp
bnQgbmlfZGVsZXRlX2FsbChzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiB7CkBAIC0xNTUzLDcgKzE1
MTIsNyBAQCBpbnQgbmlfZGVsZXRlX2FsbChzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCWFzaXpl
ID0gbGUzMl90b19jcHUoYXR0ci0+c2l6ZSk7CiAJCXJvZmYgPSBsZTE2X3RvX2NwdShhdHRyLT5u
cmVzLnJ1bl9vZmYpOwoKLQkJLypydW49PTEgbWVhbnMgdW5wYWNrIGFuZCBkZWFsbG9jYXRlKi8K
KwkJLyogcnVuPT0xIG1lYW5zIHVucGFjayBhbmQgZGVhbGxvY2F0ZS4gKi8KIAkJcnVuX3VucGFj
a19leChSVU5fREVBTExPQ0FURSwgc2JpLCBuaS0+bWkucm5vLCBzdmNuLCBldmNuLCBzdmNuLAog
CQkJICAgICAgQWRkMlB0cihhdHRyLCByb2ZmKSwgYXNpemUgLSByb2ZmKTsKIAl9CkBAIC0xNTYz
LDcgKzE1MjIsNyBAQCBpbnQgbmlfZGVsZXRlX2FsbChzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJ
CWFsX2Rlc3Ryb3kobmkpOwogCX0KCi0JLyogRnJlZSBhbGwgc3VicmVjb3JkcyAqLworCS8qIEZy
ZWUgYWxsIHN1YnJlY29yZHMuICovCiAJZm9yIChub2RlID0gcmJfZmlyc3QoJm5pLT5taV90cmVl
KTsgbm9kZTspIHsKIAkJc3RydWN0IHJiX25vZGUgKm5leHQgPSByYl9uZXh0KG5vZGUpOwogCQlz
dHJ1Y3QgbWZ0X2lub2RlICptaSA9IHJiX2VudHJ5KG5vZGUsIHN0cnVjdCBtZnRfaW5vZGUsIG5v
ZGUpOwpAQCAtMTU3OCw3ICsxNTM3LDcgQEAgaW50IG5pX2RlbGV0ZV9hbGwoc3RydWN0IG50ZnNf
aW5vZGUgKm5pKQogCQlub2RlID0gbmV4dDsKIAl9CgotCS8vIEZyZWUgYmFzZSByZWNvcmQKKwkv
KiBGcmVlIGJhc2UgcmVjb3JkICovCiAJY2xlYXJfcmVjX2ludXNlKG5pLT5taS5tcmVjKTsKIAlu
aS0+bWkuZGlydHkgPSB0cnVlOwogCWVyciA9IG1pX3dyaXRlKCZuaS0+bWksIDApOwpAQCAtMTU4
OCwxMSArMTU0Nyw5IEBAIGludCBuaV9kZWxldGVfYWxsKHN0cnVjdCBudGZzX2lub2RlICpuaSkK
IAlyZXR1cm4gZXJyOwogfQoKLS8qCi0gKiBuaV9mbmFtZV9uYW1lCisvKiBuaV9mbmFtZV9uYW1l
CiAgKgotICogcmV0dXJucyBmaWxlIG5hbWUgYXR0cmlidXRlIGJ5IGl0cyB2YWx1ZQotICovCisg
KlJldHVybjogRmlsZSBuYW1lIGF0dHJpYnV0ZSBieSBpdHMgdmFsdWUuICovCiBzdHJ1Y3QgQVRU
Ul9GSUxFX05BTUUgKm5pX2ZuYW1lX25hbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQkJCSAg
ICAgY29uc3Qgc3RydWN0IGNwdV9zdHIgKnVuaSwKIAkJCQkgICAgIGNvbnN0IHN0cnVjdCBNRlRf
UkVGICpob21lX2RpciwKQEAgLTE2MDMsNyArMTU2MCw3IEBAIHN0cnVjdCBBVFRSX0ZJTEVfTkFN
RSAqbmlfZm5hbWVfbmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCgogCSpsZSA9IE5VTEw7Cgot
CS8qIEVudW1lcmF0ZSBhbGwgbmFtZXMgKi8KKwkvKiBFbnVtZXJhdGUgYWxsIG5hbWVzLiAqLwog
bmV4dDoKIAlhdHRyID0gbmlfZmluZF9hdHRyKG5pLCBhdHRyLCBsZSwgQVRUUl9OQU1FLCBOVUxM
LCAwLCBOVUxMLCBOVUxMKTsKIAlpZiAoIWF0dHIpCkBAIC0xNjMyLDcgKzE1ODksNyBAQCBzdHJ1
Y3QgQVRUUl9GSUxFX05BTUUgKm5pX2ZuYW1lX25hbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLAog
LyoKICAqIG5pX2ZuYW1lX3R5cGUKICAqCi0gKiByZXR1cm5zIGZpbGUgbmFtZSBhdHRyaWJ1dGUg
d2l0aCBnaXZlbiB0eXBlCisgKiBSZXR1cm46IEZpbGUgbmFtZSBhdHRyaWJ1dGUgd2l0aCBnaXZl
biB0eXBlLgogICovCiBzdHJ1Y3QgQVRUUl9GSUxFX05BTUUgKm5pX2ZuYW1lX3R5cGUoc3RydWN0
IG50ZnNfaW5vZGUgKm5pLCB1OCBuYW1lX3R5cGUsCiAJCQkJICAgICBzdHJ1Y3QgQVRUUl9MSVNU
X0VOVFJZICoqbGUpCkBAIC0xNjQyLDcgKzE1OTksNyBAQCBzdHJ1Y3QgQVRUUl9GSUxFX05BTUUg
Km5pX2ZuYW1lX3R5cGUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1OCBuYW1lX3R5cGUsCgogCSps
ZSA9IE5VTEw7CgotCS8qIEVudW1lcmF0ZSBhbGwgbmFtZXMgKi8KKwkvKiBFbnVtZXJhdGUgYWxs
IG5hbWVzLiAqLwogCWZvciAoOzspIHsKIAkJYXR0ciA9IG5pX2ZpbmRfYXR0cihuaSwgYXR0ciwg
bGUsIEFUVFJfTkFNRSwgTlVMTCwgMCwgTlVMTCwKIAkJCQkgICAgTlVMTCk7CkBAIC0xNjU2LDkg
KzE2MTMsMTEgQEAgc3RydWN0IEFUVFJfRklMRV9OQU1FICpuaV9mbmFtZV90eXBlKHN0cnVjdCBu
dGZzX2lub2RlICpuaSwgdTggbmFtZV90eXBlLAogfQoKIC8qCi0gKiBQcm9jZXNzIGNvbXByZXNz
ZWQvc3BhcnNlZCBpbiBzcGVjaWFsIHdheQotICogTk9URTogeW91IG5lZWQgdG8gc2V0IG5pLT5z
dGRfZmEgPSBuZXdfZmEKLSAqIGFmdGVyIHRoaXMgZnVuY3Rpb24gdG8ga2VlcCBpbnRlcm5hbCBz
dHJ1Y3R1cmVzIGluIGNvbnNpc3RlbmN5CisgKiBuaV9uZXdfYXR0cl9mbGFncworICoKKyAqIFBy
b2Nlc3MgY29tcHJlc3NlZC9zcGFyc2VkIGluIHNwZWNpYWwgd2F5LgorICogTk9URTogWW91IG5l
ZWQgdG8gc2V0IG5pLT5zdGRfZmEgPSBuZXdfZmEKKyAqIGFmdGVyIHRoaXMgZnVuY3Rpb24gdG8g
a2VlcCBpbnRlcm5hbCBzdHJ1Y3R1cmVzIGluIGNvbnNpc3RlbmN5LgogICovCiBpbnQgbmlfbmV3
X2F0dHJfZmxhZ3Moc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBlbnVtIEZJTEVfQVRUUklCVVRFIG5l
d19mYSkKIHsKQEAgLTE3MDMsNyArMTY2Miw3IEBAIGludCBuaV9uZXdfYXR0cl9mbGFncyhzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gRklMRV9BVFRSSUJVVEUgbmV3X2ZhKQogCQlyZXR1cm4g
LUVPUE5PVFNVUFA7CiAJfQoKLQkvKiByZXNpemUgbm9ucmVzaWRlbnQgZW1wdHkgYXR0cmlidXRl
IGluLXBsYWNlIG9ubHkqLworCS8qIFJlc2l6ZSBub25yZXNpZGVudCBlbXB0eSBhdHRyaWJ1dGUg
aW4tcGxhY2Ugb25seS4gKi8KIAluZXdfYXNpemUgPSAobmV3X2FmbGFncyAmIChBVFRSX0ZMQUdf
Q09NUFJFU1NFRCB8IEFUVFJfRkxBR19TUEFSU0VEKSkKIAkJCSAgICA/IChTSVpFT0ZfTk9OUkVT
SURFTlRfRVggKyA4KQogCQkJICAgIDogKFNJWkVPRl9OT05SRVNJREVOVCArIDgpOwpAQCAtMTcx
MywxNyArMTY3MiwxNyBAQCBpbnQgbmlfbmV3X2F0dHJfZmxhZ3Moc3RydWN0IG50ZnNfaW5vZGUg
Km5pLCBlbnVtIEZJTEVfQVRUUklCVVRFIG5ld19mYSkKCiAJaWYgKG5ld19hZmxhZ3MgJiBBVFRS
X0ZMQUdfU1BBUlNFRCkgewogCQlhdHRyLT5uYW1lX29mZiA9IFNJWkVPRl9OT05SRVNJREVOVF9F
WF9MRTsKLQkJLyogd2luZG93cyB1c2VzIDE2IGNsdXN0ZXJzIHBlciBmcmFtZSBidXQgc3VwcG9y
dHMgb25lIGNsdXN0ZXIgcGVyIGZyYW1lIHRvbyovCisJCS8qIFdpbmRvd3MgdXNlcyAxNiBjbHVz
dGVycyBwZXIgZnJhbWUgYnV0IHN1cHBvcnRzIG9uZSBjbHVzdGVyIHBlciBmcmFtZSB0b28uICov
CiAJCWF0dHItPm5yZXMuY191bml0ID0gMDsKIAkJbmktPnZmc19pbm9kZS5pX21hcHBpbmctPmFf
b3BzID0gJm50ZnNfYW9wczsKIAl9IGVsc2UgaWYgKG5ld19hZmxhZ3MgJiBBVFRSX0ZMQUdfQ09N
UFJFU1NFRCkgewogCQlhdHRyLT5uYW1lX29mZiA9IFNJWkVPRl9OT05SRVNJREVOVF9FWF9MRTsK
LQkJLyogdGhlIG9ubHkgYWxsb3dlZDogMTYgY2x1c3RlcnMgcGVyIGZyYW1lICovCisJCS8qIFRo
ZSBvbmx5IGFsbG93ZWQ6IDE2IGNsdXN0ZXJzIHBlciBmcmFtZS4gKi8KIAkJYXR0ci0+bnJlcy5j
X3VuaXQgPSBOVEZTX0xaTlRfQ1VOSVQ7CiAJCW5pLT52ZnNfaW5vZGUuaV9tYXBwaW5nLT5hX29w
cyA9ICZudGZzX2FvcHNfY21wcjsKIAl9IGVsc2UgewogCQlhdHRyLT5uYW1lX29mZiA9IFNJWkVP
Rl9OT05SRVNJREVOVF9MRTsKLQkJLyogbm9ybWFsIGZpbGVzICovCisJCS8qIE5vcm1hbCBmaWxl
cy4gKi8KIAkJYXR0ci0+bnJlcy5jX3VuaXQgPSAwOwogCQluaS0+dmZzX2lub2RlLmlfbWFwcGlu
Zy0+YV9vcHMgPSAmbnRmc19hb3BzOwogCX0KQEAgLTE3MzgsNyArMTY5Nyw3IEBAIGludCBuaV9u
ZXdfYXR0cl9mbGFncyhzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGVudW0gRklMRV9BVFRSSUJVVEUg
bmV3X2ZhKQogLyoKICAqIG5pX3BhcnNlX3JlcGFyc2UKICAqCi0gKiBidWZmZXIgaXMgYXQgbGVh
c3QgMjQgYnl0ZXMKKyAqIEJ1ZmZlciBpcyBhdCBsZWFzdCAyNCBieXRlcy4KICAqLwogZW51bSBS
RVBBUlNFX1NJR04gbmlfcGFyc2VfcmVwYXJzZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVj
dCBBVFRSSUIgKmF0dHIsCiAJCQkJICAgdm9pZCAqYnVmZmVyKQpAQCAtMTc1MCw3ICsxNzA5LDcg
QEAgZW51bSBSRVBBUlNFX1NJR04gbmlfcGFyc2VfcmVwYXJzZShzdHJ1Y3QgbnRmc19pbm9kZSAq
bmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCgogCXN0YXRpY19hc3NlcnQoc2l6ZW9mKHN0cnVjdCBS
RVBBUlNFX0RBVEFfQlVGRkVSKSA8PSAyNCk7CgotCS8qIFRyeSB0byBlc3RpbWF0ZSByZXBhcnNl
IHBvaW50ICovCisJLyogVHJ5IHRvIGVzdGltYXRlIHJlcGFyc2UgcG9pbnQuICovCiAJaWYgKCFh
dHRyLT5ub25fcmVzKSB7CiAJCXJwID0gcmVzaWRlbnRfZGF0YV9leChhdHRyLCBzaXplb2Yoc3Ry
dWN0IFJFUEFSU0VfREFUQV9CVUZGRVIpKTsKIAl9IGVsc2UgaWYgKGxlNjRfdG9fY3B1KGF0dHIt
Pm5yZXMuZGF0YV9zaXplKSA+PQpAQCAtMTc3NSwyMSArMTczNCwyMSBAQCBlbnVtIFJFUEFSU0Vf
U0lHTiBuaV9wYXJzZV9yZXBhcnNlKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEFUVFJJ
QiAqYXR0ciwKIAlsZW4gPSBsZTE2X3RvX2NwdShycC0+UmVwYXJzZURhdGFMZW5ndGgpOwogCXN3
aXRjaCAocnAtPlJlcGFyc2VUYWcpIHsKIAljYXNlIChJT19SRVBBUlNFX1RBR19NSUNST1NPRlQg
fCBJT19SRVBBUlNFX1RBR19TWU1CT0xJQ19MSU5LKToKLQkJYnJlYWs7IC8qIFN5bWJvbGljIGxp
bmsgKi8KKwkJYnJlYWs7IC8qIFN5bWJvbGljIGxpbmsuICovCiAJY2FzZSBJT19SRVBBUlNFX1RB
R19NT1VOVF9QT0lOVDoKLQkJYnJlYWs7IC8qIE1vdW50IHBvaW50cyBhbmQganVuY3Rpb25zICov
CisJCWJyZWFrOyAvKiBNb3VudCBwb2ludHMgYW5kIGp1bmN0aW9ucy4gKi8KIAljYXNlIElPX1JF
UEFSU0VfVEFHX1NZTUxJTks6CiAJCWJyZWFrOwogCWNhc2UgSU9fUkVQQVJTRV9UQUdfQ09NUFJF
U1M6CiAJCS8qCi0JCSAqIFdPRiAtIFdpbmRvd3MgT3ZlcmxheSBGaWx0ZXIgLSB1c2VkIHRvIGNv
bXByZXNzIGZpbGVzIHdpdGggbHp4L3hwcmVzcworCQkgKiBXT0YgLSBXaW5kb3dzIE92ZXJsYXkg
RmlsdGVyIC0gVXNlZCB0byBjb21wcmVzcyBmaWxlcyB3aXRoIExaWC9YcHJlc3MuCiAJCSAqIFVu
bGlrZSBuYXRpdmUgTlRGUyBmaWxlIGNvbXByZXNzaW9uLCB0aGUgV2luZG93cyBPdmVybGF5IEZp
bHRlciBzdXBwb3J0cwogCQkgKiBvbmx5IHJlYWQgb3BlcmF0aW9ucy4gVGhpcyBtZWFucyB0aGF0
IGl0IGRvZXNu4oCZdCBuZWVkIHRvIHNlY3Rvci1hbGlnbiBlYWNoCiAJCSAqIGNvbXByZXNzZWQg
Y2h1bmssIHNvIHRoZSBjb21wcmVzc2VkIGRhdGEgY2FuIGJlIHBhY2tlZCBtb3JlIHRpZ2h0bHkg
dG9nZXRoZXIuCiAJCSAqIElmIHlvdSBvcGVuIHRoZSBmaWxlIGZvciB3cml0aW5nLCB0aGUgV2lu
ZG93cyBPdmVybGF5IEZpbHRlciBqdXN0IGRlY29tcHJlc3NlcwogCQkgKiB0aGUgZW50aXJlIGZp
bGUsIHR1cm5pbmcgaXQgYmFjayBpbnRvIGEgcGxhaW4gZmlsZS4KIAkJICoKLQkJICogbnRmczMg
ZHJpdmVyIGRlY29tcHJlc3NlcyB0aGUgZW50aXJlIGZpbGUgb25seSBvbiB3cml0ZSBvciBjaGFu
Z2Ugc2l6ZSByZXF1ZXN0cworCQkgKiBudGZzMyBkcml2ZXIgZGVjb21wcmVzc2VzIHRoZSBlbnRp
cmUgZmlsZSBvbmx5IG9uIHdyaXRlIG9yIGNoYW5nZSBzaXplIHJlcXVlc3RzLgogCQkgKi8KCiAJ
CWNtcHIgPSAmcnAtPkNvbXByZXNzUmVwYXJzZUJ1ZmZlcjsKQEAgLTE4MzEsMTQgKzE3OTAsMTUg
QEAgZW51bSBSRVBBUlNFX1NJR04gbmlfcGFyc2VfcmVwYXJzZShzdHJ1Y3QgbnRmc19pbm9kZSAq
bmksIHN0cnVjdCBBVFRSSUIgKmF0dHIsCiAJCXJldHVybiBSRVBBUlNFX05PTkU7CiAJfQoKLQkv
KiBMb29rcyBsaWtlIG5vcm1hbCBzeW1saW5rICovCisJLyogTG9va3MgbGlrZSBub3JtYWwgc3lt
bGluay4gKi8KIAlyZXR1cm4gUkVQQVJTRV9MSU5LOwogfQoKIC8qCi0gKiBoZWxwZXIgZm9yIGZp
bGVfZmllbWFwCi0gKiBhc3N1bWVkIG5pX2xvY2sKLSAqIFRPRE86IGxlc3MgYWdncmVzc2l2ZSBs
b2NrcworICogbmlfZmllbWFwIC0gSGVscGVyIGZvciBmaWxlX2ZpZW1hcCgpLgorICoKKyAqIEFz
c3VtZWQgbmlfbG9jay4KKyAqIFRPRE86IExlc3MgYWdncmVzc2l2ZSBsb2Nrcy4KICAqLwogaW50
IG5pX2ZpZW1hcChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBmaWVtYXBfZXh0ZW50X2lu
Zm8gKmZpZWluZm8sCiAJICAgICAgX191NjQgdmJvLCBfX3U2NCBsZW4pCkBAIC0xODcyLDcgKzE4
MzIsNyBAQCBpbnQgbmlfZmllbWFwKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IGZpZW1h
cF9leHRlbnRfaW5mbyAqZmllaW5mbywKIAkJCWdvdG8gb3V0OwogCQl9CiAJCWlmIChpc19hdHRy
X2NvbXByZXNzZWQoYXR0cikpIHsKLQkJCS8qdW5mb3J0dW5hdGVseSBjcCAtciBpbmNvcnJlY3Rs
eSB0cmVhdHMgY29tcHJlc3NlZCBjbHVzdGVycyovCisJCQkvKiBVbmZvcnR1bmF0ZWx5IGNwIC1y
IGluY29ycmVjdGx5IHRyZWF0cyBjb21wcmVzc2VkIGNsdXN0ZXJzLiAqLwogCQkJZXJyID0gLUVP
UE5PVFNVUFA7CiAJCQludGZzX2lub2RlX3dhcm4oCiAJCQkJJm5pLT52ZnNfaW5vZGUsCkBAIC0y
MDE0LDYgKzE5NzQsOCBAQCBpbnQgbmlfZmllbWFwKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3Ry
dWN0IGZpZW1hcF9leHRlbnRfaW5mbyAqZmllaW5mbywKIH0KCiAvKgorICogbmlfcmVhZHBhZ2Vf
Y21wcgorICoKICAqIFdoZW4gZGVjb21wcmVzc2luZywgd2UgdHlwaWNhbGx5IG9idGFpbiBtb3Jl
IHRoYW4gb25lIHBhZ2UgcGVyIHJlZmVyZW5jZS4KICAqIFdlIGluamVjdCB0aGUgYWRkaXRpb25h
bCBwYWdlcyBpbnRvIHRoZSBwYWdlIGNhY2hlLgogICovCkBAIC0yMDI0LDcgKzE5ODYsNyBAQCBp
bnQgbmlfcmVhZHBhZ2VfY21wcihzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBwYWdlICpw
YWdlKQogCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nID0gcGFnZS0+bWFwcGluZzsKIAlw
Z29mZl90IGluZGV4ID0gcGFnZS0+aW5kZXg7CiAJdTY0IGZyYW1lX3ZibywgdmJvID0gKHU2NClp
bmRleCA8PCBQQUdFX1NISUZUOwotCXN0cnVjdCBwYWdlICoqcGFnZXMgPSBOVUxMOyAvKmFycmF5
IG9mIGF0IG1vc3QgMTYgcGFnZXMuIHN0YWNrPyovCisJc3RydWN0IHBhZ2UgKipwYWdlcyA9IE5V
TEw7IC8qIEFycmF5IG9mIGF0IG1vc3QgMTYgcGFnZXMuIHN0YWNrPyAqLwogCXU4IGZyYW1lX2Jp
dHM7CiAJQ0xTVCBmcmFtZTsKIAl1MzIgaSwgaWR4LCBmcmFtZV9zaXplLCBwYWdlc19wZXJfZnJh
bWU7CkBAIC0yMDM4LDEwICsyMDAwLDEwIEBAIGludCBuaV9yZWFkcGFnZV9jbXByKHN0cnVjdCBu
dGZzX2lub2RlICpuaSwgc3RydWN0IHBhZ2UgKnBhZ2UpCiAJfQoKIAlpZiAobmktPm5pX2ZsYWdz
ICYgTklfRkxBR19DT01QUkVTU0VEX01BU0spIHsKLQkJLyogeHByZXNzIG9yIGx6eCAqLworCQkv
KiBYcHJlc3Mgb3IgTFpYLiAqLwogCQlmcmFtZV9iaXRzID0gbmlfZXh0X2NvbXByZXNzX2JpdHMo
bmkpOwogCX0gZWxzZSB7Ci0JCS8qIGx6bnQgY29tcHJlc3Npb24qLworCQkvKiBMWk5UIGNvbXBy
ZXNzaW9uLiAqLwogCQlmcmFtZV9iaXRzID0gTlRGU19MWk5UX0NVTklUICsgc2JpLT5jbHVzdGVy
X2JpdHM7CiAJfQogCWZyYW1lX3NpemUgPSAxdSA8PCBmcmFtZV9iaXRzOwpAQCAtMjA4Nyw3ICsy
MDQ5LDcgQEAgaW50IG5pX3JlYWRwYWdlX2NtcHIoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1
Y3QgcGFnZSAqcGFnZSkKIAl9Cgogb3V0OgotCS8qIEF0IHRoaXMgcG9pbnQsIGVyciBjb250YWlu
cyAwIG9yIC1FSU8gZGVwZW5kaW5nIG9uIHRoZSAiY3JpdGljYWwiIHBhZ2UgKi8KKwkvKiBBdCB0
aGlzIHBvaW50LCBlcnIgY29udGFpbnMgMCBvciAtRUlPIGRlcGVuZGluZyBvbiB0aGUgImNyaXRp
Y2FsIiBwYWdlLiAqLwogCW50ZnNfZnJlZShwYWdlcyk7CiAJdW5sb2NrX3BhZ2UocGFnZSk7CgpA
QCAtMjA5Niw5ICsyMDU4LDEwIEBAIGludCBuaV9yZWFkcGFnZV9jbXByKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgc3RydWN0IHBhZ2UgKnBhZ2UpCgogI2lmZGVmIENPTkZJR19OVEZTM19MWlhfWFBS
RVNTCiAvKgotICogZGVjb21wcmVzcyBsengveHByZXNzIGNvbXByZXNzZWQgZmlsZQotICogcmVt
b3ZlIEFUVFJfREFUQTo6V29mQ29tcHJlc3NlZERhdGEKLSAqIHJlbW92ZSBBVFRSX1JFUEFSU0UK
KyAqIG5pX2RlY29tcHJlc3NfZmlsZSAtIERlY29tcHJlc3MgTFpYL1hwcmVzcyBjb21wcmVzc2Vk
IGZpbGUuCisgKgorICogUmVtb3ZlIEFUVFJfREFUQTo6V29mQ29tcHJlc3NlZERhdGEuCisgKiBS
ZW1vdmUgQVRUUl9SRVBBUlNFLgogICovCiBpbnQgbmlfZGVjb21wcmVzc19maWxlKHN0cnVjdCBu
dGZzX2lub2RlICpuaSkKIHsKQEAgLTIxMTgsMTMgKzIwODEsMTMgQEAgaW50IG5pX2RlY29tcHJl
c3NfZmlsZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJc3RydWN0IG1mdF9pbm9kZSAqbWk7CiAJ
aW50IGVycjsKCi0JLyogY2x1c3RlcnMgZm9yIGRlY29tcHJlc3NlZCBkYXRhKi8KKwkvKiBDbHVz
dGVycyBmb3IgZGVjb21wcmVzc2VkIGRhdGEuICovCiAJY2VuZCA9IGJ5dGVzX3RvX2NsdXN0ZXIo
c2JpLCBpX3NpemUpOwoKIAlpZiAoIWlfc2l6ZSkKIAkJZ290byByZW1vdmVfd29mOwoKLQkvKiBj
aGVjayBpbiBhZHZhbmNlICovCisJLyogQ2hlY2sgaW4gYWR2YW5jZS4gKi8KIAlpZiAoY2VuZCA+
IHduZF96ZXJvZXMoJnNiaS0+dXNlZC5iaXRtYXApKSB7CiAJCWVyciA9IC1FTk9TUEM7CiAJCWdv
dG8gb3V0OwpAQCAtMjE0MCw3ICsyMTAzLDcgQEAgaW50IG5pX2RlY29tcHJlc3NfZmlsZShzdHJ1
Y3QgbnRmc19pbm9kZSAqbmkpCiAJfQoKIAkvKgotCSAqIFN0ZXAgMTogZGVjb21wcmVzcyBkYXRh
IGFuZCBjb3B5IHRvIG5ldyBhbGxvY2F0ZWQgY2x1c3RlcnMKKwkgKiBTdGVwIDE6IERlY29tcHJl
c3MgZGF0YSBhbmQgY29weSB0byBuZXcgYWxsb2NhdGVkIGNsdXN0ZXJzLgogCSAqLwogCWluZGV4
ID0gMDsKIAlmb3IgKHZibyA9IDA7IHZibyA8IGlfc2l6ZTsgdmJvICs9IGJ5dGVzKSB7CkBAIC0y
MjAyLDcgKzIxNjUsOCBAQCBpbnQgbmlfZGVjb21wcmVzc19maWxlKHN0cnVjdCBudGZzX2lub2Rl
ICpuaSkKCiByZW1vdmVfd29mOgogCS8qCi0JICogU3RlcCAyOiBkZWFsbG9jYXRlIGF0dHJpYnV0
ZXMgQVRUUl9EQVRBOjpXb2ZDb21wcmVzc2VkRGF0YSBhbmQgQVRUUl9SRVBBUlNFCisJICogU3Rl
cCAyOiBEZWFsbG9jYXRlIGF0dHJpYnV0ZXMgQVRUUl9EQVRBOjpXb2ZDb21wcmVzc2VkRGF0YQor
CSAqIGFuZCBBVFRSX1JFUEFSU0UuCiAJICovCiAJYXR0ciA9IE5VTEw7CiAJbGUgPSBOVUxMOwpA
QCAtMjIzNSwxMyArMjE5OSwxMyBAQCBpbnQgbmlfZGVjb21wcmVzc19maWxlKHN0cnVjdCBudGZz
X2lub2RlICpuaSkKIAkJYXNpemUgPSBsZTMyX3RvX2NwdShhdHRyLT5zaXplKTsKIAkJcm9mZiA9
IGxlMTZfdG9fY3B1KGF0dHItPm5yZXMucnVuX29mZik7CgotCQkvKnJ1bj09MSBtZWFucyB1bnBh
Y2sgYW5kIGRlYWxsb2NhdGUqLworCQkvKnJ1bj09MSAgTWVhbnMgdW5wYWNrIGFuZCBkZWFsbG9j
YXRlLiAqLwogCQlydW5fdW5wYWNrX2V4KFJVTl9ERUFMTE9DQVRFLCBzYmksIG5pLT5taS5ybm8s
IHN2Y24sIGV2Y24sIHN2Y24sCiAJCQkgICAgICBBZGQyUHRyKGF0dHIsIHJvZmYpLCBhc2l6ZSAt
IHJvZmYpOwogCX0KCiAJLyoKLQkgKiBTdGVwIDM6IHJlbW92ZSBhdHRyaWJ1dGUgQVRUUl9EQVRB
OjpXb2ZDb21wcmVzc2VkRGF0YQorCSAqIFN0ZXAgMzogUmVtb3ZlIGF0dHJpYnV0ZSBBVFRSX0RB
VEE6OldvZkNvbXByZXNzZWREYXRhLgogCSAqLwogCWVyciA9IG5pX3JlbW92ZV9hdHRyKG5pLCBB
VFRSX0RBVEEsIFdPRl9OQU1FLCBBUlJBWV9TSVpFKFdPRl9OQU1FKSwKIAkJCSAgICAgZmFsc2Us
IE5VTEwpOwpAQCAtMjI0OSwxNCArMjIxMywxNCBAQCBpbnQgbmlfZGVjb21wcmVzc19maWxlKHN0
cnVjdCBudGZzX2lub2RlICpuaSkKIAkJZ290byBvdXQ7CgogCS8qCi0JICogU3RlcCA0OiByZW1v
dmUgQVRUUl9SRVBBUlNFCisJICogU3RlcCA0OiBSZW1vdmUgQVRUUl9SRVBBUlNFLgogCSAqLwog
CWVyciA9IG5pX3JlbW92ZV9hdHRyKG5pLCBBVFRSX1JFUEFSU0UsIE5VTEwsIDAsIGZhbHNlLCBO
VUxMKTsKIAlpZiAoZXJyKQogCQlnb3RvIG91dDsKCiAJLyoKLQkgKiBTdGVwIDU6IHJlbW92ZSBz
cGFyc2UgZmxhZyBmcm9tIGRhdGEgYXR0cmlidXRlCisJICogU3RlcCA1OiBSZW1vdmUgc3BhcnNl
IGZsYWcgZnJvbSBkYXRhIGF0dHJpYnV0ZS4KIAkgKi8KIAlhdHRyID0gbmlfZmluZF9hdHRyKG5p
LCBOVUxMLCBOVUxMLCBBVFRSX0RBVEEsIE5VTEwsIDAsIE5VTEwsICZtaSk7CiAJaWYgKCFhdHRy
KSB7CkBAIC0yMjY1LDcgKzIyMjksNyBAQCBpbnQgbmlfZGVjb21wcmVzc19maWxlKHN0cnVjdCBu
dGZzX2lub2RlICpuaSkKIAl9CgogCWlmIChhdHRyLT5ub25fcmVzICYmIGlzX2F0dHJfc3BhcnNl
ZChhdHRyKSkgewotCQkvKiBzcGFyc2VkIGF0dHJpYnV0ZSBoZWFkZXIgaXMgOCBieXRlcyBiaWdn
ZXIgdGhhbiBub3JtYWwqLworCQkvKiBTYXJzZWQgYXR0cmlidXRlIGhlYWRlciBpcyA4IGJ5dGVz
IGJpZ2dlciB0aGFuIG5vcm1hbC4gKi8KIAkJc3RydWN0IE1GVF9SRUMgKnJlYyA9IG1pLT5tcmVj
OwogCQl1MzIgdXNlZCA9IGxlMzJfdG9fY3B1KHJlYy0+dXNlZCk7CiAJCXUzMiBhc2l6ZSA9IGxl
MzJfdG9fY3B1KGF0dHItPnNpemUpOwpAQCAtMjI4NSw3ICsyMjQ5LDcgQEAgaW50IG5pX2RlY29t
cHJlc3NfZmlsZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpCiAJCW1hcmtfaW5vZGVfZGlydHkoaW5v
ZGUpOwogCX0KCi0JLyogY2xlYXIgY2FjaGVkIGZsYWcgKi8KKwkvKiBDbGVhciBjYWNoZWQgZmxh
Zy4gKi8KIAluaS0+bmlfZmxhZ3MgJj0gfk5JX0ZMQUdfQ09NUFJFU1NFRF9NQVNLOwogCWlmIChu
aS0+ZmlsZS5vZmZzX3BhZ2UpIHsKIAkJcHV0X3BhZ2UobmktPmZpbGUub2Zmc19wYWdlKTsKQEAg
LTIzMDMsNyArMjI2Nyw5IEBAIGludCBuaV9kZWNvbXByZXNzX2ZpbGUoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pKQogCXJldHVybiBlcnI7CiB9CgotLyogZXh0ZXJuYWwgY29tcHJlc3Npb24gbHp4L3hw
cmVzcyAqLworLyoKKyAqIGRlY29tcHJlc3NfbHp4X3hwcmVzcyAtIEV4dGVybmFsIGNvbXByZXNz
aW9uIExaWC9YcHJlc3MuCisgKi8KIHN0YXRpYyBpbnQgZGVjb21wcmVzc19senhfeHByZXNzKHN0
cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgY29uc3QgY2hhciAqY21wciwKIAkJCQkgc2l6ZV90IGNt
cHJfc2l6ZSwgdm9pZCAqdW5jLCBzaXplX3QgdW5jX3NpemUsCiAJCQkJIHUzMiBmcmFtZV9zaXpl
KQpAQCAtMjMxMiw3ICsyMjc4LDcgQEAgc3RhdGljIGludCBkZWNvbXByZXNzX2x6eF94cHJlc3Mo
c3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBjb25zdCBjaGFyICpjbXByLAogCXZvaWQgKmN0eDsK
CiAJaWYgKGNtcHJfc2l6ZSA9PSB1bmNfc2l6ZSkgewotCQkvKiBmcmFtZSBub3QgY29tcHJlc3Nl
ZCAqLworCQkvKiBGcmFtZSBub3QgY29tcHJlc3NlZC4gKi8KIAkJbWVtY3B5KHVuYywgY21wciwg
dW5jX3NpemUpOwogCQlyZXR1cm4gMDsKIAl9CkBAIC0yMzIwLDEwICsyMjg2LDEwIEBAIHN0YXRp
YyBpbnQgZGVjb21wcmVzc19senhfeHByZXNzKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgY29u
c3QgY2hhciAqY21wciwKIAllcnIgPSAwOwogCWlmIChmcmFtZV9zaXplID09IDB4ODAwMCkgewog
CQltdXRleF9sb2NrKCZzYmktPmNvbXByZXNzLm10eF9sengpOwotCQkvKiBMWlg6IGZyYW1lIGNv
bXByZXNzZWQgKi8KKwkJLyogTFpYOiBGcmFtZSBjb21wcmVzc2VkLiAqLwogCQljdHggPSBzYmkt
PmNvbXByZXNzLmx6eDsKIAkJaWYgKCFjdHgpIHsKLQkJCS8qIExhenkgaW5pdGlhbGl6ZSBsengg
ZGVjb21wcmVzcyBjb250ZXh0ICovCisJCQkvKiBMYXp5IGluaXRpYWxpemUgTFpYIGRlY29tcHJl
c3MgY29udGV4dC4gKi8KIAkJCWN0eCA9IGx6eF9hbGxvY2F0ZV9kZWNvbXByZXNzb3IoKTsKIAkJ
CWlmICghY3R4KSB7CiAJCQkJZXJyID0gLUVOT01FTTsKQEAgLTIzMzQsMTcgKzIzMDAsMTcgQEAg
c3RhdGljIGludCBkZWNvbXByZXNzX2x6eF94cHJlc3Moc3RydWN0IG50ZnNfc2JfaW5mbyAqc2Jp
LCBjb25zdCBjaGFyICpjbXByLAogCQl9CgogCQlpZiAobHp4X2RlY29tcHJlc3MoY3R4LCBjbXBy
LCBjbXByX3NpemUsIHVuYywgdW5jX3NpemUpKSB7Ci0JCQkvKiB0cmVhdCBhbGwgZXJyb3JzIGFz
ICJpbnZhbGlkIGFyZ3VtZW50IiAqLworCQkJLyogVHJlYXQgYWxsIGVycm9ycyBhcyAiaW52YWxp
ZCBhcmd1bWVudCIuICovCiAJCQllcnIgPSAtRUlOVkFMOwogCQl9CiBvdXQxOgogCQltdXRleF91
bmxvY2soJnNiaS0+Y29tcHJlc3MubXR4X2x6eCk7CiAJfSBlbHNlIHsKLQkJLyogWFBSRVNTOiBm
cmFtZSBjb21wcmVzc2VkICovCisJCS8qIFhQUkVTUzogRnJhbWUgY29tcHJlc3NlZC4gKi8KIAkJ
bXV0ZXhfbG9jaygmc2JpLT5jb21wcmVzcy5tdHhfeHByZXNzKTsKIAkJY3R4ID0gc2JpLT5jb21w
cmVzcy54cHJlc3M7CiAJCWlmICghY3R4KSB7Ci0JCQkvKiBMYXp5IGluaXRpYWxpemUgeHByZXNz
IGRlY29tcHJlc3MgY29udGV4dCAqLworCQkJLyogTGF6eSBpbml0aWFsaXplIFhwcmVzcyBkZWNv
bXByZXNzIGNvbnRleHQgKi8KIAkJCWN0eCA9IHhwcmVzc19hbGxvY2F0ZV9kZWNvbXByZXNzb3Io
KTsKIAkJCWlmICghY3R4KSB7CiAJCQkJZXJyID0gLUVOT01FTTsKQEAgLTIzNTUsNyArMjMyMSw3
IEBAIHN0YXRpYyBpbnQgZGVjb21wcmVzc19senhfeHByZXNzKHN0cnVjdCBudGZzX3NiX2luZm8g
KnNiaSwgY29uc3QgY2hhciAqY21wciwKIAkJfQoKIAkJaWYgKHhwcmVzc19kZWNvbXByZXNzKGN0
eCwgY21wciwgY21wcl9zaXplLCB1bmMsIHVuY19zaXplKSkgewotCQkJLyogdHJlYXQgYWxsIGVy
cm9ycyBhcyAiaW52YWxpZCBhcmd1bWVudCIgKi8KKwkJCS8qIFRyZWF0IGFsbCBlcnJvcnMgYXMg
ImludmFsaWQgYXJndW1lbnQiLiAqLwogCQkJZXJyID0gLUVJTlZBTDsKIAkJfQogb3V0MjoKQEAg
LTIzNjgsNyArMjMzNCw3IEBAIHN0YXRpYyBpbnQgZGVjb21wcmVzc19senhfeHByZXNzKHN0cnVj
dCBudGZzX3NiX2luZm8gKnNiaSwgY29uc3QgY2hhciAqY21wciwKIC8qCiAgKiBuaV9yZWFkX2Zy
YW1lCiAgKgotICogcGFnZXMgLSBhcnJheSBvZiBsb2NrZWQgcGFnZXMKKyAqIFBhZ2VzIC0gYXJy
YXkgb2YgbG9ja2VkIHBhZ2VzLgogICovCiBpbnQgbmlfcmVhZF9mcmFtZShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksIHU2NCBmcmFtZV92Ym8sIHN0cnVjdCBwYWdlICoqcGFnZXMsCiAJCSAgdTMyIHBh
Z2VzX3Blcl9mcmFtZSkKQEAgLTIzOTAsNyArMjM1Niw4IEBAIGludCBuaV9yZWFkX2ZyYW1lKHN0
cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IGZyYW1lX3Zibywgc3RydWN0IHBhZ2UgKipwYWdlcywK
IAlDTFNUIGZyYW1lLCBjbHN0X2RhdGE7CgogCS8qCi0JICogVG8gc2ltcGxpZnkgZGVjb21wcmVz
cyBhbGdvcml0aG0gZG8gdm1hcCBmb3Igc291cmNlIGFuZCB0YXJnZXQgcGFnZXMKKwkgKiBUbyBz
aW1wbGlmeSBkZWNvbXByZXNzIGFsZ29yaXRobSBkbyB2bWFwIGZvciBzb3VyY2UKKwkgKiBhbmQg
dGFyZ2V0IHBhZ2VzLgogCSAqLwogCWZvciAoaSA9IDA7IGkgPCBwYWdlc19wZXJfZnJhbWU7IGkr
KykKIAkJa21hcChwYWdlc1tpXSk7CkBAIC0yNDQ3LDcgKzI0MTQsNyBAQCBpbnQgbmlfcmVhZF9m
cmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCBmcmFtZV92Ym8sIHN0cnVjdCBwYWdlICoq
cGFnZXMsCiAJCWNhc2UgMHg4MDAwOgogCQkJYnJlYWs7CiAJCWRlZmF1bHQ6Ci0JCQkvKiB1bmtu
b3duIGNvbXByZXNzaW9uICovCisJCQkvKiBVbmtub3duIGNvbXByZXNzaW9uLiAqLwogCQkJZXJy
ID0gLUVPUE5PVFNVUFA7CiAJCQlnb3RvIG91dDE7CiAJCX0KQEAgLTI1MDUsNyArMjQ3Miw3IEBA
IGludCBuaV9yZWFkX2ZyYW1lKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IGZyYW1lX3Zibywg
c3RydWN0IHBhZ2UgKipwYWdlcywKIAkJCWdvdG8gb3V0MTsKIAkJfQogCQl2Ym9fZGlzayA9IHZi
b19kYXRhOwotCQkvKiBsb2FkIGFsbCBydW5zIHRvIHJlYWQgW3Zib19kaXNrLXZib190bykgKi8K
KwkJLyogTG9hZCBhbGwgcnVucyB0byByZWFkIFt2Ym9fZGlzay12Ym9fdG8pLiAqLwogCQllcnIg
PSBhdHRyX2xvYWRfcnVuc19yYW5nZShuaSwgQVRUUl9EQVRBLCBXT0ZfTkFNRSwKIAkJCQkJICAg
QVJSQVlfU0laRShXT0ZfTkFNRSksIHJ1biwgdmJvX2Rpc2ssCiAJCQkJCSAgIHZib19kYXRhICsg
b25kaXNrX3NpemUpOwpAQCAtMjUxNiw3ICsyNDgzLDcgQEAgaW50IG5pX3JlYWRfZnJhbWUoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCB1NjQgZnJhbWVfdmJvLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAog
CQkJICAgICAgUEFHRV9TSElGVDsKICNlbmRpZgogCX0gZWxzZSBpZiAoaXNfYXR0cl9jb21wcmVz
c2VkKGF0dHIpKSB7Ci0JCS8qIGx6bnQgY29tcHJlc3Npb24qLworCQkvKiBMWk5UIGNvbXByZXNz
aW9uLiAqLwogCQlpZiAoc2JpLT5jbHVzdGVyX3NpemUgPiBOVEZTX0xaTlRfTUFYX0NMVVNURVIp
IHsKIAkJCWVyciA9IC1FT1BOT1RTVVBQOwogCQkJZ290byBvdXQxOwpAQCAtMjU0NCw3ICsyNTEx
LDcgQEAgaW50IG5pX3JlYWRfZnJhbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1NjQgZnJhbWVf
dmJvLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAogCQlvbmRpc2tfc2l6ZSA9IGNsc3RfZGF0YSA8PCBj
bHVzdGVyX2JpdHM7CgogCQlpZiAoY2xzdF9kYXRhID49IE5URlNfTFpOVF9DTFVTVEVSUykgewot
CQkJLyogZnJhbWUgaXMgbm90IGNvbXByZXNzZWQgKi8KKwkJCS8qIEZyYW1lIGlzIG5vdCBjb21w
cmVzc2VkLiAqLwogCQkJZG93bl9yZWFkKCZuaS0+ZmlsZS5ydW5fbG9jayk7CiAJCQllcnIgPSBu
dGZzX2Jpb19wYWdlcyhzYmksIHJ1biwgcGFnZXMsIHBhZ2VzX3Blcl9mcmFtZSwKIAkJCQkJICAg
ICBmcmFtZV92Ym8sIG9uZGlza19zaXplLApAQCAtMjU3Nyw3ICsyNTQ0LDcgQEAgaW50IG5pX3Jl
YWRfZnJhbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1NjQgZnJhbWVfdmJvLCBzdHJ1Y3QgcGFn
ZSAqKnBhZ2VzLAogCQlrbWFwKHBnKTsKIAl9CgotCS8qIHJlYWQgJ29uZGlza19zaXplJyBieXRl
cyBmcm9tIGRpc2sgKi8KKwkvKiBSZWFkICdvbmRpc2tfc2l6ZScgYnl0ZXMgZnJvbSBkaXNrLiAq
LwogCWRvd25fcmVhZCgmbmktPmZpbGUucnVuX2xvY2spOwogCWVyciA9IG50ZnNfYmlvX3BhZ2Vz
KHNiaSwgcnVuLCBwYWdlc19kaXNrLCBucGFnZXNfZGlzaywgdmJvX2Rpc2ssCiAJCQkgICAgIG9u
ZGlza19zaXplLCBSRVFfT1BfUkVBRCk7CkBAIC0yNTg2LDcgKzI1NTMsNyBAQCBpbnQgbmlfcmVh
ZF9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHU2NCBmcmFtZV92Ym8sIHN0cnVjdCBwYWdl
ICoqcGFnZXMsCiAJCWdvdG8gb3V0MzsKCiAJLyoKLQkgKiBUbyBzaW1wbGlmeSBkZWNvbXByZXNz
IGFsZ29yaXRobSBkbyB2bWFwIGZvciBzb3VyY2UgYW5kIHRhcmdldCBwYWdlcworCSAqIFRvIHNp
bXBsaWZ5IGRlY29tcHJlc3MgYWxnb3JpdGhtIGRvIHZtYXAgZm9yIHNvdXJjZSBhbmQgdGFyZ2V0
IHBhZ2VzLgogCSAqLwogCWZyYW1lX29uZGlzayA9IHZtYXAocGFnZXNfZGlzaywgbnBhZ2VzX2Rp
c2ssIFZNX01BUCwgUEFHRV9LRVJORUxfUk8pOwogCWlmICghZnJhbWVfb25kaXNrKSB7CkBAIC0y
NTk0LDcgKzI1NjEsNyBAQCBpbnQgbmlfcmVhZF9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IHU2NCBmcmFtZV92Ym8sIHN0cnVjdCBwYWdlICoqcGFnZXMsCiAJCWdvdG8gb3V0MzsKIAl9Cgot
CS8qIGRlY29tcHJlc3M6IGZyYW1lX29uZGlzayAtPiBmcmFtZV9tZW0gKi8KKwkvKiBEZWNvbXBy
ZXNzOiBGcmFtZV9vbmRpc2sgLT4gZnJhbWVfbWVtLiAqLwogI2lmZGVmIENPTkZJR19OVEZTM19M
WlhfWFBSRVNTCiAJaWYgKHJ1biAhPSAmbmktPmZpbGUucnVuKSB7CiAJCS8qIExaWCBvciBYUFJF
U1MgKi8KQEAgLTI2MDQsNyArMjU3MSw3IEBAIGludCBuaV9yZWFkX2ZyYW1lKHN0cnVjdCBudGZz
X2lub2RlICpuaSwgdTY0IGZyYW1lX3Zibywgc3RydWN0IHBhZ2UgKipwYWdlcywKIAl9IGVsc2UK
ICNlbmRpZgogCXsKLQkJLyogTFpOVCAtIG5hdGl2ZSBudGZzIGNvbXByZXNzaW9uICovCisJCS8q
IExaTlQgLSBOYXRpdmUgTlRGUyBjb21wcmVzc2lvbi4gKi8KIAkJdW5jX3NpemUgPSBkZWNvbXBy
ZXNzX2x6bnQoZnJhbWVfb25kaXNrLCBvbmRpc2tfc2l6ZSwgZnJhbWVfbWVtLAogCQkJCQkgICBm
cmFtZV9zaXplKTsKIAkJaWYgKChzc2l6ZV90KXVuY19zaXplIDwgMCkKQEAgLTI2NTIsNyArMjYx
OSw3IEBAIGludCBuaV9yZWFkX2ZyYW1lKHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IGZyYW1l
X3Zibywgc3RydWN0IHBhZ2UgKipwYWdlcywKIC8qCiAgKiBuaV93cml0ZV9mcmFtZQogICoKLSAq
IHBhZ2VzIC0gYXJyYXkgb2YgbG9ja2VkIHBhZ2VzCisgKiBQYWdlcyAtIEFycmF5IG9mIGxvY2tl
ZCBwYWdlcy4KICAqLwogaW50IG5pX3dyaXRlX2ZyYW1lKHN0cnVjdCBudGZzX2lub2RlICpuaSwg
c3RydWN0IHBhZ2UgKipwYWdlcywKIAkJICAgdTMyIHBhZ2VzX3Blcl9mcmFtZSkKQEAgLTI3MjIs
OSArMjY4OSw3IEBAIGludCBuaV93cml0ZV9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0
cnVjdCBwYWdlICoqcGFnZXMsCiAJCWttYXAocGcpOwogCX0KCi0JLyoKLQkgKiBUbyBzaW1wbGlm
eSBjb21wcmVzcyBhbGdvcml0aG0gZG8gdm1hcCBmb3Igc291cmNlIGFuZCB0YXJnZXQgcGFnZXMK
LQkgKi8KKwkvKiBUbyBzaW1wbGlmeSBjb21wcmVzcyBhbGdvcml0aG0gZG8gdm1hcCBmb3Igc291
cmNlIGFuZCB0YXJnZXQgcGFnZXMuICovCiAJZnJhbWVfb25kaXNrID0gdm1hcChwYWdlc19kaXNr
LCBwYWdlc19wZXJfZnJhbWUsIFZNX01BUCwgUEFHRV9LRVJORUwpOwogCWlmICghZnJhbWVfb25k
aXNrKSB7CiAJCWVyciA9IC1FTk9NRU07CkBAIC0yNzM0LDcgKzI2OTksNyBAQCBpbnQgbmlfd3Jp
dGVfZnJhbWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAogCWZv
ciAoaSA9IDA7IGkgPCBwYWdlc19wZXJfZnJhbWU7IGkrKykKIAkJa21hcChwYWdlc1tpXSk7Cgot
CS8qIG1hcCBpbi1tZW1vcnkgZnJhbWUgZm9yIHJlYWQtb25seSAqLworCS8qIE1hcCBpbi1tZW1v
cnkgZnJhbWUgZm9yIHJlYWQtb25seS4gKi8KIAlmcmFtZV9tZW0gPSB2bWFwKHBhZ2VzLCBwYWdl
c19wZXJfZnJhbWUsIFZNX01BUCwgUEFHRV9LRVJORUxfUk8pOwogCWlmICghZnJhbWVfbWVtKSB7
CiAJCWVyciA9IC1FTk9NRU07CkBAIC0yNzQ1LDkgKzI3MTAsOSBAQCBpbnQgbmlfd3JpdGVfZnJh
bWUoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAogCWx6bnQgPSBO
VUxMOwogCWlmICghc2JpLT5jb21wcmVzcy5sem50KSB7CiAJCS8qCi0JCSAqIGx6bnQgaW1wbGVt
ZW50cyB0d28gbGV2ZWxzIG9mIGNvbXByZXNzaW9uOgotCQkgKiAwIC0gc3RhbmRhcmQgY29tcHJl
c3Npb24KLQkJICogMSAtIGJlc3QgY29tcHJlc3Npb24sIHJlcXVpcmVzIGEgbG90IG9mIGNwdQor
CQkgKiBMWk5UIGltcGxlbWVudHMgdHdvIGxldmVscyBvZiBjb21wcmVzc2lvbjoKKwkJICogMCAt
IFN0YW5kYXJkIGNvbXByZXNzaW9uCisJCSAqIDEgLSBCZXN0IGNvbXByZXNzaW9uLCByZXF1aXJl
cyBhIGxvdCBvZiBjcHUKIAkJICogdXNlIG1vdW50IG9wdGlvbj8KIAkJICovCiAJCWx6bnQgPSBn
ZXRfbHpudF9jdHgoMCk7CkBAIC0yNzYxLDIyICsyNzI2LDIyIEBAIGludCBuaV93cml0ZV9mcmFt
ZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBwYWdlICoqcGFnZXMsCiAJCWx6bnQgPSBO
VUxMOwogCX0KCi0JLyogY29tcHJlc3M6IGZyYW1lX21lbSAtPiBmcmFtZV9vbmRpc2sgKi8KKwkv
KiBDb21wcmVzczogZnJhbWVfbWVtIC0+IGZyYW1lX29uZGlzay4gKi8KIAljb21wcl9zaXplID0g
Y29tcHJlc3NfbHpudChmcmFtZV9tZW0sIGZyYW1lX3NpemUsIGZyYW1lX29uZGlzaywKIAkJCQkg
ICBmcmFtZV9zaXplLCBzYmktPmNvbXByZXNzLmx6bnQpOwogCW11dGV4X3VubG9jaygmc2JpLT5j
b21wcmVzcy5tdHhfbHpudCk7CiAJbnRmc19mcmVlKGx6bnQpOwoKIAlpZiAoY29tcHJfc2l6ZSAr
IHNiaS0+Y2x1c3Rlcl9zaXplID4gZnJhbWVfc2l6ZSkgewotCQkvKiBmcmFtZSBpcyBub3QgY29t
cHJlc3NlZCAqLworCQkvKiBGcmFtZSBpcyBub3QgY29tcHJlc3NlZC4gKi8KIAkJY29tcHJfc2l6
ZSA9IGZyYW1lX3NpemU7CiAJCW9uZGlza19zaXplID0gZnJhbWVfc2l6ZTsKIAl9IGVsc2UgaWYg
KGNvbXByX3NpemUpIHsKLQkJLyogZnJhbWUgaXMgY29tcHJlc3NlZCAqLworCQkvKiBGcmFtZSBp
cyBjb21wcmVzc2VkLiAqLwogCQlvbmRpc2tfc2l6ZSA9IG50ZnNfdXBfY2x1c3RlcihzYmksIGNv
bXByX3NpemUpOwogCQltZW1zZXQoZnJhbWVfb25kaXNrICsgY29tcHJfc2l6ZSwgMCwgb25kaXNr
X3NpemUgLSBjb21wcl9zaXplKTsKIAl9IGVsc2UgewotCQkvKiBmcmFtZSBpcyBzcGFyc2VkICov
CisJCS8qIEZyYW1lIGlzIHNwYXJzZWQuICovCiAJCW9uZGlza19zaXplID0gMDsKIAl9CgpAQCAt
MjgyMCw3ICsyNzg1LDkgQEAgaW50IG5pX3dyaXRlX2ZyYW1lKHN0cnVjdCBudGZzX2lub2RlICpu
aSwgc3RydWN0IHBhZ2UgKipwYWdlcywKIH0KCiAvKgotICogdXBkYXRlIGR1cGxpY2F0ZSBpbmZv
IG9mIEFUVFJfRklMRV9OQU1FIGluIE1GVCBhbmQgaW4gcGFyZW50IGRpcmVjdG9yaWVzCisgKiBu
aV91cGRhdGVfcGFyZW50CisgKgorICogVXBkYXRlIGR1cGxpY2F0ZSBpbmZvIG9mIEFUVFJfRklM
RV9OQU1FIGluIE1GVCBhbmQgaW4gcGFyZW50IGRpcmVjdG9yaWVzLgogICovCiBzdGF0aWMgYm9v
bCBuaV91cGRhdGVfcGFyZW50KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IE5URlNfRFVQ
X0lORk8gKmR1cCwKIAkJCSAgICAgaW50IHN5bmMpCkBAIC0yODcyLDcgKzI4MzksNyBAQCBzdGF0
aWMgYm9vbCBuaV91cGRhdGVfcGFyZW50KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IE5U
RlNfRFVQX0lORk8gKmR1cCwKIAkJfQogCX0KCi0JLyogVE9ETzogZmlsbCByZXBhcnNlIGluZm8g
Ki8KKwkvKiBUT0RPOiBGaWxsIHJlcGFyc2UgaW5mby4gKi8KIAlkdXAtPnJlcGFyc2UgPSAwOwog
CWR1cC0+ZWFfc2l6ZSA9IDA7CgpAQCAtMjkwNyw5ICsyODc0LDkgQEAgc3RhdGljIGJvb2wgbmlf
dXBkYXRlX3BhcmVudChzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBOVEZTX0RVUF9JTkZP
ICpkdXAsCiAJCX0KCiAJCWlmICghYWN0aXZlKQotCQkJY29udGludWU7IC8qYXZvaWQgX193YWl0
X29uX2ZyZWVpbmdfaW5vZGUoaW5vZGUpOyAqLworCQkJY29udGludWU7IC8qIEF2b2lkIF9fd2Fp
dF9vbl9mcmVlaW5nX2lub2RlKGlub2RlKTsgKi8KCi0JCS8qbnRmc19pZ2V0NSBtYXkgc2xlZXAq
LworCQkvKiBudGZzX2lnZXQ1IG1heSBzbGVlcC4gKi8KIAkJZGlyID0gbnRmc19pZ2V0NShzYiwg
JmZuYW1lLT5ob21lLCBOVUxMKTsKIAkJaWYgKElTX0VSUihkaXIpKSB7CiAJCQludGZzX2lub2Rl
X3dhcm4oCkBAIC0yOTM2LDkgKzI5MDMsNyBAQCBzdGF0aWMgYm9vbCBuaV91cGRhdGVfcGFyZW50
KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IE5URlNfRFVQX0lORk8gKmR1cCwKIH0KCiAv
KgotICogbmlfd3JpdGVfaW5vZGUKLSAqCi0gKiB3cml0ZSBtZnQgYmFzZSByZWNvcmQgYW5kIGFs
bCBzdWJyZWNvcmRzIHRvIGRpc2sKKyAqIG5pX3dyaXRlX2lub2RlIC0gV3JpdGUgTUZUIGJhc2Ug
cmVjb3JkIGFuZCBhbGwgc3VicmVjb3JkcyB0byBkaXNrLgogICovCiBpbnQgbmlfd3JpdGVfaW5v
ZGUoc3RydWN0IGlub2RlICppbm9kZSwgaW50IHN5bmMsIGNvbnN0IGNoYXIgKmhpbnQpCiB7CkBA
IC0yOTU1LDcgKzI5MjAsNyBAQCBpbnQgbmlfd3JpdGVfaW5vZGUoc3RydWN0IGlub2RlICppbm9k
ZSwgaW50IHN5bmMsIGNvbnN0IGNoYXIgKmhpbnQpCiAJCXJldHVybiAwOwoKIAlpZiAoIW5pX3Ry
eWxvY2sobmkpKSB7Ci0JCS8qICduaScgaXMgdW5kZXIgbW9kaWZpY2F0aW9uLCBza2lwIGZvciBu
b3cgKi8KKwkJLyogJ25pJyBpcyB1bmRlciBtb2RpZmljYXRpb24sIHNraXAgZm9yIG5vdy4gKi8K
IAkJbWFya19pbm9kZV9kaXJ0eV9zeW5jKGlub2RlKTsKIAkJcmV0dXJuIDA7CiAJfQpAQCAtMjk2
NCw3ICsyOTI5LDcgQEAgaW50IG5pX3dyaXRlX2lub2RlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGlu
dCBzeW5jLCBjb25zdCBjaGFyICpoaW50KQogCSAgICAhKHNiaS0+ZmxhZ3MgJiBOVEZTX0ZMQUdT
X0xPR19SRVBMQVlJTkcpICYmIGlub2RlLT5pX25saW5rKSB7CiAJCWJvb2wgbW9kaWZpZWQgPSBm
YWxzZTsKCi0JCS8qIHVwZGF0ZSB0aW1lcyBpbiBzdGFuZGFyZCBhdHRyaWJ1dGUgKi8KKwkJLyog
VXBkYXRlIHRpbWVzIGluIHN0YW5kYXJkIGF0dHJpYnV0ZS4gKi8KIAkJc3RkID0gbmlfc3RkKG5p
KTsKIAkJaWYgKCFzdGQpIHsKIAkJCWVyciA9IC1FSU5WQUw7CkBAIC0zMDAyLDcgKzI5NjcsNyBA
QCBpbnQgbmlfd3JpdGVfaW5vZGUoc3RydWN0IGlub2RlICppbm9kZSwgaW50IHN5bmMsIGNvbnN0
IGNoYXIgKmhpbnQpCiAJCWlmICghbnRmc19pc19tZXRhX2ZpbGUoc2JpLCBpbm9kZS0+aV9pbm8p
ICYmCiAJCSAgICAobW9kaWZpZWQgfHwgKG5pLT5uaV9mbGFncyAmIE5JX0ZMQUdfVVBEQVRFX1BB
UkVOVCkpKSB7CiAJCQlkdXAuY3JfdGltZSA9IHN0ZC0+Y3JfdGltZTsKLQkJCS8qIE5vdCBjcml0
aWNhbCBpZiB0aGlzIGZ1bmN0aW9uIGZhaWwgKi8KKwkJCS8qIE5vdCBjcml0aWNhbCBpZiB0aGlz
IGZ1bmN0aW9uIGZhaWwuICovCiAJCQlyZV9kaXJ0eSA9IG5pX3VwZGF0ZV9wYXJlbnQobmksICZk
dXAsIHN5bmMpOwoKIAkJCWlmIChyZV9kaXJ0eSkKQEAgLTMwMTEsNyArMjk3Niw3IEBAIGludCBu
aV93cml0ZV9pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBpbnQgc3luYywgY29uc3QgY2hhciAq
aGludCkKIAkJCQluaS0+bmlfZmxhZ3MgJj0gfk5JX0ZMQUdfVVBEQVRFX1BBUkVOVDsKIAkJfQoK
LQkJLyogdXBkYXRlIGF0dHJpYnV0ZSBsaXN0ICovCisJCS8qIFVwZGF0ZSBhdHRyaWJ1dGUgbGlz
dC4gKi8KIAkJaWYgKG5pLT5hdHRyX2xpc3Quc2l6ZSAmJiBuaS0+YXR0cl9saXN0LmRpcnR5KSB7
CiAJCQlpZiAoaW5vZGUtPmlfaW5vICE9IE1GVF9SRUNfTUZUIHx8IHN5bmMpIHsKIAkJCQllcnIg
PSBuaV90cnlfcmVtb3ZlX2F0dHJfbGlzdChuaSk7CmRpZmYgLS1naXQgYS9mcy9udGZzMy9mc2xv
Zy5jIGIvZnMvbnRmczMvZnNsb2cuYwppbmRleCA1M2RhMTIyNTI0MDguLjEyZTRlYWZkODNmNiAx
MDA2NDQKLS0tIGEvZnMvbnRmczMvZnNsb2cuYworKysgYi9mcy9udGZzMy9mc2xvZy5jCkBAIC0z
MCw4ICszMCw4IEBACgogc3RydWN0IFJFU1RBUlRfSERSIHsKIAlzdHJ1Y3QgTlRGU19SRUNPUkRf
SEVBREVSIHJoZHI7IC8vICdSU1RSJwotCV9fbGUzMiBzeXNfcGFnZV9zaXplOyAvLyAweDEwOiBQ
YWdlIHNpemUgb2YgdGhlIHN5c3RlbSB3aGljaCBpbml0aWFsaXplZCB0aGUgbG9nCi0JX19sZTMy
IHBhZ2Vfc2l6ZTsgICAgIC8vIDB4MTQ6IExvZyBwYWdlIHNpemUgdXNlZCBmb3IgdGhpcyBsb2cg
ZmlsZQorCV9fbGUzMiBzeXNfcGFnZV9zaXplOyAvLyAweDEwOiBQYWdlIHNpemUgb2YgdGhlIHN5
c3RlbSB3aGljaCBpbml0aWFsaXplZCB0aGUgbG9nLgorCV9fbGUzMiBwYWdlX3NpemU7ICAgICAv
LyAweDE0OiBMb2cgcGFnZSBzaXplIHVzZWQgZm9yIHRoaXMgbG9nIGZpbGUuCiAJX19sZTE2IHJh
X29mZjsgICAgICAgIC8vIDB4MTg6CiAJX19sZTE2IG1pbm9yX3ZlcjsgICAgIC8vIDB4MUE6CiAJ
X19sZTE2IG1ham9yX3ZlcjsgICAgIC8vIDB4MUM6CkBAIC00NywyNiArNDcsMjYgQEAgc3RydWN0
IENMSUVOVF9SRUMgewogCV9fbGUxNiBwcmV2X2NsaWVudDsgLy8gMHgxMDoKIAlfX2xlMTYgbmV4
dF9jbGllbnQ7IC8vIDB4MTI6CiAJX19sZTE2IHNlcV9udW07ICAgICAvLyAweDE0OgotCXU4IGFs
aWduWzZdOyAgICAgICAgLy8gMHgxNgotCV9fbGUzMiBuYW1lX2J5dGVzOyAgLy8gMHgxQzogaW4g
Ynl0ZXMKLQlfX2xlMTYgbmFtZVszMl07ICAgIC8vIDB4MjA6IG5hbWUgb2YgY2xpZW50CisJdTgg
YWxpZ25bNl07ICAgICAgICAvLyAweDE2OgorCV9fbGUzMiBuYW1lX2J5dGVzOyAgLy8gMHgxQzog
SW4gYnl0ZXMuCisJX19sZTE2IG5hbWVbMzJdOyAgICAvLyAweDIwOiBOYW1lIG9mIGNsaWVudC4K
IH07Cgogc3RhdGljX2Fzc2VydChzaXplb2Yoc3RydWN0IENMSUVOVF9SRUMpID09IDB4NjApOwoK
IC8qIFR3byBjb3BpZXMgb2YgdGhlc2Ugd2lsbCBleGlzdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRo
ZSBsb2cgZmlsZSAqLwogc3RydWN0IFJFU1RBUlRfQVJFQSB7Ci0JX19sZTY0IGN1cnJlbnRfbHNu
OyAgICAvLyAweDAwOiBDdXJyZW50IGxvZ2ljYWwgZW5kIG9mIGxvZyBmaWxlCi0JX19sZTE2IGxv
Z19jbGllbnRzOyAgICAvLyAweDA4OiBNYXhpbXVtIG51bWJlciBvZiBjbGllbnRzCi0JX19sZTE2
IGNsaWVudF9pZHhbMl07ICAvLyAweDBBOiBmcmVlL3VzZSBpbmRleCBpbnRvIHRoZSBjbGllbnQg
cmVjb3JkIGFycmF5cwotCV9fbGUxNiBmbGFnczsgICAgICAgICAgLy8gMHgwRTogU2VlIFJFU1RB
UlRfU0lOR0xFX1BBR0VfSU8KLQlfX2xlMzIgc2VxX251bV9iaXRzOyAgIC8vIDB4MTA6IHRoZSBu
dW1iZXIgb2YgYml0cyBpbiBzZXF1ZW5jZSBudW1iZXIuCisJX19sZTY0IGN1cnJlbnRfbHNuOyAg
ICAvLyAweDAwOiBDdXJyZW50IGxvZ2ljYWwgZW5kIG9mIGxvZyBmaWxlLgorCV9fbGUxNiBsb2df
Y2xpZW50czsgICAgLy8gMHgwODogTWF4aW11bSBudW1iZXIgb2YgY2xpZW50cy4KKwlfX2xlMTYg
Y2xpZW50X2lkeFsyXTsgIC8vIDB4MEE6IEZyZWUvdXNlIGluZGV4IGludG8gdGhlIGNsaWVudCBy
ZWNvcmQgYXJyYXlzLgorCV9fbGUxNiBmbGFnczsgICAgICAgICAgLy8gMHgwRTogU2VlIFJFU1RB
UlRfU0lOR0xFX1BBR0VfSU8uCisJX19sZTMyIHNlcV9udW1fYml0czsgICAvLyAweDEwOiBUaGUg
bnVtYmVyIG9mIGJpdHMgaW4gc2VxdWVuY2UgbnVtYmVyLgogCV9fbGUxNiByYV9sZW47ICAgICAg
ICAgLy8gMHgxNDoKIAlfX2xlMTYgY2xpZW50X29mZjsgICAgIC8vIDB4MTY6CiAJX19sZTY0IGxf
c2l6ZTsgICAgICAgICAvLyAweDE4OiBVc2FibGUgbG9nIGZpbGUgc2l6ZS4KIAlfX2xlMzIgbGFz
dF9sc25fZGF0YV9sZW47IC8vIDB4MjA6Ci0JX19sZTE2IHJlY19oZHJfbGVuOyAgICAvLyAweDI0
OiBsb2cgcGFnZSBkYXRhIG9mZnNldAotCV9fbGUxNiBkYXRhX29mZjsgICAgICAgLy8gMHgyNjog
bG9nIHBhZ2UgZGF0YSBsZW5ndGgKKwlfX2xlMTYgcmVjX2hkcl9sZW47ICAgIC8vIDB4MjQ6IExv
ZyBwYWdlIGRhdGEgb2Zmc2V0LgorCV9fbGUxNiBkYXRhX29mZjsgICAgICAgLy8gMHgyNjogTG9n
IHBhZ2UgZGF0YSBsZW5ndGguCiAJX19sZTMyIG9wZW5fbG9nX2NvdW50OyAvLyAweDI4OgogCV9f
bGUzMiBhbGlnbls1XTsgICAgICAgLy8gMHgyQzoKIAlzdHJ1Y3QgQ0xJRU5UX1JFQyBjbGllbnRz
W107IC8vIDB4NDA6CkBAIC03NSwxMCArNzUsMTAgQEAgc3RydWN0IFJFU1RBUlRfQVJFQSB7CiBz
dHJ1Y3QgTE9HX1JFQ19IRFIgewogCV9fbGUxNiByZWRvX29wOyAgICAgIC8vIDB4MDA6ICBOVEZT
X0xPR19PUEVSQVRJT04KIAlfX2xlMTYgdW5kb19vcDsgICAgICAvLyAweDAyOiAgTlRGU19MT0df
T1BFUkFUSU9OCi0JX19sZTE2IHJlZG9fb2ZmOyAgICAgLy8gMHgwNDogIE9mZnNldCB0byBSZWRv
IHJlY29yZAotCV9fbGUxNiByZWRvX2xlbjsgICAgIC8vIDB4MDY6ICBSZWRvIGxlbmd0aAotCV9f
bGUxNiB1bmRvX29mZjsgICAgIC8vIDB4MDg6ICBPZmZzZXQgdG8gVW5kbyByZWNvcmQKLQlfX2xl
MTYgdW5kb19sZW47ICAgICAvLyAweDBBOiAgVW5kbyBsZW5ndGgKKwlfX2xlMTYgcmVkb19vZmY7
ICAgICAvLyAweDA0OiAgT2Zmc2V0IHRvIFJlZG8gcmVjb3JkLgorCV9fbGUxNiByZWRvX2xlbjsg
ICAgIC8vIDB4MDY6ICBSZWRvIGxlbmd0aC4KKwlfX2xlMTYgdW5kb19vZmY7ICAgICAvLyAweDA4
OiAgT2Zmc2V0IHRvIFVuZG8gcmVjb3JkLgorCV9fbGUxNiB1bmRvX2xlbjsgICAgIC8vIDB4MEE6
ICBVbmRvIGxlbmd0aC4KIAlfX2xlMTYgdGFyZ2V0X2F0dHI7ICAvLyAweDBDOgogCV9fbGUxNiBs
Y25zX2ZvbGxvdzsgIC8vIDB4MEU6CiAJX19sZTE2IHJlY29yZF9vZmY7ICAgLy8gMHgxMDoKQEAg
LTk1LDIwICs5NSwyMCBAQCBzdGF0aWNfYXNzZXJ0KHNpemVvZihzdHJ1Y3QgTE9HX1JFQ19IRFIp
ID09IDB4MjApOwogI2RlZmluZSBSRVNUQVJUX0VOVFJZX0FMTE9DQVRFRF9MRSBjcHVfdG9fbGUz
MigweEZGRkZGRkZGKQoKIHN0cnVjdCBSRVNUQVJUX1RBQkxFIHsKLQlfX2xlMTYgc2l6ZTsgICAg
ICAgLy8gMHgwMDogIEluIGJ5dGVzCi0JX19sZTE2IHVzZWQ7ICAgICAgIC8vIDB4MDI6IGVudHJp
ZXMKLQlfX2xlMTYgdG90YWw7ICAgICAgLy8gMHgwNDogZW50cmllcworCV9fbGUxNiBzaXplOyAg
ICAgICAvLyAweDAwOiBJbiBieXRlcworCV9fbGUxNiB1c2VkOyAgICAgICAvLyAweDAyOiBFbnRy
aWVzCisJX19sZTE2IHRvdGFsOyAgICAgIC8vIDB4MDQ6IEVudHJpZXMKIAlfX2xlMTYgcmVzWzNd
OyAgICAgLy8gMHgwNjoKIAlfX2xlMzIgZnJlZV9nb2FsOyAgLy8gMHgwQzoKLQlfX2xlMzIgZmly
c3RfZnJlZTsgLy8gMHgxMAotCV9fbGUzMiBsYXN0X2ZyZWU7ICAvLyAweDE0CisJX19sZTMyIGZp
cnN0X2ZyZWU7IC8vIDB4MTA6CisJX19sZTMyIGxhc3RfZnJlZTsgIC8vIDB4MTQ6CgogfTsKCiBz
dGF0aWNfYXNzZXJ0KHNpemVvZihzdHJ1Y3QgUkVTVEFSVF9UQUJMRSkgPT0gMHgxOCk7Cgogc3Ry
dWN0IEFUVFJfTkFNRV9FTlRSWSB7Ci0JX19sZTE2IG9mZjsgLy8gb2Zmc2V0IGluIHRoZSBPcGVu
IGF0dHJpYnV0ZSBUYWJsZQorCV9fbGUxNiBvZmY7IC8vIE9mZnNldCBpbiB0aGUgT3BlbiBhdHRy
aWJ1dGUgVGFibGUuCiAJX19sZTE2IG5hbWVfYnl0ZXM7CiAJX19sZTE2IG5hbWVbXTsKIH07CkBA
IC0xMjEsNyArMTIxLDcgQEAgc3RydWN0IE9QRU5fQVRUUl9FTlJUWSB7CiAJdTggaXNfYXR0cl9u
YW1lOyAgICAgICAgLy8gMHgwQjogRmFrZWQgZmllbGQgdG8gbWFuYWdlICdwdHInCiAJdTggbmFt
ZV9sZW47ICAgICAgICAgICAgLy8gMHgwQzogRmFrZWQgZmllbGQgdG8gbWFuYWdlICdwdHInCiAJ
dTggcmVzOwotCXN0cnVjdCBNRlRfUkVGIHJlZjsgLy8gMHgxMDogRmlsZSBSZWZlcmVuY2Ugb2Yg
ZmlsZSBjb250YWluaW5nIGF0dHJpYnV0ZQorCXN0cnVjdCBNRlRfUkVGIHJlZjsgICAgIC8vIDB4
MTA6IEZpbGUgUmVmZXJlbmNlIG9mIGZpbGUgY29udGFpbmluZyBhdHRyaWJ1dGUKIAlfX2xlNjQg
b3Blbl9yZWNvcmRfbHNuOyAvLyAweDE4OgogCXZvaWQgKnB0cjsgICAgICAgICAgICAgIC8vIDB4
MjA6CiB9OwpAQCAtMTMzLDEwICsxMzMsMTAgQEAgc3RydWN0IE9QRU5fQVRUUl9FTlJUWV8zMiB7
CiAJc3RydWN0IE1GVF9SRUYgcmVmOyAgICAgLy8gMHgwODoKIAlfX2xlNjQgb3Blbl9yZWNvcmRf
bHNuOyAvLyAweDEwOgogCXU4IGlzX2RpcnR5X3BhZ2VzOyAgICAgIC8vIDB4MTg6Ci0JdTggaXNf
YXR0cl9uYW1lOyAgICAgICAgLy8gMHgxOQorCXU4IGlzX2F0dHJfbmFtZTsgICAgICAgIC8vIDB4
MTk6CiAJdTggcmVzMVsyXTsKIAllbnVtIEFUVFJfVFlQRSB0eXBlOyAgICAvLyAweDFDOgotCXU4
IG5hbWVfbGVuOyAgICAgICAgICAgIC8vIDB4MjA6ICBpbiB3Y2hhcgorCXU4IG5hbWVfbGVuOyAg
ICAgICAgICAgIC8vIDB4MjA6IEluIHdjaGFyCiAJdTggcmVzMlszXTsKIAlfX2xlMzIgQXR0cmli
dXRlTmFtZTsgICAvLyAweDI0OgogCV9fbGUzMiBieXRlc19wZXJfaW5kZXg7IC8vIDB4Mjg6CkBA
IC0xNDcsMTUgKzE0NywxNSBAQCBzdHJ1Y3QgT1BFTl9BVFRSX0VOUlRZXzMyIHsKIHN0YXRpY19h
c3NlcnQoc2l6ZW9mKHN0cnVjdCBPUEVOX0FUVFJfRU5SVFkpIDwgU0laRU9GX09QRU5BVFRSSUJV
VEVFTlRSWTApOwoKIC8qCi0gKiBPbmUgZW50cnkgZXhpc3RzIGluIHRoZSBEaXJ0eSBQYWdlcyBU
YWJsZSBmb3IgZWFjaCBwYWdlIHdoaWNoIGlzIGRpcnR5IGF0IHRoZQotICogdGltZSB0aGUgUmVz
dGFydCBBcmVhIGlzIHdyaXR0ZW4KKyAqIE9uZSBlbnRyeSBleGlzdHMgaW4gdGhlIERpcnR5IFBh
Z2VzIFRhYmxlIGZvciBlYWNoIHBhZ2Ugd2hpY2ggaXMgZGlydHkgYXQKKyAqIHRoZSB0aW1lIHRo
ZSBSZXN0YXJ0IEFyZWEgaXMgd3JpdHRlbi4KICAqLwogc3RydWN0IERJUl9QQUdFX0VOVFJZIHsK
LQlfX2xlMzIgbmV4dDsgICAgICAgICAvLyAweDAwOiAgUkVTVEFSVF9FTlRSWV9BTExPQ0FURUQg
aWYgYWxsb2NhdGVkCi0JX19sZTMyIHRhcmdldF9hdHRyOyAgLy8gMHgwNDogIEluZGV4IGludG8g
dGhlIE9wZW4gYXR0cmlidXRlIFRhYmxlCisJX19sZTMyIG5leHQ7ICAgICAgICAgLy8gMHgwMDog
UkVTVEFSVF9FTlRSWV9BTExPQ0FURUQgaWYgYWxsb2NhdGVkCisJX19sZTMyIHRhcmdldF9hdHRy
OyAgLy8gMHgwNDogSW5kZXggaW50byB0aGUgT3BlbiBhdHRyaWJ1dGUgVGFibGUKIAlfX2xlMzIg
dHJhbnNmZXJfbGVuOyAvLyAweDA4OgogCV9fbGUzMiBsY25zX2ZvbGxvdzsgIC8vIDB4MEM6Ci0J
X19sZTY0IHZjbjsgICAgICAgICAgLy8gMHgxMDogIFZjbiBvZiBkaXJ0eSBwYWdlCisJX19sZTY0
IHZjbjsgICAgICAgICAgLy8gMHgxMDogVmNuIG9mIGRpcnR5IHBhZ2UKIAlfX2xlNjQgb2xkZXN0
X2xzbjsgICAvLyAweDE4OgogCV9fbGU2NCBwYWdlX2xjbnNbXTsgIC8vIDB4MjA6CiB9OwpAQCAt
MTY0LDE3ICsxNjQsMTcgQEAgc3RhdGljX2Fzc2VydChzaXplb2Yoc3RydWN0IERJUl9QQUdFX0VO
VFJZKSA9PSAweDIwKTsKCiAvKiAzMiBiaXQgdmVyc2lvbiBvZiAnc3RydWN0IERJUl9QQUdFX0VO
VFJZJyAqLwogc3RydWN0IERJUl9QQUdFX0VOVFJZXzMyIHsKLQlfX2xlMzIgbmV4dDsgICAgICAg
ICAvLyAweDAwOiAgUkVTVEFSVF9FTlRSWV9BTExPQ0FURUQgaWYgYWxsb2NhdGVkCi0JX19sZTMy
IHRhcmdldF9hdHRyOyAgLy8gMHgwNDogIEluZGV4IGludG8gdGhlIE9wZW4gYXR0cmlidXRlIFRh
YmxlCi0JX19sZTMyIHRyYW5zZmVyX2xlbjsgLy8gMHgwODoKLQlfX2xlMzIgbGNuc19mb2xsb3c7
ICAvLyAweDBDOgotCV9fbGUzMiByZXNlcnZlZDsgICAgIC8vIDB4MTA6Ci0JX19sZTMyIHZjbl9s
b3c7ICAgICAgLy8gMHgxNDogIFZjbiBvZiBkaXJ0eSBwYWdlCi0JX19sZTMyIHZjbl9oaTsgICAg
ICAgLy8gMHgxODogIFZjbiBvZiBkaXJ0eSBwYWdlCi0JX19sZTMyIG9sZGVzdF9sc25fbG93OyAv
LyAweDFDOgotCV9fbGUzMiBvbGRlc3RfbHNuX2hpOyAvLyAweDFDOgotCV9fbGUzMiBwYWdlX2xj
bnNfbG93OyAvLyAweDI0OgotCV9fbGUzMiBwYWdlX2xjbnNfaGk7IC8vIDB4MjQ6CisJX19sZTMy
IG5leHQ7CQkvLyAweDAwOiBSRVNUQVJUX0VOVFJZX0FMTE9DQVRFRCBpZiBhbGxvY2F0ZWQKKwlf
X2xlMzIgdGFyZ2V0X2F0dHI7CS8vIDB4MDQ6IEluZGV4IGludG8gdGhlIE9wZW4gYXR0cmlidXRl
IFRhYmxlCisJX19sZTMyIHRyYW5zZmVyX2xlbjsJLy8gMHgwODoKKwlfX2xlMzIgbGNuc19mb2xs
b3c7CS8vIDB4MEM6CisJX19sZTMyIHJlc2VydmVkOwkvLyAweDEwOgorCV9fbGUzMiB2Y25fbG93
OwkJLy8gMHgxNDogVmNuIG9mIGRpcnR5IHBhZ2UKKwlfX2xlMzIgdmNuX2hpOwkJLy8gMHgxODog
VmNuIG9mIGRpcnR5IHBhZ2UKKwlfX2xlMzIgb2xkZXN0X2xzbl9sb3c7CS8vIDB4MUM6CisJX19s
ZTMyIG9sZGVzdF9sc25faGk7CS8vIDB4MUM6CisJX19sZTMyIHBhZ2VfbGNuc19sb3c7CS8vIDB4
MjQ6CisJX19sZTMyIHBhZ2VfbGNuc19oaTsJLy8gMHgyNDoKIH07Cgogc3RhdGljX2Fzc2VydChv
ZmZzZXRvZihzdHJ1Y3QgRElSX1BBR0VfRU5UUllfMzIsIHZjbl9sb3cpID09IDB4MTQpOwpAQCAt
MjMzLDI3ICsyMzMsMjcgQEAgc3RydWN0IExDTl9SQU5HRSB7CiAJX19sZTY0IGxlbjsKIH07Cgot
LyogVGhlIGZvbGxvd2luZyB0eXBlIGRlZmluZXMgdGhlIGRpZmZlcmVudCBsb2cgcmVjb3JkIHR5
cGVzICovCisvKiBUaGUgZm9sbG93aW5nIHR5cGUgZGVmaW5lcyB0aGUgZGlmZmVyZW50IGxvZyBy
ZWNvcmQgdHlwZXMuICovCiAjZGVmaW5lIExmc0NsaWVudFJlY29yZCAgY3B1X3RvX2xlMzIoMSkK
ICNkZWZpbmUgTGZzQ2xpZW50UmVzdGFydCBjcHVfdG9fbGUzMigyKQoKLS8qIFRoaXMgaXMgdXNl
ZCB0byB1bmlxdWVseSBpZGVudGlmeSBhIGNsaWVudCBmb3IgYSBwYXJ0aWN1bGFyIGxvZyBmaWxl
ICovCisvKiBUaGlzIGlzIHVzZWQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgYSBjbGllbnQgZm9yIGEg
cGFydGljdWxhciBsb2cgZmlsZS4gKi8KIHN0cnVjdCBDTElFTlRfSUQgewogCV9fbGUxNiBzZXFf
bnVtOwogCV9fbGUxNiBjbGllbnRfaWR4OwogfTsKCi0vKiBUaGlzIGlzIHRoZSBoZWFkZXIgdGhh
dCBiZWdpbnMgZXZlcnkgTG9nIFJlY29yZCBpbiB0aGUgbG9nIGZpbGUgKi8KKy8qIFRoaXMgaXMg
dGhlIGhlYWRlciB0aGF0IGJlZ2lucyBldmVyeSBMb2cgUmVjb3JkIGluIHRoZSBsb2cgZmlsZS4g
Ki8KIHN0cnVjdCBMRlNfUkVDT1JEX0hEUiB7Ci0JX19sZTY0IHRoaXNfbHNuOyAgICAvLyAweDAw
OgotCV9fbGU2NCBjbGllbnRfcHJldl9sc247ICAvLyAweDA4OgotCV9fbGU2NCBjbGllbnRfdW5k
b19uZXh0X2xzbjsgLy8gMHgxMDoKLQlfX2xlMzIgY2xpZW50X2RhdGFfbGVuOyAgLy8gMHgxODoK
LQlzdHJ1Y3QgQ0xJRU5UX0lEIGNsaWVudDsgLy8gMHgxQzogT3duZXIgb2YgdGhpcyBsb2cgcmVj
b3JkCi0JX19sZTMyIHJlY29yZF90eXBlOyAvLyAweDIwOiBMZnNDbGllbnRSZWNvcmQgb3IgTGZz
Q2xpZW50UmVzdGFydAotCV9fbGUzMiB0cmFuc2FjdF9pZDsgLy8gMHgyNDoKLQlfX2xlMTYgZmxh
Z3M7ICAgICAgIC8vIDB4Mjg6CUxPR19SRUNPUkRfTVVMVElfUEFHRQotCXU4IGFsaWduWzZdOyAg
ICAgICAgLy8gMHgyQToKKwlfX2xlNjQgdGhpc19sc247CQkvLyAweDAwOgorCV9fbGU2NCBjbGll
bnRfcHJldl9sc247CQkvLyAweDA4OgorCV9fbGU2NCBjbGllbnRfdW5kb19uZXh0X2xzbjsJLy8g
MHgxMDoKKwlfX2xlMzIgY2xpZW50X2RhdGFfbGVuOwkJLy8gMHgxODoKKwlzdHJ1Y3QgQ0xJRU5U
X0lEIGNsaWVudDsJLy8gMHgxQzogT3duZXIgb2YgdGhpcyBsb2cgcmVjb3JkLgorCV9fbGUzMiBy
ZWNvcmRfdHlwZTsJCS8vIDB4MjA6IExmc0NsaWVudFJlY29yZCBvciBMZnNDbGllbnRSZXN0YXJ0
LgorCV9fbGUzMiB0cmFuc2FjdF9pZDsJCS8vIDB4MjQ6CisJX19sZTE2IGZsYWdzOwkJCS8vIDB4
Mjg6IExPR19SRUNPUkRfTVVMVElfUEFHRQorCXU4IGFsaWduWzZdOwkJCS8vIDB4MkE6CiB9OwoK
ICNkZWZpbmUgTE9HX1JFQ09SRF9NVUxUSV9QQUdFIGNwdV90b19sZTE2KDEpCkBAIC0yNjEsMjYg
KzI2MSwyNiBAQCBzdHJ1Y3QgTEZTX1JFQ09SRF9IRFIgewogc3RhdGljX2Fzc2VydChzaXplb2Yo
c3RydWN0IExGU19SRUNPUkRfSERSKSA9PSAweDMwKTsKCiBzdHJ1Y3QgTEZTX1JFQ09SRCB7Ci0J
X19sZTE2IG5leHRfcmVjb3JkX29mZjsgLy8gMHgwMDogT2Zmc2V0IG9mIHRoZSBmcmVlIHNwYWNl
IGluIHRoZSBwYWdlCi0JdTggYWxpZ25bNl07ICAgICAgICAgLy8gMHgwMjoKLQlfX2xlNjQgbGFz
dF9lbmRfbHNuOyAvLyAweDA4OiBsc24gZm9yIHRoZSBsYXN0IGxvZyByZWNvcmQgd2hpY2ggZW5k
cyBvbiB0aGUgcGFnZQorCV9fbGUxNiBuZXh0X3JlY29yZF9vZmY7CS8vIDB4MDA6IE9mZnNldCBv
ZiB0aGUgZnJlZSBzcGFjZSBpbiB0aGUgcGFnZSwKKwl1OCBhbGlnbls2XTsJCS8vIDB4MDI6CisJ
X19sZTY0IGxhc3RfZW5kX2xzbjsJLy8gMHgwODogbHNuIGZvciB0aGUgbGFzdCBsb2cgcmVjb3Jk
IHdoaWNoIGVuZHMgb24gdGhlIHBhZ2UsCiB9OwoKIHN0YXRpY19hc3NlcnQoc2l6ZW9mKHN0cnVj
dCBMRlNfUkVDT1JEKSA9PSAweDEwKTsKCiBzdHJ1Y3QgUkVDT1JEX1BBR0VfSERSIHsKLQlzdHJ1
Y3QgTlRGU19SRUNPUkRfSEVBREVSIHJoZHI7IC8vICdSQ1JEJwotCV9fbGUzMiByZmxhZ3M7ICAg
ICAvLyAweDEwOiAgU2VlIExPR19QQUdFX0xPR19SRUNPUkRfRU5ECi0JX19sZTE2IHBhZ2VfY291
bnQ7IC8vIDB4MTQ6Ci0JX19sZTE2IHBhZ2VfcG9zOyAgIC8vIDB4MTY6Ci0Jc3RydWN0IExGU19S
RUNPUkQgcmVjb3JkX2hkcjsgLy8gMHgxOAotCV9fbGUxNiBmaXh1cHNbMTBdOyAvLyAweDI4Ci0J
X19sZTMyIGZpbGVfb2ZmOyAgIC8vIDB4M2M6IHVzZWQgd2hlbiBtYWpvciB2ZXJzaW9uID49IDIK
KwlzdHJ1Y3QgTlRGU19SRUNPUkRfSEVBREVSIHJoZHI7CS8vICdSQ1JEJworCV9fbGUzMiByZmxh
Z3M7CQkJLy8gMHgxMDogU2VlIExPR19QQUdFX0xPR19SRUNPUkRfRU5ECisJX19sZTE2IHBhZ2Vf
Y291bnQ7CQkvLyAweDE0OgorCV9fbGUxNiBwYWdlX3BvczsJCS8vIDB4MTY6CisJc3RydWN0IExG
U19SRUNPUkQgcmVjb3JkX2hkcjsJLy8gMHgxODoKKwlfX2xlMTYgZml4dXBzWzEwXTsJCS8vIDB4
Mjg6CisJX19sZTMyIGZpbGVfb2ZmOwkJLy8gMHgzYzogVXNlZCB3aGVuIG1ham9yIHZlcnNpb24g
Pj0gMgogfTsKCiAvLyBjbGFuZy1mb3JtYXQgb24KCi0vLyBQYWdlIGNvbnRhaW5zIHRoZSBlbmQg
b2YgYSBsb2cgcmVjb3JkCisvLyBQYWdlIGNvbnRhaW5zIHRoZSBlbmQgb2YgYSBsb2cgcmVjb3Jk
LgogI2RlZmluZSBMT0dfUEFHRV9MT0dfUkVDT1JEX0VORCBjcHVfdG9fbGUzMigweDAwMDAwMDAx
KQoKIHN0YXRpYyBpbmxpbmUgYm9vbCBpc19sb2dfcmVjb3JkX2VuZChjb25zdCBzdHJ1Y3QgUkVD
T1JEX1BBR0VfSERSICpoZHIpCkBAIC0yOTQsNyArMjk0LDcgQEAgc3RhdGljX2Fzc2VydChvZmZz
ZXRvZihzdHJ1Y3QgUkVDT1JEX1BBR0VfSERSLCBmaWxlX29mZikgPT0gMHgzYyk7CiAgKiBFTkQg
b2YgTlRGUyBMT0cgc3RydWN0dXJlcwogICovCgotLyogRGVmaW5lIHNvbWUgdHVuaW5nIHBhcmFt
ZXRlcnMgdG8ga2VlcCB0aGUgcmVzdGFydCB0YWJsZXMgYSByZWFzb25hYmxlIHNpemUgKi8KKy8q
IERlZmluZSBzb21lIHR1bmluZyBwYXJhbWV0ZXJzIHRvIGtlZXAgdGhlIHJlc3RhcnQgdGFibGVz
IGEgcmVhc29uYWJsZSBzaXplLiAqLwogI2RlZmluZSBJTklUSUFMX05VTUJFUl9UUkFOU0FDVElP
TlMgNQoKIGVudW0gTlRGU19MT0dfT1BFUkFUSU9OIHsKQEAgLTM0Miw4ICszNDIsOSBAQCBlbnVt
IE5URlNfTE9HX09QRVJBVElPTiB7CiB9OwoKIC8qCi0gKiBBcnJheSBmb3IgbG9nIHJlY29yZHMg
d2hpY2ggcmVxdWlyZSBhIHRhcmdldCBhdHRyaWJ1dGUKLSAqIEEgdHJ1ZSBpbmRpY2F0ZXMgdGhh
dCB0aGUgY29ycmVzcG9uZGluZyByZXN0YXJ0IG9wZXJhdGlvbiByZXF1aXJlcyBhIHRhcmdldCBh
dHRyaWJ1dGUKKyAqIEFycmF5IGZvciBsb2cgcmVjb3JkcyB3aGljaCByZXF1aXJlIGEgdGFyZ2V0
IGF0dHJpYnV0ZS4KKyAqIEEgdHJ1ZSBpbmRpY2F0ZXMgdGhhdCB0aGUgY29ycmVzcG9uZGluZyBy
ZXN0YXJ0IG9wZXJhdGlvbgorICogcmVxdWlyZXMgYSB0YXJnZXQgYXR0cmlidXRlLgogICovCiBz
dGF0aWMgY29uc3QgdTggQXR0cmlidXRlUmVxdWlyZWRbXSA9IHsKIAkweEZDLCAweEZCLCAweEZG
LCAweDEwLCAweDA2LApAQCAtMzgwLDE0ICszODEsMTQgQEAgc3RhdGljIGlubGluZSBib29sIGNh
bl9za2lwX2FjdGlvbihlbnVtIE5URlNfTE9HX09QRVJBVElPTiBvcCkKCiBlbnVtIHsgbGNiX2N0
eF91bmRvX25leHQsIGxjYl9jdHhfcHJldiwgbGNiX2N0eF9uZXh0IH07CgotLyogYnl0ZXMgcGVy
IHJlc3RhcnQgdGFibGUgKi8KKy8qIEJ5dGVzIHBlciByZXN0YXJ0IHRhYmxlLiAqLwogc3RhdGlj
IGlubGluZSB1MzIgYnl0ZXNfcGVyX3J0KGNvbnN0IHN0cnVjdCBSRVNUQVJUX1RBQkxFICpydCkK
IHsKIAlyZXR1cm4gbGUxNl90b19jcHUocnQtPnVzZWQpICogbGUxNl90b19jcHUocnQtPnNpemUp
ICsKIAkgICAgICAgc2l6ZW9mKHN0cnVjdCBSRVNUQVJUX1RBQkxFKTsKIH0KCi0vKiBsb2cgcmVj
b3JkIGxlbmd0aCAqLworLyogTG9nIHJlY29yZCBsZW5ndGguICovCiBzdGF0aWMgaW5saW5lIHUz
MiBscmhfbGVuZ3RoKGNvbnN0IHN0cnVjdCBMT0dfUkVDX0hEUiAqbHIpCiB7CiAJdTE2IHQxNiA9
IGxlMTZfdG9fY3B1KGxyLT5sY25zX2ZvbGxvdyk7CkBAIC0zOTYsMTEgKzM5NywxMSBAQCBzdGF0
aWMgaW5saW5lIHUzMiBscmhfbGVuZ3RoKGNvbnN0IHN0cnVjdCBMT0dfUkVDX0hEUiAqbHIpCiB9
Cgogc3RydWN0IGxjYiB7Ci0Jc3RydWN0IExGU19SRUNPUkRfSERSICpscmg7IC8vIExvZyByZWNv
cmQgaGVhZGVyIG9mIHRoZSBjdXJyZW50IGxzbgorCXN0cnVjdCBMRlNfUkVDT1JEX0hEUiAqbHJo
OyAvLyBMb2cgcmVjb3JkIGhlYWRlciBvZiB0aGUgY3VycmVudCBsc24uCiAJc3RydWN0IExPR19S
RUNfSERSICpsb2dfcmVjOwogCXUzMiBjdHhfbW9kZTsgLy8gbGNiX2N0eF91bmRvX25leHQvbGNi
X2N0eF9wcmV2L2xjYl9jdHhfbmV4dAogCXN0cnVjdCBDTElFTlRfSUQgY2xpZW50OwotCWJvb2wg
YWxsb2M7IC8vIGlmIHRydWUgdGhlIHdlIHNob3VsZCBkZWFsbG9jYXRlICdsb2dfcmVjJworCWJv
b2wgYWxsb2M7IC8vIElmIHRydWUgdGhlIHdlIHNob3VsZCBkZWFsbG9jYXRlICdsb2dfcmVjJy4K
IH07Cgogc3RhdGljIHZvaWQgbGNiX3B1dChzdHJ1Y3QgbGNiICpsY2IpCkBAIC00MTEsMTEgKzQx
Miw3IEBAIHN0YXRpYyB2b2lkIGxjYl9wdXQoc3RydWN0IGxjYiAqbGNiKQogCW50ZnNfZnJlZShs
Y2IpOwogfQoKLS8qCi0gKiBvbGRlc3RfY2xpZW50X2xzbgotICoKLSAqIGZpbmQgdGhlIG9sZGVz
dCBsc24gZnJvbSBhY3RpdmUgY2xpZW50cy4KLSAqLworLyogRmluZCB0aGUgb2xkZXN0IGxzbiBm
cm9tIGFjdGl2ZSBjbGllbnRzLiAqLwogc3RhdGljIGlubGluZSB2b2lkIG9sZGVzdF9jbGllbnRf
bHNuKGNvbnN0IHN0cnVjdCBDTElFTlRfUkVDICpjYSwKIAkJCQkgICAgIF9fbGUxNiBuZXh0X2Ns
aWVudCwgdTY0ICpvbGRlc3RfbHNuKQogewpAQCAtNDIzLDcgKzQyMCw3IEBAIHN0YXRpYyBpbmxp
bmUgdm9pZCBvbGRlc3RfY2xpZW50X2xzbihjb25zdCBzdHJ1Y3QgQ0xJRU5UX1JFQyAqY2EsCiAJ
CWNvbnN0IHN0cnVjdCBDTElFTlRfUkVDICpjciA9IGNhICsgbGUxNl90b19jcHUobmV4dF9jbGll
bnQpOwogCQl1NjQgbHNuID0gbGU2NF90b19jcHUoY3ItPm9sZGVzdF9sc24pOwoKLQkJLyogaWdu
b3JlIHRoaXMgYmxvY2sgaWYgaXQncyBvbGRlc3QgbHNuIGlzIDAgKi8KKwkJLyogSWdub3JlIHRo
aXMgYmxvY2sgaWYgaXQncyBvbGRlc3QgbHNuIGlzIDAuICovCiAJCWlmIChsc24gJiYgbHNuIDwg
Km9sZGVzdF9sc24pCiAJCQkqb2xkZXN0X2xzbiA9IGxzbjsKCkBAIC00NDQsMTEgKzQ0MSwxMSBA
QCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfcnN0X3BhZ2VfaGRyX3ZhbGlkKHUzMiBmaWxlX29mZiwK
IAkJcmV0dXJuIGZhbHNlOwogCX0KCi0JLyogQ2hlY2sgdGhhdCBpZiB0aGUgZmlsZSBvZmZzZXQg
aXNuJ3QgMCwgaXQgaXMgdGhlIHN5c3RlbSBwYWdlIHNpemUgKi8KKwkvKiBDaGVjayB0aGF0IGlm
IHRoZSBmaWxlIG9mZnNldCBpc24ndCAwLCBpdCBpcyB0aGUgc3lzdGVtIHBhZ2Ugc2l6ZS4gKi8K
IAlpZiAoZmlsZV9vZmYgJiYgZmlsZV9vZmYgIT0gc3lzX3BhZ2UpCiAJCXJldHVybiBmYWxzZTsK
Ci0JLyogQ2hlY2sgc3VwcG9ydCB2ZXJzaW9uIDEuMSsgKi8KKwkvKiBDaGVjayBzdXBwb3J0IHZl
cnNpb24gMS4xKy4gKi8KIAlpZiAobGUxNl90b19jcHUocmhkci0+bWFqb3JfdmVyKSA8PSAxICYm
ICFyaGRyLT5taW5vcl92ZXIpCiAJCXJldHVybiBmYWxzZTsKCkBAIC00OTgsNyArNDk1LDcgQEAg
c3RhdGljIGlubGluZSBib29sIGlzX3JzdF9hcmVhX3ZhbGlkKGNvbnN0IHN0cnVjdCBSRVNUQVJU
X0hEUiAqcmhkcikKCiAJLyoKIAkgKiBDaGVjayB0aGUgcmVzdGFydCBsZW5ndGggZmllbGQgYW5k
IHdoZXRoZXIgdGhlIGVudGlyZQotCSAqIHJlc3RhcnQgYXJlYSBpcyBjb250YWluZWQgdGhhdCBs
ZW5ndGgKKwkgKiByZXN0YXJ0IGFyZWEgaXMgY29udGFpbmVkIHRoYXQgbGVuZ3RoLgogCSAqLwog
CWlmIChsZTE2X3RvX2NwdShyaGRyLT5yYV9vZmYpICsgbGUxNl90b19jcHUocmEtPnJhX2xlbikg
PiBzeXNfcGFnZSB8fAogCSAgICBvZmYgPiBsZTE2X3RvX2NwdShyYS0+cmFfbGVuKSkgewpAQCAt
NTA3LDcgKzUwNCw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpc19yc3RfYXJlYV92YWxpZChjb25z
dCBzdHJ1Y3QgUkVTVEFSVF9IRFIgKnJoZHIpCgogCS8qCiAJICogQXMgYSBmaW5hbCBjaGVjayBt
YWtlIHN1cmUgdGhhdCB0aGUgdXNlIGxpc3QgYW5kIHRoZSBmcmVlIGxpc3QKLQkgKiBhcmUgZWl0
aGVyIGVtcHR5IG9yIHBvaW50IHRvIGEgdmFsaWQgY2xpZW50CisJICogYXJlIGVpdGhlciBlbXB0
eSBvciBwb2ludCB0byBhIHZhbGlkIGNsaWVudC4KIAkgKi8KIAlmbCA9IGxlMTZfdG9fY3B1KHJh
LT5jbGllbnRfaWR4WzBdKTsKIAl1bCA9IGxlMTZfdG9fY3B1KHJhLT5jbGllbnRfaWR4WzFdKTsK
QEAgLTUxNSw3ICs1MTIsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfcnN0X2FyZWFfdmFsaWQo
Y29uc3Qgc3RydWN0IFJFU1RBUlRfSERSICpyaGRyKQogCSAgICAodWwgIT0gTEZTX05PX0NMSUVO
VCAmJiB1bCA+PSBjbCkpCiAJCXJldHVybiBmYWxzZTsKCi0JLyogTWFrZSBzdXJlIHRoZSBzZXF1
ZW5jZSBudW1iZXIgYml0cyBtYXRjaCB0aGUgbG9nIGZpbGUgc2l6ZSAqLworCS8qIE1ha2Ugc3Vy
ZSB0aGUgc2VxdWVuY2UgbnVtYmVyIGJpdHMgbWF0Y2ggdGhlIGxvZyBmaWxlIHNpemUuICovCiAJ
bF9zaXplID0gbGU2NF90b19jcHUocmEtPmxfc2l6ZSk7CgogCWZpbGVfZGF0X2JpdHMgPSBzaXpl
b2YodTY0KSAqIDggLSBsZTMyX3RvX2NwdShyYS0+c2VxX251bV9iaXRzKTsKQEAgLTUyNSw3ICs1
MjIsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfcnN0X2FyZWFfdmFsaWQoY29uc3Qgc3RydWN0
IFJFU1RBUlRfSERSICpyaGRyKQogCQlyZXR1cm4gZmFsc2U7CiAJfQoKLQkvKiBUaGUgbG9nIHBh
Z2UgZGF0YSBvZmZzZXQgYW5kIHJlY29yZCBoZWFkZXIgbGVuZ3RoIG11c3QgYmUgcXVhZC1hbGln
bmVkICovCisJLyogVGhlIGxvZyBwYWdlIGRhdGEgb2Zmc2V0IGFuZCByZWNvcmQgaGVhZGVyIGxl
bmd0aCBtdXN0IGJlIHF1YWQtYWxpZ25lZC4gKi8KIAlpZiAoIUlzUXVhZEFsaWduZWQobGUxNl90
b19jcHUocmEtPmRhdGFfb2ZmKSkgfHwKIAkgICAgIUlzUXVhZEFsaWduZWQobGUxNl90b19jcHUo
cmEtPnJlY19oZHJfbGVuKSkpCiAJCXJldHVybiBmYWxzZTsKQEAgLTU0NSwxMyArNTQyLDEzIEBA
IHN0YXRpYyBpbmxpbmUgYm9vbCBpc19jbGllbnRfYXJlYV92YWxpZChjb25zdCBzdHJ1Y3QgUkVT
VEFSVF9IRFIgKnJoZHIsCiAJaWYgKHVzYV9lcnJvciAmJiByYV9sZW4gKyBybyA+IFNFQ1RPUl9T
SVpFIC0gc2l6ZW9mKHNob3J0KSkKIAkJcmV0dXJuIGZhbHNlOwoKLQkvKiBGaW5kIHRoZSBzdGFy
dCBvZiB0aGUgY2xpZW50IGFycmF5ICovCisJLyogRmluZCB0aGUgc3RhcnQgb2YgdGhlIGNsaWVu
dCBhcnJheS4gKi8KIAljYSA9IEFkZDJQdHIocmEsIGxlMTZfdG9fY3B1KHJhLT5jbGllbnRfb2Zm
KSk7CgogCS8qCi0JICogU3RhcnQgd2l0aCB0aGUgZnJlZSBsaXN0Ci0JICogQ2hlY2sgdGhhdCBh
bGwgdGhlIGNsaWVudHMgYXJlIHZhbGlkIGFuZCB0aGF0IHRoZXJlIGlzbid0IGEgY3ljbGUKLQkg
KiBEbyB0aGUgaW4tdXNlIGxpc3Qgb24gdGhlIHNlY29uZCBwYXNzCisJICogU3RhcnQgd2l0aCB0
aGUgZnJlZSBsaXN0LgorCSAqIENoZWNrIHRoYXQgYWxsIHRoZSBjbGllbnRzIGFyZSB2YWxpZCBh
bmQgdGhhdCB0aGVyZSBpc24ndCBhIGN5Y2xlLgorCSAqIERvIHRoZSBpbi11c2UgbGlzdCBvbiB0
aGUgc2Vjb25kIHBhc3MuCiAJICovCiAJZm9yIChpID0gMDsgaSA8IDI7IGkrKykgewogCQl1MTYg
Y2xpZW50X2lkeCA9IGxlMTZfdG9fY3B1KHJhLT5jbGllbnRfaWR4W2ldKTsKQEAgLTU4NCw3ICs1
ODEsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfY2xpZW50X2FyZWFfdmFsaWQoY29uc3Qgc3Ry
dWN0IFJFU1RBUlRfSERSICpyaGRyLAogLyoKICAqIHJlbW92ZV9jbGllbnQKICAqCi0gKiByZW1v
dmUgYSBjbGllbnQgcmVjb3JkIGZyb20gYSBjbGllbnQgcmVjb3JkIGxpc3QgYW4gcmVzdGFydCBh
cmVhCisgKiBSZW1vdmUgYSBjbGllbnQgcmVjb3JkIGZyb20gYSBjbGllbnQgcmVjb3JkIGxpc3Qg
YW4gcmVzdGFydCBhcmVhLgogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgcmVtb3ZlX2NsaWVudChz
dHJ1Y3QgQ0xJRU5UX1JFQyAqY2EsCiAJCQkJIGNvbnN0IHN0cnVjdCBDTElFTlRfUkVDICpjciwg
X19sZTE2ICpoZWFkKQpAQCAtNTk5LDkgKzU5Niw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCByZW1v
dmVfY2xpZW50KHN0cnVjdCBDTElFTlRfUkVDICpjYSwKIH0KCiAvKgotICogYWRkX2NsaWVudAot
ICoKLSAqIGFkZCBhIGNsaWVudCByZWNvcmQgdG8gdGhlIHN0YXJ0IG9mIGEgbGlzdAorICogYWRk
X2NsaWVudCAtIEFkZCBhIGNsaWVudCByZWNvcmQgdG8gdGhlIHN0YXJ0IG9mIGEgbGlzdC4KICAq
Lwogc3RhdGljIGlubGluZSB2b2lkIGFkZF9jbGllbnQoc3RydWN0IENMSUVOVF9SRUMgKmNhLCB1
MTYgaW5kZXgsIF9fbGUxNiAqaGVhZCkKIHsKQEAgLTYxNiwxMCArNjExLDYgQEAgc3RhdGljIGlu
bGluZSB2b2lkIGFkZF9jbGllbnQoc3RydWN0IENMSUVOVF9SRUMgKmNhLCB1MTYgaW5kZXgsIF9f
bGUxNiAqaGVhZCkKIAkqaGVhZCA9IGNwdV90b19sZTE2KGluZGV4KTsKIH0KCi0vKgotICogZW51
bV9yc3RibAotICoKLSAqLwogc3RhdGljIGlubGluZSB2b2lkICplbnVtX3JzdGJsKHN0cnVjdCBS
RVNUQVJUX1RBQkxFICp0LCB2b2lkICpjKQogewogCV9fbGUzMiAqZTsKQEAgLTYzNCw3ICs2MjUs
NyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgKmVudW1fcnN0Ymwoc3RydWN0IFJFU1RBUlRfVEFCTEUg
KnQsIHZvaWQgKmMpCiAJCWUgPSBBZGQyUHRyKGMsIHJzaXplKTsKIAl9CgotCS8qIExvb3AgdW50
aWwgd2UgaGl0IHRoZSBmaXJzdCBvbmUgYWxsb2NhdGVkLCBvciB0aGUgZW5kIG9mIHRoZSBsaXN0
ICovCisJLyogTG9vcCB1bnRpbCB3ZSBoaXQgdGhlIGZpcnN0IG9uZSBhbGxvY2F0ZWQsIG9yIHRo
ZSBlbmQgb2YgdGhlIGxpc3QuICovCiAJZm9yIChicHJ0ID0gYnl0ZXNfcGVyX3J0KHQpOyBQdHJP
ZmZzZXQodCwgZSkgPCBicHJ0OwogCSAgICAgZSA9IEFkZDJQdHIoZSwgcnNpemUpKSB7CiAJCWlm
ICgqZSA9PSBSRVNUQVJUX0VOVFJZX0FMTE9DQVRFRF9MRSkKQEAgLTY0NCw5ICs2MzUsNyBAQCBz
dGF0aWMgaW5saW5lIHZvaWQgKmVudW1fcnN0Ymwoc3RydWN0IFJFU1RBUlRfVEFCTEUgKnQsIHZv
aWQgKmMpCiB9CgogLyoKLSAqIGZpbmRfZHAKLSAqCi0gKiBzZWFyY2hlcyBmb3IgYSAndmNuJyBp
biBEaXJ0eSBQYWdlIFRhYmxlLAorICogZmluZF9kcCAtIFNlYXJjaCBmb3IgYSBAdmNuIGluIERp
cnR5IFBhZ2UgVGFibGUuCiAgKi8KIHN0YXRpYyBpbmxpbmUgc3RydWN0IERJUl9QQUdFX0VOVFJZ
ICpmaW5kX2RwKHN0cnVjdCBSRVNUQVJUX1RBQkxFICpkcHRibCwKIAkJCQkJICAgICB1MzIgdGFy
Z2V0X2F0dHIsIHU2NCB2Y24pCkBAIC02NzAsMTAgKzY1OSwxMCBAQCBzdGF0aWMgaW5saW5lIHUz
MiBub3JtX2ZpbGVfcGFnZSh1MzIgcGFnZV9zaXplLCB1MzIgKmxfc2l6ZSwgYm9vbCB1c2VfZGVm
YXVsdCkKIAlpZiAodXNlX2RlZmF1bHQpCiAJCXBhZ2Vfc2l6ZSA9IERlZmF1bHRMb2dQYWdlU2l6
ZTsKCi0JLyogUm91bmQgdGhlIGZpbGUgc2l6ZSBkb3duIHRvIGEgc3lzdGVtIHBhZ2UgYm91bmRh
cnkgKi8KKwkvKiBSb3VuZCB0aGUgZmlsZSBzaXplIGRvd24gdG8gYSBzeXN0ZW0gcGFnZSBib3Vu
ZGFyeS4gKi8KIAkqbF9zaXplICY9IH4ocGFnZV9zaXplIC0gMSk7CgotCS8qIEZpbGUgc2hvdWxk
IGNvbnRhaW4gYXQgbGVhc3QgMiByZXN0YXJ0IHBhZ2VzIGFuZCBNaW5Mb2dSZWNvcmRQYWdlcyBw
YWdlcyAqLworCS8qIEZpbGUgc2hvdWxkIGNvbnRhaW4gYXQgbGVhc3QgMiByZXN0YXJ0IHBhZ2Vz
IGFuZCBNaW5Mb2dSZWNvcmRQYWdlcyBwYWdlcy4gKi8KIAlpZiAoKmxfc2l6ZSA8IChNaW5Mb2dS
ZWNvcmRQYWdlcyArIDIpICogcGFnZV9zaXplKQogCQlyZXR1cm4gMDsKCkBAIC03NDMsOCArNzMy
LDkgQEAgc3RhdGljIGJvb2wgY2hlY2tfcnN0YmwoY29uc3Qgc3RydWN0IFJFU1RBUlRfVEFCTEUg
KnJ0LCBzaXplX3QgYnl0ZXMpCiAJCXJldHVybiBmYWxzZTsKIAl9CgotCS8qIFZlcmlmeSBlYWNo
IGVudHJ5IGlzIGVpdGhlciBhbGxvY2F0ZWQgb3IgcG9pbnRzCi0JICogdG8gYSB2YWxpZCBvZmZz
ZXQgdGhlIHRhYmxlCisJLyoKKwkgKiBWZXJpZnkgZWFjaCBlbnRyeSBpcyBlaXRoZXIgYWxsb2Nh
dGVkIG9yIHBvaW50cworCSAqIHRvIGEgdmFsaWQgb2Zmc2V0IHRoZSB0YWJsZS4KIAkgKi8KIAlm
b3IgKGkgPSAwOyBpIDwgbmU7IGkrKykgewogCQlvZmYgPSBsZTMyX3RvX2NwdSgqKF9fbGUzMiAq
KUFkZDJQdHIoCkBAIC03NTcsOCArNzQ3LDkgQEAgc3RhdGljIGJvb2wgY2hlY2tfcnN0YmwoY29u
c3Qgc3RydWN0IFJFU1RBUlRfVEFCTEUgKnJ0LCBzaXplX3QgYnl0ZXMpCiAJCX0KIAl9CgotCS8q
IFdhbGsgdGhyb3VnaCB0aGUgbGlzdCBoZWFkZWQgYnkgdGhlIGZpcnN0IGVudHJ5IHRvIG1ha2UK
LQkgKiBzdXJlIG5vbmUgb2YgdGhlIGVudHJpZXMgYXJlIGN1cnJlbnRseSBiZWluZyB1c2VkCisJ
LyoKKwkgKiBXYWxrIHRocm91Z2ggdGhlIGxpc3QgaGVhZGVkIGJ5IHRoZSBmaXJzdCBlbnRyeSB0
byBtYWtlCisJICogc3VyZSBub25lIG9mIHRoZSBlbnRyaWVzIGFyZSBjdXJyZW50bHkgYmVpbmcg
dXNlZC4KIAkgKi8KIAlmb3IgKG9mZiA9IGZmOyBvZmY7KSB7CiAJCWlmIChvZmYgPT0gUkVTVEFS
VF9FTlRSWV9BTExPQ0FURUQpCkBAIC03NzEsOSArNzYyLDcgQEAgc3RhdGljIGJvb2wgY2hlY2tf
cnN0YmwoY29uc3Qgc3RydWN0IFJFU1RBUlRfVEFCTEUgKnJ0LCBzaXplX3QgYnl0ZXMpCiB9Cgog
LyoKLSAqIGZyZWVfcnN0dGJsX2lkeAotICoKLSAqIGZyZWVzIGEgcHJldmlvdXNseSBhbGxvY2F0
ZWQgaW5kZXggYSBSZXN0YXJ0IFRhYmxlLgorICogZnJlZV9yc3R0YmxfaWR4IC0gRnJlZSBhIHBy
ZXZpb3VzbHkgYWxsb2NhdGVkIGluZGV4IGEgUmVzdGFydCBUYWJsZS4KICAqLwogc3RhdGljIGlu
bGluZSB2b2lkIGZyZWVfcnN0dGJsX2lkeChzdHJ1Y3QgUkVTVEFSVF9UQUJMRSAqcnQsIHUzMiBv
ZmYpCiB7CkBAIC04NTYsNyArODQ1LDcgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgUkVTVEFSVF9U
QUJMRSAqZXh0ZW5kX3JzdHRibChzdHJ1Y3QgUkVTVEFSVF9UQUJMRSAqdGJsLAogLyoKICAqIGFs
bG9jX3JzdHRibF9pZHgKICAqCi0gKiBhbGxvY2F0ZXMgYW4gaW5kZXggZnJvbSB3aXRoaW4gYSBw
cmV2aW91c2x5IGluaXRpYWxpemVkIFJlc3RhcnQgVGFibGUKKyAqIEFsbG9jYXRlIGFuIGluZGV4
IGZyb20gd2l0aGluIGEgcHJldmlvdXNseSBpbml0aWFsaXplZCBSZXN0YXJ0IFRhYmxlLgogICov
CiBzdGF0aWMgaW5saW5lIHZvaWQgKmFsbG9jX3JzdHRibF9pZHgoc3RydWN0IFJFU1RBUlRfVEFC
TEUgKip0YmwpCiB7CkBAIC04OTAsNyArODc5LDcgQEAgc3RhdGljIGlubGluZSB2b2lkICphbGxv
Y19yc3R0YmxfaWR4KHN0cnVjdCBSRVNUQVJUX1RBQkxFICoqdGJsKQogLyoKICAqIGFsbG9jX3Jz
dHRibF9mcm9tX2lkeAogICoKLSAqIGFsbG9jYXRlcyBhIHNwZWNpZmljIGluZGV4IGZyb20gd2l0
aGluIGEgcHJldmlvdXNseSBpbml0aWFsaXplZCBSZXN0YXJ0IFRhYmxlCisgKiBBbGxvY2F0ZSBh
IHNwZWNpZmljIGluZGV4IGZyb20gd2l0aGluIGEgcHJldmlvdXNseSBpbml0aWFsaXplZCBSZXN0
YXJ0IFRhYmxlLgogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgKmFsbG9jX3JzdHRibF9mcm9tX2lk
eChzdHJ1Y3QgUkVTVEFSVF9UQUJMRSAqKnRibCwgdTMyIHZibykKIHsKQEAgLTkwMCwyMyArODg5
LDI0IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCAqYWxsb2NfcnN0dGJsX2Zyb21faWR4KHN0cnVjdCBS
RVNUQVJUX1RBQkxFICoqdGJsLCB1MzIgdmJvKQogCXUzMiBieXRlcyA9IGJ5dGVzX3Blcl9ydChy
dCk7CiAJdTE2IGVzaXplID0gbGUxNl90b19jcHUocnQtPnNpemUpOwoKLQkvKiBJZiB0aGUgZW50
cnkgaXMgbm90IHRoZSB0YWJsZSwgd2Ugd2lsbCBoYXZlIHRvIGV4dGVuZCB0aGUgdGFibGUgKi8K
KwkvKiBJZiB0aGUgZW50cnkgaXMgbm90IHRoZSB0YWJsZSwgd2Ugd2lsbCBoYXZlIHRvIGV4dGVu
ZCB0aGUgdGFibGUuICovCiAJaWYgKHZibyA+PSBieXRlcykgewogCQkvKgotCQkgKiBleHRlbmQg
dGhlIHNpemUgYnkgY29tcHV0aW5nIHRoZSBudW1iZXIgb2YgZW50cmllcyBiZXR3ZWVuCi0JCSAq
IHRoZSBleGlzdGluZyBzaXplIGFuZCB0aGUgZGVzaXJlZCBpbmRleCBhbmQgYWRkaW5nCi0JCSAq
IDEgdG8gdGhhdAorCQkgKiBFeHRlbmQgdGhlIHNpemUgYnkgY29tcHV0aW5nIHRoZSBudW1iZXIg
b2YgZW50cmllcyBiZXR3ZWVuCisJCSAqIHRoZSBleGlzdGluZyBzaXplIGFuZCB0aGUgZGVzaXJl
ZCBpbmRleCBhbmQgYWRkaW5nIDEgdG8gdGhhdC4KIAkJICovCiAJCXUzMiBieXRlczJpZHggPSB2
Ym8gLSBieXRlczsKCi0JCS8qIFRoZXJlIHNob3VsZCBhbHdheXMgYmUgYW4gaW50ZWdyYWwgbnVt
YmVyIG9mIGVudHJpZXMgYmVpbmcgYWRkZWQgKi8KLQkJLyogTm93IGV4dGVuZCB0aGUgdGFibGUg
Ki8KKwkJLyoKKwkJICogVGhlcmUgc2hvdWxkIGFsd2F5cyBiZSBhbiBpbnRlZ3JhbCBudW1iZXIg
b2YgZW50cmllcworCQkgKiBiZWluZyBhZGRlZC4gTm93IGV4dGVuZCB0aGUgdGFibGUuCisJCSAq
LwogCQkqdGJsID0gcnQgPSBleHRlbmRfcnN0dGJsKHJ0LCBieXRlczJpZHggLyBlc2l6ZSArIDEs
IGJ5dGVzKTsKIAkJaWYgKCFydCkKIAkJCXJldHVybiBOVUxMOwogCX0KCi0JLyogc2VlIGlmIHRo
ZSBlbnRyeSBpcyBhbHJlYWR5IGFsbG9jYXRlZCwgYW5kIGp1c3QgcmV0dXJuIGlmIGl0IGlzLiAq
LworCS8qIFNlZSBpZiB0aGUgZW50cnkgaXMgYWxyZWFkeSBhbGxvY2F0ZWQsIGFuZCBqdXN0IHJl
dHVybiBpZiBpdCBpcy4gKi8KIAllID0gQWRkMlB0cihydCwgdmJvKTsKCiAJaWYgKCplID09IFJF
U1RBUlRfRU5UUllfQUxMT0NBVEVEX0xFKQpAQCAtOTI0LDcgKzkxNCw3IEBAIHN0YXRpYyBpbmxp
bmUgdm9pZCAqYWxsb2NfcnN0dGJsX2Zyb21faWR4KHN0cnVjdCBSRVNUQVJUX1RBQkxFICoqdGJs
LCB1MzIgdmJvKQoKIAkvKgogCSAqIFdhbGsgdGhyb3VnaCB0aGUgdGFibGUsIGxvb2tpbmcgZm9y
IHRoZSBlbnRyeSB3ZSdyZQotCSAqIGludGVyZXN0ZWQgYW5kIHRoZSBwcmV2aW91cyBlbnRyeQor
CSAqIGludGVyZXN0ZWQgYW5kIHRoZSBwcmV2aW91cyBlbnRyeS4KIAkgKi8KIAlvZmYgPSBsZTMy
X3RvX2NwdShydC0+Zmlyc3RfZnJlZSk7CiAJZSA9IEFkZDJQdHIocnQsIG9mZik7CkBAIC05MzYs
MjQgKzkyNiwyOCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgKmFsbG9jX3JzdHRibF9mcm9tX2lkeChz
dHJ1Y3QgUkVTVEFSVF9UQUJMRSAqKnRibCwgdTMyIHZibykKIAl9CgogCS8qCi0JICogbmVlZCB0
byB3YWxrIHRocm91Z2ggdGhlIGxpc3QgbG9va2luZyBmb3IgdGhlIHByZWRlY2Vzc29yIG9mIG91
ciBlbnRyeQorCSAqIE5lZWQgdG8gd2FsayB0aHJvdWdoIHRoZSBsaXN0IGxvb2tpbmcgZm9yIHRo
ZSBwcmVkZWNlc3NvcgorCSAqIG9mIG91ciBlbnRyeS4KIAkgKi8KIAlmb3IgKDs7KSB7CiAJCS8q
IFJlbWVtYmVyIHRoZSBlbnRyeSBqdXN0IGZvdW5kICovCiAJCXUzMiBsYXN0X29mZiA9IG9mZjsK
IAkJX19sZTMyICpsYXN0X2UgPSBlOwoKLQkJLyogc2hvdWxkIG5ldmVyIHJ1biBvZiBlbnRyaWVz
LiAqLworCQkvKiBTaG91bGQgbmV2ZXIgcnVuIG9mIGVudHJpZXMuICovCgotCQkvKiBMb29rdXAg
dXAgdGhlIG5leHQgZW50cnkgdGhlIGxpc3QgKi8KKwkJLyogTG9va3VwIHVwIHRoZSBuZXh0IGVu
dHJ5IHRoZSBsaXN0LiAqLwogCQlvZmYgPSBsZTMyX3RvX2NwdSgqbGFzdF9lKTsKIAkJZSA9IEFk
ZDJQdHIocnQsIG9mZik7CgotCQkvKiBJZiB0aGlzIGlzIG91ciBtYXRjaCB3ZSBhcmUgZG9uZSAq
LworCQkvKiBJZiB0aGlzIGlzIG91ciBtYXRjaCB3ZSBhcmUgZG9uZS4gKi8KIAkJaWYgKG9mZiA9
PSB2Ym8pIHsKIAkJCSpsYXN0X2UgPSAqZTsKCi0JCQkvKiBJZiB0aGlzIHdhcyB0aGUgbGFzdCBl
bnRyeSwgd2UgdXBkYXRlIHRoYXQgdGhlIHRhYmxlIGFzIHdlbGwgKi8KKwkJCS8qCisJCQkgKiBJ
ZiB0aGlzIHdhcyB0aGUgbGFzdCBlbnRyeSwgd2UgdXBkYXRlIHRoYXQKKwkJCSAqIHRhYmxlIGFz
IHdlbGwuCisJCQkgKi8KIAkJCWlmIChsZTMyX3RvX2NwdShydC0+bGFzdF9mcmVlKSA9PSBvZmYp
CiAJCQkJcnQtPmxhc3RfZnJlZSA9IGNwdV90b19sZTMyKGxhc3Rfb2ZmKTsKIAkJCWJyZWFrOwpA
QCAtOTYxLDExICs5NTUsMTEgQEAgc3RhdGljIGlubGluZSB2b2lkICphbGxvY19yc3R0YmxfZnJv
bV9pZHgoc3RydWN0IFJFU1RBUlRfVEFCTEUgKip0YmwsIHUzMiB2Ym8pCiAJfQoKIHNraXBfbG9v
a2luZzoKLQkvKiBJZiB0aGUgbGlzdCBpcyBub3cgZW1wdHksIHdlIGZpeCB0aGUgbGFzdF9mcmVl
IGFzIHdlbGwgKi8KKwkvKiBJZiB0aGUgbGlzdCBpcyBub3cgZW1wdHksIHdlIGZpeCB0aGUgbGFz
dF9mcmVlIGFzIHdlbGwuICovCiAJaWYgKCFydC0+Zmlyc3RfZnJlZSkKIAkJcnQtPmxhc3RfZnJl
ZSA9IDA7CgotCS8qIFplcm8gdGhpcyBlbnRyeSAqLworCS8qIFplcm8gdGhpcyBlbnRyeS4gKi8K
IAltZW1zZXQoZSwgMCwgZXNpemUpOwogCSplID0gUkVTVEFSVF9FTlRSWV9BTExPQ0FURURfTEU7
CgpAQCAtOTgyLDkgKzk3Niw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCAqYWxsb2NfcnN0dGJsX2Zy
b21faWR4KHN0cnVjdCBSRVNUQVJUX1RBQkxFICoqdGJsLCB1MzIgdmJvKQogI2RlZmluZSBOVEZT
TE9HX1JFVVNFX1RBSUwgMHgwMDAwMDAxMAogI2RlZmluZSBOVEZTTE9HX05PX09MREVTVF9MU04g
MHgwMDAwMDAyMAoKLS8qCi0gKiBIZWxwZXIgc3RydWN0IHRvIHdvcmsgd2l0aCBOVEZTIExvZ0Zp
bGUKLSAqLworLyogSGVscGVyIHN0cnVjdCB0byB3b3JrIHdpdGggTlRGUyAkTG9nRmlsZS4gKi8K
IHN0cnVjdCBudGZzX2xvZyB7CiAJc3RydWN0IG50ZnNfaW5vZGUgKm5pOwoKQEAgLTEwMTIsMTUg
KzEwMDQsMTUgQEAgc3RydWN0IG50ZnNfbG9nIHsKIAl1MzIgZmlsZV9kYXRhX2JpdHM7CiAJdTMy
IHNlcV9udW1fbWFzazsgLyogKDEgPDwgZmlsZV9kYXRhX2JpdHMpIC0gMSAqLwoKLQlzdHJ1Y3Qg
UkVTVEFSVF9BUkVBICpyYTsgLyogaW4tbWVtb3J5IGltYWdlIG9mIHRoZSBuZXh0IHJlc3RhcnQg
YXJlYSAqLwotCXUzMiByYV9zaXplOyAvKiB0aGUgdXNhYmxlIHNpemUgb2YgdGhlIHJlc3RhcnQg
YXJlYSAqLworCXN0cnVjdCBSRVNUQVJUX0FSRUEgKnJhOyAvKiBJbi1tZW1vcnkgaW1hZ2Ugb2Yg
dGhlIG5leHQgcmVzdGFydCBhcmVhLiAqLworCXUzMiByYV9zaXplOyAvKiBUaGUgdXNhYmxlIHNp
emUgb2YgdGhlIHJlc3RhcnQgYXJlYS4gKi8KCiAJLyoKIAkgKiBJZiB0cnVlLCB0aGVuIHRoZSBp
bi1tZW1vcnkgcmVzdGFydCBhcmVhIGlzIHRvIGJlIHdyaXR0ZW4KLQkgKiB0byB0aGUgZmlyc3Qg
cG9zaXRpb24gb24gdGhlIGRpc2sKKwkgKiB0byB0aGUgZmlyc3QgcG9zaXRpb24gb24gdGhlIGRp
c2suCiAJICovCiAJYm9vbCBpbml0X3JhOwotCWJvb2wgc2V0X2RpcnR5OyAvKiB0cnVlIGlmIHdl
IG5lZWQgdG8gc2V0IGRpcnR5IGZsYWcgKi8KKwlib29sIHNldF9kaXJ0eTsgLyogVHJ1ZSBpZiB3
ZSBuZWVkIHRvIHNldCBkaXJ0eSBmbGFnLiAqLwoKIAl1NjQgb2xkZXN0X2xzbjsKCkBAIC0xMDM4
LDcgKzEwMzAsNyBAQCBzdHJ1Y3QgbnRmc19sb2cgewogCXNob3J0IG1pbm9yX3ZlcjsKCiAJdTMy
IGxfZmxhZ3M7IC8qIFNlZSBOVEZTTE9HX1hYWCAqLwotCXUzMiBjdXJyZW50X29wZW5sb2dfY291
bnQ7IC8qIE9uLWRpc2sgdmFsdWUgZm9yIG9wZW5fbG9nX2NvdW50ICovCisJdTMyIGN1cnJlbnRf
b3BlbmxvZ19jb3VudDsgLyogT24tZGlzayB2YWx1ZSBmb3Igb3Blbl9sb2dfY291bnQuICovCgog
CXN0cnVjdCBDTElFTlRfSUQgY2xpZW50X2lkOwogCXUzMiBjbGllbnRfdW5kb19jb21taXQ7CkBA
IC0xMDUxLDcgKzEwNDMsNyBAQCBzdGF0aWMgaW5saW5lIHUzMiBsc25fdG9fdmJvKHN0cnVjdCBu
dGZzX2xvZyAqbG9nLCBjb25zdCB1NjQgbHNuKQogCXJldHVybiB2Ym87CiB9CgotLyogY29tcHV0
ZSB0aGUgb2Zmc2V0IGluIHRoZSBsb2cgZmlsZSBvZiB0aGUgbmV4dCBsb2cgcGFnZSAqLworLyog
Q29tcHV0ZSB0aGUgb2Zmc2V0IGluIHRoZSBsb2cgZmlsZSBvZiB0aGUgbmV4dCBsb2cgcGFnZS4g
Ki8KIHN0YXRpYyBpbmxpbmUgdTMyIG5leHRfcGFnZV9vZmYoc3RydWN0IG50ZnNfbG9nICpsb2cs
IHUzMiBvZmYpCiB7CiAJb2ZmID0gKG9mZiAmIH5sb2ctPnN5c19wYWdlX21hc2spICsgbG9nLT5w
YWdlX3NpemU7CkBAIC0xMTc0LDggKzExNjYsOSBAQCBzdGF0aWMgaW50IHJlYWRfbG9nX3BhZ2Uo
c3RydWN0IG50ZnNfbG9nICpsb2csIHUzMiB2Ym8sCiAvKgogICogbG9nX3JlYWRfcnN0CiAgKgot
ICogaXQgd2Fsa3MgdGhyb3VnaCA1MTIgYmxvY2tzIG9mIHRoZSBmaWxlIGxvb2tpbmcgZm9yIGEg
dmFsaWQgcmVzdGFydCBwYWdlIGhlYWRlcgotICogSXQgd2lsbCBzdG9wIHRoZSBmaXJzdCB0aW1l
IHdlIGZpbmQgYSB2YWxpZCBwYWdlIGhlYWRlcgorICogSXQgd2Fsa3MgdGhyb3VnaCA1MTIgYmxv
Y2tzIG9mIHRoZSBmaWxlIGxvb2tpbmcgZm9yIGEgdmFsaWQKKyAqIHJlc3RhcnQgcGFnZSBoZWFk
ZXIuIEl0IHdpbGwgc3RvcCB0aGUgZmlyc3QgdGltZSB3ZSBmaW5kIGEKKyAqIHZhbGlkIHBhZ2Ug
aGVhZGVyLgogICovCiBzdGF0aWMgaW50IGxvZ19yZWFkX3JzdChzdHJ1Y3QgbnRmc19sb2cgKmxv
ZywgdTMyIGxfc2l6ZSwgYm9vbCBmaXJzdCwKIAkJCXN0cnVjdCByZXN0YXJ0X2luZm8gKmluZm8p
CkBAIC0xMTg4LDcgKzExODEsNyBAQCBzdGF0aWMgaW50IGxvZ19yZWFkX3JzdChzdHJ1Y3QgbnRm
c19sb2cgKmxvZywgdTMyIGxfc2l6ZSwgYm9vbCBmaXJzdCwKCiAJbWVtc2V0KGluZm8sIDAsIHNp
emVvZihzdHJ1Y3QgcmVzdGFydF9pbmZvKSk7CgotCS8qIERldGVybWluZSB3aGljaCByZXN0YXJ0
IGFyZWEgd2UgYXJlIGxvb2tpbmcgZm9yICovCisJLyogRGV0ZXJtaW5lIHdoaWNoIHJlc3RhcnQg
YXJlYSB3ZSBhcmUgbG9va2luZyBmb3IuICovCiAJaWYgKGZpcnN0KSB7CiAJCXZibyA9IDA7CiAJ
CXNraXAgPSA1MTI7CkBAIC0xMTk3LDIxICsxMTkwLDIxIEBAIHN0YXRpYyBpbnQgbG9nX3JlYWRf
cnN0KHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1MzIgbF9zaXplLCBib29sIGZpcnN0LAogCQlza2lw
ID0gMDsKIAl9CgotCS8qIGxvb3AgY29udGludW91c2x5IHVudGlsIHdlIHN1Y2NlZWQgKi8KKwkv
KiBMb29wIGNvbnRpbnVvdXNseSB1bnRpbCB3ZSBzdWNjZWVkLiAqLwogCWZvciAoOyB2Ym8gPCBs
X3NpemU7IHZibyA9IDIgKiB2Ym8gKyBza2lwLCBza2lwID0gMCkgewogCQlib29sIHVzYV9lcnJv
cjsKIAkJdTMyIHN5c19wYWdlX3NpemU7CiAJCWJvb2wgYnJzdCwgYmNoazsKIAkJc3RydWN0IFJF
U1RBUlRfQVJFQSAqcmE7CgotCQkvKiBSZWFkIGEgcGFnZSBoZWFkZXIgYXQgdGhlIGN1cnJlbnQg
b2Zmc2V0ICovCisJCS8qIFJlYWQgYSBwYWdlIGhlYWRlciBhdCB0aGUgY3VycmVudCBvZmZzZXQu
ICovCiAJCWlmIChyZWFkX2xvZ19wYWdlKGxvZywgdmJvLCAoc3RydWN0IFJFQ09SRF9QQUdFX0hE
UiAqKikmcl9wYWdlLAogCQkJCSAgJnVzYV9lcnJvcikpIHsKLQkJCS8qIGlnbm9yZSBhbnkgZXJy
b3JzICovCisJCQkvKiBJZ25vcmUgYW55IGVycm9ycy4gKi8KIAkJCWNvbnRpbnVlOwogCQl9Cgot
CQkvKiBleGl0IGlmIHRoZSBzaWduYXR1cmUgaXMgYSBsb2cgcmVjb3JkIHBhZ2UgKi8KKwkJLyog
RXhpdCBpZiB0aGUgc2lnbmF0dXJlIGlzIGEgbG9nIHJlY29yZCBwYWdlLiAqLwogCQlpZiAocl9w
YWdlLT5yaGRyLnNpZ24gPT0gTlRGU19SQ1JEX1NJR05BVFVSRSkgewogCQkJaW5mby0+aW5pdGlh
bGl6ZWQgPSB0cnVlOwogCQkJYnJlYWs7CkBAIC0xMjI0LDcgKzEyMTcsNyBAQCBzdGF0aWMgaW50
IGxvZ19yZWFkX3JzdChzdHJ1Y3QgbnRmc19sb2cgKmxvZywgdTMyIGxfc2l6ZSwgYm9vbCBmaXJz
dCwKIAkJCWlmIChyX3BhZ2UtPnJoZHIuc2lnbiAhPSBOVEZTX0ZGRkZfU0lHTkFUVVJFKSB7CiAJ
CQkJLyoKIAkJCQkgKiBSZW1lbWJlciBpZiB0aGUgc2lnbmF0dXJlIGRvZXMgbm90Ci0JCQkJICog
aW5kaWNhdGUgdW5pbml0aWFsaXplZCBmaWxlCisJCQkJICogaW5kaWNhdGUgdW5pbml0aWFsaXpl
ZCBmaWxlLgogCQkJCSAqLwogCQkJCWluZm8tPmluaXRpYWxpemVkID0gdHJ1ZTsKIAkJCX0KQEAg
LTEyMzYsNyArMTIyOSw3IEBAIHN0YXRpYyBpbnQgbG9nX3JlYWRfcnN0KHN0cnVjdCBudGZzX2xv
ZyAqbG9nLCB1MzIgbF9zaXplLCBib29sIGZpcnN0LAogCQlpbmZvLT5pbml0aWFsaXplZCA9IHRy
dWU7CiAJCWluZm8tPnZibyA9IHZibzsKCi0JCS8qIExldCdzIGNoZWNrIHRoZSByZXN0YXJ0IGFy
ZWEgaWYgdGhpcyBpcyBhIHZhbGlkIHBhZ2UgKi8KKwkJLyogTGV0J3MgY2hlY2sgdGhlIHJlc3Rh
cnQgYXJlYSBpZiB0aGlzIGlzIGEgdmFsaWQgcGFnZS4gKi8KIAkJaWYgKCFpc19yc3RfcGFnZV9o
ZHJfdmFsaWQodmJvLCByX3BhZ2UpKQogCQkJZ290byBjaGVja19yZXN1bHQ7CiAJCXJhID0gQWRk
MlB0cihyX3BhZ2UsIGxlMTZfdG9fY3B1KHJfcGFnZS0+cmFfb2ZmKSk7CkBAIC0xMjQ3LDE0ICsx
MjQwLDE0IEBAIHN0YXRpYyBpbnQgbG9nX3JlYWRfcnN0KHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1
MzIgbF9zaXplLCBib29sIGZpcnN0LAogCQkvKgogCQkgKiBXZSBoYXZlIGEgdmFsaWQgcmVzdGFy
dCBwYWdlIGhlYWRlciBhbmQgcmVzdGFydCBhcmVhLgogCQkgKiBJZiBjaGtkc2sgd2FzIHJ1biBv
ciB3ZSBoYXZlIG5vIGNsaWVudHMgdGhlbiB3ZSBoYXZlCi0JCSAqIG5vIG1vcmUgY2hlY2tpbmcg
dG8gZG8KKwkJICogbm8gbW9yZSBjaGVja2luZyB0byBkby4KIAkJICovCiAJCWlmIChiY2hrIHx8
IHJhLT5jbGllbnRfaWR4WzFdID09IExGU19OT19DTElFTlRfTEUpIHsKIAkJCWluZm8tPnZhbGlk
X3BhZ2UgPSB0cnVlOwogCQkJZ290byBjaGVja19yZXN1bHQ7CiAJCX0KCi0JCS8qIFJlYWQgdGhl
IGVudGlyZSByZXN0YXJ0IGFyZWEgKi8KKwkJLyogUmVhZCB0aGUgZW50aXJlIHJlc3RhcnQgYXJl
YS4gKi8KIAkJc3lzX3BhZ2Vfc2l6ZSA9IGxlMzJfdG9fY3B1KHJfcGFnZS0+c3lzX3BhZ2Vfc2l6
ZSk7CiAJCWlmIChEZWZhdWx0TG9nUGFnZVNpemUgIT0gc3lzX3BhZ2Vfc2l6ZSkgewogCQkJbnRm
c19mcmVlKHJfcGFnZSk7CkBAIC0xMjY1LDcgKzEyNTgsNyBAQCBzdGF0aWMgaW50IGxvZ19yZWFk
X3JzdChzdHJ1Y3QgbnRmc19sb2cgKmxvZywgdTMyIGxfc2l6ZSwgYm9vbCBmaXJzdCwKIAkJCWlm
IChyZWFkX2xvZ19wYWdlKGxvZywgdmJvLAogCQkJCQkgIChzdHJ1Y3QgUkVDT1JEX1BBR0VfSERS
ICoqKSZyX3BhZ2UsCiAJCQkJCSAgJnVzYV9lcnJvcikpIHsKLQkJCQkvKiBpZ25vcmUgYW55IGVy
cm9ycyAqLworCQkJCS8qIElnbm9yZSBhbnkgZXJyb3JzLiAqLwogCQkJCW50ZnNfZnJlZShyX3Bh
Z2UpOwogCQkJCXJfcGFnZSA9IE5VTEw7CiAJCQkJY29udGludWU7CkBAIC0xMjc4LDcgKzEyNzEs
MTAgQEAgc3RhdGljIGludCBsb2dfcmVhZF9yc3Qoc3RydWN0IG50ZnNfbG9nICpsb2csIHUzMiBs
X3NpemUsIGJvb2wgZmlyc3QsCiAJCX0KCiBjaGVja19yZXN1bHQ6Ci0JCS8qIElmIGNoa2RzayB3
YXMgcnVuIHRoZW4gdXBkYXRlIHRoZSBjYWxsZXIncyB2YWx1ZXMgYW5kIHJldHVybiAqLworCQkv
KgorCQkgKiBJZiBjaGtkc2sgd2FzIHJ1biB0aGVuIHVwZGF0ZSB0aGUgY2FsbGVyJ3MKKwkJICog
dmFsdWVzIGFuZCByZXR1cm4uCisJCSAqLwogCQlpZiAocl9wYWdlLT5yaGRyLnNpZ24gPT0gTlRG
U19DSEtEX1NJR05BVFVSRSkgewogCQkJaW5mby0+Y2hrZHNrX3dhc19ydW4gPSB0cnVlOwogCQkJ
aW5mby0+bGFzdF9sc24gPSBsZTY0X3RvX2NwdShyX3BhZ2UtPnJoZHIubHNuKTsKQEAgLTEyODcs
NyArMTI4MywxMCBAQCBzdGF0aWMgaW50IGxvZ19yZWFkX3JzdChzdHJ1Y3QgbnRmc19sb2cgKmxv
ZywgdTMyIGxfc2l6ZSwgYm9vbCBmaXJzdCwKIAkJCXJldHVybiAwOwogCQl9CgotCQkvKiBJZiB3
ZSBoYXZlIGEgdmFsaWQgcGFnZSB0aGVuIGNvcHkgdGhlIHZhbHVlcyB3ZSBuZWVkIGZyb20gaXQg
Ki8KKwkJLyoKKwkJICogSWYgd2UgaGF2ZSBhIHZhbGlkIHBhZ2UgdGhlbiBjb3B5IHRoZSB2YWx1
ZXMKKwkJICogd2UgbmVlZCBmcm9tIGl0LgorCQkgKi8KIAkJaWYgKGluZm8tPnZhbGlkX3BhZ2Up
IHsKIAkJCWluZm8tPmxhc3RfbHNuID0gbGU2NF90b19jcHUocmEtPmN1cnJlbnRfbHNuKTsKIAkJ
CWluZm8tPnJlc3RhcnQgPSB0cnVlOwpAQCAtMTMwMiw5ICsxMzAxLDcgQEAgc3RhdGljIGludCBs
b2dfcmVhZF9yc3Qoc3RydWN0IG50ZnNfbG9nICpsb2csIHUzMiBsX3NpemUsIGJvb2wgZmlyc3Qs
CiB9CgogLyoKLSAqIGxvZ19pbml0X3BnX2hkcgotICoKLSAqIGluaXQgImxvZycgZnJvbSByZXN0
YXJ0IHBhZ2UgaGVhZGVyCisgKiBJbG9nX2luaXRfcGdfaGRyIC0gSW5pdCBAbG9nIGZyb20gcmVz
dGFydCBwYWdlIGhlYWRlci4KICAqLwogc3RhdGljIHZvaWQgbG9nX2luaXRfcGdfaGRyKHN0cnVj
dCBudGZzX2xvZyAqbG9nLCB1MzIgc3lzX3BhZ2Vfc2l6ZSwKIAkJCSAgICB1MzIgcGFnZV9zaXpl
LCB1MTYgbWFqb3JfdmVyLCB1MTYgbWlub3JfdmVyKQpAQCAtMTMyNywxNSArMTMyNCwxMyBAQCBz
dGF0aWMgdm9pZCBsb2dfaW5pdF9wZ19oZHIoc3RydWN0IG50ZnNfbG9nICpsb2csIHUzMiBzeXNf
cGFnZV9zaXplLAogfQoKIC8qCi0gKiBsb2dfY3JlYXRlCi0gKgotICogaW5pdCAibG9nIiBpbiBj
YXNlcyB3aGVuIHdlIGRvbid0IGhhdmUgYSByZXN0YXJ0IGFyZWEgdG8gdXNlCisgKiBsb2dfY3Jl
YXRlIC0gSW5pdCBAbG9nIGluIGNhc2VzIHdoZW4gd2UgZG9uJ3QgaGF2ZSBhIHJlc3RhcnQgYXJl
YSB0byB1c2UuCiAgKi8KIHN0YXRpYyB2b2lkIGxvZ19jcmVhdGUoc3RydWN0IG50ZnNfbG9nICps
b2csIHUzMiBsX3NpemUsIGNvbnN0IHU2NCBsYXN0X2xzbiwKIAkJICAgICAgIHUzMiBvcGVuX2xv
Z19jb3VudCwgYm9vbCB3cmFwcGVkLCBib29sIHVzZV9tdWx0aV9wYWdlKQogewogCWxvZy0+bF9z
aXplID0gbF9zaXplOwotCS8qIEFsbCBmaWxlIG9mZnNldHMgbXVzdCBiZSBxdWFkd29yZCBhbGln
bmVkICovCisJLyogQWxsIGZpbGUgb2Zmc2V0cyBtdXN0IGJlIHF1YWR3b3JkIGFsaWduZWQuICov
CiAJbG9nLT5maWxlX2RhdGFfYml0cyA9IGJsa3NpemVfYml0cyhsX3NpemUpIC0gMzsKIAlsb2ct
PnNlcV9udW1fbWFzayA9ICg4IDw8IGxvZy0+ZmlsZV9kYXRhX2JpdHMpIC0gMTsKIAlsb2ctPnNl
cV9udW1fYml0cyA9IHNpemVvZih1NjQpICogOCAtIGxvZy0+ZmlsZV9kYXRhX2JpdHM7CkBAIC0x
MzQ3LDIxICsxMzQyLDIxIEBAIHN0YXRpYyB2b2lkIGxvZ19jcmVhdGUoc3RydWN0IG50ZnNfbG9n
ICpsb2csIHUzMiBsX3NpemUsIGNvbnN0IHU2NCBsYXN0X2xzbiwKCiAJbG9nLT5sX2ZsYWdzIHw9
IE5URlNMT0dfTk9fTEFTVF9MU04gfCBOVEZTTE9HX05PX09MREVTVF9MU047CgotCS8qIFNldCB0
aGUgY29ycmVjdCBmbGFncyBmb3IgdGhlIEkvTyBhbmQgaW5kaWNhdGUgaWYgd2UgaGF2ZSB3cmFw
cGVkICovCisJLyogU2V0IHRoZSBjb3JyZWN0IGZsYWdzIGZvciB0aGUgSS9PIGFuZCBpbmRpY2F0
ZSBpZiB3ZSBoYXZlIHdyYXBwZWQuICovCiAJaWYgKHdyYXBwZWQpCiAJCWxvZy0+bF9mbGFncyB8
PSBOVEZTTE9HX1dSQVBQRUQ7CgogCWlmICh1c2VfbXVsdGlfcGFnZSkKIAkJbG9nLT5sX2ZsYWdz
IHw9IE5URlNMT0dfTVVMVElQTEVfUEFHRV9JTzsKCi0JLyogQ29tcHV0ZSB0aGUgbG9nIHBhZ2Ug
dmFsdWVzICovCisJLyogQ29tcHV0ZSB0aGUgbG9nIHBhZ2UgdmFsdWVzLiAqLwogCWxvZy0+ZGF0
YV9vZmYgPSBRdWFkQWxpZ24oCiAJCW9mZnNldG9mKHN0cnVjdCBSRUNPUkRfUEFHRV9IRFIsIGZp
eHVwcykgKwogCQlzaXplb2Yoc2hvcnQpICogKChsb2ctPnBhZ2Vfc2l6ZSA+PiBTRUNUT1JfU0hJ
RlQpICsgMSkpOwogCWxvZy0+ZGF0YV9zaXplID0gbG9nLT5wYWdlX3NpemUgLSBsb2ctPmRhdGFf
b2ZmOwogCWxvZy0+cmVjb3JkX2hlYWRlcl9sZW4gPSBzaXplb2Yoc3RydWN0IExGU19SRUNPUkRf
SERSKTsKCi0JLyogUmVtZW1iZXIgdGhlIGRpZmZlcmVudCBwYWdlIHNpemVzIGZvciByZXNlcnZh
dGlvbiAqLworCS8qIFJlbWVtYmVyIHRoZSBkaWZmZXJlbnQgcGFnZSBzaXplcyBmb3IgcmVzZXJ2
YXRpb24uICovCiAJbG9nLT5yZXNlcnZlZCA9IGxvZy0+ZGF0YV9zaXplIC0gbG9nLT5yZWNvcmRf
aGVhZGVyX2xlbjsKCiAJLyogQ29tcHV0ZSB0aGUgcmVzdGFydCBwYWdlIHZhbHVlcy4gKi8KQEAg
LTEzNzQsMTUgKzEzNjksMTUgQEAgc3RhdGljIHZvaWQgbG9nX2NyZWF0ZShzdHJ1Y3QgbnRmc19s
b2cgKmxvZywgdTMyIGxfc2l6ZSwgY29uc3QgdTY0IGxhc3RfbHNuLAoKIAkvKgogCSAqIFRoZSB0
b3RhbCBhdmFpbGFibGUgbG9nIGZpbGUgc3BhY2UgaXMgdGhlIG51bWJlciBvZgotCSAqIGxvZyBm
aWxlIHBhZ2VzIHRpbWVzIHRoZSBzcGFjZSBhdmFpbGFibGUgb24gZWFjaCBwYWdlCisJICogbG9n
IGZpbGUgcGFnZXMgdGltZXMgdGhlIHNwYWNlIGF2YWlsYWJsZSBvbiBlYWNoIHBhZ2UuCiAJICov
CiAJbG9nLT50b3RhbF9hdmFpbF9wYWdlcyA9IGxvZy0+bF9zaXplIC0gbG9nLT5maXJzdF9wYWdl
OwogCWxvZy0+dG90YWxfYXZhaWwgPSBsb2ctPnRvdGFsX2F2YWlsX3BhZ2VzID4+IGxvZy0+cGFn
ZV9iaXRzOwoKIAkvKgogCSAqIFdlIGFzc3VtZSB0aGF0IHdlIGNhbid0IHVzZSB0aGUgZW5kIG9m
IHRoZSBwYWdlIGxlc3MgdGhhbgotCSAqIHRoZSBmaWxlIHJlY29yZCBzaXplCi0JICogVGhlbiB3
ZSB3b24ndCBuZWVkIHRvIHJlc2VydmUgbW9yZSB0aGFuIHRoZSBjYWxsZXIgYXNrcyBmb3IKKwkg
KiB0aGUgZmlsZSByZWNvcmQgc2l6ZS4KKwkgKiBUaGVuIHdlIHdvbid0IG5lZWQgdG8gcmVzZXJ2
ZSBtb3JlIHRoYW4gdGhlIGNhbGxlciBhc2tzIGZvci4KIAkgKi8KIAlsb2ctPm1heF9jdXJyZW50
X2F2YWlsID0gbG9nLT50b3RhbF9hdmFpbCAqIGxvZy0+cmVzZXJ2ZWQ7CiAJbG9nLT50b3RhbF9h
dmFpbCA9IGxvZy0+dG90YWxfYXZhaWwgKiBsb2ctPmRhdGFfc2l6ZTsKQEAgLTEzOTAsOSArMTM4
NSw3IEBAIHN0YXRpYyB2b2lkIGxvZ19jcmVhdGUoc3RydWN0IG50ZnNfbG9nICpsb2csIHUzMiBs
X3NpemUsIGNvbnN0IHU2NCBsYXN0X2xzbiwKIH0KCiAvKgotICogbG9nX2NyZWF0ZV9yYQotICoK
LSAqIFRoaXMgcm91dGluZSBpcyBjYWxsZWQgdG8gZmlsbCBhIHJlc3RhcnQgYXJlYSBmcm9tIHRo
ZSB2YWx1ZXMgc3RvcmVkIGluICdsb2cnCisgKiBsb2dfY3JlYXRlX3JhIC0gRmlsbCBhIHJlc3Rh
cnQgYXJlYSBmcm9tIHRoZSB2YWx1ZXMgc3RvcmVkIGluIEBsb2cuCiAgKi8KIHN0YXRpYyBzdHJ1
Y3QgUkVTVEFSVF9BUkVBICpsb2dfY3JlYXRlX3JhKHN0cnVjdCBudGZzX2xvZyAqbG9nKQogewpA
QCAtMTQzMiwxMiArMTQyNSwxMiBAQCBzdGF0aWMgdTMyIGZpbmFsX2xvZ19vZmYoc3RydWN0IG50
ZnNfbG9nICpsb2csIHU2NCBsc24sIHUzMiBkYXRhX2xlbikKCiAJcGFnZV9vZmYgLT0gMTsKCi0J
LyogQWRkIHRoZSBsZW5ndGggb2YgdGhlIGhlYWRlciAqLworCS8qIEFkZCB0aGUgbGVuZ3RoIG9m
IHRoZSBoZWFkZXIuICovCiAJZGF0YV9sZW4gKz0gbG9nLT5yZWNvcmRfaGVhZGVyX2xlbjsKCiAJ
LyoKLQkgKiBJZiB0aGlzIGxzbiBpcyBjb250YWluZWQgdGhpcyBsb2cgcGFnZSB3ZSBhcmUgZG9u
ZQotCSAqIE90aGVyd2lzZSB3ZSBuZWVkIHRvIHdhbGsgdGhyb3VnaCBzZXZlcmFsIGxvZyBwYWdl
cworCSAqIElmIHRoaXMgbHNuIGlzIGNvbnRhaW5lZCB0aGlzIGxvZyBwYWdlIHdlIGFyZSBkb25l
LgorCSAqIE90aGVyd2lzZSB3ZSBuZWVkIHRvIHdhbGsgdGhyb3VnaCBzZXZlcmFsIGxvZyBwYWdl
cy4KIAkgKi8KIAlpZiAoZGF0YV9sZW4gPiB0YWlsKSB7CiAJCWRhdGFfbGVuIC09IHRhaWw7CkBA
IC0xNDQ3LDcgKzE0NDAsMTAgQEAgc3RhdGljIHUzMiBmaW5hbF9sb2dfb2ZmKHN0cnVjdCBudGZz
X2xvZyAqbG9nLCB1NjQgbHNuLCB1MzIgZGF0YV9sZW4pCiAJCWZvciAoOzspIHsKIAkJCWZpbmFs
X2xvZ19vZmYgPSBuZXh0X3BhZ2Vfb2ZmKGxvZywgZmluYWxfbG9nX29mZik7CgotCQkJLyogV2Ug
YXJlIGRvbmUgaWYgdGhlIHJlbWFpbmluZyBieXRlcyBmaXQgb24gdGhpcyBwYWdlICovCisJCQkv
KgorCQkJICogV2UgYXJlIGRvbmUgaWYgdGhlIHJlbWFpbmluZyBieXRlcworCQkJICogZml0IG9u
IHRoaXMgcGFnZS4KKwkJCSAqLwogCQkJaWYgKGRhdGFfbGVuIDw9IHRhaWwpCiAJCQkJYnJlYWs7
CiAJCQlkYXRhX2xlbiAtPSB0YWlsOwpAQCAtMTQ1Niw3ICsxNDUyLDcgQEAgc3RhdGljIHUzMiBm
aW5hbF9sb2dfb2ZmKHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1NjQgbHNuLCB1MzIgZGF0YV9sZW4p
CgogCS8qCiAJICogV2UgYWRkIHRoZSByZW1haW5pbmcgYnl0ZXMgdG8gb3VyIHN0YXJ0aW5nIHBv
c2l0aW9uIG9uIHRoaXMgcGFnZQotCSAqIGFuZCB0aGVuIGFkZCB0aGF0IHZhbHVlIHRvIHRoZSBm
aWxlIG9mZnNldCBvZiB0aGlzIGxvZyBwYWdlCisJICogYW5kIHRoZW4gYWRkIHRoYXQgdmFsdWUg
dG8gdGhlIGZpbGUgb2Zmc2V0IG9mIHRoaXMgbG9nIHBhZ2UuCiAJICovCiAJcmV0dXJuIGZpbmFs
X2xvZ19vZmYgKyBkYXRhX2xlbiArIHBhZ2Vfb2ZmOwogfQpAQCAtMTQ3MywxMSArMTQ2OSwxMSBA
QCBzdGF0aWMgaW50IG5leHRfbG9nX2xzbihzdHJ1Y3QgbnRmc19sb2cgKmxvZywgY29uc3Qgc3Ry
dWN0IExGU19SRUNPUkRfSERSICpyaCwKIAl1NjQgc2VxID0gdGhpc19sc24gPj4gbG9nLT5maWxl
X2RhdGFfYml0czsKIAlzdHJ1Y3QgUkVDT1JEX1BBR0VfSERSICpwYWdlID0gTlVMTDsKCi0JLyog
UmVtZW1iZXIgaWYgd2Ugd3JhcHBlZCAqLworCS8qIFJlbWVtYmVyIGlmIHdlIHdyYXBwZWQuICov
CiAJaWYgKGVuZCA8PSB2Ym8pCiAJCXNlcSArPSAxOwoKLQkvKiBsb2cgcGFnZSBoZWFkZXIgZm9y
IHRoaXMgcGFnZSAqLworCS8qIExvZyBwYWdlIGhlYWRlciBmb3IgdGhpcyBwYWdlLiAqLwogCWVy
ciA9IHJlYWRfbG9nX3BhZ2UobG9nLCBoZHJfb2ZmLCAmcGFnZSwgTlVMTCk7CiAJaWYgKGVycikK
IAkJcmV0dXJuIGVycjsKQEAgLTE0ODUsMTEgKzE0ODEsMTEgQEAgc3RhdGljIGludCBuZXh0X2xv
Z19sc24oc3RydWN0IG50ZnNfbG9nICpsb2csIGNvbnN0IHN0cnVjdCBMRlNfUkVDT1JEX0hEUiAq
cmgsCiAJLyoKIAkgKiBJZiB0aGUgbHNuIHdlIHdlcmUgZ2l2ZW4gd2FzIG5vdCB0aGUgbGFzdCBs
c24gb24gdGhpcyBwYWdlLAogCSAqIHRoZW4gdGhlIHN0YXJ0aW5nIG9mZnNldCBmb3IgdGhlIG5l
eHQgbHNuIGlzIG9uIGEgcXVhZCB3b3JkCi0JICogYm91bmRhcnkgZm9sbG93aW5nIHRoZSBsYXN0
IGZpbGUgb2Zmc2V0IGZvciB0aGUgY3VycmVudCBsc24KLQkgKiBPdGhlcndpc2UgdGhlIGZpbGUg
b2Zmc2V0IGlzIHRoZSBzdGFydCBvZiB0aGUgZGF0YSBvbiB0aGUgbmV4dCBwYWdlCisJICogYm91
bmRhcnkgZm9sbG93aW5nIHRoZSBsYXN0IGZpbGUgb2Zmc2V0IGZvciB0aGUgY3VycmVudCBsc24u
CisJICogT3RoZXJ3aXNlIHRoZSBmaWxlIG9mZnNldCBpcyB0aGUgc3RhcnQgb2YgdGhlIGRhdGEg
b24gdGhlIG5leHQgcGFnZS4KIAkgKi8KIAlpZiAodGhpc19sc24gPT0gbGU2NF90b19jcHUocGFn
ZS0+cmhkci5sc24pKSB7Ci0JCS8qIElmIHdlIHdyYXBwZWQsIHdlIG5lZWQgdG8gaW5jcmVtZW50
IHRoZSBzZXF1ZW5jZSBudW1iZXIgKi8KKwkJLyogSWYgd2Ugd3JhcHBlZCwgd2UgbmVlZCB0byBp
bmNyZW1lbnQgdGhlIHNlcXVlbmNlIG51bWJlci4gKi8KIAkJaGRyX29mZiA9IG5leHRfcGFnZV9v
ZmYobG9nLCBoZHJfb2ZmKTsKIAkJaWYgKGhkcl9vZmYgPT0gbG9nLT5maXJzdF9wYWdlKQogCQkJ
c2VxICs9IDE7CkBAIC0xNDk5LDEyICsxNDk1LDEyIEBAIHN0YXRpYyBpbnQgbmV4dF9sb2dfbHNu
KHN0cnVjdCBudGZzX2xvZyAqbG9nLCBjb25zdCBzdHJ1Y3QgTEZTX1JFQ09SRF9IRFIgKnJoLAog
CQl2Ym8gPSBRdWFkQWxpZ24oZW5kKTsKIAl9CgotCS8qIENvbXB1dGUgdGhlIGxzbiBiYXNlZCBv
biB0aGUgZmlsZSBvZmZzZXQgYW5kIHRoZSBzZXF1ZW5jZSBjb3VudCAqLworCS8qIENvbXB1dGUg
dGhlIGxzbiBiYXNlZCBvbiB0aGUgZmlsZSBvZmZzZXQgYW5kIHRoZSBzZXF1ZW5jZSBjb3VudC4g
Ki8KIAkqbHNuID0gdmJvX3RvX2xzbihsb2csIHZibywgc2VxKTsKCiAJLyoKLQkgKiBJZiB0aGlz
IGxzbiBpcyB3aXRoaW4gdGhlIGxlZ2FsIHJhbmdlIGZvciB0aGUgZmlsZSwgd2UgcmV0dXJuIHRy
dWUKLQkgKiBPdGhlcndpc2UgZmFsc2UgaW5kaWNhdGVzIHRoYXQgdGhlcmUgYXJlIG5vIG1vcmUg
bHNuJ3MKKwkgKiBJZiB0aGlzIGxzbiBpcyB3aXRoaW4gdGhlIGxlZ2FsIHJhbmdlIGZvciB0aGUg
ZmlsZSwgd2UgcmV0dXJuIHRydWUuCisJICogT3RoZXJ3aXNlIGZhbHNlIGluZGljYXRlcyB0aGF0
IHRoZXJlIGFyZSBubyBtb3JlIGxzbidzLgogCSAqLwogCWlmICghaXNfbHNuX2luX2ZpbGUobG9n
LCAqbHNuKSkKIAkJKmxzbiA9IDA7CkBAIC0xNTE1LDQ0ICsxNTExLDQyIEBAIHN0YXRpYyBpbnQg
bmV4dF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAqbG9nLCBjb25zdCBzdHJ1Y3QgTEZTX1JFQ09S
RF9IRFIgKnJoLAogfQoKIC8qCi0gKiBjdXJyZW50X2xvZ19hdmFpbAotICoKLSAqIGNhbGN1bGF0
ZSB0aGUgbnVtYmVyIG9mIGJ5dGVzIGF2YWlsYWJsZSBmb3IgbG9nIHJlY29yZHMKKyAqIGN1cnJl
bnRfbG9nX2F2YWlsIC0gQ2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgYnl0ZXMgYXZhaWxhYmxlIGZv
ciBsb2cgcmVjb3Jkcy4KICAqLwogc3RhdGljIHUzMiBjdXJyZW50X2xvZ19hdmFpbChzdHJ1Y3Qg
bnRmc19sb2cgKmxvZykKIHsKIAl1MzIgb2xkZXN0X29mZiwgbmV4dF9mcmVlX29mZiwgZnJlZV9i
eXRlczsKCiAJaWYgKGxvZy0+bF9mbGFncyAmIE5URlNMT0dfTk9fTEFTVF9MU04pIHsKLQkJLyog
VGhlIGVudGlyZSBmaWxlIGlzIGF2YWlsYWJsZSAqLworCQkvKiBUaGUgZW50aXJlIGZpbGUgaXMg
YXZhaWxhYmxlLiAqLwogCQlyZXR1cm4gbG9nLT5tYXhfY3VycmVudF9hdmFpbDsKIAl9CgogCS8q
CiAJICogSWYgdGhlcmUgaXMgYSBsYXN0IGxzbiB0aGUgcmVzdGFydCBhcmVhIHRoZW4gd2Uga25v
dyB0aGF0IHdlIHdpbGwKLQkgKiBoYXZlIHRvIGNvbXB1dGUgdGhlIGZyZWUgcmFuZ2UKLQkgKiBJ
ZiB0aGVyZSBpcyBubyBvbGRlc3QgbHNuIHRoZW4gc3RhcnQgYXQgdGhlIGZpcnN0IHBhZ2Ugb2Yg
dGhlIGZpbGUKKwkgKiBoYXZlIHRvIGNvbXB1dGUgdGhlIGZyZWUgcmFuZ2UuCisJICogSWYgdGhl
cmUgaXMgbm8gb2xkZXN0IGxzbiB0aGVuIHN0YXJ0IGF0IHRoZSBmaXJzdCBwYWdlIG9mIHRoZSBm
aWxlLgogCSAqLwogCW9sZGVzdF9vZmYgPSAobG9nLT5sX2ZsYWdzICYgTlRGU0xPR19OT19PTERF
U1RfTFNOKQogCQkJICAgICA/IGxvZy0+Zmlyc3RfcGFnZQogCQkJICAgICA6IChsb2ctPm9sZGVz
dF9sc25fb2ZmICYgfmxvZy0+c3lzX3BhZ2VfbWFzayk7CgogCS8qCi0JICogV2Ugd2lsbCB1c2Ug
dGhlIG5leHQgbG9nIHBhZ2Ugb2Zmc2V0IHRvIGNvbXB1dGUgdGhlIG5leHQgZnJlZSBwYWdlXAot
CSAqIElmIHdlIGFyZSBnb2luZyB0byByZXVzZSB0aGlzIHBhZ2UgZ28gdG8gdGhlIG5leHQgcGFn
ZQotCSAqIElmIHdlIGFyZSBhdCB0aGUgZmlyc3QgcGFnZSB0aGVuIHVzZSB0aGUgZW5kIG9mIHRo
ZSBmaWxlCisJICogV2Ugd2lsbCB1c2UgdGhlIG5leHQgbG9nIHBhZ2Ugb2Zmc2V0IHRvIGNvbXB1
dGUgdGhlIG5leHQgZnJlZSBwYWdlLgorCSAqIElmIHdlIGFyZSBnb2luZyB0byByZXVzZSB0aGlz
IHBhZ2UgZ28gdG8gdGhlIG5leHQgcGFnZS4KKwkgKiBJZiB3ZSBhcmUgYXQgdGhlIGZpcnN0IHBh
Z2UgdGhlbiB1c2UgdGhlIGVuZCBvZiB0aGUgZmlsZS4KIAkgKi8KIAluZXh0X2ZyZWVfb2ZmID0g
KGxvZy0+bF9mbGFncyAmIE5URlNMT0dfUkVVU0VfVEFJTCkKIAkJCQk/IGxvZy0+bmV4dF9wYWdl
ICsgbG9nLT5wYWdlX3NpemUKIAkJCTogbG9nLT5uZXh0X3BhZ2UgPT0gbG9nLT5maXJzdF9wYWdl
ID8gbG9nLT5sX3NpemUKIAkJCQkJCQkgICAgOiBsb2ctPm5leHRfcGFnZTsKCi0JLyogSWYgdGhl
IHR3byBvZmZzZXRzIGFyZSB0aGUgc2FtZSB0aGVuIHRoZXJlIGlzIG5vIGF2YWlsYWJsZSBzcGFj
ZSAqLworCS8qIElmIHRoZSB0d28gb2Zmc2V0cyBhcmUgdGhlIHNhbWUgdGhlbiB0aGVyZSBpcyBu
byBhdmFpbGFibGUgc3BhY2UuICovCiAJaWYgKG9sZGVzdF9vZmYgPT0gbmV4dF9mcmVlX29mZikK
IAkJcmV0dXJuIDA7CiAJLyoKIAkgKiBJZiB0aGUgZnJlZSBvZmZzZXQgZm9sbG93cyB0aGUgb2xk
ZXN0IG9mZnNldCB0aGVuIHN1YnRyYWN0Ci0JICogdGhpcyByYW5nZSBmcm9tIHRoZSB0b3RhbCBh
dmFpbGFibGUgcGFnZXMKKwkgKiB0aGlzIHJhbmdlIGZyb20gdGhlIHRvdGFsIGF2YWlsYWJsZSBw
YWdlcy4KIAkgKi8KIAlmcmVlX2J5dGVzID0KIAkJb2xkZXN0X29mZiA8IG5leHRfZnJlZV9vZmYK
QEAgLTE1NzYsMTMgKzE1NzAsMTMgQEAgc3RhdGljIGJvb2wgY2hlY2tfc3Vic2VxX2xvZ19wYWdl
KHN0cnVjdCBudGZzX2xvZyAqbG9nLAoKIAkvKgogCSAqIElmIHRoZSBsYXN0IGxzbiBvbiB0aGUg
cGFnZSBvY2N1cnMgd2FzIHdyaXR0ZW4gYWZ0ZXIgdGhlIHBhZ2UKLQkgKiB0aGF0IGNhdXNlZCB0
aGUgb3JpZ2luYWwgZXJyb3IgdGhlbiB3ZSBoYXZlIGEgZmF0YWwgZXJyb3IKKwkgKiB0aGF0IGNh
dXNlZCB0aGUgb3JpZ2luYWwgZXJyb3IgdGhlbiB3ZSBoYXZlIGEgZmF0YWwgZXJyb3IuCiAJICov
CiAJbHNuX3NlcSA9IGxzbiA+PiBsb2ctPmZpbGVfZGF0YV9iaXRzOwoKIAkvKgogCSAqIElmIHRo
ZSBzZXF1ZW5jZSBudW1iZXIgZm9yIHRoZSBsc24gdGhlIHBhZ2UgaXMgZXF1YWwgb3IgZ3JlYXRl
cgotCSAqIHRoYW4gbHNuIHdlIGV4cGVjdCwgdGhlbiB0aGlzIGlzIGEgc3Vic2VxdWVudCB3cml0
ZQorCSAqIHRoYW4gbHNuIHdlIGV4cGVjdCwgdGhlbiB0aGlzIGlzIGEgc3Vic2VxdWVudCB3cml0
ZS4KIAkgKi8KIAlyZXR1cm4gbHNuX3NlcSA+PSBzZXEgfHwKIAkgICAgICAgKGxzbl9zZXEgPT0g
c2VxIC0gMSAmJiBsb2ctPmZpcnN0X3BhZ2UgPT0gdmJvICYmCkBAIC0xNTkyLDggKzE1ODYsOCBA
QCBzdGF0aWMgYm9vbCBjaGVja19zdWJzZXFfbG9nX3BhZ2Uoc3RydWN0IG50ZnNfbG9nICpsb2cs
CiAvKgogICogbGFzdF9sb2dfbHNuCiAgKgotICogVGhpcyByb3V0aW5lIHdhbGtzIHRocm91Z2gg
dGhlIGxvZyBwYWdlcyBmb3IgYSBmaWxlLCBzZWFyY2hpbmcgZm9yIHRoZQotICogbGFzdCBsb2cg
cGFnZSB3cml0dGVuIHRvIHRoZSBmaWxlCisgKiBXYWxrcyB0aHJvdWdoIHRoZSBsb2cgcGFnZXMg
Zm9yIGEgZmlsZSwgc2VhcmNoaW5nIGZvciB0aGUKKyAqIGxhc3QgbG9nIHBhZ2Ugd3JpdHRlbiB0
byB0aGUgZmlsZS4KICAqLwogc3RhdGljIGludCBsYXN0X2xvZ19sc24oc3RydWN0IG50ZnNfbG9n
ICpsb2cpCiB7CkBAIC0xNjQyLDcgKzE2MzYsNyBAQCBzdGF0aWMgaW50IGxhc3RfbG9nX2xzbihz
dHJ1Y3QgbnRmc19sb2cgKmxvZykKIAl9CgogbmV4dF90YWlsOgotCS8qIFJlYWQgc2Vjb25kIHRh
aWwgcGFnZSAoYXQgcG9zIDMvMHgxMjAwMCkgKi8KKwkvKiBSZWFkIHNlY29uZCB0YWlsIHBhZ2Ug
KGF0IHBvcyAzLzB4MTIwMDApLiAqLwogCWlmIChyZWFkX2xvZ19wYWdlKGxvZywgc2Vjb25kX29m
ZiwgJnNlY29uZF90YWlsLCAmdXNhX2Vycm9yKSB8fAogCSAgICB1c2FfZXJyb3IgfHwgc2Vjb25k
X3RhaWwtPnJoZHIuc2lnbiAhPSBOVEZTX1JDUkRfU0lHTkFUVVJFKSB7CiAJCW50ZnNfZnJlZShz
ZWNvbmRfdGFpbCk7CkBAIC0xNjU0LDcgKzE2NDgsNyBAQCBzdGF0aWMgaW50IGxhc3RfbG9nX2xz
bihzdHJ1Y3QgbnRmc19sb2cgKmxvZykKIAkJbHNuMiA9IGxlNjRfdG9fY3B1KHNlY29uZF90YWls
LT5yZWNvcmRfaGRyLmxhc3RfZW5kX2xzbik7CiAJfQoKLQkvKiBSZWFkIGZpcnN0IHRhaWwgcGFn
ZSAoYXQgcG9zIDIvMHgyMDAwICkgKi8KKwkvKiBSZWFkIGZpcnN0IHRhaWwgcGFnZSAoYXQgcG9z
IDIvMHgyMDAwKS4gKi8KIAlpZiAocmVhZF9sb2dfcGFnZShsb2csIGZpbmFsX29mZiwgJmZpcnN0
X3RhaWwsICZ1c2FfZXJyb3IpIHx8CiAJICAgIHVzYV9lcnJvciB8fCBmaXJzdF90YWlsLT5yaGRy
LnNpZ24gIT0gTlRGU19SQ1JEX1NJR05BVFVSRSkgewogCQludGZzX2ZyZWUoZmlyc3RfdGFpbCk7
CkBAIC0xODAwLDEwICsxNzk0LDEwIEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBu
dGZzX2xvZyAqbG9nKQoKIG5leHRfcGFnZToKIAl0YWlsX3BhZ2UgPSBOVUxMOwotCS8qIFJlYWQg
dGhlIG5leHQgbG9nIHBhZ2UgKi8KKwkvKiBSZWFkIHRoZSBuZXh0IGxvZyBwYWdlLiAqLwogCWVy
ciA9IHJlYWRfbG9nX3BhZ2UobG9nLCBjdXJwYWdlX29mZiwgJnBhZ2UsICZ1c2FfZXJyb3IpOwoK
LQkvKiBDb21wdXRlIHRoZSBuZXh0IGxvZyBwYWdlIG9mZnNldCB0aGUgZmlsZSAqLworCS8qIENv
bXB1dGUgdGhlIG5leHQgbG9nIHBhZ2Ugb2Zmc2V0IHRoZSBmaWxlLiAqLwogCW5leHRwYWdlX29m
ZiA9IG5leHRfcGFnZV9vZmYobG9nLCBjdXJwYWdlX29mZik7CiAJd3JhcHBlZCA9IG5leHRwYWdl
X29mZiA9PSBsb2ctPmZpcnN0X3BhZ2U7CgpAQCAtMTg4MiwxNCArMTg3NiwxNCBAQCBzdGF0aWMg
aW50IGxhc3RfbG9nX2xzbihzdHJ1Y3QgbnRmc19sb2cgKmxvZykKCiAJLyoKIAkgKiBJZiB3ZSBh
cmUgYXQgdGhlIGV4cGVjdGVkIGZpcnN0IHBhZ2Ugb2YgYSB0cmFuc2ZlciBjaGVjayB0byBzZWUK
LQkgKiBpZiBlaXRoZXIgdGFpbCBjb3B5IGlzIGF0IHRoaXMgb2Zmc2V0CisJICogaWYgZWl0aGVy
IHRhaWwgY29weSBpcyBhdCB0aGlzIG9mZnNldC4KIAkgKiBJZiB0aGlzIHBhZ2UgaXMgdGhlIGxh
c3QgcGFnZSBvZiBhIHRyYW5zZmVyLCBjaGVjayBpZiB3ZSB3cm90ZQotCSAqIGEgc3Vic2VxdWVu
dCB0YWlsIGNvcHkKKwkgKiBhIHN1YnNlcXVlbnQgdGFpbCBjb3B5LgogCSAqLwogCWlmIChwYWdl
X2NudCA9PSBwYWdlX3BvcyB8fCBwYWdlX2NudCA9PSBwYWdlX3BvcyArIDEpIHsKIAkJLyoKIAkJ
ICogQ2hlY2sgaWYgdGhlIG9mZnNldCBtYXRjaGVzIGVpdGhlciB0aGUgZmlyc3Qgb3Igc2Vjb25k
Ci0JCSAqIHRhaWwgY29weS4gSXQgaXMgcG9zc2libGUgaXQgd2lsbCBtYXRjaCBib3RoCisJCSAq
IHRhaWwgY29weS4gSXQgaXMgcG9zc2libGUgaXQgd2lsbCBtYXRjaCBib3RoLgogCQkgKi8KIAkJ
aWYgKGN1cnBhZ2Vfb2ZmID09IGZpbmFsX29mZikKIAkJCXRhaWxfcGFnZSA9IGZpcnN0X3RhaWw7
CkBAIC0xOTExLDMyICsxOTA1LDM1IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBu
dGZzX2xvZyAqbG9nKQoKIHVzZV90YWlsX3BhZ2U6CiAJaWYgKHRhaWxfcGFnZSkgewotCQkvKiB3
ZSBoYXZlIGEgY2FuZGlkYXRlIGZvciBhIHRhaWwgY29weSAqLworCQkvKiBXZSBoYXZlIGEgY2Fu
ZGlkYXRlIGZvciBhIHRhaWwgY29weS4gKi8KIAkJbHNuX2N1ciA9IGxlNjRfdG9fY3B1KHRhaWxf
cGFnZS0+cmVjb3JkX2hkci5sYXN0X2VuZF9sc24pOwoKIAkJaWYgKGxhc3Rfb2tfbHNuIDwgbHNu
X2N1cikgewogCQkJLyoKIAkJCSAqIElmIHRoZSBzZXF1ZW5jZSBudW1iZXIgaXMgbm90IGV4cGVj
dGVkLAotCQkJICogdGhlbiBkb24ndCB1c2UgdGhlIHRhaWwgY29weQorCQkJICogdGhlbiBkb24n
dCB1c2UgdGhlIHRhaWwgY29weS4KIAkJCSAqLwogCQkJaWYgKGV4cGVjdGVkX3NlcSAhPSAobHNu
X2N1ciA+PiBsb2ctPmZpbGVfZGF0YV9iaXRzKSkKIAkJCQl0YWlsX3BhZ2UgPSBOVUxMOwogCQl9
IGVsc2UgaWYgKGxhc3Rfb2tfbHNuID4gbHNuX2N1cikgewogCQkJLyoKIAkJCSAqIElmIHRoZSBs
YXN0IGxzbiBpcyBncmVhdGVyIHRoYW4gdGhlIG9uZSBvbgotCQkJICogdGhpcyBwYWdlIHRoZW4g
Zm9yZ2V0IHRoaXMgdGFpbAorCQkJICogdGhpcyBwYWdlIHRoZW4gZm9yZ2V0IHRoaXMgdGFpbC4K
IAkJCSAqLwogCQkJdGFpbF9wYWdlID0gTlVMTDsKIAkJfQogCX0KCi0JLyogSWYgd2UgaGF2ZSBh
biBlcnJvciBvbiB0aGUgY3VycmVudCBwYWdlLCB3ZSB3aWxsIGJyZWFrIG9mIHRoaXMgbG9vcCAq
LworCS8qCisJICpJZiB3ZSBoYXZlIGFuIGVycm9yIG9uIHRoZSBjdXJyZW50IHBhZ2UsCisJICog
d2Ugd2lsbCBicmVhayBvZiB0aGlzIGxvb3AuCisJICovCiAJaWYgKGVyciB8fCB1c2FfZXJyb3Ip
CiAJCWdvdG8gY2hlY2tfdGFpbDsKCiAJLyoKIAkgKiBEb25lIGlmIHRoZSBsYXN0IGxzbiBvbiB0
aGlzIHBhZ2UgZG9lc24ndCBtYXRjaCB0aGUgcHJldmlvdXMga25vd24KLQkgKiBsYXN0IGxzbiBv
ciB0aGUgc2VxdWVuY2UgbnVtYmVyIGlzIG5vdCBleHBlY3RlZAorCSAqIGxhc3QgbHNuIG9yIHRo
ZSBzZXF1ZW5jZSBudW1iZXIgaXMgbm90IGV4cGVjdGVkLgogCSAqLwogCWxzbl9jdXIgPSBsZTY0
X3RvX2NwdShwYWdlLT5yaGRyLmxzbik7CiAJaWYgKGxhc3Rfb2tfbHNuICE9IGxzbl9jdXIgJiYK
QEAgLTE5NDUsOSArMTk0Miw5IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZz
X2xvZyAqbG9nKQogCX0KCiAJLyoKLQkgKiBDaGVjayB0aGF0IHRoZSBwYWdlIHBvc2l0aW9uIGFu
ZCBwYWdlIGNvdW50IHZhbHVlcyBhcmUgY29ycmVjdAorCSAqIENoZWNrIHRoYXQgdGhlIHBhZ2Ug
cG9zaXRpb24gYW5kIHBhZ2UgY291bnQgdmFsdWVzIGFyZSBjb3JyZWN0LgogCSAqIElmIHRoaXMg
aXMgdGhlIGZpcnN0IHBhZ2Ugb2YgYSB0cmFuc2ZlciB0aGUgcG9zaXRpb24gbXVzdCBiZSAxCi0J
ICogYW5kIHRoZSBjb3VudCB3aWxsIGJlIHVua25vd24KKwkgKiBhbmQgdGhlIGNvdW50IHdpbGwg
YmUgdW5rbm93bi4KIAkgKi8KIAlpZiAocGFnZV9jbnQgPT0gcGFnZV9wb3MpIHsKIAkJaWYgKHBh
Z2UtPnBhZ2VfcG9zICE9IGNwdV90b19sZTE2KDEpICYmCkBAIC0xOTY0LDIwICsxOTYxLDIwIEBA
IHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAqbG9nKQogCQkgICBsZTE2
X3RvX2NwdShwYWdlLT5wYWdlX3BvcykgIT0gcGFnZV9wb3MgKyAxKSB7CiAJCS8qCiAJCSAqIFRo
ZSBwYWdlIHBvc2l0aW9uIGJldHRlciBiZSAxIG1vcmUgdGhhbiB0aGUgbGFzdCBwYWdlCi0JCSAq
IHBvc2l0aW9uIGFuZCB0aGUgcGFnZSBjb3VudCBiZXR0ZXIgbWF0Y2gKKwkJICogcG9zaXRpb24g
YW5kIHRoZSBwYWdlIGNvdW50IGJldHRlciBtYXRjaC4KIAkJICovCiAJCWdvdG8gY2hlY2tfdGFp
bDsKIAl9CgogCS8qCiAJICogV2UgaGF2ZSBhIHZhbGlkIHBhZ2UgdGhlIGZpbGUgYW5kIG1heSBo
YXZlIGEgdmFsaWQgcGFnZQotCSAqIHRoZSB0YWlsIGNvcHkgYXJlYQorCSAqIHRoZSB0YWlsIGNv
cHkgYXJlYS4KIAkgKiBJZiB0aGUgdGFpbCBwYWdlIHdhcyB3cml0dGVuIGFmdGVyIHRoZSBwYWdl
IHRoZSBmaWxlIHRoZW4KLQkgKiBicmVhayBvZiB0aGUgbG9vcAorCSAqIGJyZWFrIG9mIHRoZSBs
b29wLgogCSAqLwogCWlmICh0YWlsX3BhZ2UgJiYKIAkgICAgbGU2NF90b19jcHUodGFpbF9wYWdl
LT5yZWNvcmRfaGRyLmxhc3RfZW5kX2xzbikgPiBsc25fY3VyKSB7Ci0JCS8qIFJlbWVtYmVyIGlm
IHdlIHdpbGwgcmVwbGFjZSB0aGUgcGFnZSAqLworCQkvKiBSZW1lbWJlciBpZiB3ZSB3aWxsIHJl
cGxhY2UgdGhlIHBhZ2UuICovCiAJCXJlcGxhY2VfcGFnZSA9IHRydWU7CiAJCWdvdG8gY2hlY2tf
dGFpbDsKIAl9CkBAIC0xOTg3LDcgKzE5ODQsNyBAQCBzdGF0aWMgaW50IGxhc3RfbG9nX2xzbihz
dHJ1Y3QgbnRmc19sb2cgKmxvZykKIAlpZiAoaXNfbG9nX3JlY29yZF9lbmQocGFnZSkpIHsKIAkJ
LyoKIAkJICogU2luY2Ugd2UgaGF2ZSByZWFkIHRoaXMgcGFnZSB3ZSBrbm93IHRoZSBzZXF1ZW5j
ZSBudW1iZXIKLQkJICogaXMgdGhlIHNhbWUgYXMgb3VyIGV4cGVjdGVkIHZhbHVlCisJCSAqIGlz
IHRoZSBzYW1lIGFzIG91ciBleHBlY3RlZCB2YWx1ZS4KIAkJICovCiAJCWxvZy0+c2VxX251bSA9
IGV4cGVjdGVkX3NlcTsKIAkJbG9nLT5sYXN0X2xzbiA9IGxlNjRfdG9fY3B1KHBhZ2UtPnJlY29y
ZF9oZHIubGFzdF9lbmRfbHNuKTsKQEAgLTE5OTYsNyArMTk5Myw3IEBAIHN0YXRpYyBpbnQgbGFz
dF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAqbG9nKQoKIAkJLyoKIAkJICogSWYgdGhlcmUgaXMg
cm9vbSBvbiB0aGlzIHBhZ2UgZm9yIGFub3RoZXIgaGVhZGVyIHRoZW4KLQkJICogcmVtZW1iZXIg
d2Ugd2FudCB0byByZXVzZSB0aGUgcGFnZQorCQkgKiByZW1lbWJlciB3ZSB3YW50IHRvIHJldXNl
IHRoZSBwYWdlLgogCQkgKi8KIAkJaWYgKGxvZy0+cmVjb3JkX2hlYWRlcl9sZW4gPD0KIAkJICAg
IGxvZy0+cGFnZV9zaXplIC0KQEAgLTIwMDgsMTQgKzIwMDUsMTQgQEAgc3RhdGljIGludCBsYXN0
X2xvZ19sc24oc3RydWN0IG50ZnNfbG9nICpsb2cpCiAJCQlsb2ctPm5leHRfcGFnZSA9IG5leHRw
YWdlX29mZjsKIAkJfQoKLQkJLyogUmVtZW1iZXIgaWYgd2Ugd3JhcHBlZCB0aGUgbG9nIGZpbGUg
Ki8KKwkJLyogUmVtZW1iZXIgaWYgd2Ugd3JhcHBlZCB0aGUgbG9nIGZpbGUuICovCiAJCWlmICh3
cmFwcGVkX2ZpbGUpCiAJCQlsb2ctPmxfZmxhZ3MgfD0gTlRGU0xPR19XUkFQUEVEOwogCX0KCiAJ
LyoKIAkgKiBSZW1lbWJlciB0aGUgbGFzdCBwYWdlIGNvdW50IGFuZCBwb3NpdGlvbi4KLQkgKiBB
bHNvIHJlbWVtYmVyIHRoZSBsYXN0IGtub3duIGxzbgorCSAqIEFsc28gcmVtZW1iZXIgdGhlIGxh
c3Qga25vd24gbHNuLgogCSAqLwogCXBhZ2VfY250ID0gbGUxNl90b19jcHUocGFnZS0+cGFnZV9j
b3VudCk7CiAJcGFnZV9wb3MgPSBsZTE2X3RvX2NwdShwYWdlLT5wYWdlX3Bvcyk7CkBAIC0yMDU2
LDE5ICsyMDUzLDE5IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAq
bG9nKQogCQkJbG9nLT5sX2ZsYWdzIHw9IE5URlNMT0dfV1JBUFBFRDsKIAl9CgotCS8qIFJlbWVt
YmVyIHRoYXQgdGhlIHBhcnRpYWwgSU8gd2lsbCBzdGFydCBhdCB0aGUgbmV4dCBwYWdlICovCisJ
LyogUmVtZW1iZXIgdGhhdCB0aGUgcGFydGlhbCBJTyB3aWxsIHN0YXJ0IGF0IHRoZSBuZXh0IHBh
Z2UuICovCiAJc2Vjb25kX29mZiA9IG5leHRwYWdlX29mZjsKCiAJLyoKIAkgKiBJZiB0aGUgbmV4
dCBwYWdlIGlzIHRoZSBmaXJzdCBwYWdlIG9mIHRoZSBmaWxlIHRoZW4gdXBkYXRlCi0JICogdGhl
IHNlcXVlbmNlIG51bWJlciBmb3IgbG9nIHJlY29yZHMgd2hpY2ggYmVnb24gdGhlIG5leHQgcGFn
ZQorCSAqIHRoZSBzZXF1ZW5jZSBudW1iZXIgZm9yIGxvZyByZWNvcmRzIHdoaWNoIGJlZ29uIHRo
ZSBuZXh0IHBhZ2UuCiAJICovCiAJaWYgKHdyYXBwZWQpCiAJCWV4cGVjdGVkX3NlcSArPSAxOwoK
IAkvKgogCSAqIElmIHdlIGhhdmUgYSB0YWlsIGNvcHkgb3IgYXJlIHBlcmZvcm1pbmcgc2luZ2xl
IHBhZ2UgSS9PIHdlIGNhbgotCSAqIGltbWVkaWF0ZWx5IGxvb2sgYXQgdGhlIG5leHQgcGFnZQor
CSAqIGltbWVkaWF0ZWx5IGxvb2sgYXQgdGhlIG5leHQgcGFnZS4KIAkgKi8KIAlpZiAocmVwbGFj
ZV9wYWdlIHx8IChsb2ctPnJhLT5mbGFncyAmIFJFU1RBUlRfU0lOR0xFX1BBR0VfSU8pKSB7CiAJ
CXBhZ2VfY250ID0gMjsKQEAgLTIwOTQsMTkgKzIwOTEsMTkgQEAgc3RhdGljIGludCBsYXN0X2xv
Z19sc24oc3RydWN0IG50ZnNfbG9nICpsb2cpCiAJbnRmc19mcmVlKHRzdF9wYWdlKTsKIAl0c3Rf
cGFnZSA9IE5VTEw7CgotCS8qIFdhbGsgdGhyb3VnaCB0aGUgZmlsZSwgcmVhZGluZyBsb2cgcGFn
ZXMgKi8KKwkvKiBXYWxrIHRocm91Z2ggdGhlIGZpbGUsIHJlYWRpbmcgbG9nIHBhZ2VzLiAqLwog
CWVyciA9IHJlYWRfbG9nX3BhZ2UobG9nLCBuZXh0cGFnZV9vZmYsICZ0c3RfcGFnZSwgJnVzYV9l
cnJvcik7CgogCS8qCiAJICogSWYgd2UgZ2V0IGEgVVNBIGVycm9yIHRoZW4gYXNzdW1lIHRoYXQg
d2UgY29ycmVjdGx5IGZvdW5kCi0JICogdGhlIGVuZCBvZiB0aGUgb3JpZ2luYWwgdHJhbnNmZXIK
KwkgKiB0aGUgZW5kIG9mIHRoZSBvcmlnaW5hbCB0cmFuc2Zlci4KIAkgKi8KIAlpZiAodXNhX2Vy
cm9yKQogCQlnb3RvIGZpbGVfaXNfdmFsaWQ7CgogCS8qCiAJICogSWYgd2Ugd2VyZSBhYmxlIHRv
IHJlYWQgdGhlIHBhZ2UsIHdlIGV4YW1pbmUgaXQgdG8gc2VlIGlmIGl0Ci0JICogaXMgdGhlIHNh
bWUgb3IgZGlmZmVyZW50IElvIGJsb2NrCisJICogaXMgdGhlIHNhbWUgb3IgZGlmZmVyZW50IElv
IGJsb2NrLgogCSAqLwogCWlmIChlcnIpCiAJCWdvdG8gbmV4dF90ZXN0X3BhZ2VfMTsKQEAgLTIx
MzcsNyArMjEzNCw3IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAq
bG9nKQogCQlnb3RvIG5leHRfdGVzdF9wYWdlOwoKIGNoZWNrX3ZhbGlkOgotCS8qIFNraXAgb3Zl
ciB0aGUgcmVtYWluaW5nIHBhZ2VzIHRoaXMgdHJhbnNmZXIgKi8KKwkvKiBTa2lwIG92ZXIgdGhl
IHJlbWFpbmluZyBwYWdlcyB0aGlzIHRyYW5zZmVyLiAqLwogCXJlbWFpbl9wYWdlcyA9IHBhZ2Vf
Y250IC0gcGFnZV9wb3MgLSAxOwogCXBhcnRfaW9fY291bnQgKz0gcmVtYWluX3BhZ2VzOwoKQEAg
LTIxNDksNyArMjE0Niw3IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xv
ZyAqbG9nKQogCQkJZXhwZWN0ZWRfc2VxICs9IDE7CiAJfQoKLQkvKiBDYWxsIG91ciByb3V0aW5l
IHRvIGNoZWNrIHRoaXMgbG9nIHBhZ2UgKi8KKwkvKiBDYWxsIG91ciByb3V0aW5lIHRvIGNoZWNr
IHRoaXMgbG9nIHBhZ2UuICovCiAJbnRmc19mcmVlKHRzdF9wYWdlKTsKIAl0c3RfcGFnZSA9IE5V
TEw7CgpAQCAtMjE2Miw3ICsyMTU5LDcgQEAgc3RhdGljIGludCBsYXN0X2xvZ19sc24oc3RydWN0
IG50ZnNfbG9nICpsb2cpCgogZmlsZV9pc192YWxpZDoKCi0JLyogV2UgaGF2ZSBhIHZhbGlkIGZp
bGUgKi8KKwkvKiBXZSBoYXZlIGEgdmFsaWQgZmlsZS4gKi8KIAlpZiAocGFnZV9vZmYxIHx8IHRh
aWxfcGFnZSkgewogCQlzdHJ1Y3QgUkVDT1JEX1BBR0VfSERSICp0bXBfcGFnZTsKCkBAIC0yMTky
LDExICsyMTg5LDExIEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAq
bG9nKQoKIAkJCS8qCiAJCQkgKiBDb3JyZWN0IHBhZ2UgYW5kIGNvcHkgdGhlIGRhdGEgZnJvbSB0
aGlzIHBhZ2UKLQkJCSAqIGludG8gaXQgYW5kIGZsdXNoIGl0IHRvIGRpc2sKKwkJCSAqIGludG8g
aXQgYW5kIGZsdXNoIGl0IHRvIGRpc2suCiAJCQkgKi8KIAkJCW1lbWNweShwYWdlLCB0bXBfcGFn
ZSwgbG9nLT5wYWdlX3NpemUpOwoKLQkJCS8qIEZpbGwgbGFzdCBmbHVzaGVkIGxzbiB2YWx1ZSBm
bHVzaCB0aGUgcGFnZSAqLworCQkJLyogRmlsbCBsYXN0IGZsdXNoZWQgbHNuIHZhbHVlIGZsdXNo
IHRoZSBwYWdlLiAqLwogCQkJaWYgKGxvZy0+bWFqb3JfdmVyIDwgMikKIAkJCQlwYWdlLT5yaGRy
LmxzbiA9IHBhZ2UtPnJlY29yZF9oZHIubGFzdF9lbmRfbHNuOwogCQkJZWxzZQpAQCAtMjI0MCwx
MCArMjIzNyw5IEBAIHN0YXRpYyBpbnQgbGFzdF9sb2dfbHNuKHN0cnVjdCBudGZzX2xvZyAqbG9n
KQogfQoKIC8qCi0gKiByZWFkX2xvZ19yZWNfYnVmCisgKiByZWFkX2xvZ19yZWNfYnVmIC0gQ29w
eSBhIGxvZyByZWNvcmQgZnJvbSB0aGUgZmlsZSB0byBhIGJ1ZmZlci4KICAqCi0gKiBjb3BpZXMg
YSBsb2cgcmVjb3JkIGZyb20gdGhlIGZpbGUgdG8gYSBidWZmZXIKLSAqIFRoZSBsb2cgcmVjb3Jk
IG1heSBzcGFuIHNldmVyYWwgbG9nIHBhZ2VzIGFuZCBtYXkgZXZlbiB3cmFwIHRoZSBmaWxlCisg
KiBUaGUgbG9nIHJlY29yZCBtYXkgc3BhbiBzZXZlcmFsIGxvZyBwYWdlcyBhbmQgbWF5IGV2ZW4g
d3JhcCB0aGUgZmlsZS4KICAqLwogc3RhdGljIGludCByZWFkX2xvZ19yZWNfYnVmKHN0cnVjdCBu
dGZzX2xvZyAqbG9nLAogCQkJICAgIGNvbnN0IHN0cnVjdCBMRlNfUkVDT1JEX0hEUiAqcmgsIHZv
aWQgKmJ1ZmZlcikKQEAgLTIyNTcsNyArMjI1Myw3IEBAIHN0YXRpYyBpbnQgcmVhZF9sb2dfcmVj
X2J1ZihzdHJ1Y3QgbnRmc19sb2cgKmxvZywKCiAJLyoKIAkgKiBXaGlsZSB0aGVyZSBhcmUgbW9y
ZSBieXRlcyB0byB0cmFuc2ZlciwKLQkgKiB3ZSBjb250aW51ZSB0byBhdHRlbXB0IHRvIHBlcmZv
cm0gdGhlIHJlYWQKKwkgKiB3ZSBjb250aW51ZSB0byBhdHRlbXB0IHRvIHBlcmZvcm0gdGhlIHJl
YWQuCiAJICovCiAJZm9yICg7OykgewogCQlib29sIHVzYV9lcnJvcjsKQEAgLTIyNzQsNyArMjI3
MCw3IEBAIHN0YXRpYyBpbnQgcmVhZF9sb2dfcmVjX2J1ZihzdHJ1Y3QgbnRmc19sb2cgKmxvZywK
CiAJCS8qCiAJCSAqIFRoZSBsYXN0IGxzbiBvbiB0aGlzIHBhZ2UgYmV0dGVyIGJlIGdyZWF0ZXIg
b3IgZXF1YWwKLQkJICogdG8gdGhlIGxzbiB3ZSBhcmUgY29weWluZworCQkgKiB0byB0aGUgbHNu
IHdlIGFyZSBjb3B5aW5nLgogCQkgKi8KIAkJaWYgKGxzbiA+IGxlNjRfdG9fY3B1KHBoLT5yaGRy
LmxzbikpIHsKIAkJCWVyciA9IC1FSU5WQUw7CkBAIC0yMjgzLDcgKzIyNzksNyBAQCBzdGF0aWMg
aW50IHJlYWRfbG9nX3JlY19idWYoc3RydWN0IG50ZnNfbG9nICpsb2csCgogCQltZW1jcHkoYnVm
ZmVyLCBBZGQyUHRyKHBoLCBvZmYpLCB0YWlsKTsKCi0JCS8qIElmIHRoZXJlIGFyZSBubyBtb3Jl
IGJ5dGVzIHRvIHRyYW5zZmVyLCB3ZSBleGl0IHRoZSBsb29wICovCisJCS8qIElmIHRoZXJlIGFy
ZSBubyBtb3JlIGJ5dGVzIHRvIHRyYW5zZmVyLCB3ZSBleGl0IHRoZSBsb29wLiAqLwogCQlpZiAo
IWRhdGFfbGVuKSB7CiAJCQlpZiAoIWlzX2xvZ19yZWNvcmRfZW5kKHBoKSB8fAogCQkJICAgIGxz
biA+IGxlNjRfdG9fY3B1KHBoLT5yZWNvcmRfaGRyLmxhc3RfZW5kX2xzbikpIHsKQEAgLTIzMDMs
OCArMjI5OSw4IEBAIHN0YXRpYyBpbnQgcmVhZF9sb2dfcmVjX2J1ZihzdHJ1Y3QgbnRmc19sb2cg
KmxvZywKIAkJb2ZmID0gbG9nLT5kYXRhX29mZjsKCiAJCS8qCi0JCSAqIGFkanVzdCBvdXIgcG9p
bnRlciB0aGUgdXNlcidzIGJ1ZmZlciB0byB0cmFuc2ZlcgotCQkgKiB0aGUgbmV4dCBibG9jayB0
bworCQkgKiBBZGp1c3Qgb3VyIHBvaW50ZXIgdGhlIHVzZXIncyBidWZmZXIgdG8gdHJhbnNmZXIK
KwkJICogdGhlIG5leHQgYmxvY2sgdG8uCiAJCSAqLwogCQlidWZmZXIgPSBBZGQyUHRyKGJ1ZmZl
ciwgdGFpbCk7CiAJfQpAQCAtMjMyOCw3ICsyMzI0LDcgQEAgc3RhdGljIGludCByZWFkX3JzdF9h
cmVhKHN0cnVjdCBudGZzX2xvZyAqbG9nLCBzdHJ1Y3QgTlRGU19SRVNUQVJUICoqcnN0XywKIAkq
bHNuID0gMDsKIAkqcnN0XyA9IE5VTEw7CgotCS8qIElmIHRoZSBjbGllbnQgZG9lc24ndCBoYXZl
IGEgcmVzdGFydCBhcmVhLCBnbyBhaGVhZCBhbmQgZXhpdCBub3cgKi8KKwkvKiBJZiB0aGUgY2xp
ZW50IGRvZXNuJ3QgaGF2ZSBhIHJlc3RhcnQgYXJlYSwgZ28gYWhlYWQgYW5kIGV4aXQgbm93LiAq
LwogCWlmICghbHNuYykKIAkJcmV0dXJuIDA7CgpAQCAtMjM0MSw3ICsyMzM3LDcgQEAgc3RhdGlj
IGludCByZWFkX3JzdF9hcmVhKHN0cnVjdCBudGZzX2xvZyAqbG9nLCBzdHJ1Y3QgTlRGU19SRVNU
QVJUICoqcnN0XywKIAlsc25yID0gbGU2NF90b19jcHUocmgtPnRoaXNfbHNuKTsKCiAJaWYgKGxz
bmMgIT0gbHNucikgewotCQkvKiBJZiB0aGUgbHNuIHZhbHVlcyBkb24ndCBtYXRjaCwgdGhlbiB0
aGUgZGlzayBpcyBjb3JydXB0ICovCisJCS8qIElmIHRoZSBsc24gdmFsdWVzIGRvbid0IG1hdGNo
LCB0aGVuIHRoZSBkaXNrIGlzIGNvcnJ1cHQuICovCiAJCWVyciA9IC1FSU5WQUw7CiAJCWdvdG8g
b3V0OwogCX0KQEAgLTIzNjUsNyArMjM2MSw3IEBAIHN0YXRpYyBpbnQgcmVhZF9yc3RfYXJlYShz
dHJ1Y3QgbnRmc19sb2cgKmxvZywgc3RydWN0IE5URlNfUkVTVEFSVCAqKnJzdF8sCiAJCWdvdG8g
b3V0OwogCX0KCi0JLyogQ29weSB0aGUgZGF0YSBpbnRvIHRoZSAncnN0JyBidWZmZXIgKi8KKwkv
KiBDb3B5IHRoZSBkYXRhIGludG8gdGhlICdyc3QnIGJ1ZmZlci4gKi8KIAllcnIgPSByZWFkX2xv
Z19yZWNfYnVmKGxvZywgcmgsIHJzdCk7CiAJaWYgKGVycikKIAkJZ290byBvdXQ7CkBAIC0yMzg2
LDcgKzIzODIsNyBAQCBzdGF0aWMgaW50IGZpbmRfbG9nX3JlYyhzdHJ1Y3QgbnRmc19sb2cgKmxv
ZywgdTY0IGxzbiwgc3RydWN0IGxjYiAqbGNiKQogCXN0cnVjdCBMRlNfUkVDT1JEX0hEUiAqcmgg
PSBsY2ItPmxyaDsKIAl1MzIgcmVjX2xlbiwgbGVuOwoKLQkvKiBSZWFkIHRoZSByZWNvcmQgaGVh
ZGVyIGZvciB0aGlzIGxzbiAqLworCS8qIFJlYWQgdGhlIHJlY29yZCBoZWFkZXIgZm9yIHRoaXMg
bHNuLiAqLwogCWlmICghcmgpIHsKIAkJZXJyID0gcmVhZF9sb2dfcGFnZShsb2csIGxzbl90b192
Ym8obG9nLCBsc24pLAogCQkJCSAgICAoc3RydWN0IFJFQ09SRF9QQUdFX0hEUiAqKikmcmgsIE5V
TEwpOwpAQCAtMjM5OCw3ICsyMzk0LDcgQEAgc3RhdGljIGludCBmaW5kX2xvZ19yZWMoc3RydWN0
IG50ZnNfbG9nICpsb2csIHU2NCBsc24sIHN0cnVjdCBsY2IgKmxjYikKCiAJLyoKIAkgKiBJZiB0
aGUgbHNuIHRoZSBsb2cgcmVjb3JkIGRvZXNuJ3QgbWF0Y2ggdGhlIGRlc2lyZWQKLQkgKiBsc24g
dGhlbiB0aGUgZGlzayBpcyBjb3JydXB0CisJICogbHNuIHRoZW4gdGhlIGRpc2sgaXMgY29ycnVw
dC4KIAkgKi8KIAlpZiAobHNuICE9IGxlNjRfdG9fY3B1KHJoLT50aGlzX2xzbikpCiAJCXJldHVy
biAtRUlOVkFMOwpAQCAtMjQwNiw4ICsyNDAyLDggQEAgc3RhdGljIGludCBmaW5kX2xvZ19yZWMo
c3RydWN0IG50ZnNfbG9nICpsb2csIHU2NCBsc24sIHN0cnVjdCBsY2IgKmxjYikKIAlsZW4gPSBs
ZTMyX3RvX2NwdShyaC0+Y2xpZW50X2RhdGFfbGVuKTsKCiAJLyoKLQkgKiBjaGVjayB0aGF0IHRo
ZSBsZW5ndGggZmllbGQgaXNuJ3QgZ3JlYXRlciB0aGFuIHRoZSB0b3RhbAotCSAqIGF2YWlsYWJs
ZSBzcGFjZSB0aGUgbG9nIGZpbGUKKwkgKiBDaGVjayB0aGF0IHRoZSBsZW5ndGggZmllbGQgaXNu
J3QgZ3JlYXRlciB0aGFuIHRoZSB0b3RhbAorCSAqIGF2YWlsYWJsZSBzcGFjZSB0aGUgbG9nIGZp
bGUuCiAJICovCiAJcmVjX2xlbiA9IGxlbiArIGxvZy0+cmVjb3JkX2hlYWRlcl9sZW47CiAJaWYg
KHJlY19sZW4gPj0gbG9nLT50b3RhbF9hdmFpbCkKQEAgLTI0MTUsNyArMjQxMSw3IEBAIHN0YXRp
YyBpbnQgZmluZF9sb2dfcmVjKHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1NjQgbHNuLCBzdHJ1Y3Qg
bGNiICpsY2IpCgogCS8qCiAJICogSWYgdGhlIGVudGlyZSBsb2cgcmVjb3JkIGlzIG9uIHRoaXMg
bG9nIHBhZ2UsCi0JICogcHV0IGEgcG9pbnRlciB0byB0aGUgbG9nIHJlY29yZCB0aGUgY29udGV4
dCBibG9jaworCSAqIHB1dCBhIHBvaW50ZXIgdG8gdGhlIGxvZyByZWNvcmQgdGhlIGNvbnRleHQg
YmxvY2suCiAJICovCiAJaWYgKHJoLT5mbGFncyAmIExPR19SRUNPUkRfTVVMVElfUEFHRSkgewog
CQl2b2lkICpsciA9IG50ZnNfbWFsbG9jKGxlbik7CkBAIC0yNDI2LDEyICsyNDIyLDEyIEBAIHN0
YXRpYyBpbnQgZmluZF9sb2dfcmVjKHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1NjQgbHNuLCBzdHJ1
Y3QgbGNiICpsY2IpCiAJCWxjYi0+bG9nX3JlYyA9IGxyOwogCQlsY2ItPmFsbG9jID0gdHJ1ZTsK
Ci0JCS8qIENvcHkgdGhlIGRhdGEgaW50byB0aGUgYnVmZmVyIHJldHVybmVkICovCisJCS8qIENv
cHkgdGhlIGRhdGEgaW50byB0aGUgYnVmZmVyIHJldHVybmVkLiAqLwogCQllcnIgPSByZWFkX2xv
Z19yZWNfYnVmKGxvZywgcmgsIGxyKTsKIAkJaWYgKGVycikKIAkJCXJldHVybiBlcnI7CiAJfSBl
bHNlIHsKLQkJLyogSWYgYmV5b25kIHRoZSBlbmQgb2YgdGhlIGN1cnJlbnQgcGFnZSAtPiBhbiBl
cnJvciAqLworCQkvKiBJZiBiZXlvbmQgdGhlIGVuZCBvZiB0aGUgY3VycmVudCBwYWdlIC0+IGFu
IGVycm9yLiAqLwogCQl1MzIgcGFnZV9vZmYgPSBsc25fdG9fcGFnZV9vZmYobG9nLCBsc24pOwoK
IAkJaWYgKHBhZ2Vfb2ZmICsgbGVuICsgbG9nLT5yZWNvcmRfaGVhZGVyX2xlbiA+IGxvZy0+cGFn
ZV9zaXplKQpAQCAtMjQ0NSw5ICsyNDQxLDcgQEAgc3RhdGljIGludCBmaW5kX2xvZ19yZWMoc3Ry
dWN0IG50ZnNfbG9nICpsb2csIHU2NCBsc24sIHN0cnVjdCBsY2IgKmxjYikKIH0KCiAvKgotICog
cmVhZF9sb2dfcmVjX2xjYgotICoKLSAqIGluaXRpYXRlcyB0aGUgcXVlcnkgb3BlcmF0aW9uLgor
ICogcmVhZF9sb2dfcmVjX2xjYiAtIEluaXQgdGhlIHF1ZXJ5IG9wZXJhdGlvbi4KICAqLwogc3Rh
dGljIGludCByZWFkX2xvZ19yZWNfbGNiKHN0cnVjdCBudGZzX2xvZyAqbG9nLCB1NjQgbHNuLCB1
MzIgY3R4X21vZGUsCiAJCQkgICAgc3RydWN0IGxjYiAqKmxjYl8pCkBAIC0yNDY1LDcgKzI0NTks
NyBAQCBzdGF0aWMgaW50IHJlYWRfbG9nX3JlY19sY2Ioc3RydWN0IG50ZnNfbG9nICpsb2csIHU2
NCBsc24sIHUzMiBjdHhfbW9kZSwKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQoKLQkvKiBjaGVjayB0
aGF0IHRoZSBnaXZlbiBsc24gaXMgdGhlIGxlZ2FsIHJhbmdlIGZvciB0aGlzIGNsaWVudCAqLwor
CS8qIENoZWNrIHRoYXQgdGhlIGdpdmVuIGxzbiBpcyB0aGUgbGVnYWwgcmFuZ2UgZm9yIHRoaXMg
Y2xpZW50LiAqLwogCWNyID0gQWRkMlB0cihsb2ctPnJhLCBsZTE2X3RvX2NwdShsb2ctPnJhLT5j
bGllbnRfb2ZmKSk7CgogCWlmICghdmVyaWZ5X2NsaWVudF9sc24obG9nLCBjciwgbHNuKSkKQEAg
LTI0NzcsNyArMjQ3MSw3IEBAIHN0YXRpYyBpbnQgcmVhZF9sb2dfcmVjX2xjYihzdHJ1Y3QgbnRm
c19sb2cgKmxvZywgdTY0IGxzbiwgdTMyIGN0eF9tb2RlLAogCWxjYi0+Y2xpZW50ID0gbG9nLT5j
bGllbnRfaWQ7CiAJbGNiLT5jdHhfbW9kZSA9IGN0eF9tb2RlOwoKLQkvKiBGaW5kIHRoZSBsb2cg
cmVjb3JkIGluZGljYXRlZCBieSB0aGUgZ2l2ZW4gbHNuICovCisJLyogRmluZCB0aGUgbG9nIHJl
Y29yZCBpbmRpY2F0ZWQgYnkgdGhlIGdpdmVuIGxzbi4gKi8KIAllcnIgPSBmaW5kX2xvZ19yZWMo
bG9nLCBsc24sIGxjYik7CiAJaWYgKGVycikKIAkJZ290byBvdXQ7CkBAIC0yNDk0LDcgKzI0ODgs
NyBAQCBzdGF0aWMgaW50IHJlYWRfbG9nX3JlY19sY2Ioc3RydWN0IG50ZnNfbG9nICpsb2csIHU2
NCBsc24sIHUzMiBjdHhfbW9kZSwKIC8qCiAgKiBmaW5kX2NsaWVudF9uZXh0X2xzbgogICoKLSAq
IGF0dGVtcHQgdG8gZmluZCB0aGUgbmV4dCBsc24gdG8gcmV0dXJuIHRvIGEgY2xpZW50IGJhc2Vk
IG9uIHRoZSBjb250ZXh0IG1vZGUuCisgKiBBdHRlbXB0IHRvIGZpbmQgdGhlIG5leHQgbHNuIHRv
IHJldHVybiB0byBhIGNsaWVudCBiYXNlZCBvbiB0aGUgY29udGV4dCBtb2RlLgogICovCiBzdGF0
aWMgaW50IGZpbmRfY2xpZW50X25leHRfbHNuKHN0cnVjdCBudGZzX2xvZyAqbG9nLCBzdHJ1Y3Qg
bGNiICpsY2IsIHU2NCAqbHNuKQogewpAQCAtMjUwOCw3ICsyNTAyLDcgQEAgc3RhdGljIGludCBm
aW5kX2NsaWVudF9uZXh0X2xzbihzdHJ1Y3QgbnRmc19sb2cgKmxvZywgc3RydWN0IGxjYiAqbGNi
LCB1NjQgKmxzbikKIAlpZiAobGNiX2N0eF9uZXh0ICE9IGxjYi0+Y3R4X21vZGUpCiAJCWdvdG8g
Y2hlY2tfdW5kb19uZXh0OwoKLQkvKiBMb29wIGFzIGxvbmcgYXMgYW5vdGhlciBsc24gY2FuIGJl
IGZvdW5kICovCisJLyogTG9vcCBhcyBsb25nIGFzIGFub3RoZXIgbHNuIGNhbiBiZSBmb3VuZC4g
Ki8KIAlmb3IgKDs7KSB7CiAJCXU2NCBjdXJyZW50X2xzbjsKCkBAIC0yNjk0LDcgKzI2ODgsNyBA
QCBzdGF0aWMgaW5saW5lIGJvb2wgY2hlY2tfYXR0cihjb25zdCBzdHJ1Y3QgTUZUX1JFQyAqcmVj
LAogCXU2NCBkc2l6ZSwgc3ZjbiwgZXZjbjsKIAl1MTYgcnVuX29mZjsKCi0JLyogQ2hlY2sgdGhl
IGZpeGVkIHBhcnQgb2YgdGhlIGF0dHJpYnV0ZSByZWNvcmQgaGVhZGVyICovCisJLyogQ2hlY2sg
dGhlIGZpeGVkIHBhcnQgb2YgdGhlIGF0dHJpYnV0ZSByZWNvcmQgaGVhZGVyLiAqLwogCWlmIChh
c2l6ZSA+PSBzYmktPnJlY29yZF9zaXplIHx8CiAJICAgIGFzaXplICsgUHRyT2Zmc2V0KHJlYywg
YXR0cikgPj0gc2JpLT5yZWNvcmRfc2l6ZSB8fAogCSAgICAoYXR0ci0+bmFtZV9sZW4gJiYKQEAg
LTI3MDMsNyArMjY5Nyw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBjaGVja19hdHRyKGNvbnN0IHN0
cnVjdCBNRlRfUkVDICpyZWMsCiAJCXJldHVybiBmYWxzZTsKIAl9CgotCS8qIENoZWNrIHRoZSBh
dHRyaWJ1dGUgZmllbGRzICovCisJLyogQ2hlY2sgdGhlIGF0dHJpYnV0ZSBmaWVsZHMuICovCiAJ
c3dpdGNoIChhdHRyLT5ub25fcmVzKSB7CiAJY2FzZSAwOgogCQlyc2l6ZSA9IGxlMzJfdG9fY3B1
KGF0dHItPnJlcy5kYXRhX3NpemUpOwpAQCAtMjc4Niw3ICsyNzgwLDcgQEAgc3RhdGljIGlubGlu
ZSBib29sIGNoZWNrX2ZpbGVfcmVjb3JkKGNvbnN0IHN0cnVjdCBNRlRfUkVDICpyZWMsCiAJdTE2
IGFvID0gbGUxNl90b19jcHUocmVjLT5hdHRyX29mZik7CiAJdTMyIHJzID0gc2JpLT5yZWNvcmRf
c2l6ZTsKCi0JLyogY2hlY2sgdGhlIGZpbGUgcmVjb3JkIGhlYWRlciBmb3IgY29uc2lzdGVuY3kg
Ki8KKwkvKiBDaGVjayB0aGUgZmlsZSByZWNvcmQgaGVhZGVyIGZvciBjb25zaXN0ZW5jeS4gKi8K
IAlpZiAocmVjLT5yaGRyLnNpZ24gIT0gTlRGU19GSUxFX1NJR05BVFVSRSB8fAogCSAgICBmbyA+
IChTRUNUT1JfU0laRSAtICgocnMgPj4gU0VDVE9SX1NISUZUKSArIDEpICogc2l6ZW9mKHNob3J0
KSkgfHwKIAkgICAgKGZuIC0gMSkgKiBTRUNUT1JfU0laRSAhPSBycyB8fCBhbyA8IE1GVFJFQ09S
RF9GSVhVUF9PRkZTRVRfMSB8fApAQCAtMjc5NSw3ICsyNzg5LDcgQEAgc3RhdGljIGlubGluZSBi
b29sIGNoZWNrX2ZpbGVfcmVjb3JkKGNvbnN0IHN0cnVjdCBNRlRfUkVDICpyZWMsCiAJCXJldHVy
biBmYWxzZTsKIAl9CgotCS8qIExvb3AgdG8gY2hlY2sgYWxsIG9mIHRoZSBhdHRyaWJ1dGVzICov
CisJLyogTG9vcCB0byBjaGVjayBhbGwgb2YgdGhlIGF0dHJpYnV0ZXMuICovCiAJZm9yIChhdHRy
ID0gQWRkMlB0cihyZWMsIGFvKTsgYXR0ci0+dHlwZSAhPSBBVFRSX0VORDsKIAkgICAgIGF0dHIg
PSBBZGQyUHRyKGF0dHIsIGxlMzJfdG9fY3B1KGF0dHItPnNpemUpKSkgewogCQlpZiAoY2hlY2tf
YXR0cihyZWMsIGF0dHIsIHNiaSkpCkBAIC0yOTQ4LDcgKzI5NDIsMTEgQEAgc3RydWN0IE9wZW5B
dHRyIHsKIAkvLyBDTFNUIHJubzsKIH07CgotLyogUmV0dXJucyAwIGlmICdhdHRyJyBoYXMgdGhl
IHNhbWUgdHlwZSBhbmQgbmFtZSAqLworLyoKKyAqIGNtcF90eXBlX2FuZF9uYW1lCisgKgorICog
UmV0dXJuOiAwIGlmICdhdHRyJyBoYXMgdGhlIHNhbWUgdHlwZSBhbmQgbmFtZS4KKyAqLwogc3Rh
dGljIGlubGluZSBpbnQgY21wX3R5cGVfYW5kX25hbWUoY29uc3Qgc3RydWN0IEFUVFJJQiAqYTEs
CiAJCQkJICAgIGNvbnN0IHN0cnVjdCBBVFRSSUIgKmEyKQogewpAQCAtMzAyMSwxMCArMzAxOSw4
IEBAIHN0YXRpYyBzdHJ1Y3QgQVRUUklCICphdHRyX2NyZWF0ZV9ub25yZXNfbG9nKHN0cnVjdCBu
dGZzX3NiX2luZm8gKnNiaSwKIH0KCiAvKgotICogZG9fYWN0aW9uCi0gKgotICogY29tbW9uIHJv
dXRpbmUgZm9yIHRoZSBSZWRvIGFuZCBVbmRvIFBhc3NlcwotICogSWYgcmxzbiBpcyBOVUxMIHRo
ZW4gdW5kbworICogZG9fYWN0aW9uIC0gQ29tbW9uIHJvdXRpbmUgZm9yIHRoZSBSZWRvIGFuZCBV
bmRvIFBhc3Nlcy4KKyAqIEBybHNuOiBJZiBpdCBpcyBOVUxMIHRoZW4gdW5kby4KICAqLwogc3Rh
dGljIGludCBkb19hY3Rpb24oc3RydWN0IG50ZnNfbG9nICpsb2csIHN0cnVjdCBPUEVOX0FUVFJf
RU5SVFkgKm9lLAogCQkgICAgIGNvbnN0IHN0cnVjdCBMT0dfUkVDX0hEUiAqbHJoLCB1MzIgb3As
IHZvaWQgKmRhdGEsCkBAIC0zMDYxLDEwICszMDU3LDEwIEBAIHN0YXRpYyBpbnQgZG9fYWN0aW9u
KHN0cnVjdCBudGZzX2xvZyAqbG9nLCBzdHJ1Y3QgT1BFTl9BVFRSX0VOUlRZICpvZSwKCiAJb2Eg
PSBvZS0+cHRyOwoKLQkvKiBCaWcgc3dpdGNoIHRvIHByZXBhcmUgKi8KKwkvKiBCaWcgc3dpdGNo
IHRvIHByZXBhcmUuICovCiAJc3dpdGNoIChvcCkgewogCS8qID09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotCSAqIFByb2Nlc3MgTUZU
IHJlY29yZHMsIGFzIGRlc2NyaWJlZCBieSB0aGUgY3VycmVudCBsb2cgcmVjb3JkCisJICogUHJv
Y2VzcyBNRlQgcmVjb3JkcywgYXMgZGVzY3JpYmVkIGJ5IHRoZSBjdXJyZW50IGxvZyByZWNvcmQu
CiAJICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09CiAJICovCiAJY2FzZSBJbml0aWFsaXplRmlsZVJlY29yZFNlZ21lbnQ6CkBAIC0z
MDkzLDcgKzMwODksNyBAQCBzdGF0aWMgaW50IGRvX2FjdGlvbihzdHJ1Y3QgbnRmc19sb2cgKmxv
Zywgc3RydWN0IE9QRU5fQVRUUl9FTlJUWSAqb2UsCiAJCQlpZiAoZXJyKQogCQkJCWdvdG8gb3V0
OwogCQl9IGVsc2UgewotCQkJLyogcmVhZCBmcm9tIGRpc2sgKi8KKwkJCS8qIFJlYWQgZnJvbSBk
aXNrLiAqLwogCQkJZXJyID0gbWlfZ2V0KHNiaSwgcm5vLCAmbWkpOwogCQkJaWYgKGVycikKIAkJ
CQlyZXR1cm4gZXJyOwpAQCAtMzE1MCw5ICszMTQ2LDggQEAgc3RhdGljIGludCBkb19hY3Rpb24o
c3RydWN0IG50ZnNfbG9nICpsb2csIHN0cnVjdCBPUEVOX0FUVFJfRU5SVFkgKm9lLAogCQlpbm9k
ZV9wYXJlbnQgPSBOVUxMOwogCQlicmVhazsKCi0JLyogPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0JICogUHJvY2VzcyBhdHRyaWJ1
dGVzLCBhcyBkZXNjcmliZWQgYnkgdGhlIGN1cnJlbnQgbG9nIHJlY29yZAotCSAqID09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQorCS8q
CisJICogUHJvY2VzcyBhdHRyaWJ1dGVzLCBhcyBkZXNjcmliZWQgYnkgdGhlIGN1cnJlbnQgbG9n
IHJlY29yZC4KIAkgKi8KIAljYXNlIFVwZGF0ZU5vbnJlc2lkZW50VmFsdWU6CiAJY2FzZSBBZGRJ
bmRleEVudHJ5QWxsb2NhdGlvbjoKQEAgLTMxOTcsNyArMzE5Miw3IEBAIHN0YXRpYyBpbnQgZG9f
YWN0aW9uKHN0cnVjdCBudGZzX2xvZyAqbG9nLCBzdHJ1Y3QgT1BFTl9BVFRSX0VOUlRZICpvZSwK
IAkJV0FSTl9PTigxKTsKIAl9CgotCS8qIEJpZyBzd2l0Y2ggdG8gZG8gb3BlcmF0aW9uICovCisJ
LyogQmlnIHN3aXRjaCB0byBkbyBvcGVyYXRpb24uICovCiAJc3dpdGNoIChvcCkgewogCWNhc2Ug
SW5pdGlhbGl6ZUZpbGVSZWNvcmRTZWdtZW50OgogCQlpZiAocm9mZiArIGRsZW4gPiByZWNvcmRf
c2l6ZSkKQEAgLTMzMDAsNyArMzI5NSw3IEBAIHN0YXRpYyBpbnQgZG9fYWN0aW9uKHN0cnVjdCBu
dGZzX2xvZyAqbG9nLCBzdHJ1Y3QgT1BFTl9BVFRSX0VOUlRZICpvZSwKCiAJCWlmIChuc2l6ZSA8
IGFzaXplKSB7CiAJCQltZW1tb3ZlKEFkZDJQdHIoYXR0ciwgYW9mZiksIGRhdGEsIGRsZW4pOwot
CQkJZGF0YSA9IE5VTEw7IC8vIFRvIHNraXAgYmVsb3cgbWVtbW92ZQorCQkJZGF0YSA9IE5VTEw7
IC8vIFRvIHNraXAgYmVsb3cgbWVtbW92ZSgpLgogCQl9CgogCQltZW1tb3ZlKEFkZDJQdHIoYXR0
ciwgbnNpemUpLCBBZGQyUHRyKGF0dHIsIGFzaXplKSwKQEAgLTM3MjMsMTEgKzM3MTgsMTEgQEAg
c3RhdGljIGludCBkb19hY3Rpb24oc3RydWN0IG50ZnNfbG9nICpsb2csIHN0cnVjdCBPUEVOX0FU
VFJfRU5SVFkgKm9lLAogfQoKIC8qCi0gKiBsb2dfcmVwbGF5CisgKiBsb2dfcmVwbGF5IC0gUmVw
bGF5cyBsb2cgYW5kIGVtcHRpZXMgaXQuCiAgKgotICogdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQg
ZHVyaW5nIG1vdW50IG9wZXJhdGlvbgotICogaXQgcmVwbGF5cyBsb2cgYW5kIGVtcHRpZXMgaXQK
LSAqIGluaXRpYWxpemVkIGlzIHNldCBmYWxzZSBpZiBsb2dmaWxlIGNvbnRhaW5zICctMScKKyAq
IFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGR1cmluZyBtb3VudCBvcGVyYXRpb24uCisgKiBJdCBy
ZXBsYXlzIGxvZyBhbmQgZW1wdGllcyBpdC4KKyAqIEluaXRpYWxpemVkIGlzIHNldCBmYWxzZSBp
ZiBsb2dmaWxlIGNvbnRhaW5zICctMScuCiAgKi8KIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZz
X2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCiB7CkBAIC0zNzczLDcgKzM3NjgsNyBAQCBp
bnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQog
CXUxNiB0MTY7CiAJdTMyIHQzMjsKCi0JLyogR2V0IHRoZSBzaXplIG9mIHBhZ2UuIE5PVEU6IFRv
IHJlcGxheSB3ZSBjYW4gdXNlIGRlZmF1bHQgcGFnZSAqLworCS8qIEdldCB0aGUgc2l6ZSBvZiBw
YWdlLiBOT1RFOiBUbyByZXBsYXkgd2UgY2FuIHVzZSBkZWZhdWx0IHBhZ2UuICovCiAjaWYgUEFH
RV9TSVpFID49IERlZmF1bHRMb2dQYWdlU2l6ZSAmJiBQQUdFX1NJWkUgPD0gRGVmYXVsdExvZ1Bh
Z2VTaXplICogMgogCXBhZ2Vfc2l6ZSA9IG5vcm1fZmlsZV9wYWdlKFBBR0VfU0laRSwgJmxfc2l6
ZSwgdHJ1ZSk7CiAjZWxzZQpAQCAtMzc5OSw3ICszNzk0LDcgQEAgaW50IGxvZ19yZXBsYXkoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlsb2ctPnBhZ2VfbWFzayA9
IHBhZ2Vfc2l6ZSAtIDE7CiAJbG9nLT5wYWdlX2JpdHMgPSBibGtzaXplX2JpdHMocGFnZV9zaXpl
KTsKCi0JLyogTG9vayBmb3IgYSByZXN0YXJ0IGFyZWEgb24gdGhlIGRpc2sgKi8KKwkvKiBMb29r
IGZvciBhIHJlc3RhcnQgYXJlYSBvbiB0aGUgZGlzay4gKi8KIAllcnIgPSBsb2dfcmVhZF9yc3Qo
bG9nLCBsX3NpemUsIHRydWUsICZyc3RfaW5mbyk7CiAJaWYgKGVycikKIAkJZ290byBvdXQ7CkBA
IC0zODA5LDcgKzM4MDQsNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IGJvb2wgKmluaXRpYWxpemVkKQoKIAlpZiAoIXJzdF9pbmZvLnJlc3RhcnQpIHsKIAkJaWYgKHJz
dF9pbmZvLmluaXRpYWxpemVkKSB7Ci0JCQkvKiBubyByZXN0YXJ0IGFyZWEgYnV0IHRoZSBmaWxl
IGlzIG5vdCBpbml0aWFsaXplZCAqLworCQkJLyogTm8gcmVzdGFydCBhcmVhIGJ1dCB0aGUgZmls
ZSBpcyBub3QgaW5pdGlhbGl6ZWQuICovCiAJCQllcnIgPSAtRUlOVkFMOwogCQkJZ290byBvdXQ7
CiAJCX0KQEAgLTM4MzIsMTQgKzM4MjcsMTQgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKCiAJLyoKIAkgKiBJZiB0aGUgcmVzdGFydCBv
ZmZzZXQgYWJvdmUgd2Fzbid0IHplcm8gdGhlbiB3ZSB3b24ndAotCSAqIGxvb2sgZm9yIGEgc2Vj
b25kIHJlc3RhcnQKKwkgKiBsb29rIGZvciBhIHNlY29uZCByZXN0YXJ0LgogCSAqLwogCWlmIChy
c3RfaW5mby52Ym8pCiAJCWdvdG8gY2hlY2tfcmVzdGFydF9hcmVhOwoKIAllcnIgPSBsb2dfcmVh
ZF9yc3QobG9nLCBsX3NpemUsIGZhbHNlLCAmcnN0X2luZm8yKTsKCi0JLyogRGV0ZXJtaW5lIHdo
aWNoIHJlc3RhcnQgYXJlYSB0byB1c2UgKi8KKwkvKiBEZXRlcm1pbmUgd2hpY2ggcmVzdGFydCBh
cmVhIHRvIHVzZS4gKi8KIAlpZiAoIXJzdF9pbmZvMi5yZXN0YXJ0IHx8IHJzdF9pbmZvMi5sYXN0
X2xzbiA8PSByc3RfaW5mby5sYXN0X2xzbikKIAkJZ290byB1c2VfZmlyc3RfcGFnZTsKCkBAIC0z
ODY2LDEwICszODYxLDEzIEBAIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwg
Ym9vbCAqaW5pdGlhbGl6ZWQpCiAJbnRmc19mcmVlKHJzdF9pbmZvMi5yX3BhZ2UpOwoKIGNoZWNr
X3Jlc3RhcnRfYXJlYToKLQkvKiBJZiB0aGUgcmVzdGFydCBhcmVhIGlzIGF0IG9mZnNldCAwLCB3
ZSB3YW50IHRvIHdyaXRlIHRoZSBzZWNvbmQgcmVzdGFydCBhcmVhIGZpcnN0ICovCisJLyoKKwkg
KiBJZiB0aGUgcmVzdGFydCBhcmVhIGlzIGF0IG9mZnNldCAwLCB3ZSB3YW50CisJICogdG8gd3Jp
dGUgdGhlIHNlY29uZCByZXN0YXJ0IGFyZWEgZmlyc3QuCisJICovCiAJbG9nLT5pbml0X3JhID0g
ISFyc3RfaW5mby52Ym87CgotCS8qIElmIHdlIGhhdmUgYSB2YWxpZCBwYWdlIHRoZW4gZ3JhYiBh
IHBvaW50ZXIgdG8gdGhlIHJlc3RhcnQgYXJlYSAqLworCS8qIElmIHdlIGhhdmUgYSB2YWxpZCBw
YWdlIHRoZW4gZ3JhYiBhIHBvaW50ZXIgdG8gdGhlIHJlc3RhcnQgYXJlYS4gKi8KIAlyYTIgPSBy
c3RfaW5mby52YWxpZF9wYWdlCiAJCSAgICAgID8gQWRkMlB0cihyc3RfaW5mby5yX3BhZ2UsCiAJ
CQkJbGUxNl90b19jcHUocnN0X2luZm8ucl9wYWdlLT5yYV9vZmYpKQpAQCAtMzg4MSw3ICszODc5
LDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFs
aXplZCkKIAkJYm9vbCB1c2VfbXVsdGlfcGFnZSA9IGZhbHNlOwogCQl1MzIgb3Blbl9sb2dfY291
bnQ7CgotCQkvKiBEbyBzb21lIGNoZWNrcyBiYXNlZCBvbiB3aGV0aGVyIHdlIGhhdmUgYSB2YWxp
ZCBsb2cgcGFnZSAqLworCQkvKiBEbyBzb21lIGNoZWNrcyBiYXNlZCBvbiB3aGV0aGVyIHdlIGhh
dmUgYSB2YWxpZCBsb2cgcGFnZS4gKi8KIAkJaWYgKCFyc3RfaW5mby52YWxpZF9wYWdlKSB7CiAJ
CQlvcGVuX2xvZ19jb3VudCA9IGdldF9yYW5kb21faW50KCk7CiAJCQlnb3RvIGluaXRfbG9nX2lu
c3RhbmNlOwpAQCAtMzg5MCw3ICszODg4LDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKCiAJCS8qCiAJCSAqIElmIHRoZSByZXN0YXJ0
IHBhZ2Ugc2l6ZSBpc24ndCBjaGFuZ2luZyB0aGVuIHdlIHdhbnQgdG8KLQkJICogY2hlY2sgaG93
IG11Y2ggd29yayB3ZSBuZWVkIHRvIGRvCisJCSAqIGNoZWNrIGhvdyBtdWNoIHdvcmsgd2UgbmVl
ZCB0byBkby4KIAkJICovCiAJCWlmIChwYWdlX3NpemUgIT0gbGUzMl90b19jcHUocnN0X2luZm8u
cl9wYWdlLT5zeXNfcGFnZV9zaXplKSkKIAkJCWdvdG8gaW5pdF9sb2dfaW5zdGFuY2U7CkBAIC0z
OTA4LDcgKzM5MDYsOSBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJv
b2wgKmluaXRpYWxpemVkKQogCQl9CiAJCWxvZy0+cmEgPSByYTsKCi0JCS8qIFB1dCB0aGUgcmVz
dGFydCBhcmVhcyBhbmQgaW5pdGlhbGl6ZSB0aGUgbG9nIGZpbGUgYXMgcmVxdWlyZWQgKi8KKwkJ
LyogUHV0IHRoZSByZXN0YXJ0IGFyZWFzIGFuZCBpbml0aWFsaXplCisJCSAqIHRoZSBsb2cgZmls
ZSBhcyByZXF1aXJlZC4KKwkJICovCiAJCWdvdG8gcHJvY2Vzc19sb2c7CiAJfQoKQEAgLTM5MTgs
OSArMzkxOCw5IEBAIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAq
aW5pdGlhbGl6ZWQpCiAJfQoKIAkvKgotCSAqIElmIHRoZSBsb2cgcGFnZSBvciB0aGUgc3lzdGVt
IHBhZ2Ugc2l6ZXMgaGF2ZSBjaGFuZ2VkLCB3ZSBjYW4ndCB1c2UgdGhlIGxvZyBmaWxlCi0JICog
V2UgbXVzdCB1c2UgdGhlIHN5c3RlbSBwYWdlIHNpemUgaW5zdGVhZCBvZiB0aGUgZGVmYXVsdCBz
aXplCi0JICogaWYgdGhlcmUgaXMgbm90IGEgY2xlYW4gc2h1dGRvd24KKwkgKiBJZiB0aGUgbG9n
IHBhZ2Ugb3IgdGhlIHN5c3RlbSBwYWdlIHNpemVzIGhhdmUgY2hhbmdlZCwgd2UgY2FuJ3QKKwkg
KiB1c2UgdGhlIGxvZyBmaWxlLiBXZSBtdXN0IHVzZSB0aGUgc3lzdGVtIHBhZ2Ugc2l6ZSBpbnN0
ZWFkIG9mIHRoZQorCSAqIGRlZmF1bHQgc2l6ZSBpZiB0aGVyZSBpcyBub3QgYSBjbGVhbiBzaHV0
ZG93bi4KIAkgKi8KIAl0MzIgPSBsZTMyX3RvX2NwdShyc3RfaW5mby5yX3BhZ2UtPnN5c19wYWdl
X3NpemUpOwogCWlmIChwYWdlX3NpemUgIT0gdDMyKSB7CkBAIC0zOTM1LDcgKzM5MzUsNyBAQCBp
bnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQog
CQlnb3RvIG91dDsKIAl9CgotCS8qIElmIHRoZSBmaWxlIHNpemUgaGFzIHNocnVuayB0aGVuIHdl
IHdvbid0IG1vdW50IGl0ICovCisJLyogSWYgdGhlIGZpbGUgc2l6ZSBoYXMgc2hydW5rIHRoZW4g
d2Ugd29uJ3QgbW91bnQgaXQuICovCiAJaWYgKGxfc2l6ZSA8IGxlNjRfdG9fY3B1KHJhMi0+bF9z
aXplKSkgewogCQllcnIgPSAtRUlOVkFMOwogCQlnb3RvIG91dDsKQEAgLTM5NjIsMjcgKzM5NjIs
MzAgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFs
aXplZCkKIAl2Ym8gPSBsc25fdG9fdmJvKGxvZywgbG9nLT5sYXN0X2xzbik7CgogCWlmICh2Ym8g
PCBsb2ctPmZpcnN0X3BhZ2UpIHsKLQkJLyogVGhpcyBpcyBhIHBzZXVkbyBsc24gKi8KKwkJLyog
VGhpcyBpcyBhIHBzZXVkbyBsc24uICovCiAJCWxvZy0+bF9mbGFncyB8PSBOVEZTTE9HX05PX0xB
U1RfTFNOOwogCQlsb2ctPm5leHRfcGFnZSA9IGxvZy0+Zmlyc3RfcGFnZTsKIAkJZ290byBmaW5k
X29sZGVzdDsKIAl9CgotCS8qIEZpbmQgdGhlIGVuZCBvZiB0aGlzIGxvZyByZWNvcmQgKi8KKwkv
KiBGaW5kIHRoZSBlbmQgb2YgdGhpcyBsb2cgcmVjb3JkLiAqLwogCW9mZiA9IGZpbmFsX2xvZ19v
ZmYobG9nLCBsb2ctPmxhc3RfbHNuLAogCQkJICAgIGxlMzJfdG9fY3B1KHJhMi0+bGFzdF9sc25f
ZGF0YV9sZW4pKTsKCi0JLyogSWYgd2Ugd3JhcHBlZCB0aGUgZmlsZSB0aGVuIGluY3JlbWVudCB0
aGUgc2VxdWVuY2UgbnVtYmVyICovCisJLyogSWYgd2Ugd3JhcHBlZCB0aGUgZmlsZSB0aGVuIGlu
Y3JlbWVudCB0aGUgc2VxdWVuY2UgbnVtYmVyLiAqLwogCWlmIChvZmYgPD0gdmJvKSB7CiAJCWxv
Zy0+c2VxX251bSArPSAxOwogCQlsb2ctPmxfZmxhZ3MgfD0gTlRGU0xPR19XUkFQUEVEOwogCX0K
Ci0JLyogTm93IGNvbXB1dGUgdGhlIG5leHQgbG9nIHBhZ2UgdG8gdXNlICovCisJLyogTm93IGNv
bXB1dGUgdGhlIG5leHQgbG9nIHBhZ2UgdG8gdXNlLiAqLwogCXZibyAmPSB+bG9nLT5zeXNfcGFn
ZV9tYXNrOwogCXRhaWwgPSBsb2ctPnBhZ2Vfc2l6ZSAtIChvZmYgJiBsb2ctPnBhZ2VfbWFzaykg
LSAxOwoKLQkvKiBJZiB3ZSBjYW4gZml0IGFub3RoZXIgbG9nIHJlY29yZCBvbiB0aGUgcGFnZSwg
bW92ZSBiYWNrIGEgcGFnZSB0aGUgbG9nIGZpbGUgKi8KKwkvKgorCSAqSWYgd2UgY2FuIGZpdCBh
bm90aGVyIGxvZyByZWNvcmQgb24gdGhlIHBhZ2UsCisJICogbW92ZSBiYWNrIGEgcGFnZSB0aGUg
bG9nIGZpbGUuCisJICovCiAJaWYgKHRhaWwgPj0gbG9nLT5yZWNvcmRfaGVhZGVyX2xlbikgewog
CQlsb2ctPmxfZmxhZ3MgfD0gTlRGU0xPR19SRVVTRV9UQUlMOwogCQlsb2ctPm5leHRfcGFnZSA9
IHZibzsKQEAgLTM5OTEsNyArMzk5NCwxMCBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQogCX0KCiBmaW5kX29sZGVzdDoKLQkvKiBGaW5k
IHRoZSBvbGRlc3QgY2xpZW50IGxzbi4gVXNlIHRoZSBsYXN0IGZsdXNoZWQgbHNuIGFzIGEgc3Rh
cnRpbmcgcG9pbnQgKi8KKwkvKgorCSAqIEZpbmQgdGhlIG9sZGVzdCBjbGllbnQgbHNuLiBVc2Ug
dGhlIGxhc3QKKwkgKiBmbHVzaGVkIGxzbiBhcyBhIHN0YXJ0aW5nIHBvaW50LgorCSAqLwogCWxv
Zy0+b2xkZXN0X2xzbiA9IGxvZy0+bGFzdF9sc247CiAJb2xkZXN0X2NsaWVudF9sc24oQWRkMlB0
cihyYTIsIGxlMTZfdG9fY3B1KHJhMi0+Y2xpZW50X29mZikpLAogCQkJICByYTItPmNsaWVudF9p
ZHhbMV0sICZsb2ctPm9sZGVzdF9sc24pOwpAQCAtNDAzNywxOCArNDA0MywxOCBAQCBpbnQgbG9n
X3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQoKIAlsZTMy
X2FkZF9jcHUoJnJhLT5vcGVuX2xvZ19jb3VudCwgMSk7CgotCS8qIE5vdyB3ZSBuZWVkIHRvIHdh
bGsgdGhyb3VnaCBsb29raW5nIGZvciB0aGUgbGFzdCBsc24gKi8KKwkvKiBOb3cgd2UgbmVlZCB0
byB3YWxrIHRocm91Z2ggbG9va2luZyBmb3IgdGhlIGxhc3QgbHNuLiAqLwogCWVyciA9IGxhc3Rf
bG9nX2xzbihsb2cpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKIAlsb2ctPmN1cnJlbnRfYXZh
aWwgPSBjdXJyZW50X2xvZ19hdmFpbChsb2cpOwoKLQkvKiBSZW1lbWJlciB3aGljaCByZXN0YXJ0
IGFyZWEgdG8gd3JpdGUgZmlyc3QgKi8KKwkvKiBSZW1lbWJlciB3aGljaCByZXN0YXJ0IGFyZWEg
dG8gd3JpdGUgZmlyc3QuICovCiAJbG9nLT5pbml0X3JhID0gcnN0X2luZm8udmJvOwoKIHByb2Nl
c3NfbG9nOgotCS8qIDEuMCwgMS4xLCAyLjAgbG9nLT5tYWpvcl92ZXIvbWlub3JfdmVyIC0gc2hv
cnQgdmFsdWVzICovCisJLyogMS4wLCAxLjEsIDIuMCBsb2ctPm1ham9yX3Zlci9taW5vcl92ZXIg
LSBzaG9ydCB2YWx1ZXMuICovCiAJc3dpdGNoICgobG9nLT5tYWpvcl92ZXIgPDwgMTYpICsgbG9n
LT5taW5vcl92ZXIpIHsKIAljYXNlIDB4MTAwMDA6CiAJY2FzZSAweDEwMDAxOgpAQCAtNDA2Miwx
MiArNDA2OCwxMiBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wg
KmluaXRpYWxpemVkKQogCQlnb3RvIG91dDsKIAl9CgotCS8qIE9uZSBjbGllbnQgIk5URlMiIHBl
ciBsb2dmaWxlICovCisJLyogT25lIGNsaWVudCAiTlRGUyIgcGVyIGxvZ2ZpbGUuICovCiAJY2Eg
PSBBZGQyUHRyKHJhLCBsZTE2X3RvX2NwdShyYS0+Y2xpZW50X29mZikpOwoKIAlmb3IgKGNsaWVu
dCA9IHJhLT5jbGllbnRfaWR4WzFdOzsgY2xpZW50ID0gY3ItPm5leHRfY2xpZW50KSB7CiAJCWlm
IChjbGllbnQgPT0gTEZTX05PX0NMSUVOVF9MRSkgewotCQkJLyogSW5zZXJ0ICJOVEZTIiBjbGll
bnQgTG9nRmlsZSAqLworCQkJLyogSW5zZXJ0ICJOVEZTIiBjbGllbnQgTG9nRmlsZS4gKi8KIAkJ
CWNsaWVudCA9IHJhLT5jbGllbnRfaWR4WzBdOwogCQkJaWYgKGNsaWVudCA9PSBMRlNfTk9fQ0xJ
RU5UX0xFKQogCQkJCXJldHVybiAtRUlOVkFMOwpAQCAtNDA5OSw3ICs0MTA1LDcgQEAgaW50IGxv
Z19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAkJCWJy
ZWFrOwogCX0KCi0JLyogVXBkYXRlIHRoZSBjbGllbnQgaGFuZGxlIHdpdGggdGhlIGNsaWVudCBi
bG9jayBpbmZvcm1hdGlvbiAqLworCS8qIFVwZGF0ZSB0aGUgY2xpZW50IGhhbmRsZSB3aXRoIHRo
ZSBjbGllbnQgYmxvY2sgaW5mb3JtYXRpb24uICovCiAJbG9nLT5jbGllbnRfaWQuc2VxX251bSA9
IGNyLT5zZXFfbnVtOwogCWxvZy0+Y2xpZW50X2lkLmNsaWVudF9pZHggPSBjbGllbnQ7CgpAQCAt
NDExNiw3ICs0MTIyLDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBi
b29sICppbml0aWFsaXplZCkKIAlpZiAoIWNoZWNrcHRfbHNuKQogCQljaGVja3B0X2xzbiA9IHJh
X2xzbjsKCi0JLyogQWxsb2NhdGUgYW5kIFJlYWQgdGhlIFRyYW5zYWN0aW9uIFRhYmxlICovCisJ
LyogQWxsb2NhdGUgYW5kIFJlYWQgdGhlIFRyYW5zYWN0aW9uIFRhYmxlLiAqLwogCWlmICghcnN0
LT50cmFuc2FjdF90YWJsZV9sZW4pCiAJCWdvdG8gY2hlY2tfZGlydHlfcGFnZV90YWJsZTsKCkBA
IC00MTQwLDcgKzQxNDYsNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
IGJvb2wgKmluaXRpYWxpemVkKQogCXJ0ID0gQWRkMlB0cihscmgsIHQxNik7CiAJdDMyID0gcmVj
X2xlbiAtIHQxNjsKCi0JLyogTm93IGNoZWNrIHRoYXQgdGhpcyBpcyBhIHZhbGlkIHJlc3RhcnQg
dGFibGUgKi8KKwkvKiBOb3cgY2hlY2sgdGhhdCB0aGlzIGlzIGEgdmFsaWQgcmVzdGFydCB0YWJs
ZS4gKi8KIAlpZiAoIWNoZWNrX3JzdGJsKHJ0LCB0MzIpKSB7CiAJCWVyciA9IC1FSU5WQUw7CiAJ
CWdvdG8gb3V0OwpAQCAtNDE1Niw3ICs0MTYyLDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50
ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlsY2IgPSBOVUxMOwoKIGNoZWNrX2Rp
cnR5X3BhZ2VfdGFibGU6Ci0JLyogVGhlIG5leHQgcmVjb3JkIGJhY2sgc2hvdWxkIGJlIHRoZSBE
aXJ0eSBQYWdlcyBUYWJsZSAqLworCS8qIFRoZSBuZXh0IHJlY29yZCBiYWNrIHNob3VsZCBiZSB0
aGUgRGlydHkgUGFnZXMgVGFibGUuICovCiAJaWYgKCFyc3QtPmRpcnR5X3BhZ2VzX2xlbikKIAkJ
Z290byBjaGVja19hdHRyaWJ1dGVfbmFtZXM7CgpAQCAtNDE4MCw3ICs0MTg2LDcgQEAgaW50IGxv
Z19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlydCA9
IEFkZDJQdHIobHJoLCB0MTYpOwogCXQzMiA9IHJlY19sZW4gLSB0MTY7CgotCS8qIE5vdyBjaGVj
ayB0aGF0IHRoaXMgaXMgYSB2YWxpZCByZXN0YXJ0IHRhYmxlICovCisJLyogTm93IGNoZWNrIHRo
YXQgdGhpcyBpcyBhIHZhbGlkIHJlc3RhcnQgdGFibGUuICovCiAJaWYgKCFjaGVja19yc3RibChy
dCwgdDMyKSkgewogCQllcnIgPSAtRUlOVkFMOwogCQlnb3RvIG91dDsKQEAgLTQxOTIsMTQgKzQx
OTgsMTQgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0
aWFsaXplZCkKIAkJZ290byBvdXQ7CiAJfQoKLQkvKiBDb252ZXJ0IFJhIHZlcnNpb24gJzAnIGlu
dG8gdmVyc2lvbiAnMScgKi8KKwkvKiBDb252ZXJ0IFJhIHZlcnNpb24gJzAnIGludG8gdmVyc2lv
biAnMScuICovCiAJaWYgKHJzdC0+bWFqb3JfdmVyKQogCQlnb3RvIGVuZF9jb252XzE7CgogCWRw
ID0gTlVMTDsKIAl3aGlsZSAoKGRwID0gZW51bV9yc3RibChkcHRibCwgZHApKSkgewogCQlzdHJ1
Y3QgRElSX1BBR0VfRU5UUllfMzIgKmRwMCA9IChzdHJ1Y3QgRElSX1BBR0VfRU5UUllfMzIgKilk
cDsKLQkJLy8gTk9URTogRGFuZ2VyLiBDaGVjayBmb3Igb2YgYm91bmRhcnkKKwkJLy8gTk9URTog
RGFuZ2VyLiBDaGVjayBmb3Igb2YgYm91bmRhcnkuCiAJCW1lbW1vdmUoJmRwLT52Y24sICZkcDAt
PnZjbl9sb3csCiAJCQkyICogc2l6ZW9mKHU2NCkgKwogCQkJCWxlMzJfdG9fY3B1KGRwLT5sY25z
X2ZvbGxvdykgKiBzaXplb2YodTY0KSk7CkBAIC00MjA5LDcgKzQyMTUsMTAgQEAgaW50IGxvZ19y
ZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlsY2JfcHV0
KGxjYik7CiAJbGNiID0gTlVMTDsKCi0JLyogR28gdGhyb3VnaCB0aGUgdGFibGUgYW5kIHJlbW92
ZSB0aGUgZHVwbGljYXRlcywgcmVtZW1iZXJpbmcgdGhlIG9sZGVzdCBsc24gdmFsdWVzICovCisJ
LyoKKwkgKiBHbyB0aHJvdWdoIHRoZSB0YWJsZSBhbmQgcmVtb3ZlIHRoZSBkdXBsaWNhdGVzLAor
CSAqIHJlbWVtYmVyaW5nIHRoZSBvbGRlc3QgbHNuIHZhbHVlcy4KKwkgKi8KIAlpZiAoc2JpLT5j
bHVzdGVyX3NpemUgPD0gbG9nLT5wYWdlX3NpemUpCiAJCWdvdG8gdHJhY2VfZHBfdGFibGU7CgpA
QCAtNDIzMSw3ICs0MjQwLDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBib29sICppbml0aWFsaXplZCkKIAl9CiB0cmFjZV9kcF90YWJsZToKIGNoZWNrX2F0dHJpYnV0
ZV9uYW1lczoKLQkvKiBUaGUgbmV4dCByZWNvcmQgc2hvdWxkIGJlIHRoZSBBdHRyaWJ1dGUgTmFt
ZXMgKi8KKwkvKiBUaGUgbmV4dCByZWNvcmQgc2hvdWxkIGJlIHRoZSBBdHRyaWJ1dGUgTmFtZXMu
ICovCiAJaWYgKCFyc3QtPmF0dHJfbmFtZXNfbGVuKQogCQlnb3RvIGNoZWNrX2F0dHJfdGFibGU7
CgpAQCAtNDI1OSw3ICs0MjY4LDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUg
Km5pLCBib29sICppbml0aWFsaXplZCkKIAlsY2IgPSBOVUxMOwoKIGNoZWNrX2F0dHJfdGFibGU6
Ci0JLyogVGhlIG5leHQgcmVjb3JkIHNob3VsZCBiZSB0aGUgYXR0cmlidXRlIFRhYmxlICovCisJ
LyogVGhlIG5leHQgcmVjb3JkIHNob3VsZCBiZSB0aGUgYXR0cmlidXRlIFRhYmxlLiAqLwogCWlm
ICghcnN0LT5vcGVuX2F0dHJfbGVuKQogCQlnb3RvIGNoZWNrX2F0dHJpYnV0ZV9uYW1lczI7CgpA
QCAtNDI5NiwxMyArNDMwNSwxMyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAq
bmksIGJvb2wgKmluaXRpYWxpemVkKQoKIAlsb2ctPm9wZW5fYXR0cl90YmwgPSBvYXRibDsKCi0J
LyogQ2xlYXIgYWxsIG9mIHRoZSBBdHRyIHBvaW50ZXJzICovCisJLyogQ2xlYXIgYWxsIG9mIHRo
ZSBBdHRyIHBvaW50ZXJzLiAqLwogCW9lID0gTlVMTDsKIAl3aGlsZSAoKG9lID0gZW51bV9yc3Ri
bChvYXRibCwgb2UpKSkgewogCQlpZiAoIXJzdC0+bWFqb3JfdmVyKSB7CiAJCQlzdHJ1Y3QgT1BF
Tl9BVFRSX0VOUlRZXzMyIG9lMDsKCi0JCQkvKiBSZWFsbHkgJ29lJyBwb2ludHMgdG8gT1BFTl9B
VFRSX0VOUlRZXzMyICovCisJCQkvKiBSZWFsbHkgJ29lJyBwb2ludHMgdG8gT1BFTl9BVFRSX0VO
UlRZXzMyLiAqLwogCQkJbWVtY3B5KCZvZTAsIG9lLCBTSVpFT0ZfT1BFTkFUVFJJQlVURUVOVFJZ
MCk7CgogCQkJb2UtPmJ5dGVzX3Blcl9pbmRleCA9IG9lMC5ieXRlc19wZXJfaW5kZXg7CkBAIC00
MzQwLDcgKzQzNDksNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJv
b2wgKmluaXRpYWxpemVkKQogdHJhY2VfYXR0cmlidXRlX3RhYmxlOgogCS8qCiAJICogSWYgdGhl
IGNoZWNrcHRfbHNuIGlzIHplcm8sIHRoZW4gdGhpcyBpcyBhIGZyZXNobHkKLQkgKiBmb3JtYXR0
ZWQgZGlzayBhbmQgd2UgaGF2ZSBubyB3b3JrIHRvIGRvCisJICogZm9ybWF0dGVkIGRpc2sgYW5k
IHdlIGhhdmUgbm8gd29yayB0byBkby4KIAkgKi8KIAlpZiAoIWNoZWNrcHRfbHNuKSB7CiAJCWVy
ciA9IDA7CkBAIC00MzYwLDEyICs0MzY5LDEyIEBAIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZz
X2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCiAJLyogU3RhcnQgdGhlIGFuYWx5c2lzIHBh
c3MgZnJvbSB0aGUgQ2hlY2twb2ludCBsc24uICovCiAJcmVjX2xzbiA9IGNoZWNrcHRfbHNuOwoK
LQkvKiBSZWFkIHRoZSBmaXJzdCBsc24gKi8KKwkvKiBSZWFkIHRoZSBmaXJzdCBsc24uICovCiAJ
ZXJyID0gcmVhZF9sb2dfcmVjX2xjYihsb2csIGNoZWNrcHRfbHNuLCBsY2JfY3R4X25leHQsICZs
Y2IpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKLQkvKiBMb29wIHRvIHJlYWQgYWxsIHN1YnNl
cXVlbnQgcmVjb3JkcyB0byB0aGUgZW5kIG9mIHRoZSBsb2cgZmlsZSAqLworCS8qIExvb3AgdG8g
cmVhZCBhbGwgc3Vic2VxdWVudCByZWNvcmRzIHRvIHRoZSBlbmQgb2YgdGhlIGxvZyBmaWxlLiAq
LwogbmV4dF9sb2dfcmVjb3JkX2FuYWx5emU6CiAJZXJyID0gcmVhZF9uZXh0X2xvZ19yZWMobG9n
LCBsY2IsICZyZWNfbHNuKTsKIAlpZiAoZXJyKQpAQCAtNDM4Niw3ICs0Mzk1LDcgQEAgaW50IGxv
Z19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKCiAJLyoK
IAkgKiBUaGUgZmlyc3QgbHNuIGFmdGVyIHRoZSBwcmV2aW91cyBsc24gcmVtZW1iZXJlZAotCSAq
IHRoZSBjaGVja3BvaW50IGlzIHRoZSBmaXJzdCBjYW5kaWRhdGUgZm9yIHRoZSBybHNuCisJICog
dGhlIGNoZWNrcG9pbnQgaXMgdGhlIGZpcnN0IGNhbmRpZGF0ZSBmb3IgdGhlIHJsc24uCiAJICov
CiAJaWYgKCFybHNuKQogCQlybHNuID0gcmVjX2xzbjsKQEAgLTQzOTUsOCArNDQwNCw4IEBAIGlu
dCBsb2dfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCiAJ
CWdvdG8gbmV4dF9sb2dfcmVjb3JkX2FuYWx5emU7CgogCS8qCi0JICogTm93IHVwZGF0ZSB0aGUg
VHJhbnNhY3Rpb24gVGFibGUgZm9yIHRoaXMgdHJhbnNhY3Rpb24KLQkgKiBJZiB0aGVyZSBpcyBu
byBlbnRyeSBwcmVzZW50IG9yIGl0IGlzIHVuYWxsb2NhdGVkIHdlIGFsbG9jYXRlIHRoZSBlbnRy
eQorCSAqIE5vdyB1cGRhdGUgdGhlIFRyYW5zYWN0aW9uIFRhYmxlIGZvciB0aGlzIHRyYW5zYWN0
aW9uLiBJZiB0aGVyZQorCSAqIGlzIG5vIGVudHJ5IHByZXNlbnQgb3IgaXQgaXMgdW5hbGxvY2F0
ZWQgd2UgYWxsb2NhdGUgdGhlIGVudHJ5LgogCSAqLwogCWlmICghdHJ0YmwpIHsKIAkJdHJ0Ymwg
PSBpbml0X3JzdHRibChzaXplb2Yoc3RydWN0IFRSQU5TQUNUSU9OX0VOVFJZKSwKQEAgLTQ0MjQs
MTIgKzQ0MzMsMTIgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29s
ICppbml0aWFsaXplZCkKCiAJLyoKIAkgKiBJZiB0aGlzIGlzIGEgY29tcGVuc2F0aW9uIGxvZyBy
ZWNvcmQsIHRoZW4gY2hhbmdlCi0JICogdGhlIHVuZG9fbmV4dF9sc24gdG8gYmUgdGhlIHVuZG9f
bmV4dF9sc24gb2YgdGhpcyByZWNvcmQKKwkgKiB0aGUgdW5kb19uZXh0X2xzbiB0byBiZSB0aGUg
dW5kb19uZXh0X2xzbiBvZiB0aGlzIHJlY29yZC4KIAkgKi8KIAlpZiAobHJoLT51bmRvX29wID09
IGNwdV90b19sZTE2KENvbXBlbnNhdGlvbkxvZ1JlY29yZCkpCiAJCXRyLT51bmRvX25leHRfbHNu
ID0gZnJoLT5jbGllbnRfdW5kb19uZXh0X2xzbjsKCi0JLyogRGlzcGF0Y2ggdG8gaGFuZGxlIGxv
ZyByZWNvcmQgZGVwZW5kaW5nIG9uIHR5cGUgKi8KKwkvKiBEaXNwYXRjaCB0byBoYW5kbGUgbG9n
IHJlY29yZCBkZXBlbmRpbmcgb24gdHlwZS4gKi8KIAlzd2l0Y2ggKGxlMTZfdG9fY3B1KGxyaC0+
cmVkb19vcCkpIHsKIAljYXNlIEluaXRpYWxpemVGaWxlUmVjb3JkU2VnbWVudDoKIAljYXNlIERl
YWxsb2NhdGVGaWxlUmVjb3JkU2VnbWVudDoKQEAgLTQ0NjMsNyArNDQ3Miw3IEBAIGludCBsb2df
cmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCgogCQkvKgog
CQkgKiBDYWxjdWxhdGUgdGhlIG51bWJlciBvZiBjbHVzdGVycyBwZXIgcGFnZSB0aGUgc3lzdGVt
Ci0JCSAqIHdoaWNoIHdyb3RlIHRoZSBjaGVja3BvaW50LCBwb3NzaWJseSBjcmVhdGluZyB0aGUg
dGFibGUKKwkJICogd2hpY2ggd3JvdGUgdGhlIGNoZWNrcG9pbnQsIHBvc3NpYmx5IGNyZWF0aW5n
IHRoZSB0YWJsZS4KIAkJICovCiAJCWlmIChkcHRibCkgewogCQkJdDMyID0gKGxlMTZfdG9fY3B1
KGRwdGJsLT5zaXplKSAtCkBAIC00NDg5LDkgKzQ0OTgsOSBAQCBpbnQgbG9nX3JlcGxheShzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQoKIGNvcHlfbGNuczoKIAkJLyoK
LQkJICogQ29weSB0aGUgTGNucyBmcm9tIHRoZSBsb2cgcmVjb3JkIGludG8gdGhlIERpcnR5IFBh
Z2UgRW50cnkKLQkJICogVE9ETzogZm9yIGRpZmZlcmVudCBwYWdlIHNpemUgc3VwcG9ydCwgbXVz
dCBzb21laG93IG1ha2UKLQkJICogd2hvbGUgcm91dGluZSBhIGxvb3AsIGNhc2UgTGNucyBkbyBu
b3QgZml0IGJlbG93CisJCSAqIENvcHkgdGhlIExjbnMgZnJvbSB0aGUgbG9nIHJlY29yZCBpbnRv
IHRoZSBEaXJ0eSBQYWdlIEVudHJ5LgorCQkgKiBUT0RPOiBGb3IgZGlmZmVyZW50IHBhZ2Ugc2l6
ZSBzdXBwb3J0LCBtdXN0IHNvbWVob3cgbWFrZQorCQkgKiB3aG9sZSByb3V0aW5lIGEgbG9vcCwg
Y2FzZSBMY25zIGRvIG5vdCBmaXQgYmVsb3cuCiAJCSAqLwogCQl0MTYgPSBsZTE2X3RvX2NwdShs
cmgtPmxjbnNfZm9sbG93KTsKIAkJZm9yIChpID0gMDsgaSA8IHQxNjsgaSsrKSB7CkBAIC00NTA4
LDcgKzQ1MTcsNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wg
KmluaXRpYWxpemVkKQogCQljb25zdCBzdHJ1Y3QgTENOX1JBTkdFICpyID0KIAkJCUFkZDJQdHIo
bHJoLCBsZTE2X3RvX2NwdShscmgtPnJlZG9fb2ZmKSk7CgotCQkvKiBMb29wIHRocm91Z2ggYWxs
IG9mIHRoZSBMY24gcmFuZ2VzIHRoaXMgbG9nIHJlY29yZCAqLworCQkvKiBMb29wIHRocm91Z2gg
YWxsIG9mIHRoZSBMY24gcmFuZ2VzIHRoaXMgbG9nIHJlY29yZC4gKi8KIAkJZm9yIChpID0gMDsg
aSA8IHJhbmdlX2NvdW50OyBpKyssIHIrKykgewogCQkJdTY0IGxjbjAgPSBsZTY0X3RvX2NwdShy
LT5sY24pOwogCQkJdTY0IGxjbl9lID0gbGNuMCArIGxlNjRfdG9fY3B1KHItPmxlbikgLSAxOwpA
QCAtNDUzNCw3ICs0NTQzLDcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBib29sICppbml0aWFsaXplZCkKIAkJaWYgKHQxNiA+PSBieXRlc19wZXJfcnQob2F0YmwpKSB7
CiAJCQkvKgogCQkJICogQ29tcHV0ZSBob3cgYmlnIHRoZSB0YWJsZSBuZWVkcyB0byBiZS4KLQkJ
CSAqIEFkZCAxMCBleHRyYSBlbnRyaWVzIGZvciBzb21lIGN1c2hpb24KKwkJCSAqIEFkZCAxMCBl
eHRyYSBlbnRyaWVzIGZvciBzb21lIGN1c2hpb24uCiAJCQkgKi8KIAkJCXUzMiBuZXdfZSA9IHQx
NiAvIGxlMTZfdG9fY3B1KG9hdGJsLT5zaXplKTsKCkBAIC00NTQ4LDcgKzQ1NTcsNyBAQCBpbnQg
bG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQogCQkJ
fQogCQl9CgotCQkvKiBQb2ludCB0byB0aGUgZW50cnkgYmVpbmcgb3BlbmVkICovCisJCS8qIFBv
aW50IHRvIHRoZSBlbnRyeSBiZWluZyBvcGVuZWQuICovCiAJCW9lID0gYWxsb2NfcnN0dGJsX2Zy
b21faWR4KCZvYXRibCwgdDE2KTsKIAkJbG9nLT5vcGVuX2F0dHJfdGJsID0gb2F0Ymw7CiAJCWlm
ICghb2UpIHsKQEAgLTQ1NTYsMTAgKzQ1NjUsMTAgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50
ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAkJCWdvdG8gb3V0OwogCQl9CgotCQkv
KiBJbml0aWFsaXplIHRoaXMgZW50cnkgZnJvbSB0aGUgbG9nIHJlY29yZCAqLworCQkvKiBJbml0
aWFsaXplIHRoaXMgZW50cnkgZnJvbSB0aGUgbG9nIHJlY29yZC4gKi8KIAkJdDE2ID0gbGUxNl90
b19jcHUobHJoLT5yZWRvX29mZik7CiAJCWlmICghcnN0LT5tYWpvcl92ZXIpIHsKLQkJCS8qIENv
bnZlcnQgdmVyc2lvbiAnMCcgaW50byB2ZXJzaW9uICcxJyAqLworCQkJLyogQ29udmVydCB2ZXJz
aW9uICcwJyBpbnRvIHZlcnNpb24gJzEnLiAqLwogCQkJc3RydWN0IE9QRU5fQVRUUl9FTlJUWV8z
MiAqb2UwID0gQWRkMlB0cihscmgsIHQxNik7CgogCQkJb2UtPmJ5dGVzX3Blcl9pbmRleCA9IG9l
MC0+Ynl0ZXNfcGVyX2luZGV4OwpAQCAtNDYyNywxMyArNDYzNiwxMyBAQCBpbnQgbG9nX3JlcGxh
eShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQogCWNhc2UgQXR0cmli
dXRlTmFtZXNEdW1wOgogCWNhc2UgRGlydHlQYWdlVGFibGVEdW1wOgogCWNhc2UgVHJhbnNhY3Rp
b25UYWJsZUR1bXA6Ci0JCS8qIFRoZSBmb2xsb3dpbmcgY2FzZXMgcmVxdWlyZSBubyBhY3Rpb24g
dGhlIEFuYWx5c2lzIFBhc3MgKi8KKwkJLyogVGhlIGZvbGxvd2luZyBjYXNlcyByZXF1aXJlIG5v
IGFjdGlvbiB0aGUgQW5hbHlzaXMgUGFzcy4gKi8KIAkJZ290byBuZXh0X2xvZ19yZWNvcmRfYW5h
bHl6ZTsKCiAJZGVmYXVsdDoKIAkJLyoKIAkJICogQWxsIGNvZGVzIHdpbGwgYmUgZXhwbGljaXRs
eSBoYW5kbGVkLgotCQkgKiBJZiB3ZSBzZWUgYSBjb2RlIHdlIGRvIG5vdCBleHBlY3QsIHRoZW4g
d2UgYXJlIHRyb3VibGUKKwkJICogSWYgd2Ugc2VlIGEgY29kZSB3ZSBkbyBub3QgZXhwZWN0LCB0
aGVuIHdlIGFyZSB0cm91YmxlLgogCQkgKi8KIAkJZ290byBuZXh0X2xvZ19yZWNvcmRfYW5hbHl6
ZTsKIAl9CkBAIC00NjQ0LDcgKzQ2NTMsNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQoKIAkvKgogCSAqIFNjYW4gdGhlIERpcnR5IFBh
Z2UgVGFibGUgYW5kIFRyYW5zYWN0aW9uIFRhYmxlIGZvcgotCSAqIHRoZSBsb3dlc3QgbHNuLCBh
bmQgcmV0dXJuIGl0IGFzIHRoZSBSZWRvIGxzbgorCSAqIHRoZSBsb3dlc3QgbHNuLCBhbmQgcmV0
dXJuIGl0IGFzIHRoZSBSZWRvIGxzbi4KIAkgKi8KIAlkcCA9IE5VTEw7CiAJd2hpbGUgKChkcCA9
IGVudW1fcnN0YmwoZHB0YmwsIGRwKSkpIHsKQEAgLTQ2NjAsNyArNDY2OSwxMCBAQCBpbnQgbG9n
X3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQogCQkJcmxz
biA9IHQ2NDsKIAl9CgotCS8qIE9ubHkgcHJvY2VlZCBpZiB0aGUgRGlydHkgUGFnZSBUYWJsZSBv
ciBUcmFuc2FjdGlvbiB0YWJsZSBhcmUgbm90IGVtcHR5ICovCisJLyoKKwkgKiBPbmx5IHByb2Nl
ZWQgaWYgdGhlIERpcnR5IFBhZ2UgVGFibGUgb3IgVHJhbnNhY3Rpb24KKwkgKiB0YWJsZSBhcmUg
bm90IGVtcHR5LgorCSAqLwogCWlmICgoIWRwdGJsIHx8ICFkcHRibC0+dG90YWwpICYmICghdHJ0
YmwgfHwgIXRydGJsLT50b3RhbCkpCiAJCWdvdG8gZW5kX3JlcGx5OwoKQEAgLTQ2NjgsNyArNDY4
MCw3IEBAIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5pdGlh
bGl6ZWQpCiAJaWYgKGlzX3JvKQogCQlnb3RvIG91dDsKCi0JLyogUmVvcGVuIGFsbCBvZiB0aGUg
YXR0cmlidXRlcyB3aXRoIGRpcnR5IHBhZ2VzICovCisJLyogUmVvcGVuIGFsbCBvZiB0aGUgYXR0
cmlidXRlcyB3aXRoIGRpcnR5IHBhZ2VzLiAqLwogCW9lID0gTlVMTDsKIG5leHRfb3Blbl9hdHRy
aWJ1dGU6CgpAQCAtNDc2NCw4ICs0Nzc2LDggQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlnb3RvIG5leHRfb3Blbl9hdHRyaWJ1dGU7
CgogCS8qCi0JICogTm93IGxvb3AgdGhyb3VnaCB0aGUgZGlydHkgcGFnZSB0YWJsZSB0byBleHRy
YWN0IGFsbCBvZiB0aGUgVmNuL0xjbgotCSAqIE1hcHBpbmcgdGhhdCB3ZSBoYXZlLCBhbmQgaW5z
ZXJ0IGl0IGludG8gdGhlIGFwcHJvcHJpYXRlIHJ1bgorCSAqIE5vdyBsb29wIHRocm91Z2ggdGhl
IGRpcnR5IHBhZ2UgdGFibGUgdG8gZXh0cmFjdCBhbGwgb2YgdGhlIFZjbi9MY24uCisJICogTWFw
cGluZyB0aGF0IHdlIGhhdmUsIGFuZCBpbnNlcnQgaXQgaW50byB0aGUgYXBwcm9wcmlhdGUgcnVu
LgogCSAqLwogbmV4dF9kaXJ0eV9wYWdlOgogCWRwID0gZW51bV9yc3RibChkcHRibCwgZHApOwpA
QCAtNDgxOSw4ICs0ODMxLDggQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5p
LCBib29sICppbml0aWFsaXplZCkKIGRvX3JlZG9fMToKIAkvKgogCSAqIFBlcmZvcm0gdGhlIFJl
ZG8gUGFzcywgdG8gcmVzdG9yZSBhbGwgb2YgdGhlIGRpcnR5IHBhZ2VzIHRvIHRoZSBzYW1lCi0J
ICogY29udGVudHMgdGhhdCB0aGV5IGhhZCBpbW1lZGlhdGVseSBiZWZvcmUgdGhlIGNyYXNoCi0J
ICogSWYgdGhlIGRpcnR5IHBhZ2UgdGFibGUgaXMgZW1wdHksIHRoZW4gd2UgY2FuIHNraXAgdGhl
IGVudGlyZSBSZWRvIFBhc3MKKwkgKiBjb250ZW50cyB0aGF0IHRoZXkgaGFkIGltbWVkaWF0ZWx5
IGJlZm9yZSB0aGUgY3Jhc2guIElmIHRoZSBkaXJ0eQorCSAqIHBhZ2UgdGFibGUgaXMgZW1wdHks
IHRoZW4gd2UgY2FuIHNraXAgdGhlIGVudGlyZSBSZWRvIFBhc3MuCiAJICovCiAJaWYgKCFkcHRi
bCB8fCAhZHB0YmwtPnRvdGFsKQogCQlnb3RvIGRvX3VuZG9fYWN0aW9uOwpAQCAtNDgyOSwxNSAr
NDg0MSwxNSBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmlu
aXRpYWxpemVkKQoKIAkvKgogCSAqIFJlYWQgdGhlIHJlY29yZCBhdCB0aGUgUmVkbyBsc24sIGJl
Zm9yZSBmYWxsaW5nCi0JICogaW50byBjb21tb24gY29kZSB0byBoYW5kbGUgZWFjaCByZWNvcmQK
KwkgKiBpbnRvIGNvbW1vbiBjb2RlIHRvIGhhbmRsZSBlYWNoIHJlY29yZC4KIAkgKi8KIAllcnIg
PSByZWFkX2xvZ19yZWNfbGNiKGxvZywgcmxzbiwgbGNiX2N0eF9uZXh0LCAmbGNiKTsKIAlpZiAo
ZXJyKQogCQlnb3RvIG91dDsKCiAJLyoKLQkgKiBOb3cgbG9vcCB0byByZWFkIGFsbCBvZiBvdXIg
bG9nIHJlY29yZHMgZm9yd2FyZHMsCi0JICogdW50aWwgd2UgaGl0IHRoZSBlbmQgb2YgdGhlIGZp
bGUsIGNsZWFuaW5nIHVwIGF0IHRoZSBlbmQKKwkgKiBOb3cgbG9vcCB0byByZWFkIGFsbCBvZiBv
dXIgbG9nIHJlY29yZHMgZm9yd2FyZHMsIHVudGlsCisJICogd2UgaGl0IHRoZSBlbmQgb2YgdGhl
IGZpbGUsIGNsZWFuaW5nIHVwIGF0IHRoZSBlbmQuCiAJICovCiBkb19hY3Rpb25fbmV4dDoKIAlm
cmggPSBsY2ItPmxyaDsKQEAgLTQ4NTQsNyArNDg2Niw3IEBAIGludCBsb2dfcmVwbGF5KHN0cnVj
dCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCiAJCWdvdG8gb3V0OwogCX0KCi0J
LyogSWdub3JlIGxvZyByZWNvcmRzIHRoYXQgZG8gbm90IHVwZGF0ZSBwYWdlcyAqLworCS8qIEln
bm9yZSBsb2cgcmVjb3JkcyB0aGF0IGRvIG5vdCB1cGRhdGUgcGFnZXMuICovCiAJaWYgKGxyaC0+
bGNuc19mb2xsb3cpCiAJCWdvdG8gZmluZF9kaXJ0eV9wYWdlOwoKQEAgLTQ4OTksMTEgKzQ5MTEs
MTEgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFs
aXplZCkKIAkJZ290byByZWFkX25leHRfbG9nX2RvX2FjdGlvbjsKIAl9CgotCS8qIFBvaW50IHRv
IHRoZSBSZWRvIGRhdGEgYW5kIGdldCBpdHMgbGVuZ3RoICovCisJLyogUG9pbnQgdG8gdGhlIFJl
ZG8gZGF0YSBhbmQgZ2V0IGl0cyBsZW5ndGguICovCiAJZGF0YSA9IEFkZDJQdHIobHJoLCBsZTE2
X3RvX2NwdShscmgtPnJlZG9fb2ZmKSk7CiAJZGxlbiA9IGxlMTZfdG9fY3B1KGxyaC0+cmVkb19s
ZW4pOwoKLQkvKiBTaG9ydGVuIGxlbmd0aCBieSBhbnkgTGNucyB3aGljaCB3ZXJlIGRlbGV0ZWQg
Ki8KKwkvKiBTaG9ydGVuIGxlbmd0aCBieSBhbnkgTGNucyB3aGljaCB3ZXJlIGRlbGV0ZWQuICov
CiAJc2F2ZWRfbGVuID0gZGxlbjsKCiAJZm9yIChpID0gbGUxNl90b19jcHUobHJoLT5sY25zX2Zv
bGxvdyk7IGk7IGktLSkgewpAQCAtNDkxNCw3ICs0OTI2LDcgQEAgaW50IGxvZ19yZXBsYXkoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAkJICAgICAgIGxlMTZfdG9f
Y3B1KGxyaC0+YXR0cl9vZmYpOwogCQl2b2ZmICs9IGxlMTZfdG9fY3B1KGxyaC0+Y2x1c3Rlcl9v
ZmYpIDw8IFNFQ1RPUl9TSElGVDsKCi0JCS8qIElmIHRoZSBWY24gcXVlc3Rpb24gaXMgYWxsb2Nh
dGVkLCB3ZSBjYW4ganVzdCBnZXQgb3V0LiovCisJCS8qIElmIHRoZSBWY24gcXVlc3Rpb24gaXMg
YWxsb2NhdGVkLCB3ZSBjYW4ganVzdCBnZXQgb3V0LiAqLwogCQlqID0gbGU2NF90b19jcHUobHJo
LT50YXJnZXRfdmNuKSAtIGxlNjRfdG9fY3B1KGRwLT52Y24pOwogCQlpZiAoZHAtPnBhZ2VfbGNu
c1tqICsgaSAtIDFdKQogCQkJYnJlYWs7CkBAIC00OTI0LDEzICs0OTM2LDEzIEBAIGludCBsb2df
cmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5pdGlhbGl6ZWQpCgogCQkvKgog
CQkgKiBDYWxjdWxhdGUgdGhlIGFsbG9jYXRlZCBzcGFjZSBsZWZ0IHJlbGF0aXZlIHRvIHRoZQot
CQkgKiBsb2cgcmVjb3JkIFZjbiwgYWZ0ZXIgcmVtb3ZpbmcgdGhpcyB1bmFsbG9jYXRlZCBWY24K
KwkJICogbG9nIHJlY29yZCBWY24sIGFmdGVyIHJlbW92aW5nIHRoaXMgdW5hbGxvY2F0ZWQgVmNu
LgogCQkgKi8KIAkJYWxlbiA9IChpIC0gMSkgPDwgc2JpLT5jbHVzdGVyX2JpdHM7CgogCQkvKgog
CQkgKiBJZiB0aGUgdXBkYXRlIGRlc2NyaWJlZCB0aGlzIGxvZyByZWNvcmQgZ29lcyBiZXlvbmQK
LQkJICogdGhlIGFsbG9jYXRlZCBzcGFjZSwgdGhlbiB3ZSB3aWxsIGhhdmUgdG8gcmVkdWNlIHRo
ZSBsZW5ndGgKKwkJICogdGhlIGFsbG9jYXRlZCBzcGFjZSwgdGhlbiB3ZSB3aWxsIGhhdmUgdG8g
cmVkdWNlIHRoZSBsZW5ndGguCiAJCSAqLwogCQlpZiAodm9mZiA+PSBhbGVuKQogCQkJZGxlbiA9
IDA7CkBAIC00OTM4LDcgKzQ5NTAsMTAgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAkJCWRsZW4gPSBhbGVuIC0gdm9mZjsKIAl9Cgot
CS8qIElmIHRoZSByZXN1bHRpbmcgZGxlbiBmcm9tIGFib3ZlIGlzIG5vdyB6ZXJvLCB3ZSBjYW4g
c2tpcCB0aGlzIGxvZyByZWNvcmQgKi8KKwkvKgorCSAqIElmIHRoZSByZXN1bHRpbmcgZGxlbiBm
cm9tIGFib3ZlIGlzIG5vdyB6ZXJvLAorCSAqIHdlIGNhbiBza2lwIHRoaXMgbG9nIHJlY29yZC4K
KwkgKi8KIAlpZiAoIWRsZW4gJiYgc2F2ZWRfbGVuKQogCQlnb3RvIHJlYWRfbmV4dF9sb2dfZG9f
YWN0aW9uOwoKQEAgLTQ5NDYsMTIgKzQ5NjEsMTIgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50
ZnNfaW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlpZiAoY2FuX3NraXBfYWN0aW9uKHQx
NikpCiAJCWdvdG8gcmVhZF9uZXh0X2xvZ19kb19hY3Rpb247CgotCS8qIEFwcGx5IHRoZSBSZWRv
IG9wZXJhdGlvbiBhIGNvbW1vbiByb3V0aW5lICovCisJLyogQXBwbHkgdGhlIFJlZG8gb3BlcmF0
aW9uIGEgY29tbW9uIHJvdXRpbmUuICovCiAJZXJyID0gZG9fYWN0aW9uKGxvZywgb2UsIGxyaCwg
dDE2LCBkYXRhLCBkbGVuLCByZWNfbGVuLCAmcmVjX2xzbik7CiAJaWYgKGVycikKIAkJZ290byBv
dXQ7CgotCS8qIEtlZXAgcmVhZGluZyBhbmQgbG9vcGluZyBiYWNrIHVudGlsIGVuZCBvZiBmaWxl
ICovCisJLyogS2VlcCByZWFkaW5nIGFuZCBsb29waW5nIGJhY2sgdW50aWwgZW5kIG9mIGZpbGUu
ICovCiByZWFkX25leHRfbG9nX2RvX2FjdGlvbjoKIAllcnIgPSByZWFkX25leHRfbG9nX3JlYyhs
b2csIGxjYiwgJnJlY19sc24pOwogCWlmICghZXJyICYmIHJlY19sc24pCkBAIC00OTYxLDcgKzQ5
NzYsNyBAQCBpbnQgbG9nX3JlcGxheShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRp
YWxpemVkKQogCWxjYiA9IE5VTEw7CgogZG9fdW5kb19hY3Rpb246Ci0JLyogU2NhbiBUcmFuc2Fj
dGlvbiBUYWJsZSAqLworCS8qIFNjYW4gVHJhbnNhY3Rpb24gVGFibGUuICovCiAJdHIgPSBOVUxM
OwogdHJhbnNhY3Rpb25fdGFibGVfbmV4dDoKIAl0ciA9IGVudW1fcnN0YmwodHJ0YmwsIHRyKTsK
QEAgLTQ5NzgsMTkgKzQ5OTMsMTkgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUg
Km5pLCBib29sICppbml0aWFsaXplZCkKCiAJLyoKIAkgKiBXZSBvbmx5IGhhdmUgdG8gZG8gYW55
dGhpbmcgaWYgdGhlIHRyYW5zYWN0aW9uIGhhcwotCSAqIHNvbWV0aGluZyBpdHMgdW5kb19uZXh0
X2xzbiBmaWVsZAorCSAqIHNvbWV0aGluZyBpdHMgdW5kb19uZXh0X2xzbiBmaWVsZC4KIAkgKi8K
IAlpZiAoIXVuZG9fbmV4dF9sc24pCiAJCWdvdG8gY29tbWl0X3VuZG87CgotCS8qIFJlYWQgdGhl
IGZpcnN0IHJlY29yZCB0byBiZSB1bmRvbmUgYnkgdGhpcyB0cmFuc2FjdGlvbiAqLworCS8qIFJl
YWQgdGhlIGZpcnN0IHJlY29yZCB0byBiZSB1bmRvbmUgYnkgdGhpcyB0cmFuc2FjdGlvbi4gKi8K
IAllcnIgPSByZWFkX2xvZ19yZWNfbGNiKGxvZywgdW5kb19uZXh0X2xzbiwgbGNiX2N0eF91bmRv
X25leHQsICZsY2IpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKIAkvKgogCSAqIE5vdyBsb29w
IHRvIHJlYWQgYWxsIG9mIG91ciBsb2cgcmVjb3JkcyBmb3J3YXJkcywKLQkgKiB1bnRpbCB3ZSBo
aXQgdGhlIGVuZCBvZiB0aGUgZmlsZSwgY2xlYW5pbmcgdXAgYXQgdGhlIGVuZAorCSAqIHVudGls
IHdlIGhpdCB0aGUgZW5kIG9mIHRoZSBmaWxlLCBjbGVhbmluZyB1cCBhdCB0aGUgZW5kLgogCSAq
LwogdW5kb19hY3Rpb25fbmV4dDoKCkBAIC01MDIwLDcgKzUwMzUsNyBAQCBpbnQgbG9nX3JlcGxh
eShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIGJvb2wgKmluaXRpYWxpemVkKQogCS8qCiAJICogSWYg
dGhlIG1hcHBpbmcgaXNuJ3QgYWxyZWFkeSB0aGUgdGFibGUgb3IgdGhlICBtYXBwaW5nCiAJICog
Y29ycmVzcG9uZHMgdG8gYSBob2xlIHRoZSBtYXBwaW5nLCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZQot
CSAqIHRoZXJlIGlzIG5vIHBhcnRpYWwgcGFnZSBhbHJlYWR5IG1lbW9yeQorCSAqIHRoZXJlIGlz
IG5vIHBhcnRpYWwgcGFnZSBhbHJlYWR5IG1lbW9yeS4KIAkgKi8KIAlpZiAoaXNfbWFwcGVkICYm
IGxjbiAhPSBTUEFSU0VfTENOICYmIGNsZW4gPj0gdDE2KQogCQlnb3RvIGFkZF9hbGxvY2F0ZWRf
dmNuczsKQEAgLTUwNDgsMTcgKzUwNjMsMTcgQEAgaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNf
aW5vZGUgKm5pLCBib29sICppbml0aWFsaXplZCkKIAlpZiAoY2FuX3NraXBfYWN0aW9uKHQxNikp
CiAJCWdvdG8gcmVhZF9uZXh0X2xvZ191bmRvX2FjdGlvbjsKCi0JLyogUG9pbnQgdG8gdGhlIFJl
ZG8gZGF0YSBhbmQgZ2V0IGl0cyBsZW5ndGggKi8KKwkvKiBQb2ludCB0byB0aGUgUmVkbyBkYXRh
IGFuZCBnZXQgaXRzIGxlbmd0aC4gKi8KIAlkYXRhID0gQWRkMlB0cihscmgsIGxlMTZfdG9fY3B1
KGxyaC0+dW5kb19vZmYpKTsKIAlkbGVuID0gbGUxNl90b19jcHUobHJoLT51bmRvX2xlbik7Cgot
CS8qIGl0IGlzIHRpbWUgdG8gYXBwbHkgdGhlIHVuZG8gYWN0aW9uICovCisJLyogSXQgaXMgdGlt
ZSB0byBhcHBseSB0aGUgdW5kbyBhY3Rpb24uICovCiAJZXJyID0gZG9fYWN0aW9uKGxvZywgb2Us
IGxyaCwgdDE2LCBkYXRhLCBkbGVuLCByZWNfbGVuLCBOVUxMKTsKCiByZWFkX25leHRfbG9nX3Vu
ZG9fYWN0aW9uOgogCS8qCiAJICogS2VlcCByZWFkaW5nIGFuZCBsb29waW5nIGJhY2sgdW50aWwg
d2UgaGF2ZSByZWFkIHRoZQotCSAqIGxhc3QgcmVjb3JkIGZvciB0aGlzIHRyYW5zYWN0aW9uCisJ
ICogbGFzdCByZWNvcmQgZm9yIHRoaXMgdHJhbnNhY3Rpb24uCiAJICovCiAJZXJyID0gcmVhZF9u
ZXh0X2xvZ19yZWMobG9nLCBsY2IsICZyZWNfbHNuKTsKIAlpZiAoZXJyKQpAQCAtNTEzMyw3ICs1
MTQ4LDEwIEBAIGludCBsb2dfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgYm9vbCAqaW5p
dGlhbGl6ZWQpCiAJaWYgKGxjYikKIAkJbGNiX3B1dChsY2IpOwoKLQkvKiBTY2FuIHRoZSBPcGVu
IEF0dHJpYnV0ZSBUYWJsZSB0byBjbG9zZSBhbGwgb2YgdGhlIG9wZW4gYXR0cmlidXRlcyAqLwor
CS8qCisJICogU2NhbiB0aGUgT3BlbiBBdHRyaWJ1dGUgVGFibGUgdG8gY2xvc2UgYWxsIG9mCisJ
ICogdGhlIG9wZW4gYXR0cmlidXRlcy4KKwkgKi8KIAlvZSA9IE5VTEw7CiAJd2hpbGUgKChvZSA9
IGVudW1fcnN0Ymwob2F0YmwsIG9lKSkpIHsKIAkJcm5vID0gaW5vX2dldCgmb2UtPnJlZik7CmRp
ZmYgLS1naXQgYS9mcy9udGZzMy9mc250ZnMuYyBiL2ZzL250ZnMzL2ZzbnRmcy5jCmluZGV4IDMy
NzM1NmIwODE4Ny4uNjg5YmI0ZmY2MDJiIDEwMDY0NAotLS0gYS9mcy9udGZzMy9mc250ZnMuYwor
KysgYi9mcy9udGZzMy9mc250ZnMuYwpAQCAtMTAxLDkgKzEwMSw3IEBAIGNvbnN0IF9fbGUxNiBX
T0ZfTkFNRVsxN10gPSB7CiAvLyBjbGFuZy1mb3JtYXQgb24KCiAvKgotICogbnRmc19maXhfcHJl
X3dyaXRlCi0gKgotICogaW5zZXJ0cyBmaXh1cHMgaW50byAncmhkcicgYmVmb3JlIHdyaXRpbmcg
dG8gZGlzaworICogbnRmc19maXhfcHJlX3dyaXRlIC0gSW5zZXJ0IGZpeHVwcyBpbnRvIEByaGRy
IGJlZm9yZSB3cml0aW5nIHRvIGRpc2suCiAgKi8KIGJvb2wgbnRmc19maXhfcHJlX3dyaXRlKHN0
cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJoZHIsIHNpemVfdCBieXRlcykKIHsKQEAgLTExNyw3
ICsxMTUsNyBAQCBib29sIG50ZnNfZml4X3ByZV93cml0ZShzdHJ1Y3QgTlRGU19SRUNPUkRfSEVB
REVSICpyaGRyLCBzaXplX3QgYnl0ZXMpCiAJCXJldHVybiBmYWxzZTsKIAl9CgotCS8qIEdldCBm
aXh1cCBwb2ludGVyICovCisJLyogR2V0IGZpeHVwIHBvaW50ZXIuICovCiAJZml4dXAgPSBBZGQy
UHRyKHJoZHIsIGZvKTsKCiAJaWYgKCpmaXh1cCA+PSAweDdGRkYpCkBAIC0xMzgsMTAgKzEzNiw5
IEBAIGJvb2wgbnRmc19maXhfcHJlX3dyaXRlKHN0cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJo
ZHIsIHNpemVfdCBieXRlcykKIH0KCiAvKgotICogbnRmc19maXhfcG9zdF9yZWFkCisgKiBudGZz
X2ZpeF9wb3N0X3JlYWQgLSBSZW1vdmUgZml4dXBzIGFmdGVyIHJlYWRpbmcgZnJvbSBkaXNrLgog
ICoKLSAqIHJlbW92ZSBmaXh1cHMgYWZ0ZXIgcmVhZGluZyBmcm9tIGRpc2sKLSAqIFJldHVybnMg
PCAwIGlmIGVycm9yLCAwIGlmIG9rLCAxIGlmIG5lZWQgdG8gdXBkYXRlIGZpeHVwcworICogUmV0
dXJuOiA8IDAgaWYgZXJyb3IsIDAgaWYgb2ssIDEgaWYgbmVlZCB0byB1cGRhdGUgZml4dXBzLgog
ICovCiBpbnQgbnRmc19maXhfcG9zdF9yZWFkKHN0cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJo
ZHIsIHNpemVfdCBieXRlcywKIAkJICAgICAgIGJvb2wgc2ltcGxlKQpAQCAtMTU0LDI2ICsxNTEs
MjYgQEAgaW50IG50ZnNfZml4X3Bvc3RfcmVhZChzdHJ1Y3QgTlRGU19SRUNPUkRfSEVBREVSICpy
aGRyLCBzaXplX3QgYnl0ZXMsCiAJZm4gPSBzaW1wbGUgPyAoKGJ5dGVzID4+IFNFQ1RPUl9TSElG
VCkgKyAxKQogCQkgICAgOiBsZTE2X3RvX2NwdShyaGRyLT5maXhfbnVtKTsKCi0JLyogQ2hlY2sg
ZXJyb3JzICovCisJLyogQ2hlY2sgZXJyb3JzLiAqLwogCWlmICgoZm8gJiAxKSB8fCBmbyArIGZu
ICogc2l6ZW9mKHNob3J0KSA+IFNFQ1RPUl9TSVpFIHx8ICFmbi0tIHx8CiAJICAgIGZuICogU0VD
VE9SX1NJWkUgPiBieXRlcykgewotCQlyZXR1cm4gLUVJTlZBTDsgLyogbmF0aXZlIGNoa250ZnMg
cmV0dXJucyBvayEgKi8KKwkJcmV0dXJuIC1FSU5WQUw7IC8qIE5hdGl2ZSBjaGtudGZzIHJldHVy
bnMgb2shICovCiAJfQoKLQkvKiBHZXQgZml4dXAgcG9pbnRlciAqLworCS8qIEdldCBmaXh1cCBw
b2ludGVyLiAqLwogCWZpeHVwID0gQWRkMlB0cihyaGRyLCBmbyk7CiAJc2FtcGxlID0gKmZpeHVw
OwogCXB0ciA9IEFkZDJQdHIocmhkciwgU0VDVE9SX1NJWkUgLSBzaXplb2Yoc2hvcnQpKTsKIAly
ZXQgPSAwOwoKIAl3aGlsZSAoZm4tLSkgewotCQkvKiBUZXN0IGN1cnJlbnQgd29yZCAqLworCQkv
KiBUZXN0IGN1cnJlbnQgd29yZC4gKi8KIAkJaWYgKCpwdHIgIT0gc2FtcGxlKSB7CiAJCQkvKiBG
aXh1cCBkb2VzIG5vdCBtYXRjaCEgSXMgaXQgc2VyaW91cyBlcnJvcj8gKi8KIAkJCXJldCA9IC1F
X05URlNfRklYVVA7CiAJCX0KCi0JCS8qIFJlcGxhY2UgZml4dXAgKi8KKwkJLyogUmVwbGFjZSBm
aXh1cC4gKi8KIAkJKnB0ciA9ICorK2ZpeHVwOwogCQlwdHIgKz0gU0VDVE9SX1NJWkUgLyBzaXpl
b2Yoc2hvcnQpOwogCX0KQEAgLTE4Miw5ICsxNzksNyBAQCBpbnQgbnRmc19maXhfcG9zdF9yZWFk
KHN0cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJoZHIsIHNpemVfdCBieXRlcywKIH0KCiAvKgot
ICogbnRmc19leHRlbmRfaW5pdAotICoKLSAqIGxvYWRzICRFeHRlbmQgZmlsZQorICogbnRmc19l
eHRlbmRfaW5pdCAtIExvYWQgJEV4dGVuZCBmaWxlLgogICovCiBpbnQgbnRmc19leHRlbmRfaW5p
dChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmkpCiB7CkBAIC0yMDksNyArMjA0LDcgQEAgaW50IG50
ZnNfZXh0ZW5kX2luaXQoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpKQogCQlnb3RvIG91dDsKIAl9
CgotCS8qIGlmIG50ZnNfaWdldDUgcmVhZHMgZnJvbSBkaXNrIGl0IG5ldmVyIHJldHVybnMgYmFk
IGlub2RlICovCisJLyogSWYgbnRmc19pZ2V0NSgpIHJlYWRzIGZyb20gZGlzayBpdCBuZXZlciBy
ZXR1cm5zIGJhZCBpbm9kZS4gKi8KIAlpZiAoIVNfSVNESVIoaW5vZGUtPmlfbW9kZSkpIHsKIAkJ
ZXJyID0gLUVJTlZBTDsKIAkJZ290byBvdXQ7CkBAIC0yNjEsNyArMjU2LDcgQEAgaW50IG50ZnNf
bG9hZGxvZ19hbmRfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IG50ZnNfc2Jf
aW5mbyAqc2JpKQogCXN0cnVjdCBNRlRfUkVGIHJlZjsKIAlzdHJ1Y3QgaW5vZGUgKmlub2RlOwoK
LQkvKiBDaGVjayBmb3IgNEdCICovCisJLyogQ2hlY2sgZm9yIDRHQi4gKi8KIAlpZiAobmktPnZm
c19pbm9kZS5pX3NpemUgPj0gMHgxMDAwMDAwMDB1bGwpIHsKIAkJbnRmc19lcnIoc2IsICJceDI0
TG9nRmlsZSBpcyB0b28gYmlnIik7CiAJCWVyciA9IC1FSU5WQUw7CkBAIC0yODAsNyArMjc1LDcg
QEAgaW50IG50ZnNfbG9hZGxvZ19hbmRfcmVwbGF5KHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3Ry
dWN0IG50ZnNfc2JfaW5mbyAqc2JpKQogCQlpbm9kZSA9IE5VTEw7CgogCWlmICghaW5vZGUpIHsK
LQkJLyogVHJ5IHRvIHVzZSBtZnQgY29weSAqLworCQkvKiBUcnkgdG8gdXNlIE1GVCBjb3B5LiAq
LwogCQl1NjQgdDY0ID0gc2JpLT5tZnQubGJvOwoKIAkJc2JpLT5tZnQubGJvID0gc2JpLT5tZnQu
bGJvMjsKQEAgLTI5OCw3ICsyOTMsNyBAQCBpbnQgbnRmc19sb2FkbG9nX2FuZF9yZXBsYXkoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmkpCgogCXNiaS0+bWZ0
Lm5pID0gbnRmc19pKGlub2RlKTsKCi0JLyogTG9nRmlsZSBzaG91bGQgbm90IGNvbnRhaW5zIGF0
dHJpYnV0ZSBsaXN0ICovCisJLyogTG9nRmlsZSBzaG91bGQgbm90IGNvbnRhaW5zIGF0dHJpYnV0
ZSBsaXN0LiAqLwogCWVyciA9IG5pX2xvYWRfYWxsX21pKHNiaS0+bWZ0Lm5pKTsKIAlpZiAoIWVy
cikKIAkJZXJyID0gbG9nX3JlcGxheShuaSwgJmluaXRpYWxpemVkKTsKQEAgLTMxNyw3ICszMTIs
NyBAQCBpbnQgbnRmc19sb2FkbG9nX2FuZF9yZXBsYXkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBz
dHJ1Y3QgbnRmc19zYl9pbmZvICpzYmkpCiAJaWYgKHNiX3Jkb25seShzYikgfHwgIWluaXRpYWxp
emVkKQogCQlnb3RvIG91dDsKCi0JLyogZmlsbCBMb2dGaWxlIGJ5ICctMScgaWYgaXQgaXMgaW5p
dGlhbGl6ZWQgKi8KKwkvKiBGaWxsIExvZ0ZpbGUgYnkgJy0xJyBpZiBpdCBpcyBpbml0aWFsaXpl
ZC5zc3NzICovCiAJZXJyID0gbnRmc19iaW9fZmlsbF8xKHNiaSwgJm5pLT5maWxlLnJ1bik7Cgog
b3V0OgpAQCAtMzI5LDcgKzMyNCw3IEBAIGludCBudGZzX2xvYWRsb2dfYW5kX3JlcGxheShzdHJ1
Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSkKIC8qCiAgKiBudGZz
X3F1ZXJ5X2RlZgogICoKLSAqIHJldHVybnMgY3VycmVudCBBVFRSX0RFRl9FTlRSWSBmb3IgZ2l2
ZW4gYXR0cmlidXRlIHR5cGUKKyAqIFJldHVybjogQ3VycmVudCBBVFRSX0RFRl9FTlRSWSBmb3Ig
Z2l2ZW4gYXR0cmlidXRlIHR5cGUuCiAgKi8KIGNvbnN0IHN0cnVjdCBBVFRSX0RFRl9FTlRSWSAq
bnRmc19xdWVyeV9kZWYoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLAogCQkJCQkgICAgZW51bSBB
VFRSX1RZUEUgdHlwZSkKQEAgLTM1Niw5ICszNTEsNyBAQCBjb25zdCBzdHJ1Y3QgQVRUUl9ERUZf
RU5UUlkgKm50ZnNfcXVlcnlfZGVmKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwKIH0KCiAvKgot
ICogbnRmc19sb29rX2Zvcl9mcmVlX3NwYWNlCi0gKgotICogbG9va3MgZm9yIGEgZnJlZSBzcGFj
ZSBpbiBiaXRtYXAKKyAqIG50ZnNfbG9va19mb3JfZnJlZV9zcGFjZSAtIExvb2sgZm9yIGEgZnJl
ZSBzcGFjZSBpbiBiaXRtYXAuCiAgKi8KIGludCBudGZzX2xvb2tfZm9yX2ZyZWVfc3BhY2Uoc3Ry
dWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCiAJCQkgICAgIENMU1Qg
Km5ld19sY24sIENMU1QgKm5ld19sZW4sCkBAIC00MDYsNyArMzk5LDcgQEAgaW50IG50ZnNfbG9v
a19mb3JfZnJlZV9zcGFjZShzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIENMU1QgbGNuLCBDTFNU
IGxlbiwKCiAJLyoKIAkgKiAnQ2F1c2UgY2x1c3RlciAwIGlzIGFsd2F5cyB1c2VkIHRoaXMgdmFs
dWUgbWVhbnMgdGhhdCB3ZSBzaG91bGQgdXNlCi0JICogY2FjaGVkIHZhbHVlIG9mICduZXh0X2Zy
ZWVfbGNuJyB0byBpbXByb3ZlIHBlcmZvcm1hbmNlCisJICogY2FjaGVkIHZhbHVlIG9mICduZXh0
X2ZyZWVfbGNuJyB0byBpbXByb3ZlIHBlcmZvcm1hbmNlLgogCSAqLwogCWlmICghbGNuKQogCQls
Y24gPSBzYmktPnVzZWQubmV4dF9mcmVlX2xjbjsKQEAgLTQyMCwxOCArNDEzLDE4IEBAIGludCBu
dGZzX2xvb2tfZm9yX2ZyZWVfc3BhY2Uoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxj
biwgQ0xTVCBsZW4sCiAJCWdvdG8gb2s7CiAJfQoKLQkvKiBUcnkgdG8gdXNlIGNsdXN0ZXJzIGZy
b20gTWZ0Wm9uZSAqLworCS8qIFRyeSB0byB1c2UgY2x1c3RlcnMgZnJvbSBNZnRab25lLiAqLwog
CXpsZW4gPSB3bmRfem9uZV9sZW4od25kKTsKIAl6ZXJvZXMgPSB3bmRfemVyb2VzKHduZCk7Cgot
CS8qIENoZWNrIHRvbyBiaWcgcmVxdWVzdCAqLworCS8qIENoZWNrIHRvbyBiaWcgcmVxdWVzdC4g
Ki8KIAlpZiAobGVuID4gemVyb2VzICsgemxlbikKIAkJZ290byBub19zcGFjZTsKCiAJaWYgKHps
ZW4gPD0gTlRGU19NSU5fTUZUX1pPTkUpCiAJCWdvdG8gbm9fc3BhY2U7CgotCS8qIEhvdyBtYW55
IGNsdXN0ZXJzIHRvIGNhdCBmcm9tIHpvbmUgKi8KKwkvKiBIb3cgbWFueSBjbHVzdGVycyB0byBj
YXQgZnJvbSB6b25lLiAqLwogCXpsY24gPSB3bmRfem9uZV9iaXQod25kKTsKIAl6bGVuMiA9IHps
ZW4gPj4gMTsKIAl6dHJpbSA9IGxlbiA+IHpsZW4gPyB6bGVuIDogKGxlbiA+IHpsZW4yID8gbGVu
IDogemxlbjIpOwpAQCAtNDQ1LDcgKzQzOCw3IEBAIGludCBudGZzX2xvb2tfZm9yX2ZyZWVfc3Bh
Y2Uoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCgogCXduZF96
b25lX3NldCh3bmQsIHpsY24sIG5ld196bGVuKTsKCi0JLyogYWxsb2NhdGUgY29udGludWVzIGNs
dXN0ZXJzICovCisJLyogQWxsb2NhdGUgY29udGludWVzIGNsdXN0ZXJzLiAqLwogCSpuZXdfbGVu
ID0KIAkJd25kX2ZpbmQod25kLCBsZW4sIDAsCiAJCQkgQklUTUFQX0ZJTkRfTUFSS19BU19VU0VE
IHwgQklUTUFQX0ZJTkRfRlVMTCwgJmFfbGNuKTsKQEAgLTQ2Nyw3ICs0NjAsNyBAQCBpbnQgbnRm
c19sb29rX2Zvcl9mcmVlX3NwYWNlKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBsY24s
IENMU1QgbGVuLAogCWlmIChvcHQgJiBBTExPQ0FURV9NRlQpCiAJCWdvdG8gb3V0OwoKLQkvKiBT
ZXQgaGludCBmb3IgbmV4dCByZXF1ZXN0cyAqLworCS8qIFNldCBoaW50IGZvciBuZXh0IHJlcXVl
c3RzLiAqLwogCXNiaS0+dXNlZC5uZXh0X2ZyZWVfbGNuID0gKm5ld19sY24gKyAqbmV3X2xlbjsK
CiBvdXQ6CkBAIC00NzYsMTAgKzQ2OSw5IEBAIGludCBudGZzX2xvb2tfZm9yX2ZyZWVfc3BhY2Uo
c3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCiB9CgogLyoKLSAq
IG50ZnNfZXh0ZW5kX21mdAorICogbnRmc19leHRlbmRfbWZ0IC0gQWxsb2NhdGUgYWRkaXRpb25h
bCBNRlQgcmVjb3Jkcy4KICAqCi0gKiBhbGxvY2F0ZXMgYWRkaXRpb25hbCBNRlQgcmVjb3Jkcwot
ICogc2JpLT5tZnQuYml0bWFwIGlzIGxvY2tlZCBmb3Igd3JpdGUKKyAqIHNiaS0+bWZ0LmJpdG1h
cCBpcyBsb2NrZWQgZm9yIHdyaXRlLgogICoKICAqIE5PVEU6IHJlY3Vyc2l2ZToKICAqCW50ZnNf
bG9va19mcmVlX21mdCAtPgpAQCAtNDkwLDggKzQ4Miw5IEBAIGludCBudGZzX2xvb2tfZm9yX2Zy
ZWVfc3BhY2Uoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCiAg
KgluaV9pbnNfYXR0cl9leHQgLT4KICAqCW50ZnNfbG9va19mcmVlX21mdCAtPgogICoJbnRmc19l
eHRlbmRfbWZ0Ci0gKiBUbyBhdm9pZCByZWN1cnNpdmUgYWx3YXlzIGFsbG9jYXRlIHNwYWNlIGZv
ciB0d28gbmV3IG1mdCByZWNvcmRzCi0gKiBzZWUgYXR0cmliLmM6ICJhdCBsZWFzdCB0d28gbWZ0
IHRvIGF2b2lkIHJlY3Vyc2l2ZSBsb29wIgorICoKKyAqIFRvIGF2b2lkIHJlY3Vyc2l2ZSBhbHdh
eXMgYWxsb2NhdGUgc3BhY2UgZm9yIHR3byBuZXcgTUZUIHJlY29yZHMKKyAqIHNlZSBhdHRyaWIu
YzogImF0IGxlYXN0IHR3byBNRlQgdG8gYXZvaWQgcmVjdXJzaXZlIGxvb3AiLgogICovCiBzdGF0
aWMgaW50IG50ZnNfZXh0ZW5kX21mdChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmkpCiB7CkBAIC01
MDUsNyArNDk4LDcgQEAgc3RhdGljIGludCBudGZzX2V4dGVuZF9tZnQoc3RydWN0IG50ZnNfc2Jf
aW5mbyAqc2JpKQogCW5ld19tZnRfdG90YWwgPSAod25kLT5uYml0cyArIE1GVF9JTkNSRUFTRV9D
SFVOSyArIDEyNykgJiAoQ0xTVCl+MTI3OwogCW5ld19tZnRfYnl0ZXMgPSAodTY0KW5ld19tZnRf
dG90YWwgPDwgc2JpLT5yZWNvcmRfYml0czsKCi0JLyogU3RlcCAxOiBSZXNpemUgJE1GVDo6REFU
QSAqLworCS8qIFN0ZXAgMTogUmVzaXplICRNRlQ6OkRBVEEuICovCiAJZG93bl93cml0ZSgmbmkt
PmZpbGUucnVuX2xvY2spOwogCWVyciA9IGF0dHJfc2V0X3NpemUobmksIEFUVFJfREFUQSwgTlVM
TCwgMCwgJm5pLT5maWxlLnJ1biwKIAkJCSAgICBuZXdfbWZ0X2J5dGVzLCBOVUxMLCBmYWxzZSwg
JmF0dHIpOwpAQCAtNTE5LDEzICs1MTIsMTMgQEAgc3RhdGljIGludCBudGZzX2V4dGVuZF9tZnQo
c3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpKQogCW5ld19tZnRfdG90YWwgPSBsZTY0X3RvX2NwdShh
dHRyLT5ucmVzLmFsbG9jX3NpemUpID4+IHNiaS0+cmVjb3JkX2JpdHM7CiAJbmktPm1pLmRpcnR5
ID0gdHJ1ZTsKCi0JLyogU3RlcCAyOiBSZXNpemUgJE1GVDo6QklUTUFQICovCisJLyogU3RlcCAy
OiBSZXNpemUgJE1GVDo6QklUTUFQLiAqLwogCW5ld19iaXRtYXBfYnl0ZXMgPSBiaXRtYXBfc2l6
ZShuZXdfbWZ0X3RvdGFsKTsKCiAJZXJyID0gYXR0cl9zZXRfc2l6ZShuaSwgQVRUUl9CSVRNQVAs
IE5VTEwsIDAsICZzYmktPm1mdC5iaXRtYXAucnVuLAogCQkJICAgIG5ld19iaXRtYXBfYnl0ZXMs
ICZuZXdfYml0bWFwX2J5dGVzLCB0cnVlLCBOVUxMKTsKCi0JLyogUmVmcmVzaCBNZnQgWm9uZSBp
ZiBuZWNlc3NhcnkgKi8KKwkvKiBSZWZyZXNoIE1GVCBab25lIGlmIG5lY2Vzc2FyeS4gKi8KIAlk
b3duX3dyaXRlX25lc3RlZCgmc2JpLT51c2VkLmJpdG1hcC5yd19sb2NrLCBCSVRNQVBfTVVURVhf
Q0xVU1RFUlMpOwoKIAludGZzX3JlZnJlc2hfem9uZShzYmkpOwpAQCAtNTQ5LDkgKzU0Miw3IEBA
IHN0YXRpYyBpbnQgbnRmc19leHRlbmRfbWZ0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSkKIH0K
CiAvKgotICogbnRmc19sb29rX2ZyZWVfbWZ0Ci0gKgotICogbG9va3MgZm9yIGEgZnJlZSBNRlQg
cmVjb3JkCisgKiBudGZzX2xvb2tfZnJlZV9tZnQgLSBMb29rIGZvciBhIGZyZWUgTUZUIHJlY29y
ZC4KICAqLwogaW50IG50ZnNfbG9va19mcmVlX21mdChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmks
IENMU1QgKnJubywgYm9vbCBtZnQsCiAJCSAgICAgICBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0
cnVjdCBtZnRfaW5vZGUgKiptaSkKQEAgLTU3Miw3ICs1NjMsNyBAQCBpbnQgbnRmc19sb29rX2Zy
ZWVfbWZ0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCAqcm5vLCBib29sIG1mdCwKCiAJ
emxlbiA9IHduZF96b25lX2xlbih3bmQpOwoKLQkvKiBBbHdheXMgcmVzZXJ2ZSBzcGFjZSBmb3Ig
TUZUICovCisJLyogQWx3YXlzIHJlc2VydmUgc3BhY2UgZm9yIE1GVC4gKi8KIAlpZiAoemxlbikg
ewogCQlpZiAobWZ0KSB7CiAJCQl6Yml0ID0gd25kX3pvbmVfYml0KHduZCk7CkBAIC01ODIsNyAr
NTczLDcgQEAgaW50IG50ZnNfbG9va19mcmVlX21mdChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmks
IENMU1QgKnJubywgYm9vbCBtZnQsCiAJCWdvdG8gZm91bmQ7CiAJfQoKLQkvKiBObyBNRlQgem9u
ZS4gZmluZCB0aGUgbmVhcmVzdCB0byAnMCcgZnJlZSBNRlQgKi8KKwkvKiBObyBNRlQgem9uZS4g
RmluZCB0aGUgbmVhcmVzdCB0byAnMCcgZnJlZSBNRlQuICovCiAJaWYgKCF3bmRfZmluZCh3bmQs
IDEsIE1GVF9SRUNfRlJFRSwgMCwgJnpiaXQpKSB7CiAJCS8qIFJlc2l6ZSBNRlQgKi8KIAkJbWZ0
X3RvdGFsID0gd25kLT5uYml0czsKQEAgLTYwMSwxMCArNTkyLDEwIEBAIGludCBudGZzX2xvb2tf
ZnJlZV9tZnQoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUICpybm8sIGJvb2wgbWZ0LAog
CQkvKgogCQkgKiBMb29rIGZvciBmcmVlIHJlY29yZCByZXNlcnZlZCBhcmVhIFsxMS0xNikgPT0K
IAkJICogW01GVF9SRUNfUkVTRVJWRUQsIE1GVF9SRUNfRlJFRSApIE1GVCBiaXRtYXAgYWx3YXlz
Ci0JCSAqIG1hcmtzIGl0IGFzIHVzZWQKKwkJICogbWFya3MgaXQgYXMgdXNlZC4KIAkJICovCiAJ
CWlmICghc2JpLT5tZnQucmVzZXJ2ZWRfYml0bWFwKSB7Ci0JCQkvKiBPbmNlIHBlciBzZXNzaW9u
IGNyZWF0ZSBpbnRlcm5hbCBiaXRtYXAgZm9yIDUgYml0cyAqLworCQkJLyogT25jZSBwZXIgc2Vz
c2lvbiBjcmVhdGUgaW50ZXJuYWwgYml0bWFwIGZvciA1IGJpdHMuICovCiAJCQlzYmktPm1mdC5y
ZXNlcnZlZF9iaXRtYXAgPSAweEZGOwoKIAkJCXJlZi5oaWdoID0gMDsKQEAgLTY3MSw3ICs2NjIs
NyBAQCBpbnQgbnRmc19sb29rX2ZyZWVfbWZ0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xT
VCAqcm5vLCBib29sIG1mdCwKIAkJd2hpbGUgKHpsZW4gPiAxICYmICF3bmRfaXNfZnJlZSh3bmQs
IHpiaXQsIHpsZW4pKQogCQkJemxlbiAtPSAxOwoKLQkJLyogW3piaXQsIHpiaXQgKyB6bGVuKSB3
aWxsIGJlIHVzZWQgZm9yIE1mdCBpdHNlbGYgKi8KKwkJLyogW3piaXQsIHpiaXQgKyB6bGVuKSB3
aWxsIGJlIHVzZWQgZm9yIE1GVCBpdHNlbGYuICovCiAJCWZyb20gPSBzYmktPm1mdC51c2VkOwog
CQlpZiAoZnJvbSA8IHpiaXQpCiAJCQlmcm9tID0gemJpdDsKQEAgLTY5Miw3ICs2ODMsNyBAQCBp
bnQgbnRmc19sb29rX2ZyZWVfbWZ0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCAqcm5v
LCBib29sIG1mdCwKCiBmb3VuZDoKIAlpZiAoIW1mdCkgewotCQkvKiBUaGUgcmVxdWVzdCB0byBn
ZXQgcmVjb3JkIGZvciBnZW5lcmFsIHB1cnBvc2UgKi8KKwkJLyogVGhlIHJlcXVlc3QgdG8gZ2V0
IHJlY29yZCBmb3IgZ2VuZXJhbCBwdXJwb3NlLiAqLwogCQlpZiAoc2JpLT5tZnQubmV4dF9mcmVl
IDwgTUZUX1JFQ19VU0VSKQogCQkJc2JpLT5tZnQubmV4dF9mcmVlID0gTUZUX1JFQ19VU0VSOwoK
QEAgLTcxNyw3ICs3MDgsNyBAQCBpbnQgbnRmc19sb29rX2ZyZWVfbWZ0KHN0cnVjdCBudGZzX3Ni
X2luZm8gKnNiaSwgQ0xTVCAqcm5vLCBib29sIG1mdCwKIAkJZ290byBvdXQ7CiAJfQoKLQkvKiBX
ZSBoYXZlIGZvdW5kIGEgcmVjb3JkIHRoYXQgYXJlIG5vdCByZXNlcnZlZCBmb3IgbmV4dCBNRlQg
Ki8KKwkvKiBXZSBoYXZlIGZvdW5kIGEgcmVjb3JkIHRoYXQgYXJlIG5vdCByZXNlcnZlZCBmb3Ig
bmV4dCBNRlQuICovCiAJaWYgKCpybm8gPj0gTUZUX1JFQ19GUkVFKQogCQl3bmRfc2V0X3VzZWQo
d25kLCAqcm5vLCAxKTsKIAllbHNlIGlmICgqcm5vID49IE1GVF9SRUNfUkVTRVJWRUQgJiYgc2Jp
LT5tZnQucmVzZXJ2ZWRfYml0bWFwX2luaXRlZCkKQEAgLTczMSw5ICs3MjIsNyBAQCBpbnQgbnRm
c19sb29rX2ZyZWVfbWZ0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCAqcm5vLCBib29s
IG1mdCwKIH0KCiAvKgotICogbnRmc19tYXJrX3JlY19mcmVlCi0gKgotICogbWFya3MgcmVjb3Jk
IGFzIGZyZWUKKyAqIG50ZnNfbWFya19yZWNfZnJlZSAtIE1hcmsgcmVjb3JkIGFzIGZyZWUuCiAg
Ki8KIHZvaWQgbnRmc19tYXJrX3JlY19mcmVlKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xT
VCBybm8pCiB7CkBAIC03NjIsMTAgKzc1MSw5IEBAIHZvaWQgbnRmc19tYXJrX3JlY19mcmVlKHN0
cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBybm8pCiB9CgogLyoKLSAqIG50ZnNfY2xlYXJf
bWZ0X3RhaWwKKyAqIG50ZnNfY2xlYXJfbWZ0X3RhaWwgLSBGb3JtYXQgZW1wdHkgcmVjb3JkcyBb
ZnJvbSwgdG8pLgogICoKLSAqIGZvcm1hdHMgZW1wdHkgcmVjb3JkcyBbZnJvbSwgdG8pCi0gKiBz
YmktPm1mdC5iaXRtYXAgaXMgbG9ja2VkIGZvciB3cml0ZQorICogc2JpLT5tZnQuYml0bWFwIGlz
IGxvY2tlZCBmb3Igd3JpdGUuCiAgKi8KIGludCBudGZzX2NsZWFyX21mdF90YWlsKHN0cnVjdCBu
dGZzX3NiX2luZm8gKnNiaSwgc2l6ZV90IGZyb20sIHNpemVfdCB0bykKIHsKQEAgLTgwNCwxMiAr
NzkyLDExIEBAIGludCBudGZzX2NsZWFyX21mdF90YWlsKHN0cnVjdCBudGZzX3NiX2luZm8gKnNi
aSwgc2l6ZV90IGZyb20sIHNpemVfdCB0bykKIH0KCiAvKgotICogbnRmc19yZWZyZXNoX3pvbmUK
KyAqIG50ZnNfcmVmcmVzaF96b25lIC0gUmVmcmVzaCBNRlQgem9uZS4KICAqCi0gKiByZWZyZXNo
ZXMgTWZ0IHpvbmUKLSAqIHNiaS0+dXNlZC5iaXRtYXAgaXMgbG9ja2VkIGZvciBydwotICogc2Jp
LT5tZnQuYml0bWFwIGlzIGxvY2tlZCBmb3Igd3JpdGUKLSAqIHNiaS0+bWZ0Lm5pLT5maWxlLnJ1
bl9sb2NrIGZvciB3cml0ZQorICogc2JpLT51c2VkLmJpdG1hcCBpcyBsb2NrZWQgZm9yIHJ3Lgor
ICogc2JpLT5tZnQuYml0bWFwIGlzIGxvY2tlZCBmb3Igd3JpdGUuCisgKiBzYmktPm1mdC5uaS0+
ZmlsZS5ydW5fbG9jayBmb3Igd3JpdGUuCiAgKi8KIGludCBudGZzX3JlZnJlc2hfem9uZShzdHJ1
Y3QgbnRmc19zYl9pbmZvICpzYmkpCiB7CkBAIC04MTgsMTQgKzgwNSwxNCBAQCBpbnQgbnRmc19y
ZWZyZXNoX3pvbmUoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpKQogCXN0cnVjdCB3bmRfYml0bWFw
ICp3bmQgPSAmc2JpLT51c2VkLmJpdG1hcDsKIAlzdHJ1Y3QgbnRmc19pbm9kZSAqbmkgPSBzYmkt
Pm1mdC5uaTsKCi0JLyogRG8gbm90IGNoYW5nZSBhbnl0aGluZyB1bmxlc3Mgd2UgaGF2ZSBub24g
ZW1wdHkgTWZ0IHpvbmUgKi8KKwkvKiBEbyBub3QgY2hhbmdlIGFueXRoaW5nIHVubGVzcyB3ZSBo
YXZlIG5vbiBlbXB0eSBNRlQgem9uZS4gKi8KIAlpZiAod25kX3pvbmVfbGVuKHduZCkpCiAJCXJl
dHVybiAwOwoKIAkvKgotCSAqIENvbXB1dGUgdGhlIG1mdCB6b25lIGF0IHR3byBzdGVwcwotCSAq
IEl0IHdvdWxkIGJlIG5pY2UgaWYgd2UgYXJlIGFibGUgdG8gYWxsb2NhdGUKLQkgKiAxLzggb2Yg
dG90YWwgY2x1c3RlcnMgZm9yIE1GVCBidXQgbm90IG1vcmUgdGhlbiA1MTIgTUIKKwkgKiBDb21w
dXRlIHRoZSBNRlQgem9uZSBhdCB0d28gc3RlcHMuCisJICogSXQgd291bGQgYmUgbmljZSBpZiB3
ZSBhcmUgYWJsZSB0byBhbGxvY2F0ZSAxLzggb2YKKwkgKiB0b3RhbCBjbHVzdGVycyBmb3IgTUZU
IGJ1dCBub3QgbW9yZSB0aGVuIDUxMiBNQi4KIAkgKi8KIAl6b25lX2xpbWl0ID0gKDUxMiAqIDEw
MjQgKiAxMDI0KSA+PiBzYmktPmNsdXN0ZXJfYml0czsKIAl6b25lX21heCA9IHduZC0+bmJpdHMg
Pj4gMzsKQEAgLTgzOCwyOSArODI1LDI3IEBAIGludCBudGZzX3JlZnJlc2hfem9uZShzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmkpCiAJaWYgKCFydW5fbG9va3VwX2VudHJ5KCZuaS0+ZmlsZS5ydW4s
IHZjbiAtIDEsICZsY24sICZsZW4sIE5VTEwpKQogCQlsY24gPSBTUEFSU0VfTENOOwoKLQkvKiBX
ZSBzaG91bGQgYWx3YXlzIGZpbmQgTGFzdCBMY24gZm9yIE1GVCAqLworCS8qIFdlIHNob3VsZCBh
bHdheXMgZmluZCBMYXN0IExjbiBmb3IgTUZULiAqLwogCWlmIChsY24gPT0gU1BBUlNFX0xDTikK
IAkJcmV0dXJuIC1FSU5WQUw7CgogCWxjbl9zID0gbGNuICsgMTsKCi0JLyogVHJ5IHRvIGFsbG9j
YXRlIGNsdXN0ZXJzIGFmdGVyIGxhc3QgTUZUIHJ1biAqLworCS8qIFRyeSB0byBhbGxvY2F0ZSBj
bHVzdGVycyBhZnRlciBsYXN0IE1GVCBydW4uICovCiAJemxlbiA9IHduZF9maW5kKHduZCwgem9u
ZV9tYXgsIGxjbl9zLCAwLCAmbGNuX3MpOwogCWlmICghemxlbikgewogCQludGZzX25vdGljZShz
YmktPnNiLCAiTWZ0Wm9uZTogdW5hdmFpbGFibGUiKTsKIAkJcmV0dXJuIDA7CiAJfQoKLQkvKiBU
cnVuY2F0ZSB0b28gbGFyZ2Ugem9uZSAqLworCS8qIFRydW5jYXRlIHRvbyBsYXJnZSB6b25lLiAq
LwogCXduZF96b25lX3NldCh3bmQsIGxjbl9zLCB6bGVuKTsKCiAJcmV0dXJuIDA7CiB9CgogLyoK
LSAqIG50ZnNfdXBkYXRlX21mdG1pcnIKLSAqCi0gKiB1cGRhdGVzICRNRlRNaXJyIGRhdGEKKyAq
IG50ZnNfdXBkYXRlX21mdG1pcnIgLSBVcGRhdGUgJE1GVE1pcnIgZGF0YS4KICAqLwogaW50IG50
ZnNfdXBkYXRlX21mdG1pcnIoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBpbnQgd2FpdCkKIHsK
QEAgLTkyMyw5ICs5MDgsOSBAQCBpbnQgbnRmc191cGRhdGVfbWZ0bWlycihzdHJ1Y3QgbnRmc19z
Yl9pbmZvICpzYmksIGludCB3YWl0KQogLyoKICAqIG50ZnNfc2V0X3N0YXRlCiAgKgotICogbW91
bnQ6IG50ZnNfc2V0X3N0YXRlKE5URlNfRElSVFlfRElSVFkpCi0gKiB1bW91bnQ6IG50ZnNfc2V0
X3N0YXRlKE5URlNfRElSVFlfQ0xFQVIpCi0gKiBudGZzIGVycm9yOiBudGZzX3NldF9zdGF0ZShO
VEZTX0RJUlRZX0VSUk9SKQorICogTW91bnQ6IG50ZnNfc2V0X3N0YXRlKE5URlNfRElSVFlfRElS
VFkpCisgKiBVbW91bnQ6IG50ZnNfc2V0X3N0YXRlKE5URlNfRElSVFlfQ0xFQVIpCisgKiBOVEZT
IGVycm9yOiBudGZzX3NldF9zdGF0ZShOVEZTX0RJUlRZX0VSUk9SKQogICovCiBpbnQgbnRmc19z
ZXRfc3RhdGUoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBlbnVtIE5URlNfRElSVFlfRkxBR1Mg
ZGlydHkpCiB7CkBAIC05MzYsMTQgKzkyMSwxNCBAQCBpbnQgbnRmc19zZXRfc3RhdGUoc3RydWN0
IG50ZnNfc2JfaW5mbyAqc2JpLCBlbnVtIE5URlNfRElSVFlfRkxBR1MgZGlydHkpCiAJc3RydWN0
IG50ZnNfaW5vZGUgKm5pOwoKIAkvKgotCSAqIGRvIG5vdCBjaGFuZ2Ugc3RhdGUgaWYgZnMgd2Fz
IHJlYWxfZGlydHkKLQkgKiBkbyBub3QgY2hhbmdlIHN0YXRlIGlmIGZzIGFscmVhZHkgZGlydHko
Y2xlYXIpCi0JICogZG8gbm90IGNoYW5nZSBhbnkgdGhpbmcgaWYgbW91bnRlZCByZWFkIG9ubHkK
KwkgKiBEbyBub3QgY2hhbmdlIHN0YXRlIGlmIGZzIHdhcyByZWFsX2RpcnR5LgorCSAqIERvIG5v
dCBjaGFuZ2Ugc3RhdGUgaWYgZnMgYWxyZWFkeSBkaXJ0eShjbGVhcikuCisJICogRG8gbm90IGNo
YW5nZSBhbnkgdGhpbmcgaWYgbW91bnRlZCByZWFkIG9ubHkuCiAJICovCiAJaWYgKHNiaS0+dm9s
dW1lLnJlYWxfZGlydHkgfHwgc2JfcmRvbmx5KHNiaS0+c2IpKQogCQlyZXR1cm4gMDsKCi0JLyog
Q2hlY2sgY2FjaGVkIHZhbHVlICovCisJLyogQ2hlY2sgY2FjaGVkIHZhbHVlLiAqLwogCWlmICgo
ZGlydHkgPT0gTlRGU19ESVJUWV9DTEVBUiA/IDAgOiBWT0xVTUVfRkxBR19ESVJUWSkgPT0KIAkg
ICAgKHNiaS0+dm9sdW1lLmZsYWdzICYgVk9MVU1FX0ZMQUdfRElSVFkpKQogCQlyZXR1cm4gMDsK
QEAgLTk3OCw3ICs5NjMsNyBAQCBpbnQgbnRmc19zZXRfc3RhdGUoc3RydWN0IG50ZnNfc2JfaW5m
byAqc2JpLCBlbnVtIE5URlNfRElSVFlfRkxBR1MgZGlydHkpCiAJCWluZm8tPmZsYWdzICY9IH5W
T0xVTUVfRkxBR19ESVJUWTsKIAkJYnJlYWs7CiAJfQotCS8qIGNhY2hlIGN1cnJlbnQgdm9sdW1l
IGZsYWdzKi8KKwkvKiBDYWNoZSBjdXJyZW50IHZvbHVtZSBmbGFncy4gKi8KIAlzYmktPnZvbHVt
ZS5mbGFncyA9IGluZm8tPmZsYWdzOwogCW1pLT5kaXJ0eSA9IHRydWU7CiAJZXJyID0gMDsKQEAg
LTk4OSwxNiArOTc0LDE0IEBAIGludCBudGZzX3NldF9zdGF0ZShzdHJ1Y3QgbnRmc19zYl9pbmZv
ICpzYmksIGVudW0gTlRGU19ESVJUWV9GTEFHUyBkaXJ0eSkKIAkJcmV0dXJuIGVycjsKCiAJbWFy
a19pbm9kZV9kaXJ0eSgmbmktPnZmc19pbm9kZSk7Ci0JLyp2ZXJpZnkoIW50ZnNfdXBkYXRlX21m
dG1pcnIoKSk7ICovCisJLyogdmVyaWZ5KCFudGZzX3VwZGF0ZV9tZnRtaXJyKCkpOyAqLwogCWVy
ciA9IHN5bmNfaW5vZGVfbWV0YWRhdGEoJm5pLT52ZnNfaW5vZGUsIDEpOwoKIAlyZXR1cm4gZXJy
OwogfQoKIC8qCi0gKiBzZWN1cml0eV9oYXNoCi0gKgotICogY2FsY3VsYXRlcyBhIGhhc2ggb2Yg
c2VjdXJpdHkgZGVzY3JpcHRvcgorICogc2VjdXJpdHlfaGFzaCAtIENhbGN1bGF0ZSBhIGhhc2gg
b2Ygc2VjdXJpdHkgZGVzY3JpcHRvci4KICAqLwogc3RhdGljIGlubGluZSBfX2xlMzIgc2VjdXJp
dHlfaGFzaChjb25zdCB2b2lkICpzZCwgc2l6ZV90IGJ5dGVzKQogewpAQCAtMTE4NCwxMyArMTE2
NywxMyBAQCBpbnQgbnRmc19yZWFkX3J1bl9uYihzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIGNv
bnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKIAlzdHJ1Y3QgYnVmZmVyX2hlYWQgKmJoOwoKIAlp
ZiAoIXJ1bikgewotCQkvKiBmaXJzdCByZWFkaW5nIG9mICRWb2x1bWUgKyAkTUZUTWlyciArIExv
Z0ZpbGUgZ29lcyBoZXJlKi8KKwkJLyogRmlyc3QgcmVhZGluZyBvZiAkVm9sdW1lICsgJE1GVE1p
cnIgKyAkTG9nRmlsZSBnb2VzIGhlcmUuICovCiAJCWlmICh2Ym8gPiBNRlRfUkVDX1ZPTCAqIHNi
aS0+cmVjb3JkX3NpemUpIHsKIAkJCWVyciA9IC1FTk9FTlQ7CiAJCQlnb3RvIG91dDsKIAkJfQoK
LQkJLyogdXNlIGFic29sdXRlIGJvb3QncyAnTUZUQ2x1c3RlcicgdG8gcmVhZCByZWNvcmQgKi8K
KwkJLyogVXNlIGFic29sdXRlIGJvb3QncyAnTUZUQ2x1c3RlcicgdG8gcmVhZCByZWNvcmQuICov
CiAJCWxibyA9IHZibyArIHNiaS0+bWZ0LmxibzsKIAkJbGVuID0gc2JpLT5yZWNvcmRfc2l6ZTsK
IAl9IGVsc2UgaWYgKCFydW5fbG9va3VwX2VudHJ5KHJ1biwgdmNuLCAmbGNuLCAmY2xlbiwgJmlk
eCkpIHsKQEAgLTEyODEsNyArMTI2NCwxMSBAQCBpbnQgbnRmc19yZWFkX3J1bl9uYihzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKIAlyZXR1cm4g
ZXJyOwogfQoKLS8qIFJldHVybnMgPCAwIGlmIGVycm9yLCAwIGlmIG9rLCAnLUVfTlRGU19GSVhV
UCcgaWYgbmVlZCB0byB1cGRhdGUgZml4dXBzICovCisvKgorICogbnRmc19yZWFkX2JoCisgKgor
ICogUmV0dXJuOiA8IDAgaWYgZXJyb3IsIDAgaWYgb2ssIC1FX05URlNfRklYVVAgaWYgbmVlZCB0
byB1cGRhdGUgZml4dXBzLgorICovCiBpbnQgbnRmc19yZWFkX2JoKHN0cnVjdCBudGZzX3NiX2lu
Zm8gKnNiaSwgY29uc3Qgc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCB1NjQgdmJvLAogCQkgc3RydWN0
IE5URlNfUkVDT1JEX0hFQURFUiAqcmhkciwgdTMyIGJ5dGVzLAogCQkgc3RydWN0IG50ZnNfYnVm
ZmVycyAqbmIpCkBAIC0xNDc4LDcgKzE0NjUsOSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBiaW8g
Km50ZnNfYWxsb2NfYmlvKHUzMiBucl92ZWNzKQogCXJldHVybiBiaW87CiB9CgotLyogcmVhZC93
cml0ZSBwYWdlcyBmcm9tL3RvIGRpc2sqLworLyoKKyAqIG50ZnNfYmlvX3BhZ2VzIC0gUmVhZC93
cml0ZSBwYWdlcyBmcm9tL3RvIGRpc2suCisgKi8KIGludCBudGZzX2Jpb19wYWdlcyhzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKIAkJICAgc3Ry
dWN0IHBhZ2UgKipwYWdlcywgdTMyIG5yX3BhZ2VzLCB1NjQgdmJvLCB1MzIgYnl0ZXMsCiAJCSAg
IHUzMiBvcCkKQEAgLTE1MDAsNyArMTQ4OSw3IEBAIGludCBudGZzX2Jpb19wYWdlcyhzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwKCiAJYmxrX3N0
YXJ0X3BsdWcoJnBsdWcpOwoKLQkvKiBhbGlnbiB2Ym8gYW5kIGJ5dGVzIHRvIGJlIDUxMiBieXRl
cyBhbGlnbmVkICovCisJLyogQWxpZ24gdmJvIGFuZCBieXRlcyB0byBiZSA1MTIgYnl0ZXMgYWxp
Z25lZC4gKi8KIAlsYm8gPSAodmJvICsgYnl0ZXMgKyA1MTEpICYgfjUxMXVsbDsKIAl2Ym8gPSB2
Ym8gJiB+NTExdWxsOwogCWJ5dGVzID0gbGJvIC0gdmJvOwpAQCAtMTU3OSw5ICsxNTY4LDEwIEBA
IGludCBudGZzX2Jpb19wYWdlcyhzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVj
dCBydW5zX3RyZWUgKnJ1biwKIH0KCiAvKgotICogSGVscGVyIGZvciBudGZzX2xvYWRsb2dfYW5k
X3JlcGxheQotICogZmlsbCBvbi1kaXNrIGxvZ2ZpbGUgcmFuZ2UgYnkgKC0xKQotICogdGhpcyBt
ZWFucyBlbXB0eSBsb2dmaWxlCisgKiBudGZzX2Jpb19maWxsXzEgLSBIZWxwZXIgZm9yIG50ZnNf
bG9hZGxvZ19hbmRfcmVwbGF5KCkuCisgKgorICogRmlsbCBvbi1kaXNrIGxvZ2ZpbGUgcmFuZ2Ug
YnkgKC0xKQorICogdGhpcyBtZWFucyBlbXB0eSBsb2dmaWxlLgogICovCiBpbnQgbnRmc19iaW9f
ZmlsbF8xKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgY29uc3Qgc3RydWN0IHJ1bnNfdHJlZSAq
cnVuKQogewpAQCAtMTYxMyw3ICsxNjAzLDcgQEAgaW50IG50ZnNfYmlvX2ZpbGxfMShzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1bikKIAl9CgogCS8q
Ci0JICogVE9ETzogdHJ5IGJsa2Rldl9pc3N1ZV93cml0ZV9zYW1lCisJICogVE9ETzogVHJ5IGJs
a2Rldl9pc3N1ZV93cml0ZV9zYW1lLgogCSAqLwogCWJsa19zdGFydF9wbHVnKCZwbHVnKTsKIAlk
byB7CkBAIC0xNzEwLDggKzE3MDAsOCBAQCBzdHJ1Y3QgbnRmc19pbm9kZSAqbnRmc19uZXdfaW5v
ZGUoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIHJubywgYm9vbCBkaXIpCgogLyoKICAq
IE86QkFHOkJBRDooQTtPSUNJO0ZBOzs7V0QpCi0gKiBvd25lciBTLTEtNS0zMi01NDQgKEFkbWlu
aXN0cmF0b3JzKQotICogZ3JvdXAgUy0xLTUtMzItNTQ0IChBZG1pbmlzdHJhdG9ycykKKyAqIE93
bmVyIFMtMS01LTMyLTU0NCAoQWRtaW5pc3RyYXRvcnMpCisgKiBHcm91cCBTLTEtNS0zMi01NDQg
KEFkbWluaXN0cmF0b3JzKQogICogQUNFOiBhbGxvdyBTLTEtMS0wIChFdmVyeW9uZSkgd2l0aCBG
SUxFX0FMTF9BQ0NFU1MKICAqLwogY29uc3QgdTggc19kZWZhdWx0X3NlY3VyaXR5W10gX19hbGln
bmVkKDgpID0gewpAQCAtMTczMiw3ICsxNzIyLDkgQEAgc3RhdGljIGlubGluZSB1MzIgc2lkX2xl
bmd0aChjb25zdCBzdHJ1Y3QgU0lEICpzaWQpCiB9CgogLyoKLSAqIFRoYW5rcyBNYXJrIEhhcm1z
dG9uZSBmb3IgaWRlYQorICogaXNfYWNsX3ZhbGlkCisgKgorICogVGhhbmtzIE1hcmsgSGFybXN0
b25lIGZvciBpZGVhLgogICovCiBzdGF0aWMgYm9vbCBpc19hY2xfdmFsaWQoY29uc3Qgc3RydWN0
IEFDTCAqYWNsLCB1MzIgbGVuKQogewpAQCAtMTg0OCw5ICsxODQwLDcgQEAgYm9vbCBpc19zZF92
YWxpZChjb25zdCBzdHJ1Y3QgU0VDVVJJVFlfREVTQ1JJUFRPUl9SRUxBVElWRSAqc2QsIHUzMiBs
ZW4pCiB9CgogLyoKLSAqIG50ZnNfc2VjdXJpdHlfaW5pdAotICoKLSAqIGxvYWRzIGFuZCBwYXJz
ZSAkU2VjdXJlCisgKiBudGZzX3NlY3VyaXR5X2luaXQgLSBMb2FkIGFuZCBwYXJzZSAkU2VjdXJl
LgogICovCiBpbnQgbnRmc19zZWN1cml0eV9pbml0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSkK
IHsKQEAgLTE5MzEsOSArMTkyMSw5IEBAIGludCBudGZzX3NlY3VyaXR5X2luaXQoc3RydWN0IG50
ZnNfc2JfaW5mbyAqc2JpKQoKIAlzZHNfc2l6ZSA9IGlub2RlLT5pX3NpemU7CgotCS8qIEZpbmQg
dGhlIGxhc3QgdmFsaWQgSWQgKi8KKwkvKiBGaW5kIHRoZSBsYXN0IHZhbGlkIElkLiAqLwogCXNi
aS0+c2VjdXJpdHkubmV4dF9pZCA9IFNFQ1VSSVRZX0lEX0ZJUlNUOwotCS8qIEFsd2F5cyB3cml0
ZSBuZXcgc2VjdXJpdHkgYXQgdGhlIGVuZCBvZiBidWNrZXQgKi8KKwkvKiBBbHdheXMgd3JpdGUg
bmV3IHNlY3VyaXR5IGF0IHRoZSBlbmQgb2YgYnVja2V0LiAqLwogCXNiaS0+c2VjdXJpdHkubmV4
dF9vZmYgPQogCQlRdWFkMkFsaWduKHNkc19zaXplIC0gU2VjdXJpdHlEZXNjcmlwdG9yc0Jsb2Nr
U2l6ZSk7CgpAQCAtMTk2OSw5ICsxOTU5LDcgQEAgaW50IG50ZnNfc2VjdXJpdHlfaW5pdChzdHJ1
Y3QgbnRmc19zYl9pbmZvICpzYmkpCiB9CgogLyoKLSAqIG50ZnNfZ2V0X3NlY3VyaXR5X2J5X2lk
Ci0gKgotICogcmVhZHMgc2VjdXJpdHkgZGVzY3JpcHRvciBieSBpZAorICogbnRmc19nZXRfc2Vj
dXJpdHlfYnlfaWQgLSBSZWFkIHNlY3VyaXR5IGRlc2NyaXB0b3IgYnkgaWQuCiAgKi8KIGludCBu
dGZzX2dldF9zZWN1cml0eV9ieV9pZChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIF9fbGUzMiBz
ZWN1cml0eV9pZCwKIAkJCSAgICBzdHJ1Y3QgU0VDVVJJVFlfREVTQ1JJUFRPUl9SRUxBVElWRSAq
KnNkLApAQCAtMjAwNCw3ICsxOTkyLDcgQEAgaW50IG50ZnNfZ2V0X3NlY3VyaXR5X2J5X2lkKHN0
cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgX19sZTMyIHNlY3VyaXR5X2lkLAogCQlnb3RvIG91dDsK
IAl9CgotCS8qIFRyeSB0byBmaW5kIHRoaXMgU0VDVVJJVFkgZGVzY3JpcHRvciBpbiBTSUkgaW5k
ZXhlcyAqLworCS8qIFRyeSB0byBmaW5kIHRoaXMgU0VDVVJJVFkgZGVzY3JpcHRvciBpbiBTSUkg
aW5kZXhlcy4gKi8KIAllcnIgPSBpbmR4X2ZpbmQoaW5keCwgbmksIHJvb3Rfc2lpLCAmc2VjdXJp
dHlfaWQsIHNpemVvZihzZWN1cml0eV9pZCksCiAJCQlOVUxMLCAmZGlmZiwgKHN0cnVjdCBOVEZT
X0RFICoqKSZzaWlfZSwgZm5kX3NpaSk7CiAJaWYgKGVycikKQEAgLTIwMjAsOSArMjAwOCw3IEBA
IGludCBudGZzX2dldF9zZWN1cml0eV9ieV9pZChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIF9f
bGUzMiBzZWN1cml0eV9pZCwKIAl9CgogCWlmICh0MzIgPiBTSVpFT0ZfU0VDVVJJVFlfSERSICsg
MHgxMDAwMCkgewotCQkvKgotCQkgKiBsb29rcyBsaWtlIHRvbyBiaWcgc2VjdXJpdHkuIDB4MTAw
MDAgLSBpcyBhcmJpdHJhcnkgYmlnIG51bWJlcgotCQkgKi8KKwkJLyogTG9va3MgbGlrZSB0b28g
YmlnIHNlY3VyaXR5LiAweDEwMDAwIC0gaXMgYXJiaXRyYXJ5IGJpZyBudW1iZXIuICovCiAJCWVy
ciA9IC1FRkJJRzsKIAkJZ290byBvdXQ7CiAJfQpAQCAtMjA2NSw5ICsyMDUxLDcgQEAgaW50IG50
ZnNfZ2V0X3NlY3VyaXR5X2J5X2lkKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgX19sZTMyIHNl
Y3VyaXR5X2lkLAogfQoKIC8qCi0gKiBudGZzX2luc2VydF9zZWN1cml0eQotICoKLSAqIGluc2Vy
dHMgc2VjdXJpdHkgZGVzY3JpcHRvciBpbnRvICRTZWN1cmU6OlNEUworICogbnRmc19pbnNlcnRf
c2VjdXJpdHkgLSBJbnNlcnQgc2VjdXJpdHkgZGVzY3JpcHRvciBpbnRvICRTZWN1cmU6OlNEUy4K
ICAqCiAgKiBTRUNVUklUWSBEZXNjcmlwdG9yIFN0cmVhbSBkYXRhIGlzIG9yZ2FuaXplZCBpbnRv
IGNodW5rcyBvZiAyNTZLIGJ5dGVzCiAgKiBhbmQgaXQgY29udGFpbnMgYSBtaXJyb3IgY29weSBv
ZiBlYWNoIHNlY3VyaXR5IGRlc2NyaXB0b3IuICBXaGVuIHdyaXRpbmcKQEAgLTIxMDgsNyArMjA5
Miw3IEBAIGludCBudGZzX2luc2VydF9zZWN1cml0eShzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmks
CiAJCSppbnNlcnRlZCA9IGZhbHNlOwogCSpzZWN1cml0eV9pZCA9IFNFQ1VSSVRZX0lEX0lOVkFM
SUQ7CgotCS8qIEFsbG9jYXRlIGEgdGVtcG9yYWwgYnVmZmVyKi8KKwkvKiBBbGxvY2F0ZSBhIHRl
bXBvcmFsIGJ1ZmZlci4gKi8KIAlkX3NlY3VyaXR5ID0gbnRmc196YWxsb2MoYWxpZ25lZF9zZWNf
c2l6ZSk7CiAJaWYgKCFkX3NlY3VyaXR5KQogCQlyZXR1cm4gLUVOT01FTTsKQEAgLTIxMzQsOCAr
MjExOCw4IEBAIGludCBudGZzX2luc2VydF9zZWN1cml0eShzdHJ1Y3QgbnRmc19zYl9pbmZvICpz
YmksCiAJfQoKIAkvKgotCSAqIENoZWNrIGlmIHN1Y2ggc2VjdXJpdHkgYWxyZWFkeSBleGlzdHMK
LQkgKiB1c2UgIlNESCIgYW5kIGhhc2ggLT4gdG8gZ2V0IHRoZSBvZmZzZXQgaW4gIlNEUyIKKwkg
KiBDaGVjayBpZiBzdWNoIHNlY3VyaXR5IGFscmVhZHkgZXhpc3RzLgorCSAqIFVzZSAiU0RIIiBh
bmQgaGFzaCAtPiB0byBnZXQgdGhlIG9mZnNldCBpbiAiU0RTIi4KIAkgKi8KIAllcnIgPSBpbmR4
X2ZpbmQoaW5keF9zZGgsIG5pLCByb290X3NkaCwgJmhhc2hfa2V5LCBzaXplb2YoaGFzaF9rZXkp
LAogCQkJJmRfc2VjdXJpdHktPmtleS5zZWNfaWQsICZkaWZmLCAoc3RydWN0IE5URlNfREUgKiop
JmUsCkBAIC0yMTU1LDcgKzIxMzksNyBAQCBpbnQgbnRmc19pbnNlcnRfc2VjdXJpdHkoc3RydWN0
IG50ZnNfc2JfaW5mbyAqc2JpLAogCQkJICAgIGRfc2VjdXJpdHktPmtleS5oYXNoID09IGhhc2hf
a2V5Lmhhc2ggJiYKIAkJCSAgICAhbWVtY21wKGRfc2VjdXJpdHkgKyAxLCBzZCwgc2l6ZV9zZCkp
IHsKIAkJCQkqc2VjdXJpdHlfaWQgPSBkX3NlY3VyaXR5LT5rZXkuc2VjX2lkOwotCQkJCS8qc3Vj
aCBzZWN1cml0eSBhbHJlYWR5IGV4aXN0cyovCisJCQkJLyogU3VjaCBzZWN1cml0eSBhbHJlYWR5
IGV4aXN0cy4gKi8KIAkJCQllcnIgPSAwOwogCQkJCWdvdG8gb3V0OwogCQkJfQpAQCAtMjE3MCwx
NyArMjE1NCwxNyBAQCBpbnQgbnRmc19pbnNlcnRfc2VjdXJpdHkoc3RydWN0IG50ZnNfc2JfaW5m
byAqc2JpLAogCQkJYnJlYWs7CiAJfQoKLQkvKiBaZXJvIHVudXNlZCBzcGFjZSAqLworCS8qIFpl
cm8gdW51c2VkIHNwYWNlLiAqLwogCW5leHQgPSBzYmktPnNlY3VyaXR5Lm5leHRfb2ZmICYgKFNl
Y3VyaXR5RGVzY3JpcHRvcnNCbG9ja1NpemUgLSAxKTsKIAlsZWZ0ID0gU2VjdXJpdHlEZXNjcmlw
dG9yc0Jsb2NrU2l6ZSAtIG5leHQ7CgotCS8qIFplcm8gZ2FwIHVudGlsIFNlY3VyaXR5RGVzY3Jp
cHRvcnNCbG9ja1NpemUgKi8KKwkvKiBaZXJvIGdhcCB1bnRpbCBTZWN1cml0eURlc2NyaXB0b3Jz
QmxvY2tTaXplLiAqLwogCWlmIChsZWZ0IDwgbmV3X3NlY19zaXplKSB7Ci0JCS8qIHplcm8gImxl
ZnQiIGJ5dGVzIGZyb20gc2JpLT5zZWN1cml0eS5uZXh0X29mZiAqLworCQkvKiBaZXJvICJsZWZ0
IiBieXRlcyBmcm9tIHNiaS0+c2VjdXJpdHkubmV4dF9vZmYuICovCiAJCXNiaS0+c2VjdXJpdHku
bmV4dF9vZmYgKz0gU2VjdXJpdHlEZXNjcmlwdG9yc0Jsb2NrU2l6ZSArIGxlZnQ7CiAJfQoKLQkv
KiBaZXJvIHRhaWwgb2YgcHJldmlvdXMgc2VjdXJpdHkgKi8KKwkvKiBaZXJvIHRhaWwgb2YgcHJl
dmlvdXMgc2VjdXJpdHkuICovCiAJLy91c2VkID0gbmktPnZmc19pbm9kZS5pX3NpemUgJiAoU2Vj
dXJpdHlEZXNjcmlwdG9yc0Jsb2NrU2l6ZSAtIDEpOwoKIAkvKgpAQCAtMjE5MywxNCArMjE3Nywx
NCBAQCBpbnQgbnRmc19pbnNlcnRfc2VjdXJpdHkoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLAog
CSAqICB6ZXJvICJ0b3plcm8iIGJ5dGVzIGZyb20gc2JpLT5zZWN1cml0eS5uZXh0X29mZiAtIHRv
emVybwogCSAqLwoKLQkvKiBmb3JtYXQgbmV3IHNlY3VyaXR5IGRlc2NyaXB0b3IgKi8KKwkvKiBG
b3JtYXQgbmV3IHNlY3VyaXR5IGRlc2NyaXB0b3IuICovCiAJZF9zZWN1cml0eS0+a2V5Lmhhc2gg
PSBoYXNoX2tleS5oYXNoOwogCWRfc2VjdXJpdHktPmtleS5zZWNfaWQgPSBjcHVfdG9fbGUzMihz
YmktPnNlY3VyaXR5Lm5leHRfaWQpOwogCWRfc2VjdXJpdHktPm9mZiA9IGNwdV90b19sZTY0KHNi
aS0+c2VjdXJpdHkubmV4dF9vZmYpOwogCWRfc2VjdXJpdHktPnNpemUgPSBjcHVfdG9fbGUzMihu
ZXdfc2VjX3NpemUpOwogCW1lbWNweShkX3NlY3VyaXR5ICsgMSwgc2QsIHNpemVfc2QpOwoKLQkv
KiBXcml0ZSBtYWluIFNEUyBidWNrZXQgKi8KKwkvKiBXcml0ZSBtYWluIFNEUyBidWNrZXQuICov
CiAJZXJyID0gbnRmc19zYl93cml0ZV9ydW4oc2JpLCAmbmktPmZpbGUucnVuLCBzYmktPnNlY3Vy
aXR5Lm5leHRfb2ZmLAogCQkJCWRfc2VjdXJpdHksIGFsaWduZWRfc2VjX3NpemUpOwoKQEAgLTIy
MTgsMTMgKzIyMDIsMTMgQEAgaW50IG50ZnNfaW5zZXJ0X3NlY3VyaXR5KHN0cnVjdCBudGZzX3Ni
X2luZm8gKnNiaSwKIAkJCWdvdG8gb3V0OwogCX0KCi0JLyogV3JpdGUgY29weSBTRFMgYnVja2V0
ICovCisJLyogV3JpdGUgY29weSBTRFMgYnVja2V0LiAqLwogCWVyciA9IG50ZnNfc2Jfd3JpdGVf
cnVuKHNiaSwgJm5pLT5maWxlLnJ1biwgbWlycl9vZmYsIGRfc2VjdXJpdHksCiAJCQkJYWxpZ25l
ZF9zZWNfc2l6ZSk7CiAJaWYgKGVycikKIAkJZ290byBvdXQ7CgotCS8qIEZpbGwgU0lJIGVudHJ5
ICovCisJLyogRmlsbCBTSUkgZW50cnkuICovCiAJc2lpX2UuZGUudmlldy5kYXRhX29mZiA9CiAJ
CWNwdV90b19sZTE2KG9mZnNldG9mKHN0cnVjdCBOVEZTX0RFX1NJSSwgc2VjX2hkcikpOwogCXNp
aV9lLmRlLnZpZXcuZGF0YV9zaXplID0gY3B1X3RvX2xlMTYoU0laRU9GX1NFQ1VSSVRZX0hEUik7
CkBAIC0yMjQwLDcgKzIyMjQsNyBAQCBpbnQgbnRmc19pbnNlcnRfc2VjdXJpdHkoc3RydWN0IG50
ZnNfc2JfaW5mbyAqc2JpLAogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKLQkvKiBGaWxsIFNESCBl
bnRyeSAqLworCS8qIEZpbGwgU0RIIGVudHJ5LiAqLwogCXNkaF9lLmRlLnZpZXcuZGF0YV9vZmYg
PQogCQljcHVfdG9fbGUxNihvZmZzZXRvZihzdHJ1Y3QgTlRGU19ERV9TREgsIHNlY19oZHIpKTsK
IAlzZGhfZS5kZS52aWV3LmRhdGFfc2l6ZSA9IGNwdV90b19sZTE2KFNJWkVPRl9TRUNVUklUWV9I
RFIpOwpAQCAtMjI2NSw3ICsyMjQ5LDcgQEAgaW50IG50ZnNfaW5zZXJ0X3NlY3VyaXR5KHN0cnVj
dCBudGZzX3NiX2luZm8gKnNiaSwKIAlpZiAoaW5zZXJ0ZWQpCiAJCSppbnNlcnRlZCA9IHRydWU7
CgotCS8qIFVwZGF0ZSBJZCBhbmQgb2Zmc2V0IGZvciBuZXh0IGRlc2NyaXB0b3IgKi8KKwkvKiBV
cGRhdGUgSWQgYW5kIG9mZnNldCBmb3IgbmV4dCBkZXNjcmlwdG9yLiAqLwogCXNiaS0+c2VjdXJp
dHkubmV4dF9pZCArPSAxOwogCXNiaS0+c2VjdXJpdHkubmV4dF9vZmYgKz0gYWxpZ25lZF9zZWNf
c2l6ZTsKCkBAIC0yMjc5LDkgKzIyNjMsNyBAQCBpbnQgbnRmc19pbnNlcnRfc2VjdXJpdHkoc3Ry
dWN0IG50ZnNfc2JfaW5mbyAqc2JpLAogfQoKIC8qCi0gKiBudGZzX3JlcGFyc2VfaW5pdAotICoK
LSAqIGxvYWRzIGFuZCBwYXJzZSAkRXh0ZW5kLyRSZXBhcnNlCisgKiBudGZzX3JlcGFyc2VfaW5p
dCAtIExvYWQgYW5kIHBhcnNlICRFeHRlbmQvJFJlcGFyc2UuCiAgKi8KIGludCBudGZzX3JlcGFy
c2VfaW5pdChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmkpCiB7CkBAIC0yMzE5LDkgKzIzMDEsNyBA
QCBpbnQgbnRmc19yZXBhcnNlX2luaXQoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpKQogfQoKIC8q
Ci0gKiBudGZzX29iamlkX2luaXQKLSAqCi0gKiBsb2FkcyBhbmQgcGFyc2UgJEV4dGVuZC8kT2Jq
SWQKKyAqIG50ZnNfb2JqaWRfaW5pdCAtIExvYWQgYW5kIHBhcnNlICRFeHRlbmQvJE9iaklkLgog
ICovCiBpbnQgbnRmc19vYmppZF9pbml0KHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSkKIHsKQEAg
LTI0NDMsMTQgKzI0MjMsMTQgQEAgaW50IG50ZnNfcmVtb3ZlX3JlcGFyc2Uoc3RydWN0IG50ZnNf
c2JfaW5mbyAqc2JpLCBfX2xlMzIgcnRhZywKIAkJZ290byBvdXQ7CiAJfQoKLQkvKiAxIC0gZm9y
Y2VzIHRvIGlnbm9yZSBya2V5LlJlcGFyc2VUYWcgd2hlbiBjb21wYXJpbmcga2V5cyAqLworCS8q
IDEgLSBmb3JjZXMgdG8gaWdub3JlIHJrZXkuUmVwYXJzZVRhZyB3aGVuIGNvbXBhcmluZyBrZXlz
LiAqLwogCWVyciA9IGluZHhfZmluZChpbmR4LCBuaSwgcm9vdF9yLCAmcmtleSwgc2l6ZW9mKHJr
ZXkpLCAodm9pZCAqKTEsICZkaWZmLAogCQkJKHN0cnVjdCBOVEZTX0RFICoqKSZyZSwgZm5kKTsK
IAlpZiAoZXJyKQogCQlnb3RvIG91dDsKCiAJaWYgKG1lbWNtcCgmcmUtPmtleS5yZWYsIHJlZiwg
c2l6ZW9mKCpyZWYpKSkgewotCQkvKiBJbXBvc3NpYmxlLiBMb29rcyBsaWtlIHZvbHVtZSBjb3Jy
dXB0PyovCisJCS8qIEltcG9zc2libGUuIExvb2tzIGxpa2Ugdm9sdW1lIGNvcnJ1cHQ/ICovCiAJ
CWdvdG8gb3V0OwogCX0KCkBAIC0yNTIyLDkgKzI1MDIsNyBAQCB2b2lkIG1hcmtfYXNfZnJlZV9l
eChzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIENMU1QgbGNuLCBDTFNUIGxlbiwgYm9vbCB0cmlt
KQogfQoKIC8qCi0gKiBydW5fZGVhbGxvY2F0ZQotICoKLSAqIGRlYWxsb2NhdGUgY2x1c3RlcnMK
KyAqIHJ1bl9kZWFsbG9jYXRlIC0gRGVhbGxvY2F0ZSBjbHVzdGVycy4KICAqLwogaW50IHJ1bl9k
ZWFsbG9jYXRlKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgc3RydWN0IHJ1bnNfdHJlZSAqcnVu
LCBib29sIHRyaW0pCiB7CmRpZmYgLS1naXQgYS9mcy9udGZzMy9pbmRleC5jIGIvZnMvbnRmczMv
aW5kZXguYwppbmRleCA5MzFhNzI0MWVmMDAuLmVkNWIxNjJhYmFjNCAxMDA2NDQKLS0tIGEvZnMv
bnRmczMvaW5kZXguYworKysgYi9mcy9udGZzMy9pbmRleC5jCkBAIC0yNCw5ICsyNCwxMCBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IElOREVYX05BTUVTIHsKIH07CgogLyoKLSAqIGNvbXBhcmUgdHdv
IG5hbWVzIGluIGluZGV4CisgKiBjbXBfZm5hbWVzIC0gQ29tcGFyZSB0d28gbmFtZXMgaW4gaW5k
ZXguCisgKgogICogaWYgbDEgIT0gMAotICogICBib3RoIG5hbWVzIGFyZSBsaXR0bGUgZW5kaWFu
IG9uLWRpc2sgQVRUUl9GSUxFX05BTUUgc3RydWN0cworICogICBCb3RoIG5hbWVzIGFyZSBsaXR0
bGUgZW5kaWFuIG9uLWRpc2sgQVRUUl9GSUxFX05BTUUgc3RydWN0cy4KICAqIGVsc2UKICAqICAg
a2V5MSAtIGNwdV9zdHIsIGtleTIgLSBBVFRSX0ZJTEVfTkFNRQogICovCkBAIC01Miw3ICs1Myw3
IEBAIHN0YXRpYyBpbnQgY21wX2ZuYW1lcyhjb25zdCB2b2lkICprZXkxLCBzaXplX3QgbDEsIGNv
bnN0IHZvaWQgKmtleTIsIHNpemVfdCBsMiwKCiAJCS8qCiAJCSAqIElmIG5hbWVzIGFyZSBlcXVh
bCAoY2FzZSBpbnNlbnNpdGl2ZSkKLQkJICogdHJ5IHRvIGNvbXBhcmUgaXQgY2FzZSBzZW5zaXRp
dmUKKwkJICogdHJ5IHRvIGNvbXBhcmUgaXQgY2FzZSBzZW5zaXRpdmUuCiAJCSAqLwogCQlyZXR1
cm4gbnRmc19jbXBfbmFtZXNfY3B1KGtleTEsIHMyLCBzYmktPnVwY2FzZSwgYm90aF9jYXNlKTsK
IAl9CkBAIC02Miw3ICs2Myw5IEBAIHN0YXRpYyBpbnQgY21wX2ZuYW1lcyhjb25zdCB2b2lkICpr
ZXkxLCBzaXplX3QgbDEsIGNvbnN0IHZvaWQgKmtleTIsIHNpemVfdCBsMiwKIAkJCSAgICAgIHNi
aS0+dXBjYXNlLCBib3RoX2Nhc2UpOwogfQoKLS8qICRTSUkgb2YgJFNlY3VyZSBhbmQgJFEgb2Yg
UXVvdGEgKi8KKy8qCisgKiBjbXBfdWludCAtICRTSUkgb2YgJFNlY3VyZSBhbmQgJFEgb2YgUXVv
dGEKKyAqLwogc3RhdGljIGludCBjbXBfdWludChjb25zdCB2b2lkICprZXkxLCBzaXplX3QgbDEs
IGNvbnN0IHZvaWQgKmtleTIsIHNpemVfdCBsMiwKIAkJICAgIGNvbnN0IHZvaWQgKmRhdGEpCiB7
CkBAIC03OSw3ICs4Miw5IEBAIHN0YXRpYyBpbnQgY21wX3VpbnQoY29uc3Qgdm9pZCAqa2V5MSwg
c2l6ZV90IGwxLCBjb25zdCB2b2lkICprZXkyLCBzaXplX3QgbDIsCiAJcmV0dXJuIDA7CiB9Cgot
LyogJFNESCBvZiAkU2VjdXJlICovCisvKgorICogY21wX3NkaCAtICRTREggb2YgJFNlY3VyZQor
ICovCiBzdGF0aWMgaW50IGNtcF9zZGgoY29uc3Qgdm9pZCAqa2V5MSwgc2l6ZV90IGwxLCBjb25z
dCB2b2lkICprZXkyLCBzaXplX3QgbDIsCiAJCSAgIGNvbnN0IHZvaWQgKmRhdGEpCiB7CkBAIC05
MywxMyArOTgsMTMgQEAgc3RhdGljIGludCBjbXBfc2RoKGNvbnN0IHZvaWQgKmtleTEsIHNpemVf
dCBsMSwgY29uc3Qgdm9pZCAqa2V5Miwgc2l6ZV90IGwyLAogCXQxID0gbGUzMl90b19jcHUoazEt
Pmhhc2gpOwogCXQyID0gbGUzMl90b19jcHUoazItPmhhc2gpOwoKLQkvKiBGaXJzdCB2YWx1ZSBp
cyBhIGhhc2ggdmFsdWUgaXRzZWxmICovCisJLyogRmlyc3QgdmFsdWUgaXMgYSBoYXNoIHZhbHVl
IGl0c2VsZi4gKi8KIAlpZiAodDEgPCB0MikKIAkJcmV0dXJuIC0xOwogCWlmICh0MSA+IHQyKQog
CQlyZXR1cm4gMTsKCi0JLyogU2Vjb25kIHZhbHVlIGlzIHNlY3VyaXR5IElkICovCisJLyogU2Vj
b25kIHZhbHVlIGlzIHNlY3VyaXR5IElkLiAqLwogCWlmIChkYXRhKSB7CiAJCXQxID0gbGUzMl90
b19jcHUoazEtPnNlY19pZCk7CiAJCXQyID0gbGUzMl90b19jcHUoazItPnNlY19pZCk7CkBAIC0x
MTIsNyArMTE3LDkgQEAgc3RhdGljIGludCBjbXBfc2RoKGNvbnN0IHZvaWQgKmtleTEsIHNpemVf
dCBsMSwgY29uc3Qgdm9pZCAqa2V5Miwgc2l6ZV90IGwyLAogCXJldHVybiAwOwogfQoKLS8qICRP
IG9mIE9iaklkIGFuZCAiJFIiIGZvciBSZXBhcnNlICovCisvKgorICogY21wX3VpbnRzIC0gJE8g
b2YgT2JqSWQgYW5kICIkUiIgZm9yIFJlcGFyc2UuCisgKi8KIHN0YXRpYyBpbnQgY21wX3VpbnRz
KGNvbnN0IHZvaWQgKmtleTEsIHNpemVfdCBsMSwgY29uc3Qgdm9pZCAqa2V5Miwgc2l6ZV90IGwy
LAogCQkgICAgIGNvbnN0IHZvaWQgKmRhdGEpCiB7CkBAIC0xMjIsMTIgKzEyOSwxMyBAQCBzdGF0
aWMgaW50IGNtcF91aW50cyhjb25zdCB2b2lkICprZXkxLCBzaXplX3QgbDEsIGNvbnN0IHZvaWQg
KmtleTIsIHNpemVfdCBsMiwKCiAJaWYgKChzaXplX3QpZGF0YSA9PSAxKSB7CiAJCS8qCi0JCSAq
IG5pX2RlbGV0ZV9hbGwgLT4gbnRmc19yZW1vdmVfcmVwYXJzZSAtPiBkZWxldGUgYWxsIHdpdGgg
dGhpcyByZWZlcmVuY2UKKwkJICogbmlfZGVsZXRlX2FsbCAtPiBudGZzX3JlbW92ZV9yZXBhcnNl
IC0+CisJCSAqIGRlbGV0ZSBhbGwgd2l0aCB0aGlzIHJlZmVyZW5jZS4KIAkJICogazEsIGsyIC0g
cG9pbnRlcnMgdG8gUkVQQVJTRV9LRVkKIAkJICovCgotCQlrMSArPSAxOyAvLyBza2lwIFJFUEFS
U0VfS0VZLlJlcGFyc2VUYWcKLQkJazIgKz0gMTsgLy8gc2tpcCBSRVBBUlNFX0tFWS5SZXBhcnNl
VGFnCisJCWsxICs9IDE7IC8vIFNraXAgUkVQQVJTRV9LRVkuUmVwYXJzZVRhZworCQlrMiArPSAx
OyAvLyBTa2lwIFJFUEFSU0VfS0VZLlJlcGFyc2VUYWcKIAkJaWYgKGwyIDw9IHNpemVvZihpbnQp
KQogCQkJcmV0dXJuIC0xOwogCQlsMiAtPSBzaXplb2YoaW50KTsKQEAgLTIyOCw3ICsyMzYsNyBA
QCBzdGF0aWMgaW50IGJtcF9idWZfZ2V0KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksCgogCWRhdGFfc2l6ZSA9IGxlNjRfdG9fY3B1KGItPm5yZXMuZGF0YV9z
aXplKTsKIAlpZiAoV0FSTl9PTihvZmYgPj0gZGF0YV9zaXplKSkgewotCQkvKiBsb29rcyBsaWtl
IGZpbGVzeXN0ZW0gZXJyb3IgKi8KKwkJLyogTG9va3MgbGlrZSBmaWxlc3lzdGVtIGVycm9yLiAq
LwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CgpAQCAtMzAyLDkgKzMxMCw3IEBAIHN0YXRpYyB2b2lk
IGJtcF9idWZfcHV0KHN0cnVjdCBibXBfYnVmICpiYnVmLCBib29sIGRpcnR5KQogfQoKIC8qCi0g
KiBpbmR4X21hcmtfdXNlZAotICoKLSAqIG1hcmtzIHRoZSBiaXQgJ2JpdCcgYXMgdXNlZAorICog
aW5keF9tYXJrX3VzZWQgLSBNYXJrIHRoZSBiaXQgQGJpdCBhcyB1c2VkLgogICovCiBzdGF0aWMg
aW50IGluZHhfbWFya191c2VkKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksCiAJCQkgIHNpemVfdCBiaXQpCkBAIC0zMjQsOSArMzMwLDcgQEAgc3RhdGljIGlu
dCBpbmR4X21hcmtfdXNlZChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLAogfQoKIC8qCi0gKiBpbmR4X21hcmtfZnJlZQotICoKLSAqIHRoZSBiaXQgJ2JpdCcg
YXMgZnJlZQorICogaW5keF9tYXJrX2ZyZWUgLSBNYXJrIHRoZSBiaXQgQGJpdCBhcyBmcmVlLgog
ICovCiBzdGF0aWMgaW50IGluZHhfbWFya19mcmVlKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCQkgIHNpemVfdCBiaXQpCkBAIC0zNDYsOSArMzUwLDEx
IEBAIHN0YXRpYyBpbnQgaW5keF9tYXJrX2ZyZWUoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0
cnVjdCBudGZzX2lub2RlICpuaSwKIH0KCiAvKgotICogaWYgbnRmc19yZWFkZGlyIGNhbGxzIHRo
aXMgZnVuY3Rpb24gKGluZHhfdXNlZF9iaXQgLT4gc2Nhbl9ucmVzX2JpdG1hcCksCi0gKiBpbm9k
ZSBpcyBzaGFyZWQgbG9ja2VkIGFuZCBubyBuaV9sb2NrCi0gKiB1c2Ugcndfc2VtYXBob3JlIGZv
ciByZWFkL3dyaXRlIGFjY2VzcyB0byBiaXRtYXBfcnVuCisgKiBzY2FuX25yZXNfYml0bWFwCisg
KgorICogSWYgbnRmc19yZWFkZGlyIGNhbGxzIHRoaXMgZnVuY3Rpb24gKGluZHhfdXNlZF9iaXQg
LT4gc2Nhbl9ucmVzX2JpdG1hcCksCisgKiBpbm9kZSBpcyBzaGFyZWQgbG9ja2VkIGFuZCBubyBu
aV9sb2NrLgorICogVXNlIHJ3X3NlbWFwaG9yZSBmb3IgcmVhZC93cml0ZSBhY2Nlc3MgdG8gYml0
bWFwX3J1bi4KICAqLwogc3RhdGljIGludCBzY2FuX25yZXNfYml0bWFwKHN0cnVjdCBudGZzX2lu
b2RlICpuaSwgc3RydWN0IEFUVFJJQiAqYml0bWFwLAogCQkJICAgIHN0cnVjdCBudGZzX2luZGV4
ICppbmR4LCBzaXplX3QgZnJvbSwKQEAgLTQ1OSwxMCArNDY1LDkgQEAgc3RhdGljIGJvb2wgc2Nh
bl9mb3JfZnJlZShjb25zdCB1bG9uZyAqYnVmLCB1MzIgYml0LCB1MzIgYml0cywgc2l6ZV90ICpy
ZXQpCiB9CgogLyoKLSAqIGluZHhfZmluZF9mcmVlCisgKiBpbmR4X2ZpbmRfZnJlZSAtIExvb2sg
Zm9yIGZyZWUgYml0LgogICoKLSAqIGxvb2tzIGZvciBmcmVlIGJpdAotICogcmV0dXJucyAtMSBp
ZiBubyBmcmVlIGJpdHMKKyAqIFJldHVybjogLTEgaWYgbm8gZnJlZSBiaXRzLgogICovCiBzdGF0
aWMgaW50IGluZHhfZmluZF9mcmVlKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksCiAJCQkgIHNpemVfdCAqYml0LCBzdHJ1Y3QgQVRUUklCICoqYml0bWFwKQpA
QCAtNTA4LDEwICs1MTMsOSBAQCBzdGF0aWMgYm9vbCBzY2FuX2Zvcl91c2VkKGNvbnN0IHVsb25n
ICpidWYsIHUzMiBiaXQsIHUzMiBiaXRzLCBzaXplX3QgKnJldCkKIH0KCiAvKgotICogaW5keF91
c2VkX2JpdAorICogaW5keF91c2VkX2JpdCAtIExvb2sgZm9yIHVzZWQgYml0LgogICoKLSAqIGxv
b2tzIGZvciB1c2VkIGJpdAotICogcmV0dXJucyBNSU5VU19PTkVfVCBpZiBubyB1c2VkIGJpdHMK
KyAqIFJldHVybjogTUlOVVNfT05FX1QgaWYgbm8gdXNlZCBiaXRzLgogICovCiBpbnQgaW5keF91
c2VkX2JpdChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBz
aXplX3QgKmJpdCkKIHsKQEAgLTU0Nyw5ICs1NTEsOCBAQCBpbnQgaW5keF91c2VkX2JpdChzdHJ1
Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzaXplX3QgKmJpdCkK
IC8qCiAgKiBoZHJfZmluZF9zcGxpdAogICoKLSAqIGZpbmRzIGEgcG9pbnQgYXQgd2hpY2ggdGhl
IGluZGV4IGFsbG9jYXRpb24gYnVmZmVyIHdvdWxkIGxpa2UgdG8KLSAqIGJlIHNwbGl0LgotICog
Tk9URTogVGhpcyBmdW5jdGlvbiBzaG91bGQgbmV2ZXIgcmV0dXJuICdFTkQnIGVudHJ5IE5VTEwg
cmV0dXJucyBvbiBlcnJvcgorICogRmluZCBhIHBvaW50IGF0IHdoaWNoIHRoZSBpbmRleCBhbGxv
Y2F0aW9uIGJ1ZmZlciB3b3VsZCBsaWtlIHRvIGJlIHNwbGl0LgorICogTk9URTogVGhpcyBmdW5j
dGlvbiBzaG91bGQgbmV2ZXIgcmV0dXJuICdFTkQnIGVudHJ5IE5VTEwgcmV0dXJucyBvbiBlcnJv
ci4KICAqLwogc3RhdGljIGNvbnN0IHN0cnVjdCBOVEZTX0RFICpoZHJfZmluZF9zcGxpdChjb25z
dCBzdHJ1Y3QgSU5ERVhfSERSICpoZHIpCiB7CkBAIC01NjYsNyArNTY5LDcgQEAgc3RhdGljIGNv
bnN0IHN0cnVjdCBOVEZTX0RFICpoZHJfZmluZF9zcGxpdChjb25zdCBzdHJ1Y3QgSU5ERVhfSERS
ICpoZHIpCgogCQllID0gQWRkMlB0cihoZHIsIG8pOwoKLQkJLyogV2UgbXVzdCBub3QgcmV0dXJu
IEVORCBlbnRyeSAqLworCQkvKiBXZSBtdXN0IG5vdCByZXR1cm4gRU5EIGVudHJ5LiAqLwogCQlp
ZiAoZGVfaXNfbGFzdChlKSkKIAkJCXJldHVybiBwOwoKQEAgLTU3Nyw5ICs1ODAsOCBAQCBzdGF0
aWMgY29uc3Qgc3RydWN0IE5URlNfREUgKmhkcl9maW5kX3NwbGl0KGNvbnN0IHN0cnVjdCBJTkRF
WF9IRFIgKmhkcikKIH0KCiAvKgotICogaGRyX2luc2VydF9oZWFkCi0gKgotICogaW5zZXJ0cyBz
b21lIGVudHJpZXMgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgYnVmZmVyLgorICogaGRyX2luc2Vy
dF9oZWFkIC0gSW5zZXJ0IHNvbWUgZW50cmllcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBidWZm
ZXIuCisgKgogICogSXQgaXMgdXNlZCB0byBpbnNlcnQgZW50cmllcyBpbnRvIGEgbmV3bHktY3Jl
YXRlZCBidWZmZXIuCiAgKi8KIHN0YXRpYyBjb25zdCBzdHJ1Y3QgTlRGU19ERSAqaGRyX2luc2Vy
dF9oZWFkKHN0cnVjdCBJTkRFWF9IRFIgKmhkciwKQEAgLTY1NCwxNCArNjU2LDE0IEBAIHN0YXRp
YyBib29sIGZuZF9pc19lbXB0eShzdHJ1Y3QgbnRmc19mbmQgKmZuZCkKIH0KCiAvKgotICogaGRy
X2ZpbmRfZQorICogaGRyX2ZpbmRfZSAtIExvY2F0ZSBhbiBlbnRyeSB0aGUgaW5kZXggYnVmZmVy
LgogICoKLSAqIGxvY2F0ZXMgYW4gZW50cnkgdGhlIGluZGV4IGJ1ZmZlci4KICAqIElmIG5vIG1h
dGNoaW5nIGVudHJ5IGlzIGZvdW5kLCBpdCByZXR1cm5zIHRoZSBmaXJzdCBlbnRyeSB3aGljaCBp
cyBncmVhdGVyCiAgKiB0aGFuIHRoZSBkZXNpcmVkIGVudHJ5IElmIHRoZSBzZWFyY2gga2V5IGlz
IGdyZWF0ZXIgdGhhbiBhbGwgdGhlIGVudHJpZXMgdGhlCiAgKiBidWZmZXIsIGl0IHJldHVybnMg
dGhlICdlbmQnIGVudHJ5LiBUaGlzIGZ1bmN0aW9uIGRvZXMgYSBiaW5hcnkgc2VhcmNoIG9mIHRo
ZQotICogY3VycmVudCBpbmRleCBidWZmZXIsIGZvciB0aGUgZmlyc3QgZW50cnkgdGhhdCBpcyA8
PSB0byB0aGUgc2VhcmNoIHZhbHVlCi0gKiBSZXR1cm5zIE5VTEwgaWYgZXJyb3IKKyAqIGN1cnJl
bnQgaW5kZXggYnVmZmVyLCBmb3IgdGhlIGZpcnN0IGVudHJ5IHRoYXQgaXMgPD0gdG8gdGhlIHNl
YXJjaCB2YWx1ZS4KKyAqCisgKiBSZXR1cm46IE5VTEwgaWYgZXJyb3IuCiAgKi8KIHN0YXRpYyBz
dHJ1Y3QgTlRGU19ERSAqaGRyX2ZpbmRfZShjb25zdCBzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwK
IAkJCQkgIGNvbnN0IHN0cnVjdCBJTkRFWF9IRFIgKmhkciwgY29uc3Qgdm9pZCAqa2V5LApAQCAt
Njg1LDcgKzY4Nyw3IEBAIHN0YXRpYyBzdHJ1Y3QgTlRGU19ERSAqaGRyX2ZpbmRfZShjb25zdCBz
dHJ1Y3QgbnRmc19pbmRleCAqaW5keCwKIAlpZiAoIW9mZnMpCiAJCWdvdG8gbmV4dDsKCi0JLyog
dXNlIGJpbmFyeSBzZWFyY2ggYWxnb3JpdGhtICovCisJLyogVXNlIGJpbmFyeSBzZWFyY2ggYWxn
b3JpdGhtLiAqLwogbmV4dDE6CiAJaWYgKG9mZiArIHNpemVvZihzdHJ1Y3QgTlRGU19ERSkgPiBl
bmQpIHsKIAkJZSA9IE5VTEw7CkBAIC03MTMsNyArNzE1LDcgQEAgc3RhdGljIHN0cnVjdCBOVEZT
X0RFICpoZHJfZmluZF9lKGNvbnN0IHN0cnVjdCBudGZzX2luZGV4ICppbmR4LAogCQkJZ290byBu
ZXh0OwogCX0KCi0JLyogU3RvcmUgZW50cnkgdGFibGUgKi8KKwkvKiBTdG9yZSBlbnRyeSB0YWJs
ZS4gKi8KIAlvZmZzW21heF9pZHhdID0gb2ZmOwoKIAlpZiAoIWRlX2lzX2xhc3QoZSkpIHsKQEAg
LTcyMyw4ICs3MjUsOCBAQCBzdGF0aWMgc3RydWN0IE5URlNfREUgKmhkcl9maW5kX2UoY29uc3Qg
c3RydWN0IG50ZnNfaW5kZXggKmluZHgsCiAJfQoKIAkvKgotCSAqIFRhYmxlIG9mIHBvaW50ZXJz
IGlzIGNyZWF0ZWQKLQkgKiBVc2UgYmluYXJ5IHNlYXJjaCB0byBmaW5kIGVudHJ5IHRoYXQgaXMg
PD0gdG8gdGhlIHNlYXJjaCB2YWx1ZQorCSAqIFRhYmxlIG9mIHBvaW50ZXJzIGlzIGNyZWF0ZWQu
CisJICogVXNlIGJpbmFyeSBzZWFyY2ggdG8gZmluZCBlbnRyeSB0aGF0IGlzIDw9IHRvIHRoZSBz
ZWFyY2ggdmFsdWUuCiAJICovCiAJZm5kID0gLTE7CiAJbWluX2lkeCA9IDA7CkBAIC03NzAsOCAr
NzcyLDkgQEAgc3RhdGljIHN0cnVjdCBOVEZTX0RFICpoZHJfZmluZF9lKGNvbnN0IHN0cnVjdCBu
dGZzX2luZGV4ICppbmR4LAoKIG5leHQ6CiAJLyoKLQkgKiBFbnRyaWVzIGluZGV4IGFyZSBzb3J0
ZWQKLQkgKiBFbnVtZXJhdGUgYWxsIGVudHJpZXMgdW50aWwgd2UgZmluZCBlbnRyeSB0aGF0IGlz
IDw9IHRvIHRoZSBzZWFyY2ggdmFsdWUKKwkgKiBFbnRyaWVzIGluZGV4IGFyZSBzb3J0ZWQuCisJ
ICogRW51bWVyYXRlIGFsbCBlbnRyaWVzIHVudGlsIHdlIGZpbmQgZW50cnkKKwkgKiB0aGF0IGlz
IDw9IHRvIHRoZSBzZWFyY2ggdmFsdWUuCiAJICovCiAJaWYgKG9mZiArIHNpemVvZihzdHJ1Y3Qg
TlRGU19ERSkgPiBlbmQpCiAJCXJldHVybiBOVUxMOwpAQCAtODAxLDEwICs4MDQsOSBAQCBzdGF0
aWMgc3RydWN0IE5URlNfREUgKmhkcl9maW5kX2UoY29uc3Qgc3RydWN0IG50ZnNfaW5kZXggKmlu
ZHgsCiB9CgogLyoKLSAqIGhkcl9pbnNlcnRfZGUKKyAqIGhkcl9pbnNlcnRfZGUgLSBJbnNlcnQg
YW4gaW5kZXggZW50cnkgaW50byB0aGUgYnVmZmVyLgogICoKLSAqIGluc2VydHMgYW4gaW5kZXgg
ZW50cnkgaW50byB0aGUgYnVmZmVyLgotICogJ2JlZm9yZScgc2hvdWxkIGJlIGEgcG9pbnRlciBw
cmV2aW91c2x5IHJldHVybmVkIGZyb20gaGRyX2ZpbmRfZQorICogJ2JlZm9yZScgc2hvdWxkIGJl
IGEgcG9pbnRlciBwcmV2aW91c2x5IHJldHVybmVkIGZyb20gaGRyX2ZpbmRfZS4KICAqLwogc3Rh
dGljIHN0cnVjdCBOVEZTX0RFICpoZHJfaW5zZXJ0X2RlKGNvbnN0IHN0cnVjdCBudGZzX2luZGV4
ICppbmR4LAogCQkJCSAgICAgc3RydWN0IElOREVYX0hEUiAqaGRyLApAQCAtODE3LDIwICs4MTks
MjAgQEAgc3RhdGljIHN0cnVjdCBOVEZTX0RFICpoZHJfaW5zZXJ0X2RlKGNvbnN0IHN0cnVjdCBu
dGZzX2luZGV4ICppbmR4LAogCXUzMiB0b3RhbCA9IGxlMzJfdG9fY3B1KGhkci0+dG90YWwpOwog
CXUxNiBkZV9zaXplID0gbGUxNl90b19jcHUoZGUtPnNpemUpOwoKLQkvKiBGaXJzdCwgY2hlY2sg
dG8gc2VlIGlmIHRoZXJlJ3MgZW5vdWdoIHJvb20gKi8KKwkvKiBGaXJzdCwgY2hlY2sgdG8gc2Vl
IGlmIHRoZXJlJ3MgZW5vdWdoIHJvb20uICovCiAJaWYgKHVzZWQgKyBkZV9zaXplID4gdG90YWwp
CiAJCXJldHVybiBOVUxMOwoKIAkvKiBXZSBrbm93IHRoZXJlJ3MgZW5vdWdoIHNwYWNlLCBzbyB3
ZSBrbm93IHdlJ2xsIHN1Y2NlZWQuICovCiAJaWYgKGJlZm9yZSkgewotCQkvKiBDaGVjayB0aGF0
IGJlZm9yZSBpcyBpbnNpZGUgSW5kZXggKi8KKwkJLyogQ2hlY2sgdGhhdCBiZWZvcmUgaXMgaW5z
aWRlIEluZGV4LiAqLwogCQlpZiAob2ZmID49IHVzZWQgfHwgb2ZmIDwgbGUzMl90b19jcHUoaGRy
LT5kZV9vZmYpIHx8CiAJCSAgICBvZmYgKyBsZTE2X3RvX2NwdShiZWZvcmUtPnNpemUpID4gdG90
YWwpIHsKIAkJCXJldHVybiBOVUxMOwogCQl9CiAJCWdvdG8gb2s7CiAJfQotCS8qIE5vIGluc2Vy
dCBwb2ludCBpcyBhcHBsaWVkLiBHZXQgaXQgbWFudWFsbHkgKi8KKwkvKiBObyBpbnNlcnQgcG9p
bnQgaXMgYXBwbGllZC4gR2V0IGl0IG1hbnVhbGx5LiAqLwogCWJlZm9yZSA9IGhkcl9maW5kX2Uo
aW5keCwgaGRyLCBkZSArIDEsIGxlMTZfdG9fY3B1KGRlLT5rZXlfc2l6ZSksIGN0eCwKIAkJCSAg
ICAmZGlmZik7CiAJaWYgKCFiZWZvcmUpCkBAIC04NDgsOSArODUwLDcgQEAgc3RhdGljIHN0cnVj
dCBOVEZTX0RFICpoZHJfaW5zZXJ0X2RlKGNvbnN0IHN0cnVjdCBudGZzX2luZGV4ICppbmR4LAog
fQoKIC8qCi0gKiBoZHJfZGVsZXRlX2RlCi0gKgotICogcmVtb3ZlcyBhbiBlbnRyeSBmcm9tIHRo
ZSBpbmRleCBidWZmZXIKKyAqIGhkcl9kZWxldGVfZGUgLSBSZW1vdmUgYW4gZW50cnkgZnJvbSB0
aGUgaW5kZXggYnVmZmVyLgogICovCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBOVEZTX0RFICpoZHJf
ZGVsZXRlX2RlKHN0cnVjdCBJTkRFWF9IRFIgKmhkciwKIAkJCQkJICAgIHN0cnVjdCBOVEZTX0RF
ICpyZSkKQEAgLTg4Miw3ICs4ODIsNyBAQCBpbnQgaW5keF9pbml0KHN0cnVjdCBudGZzX2luZGV4
ICppbmR4LCBzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksCiAJdTMyIHQzMjsKIAljb25zdCBzdHJ1
Y3QgSU5ERVhfUk9PVCAqcm9vdCA9IHJlc2lkZW50X2RhdGEoYXR0cik7CgotCS8qIENoZWNrIHJv
b3QgZmllbGRzICovCisJLyogQ2hlY2sgcm9vdCBmaWVsZHMuICovCiAJaWYgKCFyb290LT5pbmRl
eF9ibG9ja19jbHN0KQogCQlyZXR1cm4gLUVJTlZBTDsKCkBAIC04OTIsMTMgKzg5MiwxMyBAQCBp
bnQgaW5keF9pbml0KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19zYl9pbmZv
ICpzYmksCiAJdDMyID0gbGUzMl90b19jcHUocm9vdC0+aW5kZXhfYmxvY2tfc2l6ZSk7CiAJaW5k
eC0+aW5kZXhfYml0cyA9IGJsa3NpemVfYml0cyh0MzIpOwoKLQkvKiBDaGVjayBpbmRleCByZWNv
cmQgc2l6ZSAqLworCS8qIENoZWNrIGluZGV4IHJlY29yZCBzaXplLiAqLwogCWlmICh0MzIgPCBz
YmktPmNsdXN0ZXJfc2l6ZSkgewotCQkvKiBpbmRleCByZWNvcmQgaXMgc21hbGxlciB0aGFuIGEg
Y2x1c3RlciwgdXNlIDUxMiBibG9ja3MgKi8KKwkJLyogSW5kZXggcmVjb3JkIGlzIHNtYWxsZXIg
dGhhbiBhIGNsdXN0ZXIsIHVzZSA1MTIgYmxvY2tzLiAqLwogCQlpZiAodDMyICE9IHJvb3QtPmlu
ZGV4X2Jsb2NrX2Nsc3QgKiBTRUNUT1JfU0laRSkKIAkJCXJldHVybiAtRUlOVkFMOwoKLQkJLyog
Q2hlY2sgYWxpZ25tZW50IHRvIGEgY2x1c3RlciAqLworCQkvKiBDaGVjayBhbGlnbm1lbnQgdG8g
YSBjbHVzdGVyLiAqLwogCQlpZiAoKHNiaS0+Y2x1c3Rlcl9zaXplID4+IFNFQ1RPUl9TSElGVCkg
JgogCQkgICAgKHJvb3QtPmluZGV4X2Jsb2NrX2Nsc3QgLSAxKSkgewogCQkJcmV0dXJuIC1FSU5W
QUw7CkBAIC05MDYsNyArOTA2LDcgQEAgaW50IGluZHhfaW5pdChzdHJ1Y3QgbnRmc19pbmRleCAq
aW5keCwgc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLAoKIAkJaW5keC0+dmJuMnZib19iaXRzID0g
U0VDVE9SX1NISUZUOwogCX0gZWxzZSB7Ci0JCS8qIGluZGV4IHJlY29yZCBtdXN0IGJlIGEgbXVs
dGlwbGUgb2YgY2x1c3RlciBzaXplICovCisJCS8qIEluZGV4IHJlY29yZCBtdXN0IGJlIGEgbXVs
dGlwbGUgb2YgY2x1c3RlciBzaXplLiAqLwogCQlpZiAodDMyICE9IHJvb3QtPmluZGV4X2Jsb2Nr
X2Nsc3QgPDwgc2JpLT5jbHVzdGVyX2JpdHMpCiAJCQlyZXR1cm4gLUVJTlZBTDsKCkBAIC05NTEs
NyArOTUxLDcgQEAgc3RhdGljIHN0cnVjdCBpbmR4X25vZGUgKmluZHhfbmV3KHN0cnVjdCBudGZz
X2luZGV4ICppbmR4LAogCQlyZXR1cm4gRVJSX1BUUihlcnIpOwogCX0KCi0JLyogQ3JlYXRlIGhl
YWRlciAqLworCS8qIENyZWF0ZSBoZWFkZXIuICovCiAJaW5kZXgtPnJoZHIuc2lnbiA9IE5URlNf
SU5EWF9TSUdOQVRVUkU7CiAJaW5kZXgtPnJoZHIuZml4X29mZiA9IGNwdV90b19sZTE2KHNpemVv
ZihzdHJ1Y3QgSU5ERVhfQlVGRkVSKSk7IC8vIDB4MjgKIAlmbiA9IChieXRlcyA+PiBTRUNUT1Jf
U0hJRlQpICsgMTsgLy8gOQpAQCAtMTAwOSw5ICsxMDA5LDExIEBAIHN0YXRpYyBpbnQgaW5keF93
cml0ZShzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogfQoK
IC8qCi0gKiBpZiBudGZzX3JlYWRkaXIgY2FsbHMgdGhpcyBmdW5jdGlvbgotICogaW5vZGUgaXMg
c2hhcmVkIGxvY2tlZCBhbmQgbm8gbmlfbG9jawotICogdXNlIHJ3X3NlbWFwaG9yZSBmb3IgcmVh
ZC93cml0ZSBhY2Nlc3MgdG8gYWxsb2NfcnVuCisgKiBpbmR4X3JlYWQKKyAqCisgKiBJZiBudGZz
X3JlYWRkaXIgY2FsbHMgdGhpcyBmdW5jdGlvbgorICogaW5vZGUgaXMgc2hhcmVkIGxvY2tlZCBh
bmQgbm8gbmlfbG9jay4KKyAqIFVzZSByd19zZW1hcGhvcmUgZm9yIHJlYWQvd3JpdGUgYWNjZXNz
IHRvIGFsbG9jX3J1bi4KICAqLwogaW50IGluZHhfcmVhZChzdHJ1Y3QgbnRmc19pbmRleCAqaW5k
eCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBDTFNUIHZibiwKIAkgICAgICBzdHJ1Y3QgaW5keF9u
b2RlICoqbm9kZSkKQEAgLTEwOTMsOSArMTA5NSw3IEBAIGludCBpbmR4X3JlYWQoc3RydWN0IG50
ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwgQ0xTVCB2Ym4sCiB9CgogLyoK
LSAqIGluZHhfZmluZAotICoKLSAqIHNjYW5zIE5URlMgZGlyZWN0b3J5IGZvciBnaXZlbiBlbnRy
eQorICogaW5keF9maW5kIC0gU2NhbiBOVEZTIGRpcmVjdG9yeSBmb3IgZ2l2ZW4gZW50cnkuCiAg
Ki8KIGludCBpbmR4X2ZpbmQoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lu
b2RlICpuaSwKIAkgICAgICBjb25zdCBzdHJ1Y3QgSU5ERVhfUk9PVCAqcm9vdCwgY29uc3Qgdm9p
ZCAqa2V5LCBzaXplX3Qga2V5X2xlbiwKQEAgLTExMTcsNyArMTExNyw3IEBAIGludCBpbmR4X2Zp
bmQoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKCiAJaGRy
ID0gJnJvb3QtPmloZHI7CgotCS8qIENoZWNrIGNhY2hlICovCisJLyogQ2hlY2sgY2FjaGUuICov
CiAJZSA9IGZuZC0+bGV2ZWwgPyBmbmQtPmRlW2ZuZC0+bGV2ZWwgLSAxXSA6IGZuZC0+cm9vdF9k
ZTsKIAlpZiAoZSAmJiAhZGVfaXNfbGFzdChlKSAmJgogCSAgICAhKCppbmR4LT5jbXApKGtleSwg
a2V5X2xlbiwgZSArIDEsIGxlMTZfdG9fY3B1KGUtPmtleV9zaXplKSwgY3R4KSkgewpAQCAtMTEy
NiwxMCArMTEyNiwxMCBAQCBpbnQgaW5keF9maW5kKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCXJldHVybiAwOwogCX0KCi0JLyogU29mdCBmaW5kZXIg
cmVzZXQgKi8KKwkvKiBTb2Z0IGZpbmRlciByZXNldC4gKi8KIAlmbmRfY2xlYXIoZm5kKTsKCi0J
LyogTG9va3VwIGVudHJ5IHRoYXQgaXMgPD0gdG8gdGhlIHNlYXJjaCB2YWx1ZSAqLworCS8qIExv
b2t1cCBlbnRyeSB0aGF0IGlzIDw9IHRvIHRoZSBzZWFyY2ggdmFsdWUuICovCiAJZSA9IGhkcl9m
aW5kX2UoaW5keCwgaGRyLCBrZXksIGtleV9sZW4sIGN0eCwgZGlmZik7CiAJaWYgKCFlKQogCQly
ZXR1cm4gLUVJTlZBTDsKQEAgLTExNTEsNyArMTE1MSw3IEBAIGludCBpbmR4X2ZpbmQoc3RydWN0
IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAkJaWYgKGVycikKIAkJ
CWdvdG8gb3V0OwoKLQkJLyogTG9va3VwIGVudHJ5IHRoYXQgaXMgPD0gdG8gdGhlIHNlYXJjaCB2
YWx1ZSAqLworCQkvKiBMb29rdXAgZW50cnkgdGhhdCBpcyA8PSB0byB0aGUgc2VhcmNoIHZhbHVl
LiAqLwogCQllID0gaGRyX2ZpbmRfZShpbmR4LCAmbm9kZS0+aW5kZXgtPmloZHIsIGtleSwga2V5
X2xlbiwgY3R4LAogCQkJICAgICAgIGRpZmYpOwogCQlpZiAoIWUpIHsKQEAgLTExNzgsNyArMTE3
OCw3IEBAIGludCBpbmR4X2ZpbmRfc29ydChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0
IG50ZnNfaW5vZGUgKm5pLAogCWludCBsZXZlbCA9IGZuZC0+bGV2ZWw7CgogCWlmICghKmVudHJ5
KSB7Ci0JCS8qIFN0YXJ0IGZpbmQgKi8KKwkJLyogU3RhcnQgZmluZC4gKi8KIAkJZSA9IGhkcl9m
aXJzdF9kZSgmcm9vdC0+aWhkcik7CiAJCWlmICghZSkKIAkJCXJldHVybiAwOwpAQCAtMTIwOCw3
ICsxMjA4LDcgQEAgaW50IGluZHhfZmluZF9zb3J0KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBz
dHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCWZuZC0+ZGVbbGV2ZWwgLSAxXSA9IGU7CiAJfQoKLQkv
KiBKdXN0IHRvIGF2b2lkIHRyZWUgY3ljbGUgKi8KKwkvKiBKdXN0IHRvIGF2b2lkIHRyZWUgY3lj
bGUuICovCiBuZXh0X2l0ZXI6CiAJaWYgKGl0ZXIrKyA+PSAxMDAwKQogCQlyZXR1cm4gLUVJTlZB
TDsKQEAgLTEyMjMsMTIgKzEyMjMsMTIgQEAgaW50IGluZHhfZmluZF9zb3J0KHN0cnVjdCBudGZz
X2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCQlyZXR1cm4gLUVJTlZBTDsK
IAkJfQoKLQkJLyogUmVhZCBuZXh0IGxldmVsICovCisJCS8qIFJlYWQgbmV4dCBsZXZlbC4gKi8K
IAkJZXJyID0gaW5keF9yZWFkKGluZHgsIG5pLCBkZV9nZXRfdmJuKGUpLCAmbik7CiAJCWlmIChl
cnIpCiAJCQlyZXR1cm4gZXJyOwoKLQkJLyogVHJ5IG5leHQgbGV2ZWwgKi8KKwkJLyogVHJ5IG5l
eHQgbGV2ZWwuICovCiAJCWUgPSBoZHJfZmlyc3RfZGUoJm4tPmluZGV4LT5paGRyKTsKIAkJaWYg
KCFlKSB7CiAJCQludGZzX2ZyZWUobik7CkBAIC0xMjQ4LDcgKzEyNDgsNyBAQCBpbnQgaW5keF9m
aW5kX3NvcnQoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwK
IAkJaWYgKCFkZV9pc19sYXN0KGUpKQogCQkJZ290byBuZXh0X2l0ZXI7CgotCQkvKiBQb3Agb25l
IGxldmVsICovCisJCS8qIFBvcCBvbmUgbGV2ZWwuICovCiAJCWlmIChuKSB7CiAJCQlmbmRfcG9w
KGZuZCk7CiAJCQludGZzX2ZyZWUobik7CkBAIC0xMjkwLDM1ICsxMjkwLDM1IEBAIGludCBpbmR4
X2ZpbmRfcmF3KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
CiAJQ0xTVCBuZXh0X3ZibjsKIAl1MzIgcmVjb3JkX3NpemUgPSBuaS0+bWkuc2JpLT5yZWNvcmRf
c2l6ZTsKCi0JLyogVXNlIG5vbiBzb3J0ZWQgYWxnb3JpdGhtICovCisJLyogVXNlIG5vbiBzb3J0
ZWQgYWxnb3JpdGhtLiAqLwogCWlmICghKmVudHJ5KSB7Ci0JCS8qIFRoaXMgaXMgdGhlIGZpcnN0
IGNhbGwgKi8KKwkJLyogVGhpcyBpcyB0aGUgZmlyc3QgY2FsbC4gKi8KIAkJZSA9IGhkcl9maXJz
dF9kZSgmcm9vdC0+aWhkcik7CiAJCWlmICghZSkKIAkJCXJldHVybiAwOwogCQlmbmRfY2xlYXIo
Zm5kKTsKIAkJZm5kLT5yb290X2RlID0gZTsKCi0JCS8qIFRoZSBmaXJzdCBjYWxsIHdpdGggc2V0
dXAgb2YgaW5pdGlhbCBlbGVtZW50ICovCisJCS8qIFRoZSBmaXJzdCBjYWxsIHdpdGggc2V0dXAg
b2YgaW5pdGlhbCBlbGVtZW50LiAqLwogCQlpZiAoKm9mZiA+PSByZWNvcmRfc2l6ZSkgewogCQkJ
bmV4dF92Ym4gPSAoKCgqb2ZmIC0gcmVjb3JkX3NpemUpID4+IGluZHgtPmluZGV4X2JpdHMpKQog
CQkJCSAgIDw8IGluZHgtPmlkeDJ2Ym5fYml0czsKLQkJCS8qIGp1bXAgaW5zaWRlIGN5Y2xlICdm
b3InKi8KKwkJCS8qIEp1bXAgaW5zaWRlIGN5Y2xlICdmb3InLiAqLwogCQkJZ290byBuZXh0Owog
CQl9CgotCQkvKiBTdGFydCBlbnVtZXJhdGlvbiBmcm9tIHJvb3QgKi8KKwkJLyogU3RhcnQgZW51
bWVyYXRpb24gZnJvbSByb290LiAqLwogCQkqb2ZmID0gMDsKIAl9IGVsc2UgaWYgKCFmbmQtPnJv
b3RfZGUpCiAJCXJldHVybiAtRUlOVkFMOwoKIAlmb3IgKDs7KSB7Ci0JCS8qIENoZWNrIGlmIGN1
cnJlbnQgZW50cnkgY2FuIGJlIHVzZWQgKi8KKwkJLyogQ2hlY2sgaWYgY3VycmVudCBlbnRyeSBj
YW4gYmUgdXNlZC4gKi8KIAkJaWYgKGUgJiYgbGUxNl90b19jcHUoZS0+c2l6ZSkgPiBzaXplb2Yo
c3RydWN0IE5URlNfREUpKQogCQkJZ290byBvazsKCiAJCWlmICghZm5kLT5sZXZlbCkgewotCQkJ
LyogQ29udGludWUgdG8gZW51bWVyYXRlIHJvb3QgKi8KKwkJCS8qIENvbnRpbnVlIHRvIGVudW1l
cmF0ZSByb290LiAqLwogCQkJaWYgKCFkZV9pc19sYXN0KGZuZC0+cm9vdF9kZSkpIHsKIAkJCQll
ID0gaGRyX25leHRfZGUoJnJvb3QtPmloZHIsIGZuZC0+cm9vdF9kZSk7CiAJCQkJaWYgKCFlKQpA
QCAtMTMyNywxMCArMTMyNywxMCBAQCBpbnQgaW5keF9maW5kX3JhdyhzdHJ1Y3QgbnRmc19pbmRl
eCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQkJCWNvbnRpbnVlOwogCQkJfQoKLQkJ
CS8qIFN0YXJ0IHRvIGVudW1lcmF0ZSBpbmRleGVzIGZyb20gMCAqLworCQkJLyogU3RhcnQgdG8g
ZW51bWVyYXRlIGluZGV4ZXMgZnJvbSAwLiAqLwogCQkJbmV4dF92Ym4gPSAwOwogCQl9IGVsc2Ug
ewotCQkJLyogQ29udGludWUgdG8gZW51bWVyYXRlIGluZGV4ZXMgKi8KKwkJCS8qIENvbnRpbnVl
IHRvIGVudW1lcmF0ZSBpbmRleGVzLiAqLwogCQkJZTIgPSBmbmQtPmRlW2ZuZC0+bGV2ZWwgLSAx
XTsKCiAJCQluID0gZm5kLT5ub2Rlc1tmbmQtPmxldmVsIC0gMV07CkBAIC0xMzQzLDMxICsxMzQz
LDMxIEBAIGludCBpbmR4X2ZpbmRfcmF3KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksCiAJCQkJY29udGludWU7CiAJCQl9CgotCQkJLyogQ29udGludWUgd2l0
aCBuZXh0IGluZGV4ICovCisJCQkvKiBDb250aW51ZSB3aXRoIG5leHQgaW5kZXguICovCiAJCQlu
ZXh0X3ZibiA9IGxlNjRfdG9fY3B1KG4tPmluZGV4LT52Ym4pICsKIAkJCQkgICByb290LT5pbmRl
eF9ibG9ja19jbHN0OwogCQl9CgogbmV4dDoKLQkJLyogUmVsZWFzZSBjdXJyZW50IGluZGV4ICov
CisJCS8qIFJlbGVhc2UgY3VycmVudCBpbmRleC4gKi8KIAkJaWYgKG4pIHsKIAkJCWZuZF9wb3Ao
Zm5kKTsKIAkJCXB1dF9pbmR4X25vZGUobik7CiAJCQluID0gTlVMTDsKIAkJfQoKLQkJLyogU2tp
cCBhbGwgZnJlZSBpbmRleGVzICovCisJCS8qIFNraXAgYWxsIGZyZWUgaW5kZXhlcy4gKi8KIAkJ
Yml0ID0gbmV4dF92Ym4gPj4gaW5keC0+aWR4MnZibl9iaXRzOwogCQllcnIgPSBpbmR4X3VzZWRf
Yml0KGluZHgsIG5pLCAmYml0KTsKIAkJaWYgKGVyciA9PSAtRU5PRU5UIHx8IGJpdCA9PSBNSU5V
U19PTkVfVCkgewotCQkJLyogTm8gdXNlZCBpbmRleGVzICovCisJCQkvKiBObyB1c2VkIGluZGV4
ZXMuICovCiAJCQkqZW50cnkgPSBOVUxMOwogCQkJcmV0dXJuIDA7CiAJCX0KCiAJCW5leHRfdXNl
ZF92Ym4gPSBiaXQgPDwgaW5keC0+aWR4MnZibl9iaXRzOwoKLQkJLyogUmVhZCBidWZmZXIgaW50
byBtZW1vcnkgKi8KKwkJLyogUmVhZCBidWZmZXIgaW50byBtZW1vcnkuICovCiAJCWVyciA9IGlu
ZHhfcmVhZChpbmR4LCBuaSwgbmV4dF91c2VkX3ZibiwgJm4pOwogCQlpZiAoZXJyKQogCQkJcmV0
dXJuIGVycjsKQEAgLTEzNzksMTIgKzEzNzksMTIgQEAgaW50IGluZHhfZmluZF9yYXcoc3RydWN0
IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAl9Cgogb2s6Ci0JLyog
cmV0dXJuIG9mZnNldCB0byByZXN0b3JlIGVudW1lcmF0b3IgaWYgbmVjZXNzYXJ5ICovCisJLyog
UmV0dXJuIG9mZnNldCB0byByZXN0b3JlIGVudW1lcmF0b3IgaWYgbmVjZXNzYXJ5LiAqLwogCWlm
ICghbikgewotCQkvKiAnZScgcG9pbnRzIGluIHJvb3QgKi8KKwkJLyogJ2UnIHBvaW50cyBpbiBy
b290LCAqLwogCQkqb2ZmID0gUHRyT2Zmc2V0KCZyb290LT5paGRyLCBlKTsKIAl9IGVsc2Ugewot
CQkvKiAnZScgcG9pbnRzIGluIGluZGV4ICovCisJCS8qICdlJyBwb2ludHMgaW4gaW5kZXgsICov
CiAJCSpvZmYgPSAobGU2NF90b19jcHUobi0+aW5kZXgtPnZibikgPDwgaW5keC0+dmJuMnZib19i
aXRzKSArCiAJCSAgICAgICByZWNvcmRfc2l6ZSArIFB0ck9mZnNldCgmbi0+aW5kZXgtPmloZHIs
IGUpOwogCX0KQEAgLTEzOTQsOSArMTM5NCw3IEBAIGludCBpbmR4X2ZpbmRfcmF3KHN0cnVjdCBu
dGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiB9CgogLyoKLSAqIGluZHhf
Y3JlYXRlX2FsbG9jYXRlCi0gKgotICogY3JlYXRlICJBbGxvY2F0aW9uICsgQml0bWFwIiBhdHRy
aWJ1dGVzCisgKiBpbmR4X2NyZWF0ZV9hbGxvY2F0ZSAtIENyZWF0ZSAiQWxsb2NhdGlvbiArIEJp
dG1hcCIgYXR0cmlidXRlcy4KICAqLwogc3RhdGljIGludCBpbmR4X2NyZWF0ZV9hbGxvY2F0ZShz
dHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQkJCUNMU1Qg
KnZibikKQEAgLTE0NTMsOSArMTQ1MSw3IEBAIHN0YXRpYyBpbnQgaW5keF9jcmVhdGVfYWxsb2Nh
dGUoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIH0KCiAv
KgotICogaW5keF9hZGRfYWxsb2NhdGUKLSAqCi0gKiBhZGQgY2x1c3RlcnMgdG8gaW5kZXgKKyAq
IGluZHhfYWRkX2FsbG9jYXRlIC0gQWRkIGNsdXN0ZXJzIHRvIGluZGV4LgogICovCiBzdGF0aWMg
aW50IGluZHhfYWRkX2FsbG9jYXRlKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksCiAJCQkgICAgIENMU1QgKnZibikKQEAgLTE0ODgsNyArMTQ4NCw3IEBAIHN0
YXRpYyBpbnQgaW5keF9hZGRfYWxsb2NhdGUoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVj
dCBudGZzX2lub2RlICpuaSwKIAlkYXRhX3NpemUgPSAodTY0KShiaXQgKyAxKSA8PCBpbmR4LT5p
bmRleF9iaXRzOwoKIAlpZiAoYm1wKSB7Ci0JCS8qIEluY3JlYXNlIGJpdG1hcCAqLworCQkvKiBJ
bmNyZWFzZSBiaXRtYXAuICovCiAJCWVyciA9IGF0dHJfc2V0X3NpemUobmksIEFUVFJfQklUTUFQ
LCBpbi0+bmFtZSwgaW4tPm5hbWVfbGVuLAogCQkJCSAgICAmaW5keC0+Yml0bWFwX3J1biwgYml0
bWFwX3NpemUoYml0ICsgMSksCiAJCQkJICAgIE5VTEwsIHRydWUsIE5VTEwpOwpAQCAtMTUwNCw3
ICsxNTAwLDcgQEAgc3RhdGljIGludCBpbmR4X2FkZF9hbGxvY2F0ZShzdHJ1Y3QgbnRmc19pbmRl
eCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQlnb3RvIG91dDE7CiAJfQoKLQkvKiBJ
bmNyZWFzZSBhbGxvY2F0aW9uICovCisJLyogSW5jcmVhc2UgYWxsb2NhdGlvbi4gKi8KIAllcnIg
PSBhdHRyX3NldF9zaXplKG5pLCBBVFRSX0FMTE9DLCBpbi0+bmFtZSwgaW4tPm5hbWVfbGVuLAog
CQkJICAgICZpbmR4LT5hbGxvY19ydW4sIGRhdGFfc2l6ZSwgJmRhdGFfc2l6ZSwgdHJ1ZSwKIAkJ
CSAgICBOVUxMKTsKQEAgLTE1MTksNyArMTUxNSw3IEBAIHN0YXRpYyBpbnQgaW5keF9hZGRfYWxs
b2NhdGUoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAly
ZXR1cm4gMDsKCiBvdXQyOgotCS8qIE9wcyAobm8gc3BhY2U/KSAqLworCS8qIE9wcy4gTm8gc3Bh
Y2U/ICovCiAJYXR0cl9zZXRfc2l6ZShuaSwgQVRUUl9CSVRNQVAsIGluLT5uYW1lLCBpbi0+bmFt
ZV9sZW4sCiAJCSAgICAgICZpbmR4LT5iaXRtYXBfcnVuLCBibXBfc2l6ZSwgJmJtcF9zaXplX3Ys
IGZhbHNlLCBOVUxMKTsKCkBAIC0xNTI4LDkgKzE1MjQsOCBAQCBzdGF0aWMgaW50IGluZHhfYWRk
X2FsbG9jYXRlKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmks
CiB9CgogLyoKLSAqIGluZHhfaW5zZXJ0X2ludG9fcm9vdAorICogaW5keF9pbnNlcnRfaW50b19y
b290IC0gQXR0ZW1wdCB0byBpbnNlcnQgYW4gZW50cnkgaW50byB0aGUgaW5kZXggcm9vdC4KICAq
Ci0gKiBhdHRlbXB0cyB0byBpbnNlcnQgYW4gZW50cnkgaW50byB0aGUgaW5kZXggcm9vdAogICog
SWYgbmVjZXNzYXJ5LCBpdCB3aWxsIHR3aWRkbGUgdGhlIGluZGV4IGItdHJlZS4KICAqLwogc3Rh
dGljIGludCBpbmR4X2luc2VydF9pbnRvX3Jvb3Qoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0
cnVjdCBudGZzX2lub2RlICpuaSwKQEAgLTE1NTQsMTQgKzE1NDksMTUgQEAgc3RhdGljIGludCBp
bmR4X2luc2VydF9pbnRvX3Jvb3Qoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZz
X2lub2RlICpuaSwKIAlpbnQgZHNfcm9vdDsKIAlzdHJ1Y3QgSU5ERVhfUk9PVCAqcm9vdCwgKmFf
cm9vdCA9IE5VTEw7CgotCS8qIEdldCB0aGUgcmVjb3JkIHRoaXMgcm9vdCBwbGFjZWQgaW4gKi8K
KwkvKiBHZXQgdGhlIHJlY29yZCB0aGlzIHJvb3QgcGxhY2VkIGluLiAqLwogCXJvb3QgPSBpbmR4
X2dldF9yb290KGluZHgsIG5pLCAmYXR0ciwgJm1pKTsKIAlpZiAoIXJvb3QpCiAJCWdvdG8gb3V0
OwoKIAkvKgogCSAqIFRyeSBlYXN5IGNhc2U6Ci0JICogaGRyX2luc2VydF9kZSB3aWxsIHN1Y2Nl
ZWQgaWYgdGhlcmUncyByb29tIHRoZSByb290IGZvciB0aGUgbmV3IGVudHJ5LgorCSAqIGhkcl9p
bnNlcnRfZGUgd2lsbCBzdWNjZWVkIGlmIHRoZXJlJ3MKKwkgKiByb29tIHRoZSByb290IGZvciB0
aGUgbmV3IGVudHJ5LgogCSAqLwogCWhkciA9ICZyb290LT5paGRyOwogCXNiaSA9IG5pLT5taS5z
Ymk7CkBAIC0xNTc2LDcgKzE1NzIsNyBAQCBzdGF0aWMgaW50IGluZHhfaW5zZXJ0X2ludG9fcm9v
dChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCWRzX3Jv
b3QgPSBuZXdfZGVfc2l6ZSArIGhkcl91c2VkIC0gaGRyX3RvdGFsOwoKIAlpZiAodXNlZCArIGRz
X3Jvb3QgPCBzYmktPm1heF9ieXRlc19wZXJfYXR0cikgewotCQkvKiBtYWtlIGEgcm9vbSBmb3Ig
bmV3IGVsZW1lbnRzICovCisJCS8qIE1ha2UgYSByb29tIGZvciBuZXcgZWxlbWVudHMuICovCiAJ
CW1pX3Jlc2l6ZV9hdHRyKG1pLCBhdHRyLCBkc19yb290KTsKIAkJaGRyLT50b3RhbCA9IGNwdV90
b19sZTMyKGhkcl90b3RhbCArIGRzX3Jvb3QpOwogCQllID0gaGRyX2luc2VydF9kZShpbmR4LCBo
ZHIsIG5ld19kZSwgcm9vdF9kZSwgY3R4KTsKQEAgLTE1ODcsMTggKzE1ODMsMjEgQEAgc3RhdGlj
IGludCBpbmR4X2luc2VydF9pbnRvX3Jvb3Qoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVj
dCBudGZzX2lub2RlICpuaSwKIAkJcmV0dXJuIDA7CiAJfQoKLQkvKiBNYWtlIGEgY29weSBvZiBy
b290IGF0dHJpYnV0ZSB0byByZXN0b3JlIGlmIGVycm9yICovCisJLyogTWFrZSBhIGNvcHkgb2Yg
cm9vdCBhdHRyaWJ1dGUgdG8gcmVzdG9yZSBpZiBlcnJvci4gKi8KIAlhX3Jvb3QgPSBudGZzX21l
bWR1cChhdHRyLCBhc2l6ZSk7CiAJaWYgKCFhX3Jvb3QpIHsKIAkJZXJyID0gLUVOT01FTTsKIAkJ
Z290byBvdXQ7CiAJfQoKLQkvKiBjb3B5IGFsbCB0aGUgbm9uLWVuZCBlbnRyaWVzIGZyb20gdGhl
IGluZGV4IHJvb3QgdG8gdGhlIG5ldyBidWZmZXIuKi8KKwkvKgorCSAqIENvcHkgYWxsIHRoZSBu
b24tZW5kIGVudHJpZXMgZnJvbSB0aGUKKwkgKiBpbmRleCByb290IHRvIHRoZSBuZXcgYnVmZmVy
LgorCSAqLwogCXRvX21vdmUgPSAwOwogCWUwID0gaGRyX2ZpcnN0X2RlKGhkcik7CgotCS8qIENh
bGN1bGF0ZSB0aGUgc2l6ZSB0byBjb3B5ICovCisJLyogQ2FsY3VsYXRlIHRoZSBzaXplIHRvIGNv
cHkuICovCiAJZm9yIChlID0gZTA7OyBlID0gaGRyX25leHRfZGUoaGRyLCBlKSkgewogCQlpZiAo
IWUpIHsKIAkJCWVyciA9IC1FSU5WQUw7CkBAIC0xNjMyLDcgKzE2MzEsNyBAQCBzdGF0aWMgaW50
IGluZHhfaW5zZXJ0X2ludG9fcm9vdChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50
ZnNfaW5vZGUgKm5pLAogCWRzX3Jvb3QgPSBuZXdfcm9vdF9zaXplIC0gcm9vdF9zaXplOwoKIAlp
ZiAoZHNfcm9vdCA+IDAgJiYgdXNlZCArIGRzX3Jvb3QgPiBzYmktPm1heF9ieXRlc19wZXJfYXR0
cikgewotCQkvKiBtYWtlIHJvb3QgZXh0ZXJuYWwgKi8KKwkJLyogTWFrZSByb290IGV4dGVybmFs
LiAqLwogCQllcnIgPSAtRU9QTk9UU1VQUDsKIAkJZ290byBvdXQ7CiAJfQpAQCAtMTY0MCw3ICsx
NjM5LDcgQEAgc3RhdGljIGludCBpbmR4X2luc2VydF9pbnRvX3Jvb3Qoc3RydWN0IG50ZnNfaW5k
ZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAlpZiAoZHNfcm9vdCkKIAkJbWlfcmVz
aXplX2F0dHIobWksIGF0dHIsIGRzX3Jvb3QpOwoKLQkvKiBGaWxsIGZpcnN0IGVudHJ5ICh2Y24g
d2lsbCBiZSBzZXQgbGF0ZXIpICovCisJLyogRmlsbCBmaXJzdCBlbnRyeSAodmNuIHdpbGwgYmUg
c2V0IGxhdGVyKS4gKi8KIAllID0gKHN0cnVjdCBOVEZTX0RFICopKHJvb3QgKyAxKTsKIAltZW1z
ZXQoZSwgMCwgc2l6ZW9mKHN0cnVjdCBOVEZTX0RFKSk7CiAJZS0+c2l6ZSA9IGNwdV90b19sZTE2
KHNpemVvZihzdHJ1Y3QgTlRGU19ERSkgKyBzaXplb2YodTY0KSk7CkBAIC0xNjUzLDI2ICsxNjUy
LDI2IEBAIHN0YXRpYyBpbnQgaW5keF9pbnNlcnRfaW50b19yb290KHN0cnVjdCBudGZzX2luZGV4
ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJZm5kLT5yb290X2RlID0gaGRyX2ZpcnN0
X2RlKGhkcik7CiAJbWktPmRpcnR5ID0gdHJ1ZTsKCi0JLyogQ3JlYXRlIGFsbG9jIGFuZCBiaXRt
YXAgYXR0cmlidXRlcyAoaWYgbm90KSAqLworCS8qIENyZWF0ZSBhbGxvYyBhbmQgYml0bWFwIGF0
dHJpYnV0ZXMgKGlmIG5vdCkuICovCiAJZXJyID0gcnVuX2lzX2VtcHR5KCZpbmR4LT5hbGxvY19y
dW4pCiAJCSAgICAgID8gaW5keF9jcmVhdGVfYWxsb2NhdGUoaW5keCwgbmksICZuZXdfdmJuKQog
CQkgICAgICA6IGluZHhfYWRkX2FsbG9jYXRlKGluZHgsIG5pLCAmbmV3X3Zibik7CgotCS8qIGxh
eW91dCBvZiByZWNvcmQgbWF5IGJlIGNoYW5nZWQsIHNvIHJlc2NhbiByb290ICovCisJLyogTGF5
b3V0IG9mIHJlY29yZCBtYXkgYmUgY2hhbmdlZCwgc28gcmVzY2FuIHJvb3QuICovCiAJcm9vdCA9
IGluZHhfZ2V0X3Jvb3QoaW5keCwgbmksICZhdHRyLCAmbWkpOwogCWlmICghcm9vdCkgewotCQkv
KiBidWc/ICovCisJCS8qIEJ1Zz8gKi8KIAkJbnRmc19zZXRfc3RhdGUoc2JpLCBOVEZTX0RJUlRZ
X0VSUk9SKTsKIAkJZXJyID0gLUVJTlZBTDsKIAkJZ290byBvdXQxOwogCX0KCiAJaWYgKGVycikg
ewotCQkvKiByZXN0b3JlIHJvb3QgKi8KKwkJLyogUmVzdG9yZSByb290LiAqLwogCQlpZiAobWlf
cmVzaXplX2F0dHIobWksIGF0dHIsIC1kc19yb290KSkKIAkJCW1lbWNweShhdHRyLCBhX3Jvb3Qs
IGFzaXplKTsKIAkJZWxzZSB7Ci0JCQkvKiBidWc/ICovCisJCQkvKiBCdWc/ICovCiAJCQludGZz
X3NldF9zdGF0ZShzYmksIE5URlNfRElSVFlfRVJST1IpOwogCQl9CiAJCWdvdG8gb3V0MTsKQEAg
LTE2ODIsNyArMTY4MSw3IEBAIHN0YXRpYyBpbnQgaW5keF9pbnNlcnRfaW50b19yb290KHN0cnVj
dCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJKihfX2xlNjQgKiko
ZSArIDEpID0gY3B1X3RvX2xlNjQobmV3X3Zibik7CiAJbWktPmRpcnR5ID0gdHJ1ZTsKCi0JLyog
bm93IHdlIGNhbiBjcmVhdGUvZm9ybWF0IHRoZSBuZXcgYnVmZmVyIGFuZCBjb3B5IHRoZSBlbnRy
aWVzIGludG8gKi8KKwkvKiBOb3cgd2UgY2FuIGNyZWF0ZS9mb3JtYXQgdGhlIG5ldyBidWZmZXIg
YW5kIGNvcHkgdGhlIGVudHJpZXMgaW50by4gKi8KIAluID0gaW5keF9uZXcoaW5keCwgbmksIG5l
d192Ym4sIHN1Yl92Ym4pOwogCWlmIChJU19FUlIobikpIHsKIAkJZXJyID0gUFRSX0VSUihuKTsK
QEAgLTE2OTMsMTkgKzE2OTIsMTkgQEAgc3RhdGljIGludCBpbmR4X2luc2VydF9pbnRvX3Jvb3Qo
c3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAloZHJfdXNl
ZCA9IGxlMzJfdG9fY3B1KGhkci0+dXNlZCk7CiAJaGRyX3RvdGFsID0gbGUzMl90b19jcHUoaGRy
LT50b3RhbCk7CgotCS8qIENvcHkgcm9vdCBlbnRyaWVzIGludG8gbmV3IGJ1ZmZlciAqLworCS8q
IENvcHkgcm9vdCBlbnRyaWVzIGludG8gbmV3IGJ1ZmZlci4gKi8KIAloZHJfaW5zZXJ0X2hlYWQo
aGRyLCByZSwgdG9fbW92ZSk7CgotCS8qIFVwZGF0ZSBiaXRtYXAgYXR0cmlidXRlICovCisJLyog
VXBkYXRlIGJpdG1hcCBhdHRyaWJ1dGUuICovCiAJaW5keF9tYXJrX3VzZWQoaW5keCwgbmksIG5l
d192Ym4gPj4gaW5keC0+aWR4MnZibl9iaXRzKTsKCi0JLyogQ2hlY2sgaWYgd2UgY2FuIGluc2Vy
dCBuZXcgZW50cnkgbmV3IGluZGV4IGJ1ZmZlciAqLworCS8qIENoZWNrIGlmIHdlIGNhbiBpbnNl
cnQgbmV3IGVudHJ5IG5ldyBpbmRleCBidWZmZXIuICovCiAJaWYgKGhkcl91c2VkICsgbmV3X2Rl
X3NpemUgPiBoZHJfdG90YWwpIHsKIAkJLyoKLQkJICogVGhpcyBvY2N1cnMgaWYgbWZ0IHJlY29y
ZCBpcyB0aGUgc2FtZSBvciBiaWdnZXIgdGhhbiBpbmRleAorCQkgKiBUaGlzIG9jY3VycyBpZiBN
RlQgcmVjb3JkIGlzIHRoZSBzYW1lIG9yIGJpZ2dlciB0aGFuIGluZGV4CiAJCSAqIGJ1ZmZlci4g
TW92ZSBhbGwgcm9vdCBuZXcgaW5kZXggYW5kIGhhdmUgbm8gc3BhY2UgdG8gYWRkCi0JCSAqIG5l
dyBlbnRyeSBjbGFzc2ljIGNhc2Ugd2hlbiBtZnQgcmVjb3JkIGlzIDFLIGFuZCBpbmRleAotCQkg
KiBidWZmZXIgNEsgdGhlIHByb2JsZW0gc2hvdWxkIG5vdCBvY2N1cnMKKwkJICogbmV3IGVudHJ5
IGNsYXNzaWMgY2FzZSB3aGVuIE1GVCByZWNvcmQgaXMgMUsgYW5kIGluZGV4CisJCSAqIGJ1ZmZl
ciA0SyB0aGUgcHJvYmxlbSBzaG91bGQgbm90IG9jY3Vycy4KIAkJICovCiAJCW50ZnNfZnJlZShy
ZSk7CiAJCWluZHhfd3JpdGUoaW5keCwgbmksIG4sIDApOwpAQCAtMTcxNyw4ICsxNzE2LDggQEAg
c3RhdGljIGludCBpbmR4X2luc2VydF9pbnRvX3Jvb3Qoc3RydWN0IG50ZnNfaW5kZXggKmluZHgs
IHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAl9CgogCS8qCi0JICogTm93IHJvb3QgaXMgYSBwYXJl
bnQgZm9yIG5ldyBpbmRleCBidWZmZXIKLQkgKiBJbnNlcnQgTmV3RW50cnkgYSBuZXcgYnVmZmVy
CisJICogTm93IHJvb3QgaXMgYSBwYXJlbnQgZm9yIG5ldyBpbmRleCBidWZmZXIuCisJICogSW5z
ZXJ0IE5ld0VudHJ5IGEgbmV3IGJ1ZmZlci4KIAkgKi8KIAllID0gaGRyX2luc2VydF9kZShpbmR4
LCBoZHIsIG5ld19kZSwgTlVMTCwgY3R4KTsKIAlpZiAoIWUpIHsKQEAgLTE3MjcsNyArMTcyNiw3
IEBAIHN0YXRpYyBpbnQgaW5keF9pbnNlcnRfaW50b19yb290KHN0cnVjdCBudGZzX2luZGV4ICpp
bmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJfQogCWZuZF9wdXNoKGZuZCwgbiwgZSk7Cgot
CS8qIEp1c3Qgd3JpdGUgdXBkYXRlcyBpbmRleCBpbnRvIGRpc2sgKi8KKwkvKiBKdXN0IHdyaXRl
IHVwZGF0ZXMgaW5kZXggaW50byBkaXNrLiAqLwogCWluZHhfd3JpdGUoaW5keCwgbmksIG4sIDAp
OwoKIAluID0gTlVMTDsKQEAgLTE3NDUsNyArMTc0NCw3IEBAIHN0YXRpYyBpbnQgaW5keF9pbnNl
cnRfaW50b19yb290KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAq
bmksCiAvKgogICogaW5keF9pbnNlcnRfaW50b19idWZmZXIKICAqCi0gKiBhdHRlbXB0cyB0byBp
bnNlcnQgYW4gZW50cnkgaW50byBhbiBJbmRleCBBbGxvY2F0aW9uIEJ1ZmZlci4KKyAqIEF0dGVt
cHQgdG8gaW5zZXJ0IGFuIGVudHJ5IGludG8gYW4gSW5kZXggQWxsb2NhdGlvbiBCdWZmZXIuCiAg
KiBJZiBuZWNlc3NhcnksIGl0IHdpbGwgc3BsaXQgdGhlIGJ1ZmZlci4KICAqLwogc3RhdGljIGlu
dApAQCAtMTc2NSwxMiArMTc2NCwxMiBAQCBpbmR4X2luc2VydF9pbnRvX2J1ZmZlcihzdHJ1Y3Qg
bnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCV9fbGU2NCB0X3Zibiwg
KnN1Yl92Ym47CiAJdTE2IHNwX3NpemU7CgotCS8qIFRyeSB0aGUgbW9zdCBlYXN5IGNhc2UgKi8K
KwkvKiBUcnkgdGhlIG1vc3QgZWFzeSBjYXNlLiAqLwogCWUgPSBmbmQtPmxldmVsIC0gMSA9PSBs
ZXZlbCA/IGZuZC0+ZGVbbGV2ZWxdIDogTlVMTDsKIAllID0gaGRyX2luc2VydF9kZShpbmR4LCBo
ZHIxLCBuZXdfZGUsIGUsIGN0eCk7CiAJZm5kLT5kZVtsZXZlbF0gPSBlOwogCWlmIChlKSB7Ci0J
CS8qIEp1c3Qgd3JpdGUgdXBkYXRlZCBpbmRleCBpbnRvIGRpc2sgKi8KKwkJLyogSnVzdCB3cml0
ZSB1cGRhdGVkIGluZGV4IGludG8gZGlzay4gKi8KIAkJaW5keF93cml0ZShpbmR4LCBuaSwgbjEs
IDApOwogCQlyZXR1cm4gMDsKIAl9CkBAIC0xODEwLDcgKzE4MDksNyBAQCBpbmR4X2luc2VydF9p
bnRvX2J1ZmZlcihzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5p
LAogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwoKLQkvKiBBbGxvY2F0ZSBhbmQgZm9ybWF0IG1lbW9y
eSBhIG5ldyBpbmRleCBidWZmZXIgKi8KKwkvKiBBbGxvY2F0ZSBhbmQgZm9ybWF0IG1lbW9yeSBh
IG5ldyBpbmRleCBidWZmZXIuICovCiAJbjIgPSBpbmR4X25ldyhpbmR4LCBuaSwgbmV3X3Zibiwg
c3ViX3Zibik7CiAJaWYgKElTX0VSUihuMikpIHsKIAkJZXJyID0gUFRSX0VSUihuMik7CkBAIC0x
ODE5LDIwICsxODE4LDIzIEBAIGluZHhfaW5zZXJ0X2ludG9fYnVmZmVyKHN0cnVjdCBudGZzX2lu
ZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCgogCWhkcjIgPSAmbjItPmluZGV4LT5p
aGRyOwoKLQkvKiBNYWtlIHNwIGEgcGFyZW50IGZvciBuZXcgYnVmZmVyICovCisJLyogTWFrZSBz
cCBhIHBhcmVudCBmb3IgbmV3IGJ1ZmZlci4gKi8KIAlkZV9zZXRfdmJuKHVwX2UsIG5ld192Ym4p
OwoKLQkvKiBjb3B5IGFsbCB0aGUgZW50cmllcyA8PSBzcCBpbnRvIHRoZSBuZXcgYnVmZmVyLiAq
LworCS8qIENvcHkgYWxsIHRoZSBlbnRyaWVzIDw9IHNwIGludG8gdGhlIG5ldyBidWZmZXIuICov
CiAJZGVfdCA9IGhkcl9maXJzdF9kZShoZHIxKTsKIAl0b19jb3B5ID0gUHRyT2Zmc2V0KGRlX3Qs
IHNwKTsKIAloZHJfaW5zZXJ0X2hlYWQoaGRyMiwgZGVfdCwgdG9fY29weSk7CgotCS8qIHJlbW92
ZSBhbGwgZW50cmllcyAoc3AgaW5jbHVkaW5nKSBmcm9tIGhkcjEgKi8KKwkvKiBSZW1vdmUgYWxs
IGVudHJpZXMgKHNwIGluY2x1ZGluZykgZnJvbSBoZHIxLiAqLwogCXVzZWQgPSBsZTMyX3RvX2Nw
dShoZHIxLT51c2VkKSAtIHRvX2NvcHkgLSBzcF9zaXplOwogCW1lbW1vdmUoZGVfdCwgQWRkMlB0
cihzcCwgc3Bfc2l6ZSksIHVzZWQgLSBsZTMyX3RvX2NwdShoZHIxLT5kZV9vZmYpKTsKIAloZHIx
LT51c2VkID0gY3B1X3RvX2xlMzIodXNlZCk7CgotCS8qIEluc2VydCBuZXcgZW50cnkgaW50byBs
ZWZ0IG9yIHJpZ2h0IGJ1ZmZlciAoZGVwZW5kaW5nIG9uIHNwIDw9PiBuZXdfZGUpICovCisJLyoK
KwkgKiBJbnNlcnQgbmV3IGVudHJ5IGludG8gbGVmdCBvciByaWdodCBidWZmZXIKKwkgKiAoZGVw
ZW5kaW5nIG9uIHNwIDw9PiBuZXdfZGUpLgorCSAqLwogCWhkcl9pbnNlcnRfZGUoaW5keCwKIAkJ
ICAgICAgKCppbmR4LT5jbXApKG5ld19kZSArIDEsIGxlMTZfdG9fY3B1KG5ld19kZS0+a2V5X3Np
emUpLAogCQkJCSAgIHVwX2UgKyAxLCBsZTE2X3RvX2NwdSh1cF9lLT5rZXlfc2l6ZSksCkBAIC0x
ODQ5LDE4ICsxODUxLDE4IEBAIGluZHhfaW5zZXJ0X2ludG9fYnVmZmVyKHN0cnVjdCBudGZzX2lu
ZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJcHV0X2luZHhfbm9kZShuMik7Cgog
CS8qCi0JICogd2UndmUgZmluaXNoZWQgc3BsaXR0aW5nIGV2ZXJ5Ym9keSwgc28gd2UgYXJlIHJl
YWR5IHRvCisJICogV2UndmUgZmluaXNoZWQgc3BsaXR0aW5nIGV2ZXJ5Ym9keSwgc28gd2UgYXJl
IHJlYWR5IHRvCiAJICogaW5zZXJ0IHRoZSBwcm9tb3RlZCBlbnRyeSBpbnRvIHRoZSBwYXJlbnQu
CiAJICovCiAJaWYgKCFsZXZlbCkgewotCQkvKiBJbnNlcnQgaW4gcm9vdCAqLworCQkvKiBJbnNl
cnQgaW4gcm9vdC4gKi8KIAkJZXJyID0gaW5keF9pbnNlcnRfaW50b19yb290KGluZHgsIG5pLCB1
cF9lLCBOVUxMLCBjdHgsIGZuZCk7CiAJCWlmIChlcnIpCiAJCQlnb3RvIG91dDsKIAl9IGVsc2Ug
ewogCQkvKgotCQkgKiBUaGUgdGFyZ2V0IGJ1ZmZlcidzIHBhcmVudCBpcyBhbm90aGVyIGluZGV4
IGJ1ZmZlcgotCQkgKiBUT0RPOiBSZW1vdmUgcmVjdXJzaW9uCisJCSAqIFRoZSB0YXJnZXQgYnVm
ZmVyJ3MgcGFyZW50IGlzIGFub3RoZXIgaW5kZXggYnVmZmVyLgorCQkgKiBUT0RPOiBSZW1vdmUg
cmVjdXJzaW9uLgogCQkgKi8KIAkJZXJyID0gaW5keF9pbnNlcnRfaW50b19idWZmZXIoaW5keCwg
bmksIHJvb3QsIHVwX2UsIGN0eCwKIAkJCQkJICAgICAgbGV2ZWwgLSAxLCBmbmQpOwpAQCAtMTg3
NSw5ICsxODc3LDcgQEAgaW5keF9pbnNlcnRfaW50b19idWZmZXIoc3RydWN0IG50ZnNfaW5kZXgg
KmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIH0KCiAvKgotICogaW5keF9pbnNlcnRfZW50
cnkKLSAqCi0gKiBpbnNlcnRzIG5ldyBlbnRyeSBpbnRvIGluZGV4CisgKiBpbmR4X2luc2VydF9l
bnRyeSAtIEluc2VydCBuZXcgZW50cnkgaW50byBpbmRleC4KICAqLwogaW50IGluZHhfaW5zZXJ0
X2VudHJ5KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJ
CSAgICAgIGNvbnN0IHN0cnVjdCBOVEZTX0RFICpuZXdfZGUsIGNvbnN0IHZvaWQgKmN0eCwKQEAg
LTE5MDUsNyArMTkwNSwxMCBAQCBpbnQgaW5keF9pbnNlcnRfZW50cnkoc3RydWN0IG50ZnNfaW5k
ZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAl9CgogCWlmIChmbmRfaXNfZW1wdHko
Zm5kKSkgewotCQkvKiBGaW5kIHRoZSBzcG90IHRoZSB0cmVlIHdoZXJlIHdlIHdhbnQgdG8gaW5z
ZXJ0IHRoZSBuZXcgZW50cnkuICovCisJCS8qCisJCSAqIEZpbmQgdGhlIHNwb3QgdGhlIHRyZWUg
d2hlcmUgd2Ugd2FudCB0bworCQkgKiBpbnNlcnQgdGhlIG5ldyBlbnRyeS4KKwkJICovCiAJCWVy
ciA9IGluZHhfZmluZChpbmR4LCBuaSwgcm9vdCwgbmV3X2RlICsgMSwKIAkJCQlsZTE2X3RvX2Nw
dShuZXdfZGUtPmtleV9zaXplKSwgY3R4LCAmZGlmZiwgJmUsCiAJCQkJZm5kKTsKQEAgLTE5MTks
MTMgKzE5MjIsMTggQEAgaW50IGluZHhfaW5zZXJ0X2VudHJ5KHN0cnVjdCBudGZzX2luZGV4ICpp
bmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJfQoKIAlpZiAoIWZuZC0+bGV2ZWwpIHsKLQkJ
LyogVGhlIHJvb3QgaXMgYWxzbyBhIGxlYWYsIHNvIHdlJ2xsIGluc2VydCB0aGUgbmV3IGVudHJ5
IGludG8gaXQuICovCisJCS8qCisJCSAqIFRoZSByb290IGlzIGFsc28gYSBsZWFmLCBzbyB3ZSds
bCBpbnNlcnQgdGhlCisJCSAqIG5ldyBlbnRyeSBpbnRvIGl0LgorCQkgKi8KIAkJZXJyID0gaW5k
eF9pbnNlcnRfaW50b19yb290KGluZHgsIG5pLCBuZXdfZGUsIGZuZC0+cm9vdF9kZSwgY3R4LAog
CQkJCQkgICAgZm5kKTsKIAkJaWYgKGVycikKIAkJCWdvdG8gb3V0OwogCX0gZWxzZSB7Ci0JCS8q
IGZvdW5kIGEgbGVhZiBidWZmZXIsIHNvIHdlJ2xsIGluc2VydCB0aGUgbmV3IGVudHJ5IGludG8g
aXQuKi8KKwkJLyoKKwkJICogRm91bmQgYSBsZWFmIGJ1ZmZlciwgc28gd2UnbGwgaW5zZXJ0IHRo
ZSBuZXcgZW50cnkgaW50byBpdC4KKwkJICovCiAJCWVyciA9IGluZHhfaW5zZXJ0X2ludG9fYnVm
ZmVyKGluZHgsIG5pLCByb290LCBuZXdfZGUsIGN0eCwKIAkJCQkJICAgICAgZm5kLT5sZXZlbCAt
IDEsIGZuZCk7CiAJCWlmIChlcnIpCkBAIC0xOTM5LDkgKzE5NDcsNyBAQCBpbnQgaW5keF9pbnNl
cnRfZW50cnkoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwK
IH0KCiAvKgotICogaW5keF9maW5kX2J1ZmZlcgotICoKLSAqIGxvY2F0ZXMgYSBidWZmZXIgdGhl
IHRyZWUuCisgKiBpbmR4X2ZpbmRfYnVmZmVyIC0gTG9jYXRlIGEgYnVmZmVyIGZyb20gdGhlIHRy
ZWUuCiAgKi8KIHN0YXRpYyBzdHJ1Y3QgaW5keF9ub2RlICppbmR4X2ZpbmRfYnVmZmVyKHN0cnVj
dCBudGZzX2luZGV4ICppbmR4LAogCQkJCQkgIHN0cnVjdCBudGZzX2lub2RlICpuaSwKQEAgLTE5
NTMsNyArMTk1OSw3IEBAIHN0YXRpYyBzdHJ1Y3QgaW5keF9ub2RlICppbmR4X2ZpbmRfYnVmZmVy
KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LAogCXN0cnVjdCBpbmR4X25vZGUgKnI7CiAJY29uc3Qg
c3RydWN0IElOREVYX0hEUiAqaGRyID0gbiA/ICZuLT5pbmRleC0+aWhkciA6ICZyb290LT5paGRy
OwoKLQkvKiBTdGVwIDE6IFNjYW4gb25lIGxldmVsICovCisJLyogU3RlcCAxOiBTY2FuIG9uZSBs
ZXZlbC4gKi8KIAlmb3IgKGUgPSBoZHJfZmlyc3RfZGUoaGRyKTs7IGUgPSBoZHJfbmV4dF9kZSho
ZHIsIGUpKSB7CiAJCWlmICghZSkKIAkJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwpAQCAtMTk2
NSw3ICsxOTcxLDcgQEAgc3RhdGljIHN0cnVjdCBpbmR4X25vZGUgKmluZHhfZmluZF9idWZmZXIo
c3RydWN0IG50ZnNfaW5kZXggKmluZHgsCiAJCQlicmVhazsKIAl9CgotCS8qIFN0ZXAyOiBEbyBy
ZWN1cnNpb24gKi8KKwkvKiBTdGVwMjogRG8gcmVjdXJzaW9uLiAqLwogCWUgPSBBZGQyUHRyKGhk
ciwgbGUzMl90b19jcHUoaGRyLT5kZV9vZmYpKTsKIAlmb3IgKDs7KSB7CiAJCWlmIChkZV9oYXNf
dmNuX2V4KGUpKSB7CkBAIC0xOTg4LDkgKzE5OTQsNyBAQCBzdGF0aWMgc3RydWN0IGluZHhfbm9k
ZSAqaW5keF9maW5kX2J1ZmZlcihzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwKIH0KCiAvKgotICog
aW5keF9zaHJpbmsKLSAqCi0gKiBkZWFsbG9jYXRlcyB1bnVzZWQgdGFpbCBpbmRleGVzCisgKiBp
bmR4X3NocmluayAtIERlYWxsb2NhdGUgdW51c2VkIHRhaWwgaW5kZXhlcy4KICAqLwogc3RhdGlj
IGludCBpbmR4X3NocmluayhzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLAogCQkgICAgICAgc2l6ZV90IGJpdCkKQEAgLTIwNjcsNyArMjA3MSw3IEBAIHN0YXRp
YyBpbnQgaW5keF9mcmVlX2NoaWxkcmVuKHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksCiAJCXJldHVybiBlcnI7CgogCWhkciA9ICZuLT5pbmRleC0+aWhkcjsK
LQkvKiBGaXJzdCwgcmVjdXJzZSBpbnRvIHRoZSBjaGlsZHJlbiwgaWYgYW55LiovCisJLyogRmly
c3QsIHJlY3Vyc2UgaW50byB0aGUgY2hpbGRyZW4sIGlmIGFueS4gKi8KIAlpZiAoaGRyX2hhc19z
dWJub2RlKGhkcikpIHsKIAkJZm9yIChlID0gaGRyX2ZpcnN0X2RlKGhkcik7IGU7IGUgPSBoZHJf
bmV4dF9kZShoZHIsIGUpKSB7CiAJCQlpbmR4X2ZyZWVfY2hpbGRyZW4oaW5keCwgbmksIGUsIGZh
bHNlKTsKQEAgLTIwNzksNyArMjA4Myw5IEBAIHN0YXRpYyBpbnQgaW5keF9mcmVlX2NoaWxkcmVu
KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJcHV0X2lu
ZHhfbm9kZShuKTsKCiAJaSA9IHZibiA+PiBpbmR4LT5pZHgydmJuX2JpdHM7Ci0JLyogV2UndmUg
Z290dGVuIHJpZCBvZiB0aGUgY2hpbGRyZW47IGFkZCB0aGlzIGJ1ZmZlciB0byB0aGUgZnJlZSBs
aXN0LiAqLworCS8qCisJICogV2UndmUgZ290dGVuIHJpZCBvZiB0aGUgY2hpbGRyZW47IGFkZCB0
aGlzIGJ1ZmZlciB0byB0aGUgZnJlZSBsaXN0LgorCSAqLwogCWluZHhfbWFya19mcmVlKGluZHgs
IG5pLCBpKTsKCiAJaWYgKCF0cmltKQpAQCAtMjA4Nyw4ICsyMDkzLDggQEAgc3RhdGljIGludCBp
bmR4X2ZyZWVfY2hpbGRyZW4oc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lu
b2RlICpuaSwKCiAJLyoKIAkgKiBJZiB0aGVyZSBhcmUgbm8gdXNlZCBpbmRleGVzIGFmdGVyIGN1
cnJlbnQgZnJlZSBpbmRleAotCSAqIHRoZW4gd2UgY2FuIHRydW5jYXRlIGFsbG9jYXRpb24gYW5k
IGJpdG1hcAotCSAqIFVzZSBiaXRtYXAgdG8gZXN0aW1hdGUgdGhlIGNhc2UKKwkgKiB0aGVuIHdl
IGNhbiB0cnVuY2F0ZSBhbGxvY2F0aW9uIGFuZCBiaXRtYXAuCisJICogVXNlIGJpdG1hcCB0byBl
c3RpbWF0ZSB0aGUgY2FzZS4KIAkgKi8KIAlpbmR4X3NocmluayhpbmR4LCBuaSwgaSArIDEpOwog
CXJldHVybiAwOwpAQCAtMjA5Nyw5ICsyMTAzLDkgQEAgc3RhdGljIGludCBpbmR4X2ZyZWVfY2hp
bGRyZW4oc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIC8q
CiAgKiBpbmR4X2dldF9lbnRyeV90b19yZXBsYWNlCiAgKgotICogZmluZHMgYSByZXBsYWNlbWVu
dCBlbnRyeSBmb3IgYSBkZWxldGVkIGVudHJ5Ci0gKiBhbHdheXMgcmV0dXJucyBhIG5vZGUgZW50
cnk6Ci0gKiBOVEZTX0lFX0hBU19TVUJOT0RFUyBpcyBzZXQgdGhlIGZsYWdzIGFuZCB0aGUgc2l6
ZSBpbmNsdWRlcyB0aGUgc3ViX3ZjbgorICogRmluZCBhIHJlcGxhY2VtZW50IGVudHJ5IGZvciBh
IGRlbGV0ZWQgZW50cnkuCisgKiBBbHdheXMgcmV0dXJucyBhIG5vZGUgZW50cnk6CisgKiBOVEZT
X0lFX0hBU19TVUJOT0RFUyBpcyBzZXQgdGhlIGZsYWdzIGFuZCB0aGUgc2l6ZSBpbmNsdWRlcyB0
aGUgc3ViX3Zjbi4KICAqLwogc3RhdGljIGludCBpbmR4X2dldF9lbnRyeV90b19yZXBsYWNlKHN0
cnVjdCBudGZzX2luZGV4ICppbmR4LAogCQkJCSAgICAgc3RydWN0IG50ZnNfaW5vZGUgKm5pLApA
QCAtMjExNiw3ICsyMTIyLDcgQEAgc3RhdGljIGludCBpbmR4X2dldF9lbnRyeV90b19yZXBsYWNl
KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LAoKIAkqZGVfdG9fcmVwbGFjZSA9IE5VTEw7CgotCS8q
IEZpbmQgZmlyc3QgbGVhZiBlbnRyeSBkb3duIGZyb20gZGVfbmV4dCAqLworCS8qIEZpbmQgZmly
c3QgbGVhZiBlbnRyeSBkb3duIGZyb20gZGVfbmV4dC4gKi8KIAl2Ym4gPSBkZV9nZXRfdmJuKGRl
X25leHQpOwogCWZvciAoOzspIHsKIAkJbiA9IE5VTEw7CkBAIC0yMTI5LDggKzIxMzUsOCBAQCBz
dGF0aWMgaW50IGluZHhfZ2V0X2VudHJ5X3RvX3JlcGxhY2Uoc3RydWN0IG50ZnNfaW5kZXggKmlu
ZHgsCgogCQlpZiAoIWRlX2lzX2xhc3QoZSkpIHsKIAkJCS8qCi0JCQkgKiBUaGlzIGJ1ZmZlciBp
cyBub24tZW1wdHksIHNvIGl0cyBmaXJzdCBlbnRyeSBjb3VsZCBiZSB1c2VkIGFzIHRoZQotCQkJ
ICogcmVwbGFjZW1lbnQgZW50cnkuCisJCQkgKiBUaGlzIGJ1ZmZlciBpcyBub24tZW1wdHksIHNv
IGl0cyBmaXJzdCBlbnRyeQorCQkJICogY291bGQgYmUgdXNlZCBhcyB0aGUgcmVwbGFjZW1lbnQg
ZW50cnkuCiAJCQkgKi8KIAkJCWxldmVsID0gZm5kLT5sZXZlbCAtIDE7CiAJCX0KQEAgLTIxMzgs
NyArMjE0NCw3IEBAIHN0YXRpYyBpbnQgaW5keF9nZXRfZW50cnlfdG9fcmVwbGFjZShzdHJ1Y3Qg
bnRmc19pbmRleCAqaW5keCwKIAkJaWYgKCFkZV9oYXNfdmNuKGUpKQogCQkJYnJlYWs7CgotCQkv
KiBUaGlzIGJ1ZmZlciBpcyBhIG5vZGUuIENvbnRpbnVlIHRvIGdvIGRvd24gKi8KKwkJLyogVGhp
cyBidWZmZXIgaXMgYSBub2RlLiBDb250aW51ZSB0byBnbyBkb3duLiAqLwogCQl2Ym4gPSBkZV9n
ZXRfdmJuKGUpOwogCX0KCkBAIC0yMTU5LDE1ICsyMTY1LDE2IEBAIHN0YXRpYyBpbnQgaW5keF9n
ZXRfZW50cnlfdG9fcmVwbGFjZShzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwKCiAJaWYgKCFkZV9o
YXNfdmNuKHJlKSkgewogCQkvKgotCQkgKiBUaGUgcmVwbGFjZW1lbnQgZW50cnkgd2UgZm91bmQg
ZG9lc24ndCBoYXZlIGEgc3ViX3Zjbi4gaW5jcmVhc2UgaXRzIHNpemUKLQkJICogdG8gaG9sZCBv
bmUuCisJCSAqIFRoZSByZXBsYWNlbWVudCBlbnRyeSB3ZSBmb3VuZCBkb2Vzbid0IGhhdmUgYSBz
dWJfdmNuLgorCQkgKiBpbmNyZWFzZSBpdHMgc2l6ZSB0byBob2xkIG9uZS4KIAkJICovCiAJCWxl
MTZfYWRkX2NwdSgmcmUtPnNpemUsIHNpemVvZih1NjQpKTsKIAkJcmUtPmZsYWdzIHw9IE5URlNf
SUVfSEFTX1NVQk5PREVTOwogCX0gZWxzZSB7CiAJCS8qCi0JCSAqIFRoZSByZXBsYWNlbWVudCBl
bnRyeSB3ZSBmb3VuZCB3YXMgYSBub2RlIGVudHJ5LCB3aGljaCBtZWFucyB0aGF0IGFsbAotCQkg
KiBpdHMgY2hpbGQgYnVmZmVycyBhcmUgZW1wdHkuIFJldHVybiB0aGVtIHRvIHRoZSBmcmVlIHBv
b2wuCisJCSAqIFRoZSByZXBsYWNlbWVudCBlbnRyeSB3ZSBmb3VuZCB3YXMgYSBub2RlIGVudHJ5
LCB3aGljaAorCQkgKiBtZWFucyB0aGF0IGFsbCBpdHMgY2hpbGQgYnVmZmVycyBhcmUgZW1wdHku
IFJldHVybiB0aGVtCisJCSAqIHRvIHRoZSBmcmVlIHBvb2wuCiAJCSAqLwogCQlpbmR4X2ZyZWVf
Y2hpbGRyZW4oaW5keCwgbmksIHRlLCB0cnVlKTsKIAl9CkBAIC0yMTkyLDkgKzIxOTksNyBAQCBz
dGF0aWMgaW50IGluZHhfZ2V0X2VudHJ5X3RvX3JlcGxhY2Uoc3RydWN0IG50ZnNfaW5kZXggKmlu
ZHgsCiB9CgogLyoKLSAqIGluZHhfZGVsZXRlX2VudHJ5Ci0gKgotICogZGVsZXRlcyBhbiBlbnRy
eSBmcm9tIHRoZSBpbmRleC4KKyAqIGluZHhfZGVsZXRlX2VudHJ5IC0gRGVsZXRlIGFuIGVudHJ5
IGZyb20gdGhlIGluZGV4LgogICovCiBpbnQgaW5keF9kZWxldGVfZW50cnkoc3RydWN0IG50ZnNf
aW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAkJICAgICAgY29uc3Qgdm9pZCAq
a2V5LCB1MzIga2V5X2xlbiwgY29uc3Qgdm9pZCAqY3R4KQpAQCAtMjI1OCwxMyArMjI2MywxMyBA
QCBpbnQgaW5keF9kZWxldGVfZW50cnkoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBu
dGZzX2lub2RlICpuaSwKIAllX3NpemUgPSBsZTE2X3RvX2NwdShlLT5zaXplKTsKCiAJaWYgKCFk
ZV9oYXNfdmNuX2V4KGUpKSB7Ci0JCS8qIFRoZSBlbnRyeSB0byBkZWxldGUgaXMgYSBsZWFmLCBz
byB3ZSBjYW4ganVzdCByaXAgaXQgb3V0ICovCisJCS8qIFRoZSBlbnRyeSB0byBkZWxldGUgaXMg
YSBsZWFmLCBzbyB3ZSBjYW4ganVzdCByaXAgaXQgb3V0LiAqLwogCQloZHJfZGVsZXRlX2RlKGhk
ciwgZSk7CgogCQlpZiAoIWxldmVsKSB7CiAJCQloZHItPnRvdGFsID0gaGRyLT51c2VkOwoKLQkJ
CS8qIFNocmluayByZXNpZGVudCByb290IGF0dHJpYnV0ZSAqLworCQkJLyogU2hyaW5rIHJlc2lk
ZW50IHJvb3QgYXR0cmlidXRlLiAqLwogCQkJbWlfcmVzaXplX2F0dHIobWksIGF0dHIsIDAgLSBl
X3NpemUpOwogCQkJZ290byBvdXQ7CiAJCX0KQEAgLTIzMDcsOSArMjMxMiwxMCBAQCBpbnQgaW5k
eF9kZWxldGVfZW50cnkoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2Rl
ICpuaSwKIAkJfSBlbHNlIHsKIAkJCS8qCiAJCQkgKiBUaGVyZSBpcyBubyByZXBsYWNlbWVudCBm
b3IgdGhlIGN1cnJlbnQgZW50cnkuCi0JCQkgKiBUaGlzIG1lYW5zIHRoYXQgdGhlIHN1YnRyZWUg
cm9vdGVkIGF0IGl0cyBub2RlIGlzIGVtcHR5LAotCQkJICogYW5kIGNhbiBiZSBkZWxldGVkLCB3
aGljaCB0dXJuIG1lYW5zIHRoYXQgdGhlIG5vZGUgY2FuCi0JCQkgKiBqdXN0IGluaGVyaXQgdGhl
IGRlbGV0ZWQgZW50cnkgc3ViX3ZjbgorCQkJICogVGhpcyBtZWFucyB0aGF0IHRoZSBzdWJ0cmVl
IHJvb3RlZCBhdCBpdHMgbm9kZQorCQkJICogaXMgZW1wdHksIGFuZCBjYW4gYmUgZGVsZXRlZCwg
d2hpY2ggdHVybiBtZWFucworCQkJICogdGhhdCB0aGUgbm9kZSBjYW4ganVzdCBpbmhlcml0IHRo
ZSBkZWxldGVkCisJCQkgKiBlbnRyeSBzdWJfdmNuLgogCQkJICovCiAJCQlpbmR4X2ZyZWVfY2hp
bGRyZW4oaW5keCwgbmksIG5leHQsIHRydWUpOwoKQEAgLTIzMjAsMTcgKzIzMjYsMTcgQEAgaW50
IGluZHhfZGVsZXRlX2VudHJ5KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19p
bm9kZSAqbmksCiAJCQl9IGVsc2UgewogCQkJCWhkci0+dG90YWwgPSBoZHItPnVzZWQ7CgotCQkJ
CS8qIFNocmluayByZXNpZGVudCByb290IGF0dHJpYnV0ZSAqLworCQkJCS8qIFNocmluayByZXNp
ZGVudCByb290IGF0dHJpYnV0ZS4gKi8KIAkJCQltaV9yZXNpemVfYXR0cihtaSwgYXR0ciwgMCAt
IGVfc2l6ZSk7CiAJCQl9CiAJCX0KIAl9CgotCS8qIERlbGV0ZSBhIGJyYW5jaCBvZiB0cmVlICov
CisJLyogRGVsZXRlIGEgYnJhbmNoIG9mIHRyZWUuICovCiAJaWYgKCFmbmQyIHx8ICFmbmQyLT5s
ZXZlbCkKIAkJZ290byBvdXQ7CgotCS8qIFJlaW5pdCByb290ICdjYXVzZSBpdCBjYW4gYmUgY2hh
bmdlZCAqLworCS8qIFJlaW5pdCByb290ICdjYXVzZSBpdCBjYW4gYmUgY2hhbmdlZC4gKi8KIAly
b290ID0gaW5keF9nZXRfcm9vdChpbmR4LCBuaSwgJmF0dHIsICZtaSk7CiAJaWYgKCFyb290KSB7
CiAJCWVyciA9IC1FSU5WQUw7CkBAIC0yMzQ0LDcgKzIzNTAsNyBAQCBpbnQgaW5keF9kZWxldGVf
ZW50cnkoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKCiAJ
aGRyID0gbGV2ZWwgPyAmZm5kLT5ub2Rlc1tsZXZlbCAtIDFdLT5pbmRleC0+aWhkciA6ICZyb290
LT5paGRyOwoKLQkvKiBTY2FuIGN1cnJlbnQgbGV2ZWwgKi8KKwkvKiBTY2FuIGN1cnJlbnQgbGV2
ZWwuICovCiAJZm9yIChlID0gaGRyX2ZpcnN0X2RlKGhkcik7OyBlID0gaGRyX25leHRfZGUoaGRy
LCBlKSkgewogCQlpZiAoIWUpIHsKIAkJCWVyciA9IC1FSU5WQUw7CkBAIC0yMzYxLDcgKzIzNjcs
NyBAQCBpbnQgaW5keF9kZWxldGVfZW50cnkoc3RydWN0IG50ZnNfaW5kZXggKmluZHgsIHN0cnVj
dCBudGZzX2lub2RlICpuaSwKIAl9CgogCWlmICghZSkgewotCQkvKiBEbyBzbG93IHNlYXJjaCBm
cm9tIHJvb3QgKi8KKwkJLyogRG8gc2xvdyBzZWFyY2ggZnJvbSByb290LiAqLwogCQlzdHJ1Y3Qg
aW5keF9ub2RlICppbjsKCiAJCWZuZF9jbGVhcihmbmQpOwpAQCAtMjM3Niw3ICsyMzgyLDcgQEAg
aW50IGluZHhfZGVsZXRlX2VudHJ5KHN0cnVjdCBudGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRm
c19pbm9kZSAqbmksCiAJCQlmbmRfcHVzaChmbmQsIGluLCBOVUxMKTsKIAl9CgotCS8qIE1lcmdl
IGZuZDIgLT4gZm5kICovCisJLyogTWVyZ2UgZm5kMiAtPiBmbmQuICovCiAJZm9yIChsZXZlbCA9
IDA7IGxldmVsIDwgZm5kMi0+bGV2ZWw7IGxldmVsKyspIHsKIAkJZm5kX3B1c2goZm5kLCBmbmQy
LT5ub2Rlc1tsZXZlbF0sIGZuZDItPmRlW2xldmVsXSk7CiAJCWZuZDItPm5vZGVzW2xldmVsXSA9
IE5VTEw7CkBAIC0yNDIyLDggKzI0MjgsOCBAQCBpbnQgaW5keF9kZWxldGVfZW50cnkoc3RydWN0
IG50ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKCiAJCWlmIChzdWJfdmJu
ICE9IGRlX2dldF92Ym5fbGUoZSkpIHsKIAkJCS8qCi0JCQkgKiBEaWRuJ3QgZmluZCB0aGUgcGFy
ZW50IGVudHJ5LCBhbHRob3VnaCB0aGlzIGJ1ZmZlciBpcyB0aGUgcGFyZW50IHRyYWlsLgotCQkJ
ICogU29tZXRoaW5nIGlzIGNvcnJ1cHQuCisJCQkgKiBEaWRuJ3QgZmluZCB0aGUgcGFyZW50IGVu
dHJ5LCBhbHRob3VnaCB0aGlzIGJ1ZmZlcgorCQkJICogaXMgdGhlIHBhcmVudCB0cmFpbC4gU29t
ZXRoaW5nIGlzIGNvcnJ1cHQuCiAJCQkgKi8KIAkJCWVyciA9IC1FSU5WQUw7CiAJCQlnb3RvIG91
dDsKQEAgLTI0MzEsMTEgKzI0MzcsMTEgQEAgaW50IGluZHhfZGVsZXRlX2VudHJ5KHN0cnVjdCBu
dGZzX2luZGV4ICppbmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCgogCQlpZiAoZGVfaXNfbGFz
dChlKSkgewogCQkJLyoKLQkJCSAqIFNpbmNlIHdlIGNhbid0IHJlbW92ZSB0aGUgZW5kIGVudHJ5
LCB3ZSdsbCByZW1vdmUgaXRzCi0JCQkgKiBwcmVkZWNlc3NvciBpbnN0ZWFkLiBUaGlzIG1lYW5z
IHdlIGhhdmUgdG8gdHJhbnNmZXIgdGhlCi0JCQkgKiBwcmVkZWNlc3NvcidzIHN1Yl92Y24gdG8g
dGhlIGVuZCBlbnRyeS4KLQkJCSAqIE5vdGU6IHRoYXQgdGhpcyBpbmRleCBibG9jayBpcyBub3Qg
ZW1wdHksIHNvIHRoZQotCQkJICogcHJlZGVjZXNzb3IgbXVzdCBleGlzdAorCQkJICogU2luY2Ug
d2UgY2FuJ3QgcmVtb3ZlIHRoZSBlbmQgZW50cnksIHdlJ2xsIHJlbW92ZQorCQkJICogaXRzIHBy
ZWRlY2Vzc29yIGluc3RlYWQuIFRoaXMgbWVhbnMgd2UgaGF2ZSB0bworCQkJICogdHJhbnNmZXIg
dGhlIHByZWRlY2Vzc29yJ3Mgc3ViX3ZjbiB0byB0aGUgZW5kIGVudHJ5LgorCQkJICogTm90ZTog
VGhpcyBpbmRleCBibG9jayBpcyBub3QgZW1wdHksIHNvIHRoZQorCQkJICogcHJlZGVjZXNzb3Ig
bXVzdCBleGlzdC4KIAkJCSAqLwogCQkJaWYgKCFwcmV2KSB7CiAJCQkJZXJyID0gLUVJTlZBTDsK
QEAgLTI0NTMsOSArMjQ1OSw5IEBAIGludCBpbmR4X2RlbGV0ZV9lbnRyeShzdHJ1Y3QgbnRmc19p
bmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQl9CgogCQkvKgotCQkgKiBDb3B5
IHRoZSBjdXJyZW50IGVudHJ5IGludG8gYSB0ZW1wb3JhcnkgYnVmZmVyIChzdHJpcHBpbmcgb2Zm
IGl0cwotCQkgKiBkb3duLXBvaW50ZXIsIGlmIGFueSkgYW5kIGRlbGV0ZSBpdCBmcm9tIHRoZSBj
dXJyZW50IGJ1ZmZlciBvciByb290LAotCQkgKiBhcyBhcHByb3ByaWF0ZS4KKwkJICogQ29weSB0
aGUgY3VycmVudCBlbnRyeSBpbnRvIGEgdGVtcG9yYXJ5IGJ1ZmZlciAoc3RyaXBwaW5nCisJCSAq
IG9mZiBpdHMgZG93bi1wb2ludGVyLCBpZiBhbnkpIGFuZCBkZWxldGUgaXQgZnJvbSB0aGUgY3Vy
cmVudAorCQkgKiBidWZmZXIgb3Igcm9vdCwgYXMgYXBwcm9wcmlhdGUuCiAJCSAqLwogCQllX3Np
emUgPSBsZTE2X3RvX2NwdShlLT5zaXplKTsKIAkJbWUgPSBudGZzX21lbWR1cChlLCBlX3NpemUp
OwpAQCAtMjQ3NSwxNCArMjQ4MSwxNCBAQCBpbnQgaW5keF9kZWxldGVfZW50cnkoc3RydWN0IG50
ZnNfaW5kZXggKmluZHgsIHN0cnVjdCBudGZzX2lub2RlICpuaSwKIAkJCWxldmVsID0gMDsKIAkJ
CWhkci0+dG90YWwgPSBoZHItPnVzZWQ7CgotCQkJLyogU2hyaW5rIHJlc2lkZW50IHJvb3QgYXR0
cmlidXRlICovCisJCQkvKiBTaHJpbmsgcmVzaWRlbnQgcm9vdCBhdHRyaWJ1dGUuICovCiAJCQlt
aV9yZXNpemVfYXR0cihtaSwgYXR0ciwgMCAtIGVfc2l6ZSk7CiAJCX0gZWxzZSB7CiAJCQlpbmR4
X3dyaXRlKGluZHgsIG5pLCBuMmQsIDApOwogCQkJbGV2ZWwgPSBsZXZlbDI7CiAJCX0KCi0JCS8q
IE1hcmsgdW51c2VkIGJ1ZmZlcnMgYXMgZnJlZSAqLworCQkvKiBNYXJrIHVudXNlZCBidWZmZXJz
IGFzIGZyZWUuICovCiAJCXRyaW1fYml0ID0gLTE7CiAJCWZvciAoOyBsZXZlbCA8IGZuZC0+bGV2
ZWw7IGxldmVsKyspIHsKIAkJCWliID0gZm5kLT5ub2Rlc1tsZXZlbF0tPmluZGV4OwpAQCAtMjUx
Myw4ICsyNTE5LDggQEAgaW50IGluZHhfZGVsZXRlX2VudHJ5KHN0cnVjdCBudGZzX2luZGV4ICpp
bmR4LCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJfSBlbHNlIHsKIAkJLyoKIAkJICogVGhpcyB0
cmVlIG5lZWRzIHRvIGJlIGNvbGxhcHNlZCBkb3duIHRvIGFuIGVtcHR5IHJvb3QuCi0JCSAqIFJl
Y3JlYXRlIHRoZSBpbmRleCByb290IGFzIGFuIGVtcHR5IGxlYWYgYW5kIGZyZWUgYWxsIHRoZSBi
aXRzIHRoZQotCQkgKiBpbmRleCBhbGxvY2F0aW9uIGJpdG1hcC4KKwkJICogUmVjcmVhdGUgdGhl
IGluZGV4IHJvb3QgYXMgYW4gZW1wdHkgbGVhZiBhbmQgZnJlZSBhbGwKKwkJICogdGhlIGJpdHMg
dGhlIGluZGV4IGFsbG9jYXRpb24gYml0bWFwLgogCQkgKi8KIAkJZm5kX2NsZWFyKGZuZCk7CiAJ
CWZuZF9jbGVhcihmbmQyKTsKQEAgLTI1NDksNyArMjU1NSw3IEBAIGludCBpbmR4X2RlbGV0ZV9l
bnRyeShzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLAogCQkJ
Z290byBvdXQ7CiAJCX0KCi0JCS8qIEZpbGwgZmlyc3QgZW50cnkgKi8KKwkJLyogRmlsbCBmaXJz
dCBlbnRyeS4gKi8KIAkJZSA9IChzdHJ1Y3QgTlRGU19ERSAqKShyb290ICsgMSk7CiAJCWUtPnJl
Zi5sb3cgPSAwOwogCQllLT5yZWYuaGlnaCA9IDA7CkBAIC0yNTk4LDcgKzI2MDQsNyBAQCBpbnQg
aW5keF91cGRhdGVfZHVwKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IG50ZnNfc2JfaW5m
byAqc2JpLAogCQlnb3RvIG91dDsKIAl9CgotCS8qIEZpbmQgZW50cmllcyB0cmVlIGFuZCBvbiBk
aXNrICovCisJLyogRmluZCBlbnRyaWVzIHRyZWUgYW5kIG9uIGRpc2suICovCiAJZXJyID0gaW5k
eF9maW5kKGluZHgsIG5pLCByb290LCBmbmFtZSwgZm5hbWVfZnVsbF9zaXplKGZuYW1lKSwgc2Jp
LAogCQkJJmRpZmYsICZlLCBmbmQpOwogCWlmIChlcnIpCkBAIC0yNjE3LDcgKzI2MjMsNyBAQCBp
bnQgaW5keF91cGRhdGVfZHVwKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IG50ZnNfc2Jf
aW5mbyAqc2JpLAogCWVfZm5hbWUgPSAoc3RydWN0IEFUVFJfRklMRV9OQU1FICopKGUgKyAxKTsK
CiAJaWYgKCFtZW1jbXAoJmVfZm5hbWUtPmR1cCwgZHVwLCBzaXplb2YoKmR1cCkpKSB7Ci0JCS8q
IG5vdGhpbmcgdG8gdXBkYXRlIGluIGluZGV4ISBUcnkgdG8gYXZvaWQgdGhpcyBjYWxsICovCisJ
CS8qIE5vdGhpbmcgdG8gdXBkYXRlIGluIGluZGV4ISBUcnkgdG8gYXZvaWQgdGhpcyBjYWxsLiAq
LwogCQlnb3RvIG91dDsKIAl9CgpkaWZmIC0tZ2l0IGEvZnMvbnRmczMvaW5vZGUuYyBiL2ZzL250
ZnMzL2lub2RlLmMKaW5kZXggM2UyMDU2Yzk1ZTg0Li5mZGVhNzNiMzBmN2YgMTAwNjQ0Ci0tLSBh
L2ZzL250ZnMzL2lub2RlLmMKKysrIGIvZnMvbnRmczMvaW5vZGUuYwpAQCAtMjEsOSArMjEsNyBA
QAogI2luY2x1ZGUgIm50ZnNfZnMuaCIKCiAvKgotICogbnRmc19yZWFkX21mdAotICoKLSAqIHJl
YWRzIHJlY29yZCBhbmQgcGFyc2VzIE1GVAorICogbnRmc19yZWFkX21mdCAtIFJlYWQgcmVjb3Jk
IGFuZCBwYXJzZXMgTUZULgogICovCiBzdGF0aWMgc3RydWN0IGlub2RlICpudGZzX3JlYWRfbWZ0
KHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCQkJICAgY29uc3Qgc3RydWN0IGNwdV9zdHIgKm5hbWUs
CkBAIC04OSw3ICs4Nyw3IEBAIHN0YXRpYyBzdHJ1Y3QgaW5vZGUgKm50ZnNfcmVhZF9tZnQoc3Ry
dWN0IGlub2RlICppbm9kZSwKIAl9CgogCWlmIChsZTMyX3RvX2NwdShyZWMtPnRvdGFsKSAhPSBz
YmktPnJlY29yZF9zaXplKSB7Ci0JCS8vIGJhZCBpbm9kZT8KKwkJLy8gQmFkIGlub2RlPwogCQll
cnIgPSAtRUlOVkFMOwogCQlnb3RvIG91dDsKIAl9CkBAIC05NywxNyArOTUsMTcgQEAgc3RhdGlj
IHN0cnVjdCBpbm9kZSAqbnRmc19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2RlLAogCWlmICgh
aXNfcmVjX2Jhc2UocmVjKSkKIAkJZ290byBPazsKCi0JLyogcmVjb3JkIHNob3VsZCBjb250YWlu
ICRJMzAgcm9vdCAqLworCS8qIFJlY29yZCBzaG91bGQgY29udGFpbiAkSTMwIHJvb3QuICovCiAJ
aXNfZGlyID0gcmVjLT5mbGFncyAmIFJFQ09SRF9GTEFHX0RJUjsKCiAJaW5vZGUtPmlfZ2VuZXJh
dGlvbiA9IGxlMTZfdG9fY3B1KHJlYy0+c2VxKTsKCi0JLyogRW51bWVyYXRlIGFsbCBzdHJ1Y3Qg
QXR0cmlidXRlcyBNRlQgKi8KKwkvKiBFbnVtZXJhdGUgYWxsIHN0cnVjdCBBdHRyaWJ1dGVzIE1G
VC4gKi8KIAlsZSA9IE5VTEw7CiAJYXR0ciA9IE5VTEw7CgogCS8qCi0JICogdG8gcmVkdWNlIHRh
YiBwcmVzc3VyZSB1c2UgZ290byBpbnN0ZWFkIG9mCisJICogVG8gcmVkdWNlIHRhYiBwcmVzc3Vy
ZSB1c2UgZ290byBpbnN0ZWFkIG9mCiAJICogd2hpbGUoIChhdHRyID0gbmlfZW51bV9hdHRyX2V4
KG5pLCBhdHRyLCAmbGUsIE5VTEwpICkpCiAJICovCiBuZXh0X2F0dHI6CkBAIC0xMTgsNyArMTE2
LDcgQEAgc3RhdGljIHN0cnVjdCBpbm9kZSAqbnRmc19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlu
b2RlLAogCQlnb3RvIGVuZF9lbnVtOwoKIAlpZiAobGUgJiYgbGUtPnZjbikgewotCQkvKiBUaGlz
IGlzIG5vbiBwcmltYXJ5IGF0dHJpYnV0ZSBzZWdtZW50LiBJZ25vcmUgaWYgbm90IE1GVCAqLwor
CQkvKiBUaGlzIGlzIG5vbiBwcmltYXJ5IGF0dHJpYnV0ZSBzZWdtZW50LiBJZ25vcmUgaWYgbm90
IE1GVC4gKi8KIAkJaWYgKGlubyAhPSBNRlRfUkVDX01GVCB8fCBhdHRyLT50eXBlICE9IEFUVFJf
REFUQSkKIAkJCWdvdG8gbmV4dF9hdHRyOwoKQEAgLTE4OCw3ICsxODYsNyBAQCBzdGF0aWMgc3Ry
dWN0IGlub2RlICpudGZzX3JlYWRfbWZ0KHN0cnVjdCBpbm9kZSAqaW5vZGUsCgogCWNhc2UgQVRU
Ul9EQVRBOgogCQlpZiAoaXNfZGlyKSB7Ci0JCQkvKiBpZ25vcmUgZGF0YSBhdHRyaWJ1dGUgaW4g
ZGlyIHJlY29yZCAqLworCQkJLyogSWdub3JlIGRhdGEgYXR0cmlidXRlIGluIGRpciByZWNvcmQu
ICovCiAJCQlnb3RvIG5leHRfYXR0cjsKIAkJfQoKQEAgLTIwMiw3ICsyMDAsNyBAQCBzdGF0aWMg
c3RydWN0IGlub2RlICpudGZzX3JlYWRfbWZ0KHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCSAgICAg
KGlubyAhPSBNRlRfUkVDX1NFQ1VSRSB8fCAhYXR0ci0+bm9uX3JlcyB8fAogCQkgICAgICBhdHRy
LT5uYW1lX2xlbiAhPSBBUlJBWV9TSVpFKFNEU19OQU1FKSB8fAogCQkgICAgICBtZW1jbXAoYXR0
cl9uYW1lKGF0dHIpLCBTRFNfTkFNRSwgc2l6ZW9mKFNEU19OQU1FKSkpKSkgewotCQkJLyogZmls
ZSBjb250YWlucyBzdHJlYW0gYXR0cmlidXRlLiBpZ25vcmUgaXQgKi8KKwkJCS8qIEZpbGUgY29u
dGFpbnMgc3RyZWFtIGF0dHJpYnV0ZS4gSWdub3JlIGl0LiAqLwogCQkJZ290byBuZXh0X2F0dHI7
CiAJCX0KCkBAIC0zMjUsMTAgKzMyMywxMCBAQCBzdGF0aWMgc3RydWN0IGlub2RlICpudGZzX3Jl
YWRfbWZ0KHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCQkJdDMyID0gbGUxNl90b19jcHUoYXR0ci0+
bnJlcy5ydW5fb2ZmKTsKIAkJCX0KCi0JCQkvKiBMb29rcyBsaWtlIG5vcm1hbCBzeW1saW5rICov
CisJCQkvKiBMb29rcyBsaWtlIG5vcm1hbCBzeW1saW5rLiAqLwogCQkJbmktPmlfdmFsaWQgPSBp
bm9kZS0+aV9zaXplOwoKLQkJCS8qIENsZWFyIGRpcmVjdG9yeSBiaXQgKi8KKwkJCS8qIENsZWFy
IGRpcmVjdG9yeSBiaXQuICovCiAJCQlpZiAobmktPm5pX2ZsYWdzICYgTklfRkxBR19ESVIpIHsK
IAkJCQlpbmR4X2NsZWFyKCZuaS0+ZGlyKTsKIAkJCQltZW1zZXQoJm5pLT5kaXIsIDAsIHNpemVv
ZihuaS0+ZGlyKSk7CkBAIC0zNDAsNyArMzM4LDcgQEAgc3RhdGljIHN0cnVjdCBpbm9kZSAqbnRm
c19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2RlLAogCQkJaXNfZGlyID0gZmFsc2U7CiAJCQlp
ZiAoYXR0ci0+bm9uX3JlcykgewogCQkJCXJ1biA9ICZuaS0+ZmlsZS5ydW47Ci0JCQkJZ290byBh
dHRyX3VucGFja19ydW47IC8vIGRvdWJsZSBicmVhaworCQkJCWdvdG8gYXR0cl91bnBhY2tfcnVu
OyAvLyBEb3VibGUgYnJlYWsuCiAJCQl9CiAJCQlicmVhazsKCkBAIC0zNzksNyArMzc3LDcgQEAg
c3RhdGljIHN0cnVjdCBpbm9kZSAqbnRmc19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2RlLAog
CQlnb3RvIG91dDsKCiAJaWYgKCFpc19tYXRjaCAmJiBuYW1lKSB7Ci0JCS8qIHJldXNlIHJlYyBh
cyBidWZmZXIgZm9yIGFzY2lpIG5hbWUgKi8KKwkJLyogUmV1c2UgcmVjIGFzIGJ1ZmZlciBmb3Ig
YXNjaWkgbmFtZS4gKi8KIAkJZXJyID0gLUVOT0VOVDsKIAkJZ290byBvdXQ7CiAJfQpAQCAtMzg3
LDcgKzM4NSw3IEBAIHN0YXRpYyBzdHJ1Y3QgaW5vZGUgKm50ZnNfcmVhZF9tZnQoc3RydWN0IGlu
b2RlICppbm9kZSwKIAlpZiAoc3RkNS0+ZmEgJiBGSUxFX0FUVFJJQlVURV9SRUFET05MWSkKIAkJ
bW9kZSAmPSB+MDIyMjsKCi0JLyogU2V0dXAgJ3VpZCcgYW5kICdnaWQnICovCisJLyogU2V0dXAg
J3VpZCcgYW5kICdnaWQnLiAqLwogCWlub2RlLT5pX3VpZCA9IHNiaS0+b3B0aW9ucy5mc191aWQ7
CiAJaW5vZGUtPmlfZ2lkID0gc2JpLT5vcHRpb25zLmZzX2dpZDsKCkBAIC00MDAsOSArMzk4LDkg
QEAgc3RhdGljIHN0cnVjdCBpbm9kZSAqbnRmc19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2Rl
LAogCQluaS0+c3RkX2ZhIHw9IEZJTEVfQVRUUklCVVRFX0RJUkVDVE9SWTsKCiAJCS8qCi0JCSAq
IGRvdCBhbmQgZG90LWRvdCBzaG91bGQgYmUgaW5jbHVkZWQgaW4gY291bnQgYnV0IHdhcyBub3QK
KwkJICogRG90IGFuZCBkb3QtZG90IHNob3VsZCBiZSBpbmNsdWRlZCBpbiBjb3VudCBidXQgd2Fz
IG5vdAogCQkgKiBpbmNsdWRlZCBpbiBlbnVtZXJhdGlvbi4KLQkJICogVXN1YWxseSBhIGhhcmQg
bGlua3MgdG8gZGlyZWN0b3JpZXMgYXJlIGRpc2FibGVkCisJCSAqIFVzdWFsbHkgYSBoYXJkIGxp
bmtzIHRvIGRpcmVjdG9yaWVzIGFyZSBkaXNhYmxlZC4KIAkJICovCiAJCXNldF9ubGluayhpbm9k
ZSwgMSk7CiAJCWlub2RlLT5pX29wID0gJm50ZnNfZGlyX2lub2RlX29wZXJhdGlvbnM7CkBAIC00
MjgsNyArNDI2LDcgQEAgc3RhdGljIHN0cnVjdCBpbm9kZSAqbnRmc19yZWFkX21mdChzdHJ1Y3Qg
aW5vZGUgKmlub2RlLAogCQkJaW5pdF9yd3NlbSgmbmktPmZpbGUucnVuX2xvY2spOwogCX0gZWxz
ZSBpZiAoZm5hbWUgJiYgZm5hbWUtPmhvbWUubG93ID09IGNwdV90b19sZTMyKE1GVF9SRUNfRVhU
RU5EKSAmJgogCQkgICBmbmFtZS0+aG9tZS5zZXEgPT0gY3B1X3RvX2xlMTYoTUZUX1JFQ19FWFRF
TkQpKSB7Ci0JCS8qIFJlY29yZHMgaW4gJEV4dGVuZCBhcmUgbm90IGEgZmlsZXMgb3IgZ2VuZXJh
bCBkaXJlY3RvcmllcyAqLworCQkvKiBSZWNvcmRzIGluICRFeHRlbmQgYXJlIG5vdCBhIGZpbGVz
IG9yIGdlbmVyYWwgZGlyZWN0b3JpZXMuICovCiAJfSBlbHNlIHsKIAkJZXJyID0gLUVJTlZBTDsK
IAkJZ290byBvdXQ7CkBAIC00NDQsNyArNDQyLDcgQEAgc3RhdGljIHN0cnVjdCBpbm9kZSAqbnRm
c19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2RlLAoKIAlpbm9kZS0+aV9tb2RlID0gbW9kZTsK
IAlpZiAoIShuaS0+bmlfZmxhZ3MgJiBOSV9GTEFHX0VBKSkgewotCQkvKiBpZiBubyB4YXR0ciB0
aGVuIG5vIHNlY3VyaXR5IChzdG9yZWQgaW4geGF0dHIpICovCisJCS8qIElmIG5vIHhhdHRyIHRo
ZW4gbm8gc2VjdXJpdHkgKHN0b3JlZCBpbiB4YXR0cikuICovCiAJCWlub2RlLT5pX2ZsYWdzIHw9
IFNfTk9TRUM7CiAJfQoKQEAgLTQ2NCw3ICs0NjIsMTEgQEAgc3RhdGljIHN0cnVjdCBpbm9kZSAq
bnRmc19yZWFkX21mdChzdHJ1Y3QgaW5vZGUgKmlub2RlLAogCXJldHVybiBFUlJfUFRSKGVycik7
CiB9CgotLyogcmV0dXJucyAxIGlmIG1hdGNoICovCisvKgorICogbnRmc190ZXN0X2lub2RlCisg
KgorICogUmV0dXJuOiAxIGlmIG1hdGNoLgorICovCiBzdGF0aWMgaW50IG50ZnNfdGVzdF9pbm9k
ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCB2b2lkICpkYXRhKQogewogCXN0cnVjdCBNRlRfUkVGICpy
ZWYgPSBkYXRhOwpAQCAtNDk0LDcgKzQ5Niw3IEBAIHN0cnVjdCBpbm9kZSAqbnRmc19pZ2V0NShz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBjb25zdCBzdHJ1Y3QgTUZUX1JFRiAqcmVmLAogCWlmIChp
bm9kZS0+aV9zdGF0ZSAmIElfTkVXKQogCQlpbm9kZSA9IG50ZnNfcmVhZF9tZnQoaW5vZGUsIG5h
bWUsIHJlZik7CiAJZWxzZSBpZiAocmVmLT5zZXEgIT0gbnRmc19pKGlub2RlKS0+bWkubXJlYy0+
c2VxKSB7Ci0JCS8qIGlub2RlIG92ZXJsYXBzPyAqLworCQkvKiBJbm9kZSBvdmVybGFwcz8gKi8K
IAkJbWFrZV9iYWRfaW5vZGUoaW5vZGUpOwogCX0KCkBAIC01MjUsMTggKzUyNywxOCBAQCBzdGF0
aWMgbm9pbmxpbmUgaW50IG50ZnNfZ2V0X2Jsb2NrX3ZibyhzdHJ1Y3QgaW5vZGUgKmlub2RlLCB1
NjQgdmJvLAogCUNMU1QgdmNuLCBsY24sIGxlbjsKIAlib29sIG5ldzsKCi0JLypjbGVhciBwcmV2
aW91cyBzdGF0ZSovCisJLyogQ2xlYXIgcHJldmlvdXMgc3RhdGUuICovCiAJY2xlYXJfYnVmZmVy
X25ldyhiaCk7CiAJY2xlYXJfYnVmZmVyX3VwdG9kYXRlKGJoKTsKCi0JLyogZGlyZWN0IHdyaXRl
IHVzZXMgJ2NyZWF0ZT0wJyovCisJLyogRGlyZWN0IHdyaXRlIHVzZXMgJ2NyZWF0ZT0wJy4gKi8K
IAlpZiAoIWNyZWF0ZSAmJiB2Ym8gPj0gbmktPmlfdmFsaWQpIHsKLQkJLyogb3V0IG9mIHZhbGlk
ICovCisJCS8qIE91dCBvZiB2YWxpZC4gKi8KIAkJcmV0dXJuIDA7CiAJfQoKIAlpZiAodmJvID49
IGlub2RlLT5pX3NpemUpIHsKLQkJLyogb3V0IG9mIHNpemUgKi8KKwkJLyogT3V0IG9mIHNpemUu
ICovCiAJCXJldHVybiAwOwogCX0KCkBAIC01ODksNyArNTkxLDcgQEAgc3RhdGljIG5vaW5saW5l
IGludCBudGZzX2dldF9ibG9ja192Ym8oc3RydWN0IGlub2RlICppbm9kZSwgdTY0IHZibywKIAl2
YWxpZCA9IG5pLT5pX3ZhbGlkOwoKIAlpZiAoY3R4ID09IEdFVF9CTE9DS19ESVJFQ1RfSU9fVykg
ewotCQkvKm50ZnNfZGlyZWN0X0lPIHdpbGwgdXBkYXRlIG5pLT5pX3ZhbGlkICovCisJCS8qIG50
ZnNfZGlyZWN0X0lPIHdpbGwgdXBkYXRlIG5pLT5pX3ZhbGlkLiAqLwogCQlpZiAodmJvID49IHZh
bGlkKQogCQkJc2V0X2J1ZmZlcl9uZXcoYmgpOwogCX0gZWxzZSBpZiAoY3JlYXRlKSB7CkBAIC02
MDIsMjAgKzYwNCwxOCBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfZ2V0X2Jsb2NrX3Zibyhz
dHJ1Y3QgaW5vZGUgKmlub2RlLCB1NjQgdmJvLAogCQkJbWFya19pbm9kZV9kaXJ0eShpbm9kZSk7
CiAJCX0KIAl9IGVsc2UgaWYgKHZhbGlkID49IGlub2RlLT5pX3NpemUpIHsKLQkJLyogbm9ybWFs
IHJlYWQgb2Ygbm9ybWFsIGZpbGUqLworCQkvKiBOb3JtYWwgcmVhZCBvZiBub3JtYWwgZmlsZS4g
Ki8KIAl9IGVsc2UgaWYgKHZibyA+PSB2YWxpZCkgewotCQkvKiByZWFkIG91dCBvZiB2YWxpZCBk
YXRhKi8KLQkJLyogc2hvdWxkIG5ldmVyIGJlIGhlcmUgJ2NhdXNlIGFscmVhZHkgY2hlY2tlZCAq
LworCQkvKiBSZWFkIG91dCBvZiB2YWxpZCBkYXRhLiAqLworCQkvKiBTaG91bGQgbmV2ZXIgYmUg
aGVyZSAnY2F1c2UgYWxyZWFkeSBjaGVja2VkLiAqLwogCQljbGVhcl9idWZmZXJfbWFwcGVkKGJo
KTsKIAl9IGVsc2UgaWYgKHZibyArIGJ5dGVzIDw9IHZhbGlkKSB7Ci0JCS8qIG5vcm1hbCByZWFk
ICovCisJCS8qIE5vcm1hbCByZWFkLiAqLwogCX0gZWxzZSBpZiAodmJvICsgYmxvY2tfc2l6ZSA8
PSB2YWxpZCkgewotCQkvKiBub3JtYWwgc2hvcnQgcmVhZCAqLworCQkvKiBOb3JtYWwgc2hvcnQg
cmVhZC4gKi8KIAkJYnl0ZXMgPSBibG9ja19zaXplOwogCX0gZWxzZSB7Ci0JCS8qCi0JCSAqIHJl
YWQgYWNyb3NzIHZhbGlkIHNpemU6IHZibyA8IHZhbGlkICYmIHZhbGlkIDwgdmJvICsgYmxvY2tf
c2l6ZQotCQkgKi8KKwkJLyogUmVhZCBhY3Jvc3MgdmFsaWQgc2l6ZTogdmJvIDwgdmFsaWQgJiYg
dmFsaWQgPCB2Ym8gKyBibG9ja19zaXplICovCiAJCXUzMiB2b2ZmID0gdmFsaWQgLSB2Ym87Cgog
CQliaC0+Yl9zaXplID0gYnl0ZXMgPSBibG9ja19zaXplOwpAQCAtNjkyLDcgKzY5Miw3IEBAIHN0
YXRpYyBpbnQgbnRmc19yZWFkcGFnZShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IHBhZ2UgKnBh
Z2UpCiAJCXJldHVybiBlcnI7CiAJfQoKLQkvKiBub3JtYWwgKyBzcGFyc2UgZmlsZXMgKi8KKwkv
KiBOb3JtYWwgKyBzcGFyc2UgZmlsZXMuICovCiAJcmV0dXJuIG1wYWdlX3JlYWRwYWdlKHBhZ2Us
IG50ZnNfZ2V0X2Jsb2NrKTsKIH0KCkBAIC03MDUsMTIgKzcwNSwxMiBAQCBzdGF0aWMgdm9pZCBu
dGZzX3JlYWRhaGVhZChzdHJ1Y3QgcmVhZGFoZWFkX2NvbnRyb2wgKnJhYykKIAlsb2ZmX3QgcG9z
OwoKIAlpZiAoaXNfcmVzaWRlbnQobmkpKSB7Ci0JCS8qIG5vIHJlYWRhaGVhZCBmb3IgcmVzaWRl
bnQgKi8KKwkJLyogTm8gcmVhZGFoZWFkIGZvciByZXNpZGVudC4gKi8KIAkJcmV0dXJuOwogCX0K
CiAJaWYgKGlzX2NvbXByZXNzZWQobmkpKSB7Ci0JCS8qIG5vIHJlYWRhaGVhZCBmb3IgY29tcHJl
c3NlZCAqLworCQkvKiBObyByZWFkYWhlYWQgZm9yIGNvbXByZXNzZWQuICovCiAJCXJldHVybjsK
IAl9CgpAQCAtNzE5LDcgKzcxOSw3IEBAIHN0YXRpYyB2b2lkIG50ZnNfcmVhZGFoZWFkKHN0cnVj
dCByZWFkYWhlYWRfY29udHJvbCAqcmFjKQoKIAlpZiAodmFsaWQgPCBpX3NpemVfcmVhZChpbm9k
ZSkgJiYgcG9zIDw9IHZhbGlkICYmCiAJICAgIHZhbGlkIDwgcG9zICsgcmVhZGFoZWFkX2xlbmd0
aChyYWMpKSB7Ci0JCS8qIHJhbmdlIGNyb3NzICd2YWxpZCcuIHJlYWQgaXQgcGFnZSBieSBwYWdl
ICovCisJCS8qIFJhbmdlIGNyb3NzICd2YWxpZCcuIFJlYWQgaXQgcGFnZSBieSBwYWdlLiAqLwog
CQlyZXR1cm47CiAJfQoKQEAgLTc1Niw3ICs3NTYsNyBAQCBzdGF0aWMgc3NpemVfdCBudGZzX2Rp
cmVjdF9JTyhzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqaXRlcikKIAlzc2l6
ZV90IHJldDsKCiAJaWYgKGlzX3Jlc2lkZW50KG5pKSkgewotCQkvKnN3aXRjaCB0byBidWZmZXJl
ZCB3cml0ZSovCisJCS8qIFN3aXRjaCB0byBidWZmZXJlZCB3cml0ZS4gKi8KIAkJcmV0ID0gMDsK
IAkJZ290byBvdXQ7CiAJfQpAQCAtNzc1LDE0ICs3NzUsMTQgQEAgc3RhdGljIHNzaXplX3QgbnRm
c19kaXJlY3RfSU8oc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKml0ZXIpCiAJ
CQltYXJrX2lub2RlX2RpcnR5KGlub2RlKTsKIAkJfQogCX0gZWxzZSBpZiAodmJvIDwgdmFsaWQg
JiYgdmFsaWQgPCBlbmQpIHsKLQkJLyogZml4IHBhZ2UgKi8KKwkJLyogRml4IHBhZ2UuICovCiAJ
CXVuc2lnbmVkIGxvbmcgdWFkZHIgPSB+MHVsOwogCQlzdHJ1Y3QgcGFnZSAqcGFnZTsKIAkJbG9u
ZyBpLCBucGFnZXM7CiAJCXNpemVfdCBkdmJvID0gdmFsaWQgLSB2Ym87CiAJCXNpemVfdCBvZmYg
PSAwOwoKLQkJLypGaW5kIHVzZXIgYWRkcmVzcyovCisJCS8qIEZpbmQgdXNlciBhZGRyZXNzLiAq
LwogCQlmb3IgKGkgPSAwOyBpIDwgbnJfc2VnczsgaSsrKSB7CiAJCQlpZiAob2ZmIDw9IGR2Ym8g
JiYgZHZibyA8IG9mZiArIGlvdltpXS5pb3ZfbGVuKSB7CiAJCQkJdWFkZHIgPSAodW5zaWduZWQg
bG9uZylpb3ZbaV0uaW92X2Jhc2UgKyBkdmJvIC0KQEAgLTgxOCw3ICs4MTgsNyBAQCBpbnQgbnRm
c19zZXRfc2l6ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCB1NjQgbmV3X3NpemUpCiAJc3RydWN0IG50
ZnNfaW5vZGUgKm5pID0gbnRmc19pKGlub2RlKTsKIAlpbnQgZXJyOwoKLQkvKiBDaGVjayBmb3Ig
bWF4aW11bSBmaWxlIHNpemUgKi8KKwkvKiBDaGVjayBmb3IgbWF4aW11bSBmaWxlIHNpemUuICov
CiAJaWYgKGlzX3NwYXJzZWQobmkpIHx8IGlzX2NvbXByZXNzZWQobmkpKSB7CiAJCWlmIChuZXdf
c2l6ZSA+IHNiaS0+bWF4Ynl0ZXNfc3BhcnNlKSB7CiAJCQllcnIgPSAtRUZCSUc7CkBAIC04Njks
NyArODY5LDcgQEAgc3RhdGljIGludCBudGZzX3dyaXRlcGFnZXMoc3RydWN0IGFkZHJlc3Nfc3Bh
Y2UgKm1hcHBpbmcsCiB7CiAJc3RydWN0IGlub2RlICppbm9kZSA9IG1hcHBpbmctPmhvc3Q7CiAJ
c3RydWN0IG50ZnNfaW5vZGUgKm5pID0gbnRmc19pKGlub2RlKTsKLQkvKiByZWRpcmVjdCBjYWxs
IHRvICdudGZzX3dyaXRlcGFnZScgZm9yIHJlc2lkZW50IGZpbGVzKi8KKwkvKiBSZWRpcmVjdCBj
YWxsIHRvICdudGZzX3dyaXRlcGFnZScgZm9yIHJlc2lkZW50IGZpbGVzLiAqLwogCWdldF9ibG9j
a190ICpnZXRfYmxvY2sgPSBpc19yZXNpZGVudChuaSkgPyBOVUxMIDogJm50ZnNfZ2V0X2Jsb2Nr
OwoKIAlyZXR1cm4gbXBhZ2Vfd3JpdGVwYWdlcyhtYXBwaW5nLCB3YmMsIGdldF9ibG9jayk7CkBA
IC05MjIsNyArOTIyLDkgQEAgc3RhdGljIGludCBudGZzX3dyaXRlX2JlZ2luKHN0cnVjdCBmaWxl
ICpmaWxlLCBzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKIAlyZXR1cm4gZXJyOwogfQoK
LS8qIGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9uczo6d3JpdGVfZW5kICovCisvKgorICogbnRmc193
cml0ZV9lbmQgLSBBZGRyZXNzX3NwYWNlX29wZXJhdGlvbnM6OndyaXRlX2VuZC4KKyAqLwogc3Rh
dGljIGludCBudGZzX3dyaXRlX2VuZChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGFkZHJlc3Nf
c3BhY2UgKm1hcHBpbmcsCiAJCQkgIGxvZmZfdCBwb3MsIHUzMiBsZW4sIHUzMiBjb3BpZWQsIHN0
cnVjdCBwYWdlICpwYWdlLAogCQkJICB2b2lkICpmc2RhdGEpCkBAIC05NDAsNyArOTQyLDcgQEAg
c3RhdGljIGludCBudGZzX3dyaXRlX2VuZChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGFkZHJl
c3Nfc3BhY2UgKm1hcHBpbmcsCiAJCW5pX3VubG9jayhuaSk7CiAJCWlmICghZXJyKSB7CiAJCQlk
aXJ0eSA9IHRydWU7Ci0JCQkvKiBjbGVhciBhbnkgYnVmZmVycyBpbiBwYWdlKi8KKwkJCS8qIENs
ZWFyIGFueSBidWZmZXJzIGluIHBhZ2UuICovCiAJCQlpZiAocGFnZV9oYXNfYnVmZmVycyhwYWdl
KSkgewogCQkJCXN0cnVjdCBidWZmZXJfaGVhZCAqaGVhZCwgKmJoOwoKQEAgLTk2OSw3ICs5NzEs
NyBAQCBzdGF0aWMgaW50IG50ZnNfd3JpdGVfZW5kKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3Qg
YWRkcmVzc19zcGFjZSAqbWFwcGluZywKIAkJfQoKIAkJaWYgKHZhbGlkICE9IG5pLT5pX3ZhbGlk
KSB7Ci0JCQkvKiBuaS0+aV92YWxpZCBpcyBjaGFuZ2VkIGluIG50ZnNfZ2V0X2Jsb2NrX3ZibyAq
LworCQkJLyogbmktPmlfdmFsaWQgaXMgY2hhbmdlZCBpbiBudGZzX2dldF9ibG9ja192Ym8uICov
CiAJCQlkaXJ0eSA9IHRydWU7CiAJCX0KCkBAIC0xMDMwLDEwICsxMDMyLDExIEBAIGludCBudGZz
X3N5bmNfaW5vZGUoc3RydWN0IGlub2RlICppbm9kZSkKIH0KCiAvKgotICogaGVscGVyIGZ1bmN0
aW9uIGZvciBudGZzX2ZsdXNoX2lub2Rlcy4gIFRoaXMgd3JpdGVzIGJvdGggdGhlIGlub2RlCi0g
KiBhbmQgdGhlIGZpbGUgZGF0YSBibG9ja3MsIHdhaXRpbmcgZm9yIGluIGZsaWdodCBkYXRhIGJs
b2NrcyBiZWZvcmUKLSAqIHRoZSBzdGFydCBvZiB0aGUgY2FsbC4gIEl0IGRvZXMgbm90IHdhaXQg
Zm9yIGFueSBpbyBzdGFydGVkCi0gKiBkdXJpbmcgdGhlIGNhbGwKKyAqIHdyaXRlYmFja19pbm9k
ZSAtIEhlbHBlciBmdW5jdGlvbiBmb3IgbnRmc19mbHVzaF9pbm9kZXMoKS4KKyAqCisgKiBUaGlz
IHdyaXRlcyBib3RoIHRoZSBpbm9kZSBhbmQgdGhlIGZpbGUgZGF0YSBibG9ja3MsIHdhaXRpbmcK
KyAqIGZvciBpbiBmbGlnaHQgZGF0YSBibG9ja3MgYmVmb3JlIHRoZSBzdGFydCBvZiB0aGUgY2Fs
bC4gIEl0CisgKiBkb2VzIG5vdCB3YWl0IGZvciBhbnkgaW8gc3RhcnRlZCBkdXJpbmcgdGhlIGNh
bGwuCiAgKi8KIHN0YXRpYyBpbnQgd3JpdGViYWNrX2lub2RlKHN0cnVjdCBpbm9kZSAqaW5vZGUp
CiB7CkBAIC0xMDQ1LDEyICsxMDQ4LDE0IEBAIHN0YXRpYyBpbnQgd3JpdGViYWNrX2lub2RlKHN0
cnVjdCBpbm9kZSAqaW5vZGUpCiB9CgogLyoKLSAqIHdyaXRlIGRhdGEgYW5kIG1ldGFkYXRhIGNv
cnJlc3BvbmRpbmcgdG8gaTEgYW5kIGkyLiAgVGhlIGlvIGlzCisgKiBudGZzX2ZsdXNoX2lub2Rl
cworICoKKyAqIFdyaXRlIGRhdGEgYW5kIG1ldGFkYXRhIGNvcnJlc3BvbmRpbmcgdG8gaTEgYW5k
IGkyLiAgVGhlIGlvIGlzCiAgKiBzdGFydGVkIGJ1dCB3ZSBkbyBub3Qgd2FpdCBmb3IgYW55IG9m
IGl0IHRvIGZpbmlzaC4KICAqCi0gKiBmaWxlbWFwX2ZsdXNoIGlzIHVzZWQgZm9yIHRoZSBibG9j
ayBkZXZpY2UsIHNvIGlmIHRoZXJlIGlzIGEgZGlydHkKKyAqIGZpbGVtYXBfZmx1c2goKSBpcyB1
c2VkIGZvciB0aGUgYmxvY2sgZGV2aWNlLCBzbyBpZiB0aGVyZSBpcyBhIGRpcnR5CiAgKiBwYWdl
IGZvciBhIGJsb2NrIGFscmVhZHkgaW4gZmxpZ2h0LCB3ZSB3aWxsIG5vdCB3YWl0IGFuZCBzdGFy
dCB0aGUKLSAqIGlvIG92ZXIgYWdhaW4KKyAqIGlvIG92ZXIgYWdhaW4uCiAgKi8KIGludCBudGZz
X2ZsdXNoX2lub2RlcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBzdHJ1Y3QgaW5vZGUgKmkxLAog
CQkgICAgICBzdHJ1Y3QgaW5vZGUgKmkyKQpAQCAtMTA3MCw3ICsxMDc1LDcgQEAgaW50IGlub2Rl
X3dyaXRlX2RhdGEoc3RydWN0IGlub2RlICppbm9kZSwgY29uc3Qgdm9pZCAqZGF0YSwgc2l6ZV90
IGJ5dGVzKQogewogCXBnb2ZmX3QgaWR4OwoKLQkvKiBXcml0ZSBub24gcmVzaWRlbnQgZGF0YSAq
LworCS8qIFdyaXRlIG5vbiByZXNpZGVudCBkYXRhLiAqLwogCWZvciAoaWR4ID0gMDsgYnl0ZXM7
IGlkeCsrKSB7CiAJCXNpemVfdCBvcCA9IGJ5dGVzID4gUEFHRV9TSVpFID8gUEFHRV9TSVpFIDog
Ynl0ZXM7CiAJCXN0cnVjdCBwYWdlICpwYWdlID0gbnRmc19tYXBfcGFnZShpbm9kZS0+aV9tYXBw
aW5nLCBpZHgpOwpAQCAtMTA5NywxMiArMTEwMiwxNCBAQCBpbnQgaW5vZGVfd3JpdGVfZGF0YShz
dHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCB2b2lkICpkYXRhLCBzaXplX3QgYnl0ZXMpCiB9Cgog
LyoKLSAqIG51bWJlciBvZiBieXRlcyB0byBmb3IgUkVQQVJTRV9EQVRBX0JVRkZFUihJT19SRVBB
UlNFX1RBR19TWU1MSU5LKQotICogZm9yIHVuaWNvZGUgc3RyaW5nIG9mICd1bmlfbGVuJyBsZW5n
dGgKKyAqIG50ZnNfcmVwYXJzZV9ieXRlcworICoKKyAqIE51bWJlciBvZiBieXRlcyB0byBmb3Ig
UkVQQVJTRV9EQVRBX0JVRkZFUihJT19SRVBBUlNFX1RBR19TWU1MSU5LKQorICogZm9yIHVuaWNv
ZGUgc3RyaW5nIG9mIEB1bmlfbGVuIGxlbmd0aC4KICAqLwogc3RhdGljIGlubGluZSB1MzIgbnRm
c19yZXBhcnNlX2J5dGVzKHUzMiB1bmlfbGVuKQogewotCS8qIGhlYWRlciArIHVuaWNvZGUgc3Ry
aW5nICsgZGVjb3JhdGVkIHVuaWNvZGUgc3RyaW5nICovCisJLyogSGVhZGVyICsgdW5pY29kZSBz
dHJpbmcgKyBkZWNvcmF0ZWQgdW5pY29kZSBzdHJpbmcuICovCiAJcmV0dXJuIHNpemVvZihzaG9y
dCkgKiAoMiAqIHVuaV9sZW4gKyA0KSArCiAJICAgICAgIG9mZnNldG9mKHN0cnVjdCBSRVBBUlNF
X0RBVEFfQlVGRkVSLAogCQkJU3ltYm9saWNMaW5rUmVwYXJzZUJ1ZmZlci5QYXRoQnVmZmVyKTsK
QEAgLTExMjQsMTQgKzExMzEsMTQgQEAgbnRmc19jcmVhdGVfcmVwYXJzZV9idWZmZXIoc3RydWN0
IG50ZnNfc2JfaW5mbyAqc2JpLCBjb25zdCBjaGFyICpzeW1uYW1lLAogCXJzID0gJnJwLT5TeW1i
b2xpY0xpbmtSZXBhcnNlQnVmZmVyOwogCXJwX25hbWUgPSBycy0+UGF0aEJ1ZmZlcjsKCi0JLyog
Q29udmVydCBsaW5rIG5hbWUgdG8gdXRmMTYgKi8KKwkvKiBDb252ZXJ0IGxpbmsgbmFtZSB0byBV
VEYtMTYuICovCiAJZXJyID0gbnRmc19ubHNfdG9fdXRmMTYoc2JpLCBzeW1uYW1lLCBzaXplLAog
CQkJCShzdHJ1Y3QgY3B1X3N0ciAqKShycF9uYW1lIC0gMSksIDIgKiBzaXplLAogCQkJCVVURjE2
X0xJVFRMRV9FTkRJQU4pOwogCWlmIChlcnIgPCAwKQogCQlnb3RvIG91dDsKCi0JLyogZXJyID0g
dGhlIGxlbmd0aCBvZiB1bmljb2RlIG5hbWUgb2Ygc3ltbGluayAqLworCS8qIGVyciA9IHRoZSBs
ZW5ndGggb2YgdW5pY29kZSBuYW1lIG9mIHN5bWxpbmsuICovCiAJKm5zaXplID0gbnRmc19yZXBh
cnNlX2J5dGVzKGVycik7CgogCWlmICgqbnNpemUgPiBzYmktPnJlcGFyc2UubWF4X3NpemUpIHsK
QEAgLTExMzksNyArMTE0Niw3IEBAIG50ZnNfY3JlYXRlX3JlcGFyc2VfYnVmZmVyKHN0cnVjdCBu
dGZzX3NiX2luZm8gKnNiaSwgY29uc3QgY2hhciAqc3ltbmFtZSwKIAkJZ290byBvdXQ7CiAJfQoK
LQkvKiB0cmFuc2xhdGUgbGludXggJy8nIGludG8gd2luZG93cyAnXCcgKi8KKwkvKiBUcmFuc2xh
dGUgTGludXggJy8nIGludG8gV2luZG93cyAnXCcuICovCiAJZm9yIChpID0gMDsgaSA8IGVycjsg
aSsrKSB7CiAJCWlmIChycF9uYW1lW2ldID09IGNwdV90b19sZTE2KCcvJykpCiAJCQlycF9uYW1l
W2ldID0gY3B1X3RvX2xlMTYoJ1xcJyk7CkBAIC0xMTUwLDIwICsxMTU3LDIxIEBAIG50ZnNfY3Jl
YXRlX3JlcGFyc2VfYnVmZmVyKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgY29uc3QgY2hhciAq
c3ltbmFtZSwKIAkJY3B1X3RvX2xlMTYoKm5zaXplIC0gb2Zmc2V0b2Yoc3RydWN0IFJFUEFSU0Vf
REFUQV9CVUZGRVIsCiAJCQkJCSAgICAgIFN5bWJvbGljTGlua1JlcGFyc2VCdWZmZXIpKTsKCi0J
LyogUHJpbnROYW1lICsgU3Vic3RpdHV0ZU5hbWUgKi8KKwkvKiBQcmludE5hbWUgKyBTdWJzdGl0
dXRlTmFtZS4gKi8KIAlycy0+U3Vic3RpdHV0ZU5hbWVPZmZzZXQgPSBjcHVfdG9fbGUxNihzaXpl
b2Yoc2hvcnQpICogZXJyKTsKIAlycy0+U3Vic3RpdHV0ZU5hbWVMZW5ndGggPSBjcHVfdG9fbGUx
NihzaXplb2Yoc2hvcnQpICogZXJyICsgOCk7CiAJcnMtPlByaW50TmFtZUxlbmd0aCA9IHJzLT5T
dWJzdGl0dXRlTmFtZU9mZnNldDsKCiAJLyoKLQkgKiBUT0RPOiB1c2UgcmVsYXRpdmUgcGF0aCBp
ZiBwb3NzaWJsZSB0byBhbGxvdyB3aW5kb3dzIHRvIHBhcnNlIHRoaXMgcGF0aAotCSAqIDAtYWJz
b2x1dGUgcGF0aCAxLSByZWxhdGl2ZSBwYXRoIChTWU1MSU5LX0ZMQUdfUkVMQVRJVkUpCisJICog
VE9ETzogVXNlIHJlbGF0aXZlIHBhdGggaWYgcG9zc2libGUgdG8gYWxsb3cgV2luZG93cyB0bwor
CSAqIHBhcnNlIHRoaXMgcGF0aC4KKwkgKiAwLWFic29sdXRlIHBhdGggMS0gcmVsYXRpdmUgcGF0
aCAoU1lNTElOS19GTEFHX1JFTEFUSVZFKS4KIAkgKi8KIAlycy0+RmxhZ3MgPSAwOwoKIAltZW1t
b3ZlKHJwX25hbWUgKyBlcnIgKyA0LCBycF9uYW1lLCBzaXplb2Yoc2hvcnQpICogZXJyKTsKCi0J
LyogZGVjb3JhdGUgU3Vic3RpdHV0ZU5hbWUgKi8KKwkvKiBEZWNvcmF0ZSBTdWJzdGl0dXRlTmFt
ZS4gKi8KIAlycF9uYW1lICs9IGVycjsKIAlycF9uYW1lWzBdID0gY3B1X3RvX2xlMTYoJ1xcJyk7
CiAJcnBfbmFtZVsxXSA9IGNwdV90b19sZTE2KCc/Jyk7CkBAIC0xMjE3LDcgKzEyMjUsNyBAQCBz
dHJ1Y3QgaW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50
X3VzZXJucywKIAkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CgogCWlmIChpc19kaXIpIHsKLQkJ
LyogdXNlIHBhcmVudCdzIGRpcmVjdG9yeSBhdHRyaWJ1dGVzICovCisJCS8qIFVzZSBwYXJlbnQn
cyBkaXJlY3RvcnkgYXR0cmlidXRlcy4gKi8KIAkJZmEgPSBkaXJfbmktPnN0ZF9mYSB8IEZJTEVf
QVRUUklCVVRFX0RJUkVDVE9SWSB8CiAJCSAgICAgRklMRV9BVFRSSUJVVEVfQVJDSElWRTsKIAkJ
LyoKQEAgLTEyMjgsMTcgKzEyMzYsMjAgQEAgc3RydWN0IGlub2RlICpudGZzX2NyZWF0ZV9pbm9k
ZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsCiAJCWlmIChkaXItPmlfaW5vID09
IE1GVF9SRUNfUk9PVCkKIAkJCWZhICY9IH4oRklMRV9BVFRSSUJVVEVfSElEREVOIHwgRklMRV9B
VFRSSUJVVEVfU1lTVEVNKTsKIAl9IGVsc2UgaWYgKGlzX2xpbmspIHsKLQkJLyogSXQgaXMgZ29v
ZCBpZGVhIHRoYXQgbGluayBzaG91bGQgYmUgdGhlIHNhbWUgdHlwZSAoZmlsZS9kaXIpIGFzIHRh
cmdldCAqLworCQkvKgorCQkgKiBJdCBpcyBnb29kIGlkZWEgdGhhdCBsaW5rIHNob3VsZCBiZSB0
aGUgc2FtZQorCQkgKiB0eXBlIChmaWxlL2RpcikgYXMgdGFyZ2V0LgorCQkgKi8KIAkJZmEgPSBG
SUxFX0FUVFJJQlVURV9SRVBBUlNFX1BPSU5UOwoKIAkJLyoKLQkJICogbGludXg6IHRoZXJlIGFy
ZSBkaXIvZmlsZS9zeW1saW5rIGFuZCBzbyBvbgotCQkgKiBOVEZTOiBzeW1saW5rcyBhcmUgImRp
ciArIHJlcGFyc2UiIG9yICJmaWxlICsgcmVwYXJzZSIKKwkJICogTGludXg6IFRoZXJlIGFyZSBk
aXIvZmlsZS9zeW1saW5rIGFuZCBzbyBvbi4KKwkJICogTlRGUzogc3ltbGlua3MgYXJlICJkaXIg
KyByZXBhcnNlIiBvciAiZmlsZSArIHJlcGFyc2UiLgogCQkgKiBJdCBpcyBnb29kIGlkZWEgdG8g
Y3JlYXRlOgogCQkgKiBkaXIgKyByZXBhcnNlIGlmICdzeW1uYW1lJyBwb2ludHMgdG8gZGlyZWN0
b3J5CiAJCSAqIG9yCiAJCSAqIGZpbGUgKyByZXBhcnNlIGlmICdzeW1uYW1lJyBwb2ludHMgdG8g
ZmlsZQotCQkgKiBVbmZvcnR1bmF0ZWx5IGtlcm5fcGF0aCBoYW5ncyBpZiBzeW1uYW1lIGNvbnRh
aW5zICdkaXInCisJCSAqIFVuZm9ydHVuYXRlbHkga2Vybl9wYXRoIGhhbmdzIGlmIHN5bW5hbWUg
Y29udGFpbnMgJ2RpcicuCiAJCSAqLwoKIAkJLyoKQEAgLTEyNTYsMzAgKzEyNjcsMzAgQEAgc3Ry
dWN0IGlub2RlICpudGZzX2NyZWF0ZV9pbm9kZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91
c2VybnMsCiAJCSAqCX0KIAkJICovCiAJfSBlbHNlIGlmIChzYmktPm9wdGlvbnMuc3BhcnNlKSB7
Ci0JCS8qIHNwYXJzZWQgcmVndWxhciBmaWxlLCBjYXVzZSBvcHRpb24gJ3NwYXJzZScgKi8KKwkJ
LyogU3BhcnNlZCByZWd1bGFyIGZpbGUsIGNhdXNlIG9wdGlvbiAnc3BhcnNlJy4gKi8KIAkJZmEg
PSBGSUxFX0FUVFJJQlVURV9TUEFSU0VfRklMRSB8IEZJTEVfQVRUUklCVVRFX0FSQ0hJVkU7CiAJ
fSBlbHNlIGlmIChkaXJfbmktPnN0ZF9mYSAmIEZJTEVfQVRUUklCVVRFX0NPTVBSRVNTRUQpIHsK
LQkJLyogY29tcHJlc3NlZCByZWd1bGFyIGZpbGUsIGlmIHBhcmVudCBpcyBjb21wcmVzc2VkICov
CisJCS8qIENvbXByZXNzZWQgcmVndWxhciBmaWxlLCBpZiBwYXJlbnQgaXMgY29tcHJlc3NlZC4g
Ki8KIAkJZmEgPSBGSUxFX0FUVFJJQlVURV9DT01QUkVTU0VEIHwgRklMRV9BVFRSSUJVVEVfQVJD
SElWRTsKIAl9IGVsc2UgewotCQkvKiByZWd1bGFyIGZpbGUsIGRlZmF1bHQgYXR0cmlidXRlcyAq
LworCQkvKiBSZWd1bGFyIGZpbGUsIGRlZmF1bHQgYXR0cmlidXRlcy4gKi8KIAkJZmEgPSBGSUxF
X0FUVFJJQlVURV9BUkNISVZFOwogCX0KCiAJaWYgKCEobW9kZSAmIDAyMjIpKQogCQlmYSB8PSBG
SUxFX0FUVFJJQlVURV9SRUFET05MWTsKCi0JLyogYWxsb2NhdGUgUEFUSF9NQVggYnl0ZXMgKi8K
KwkvKiBBbGxvY2F0ZSBQQVRIX01BWCBieXRlcy4gKi8KIAluZXdfZGUgPSBfX2dldG5hbWUoKTsK
IAlpZiAoIW5ld19kZSkgewogCQllcnIgPSAtRU5PTUVNOwogCQlnb3RvIG91dDE7CiAJfQoKLQkv
Km1hcmsgcncgbnRmcyBhcyBkaXJ0eS4gaXQgd2lsbCBiZSBjbGVhcmVkIGF0IHVtb3VudCovCisJ
LyogTWFyayBydyBudGZzIGFzIGRpcnR5LiBpdCB3aWxsIGJlIGNsZWFyZWQgYXQgdW1vdW50LiAq
LwogCW50ZnNfc2V0X3N0YXRlKHNiaSwgTlRGU19ESVJUWV9ESVJUWSk7CgotCS8qIFN0ZXAgMTog
YWxsb2NhdGUgYW5kIGZpbGwgbmV3IG1mdCByZWNvcmQgKi8KKwkvKiBTdGVwIDE6IEFsbG9jYXRl
IGFuZCBmaWxsIG5ldyBNRlQgcmVjb3JkLiAqLwogCWVyciA9IG50ZnNfbG9va19mcmVlX21mdChz
YmksICZpbm8sIGZhbHNlLCBOVUxMLCBOVUxMKTsKIAlpZiAoZXJyKQogCQlnb3RvIG91dDI7CkBA
IC0xMjk5LDcgKzEzMTAsNyBAQCBzdHJ1Y3QgaW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVj
dCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKIAlyZWMtPmhhcmRfbGlua3MgPSBjcHVfdG9f
bGUxNigxKTsKIAlhdHRyID0gQWRkMlB0cihyZWMsIGxlMTZfdG9fY3B1KHJlYy0+YXR0cl9vZmYp
KTsKCi0JLyogR2V0IGRlZmF1bHQgc2VjdXJpdHkgaWQgKi8KKwkvKiBHZXQgZGVmYXVsdCBzZWN1
cml0eSBpZC4gKi8KIAlzZCA9IHNfZGVmYXVsdF9zZWN1cml0eTsKIAlzZF9zaXplID0gc2l6ZW9m
KHNfZGVmYXVsdF9zZWN1cml0eSk7CgpAQCAtMTMxNSw3ICsxMzI2LDcgQEAgc3RydWN0IGlub2Rl
ICpudGZzX2NyZWF0ZV9pbm9kZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsCiAJ
CX0KIAl9CgotCS8qIEluc2VydCBzdGFuZGFyZCBpbmZvICovCisJLyogSW5zZXJ0IHN0YW5kYXJk
IGluZm8uICovCiAJc3RkNSA9IEFkZDJQdHIoYXR0ciwgU0laRU9GX1JFU0lERU5UKTsKCiAJaWYg
KHNlY3VyaXR5X2lkID09IFNFQ1VSSVRZX0lEX0lOVkFMSUQpIHsKQEAgLTEzNDEsNyArMTM1Miw3
IEBAIHN0cnVjdCBpbm9kZSAqbnRmc19jcmVhdGVfaW5vZGUoc3RydWN0IHVzZXJfbmFtZXNwYWNl
ICptbnRfdXNlcm5zLAoKIAlhdHRyID0gQWRkMlB0cihhdHRyLCBhc2l6ZSk7CgotCS8qIEluc2Vy
dCBmaWxlIG5hbWUgKi8KKwkvKiBJbnNlcnQgZmlsZSBuYW1lLiAqLwogCWVyciA9IGZpbGxfbmFt
ZV9kZShzYmksIG5ld19kZSwgbmFtZSwgdW5pKTsKIAlpZiAoZXJyKQogCQlnb3RvIG91dDQ7CkBA
IC0xMzcwLDcgKzEzODEsNyBAQCBzdHJ1Y3QgaW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVj
dCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKIAlhdHRyID0gQWRkMlB0cihhdHRyLCBhc2l6
ZSk7CgogCWlmIChzZWN1cml0eV9pZCA9PSBTRUNVUklUWV9JRF9JTlZBTElEKSB7Ci0JCS8qIElu
c2VydCBzZWN1cml0eSBhdHRyaWJ1dGUgKi8KKwkJLyogSW5zZXJ0IHNlY3VyaXR5IGF0dHJpYnV0
ZS4gKi8KIAkJYXNpemUgPSBTSVpFT0ZfUkVTSURFTlQgKyBRdWFkQWxpZ24oc2Rfc2l6ZSk7Cgog
CQlhdHRyLT50eXBlID0gQVRUUl9TRUNVUkU7CkBAIC0xMzg1LDggKzEzOTYsOCBAQCBzdHJ1Y3Qg
aW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJu
cywKCiAJaWYgKGZhICYgRklMRV9BVFRSSUJVVEVfRElSRUNUT1JZKSB7CiAJCS8qCi0JCSAqIHJl
Z3VsYXIgZGlyZWN0b3J5IG9yIHN5bWxpbmsgdG8gZGlyZWN0b3J5Ci0JCSAqIENyZWF0ZSByb290
IGF0dHJpYnV0ZQorCQkgKiBSZWd1bGFyIGRpcmVjdG9yeSBvciBzeW1saW5rIHRvIGRpcmVjdG9y
eS4KKwkJICogQ3JlYXRlIHJvb3QgYXR0cmlidXRlLgogCQkgKi8KIAkJZHNpemUgPSBzaXplb2Yo
c3RydWN0IElOREVYX1JPT1QpICsgc2l6ZW9mKHN0cnVjdCBOVEZTX0RFKTsKIAkJYXNpemUgPSBz
aXplb2YoSTMwX05BTUUpICsgU0laRU9GX1JFU0lERU5UICsgZHNpemU7CkBAIC0xNDE2LDEyICsx
NDI3LDEyIEBAIHN0cnVjdCBpbm9kZSAqbnRmc19jcmVhdGVfaW5vZGUoc3RydWN0IHVzZXJfbmFt
ZXNwYWNlICptbnRfdXNlcm5zLAogCQllLT5mbGFncyA9IE5URlNfSUVfTEFTVDsKIAl9IGVsc2Ug
aWYgKGlzX2xpbmspIHsKIAkJLyoKLQkJICogc3ltbGluayB0byBmaWxlCi0JCSAqIENyZWF0ZSBl
bXB0eSByZXNpZGVudCBkYXRhIGF0dHJpYnV0ZQorCQkgKiBTeW1saW5rIHRvIGZpbGUuCisJCSAq
IENyZWF0ZSBlbXB0eSByZXNpZGVudCBkYXRhIGF0dHJpYnV0ZS4KIAkJICovCiAJCWFzaXplID0g
U0laRU9GX1JFU0lERU5UOwoKLQkJLyogaW5zZXJ0IGVtcHR5IEFUVFJfREFUQSAqLworCQkvKiBJ
bnNlcnQgZW1wdHkgQVRUUl9EQVRBICovCiAJCWF0dHItPnR5cGUgPSBBVFRSX0RBVEE7CiAJCWF0
dHItPnNpemUgPSBjcHVfdG9fbGUzMihTSVpFT0ZfUkVTSURFTlQpOwogCQlhdHRyLT5pZCA9IGNw
dV90b19sZTE2KGFpZCsrKTsKQEAgLTE0MjksMTEgKzE0NDAsMTEgQEAgc3RydWN0IGlub2RlICpu
dGZzX2NyZWF0ZV9pbm9kZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsCiAJCWF0
dHItPnJlcy5kYXRhX29mZiA9IFNJWkVPRl9SRVNJREVOVF9MRTsKIAl9IGVsc2UgewogCQkvKgot
CQkgKiByZWd1bGFyIGZpbGUKKwkJICogUmVndWxhciBmaWxlLgogCQkgKi8KIAkJYXR0ci0+dHlw
ZSA9IEFUVFJfREFUQTsKIAkJYXR0ci0+aWQgPSBjcHVfdG9fbGUxNihhaWQrKyk7Ci0JCS8qIENy
ZWF0ZSBlbXB0eSBub24gcmVzaWRlbnQgZGF0YSBhdHRyaWJ1dGUgKi8KKwkJLyogQ3JlYXRlIGVt
cHR5IG5vbiByZXNpZGVudCBkYXRhIGF0dHJpYnV0ZS4gKi8KIAkJYXR0ci0+bm9uX3JlcyA9IDE7
CiAJCWF0dHItPm5yZXMuZXZjbiA9IGNwdV90b19sZTY0KC0xbGwpOwogCQlpZiAoZmEgJiBGSUxF
X0FUVFJJQlVURV9TUEFSU0VfRklMRSkgewpAQCAtMTQ3MCwxMyArMTQ4MSwxMyBAQCBzdHJ1Y3Qg
aW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJu
cywKIAkJfQoKIAkJLyoKLQkJICogSW5zZXJ0IEFUVFJfUkVQQVJTRQorCQkgKiBJbnNlcnQgQVRU
Ul9SRVBBUlNFLgogCQkgKi8KIAkJYXR0ciA9IEFkZDJQdHIoYXR0ciwgYXNpemUpOwogCQlhdHRy
LT50eXBlID0gQVRUUl9SRVBBUlNFOwogCQlhdHRyLT5pZCA9IGNwdV90b19sZTE2KGFpZCsrKTsK
Ci0JCS8qIHJlc2lkZW50IG9yIG5vbiByZXNpZGVudD8gKi8KKwkJLyogUmVzaWRlbnQgb3Igbm9u
IHJlc2lkZW50PyAqLwogCQlhc2l6ZSA9IFF1YWRBbGlnbihTSVpFT0ZfUkVTSURFTlQgKyBuc2l6
ZSk7CiAJCXQxNiA9IFB0ck9mZnNldChyZWMsIGF0dHIpOwoKQEAgLTE0ODQsNyArMTQ5NSw3IEBA
IHN0cnVjdCBpbm9kZSAqbnRmc19jcmVhdGVfaW5vZGUoc3RydWN0IHVzZXJfbmFtZXNwYWNlICpt
bnRfdXNlcm5zLAogCQkJQ0xTVCBhbGVuOwogCQkJQ0xTVCBjbHN0ID0gYnl0ZXNfdG9fY2x1c3Rl
cihzYmksIG5zaXplKTsKCi0JCQkvKiBieXRlcyBwZXIgcnVucyAqLworCQkJLyogQnl0ZXMgcGVy
IHJ1bnMuICovCiAJCQl0MTYgPSBzYmktPnJlY29yZF9zaXplIC0gdDE2IC0gU0laRU9GX05PTlJF
U0lERU5UOwoKIAkJCWF0dHItPm5vbl9yZXMgPSAxOwpAQCAtMTUzOSwxNSArMTU1MCwxNSBAQCBz
dHJ1Y3QgaW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50
X3VzZXJucywKIAlyZWMtPnVzZWQgPSBjcHVfdG9fbGUzMihQdHJPZmZzZXQocmVjLCBhdHRyKSAr
IDgpOwogCXJlYy0+bmV4dF9hdHRyX2lkID0gY3B1X3RvX2xlMTYoYWlkKTsKCi0JLyogU3RlcCAy
OiBBZGQgbmV3IG5hbWUgaW4gaW5kZXggKi8KKwkvKiBTdGVwIDI6IEFkZCBuZXcgbmFtZSBpbiBp
bmRleC4gKi8KIAllcnIgPSBpbmR4X2luc2VydF9lbnRyeSgmZGlyX25pLT5kaXIsIGRpcl9uaSwg
bmV3X2RlLCBzYmksIGZuZCk7CiAJaWYgKGVycikKIAkJZ290byBvdXQ2OwoKLQkvKiBVcGRhdGUg
Y3VycmVudCBkaXJlY3RvcnkgcmVjb3JkICovCisJLyogVXBkYXRlIGN1cnJlbnQgZGlyZWN0b3J5
IHJlY29yZC4gKi8KIAltYXJrX2lub2RlX2RpcnR5KGRpcik7CgotCS8qIEZpbGwgdmZzIGlub2Rl
IGZpZWxkcyAqLworCS8qIEZpbGwgdmZzIGlub2RlIGZpZWxkcy4gKi8KIAlpbm9kZS0+aV91aWQg
PSBzYmktPm9wdGlvbnMudWlkID8gc2JpLT5vcHRpb25zLmZzX3VpZCA6IGN1cnJlbnRfZnN1aWQo
KTsKIAlpbm9kZS0+aV9naWQgPSBzYmktPm9wdGlvbnMuZ2lkCQkgPyBzYmktPm9wdGlvbnMuZnNf
Z2lkCiAJCSAgICAgICA6IChkaXItPmlfbW9kZSAmIFNfSVNHSUQpID8gZGlyLT5pX2dpZApAQCAt
MTU4NiwyNSArMTU5NywyNyBAQCBzdHJ1Y3QgaW5vZGUgKm50ZnNfY3JlYXRlX2lub2RlKHN0cnVj
dCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKIAkJaW5vZGUtPmlfZmxhZ3MgfD0gU19OT1NF
QzsKIAl9CgotCS8qIFdyaXRlIG5vbiByZXNpZGVudCBkYXRhICovCisJLyogV3JpdGUgbm9uIHJl
c2lkZW50IGRhdGEuICovCiAJaWYgKG5zaXplKSB7CiAJCWVyciA9IG50ZnNfc2Jfd3JpdGVfcnVu
KHNiaSwgJm5pLT5maWxlLnJ1biwgMCwgcnAsIG5zaXplKTsKIAkJaWYgKGVycikKIAkJCWdvdG8g
b3V0NzsKIAl9CgotCS8qIGNhbGwgJ2RfaW5zdGFudGlhdGUnIGFmdGVyIGlub2RlLT5pX29wIGlz
IHNldCBidXQgYmVmb3JlIGZpbmlzaF9vcGVuICovCisJLyoKKwkgKiBDYWxsICdkX2luc3RhbnRp
YXRlJyBhZnRlciBpbm9kZS0+aV9vcCBpcworCSAqIHNldCBidXQgYmVmb3JlIGZpbmlzaF9vcGVu
LiAqLwogCWRfaW5zdGFudGlhdGUoZGVudHJ5LCBpbm9kZSk7CgogCW1hcmtfaW5vZGVfZGlydHko
aW5vZGUpOwogCW1hcmtfaW5vZGVfZGlydHkoZGlyKTsKCi0JLyogbm9ybWFsIGV4aXQgKi8KKwkv
KiBOb3JtYWwgZXhpdC4gKi8KIAlnb3RvIG91dDI7Cgogb3V0NzoKCi0JLyogdW5kbyAnaW5keF9p
bnNlcnRfZW50cnknICovCisJLyogVW5kbyAnaW5keF9pbnNlcnRfZW50cnknLiAqLwogCWluZHhf
ZGVsZXRlX2VudHJ5KCZkaXJfbmktPmRpciwgZGlyX25pLCBuZXdfZGUgKyAxLAogCQkJICBsZTE2
X3RvX2NwdShuZXdfZGUtPmtleV9zaXplKSwgc2JpKTsKIG91dDY6CkBAIC0xNjU3LDE1ICsxNjcw
LDE1IEBAIGludCBudGZzX2xpbmtfaW5vZGUoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGRl
bnRyeSAqZGVudHJ5KQogCWlmICghZGlyX3Jvb3QpCiAJCXJldHVybiAtRUlOVkFMOwoKLQkvKiBh
bGxvY2F0ZSBQQVRIX01BWCBieXRlcyAqLworCS8qIEFsbG9jYXRlIFBBVEhfTUFYIGJ5dGVzLiAq
LwogCW5ld19kZSA9IF9fZ2V0bmFtZSgpOwogCWlmICghbmV3X2RlKQogCQlyZXR1cm4gLUVOT01F
TTsKCi0JLyptYXJrIHJ3IG50ZnMgYXMgZGlydHkuIGl0IHdpbGwgYmUgY2xlYXJlZCBhdCB1bW91
bnQqLworCS8qIE1hcmsgcncgbnRmcyBhcyBkaXJ0eS4gIEl0IHdpbGwgYmUgY2xlYXJlZCBhdCB1
bW91bnQuICovCiAJbnRmc19zZXRfc3RhdGUobmktPm1pLnNiaSwgTlRGU19ESVJUWV9ESVJUWSk7
CgotCS8vIEluc2VydCBmaWxlIG5hbWUKKwkvKiBJbnNlcnQgZmlsZSBuYW1lLiAqLwogCWVyciA9
IGZpbGxfbmFtZV9kZShzYmksIG5ld19kZSwgbmFtZSwgTlVMTCk7CiAJaWYgKGVycikKIAkJZ290
byBvdXQ7CkBAIC0xNzM5LDIzICsxNzUyLDIzIEBAIGludCBudGZzX3VubGlua19pbm9kZShzdHJ1
Y3QgaW5vZGUgKmRpciwgY29uc3Qgc3RydWN0IGRlbnRyeSAqZGVudHJ5KQogCQlnb3RvIG91dDE7
CiAJfQoKLQkvKiBhbGxvY2F0ZSBQQVRIX01BWCBieXRlcyAqLworCS8qIEFsbG9jYXRlIFBBVEhf
TUFYIGJ5dGVzLiAqLwogCXVuaSA9IF9fZ2V0bmFtZSgpOwogCWlmICghdW5pKSB7CiAJCWVyciA9
IC1FTk9NRU07CiAJCWdvdG8gb3V0MTsKIAl9CgotCS8qIENvbnZlcnQgaW5wdXQgc3RyaW5nIHRv
IHVuaWNvZGUgKi8KKwkvKiBDb252ZXJ0IGlucHV0IHN0cmluZyB0byB1bmljb2RlLiAqLwogCWVy
ciA9IG50ZnNfbmxzX3RvX3V0ZjE2KHNiaSwgbmFtZS0+bmFtZSwgbmFtZS0+bGVuLCB1bmksIE5U
RlNfTkFNRV9MRU4sCiAJCQkJVVRGMTZfSE9TVF9FTkRJQU4pOwogCWlmIChlcnIgPCAwKQogCQln
b3RvIG91dDI7CgotCS8qbWFyayBydyBudGZzIGFzIGRpcnR5LiBpdCB3aWxsIGJlIGNsZWFyZWQg
YXQgdW1vdW50Ki8KKwkvKiBNYXJrIHJ3IG50ZnMgYXMgZGlydHkuICBJdCB3aWxsIGJlIGNsZWFy
ZWQgYXQgdW1vdW50LiAqLwogCW50ZnNfc2V0X3N0YXRlKHNiaSwgTlRGU19ESVJUWV9ESVJUWSk7
CgotCS8qIGZpbmQgbmFtZSBpbiByZWNvcmQgKi8KKwkvKiBGaW5kIG5hbWUgaW4gcmVjb3JkLiAq
LwogCW1pX2dldF9yZWYoJmRpcl9uaS0+bWksICZyZWYpOwoKIAlsZSA9IE5VTEw7CkBAIC0xNzcy
LDE0ICsxNzg1LDE0IEBAIGludCBudGZzX3VubGlua19pbm9kZShzdHJ1Y3QgaW5vZGUgKmRpciwg
Y29uc3Qgc3RydWN0IGRlbnRyeSAqZGVudHJ5KQogCWlmIChlcnIpCiAJCWdvdG8gb3V0MzsKCi0J
LyogVGhlbiByZW1vdmUgbmFtZSBmcm9tIG1mdCAqLworCS8qIFRoZW4gcmVtb3ZlIG5hbWUgZnJv
bSBNRlQuICovCiAJbmlfcmVtb3ZlX2F0dHJfbGUobmksIGF0dHJfZnJvbV9uYW1lKGZuYW1lKSwg
bGUpOwoKIAlsZTE2X2FkZF9jcHUoJm5pLT5taS5tcmVjLT5oYXJkX2xpbmtzLCAtMSk7CiAJbmkt
Pm1pLmRpcnR5ID0gdHJ1ZTsKCiAJaWYgKG5hbWVfdHlwZSAhPSBGSUxFX05BTUVfUE9TSVgpIHsK
LQkJLyogTm93IHdlIHNob3VsZCBkZWxldGUgbmFtZSBieSB0eXBlICovCisJCS8qIE5vdyB3ZSBz
aG91bGQgZGVsZXRlIG5hbWUgYnkgdHlwZS4gKi8KIAkJZm5hbWUgPSBuaV9mbmFtZV90eXBlKG5p
LCBuYW1lX3R5cGUsICZsZSk7CiAJCWlmIChmbmFtZSkgewogCQkJZXJyID0gaW5keF9kZWxldGVf
ZW50cnkoaW5keCwgZGlyX25pLCBmbmFtZSwKQEAgLTE4NDQsMTMgKzE4NTcsMTMgQEAgc3RhdGlj
IG5vaW5saW5lIGludCBudGZzX3JlYWRsaW5rX2hscChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjaGFy
ICpidWZmZXIsCiAJc3RydWN0IGxlX3N0ciAqdW5pOwogCXN0cnVjdCBBVFRSSUIgKmF0dHI7Cgot
CS8qIFJlcGFyc2UgZGF0YSBwcmVzZW50LiBUcnkgdG8gcGFyc2UgaXQgKi8KKwkvKiBSZXBhcnNl
IGRhdGEgcHJlc2VudC4gVHJ5IHRvIHBhcnNlIGl0LiAqLwogCXN0YXRpY19hc3NlcnQoIW9mZnNl
dG9mKHN0cnVjdCBSRVBBUlNFX0RBVEFfQlVGRkVSLCBSZXBhcnNlVGFnKSk7CiAJc3RhdGljX2Fz
c2VydChzaXplb2YodTMyKSA9PSBzaXplb2YocnAtPlJlcGFyc2VUYWcpKTsKCiAJKmJ1ZmZlciA9
IDA7CgotCS8qIFJlYWQgaW50byB0ZW1wb3JhbCBidWZmZXIgKi8KKwkvKiBSZWFkIGludG8gdGVt
cG9yYWwgYnVmZmVyLiAqLwogCWlmIChpX3NpemUgPiBzYmktPnJlcGFyc2UubWF4X3NpemUgfHwg
aV9zaXplIDw9IHNpemVvZih1MzIpKSB7CiAJCWVyciA9IC1FSU5WQUw7CiAJCWdvdG8gb3V0OwpA
QCAtMTg4MiwxMCArMTg5NSwxMCBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfcmVhZGxpbmtf
aGxwKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNoYXIgKmJ1ZmZlciwKCiAJZXJyID0gLUVJTlZBTDsK
Ci0JLyogTWljcm9zb2Z0IFRhZyAqLworCS8qIE1pY3Jvc29mdCBUYWcuICovCiAJc3dpdGNoIChy
cC0+UmVwYXJzZVRhZykgewogCWNhc2UgSU9fUkVQQVJTRV9UQUdfTU9VTlRfUE9JTlQ6Ci0JCS8q
IE1vdW50IHBvaW50cyBhbmQganVuY3Rpb25zICovCisJCS8qIE1vdW50IHBvaW50cyBhbmQganVu
Y3Rpb25zLiAqLwogCQkvKiBDYW4gd2UgdXNlICdScC0+TW91bnRQb2ludFJlcGFyc2VCdWZmZXIu
UHJpbnROYW1lTGVuZ3RoJz8gKi8KIAkJaWYgKGlfc2l6ZSA8PSBvZmZzZXRvZihzdHJ1Y3QgUkVQ
QVJTRV9EQVRBX0JVRkZFUiwKIAkJCQkgICAgICAgTW91bnRQb2ludFJlcGFyc2VCdWZmZXIuUGF0
aEJ1ZmZlcikpCkBAIC0xOTQ3LDIwICsxOTYwLDIwIEBAIHN0YXRpYyBub2lubGluZSBpbnQgbnRm
c19yZWFkbGlua19obHAoc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqYnVmZmVyLAogCQkJZ290
byBvdXQ7CiAJCX0KCi0JCS8qIFVzZXJzIHRhZyAqLworCQkvKiBVc2VycyB0YWcuICovCiAJCXVu
aSA9IEFkZDJQdHIocnAsIHNpemVvZihzdHJ1Y3QgUkVQQVJTRV9QT0lOVCkgLSAyKTsKIAkJbmxl
biA9IGxlMTZfdG9fY3B1KHJwLT5SZXBhcnNlRGF0YUxlbmd0aCkgLQogCQkgICAgICAgc2l6ZW9m
KHN0cnVjdCBSRVBBUlNFX1BPSU5UKTsKIAl9CgotCS8qIENvbnZlcnQgbmxlbiBmcm9tIGJ5dGVz
IHRvIFVOSUNPREUgY2hhcnMgKi8KKwkvKiBDb252ZXJ0IG5sZW4gZnJvbSBieXRlcyB0byBVTklD
T0RFIGNoYXJzLiAqLwogCW5sZW4gPj49IDE7CgotCS8qIENoZWNrIHRoYXQgbmFtZSBpcyBhdmFp
bGFibGUgKi8KKwkvKiBDaGVjayB0aGF0IG5hbWUgaXMgYXZhaWxhYmxlLiAqLwogCWlmICghbmxl
biB8fCAmdW5pLT5uYW1lW25sZW5dID4gKF9fbGUxNiAqKUFkZDJQdHIocnAsIGlfc2l6ZSkpCiAJ
CWdvdG8gb3V0OwoKLQkvKiBJZiBuYW1lIGlzIGFscmVhZHkgemVybyB0ZXJtaW5hdGVkIHRoZW4g
dHJ1bmNhdGUgaXQgbm93ICovCisJLyogSWYgbmFtZSBpcyBhbHJlYWR5IHplcm8gdGVybWluYXRl
ZCB0aGVuIHRydW5jYXRlIGl0IG5vdy4gKi8KIAlpZiAoIXVuaS0+bmFtZVtubGVuIC0gMV0pCiAJ
CW5sZW4gLT0gMTsKIAl1bmktPmxlbiA9IG5sZW47CkBAIC0xOTcwLDEzICsxOTgzLDEzIEBAIHN0
YXRpYyBub2lubGluZSBpbnQgbnRmc19yZWFkbGlua19obHAoc3RydWN0IGlub2RlICppbm9kZSwg
Y2hhciAqYnVmZmVyLAogCWlmIChlcnIgPCAwKQogCQlnb3RvIG91dDsKCi0JLyogdHJhbnNsYXRl
IHdpbmRvd3MgJ1wnIGludG8gbGludXggJy8nICovCisJLyogVHJhbnNsYXRlIFdpbmRvd3MgJ1wn
IGludG8gTGludXggJy8nLiAqLwogCWZvciAoaSA9IDA7IGkgPCBlcnI7IGkrKykgewogCQlpZiAo
YnVmZmVyW2ldID09ICdcXCcpCiAJCQlidWZmZXJbaV0gPSAnLyc7CiAJfQoKLQkvKiBBbHdheXMg
c2V0IGxhc3QgemVybyAqLworCS8qIEFsd2F5cyBzZXQgbGFzdCB6ZXJvLiAqLwogCWJ1ZmZlcltl
cnJdID0gMDsKIG91dDoKIAludGZzX2ZyZWUodG9fZnJlZSk7CmRpZmYgLS1naXQgYS9mcy9udGZz
My9sem50LmMgYi9mcy9udGZzMy9sem50LmMKaW5kZXggZWFkOWFiN2Q2OWIzLi42MDE3NTIxMDky
NDIgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL2x6bnQuYworKysgYi9mcy9udGZzMy9sem50LmMKQEAg
LTQsNiArNCw3IEBACiAgKiBDb3B5cmlnaHQgKEMpIDIwMTktMjAyMSBQYXJhZ29uIFNvZnR3YXJl
IEdtYkgsIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgKgogICovCisKICNpbmNsdWRlIDxsaW51eC9i
bGtkZXYuaD4KICNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgogI2luY2x1ZGUgPGxpbnV4
L2ZzLmg+CkBAIC0xNCw3ICsxNSw3IEBACiAjaW5jbHVkZSAibnRmc19mcy5oIgoKIC8vIGNsYW5n
LWZvcm1hdCBvZmYKLS8qIHNyYyBidWZmZXIgaXMgemVybyAqLworLyogU3JjIGJ1ZmZlciBpcyB6
ZXJvLiAqLwogI2RlZmluZSBMWk5UX0VSUk9SX0FMTF9aRVJPUwkxCiAjZGVmaW5lIExaTlRfQ0hV
TktfU0laRQkJMHgxMDAwCiAvLyBjbGFuZy1mb3JtYXQgb24KQEAgLTcyLDcgKzczLDcgQEAgc3Rh
dGljIHNpemVfdCBsb25nZXN0X21hdGNoX3N0ZChjb25zdCB1OCAqc3JjLCBzdHJ1Y3QgbHpudCAq
Y3R4KQogCQkJCQkgICAgICBoYXNoWzFdICsgMywgY3R4LT5tYXhfbGVuIC0gMyk7CiAJfQoKLQkv
KiBDb21wYXJlIHR3byBtYXRjaGVzIGFuZCBzZWxlY3QgdGhlIGJlc3Qgb25lICovCisJLyogQ29t
cGFyZSB0d28gbWF0Y2hlcyBhbmQgc2VsZWN0IHRoZSBiZXN0IG9uZS4gKi8KIAlpZiAobGVuMSA8
IGxlbjIpIHsKIAkJY3R4LT5iZXN0X21hdGNoID0gaGFzaFsxXTsKIAkJbGVuMSA9IGxlbjI7CkBA
IC0xMjksMTAgKzEzMCwxMCBAQCBzdGF0aWMgaW5saW5lIHNpemVfdCBwYXJzZV9wYWlyKHUxNiBw
YWlyLCBzaXplX3QgKm9mZnNldCwgc2l6ZV90IGluZGV4KQogLyoKICAqIGNvbXByZXNzX2NodW5r
CiAgKgotICogcmV0dXJucyBvbmUgb2YgdGhlIHRocmVlIHZhbHVlczoKLSAqIDAgLSBvaywgJ2Nt
cHInIGNvbnRhaW5zICdjbXByX2NodW5rX3NpemUnIGJ5dGVzIG9mIGNvbXByZXNzZWQgZGF0YQot
ICogMSAtIGlucHV0IGJ1ZmZlciBpcyBmdWxsIHplcm8KLSAqIC0yIC0gdGhlIGNvbXByZXNzZWQg
YnVmZmVyIGlzIHRvbyBzbWFsbCB0byBob2xkIHRoZSBjb21wcmVzc2VkIGRhdGEKKyAqIFJldHVy
bjoKKyAqICogMAktIE9rLCBAY21wciBjb250YWlucyBAY21wcl9jaHVua19zaXplIGJ5dGVzIG9m
IGNvbXByZXNzZWQgZGF0YS4KKyAqICogMQktIElucHV0IGJ1ZmZlciBpcyBmdWxsIHplcm8uCisg
KiAqIC0yIC0gVGhlIGNvbXByZXNzZWQgYnVmZmVyIGlzIHRvbyBzbWFsbCB0byBob2xkIHRoZSBj
b21wcmVzc2VkIGRhdGEuCiAgKi8KIHN0YXRpYyBpbmxpbmUgaW50IGNvbXByZXNzX2NodW5rKHNp
emVfdCAoKm1hdGNoKShjb25zdCB1OCAqLCBzdHJ1Y3QgbHpudCAqKSwKIAkJCQkgY29uc3QgdTgg
KnVuYywgY29uc3QgdTggKnVuY19lbmQsIHU4ICpjbXByLApAQCAtMTQ1LDcgKzE0Niw3IEBAIHN0
YXRpYyBpbmxpbmUgaW50IGNvbXByZXNzX2NodW5rKHNpemVfdCAoKm1hdGNoKShjb25zdCB1OCAq
LCBzdHJ1Y3QgbHpudCAqKSwKIAl1OCAqY3AgPSBjbXByICsgMzsKIAl1OCAqY3AyID0gY21wciAr
IDI7CiAJdTggbm90X3plcm8gPSAwOwotCS8qIENvbnRyb2wgYnl0ZSBvZiA4LWJpdCB2YWx1ZXM6
ICggMCAtIG1lYW5zIGJ5dGUgYXMgaXMsIDEgLSBzaG9ydCBwYWlyICkgKi8KKwkvKiBDb250cm9s
IGJ5dGUgb2YgOC1iaXQgdmFsdWVzOiAoIDAgLSBtZWFucyBieXRlIGFzIGlzLCAxIC0gc2hvcnQg
cGFpciApLiAqLwogCXU4IG9oZHIgPSAwOwogCXU4ICpsYXN0OwogCXUxNiB0MTY7CkBAIC0xNjUs
NyArMTY2LDcgQEAgc3RhdGljIGlubGluZSBpbnQgY29tcHJlc3NfY2h1bmsoc2l6ZV90ICgqbWF0
Y2gpKGNvbnN0IHU4ICosIHN0cnVjdCBsem50ICopLAogCQl3aGlsZSAodW5jICsgc19tYXhfb2Zm
W2lkeF0gPCB1cCkKIAkJCWN0eC0+bWF4X2xlbiA9IHNfbWF4X2xlblsrK2lkeF07CgotCQkvLyBG
aW5kIG1hdGNoCisJCS8qIEZpbmQgbWF0Y2guICovCiAJCW1heF9sZW4gPSB1cCArIDMgPD0gdW5j
X2VuZCA/ICgqbWF0Y2gpKHVwLCBjdHgpIDogMDsKCiAJCWlmICghbWF4X2xlbikgewpAQCAtMjEx
LDcgKzIxMiw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IGNvbXByZXNzX2NodW5rKHNpemVfdCAoKm1h
dGNoKShjb25zdCB1OCAqLCBzdHJ1Y3QgbHpudCAqKSwKIAkJcmV0dXJuIC0yOwoKIAkvKgotCSAq
IENvcHkgbm9uIGNtcHIgZGF0YQorCSAqIENvcHkgbm9uIGNtcHIgZGF0YS4KIAkgKiAweDNGRkYg
PT0gKChMWk5UX0NIVU5LX1NJWkUgKyAyIC0gMykgfCAweDMwMDApCiAJICovCiAJY21wclswXSA9
IDB4ZmY7CkBAIC0yMzMsMzggKzIzNCwzOCBAQCBzdGF0aWMgaW5saW5lIHNzaXplX3QgZGVjb21w
cmVzc19jaHVuayh1OCAqdW5jLCB1OCAqdW5jX2VuZCwgY29uc3QgdTggKmNtcHIsCiAJdTE2IHBh
aXI7CiAJc2l6ZV90IG9mZnNldCwgbGVuZ3RoOwoKLQkvKiBEbyBkZWNvbXByZXNzaW9uIHVudGls
IHBvaW50ZXJzIGFyZSBpbnNpZGUgcmFuZ2UgKi8KKwkvKiBEbyBkZWNvbXByZXNzaW9uIHVudGls
IHBvaW50ZXJzIGFyZSBpbnNpZGUgcmFuZ2UuICovCiAJd2hpbGUgKHVwIDwgdW5jX2VuZCAmJiBj
bXByIDwgY21wcl9lbmQpIHsKIAkJLyogQ29ycmVjdCBpbmRleCAqLwogCQl3aGlsZSAodW5jICsg
c19tYXhfb2ZmW2luZGV4XSA8IHVwKQogCQkJaW5kZXggKz0gMTsKCi0JCS8qIENoZWNrIHRoZSBj
dXJyZW50IGZsYWcgZm9yIHplcm8gKi8KKwkJLyogQ2hlY2sgdGhlIGN1cnJlbnQgZmxhZyBmb3Ig
emVyby4gKi8KIAkJaWYgKCEoY2ggJiAoMSA8PCBiaXQpKSkgewotCQkJLyogSnVzdCBjb3B5IGJ5
dGUgKi8KKwkJCS8qIEp1c3QgY29weSBieXRlLiAqLwogCQkJKnVwKysgPSAqY21wcisrOwogCQkJ
Z290byBuZXh0OwogCQl9CgotCQkvKiBDaGVjayBmb3IgYm91bmRhcnkgKi8KKwkJLyogQ2hlY2sg
Zm9yIGJvdW5kYXJ5LiAqLwogCQlpZiAoY21wciArIDEgPj0gY21wcl9lbmQpCiAJCQlyZXR1cm4g
LUVJTlZBTDsKCi0JCS8qIFJlYWQgYSBzaG9ydCBmcm9tIGxpdHRsZSBlbmRpYW4gc3RyZWFtICov
CisJCS8qIFJlYWQgYSBzaG9ydCBmcm9tIGxpdHRsZSBlbmRpYW4gc3RyZWFtLiAqLwogCQlwYWly
ID0gY21wclsxXTsKIAkJcGFpciA8PD0gODsKIAkJcGFpciB8PSBjbXByWzBdOwoKIAkJY21wciAr
PSAyOwoKLQkJLyogVHJhbnNsYXRlIHBhY2tlZCBpbmZvcm1hdGlvbiBpbnRvIG9mZnNldCBhbmQg
bGVuZ3RoICovCisJCS8qIFRyYW5zbGF0ZSBwYWNrZWQgaW5mb3JtYXRpb24gaW50byBvZmZzZXQg
YW5kIGxlbmd0aC4gKi8KIAkJbGVuZ3RoID0gcGFyc2VfcGFpcihwYWlyLCAmb2Zmc2V0LCBpbmRl
eCk7CgotCQkvKiBDaGVjayBvZmZzZXQgZm9yIGJvdW5kYXJ5ICovCisJCS8qIENoZWNrIG9mZnNl
dCBmb3IgYm91bmRhcnkuICovCiAJCWlmICh1bmMgKyBvZmZzZXQgPiB1cCkKIAkJCXJldHVybiAt
RUlOVkFMOwoKLQkJLyogVHJ1bmNhdGUgdGhlIGxlbmd0aCBpZiBuZWNlc3NhcnkgKi8KKwkJLyog
VHJ1bmNhdGUgdGhlIGxlbmd0aCBpZiBuZWNlc3NhcnkuICovCiAJCWlmICh1cCArIGxlbmd0aCA+
PSB1bmNfZW5kKQogCQkJbGVuZ3RoID0gdW5jX2VuZCAtIHVwOwoKQEAgLTI3Myw3ICsyNzQsNyBA
QCBzdGF0aWMgaW5saW5lIHNzaXplX3QgZGVjb21wcmVzc19jaHVuayh1OCAqdW5jLCB1OCAqdW5j
X2VuZCwgY29uc3QgdTggKmNtcHIsCiAJCQkqdXAgPSAqKHVwIC0gb2Zmc2V0KTsKCiBuZXh0Ogot
CQkvKiBBZHZhbmNlIGZsYWcgYml0IHZhbHVlICovCisJCS8qIEFkdmFuY2UgZmxhZyBiaXQgdmFs
dWUuICovCiAJCWJpdCA9IChiaXQgKyAxKSAmIDc7CgogCQlpZiAoIWJpdCkgewpAQCAtMjg0LDEz
ICsyODUsMTQgQEAgc3RhdGljIGlubGluZSBzc2l6ZV90IGRlY29tcHJlc3NfY2h1bmsodTggKnVu
YywgdTggKnVuY19lbmQsIGNvbnN0IHU4ICpjbXByLAogCQl9CiAJfQoKLQkvKiByZXR1cm4gdGhl
IHNpemUgb2YgdW5jb21wcmVzc2VkIGRhdGEgKi8KKwkvKiBSZXR1cm4gdGhlIHNpemUgb2YgdW5j
b21wcmVzc2VkIGRhdGEuICovCiAJcmV0dXJuIHVwIC0gdW5jOwogfQoKIC8qCi0gKiAwIC0gc3Rh
bmRhcmQgY29tcHJlc3Npb24KLSAqICEwIC0gYmVzdCBjb21wcmVzc2lvbiwgcmVxdWlyZXMgYSBs
b3Qgb2YgY3B1CisgKiBnZXRfbHpudF9jdHgKKyAqIEBsZXZlbDogMCAtIFN0YW5kYXJkIGNvbXBy
ZXNzaW9uLgorICogCSAgICEwIC0gQmVzdCBjb21wcmVzc2lvbiwgcmVxdWlyZXMgYSBsb3Qgb2Yg
Y3B1LgogICovCiBzdHJ1Y3QgbHpudCAqZ2V0X2x6bnRfY3R4KGludCBsZXZlbCkKIHsKQEAgLTMw
MywxMSArMzA1LDExIEBAIHN0cnVjdCBsem50ICpnZXRfbHpudF9jdHgoaW50IGxldmVsKQogfQoK
IC8qCi0gKiBjb21wcmVzc19sem50CisgKiBjb21wcmVzc19sem50IC0gQ29tcHJlc3NlcyBAdW5j
IGludG8gQGNtcHIKICAqCi0gKiBDb21wcmVzc2VzICJ1bmMiIGludG8gImNtcHIiCi0gKiAreCAt
IG9rLCAnY21wcicgY29udGFpbnMgJ2ZpbmFsX2NvbXByZXNzZWRfc2l6ZScgYnl0ZXMgb2YgY29t
cHJlc3NlZCBkYXRhCi0gKiAwIC0gaW5wdXQgYnVmZmVyIGlzIGZ1bGwgemVybworICogUmV0dXJu
OgorICogKiAreCAtIE9rLCBAY21wciBjb250YWlucyAnZmluYWxfY29tcHJlc3NlZF9zaXplJyBi
eXRlcyBvZiBjb21wcmVzc2VkIGRhdGEuCisgKiAqIDAgLSBJbnB1dCBidWZmZXIgaXMgZnVsbCB6
ZXJvLgogICovCiBzaXplX3QgY29tcHJlc3NfbHpudChjb25zdCB2b2lkICp1bmMsIHNpemVfdCB1
bmNfc2l6ZSwgdm9pZCAqY21wciwKIAkJICAgICBzaXplX3QgY21wcl9zaXplLCBzdHJ1Y3QgbHpu
dCAqY3R4KQpAQCAtMzI3LDcgKzMyOSw3IEBAIHNpemVfdCBjb21wcmVzc19sem50KGNvbnN0IHZv
aWQgKnVuYywgc2l6ZV90IHVuY19zaXplLCB2b2lkICpjbXByLAogCQltYXRjaCA9ICZsb25nZXN0
X21hdGNoX2Jlc3Q7CiAJfQoKLQkvKiBjb21wcmVzc2lvbiBjeWNsZSAqLworCS8qIENvbXByZXNz
aW9uIGN5Y2xlLiAqLwogCWZvciAoOyB1bmNfY2h1bmsgPCB1bmNfZW5kOyB1bmNfY2h1bmsgKz0g
TFpOVF9DSFVOS19TSVpFKSB7CiAJCWNtcHJfc2l6ZSA9IDA7CiAJCWVyciA9IGNvbXByZXNzX2No
dW5rKG1hdGNoLCB1bmNfY2h1bmssIHVuY19lbmQsIHAsIGVuZCwKQEAgLTM0OCw5ICszNTAsNyBA
QCBzaXplX3QgY29tcHJlc3NfbHpudChjb25zdCB2b2lkICp1bmMsIHNpemVfdCB1bmNfc2l6ZSwg
dm9pZCAqY21wciwKIH0KCiAvKgotICogZGVjb21wcmVzc19sem50Ci0gKgotICogZGVjb21wcmVz
c2VzICJjbXByIiBpbnRvICJ1bmMiCisgKiBkZWNvbXByZXNzX2x6bnQgLSBEZWNvbXByZXNzIEBj
bXByIGludG8gQHVuYy4KICAqLwogc3NpemVfdCBkZWNvbXByZXNzX2x6bnQoY29uc3Qgdm9pZCAq
Y21wciwgc2l6ZV90IGNtcHJfc2l6ZSwgdm9pZCAqdW5jLAogCQkJc2l6ZV90IHVuY19zaXplKQpA
QCAtMzY0LDI0ICszNjQsMjQgQEAgc3NpemVfdCBkZWNvbXByZXNzX2x6bnQoY29uc3Qgdm9pZCAq
Y21wciwgc2l6ZV90IGNtcHJfc2l6ZSwgdm9pZCAqdW5jLAogCWlmIChjbXByX3NpemUgPCBzaXpl
b2Yoc2hvcnQpKQogCQlyZXR1cm4gLUVJTlZBTDsKCi0JLyogcmVhZCBjaHVuayBoZWFkZXIgKi8K
KwkvKiBSZWFkIGNodW5rIGhlYWRlci4gKi8KIAljaHVua19oZHIgPSBjbXByX2NodW5rWzFdOwog
CWNodW5rX2hkciA8PD0gODsKIAljaHVua19oZHIgfD0gY21wcl9jaHVua1swXTsKCi0JLyogbG9v
cCB0aHJvdWdoIGRlY29tcHJlc3NpbmcgY2h1bmtzICovCisJLyogTG9vcCB0aHJvdWdoIGRlY29t
cHJlc3NpbmcgY2h1bmtzLiAqLwogCWZvciAoOzspIHsKIAkJc2l6ZV90IGNodW5rX3NpemVfc2F2
ZWQ7CiAJCXNpemVfdCB1bmNfdXNlOwogCQlzaXplX3QgY21wcl91c2UgPSAzICsgKGNodW5rX2hk
ciAmIChMWk5UX0NIVU5LX1NJWkUgLSAxKSk7CgotCQkvKiBDaGVjayB0aGF0IHRoZSBjaHVuayBh
Y3R1YWxseSBmaXRzIHRoZSBzdXBwbGllZCBidWZmZXIgKi8KKwkJLyogQ2hlY2sgdGhhdCB0aGUg
Y2h1bmsgYWN0dWFsbHkgZml0cyB0aGUgc3VwcGxpZWQgYnVmZmVyLiAqLwogCQlpZiAoY21wcl9j
aHVuayArIGNtcHJfdXNlID4gY21wcl9lbmQpCiAJCQlyZXR1cm4gLUVJTlZBTDsKCi0JCS8qIEZp
cnN0IG1ha2Ugc3VyZSB0aGUgY2h1bmsgY29udGFpbnMgY29tcHJlc3NlZCBkYXRhICovCisJCS8q
IEZpcnN0IG1ha2Ugc3VyZSB0aGUgY2h1bmsgY29udGFpbnMgY29tcHJlc3NlZCBkYXRhLiAqLwog
CQlpZiAoY2h1bmtfaGRyICYgMHg4MDAwKSB7Ci0JCQkvKiBEZWNvbXByZXNzIGEgY2h1bmsgYW5k
IHJldHVybiBpZiB3ZSBnZXQgYW4gZXJyb3IgKi8KKwkJCS8qIERlY29tcHJlc3MgYSBjaHVuayBh
bmQgcmV0dXJuIGlmIHdlIGdldCBhbiBlcnJvci4gKi8KIAkJCXNzaXplX3QgZXJyID0KIAkJCQlk
ZWNvbXByZXNzX2NodW5rKHVuY19jaHVuaywgdW5jX2VuZCwKIAkJCQkJCSBjbXByX2NodW5rICsg
c2l6ZW9mKGNodW5rX2hkciksCkBAIC0zOTAsNyArMzkwLDcgQEAgc3NpemVfdCBkZWNvbXByZXNz
X2x6bnQoY29uc3Qgdm9pZCAqY21wciwgc2l6ZV90IGNtcHJfc2l6ZSwgdm9pZCAqdW5jLAogCQkJ
CXJldHVybiBlcnI7CiAJCQl1bmNfdXNlID0gZXJyOwogCQl9IGVsc2UgewotCQkJLyogVGhpcyBj
aHVuayBkb2VzIG5vdCBjb250YWluIGNvbXByZXNzZWQgZGF0YSAqLworCQkJLyogVGhpcyBjaHVu
ayBkb2VzIG5vdCBjb250YWluIGNvbXByZXNzZWQgZGF0YS4gKi8KIAkJCXVuY191c2UgPSB1bmNf
Y2h1bmsgKyBMWk5UX0NIVU5LX1NJWkUgPiB1bmNfZW5kCiAJCQkJCSAgPyB1bmNfZW5kIC0gdW5j
X2NodW5rCiAJCQkJCSAgOiBMWk5UX0NIVU5LX1NJWkU7CkBAIC00MDQsMjEgKzQwNCwyMSBAQCBz
c2l6ZV90IGRlY29tcHJlc3NfbHpudChjb25zdCB2b2lkICpjbXByLCBzaXplX3QgY21wcl9zaXpl
LCB2b2lkICp1bmMsCiAJCQkgICAgICAgdW5jX3VzZSk7CiAJCX0KCi0JCS8qIEFkdmFuY2UgcG9p
bnRlcnMgKi8KKwkJLyogQWR2YW5jZSBwb2ludGVycy4gKi8KIAkJY21wcl9jaHVuayArPSBjbXBy
X3VzZTsKIAkJdW5jX2NodW5rICs9IHVuY191c2U7CgotCQkvKiBDaGVjayBmb3IgdGhlIGVuZCBv
ZiB1bmMgYnVmZmVyICovCisJCS8qIENoZWNrIGZvciB0aGUgZW5kIG9mIHVuYyBidWZmZXIuICov
CiAJCWlmICh1bmNfY2h1bmsgPj0gdW5jX2VuZCkKIAkJCWJyZWFrOwoKLQkJLyogUHJvY2VlZCB0
aGUgbmV4dCBjaHVuayAqLworCQkvKiBQcm9jZWVkIHRoZSBuZXh0IGNodW5rLiAqLwogCQlpZiAo
Y21wcl9jaHVuayA+IGNtcHJfZW5kIC0gMikKIAkJCWJyZWFrOwoKIAkJY2h1bmtfc2l6ZV9zYXZl
ZCA9IExaTlRfQ0hVTktfU0laRTsKCi0JCS8qIHJlYWQgY2h1bmsgaGVhZGVyICovCisJCS8qIFJl
YWQgY2h1bmsgaGVhZGVyLiAqLwogCQljaHVua19oZHIgPSBjbXByX2NodW5rWzFdOwogCQljaHVu
a19oZHIgPDw9IDg7CiAJCWNodW5rX2hkciB8PSBjbXByX2NodW5rWzBdOwpAQCAtNDI2LDEyICs0
MjYsMTIgQEAgc3NpemVfdCBkZWNvbXByZXNzX2x6bnQoY29uc3Qgdm9pZCAqY21wciwgc2l6ZV90
IGNtcHJfc2l6ZSwgdm9pZCAqdW5jLAogCQlpZiAoIWNodW5rX2hkcikKIAkJCWJyZWFrOwoKLQkJ
LyogQ2hlY2sgdGhlIHNpemUgb2YgdW5jIGJ1ZmZlciAqLworCQkvKiBDaGVjayB0aGUgc2l6ZSBv
ZiB1bmMgYnVmZmVyLiAqLwogCQlpZiAodW5jX3VzZSA8IGNodW5rX3NpemVfc2F2ZWQpIHsKIAkJ
CXNpemVfdCB0MSA9IGNodW5rX3NpemVfc2F2ZWQgLSB1bmNfdXNlOwogCQkJdTggKnQyID0gdW5j
X2NodW5rICsgdDE7CgotCQkJLyogJ1plcm8nIG1lbW9yeSAqLworCQkJLyogJ1plcm8nIG1lbW9y
eS4gKi8KIAkJCWlmICh0MiA+PSB1bmNfZW5kKQogCQkJCWJyZWFrOwoKQEAgLTQ0MCwxMyArNDQw
LDEzIEBAIHNzaXplX3QgZGVjb21wcmVzc19sem50KGNvbnN0IHZvaWQgKmNtcHIsIHNpemVfdCBj
bXByX3NpemUsIHZvaWQgKnVuYywKIAkJfQogCX0KCi0JLyogQ2hlY2sgY29tcHJlc3Npb24gYm91
bmRhcnkgKi8KKwkvKiBDaGVjayBjb21wcmVzc2lvbiBib3VuZGFyeS4gKi8KIAlpZiAoY21wcl9j
aHVuayA+IGNtcHJfZW5kKQogCQlyZXR1cm4gLUVJTlZBTDsKCiAJLyoKIAkgKiBUaGUgdW5jIHNp
emUgaXMganVzdCBhIGRpZmZlcmVuY2UgYmV0d2VlbiBjdXJyZW50Ci0JICogcG9pbnRlciBhbmQg
b3JpZ2luYWwgb25lCisJICogcG9pbnRlciBhbmQgb3JpZ2luYWwgb25lLgogCSAqLwogCXJldHVy
biBQdHJPZmZzZXQodW5jLCB1bmNfY2h1bmspOwogfQpkaWZmIC0tZ2l0IGEvZnMvbnRmczMvbmFt
ZWkuYyBiL2ZzL250ZnMzL25hbWVpLmMKaW5kZXggZjVkYjEyY2QzYjIwLi4xZWYxZWY0M2RmYjkg
MTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL25hbWVpLmMKKysrIGIvZnMvbnRmczMvbmFtZWkuYwpAQCAt
MTcsOSArMTcsNyBAQAogI2luY2x1ZGUgIm50ZnNfZnMuaCIKCiAvKgotICogZmlsbF9uYW1lX2Rl
Ci0gKgotICogZm9ybWF0cyBOVEZTX0RFIGluICdidWYnCisgKiBmaWxsX25hbWVfZGUgLSBGb3Jt
YXQgTlRGU19ERSBpbiBAYnVmLgogICovCiBpbnQgZmlsbF9uYW1lX2RlKHN0cnVjdCBudGZzX3Ni
X2luZm8gKnNiaSwgdm9pZCAqYnVmLCBjb25zdCBzdHJ1Y3QgcXN0ciAqbmFtZSwKIAkJIGNvbnN0
IHN0cnVjdCBjcHVfc3RyICp1bmkpCkBAIC00Niw3ICs0NCw3IEBAIGludCBmaWxsX25hbWVfZGUo
c3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCB2b2lkICpidWYsIGNvbnN0IHN0cnVjdCBxc3RyICpu
YW1lLAogCQlmbmFtZS0+bmFtZV9sZW4gPSB1bmktPmxlbjsKCiAJfSBlbHNlIHsKLQkJLyogQ29u
dmVydCBpbnB1dCBzdHJpbmcgdG8gdW5pY29kZSAqLworCQkvKiBDb252ZXJ0IGlucHV0IHN0cmlu
ZyB0byB1bmljb2RlLiAqLwogCQllcnIgPSBudGZzX25sc190b191dGYxNihzYmksIG5hbWUtPm5h
bWUsIG5hbWUtPmxlbiwKIAkJCQkJKHN0cnVjdCBjcHVfc3RyICopJmZuYW1lLT5uYW1lX2xlbiwK
IAkJCQkJTlRGU19OQU1FX0xFTiwgVVRGMTZfTElUVExFX0VORElBTik7CkBAIC02Niw5ICs2NCw3
IEBAIGludCBmaWxsX25hbWVfZGUoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCB2b2lkICpidWYs
IGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLAogfQoKIC8qCi0gKiBudGZzX2xvb2t1cAotICoKLSAq
IGlub2RlX29wZXJhdGlvbnM6Omxvb2t1cAorICogbnRmc19sb29rdXAgLSBpbm9kZV9vcGVyYXRp
b25zOjpsb29rdXAKICAqLwogc3RhdGljIHN0cnVjdCBkZW50cnkgKm50ZnNfbG9va3VwKHN0cnVj
dCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCiAJCQkJICB1MzIgZmxhZ3MpCkBA
IC05OCw5ICs5NCw3IEBAIHN0YXRpYyBzdHJ1Y3QgZGVudHJ5ICpudGZzX2xvb2t1cChzdHJ1Y3Qg
aW5vZGUgKmRpciwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAogfQoKIC8qCi0gKiBudGZzX2NyZWF0
ZQotICoKLSAqIGlub2RlX29wZXJhdGlvbnM6OmNyZWF0ZQorICogbnRmc19jcmVhdGUgLSBpbm9k
ZV9vcGVyYXRpb25zOjpjcmVhdGUKICAqLwogc3RhdGljIGludCBudGZzX2NyZWF0ZShzdHJ1Y3Qg
dXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqZGlyLAogCQkgICAgICAg
c3RydWN0IGRlbnRyeSAqZGVudHJ5LCB1bW9kZV90IG1vZGUsIGJvb2wgZXhjbCkKQEAgLTExOSw5
ICsxMTMsNyBAQCBzdGF0aWMgaW50IG50ZnNfY3JlYXRlKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAq
bW50X3VzZXJucywgc3RydWN0IGlub2RlICpkaXIsCiB9CgogLyoKLSAqIG50ZnNfbGluawotICoK
LSAqIGlub2RlX29wZXJhdGlvbnM6OmxpbmsKKyAqIG50ZnNfbGluayAtIGlub2RlX29wZXJhdGlv
bnM6OmxpbmsKICAqLwogc3RhdGljIGludCBudGZzX2xpbmsoc3RydWN0IGRlbnRyeSAqb2RlLCBz
dHJ1Y3QgaW5vZGUgKmRpciwgc3RydWN0IGRlbnRyeSAqZGUpCiB7CkBAIC0xNjEsOSArMTUzLDcg
QEAgc3RhdGljIGludCBudGZzX2xpbmsoc3RydWN0IGRlbnRyeSAqb2RlLCBzdHJ1Y3QgaW5vZGUg
KmRpciwgc3RydWN0IGRlbnRyeSAqZGUpCiB9CgogLyoKLSAqIG50ZnNfdW5saW5rCi0gKgotICog
aW5vZGVfb3BlcmF0aW9uczo6dW5saW5rCisgKiBudGZzX3VubGluayAtIGlub2RlX29wZXJhdGlv
bnM6OnVubGluawogICovCiBzdGF0aWMgaW50IG50ZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGly
LCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiB7CkBAIC0xODAsOSArMTcwLDcgQEAgc3RhdGljIGlu
dCBudGZzX3VubGluayhzdHJ1Y3QgaW5vZGUgKmRpciwgc3RydWN0IGRlbnRyeSAqZGVudHJ5KQog
fQoKIC8qCi0gKiBudGZzX3N5bWxpbmsKLSAqCi0gKiBpbm9kZV9vcGVyYXRpb25zOjpzeW1saW5r
CisgKiBudGZzX3N5bWxpbmsgLSBpbm9kZV9vcGVyYXRpb25zOjpzeW1saW5rCiAgKi8KIHN0YXRp
YyBpbnQgbnRmc19zeW1saW5rKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3Ry
dWN0IGlub2RlICpkaXIsCiAJCQlzdHJ1Y3QgZGVudHJ5ICpkZW50cnksIGNvbnN0IGNoYXIgKnN5
bW5hbWUpCkBAIC0yMDIsOSArMTkwLDcgQEAgc3RhdGljIGludCBudGZzX3N5bWxpbmsoc3RydWN0
IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKmRpciwKIH0KCiAvKgot
ICogbnRmc19ta2RpcgotICoKLSAqIGlub2RlX29wZXJhdGlvbnM6Om1rZGlyCisgKiBudGZzX21r
ZGlyLSBpbm9kZV9vcGVyYXRpb25zOjpta2RpcgogICovCiBzdGF0aWMgaW50IG50ZnNfbWtkaXIo
c3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKmRpciwKIAkJ
ICAgICAgc3RydWN0IGRlbnRyeSAqZGVudHJ5LCB1bW9kZV90IG1vZGUpCkBAIC0yMjMsOSArMjA5
LDcgQEAgc3RhdGljIGludCBudGZzX21rZGlyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3Vz
ZXJucywgc3RydWN0IGlub2RlICpkaXIsCiB9CgogLyoKLSAqIG50ZnNfcm1kaXIKLSAqCi0gKiBp
bm9kZV9vcGVyYXRpb25zOjpybV9kaXIKKyAqIG50ZnNfcm1kaXIgLSBpbm9kZV9vcGVyYXRpb25z
OjpybV9kaXIKICAqLwogc3RhdGljIGludCBudGZzX3JtZGlyKHN0cnVjdCBpbm9kZSAqZGlyLCBz
dHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiB7CkBAIC0yNDIsOSArMjI2LDcgQEAgc3RhdGljIGludCBu
dGZzX3JtZGlyKHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiB9Cgog
LyoKLSAqIG50ZnNfcmVuYW1lCi0gKgotICogaW5vZGVfb3BlcmF0aW9uczo6cmVuYW1lCisgKiBu
dGZzX3JlbmFtZSAtIGlub2RlX29wZXJhdGlvbnM6OnJlbmFtZQogICovCiBzdGF0aWMgaW50IG50
ZnNfcmVuYW1lKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2Rl
ICpvbGRfZGlyLAogCQkgICAgICAgc3RydWN0IGRlbnRyeSAqb2xkX2RlbnRyeSwgc3RydWN0IGlu
b2RlICpuZXdfZGlyLApAQCAtMjgzLDcgKzI2NSw3IEBAIHN0YXRpYyBpbnQgbnRmc19yZW5hbWUo
c3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKm9sZF9kaXIs
CiAJCQkgIG9sZF9kZW50cnktPmRfbmFtZS5sZW4pOwoKIAlpZiAoaXNfc2FtZSAmJiBvbGRfZGly
ID09IG5ld19kaXIpIHsKLQkJLyogTm90aGluZyB0byBkbyAqLworCQkvKiBOb3RoaW5nIHRvIGRv
LiAqLwogCQllcnIgPSAwOwogCQlnb3RvIG91dDsKIAl9CkBAIC0yOTQsNyArMjc2LDcgQEAgc3Rh
dGljIGludCBudGZzX3JlbmFtZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0
cnVjdCBpbm9kZSAqb2xkX2RpciwKIAl9CgogCWlmIChuZXdfaW5vZGUpIHsKLQkJLyp0YXJnZXQg
bmFtZSBleGlzdHMuIHVubGluayBpdCovCisJCS8qIFRhcmdldCBuYW1lIGV4aXN0cy4gVW5saW5r
IGl0LiAqLwogCQlkZ2V0KG5ld19kZW50cnkpOwogCQluaV9sb2NrX2RpcihuZXdfZGlyX25pKTsK
IAkJZXJyID0gbnRmc191bmxpbmtfaW5vZGUobmV3X2RpciwgbmV3X2RlbnRyeSk7CkBAIC0zMDQs
NyArMjg2LDcgQEAgc3RhdGljIGludCBudGZzX3JlbmFtZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2Ug
Km1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqb2xkX2RpciwKIAkJCWdvdG8gb3V0OwogCX0KCi0J
LyogYWxsb2NhdGUgUEFUSF9NQVggYnl0ZXMgKi8KKwkvKiBBbGxvY2F0ZSBQQVRIX01BWCBieXRl
cy4gKi8KIAlvbGRfZGUgPSBfX2dldG5hbWUoKTsKIAlpZiAoIW9sZF9kZSkgewogCQllcnIgPSAt
RU5PTUVNOwpAQCAtMzMxLDcgKzMxMyw3IEBAIHN0YXRpYyBpbnQgbnRmc19yZW5hbWUoc3RydWN0
IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKm9sZF9kaXIsCgogCW1p
X2dldF9yZWYoJm9sZF9kaXJfbmktPm1pLCAmb2xkX25hbWUtPmhvbWUpOwoKLQkvKmdldCBwb2lu
dGVyIHRvIGZpbGVfbmFtZSBpbiBtZnQqLworCS8qIEdldCBwb2ludGVyIHRvIGZpbGVfbmFtZSBp
biBNRlQuICovCiAJZm5hbWUgPSBuaV9mbmFtZV9uYW1lKG9sZF9uaSwgKHN0cnVjdCBjcHVfc3Ry
ICopJm9sZF9uYW1lLT5uYW1lX2xlbiwKIAkJCSAgICAgICZvbGRfbmFtZS0+aG9tZSwgJmxlKTsK
IAlpZiAoIWZuYW1lKSB7CkBAIC0zMzksMTkgKzMyMSwxOSBAQCBzdGF0aWMgaW50IG50ZnNfcmVu
YW1lKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICpvbGRf
ZGlyLAogCQlnb3RvIG91dDI7CiAJfQoKLQkvKiBDb3B5IGZuYW1lIGluZm8gZnJvbSByZWNvcmQg
aW50byBuZXcgZm5hbWUgKi8KKwkvKiBDb3B5IGZuYW1lIGluZm8gZnJvbSByZWNvcmQgaW50byBu
ZXcgZm5hbWUuICovCiAJbmV3X25hbWUgPSAoc3RydWN0IEFUVFJfRklMRV9OQU1FICopKG5ld19k
ZSArIDEpOwogCW1lbWNweSgmbmV3X25hbWUtPmR1cCwgJmZuYW1lLT5kdXAsIHNpemVvZihmbmFt
ZS0+ZHVwKSk7CgogCW5hbWVfdHlwZSA9IHBhaXJlZF9uYW1lKGZuYW1lLT50eXBlKTsKCi0JLyog
cmVtb3ZlIGZpcnN0IG5hbWUgZnJvbSBkaXJlY3RvcnkgKi8KKwkvKiBSZW1vdmUgZmlyc3QgbmFt
ZSBmcm9tIGRpcmVjdG9yeS4gKi8KIAllcnIgPSBpbmR4X2RlbGV0ZV9lbnRyeSgmb2xkX2Rpcl9u
aS0+ZGlyLCBvbGRfZGlyX25pLCBvbGRfZGUgKyAxLAogCQkJCWxlMTZfdG9fY3B1KG9sZF9kZS0+
a2V5X3NpemUpLCBzYmkpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0MzsKCi0JLyogcmVtb3ZlIGZp
cnN0IG5hbWUgZnJvbSBtZnQgKi8KKwkvKiBSZW1vdmUgZmlyc3QgbmFtZSBmcm9tIE1GVC4gKi8K
IAllcnIgPSBuaV9yZW1vdmVfYXR0cl9sZShvbGRfbmksIGF0dHJfZnJvbV9uYW1lKGZuYW1lKSwg
bGUpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0NDsKQEAgLTM2MCwxNyArMzQyLDE3IEBAIHN0YXRp
YyBpbnQgbnRmc19yZW5hbWUoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1
Y3QgaW5vZGUgKm9sZF9kaXIsCiAJb2xkX25pLT5taS5kaXJ0eSA9IHRydWU7CgogCWlmIChuYW1l
X3R5cGUgIT0gRklMRV9OQU1FX1BPU0lYKSB7Ci0JCS8qIGdldCBwYWlyZWQgbmFtZSAqLworCQkv
KiBHZXQgcGFpcmVkIG5hbWUuICovCiAJCWZuYW1lID0gbmlfZm5hbWVfdHlwZShvbGRfbmksIG5h
bWVfdHlwZSwgJmxlKTsKIAkJaWYgKGZuYW1lKSB7Ci0JCQkvKiByZW1vdmUgc2Vjb25kIG5hbWUg
ZnJvbSBkaXJlY3RvcnkgKi8KKwkJCS8qIFJlbW92ZSBzZWNvbmQgbmFtZSBmcm9tIGRpcmVjdG9y
eS4gKi8KIAkJCWVyciA9IGluZHhfZGVsZXRlX2VudHJ5KCZvbGRfZGlyX25pLT5kaXIsIG9sZF9k
aXJfbmksCiAJCQkJCQlmbmFtZSwgZm5hbWVfZnVsbF9zaXplKGZuYW1lKSwKIAkJCQkJCXNiaSk7
CiAJCQlpZiAoZXJyKQogCQkJCWdvdG8gb3V0NTsKCi0JCQkvKiByZW1vdmUgc2Vjb25kIG5hbWUg
ZnJvbSBtZnQgKi8KKwkJCS8qIFJlbW92ZSBzZWNvbmQgbmFtZSBmcm9tIE1GVC4gKi8KIAkJCWVy
ciA9IG5pX3JlbW92ZV9hdHRyX2xlKG9sZF9uaSwgYXR0cl9mcm9tX25hbWUoZm5hbWUpLAogCQkJ
CQkJbGUpOwogCQkJaWYgKGVycikKQEAgLTM4MSwxMyArMzYzLDEzIEBAIHN0YXRpYyBpbnQgbnRm
c19yZW5hbWUoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUg
Km9sZF9kaXIsCiAJCX0KIAl9CgotCS8qIEFkZCBuZXcgbmFtZSAqLworCS8qIEFkZCBuZXcgbmFt
ZS4gKi8KIAltaV9nZXRfcmVmKCZvbGRfbmktPm1pLCAmbmV3X2RlLT5yZWYpOwogCW1pX2dldF9y
ZWYoJm50ZnNfaShuZXdfZGlyKS0+bWksICZuZXdfbmFtZS0+aG9tZSk7CgogCW5ld19kZV9rZXlf
c2l6ZSA9IGxlMTZfdG9fY3B1KG5ld19kZS0+a2V5X3NpemUpOwoKLQkvKiBpbnNlcnQgbmV3IG5h
bWUgaW4gbWZ0ICovCisJLyogSW5zZXJ0IG5ldyBuYW1lIGluIE1GVC4gKi8KIAllcnIgPSBuaV9p
bnNlcnRfcmVzaWRlbnQob2xkX25pLCBuZXdfZGVfa2V5X3NpemUsIEFUVFJfTkFNRSwgTlVMTCwg
MCwKIAkJCQkgJmF0dHIsIE5VTEwpOwogCWlmIChlcnIpCkBAIC00MDAsNyArMzgyLDcgQEAgc3Rh
dGljIGludCBudGZzX3JlbmFtZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0
cnVjdCBpbm9kZSAqb2xkX2RpciwKIAlsZTE2X2FkZF9jcHUoJm9sZF9uaS0+bWkubXJlYy0+aGFy
ZF9saW5rcywgMSk7CiAJb2xkX25pLT5taS5kaXJ0eSA9IHRydWU7CgotCS8qIGluc2VydCBuZXcg
bmFtZSBpbiBkaXJlY3RvcnkgKi8KKwkvKiBJbnNlcnQgbmV3IG5hbWUgaW4gZGlyZWN0b3J5LiAq
LwogCWVyciA9IGluZHhfaW5zZXJ0X2VudHJ5KCZuZXdfZGlyX25pLT5kaXIsIG5ld19kaXJfbmks
IG5ld19kZSwgc2JpLAogCQkJCU5VTEwpOwogCWlmIChlcnIpCkBAIC00MjgsNyArNDEwLDcgQEAg
c3RhdGljIGludCBudGZzX3JlbmFtZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMs
IHN0cnVjdCBpbm9kZSAqb2xkX2RpciwKIAl9CgogCWVyciA9IDA7Ci0JLyogbm9ybWFsIHdheSAq
LworCS8qIE5vcm1hbCB3YXkqICovCiAJZ290byBvdXQyOwoKIG91dDg6CkBAIC00NjcsOSArNDQ5
LDcgQEAgc3RhdGljIGludCBudGZzX3JlbmFtZShzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91
c2VybnMsIHN0cnVjdCBpbm9kZSAqb2xkX2RpciwKIH0KCiAvKgotICogbnRmc19hdG9taWNfb3Bl
bgotICoKLSAqIGlub2RlX29wZXJhdGlvbnM6OmF0b21pY19vcGVuCisgKiBudGZzX2F0b21pY19v
cGVuIC0gaW5vZGVfb3BlcmF0aW9uczo6YXRvbWljX29wZW4KICAqLwogc3RhdGljIGludCBudGZz
X2F0b21pY19vcGVuKHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCiAJ
CQkgICAgc3RydWN0IGZpbGUgKmZpbGUsIHUzMiBmbGFncywgdW1vZGVfdCBtb2RlKQpAQCAtNTE4
LDcgKzQ5OCw3IEBAIHN0YXRpYyBpbnQgbnRmc19hdG9taWNfb3BlbihzdHJ1Y3QgaW5vZGUgKmRp
ciwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAoKIAlmaWxlLT5mX21vZGUgfD0gRk1PREVfQ1JFQVRF
RDsKCi0JLypmbmQgY29udGFpbnMgdHJlZSdzIHBhdGggdG8gaW5zZXJ0IHRvKi8KKwkvKiBmbmQg
Y29udGFpbnMgdHJlZSdzIHBhdGggdG8gaW5zZXJ0IHRvLiAqLwogCS8qIFRPRE86IGluaXRfdXNl
cl9ucz8gKi8KIAlpbm9kZSA9IG50ZnNfY3JlYXRlX2lub2RlKCZpbml0X3VzZXJfbnMsIGRpciwg
ZGVudHJ5LCB1bmksIG1vZGUsIDAsCiAJCQkJICBOVUxMLCAwLCBleGNsLCBmbmQpOwpkaWZmIC0t
Z2l0IGEvZnMvbnRmczMvbnRmcy5oIGIvZnMvbnRmczMvbnRmcy5oCmluZGV4IDQwMzk4ZTZjMzlj
OS4uODBiYzIzMDU4ZDE2IDEwMDY0NAotLS0gYS9mcy9udGZzMy9udGZzLmgKKysrIGIvZnMvbnRm
czMvbnRmcy5oCkBAIC04LDMzICs4LDI0IEBACgogLy8gY2xhbmctZm9ybWF0IG9mZgoKLS8qIFRP
RE86Ci0gKiAtIENoZWNrIDRLIG1mdCByZWNvcmQgYW5kIDUxMiBieXRlcyBjbHVzdGVyCi0gKi8K
Ky8qIFRPRE86IENoZWNrIDRLIE1GVCByZWNvcmQgYW5kIDUxMiBieXRlcyBjbHVzdGVyLiAqLwoK
LS8qCi0gKiBBY3RpdmF0ZSB0aGlzIGRlZmluZSB0byB1c2UgYmluYXJ5IHNlYXJjaCBpbiBpbmRl
eGVzCi0gKi8KKy8qIEFjdGl2YXRlIHRoaXMgZGVmaW5lIHRvIHVzZSBiaW5hcnkgc2VhcmNoIGlu
IGluZGV4ZXMuICovCiAjZGVmaW5lIE5URlMzX0lOREVYX0JJTkFSWV9TRUFSQ0gKCi0vKgotICog
Q2hlY2sgZWFjaCBydW4gZm9yIG1hcmtlZCBjbHVzdGVycwotICovCisvKiBDaGVjayBlYWNoIHJ1
biBmb3IgbWFya2VkIGNsdXN0ZXJzLiAqLwogI2RlZmluZSBOVEZTM19DSEVDS19GUkVFX0NMU1QK
CiAjZGVmaW5lIE5URlNfTkFNRV9MRU4gMjU1CgotLyoKLSAqIG50ZnMuc3lzIHVzZWQgNTAwIG1h
eGltdW0gbGlua3MKLSAqIG9uLWRpc2sgc3RydWN0IGFsbG93cyB1cCB0byAweGZmZmYKLSAqLwor
LyogbnRmcy5zeXMgdXNlZCA1MDAgbWF4aW11bSBsaW5rcyBvbi1kaXNrIHN0cnVjdCBhbGxvd3Mg
dXAgdG8gMHhmZmZmLiAqLwogI2RlZmluZSBOVEZTX0xJTktfTUFYIDB4NDAwCiAvLyNkZWZpbmUg
TlRGU19MSU5LX01BWCAweGZmZmYKCiAvKgotICogQWN0aXZhdGUgdG8gdXNlIDY0IGJpdCBjbHVz
dGVycyBpbnN0ZWFkIG9mIDMyIGJpdHMgaW4gbnRmcy5zeXMKLSAqIExvZ2ljYWwgYW5kIHZpcnR1
YWwgY2x1c3RlciBudW1iZXIKLSAqIElmIG5lZWRlZCwgbWF5IGJlIHJlZGVmaW5lZCB0byB1c2Ug
NjQgYml0IHZhbHVlCisgKiBBY3RpdmF0ZSB0byB1c2UgNjQgYml0IGNsdXN0ZXJzIGluc3RlYWQg
b2YgMzIgYml0cyBpbiBudGZzLnN5cy4KKyAqIExvZ2ljYWwgYW5kIHZpcnR1YWwgY2x1c3RlciBu
dW1iZXIgaWYgbmVlZGVkLCBtYXkgYmUKKyAqIHJlZGVmaW5lZCB0byB1c2UgNjQgYml0IHZhbHVl
LgogICovCiAvLyNkZWZpbmUgQ09ORklHX05URlMzXzY0QklUX0NMVVNURVIKCkBAIC01MCwxMCAr
NDEsMTAgQEAgc3RydWN0IEdVSUQgewogfTsKCiAvKgotICogdGhpcyBzdHJ1Y3QgcmVwZWF0cyBs
YXlvdXQgb2YgQVRUUl9GSUxFX05BTUUKLSAqIGF0IG9mZnNldCAweDQwCi0gKiBpdCB1c2VkIHRv
IHN0b3JlIGdsb2JhbCBjb25zdGFudHMgTkFNRV9NRlQvTkFNRV9NSVJST1IuLi4KLSAqIG1vc3Qg
Y29uc3RhbnQgbmFtZXMgYXJlIHNob3J0ZXIgdGhhbiAxMAorICogVGhpcyBzdHJ1Y3QgcmVwZWF0
cyBsYXlvdXQgb2YgQVRUUl9GSUxFX05BTUUKKyAqIGF0IG9mZnNldCAweDQwLgorICogSXQgdXNl
ZCB0byBzdG9yZSBnbG9iYWwgY29uc3RhbnRzIE5BTUVfTUZUL05BTUVfTUlSUk9SLi4uCisgKiBt
b3N0IGNvbnN0YW50IG5hbWVzIGFyZSBzaG9ydGVyIHRoYW4gMTAuCiAgKi8KIHN0cnVjdCBjcHVf
c3RyIHsKIAl1OCBsZW47CkBAIC0xNzYsMTEgKzE2NywxMSBAQCBleHRlcm4gY29uc3QgX19sZTE2
IEJBRF9OQU1FWzRdOwogZXh0ZXJuIGNvbnN0IF9fbGUxNiBTRFNfTkFNRVs0XTsKIGV4dGVybiBj
b25zdCBfX2xlMTYgV09GX05BTUVbMTddOwkvKiBXb2ZDb21wcmVzc2VkRGF0YSAqLwoKLS8qIE1G
VCByZWNvcmQgbnVtYmVyIHN0cnVjdHVyZSAqLworLyogTUZUIHJlY29yZCBudW1iZXIgc3RydWN0
dXJlLiAqLwogc3RydWN0IE1GVF9SRUYgewotCV9fbGUzMiBsb3c7CS8vIFRoZSBsb3cgcGFydCBv
ZiB0aGUgbnVtYmVyCi0JX19sZTE2IGhpZ2g7CS8vIFRoZSBoaWdoIHBhcnQgb2YgdGhlIG51bWJl
cgotCV9fbGUxNiBzZXE7CS8vIFRoZSBzZXF1ZW5jZSBudW1iZXIgb2YgTUZUIHJlY29yZAorCV9f
bGUzMiBsb3c7CS8vIFRoZSBsb3cgcGFydCBvZiB0aGUgbnVtYmVyLgorCV9fbGUxNiBoaWdoOwkv
LyBUaGUgaGlnaCBwYXJ0IG9mIHRoZSBudW1iZXIuCisJX19sZTE2IHNlcTsJLy8gVGhlIHNlcXVl
bmNlIG51bWJlciBvZiBNRlQgcmVjb3JkLgogfTsKCiBzdGF0aWNfYXNzZXJ0KHNpemVvZihfX2xl
NjQpID09IHNpemVvZihzdHJ1Y3QgTUZUX1JFRikpOwpAQCAtMTk1LDM2ICsxODYsMzYgQEAgc3Rh
dGljIGlubGluZSBDTFNUIGlub19nZXQoY29uc3Qgc3RydWN0IE1GVF9SRUYgKnJlZikKIH0KCiBz
dHJ1Y3QgTlRGU19CT09UIHsKLQl1OCBqdW1wX2NvZGVbM107CS8vIDB4MDA6IEp1bXAgdG8gYm9v
dCBjb2RlCisJdTgganVtcF9jb2RlWzNdOwkvLyAweDAwOiBKdW1wIHRvIGJvb3QgY29kZS4KIAl1
OCBzeXN0ZW1faWRbOF07CS8vIDB4MDM6IFN5c3RlbSBJRCwgZXF1YWxzICJOVEZTICAgICIKCi0J
Ly8gTk9URTogdGhpcyBtZW1iZXIgaXMgbm90IGFsaWduZWQoISkKLQkvLyBieXRlc19wZXJfc2Vj
dG9yWzBdIG11c3QgYmUgMAotCS8vIGJ5dGVzX3Blcl9zZWN0b3JbMV0gbXVzdCBiZSBtdWx0aXBs
aWVkIGJ5IDI1NgotCXU4IGJ5dGVzX3Blcl9zZWN0b3JbMl07CS8vIDB4MEI6IEJ5dGVzIHBlciBz
ZWN0b3IKKwkvLyBOT1RFOiBUaGlzIG1lbWJlciBpcyBub3QgYWxpZ25lZCghKQorCS8vIGJ5dGVz
X3Blcl9zZWN0b3JbMF0gbXVzdCBiZSAwLgorCS8vIGJ5dGVzX3Blcl9zZWN0b3JbMV0gbXVzdCBi
ZSBtdWx0aXBsaWVkIGJ5IDI1Ni4KKwl1OCBieXRlc19wZXJfc2VjdG9yWzJdOwkvLyAweDBCOiBC
eXRlcyBwZXIgc2VjdG9yLgoKLQl1OCBzZWN0b3JzX3Blcl9jbHVzdGVyczsvLyAweDBEOiBTZWN0
b3JzIHBlciBjbHVzdGVyCisJdTggc2VjdG9yc19wZXJfY2x1c3RlcnM7Ly8gMHgwRDogU2VjdG9y
cyBwZXIgY2x1c3Rlci4KIAl1OCB1bnVzZWQxWzddOwogCXU4IG1lZGlhX3R5cGU7CQkvLyAweDE1
OiBNZWRpYSB0eXBlICgweEY4IC0gaGFyZGRpc2spCiAJdTggdW51c2VkMlsyXTsKLQlfX2xlMTYg
c2N0X3Blcl90cmFjazsJLy8gMHgxODogbnVtYmVyIG9mIHNlY3RvcnMgcGVyIHRyYWNrCi0JX19s
ZTE2IGhlYWRzOwkJLy8gMHgxQTogbnVtYmVyIG9mIGhlYWRzIHBlciBjeWxpbmRlcgotCV9fbGUz
MiBoaWRkZW5fc2VjdG9yczsJLy8gMHgxQzogbnVtYmVyIG9mICdoaWRkZW4nIHNlY3RvcnMKKwlf
X2xlMTYgc2N0X3Blcl90cmFjazsJLy8gMHgxODogbnVtYmVyIG9mIHNlY3RvcnMgcGVyIHRyYWNr
LgorCV9fbGUxNiBoZWFkczsJCS8vIDB4MUE6IG51bWJlciBvZiBoZWFkcyBwZXIgY3lsaW5kZXIu
CisJX19sZTMyIGhpZGRlbl9zZWN0b3JzOwkvLyAweDFDOiBudW1iZXIgb2YgJ2hpZGRlbicgc2Vj
dG9ycy4KIAl1OCB1bnVzZWQzWzRdOwotCXU4IGJpb3NfZHJpdmVfbnVtOwkvLyAweDI0OiBCSU9T
IGRyaXZlIG51bWJlciA9MHg4MAorCXU4IGJpb3NfZHJpdmVfbnVtOwkvLyAweDI0OiBCSU9TIGRy
aXZlIG51bWJlciA9MHg4MC4KIAl1OCB1bnVzZWQ0OwotCXU4IHNpZ25hdHVyZV9leDsJLy8gMHgy
NjogRXh0ZW5kZWQgQk9PVCBzaWduYXR1cmUgPTB4ODAKKwl1OCBzaWduYXR1cmVfZXg7CS8vIDB4
MjY6IEV4dGVuZGVkIEJPT1Qgc2lnbmF0dXJlID0weDgwLgogCXU4IHVudXNlZDU7Ci0JX19sZTY0
IHNlY3RvcnNfcGVyX3ZvbHVtZTsvLyAweDI4OiBzaXplIG9mIHZvbHVtZSBpbiBzZWN0b3JzCi0J
X19sZTY0IG1mdF9jbHN0OwkvLyAweDMwOiBmaXJzdCBjbHVzdGVyIG9mICRNRlQKLQlfX2xlNjQg
bWZ0Ml9jbHN0OwkvLyAweDM4OiBmaXJzdCBjbHVzdGVyIG9mICRNRlRNaXJyCi0JczggcmVjb3Jk
X3NpemU7CQkvLyAweDQwOiBzaXplIG9mIE1GVCByZWNvcmQgaW4gY2x1c3RlcnMoc2VjdG9ycykK
KwlfX2xlNjQgc2VjdG9yc19wZXJfdm9sdW1lOy8vIDB4Mjg6IFNpemUgb2Ygdm9sdW1lIGluIHNl
Y3RvcnMuCisJX19sZTY0IG1mdF9jbHN0OwkvLyAweDMwOiBGaXJzdCBjbHVzdGVyIG9mICRNRlQK
KwlfX2xlNjQgbWZ0Ml9jbHN0OwkvLyAweDM4OiBGaXJzdCBjbHVzdGVyIG9mICRNRlRNaXJyCisJ
czggcmVjb3JkX3NpemU7CQkvLyAweDQwOiBTaXplIG9mIE1GVCByZWNvcmQgaW4gY2x1c3RlcnMo
c2VjdG9ycykuCiAJdTggdW51c2VkNlszXTsKLQlzOCBpbmRleF9zaXplOwkJLy8gMHg0NDogc2l6
ZSBvZiBJTkRYIHJlY29yZCBpbiBjbHVzdGVycyhzZWN0b3JzKQorCXM4IGluZGV4X3NpemU7CQkv
LyAweDQ0OiBTaXplIG9mIElORFggcmVjb3JkIGluIGNsdXN0ZXJzKHNlY3RvcnMpLgogCXU4IHVu
dXNlZDdbM107CiAJX19sZTY0IHNlcmlhbF9udW07CS8vIDB4NDg6IFZvbHVtZSBzZXJpYWwgbnVt
YmVyCiAJX19sZTMyIGNoZWNrX3N1bTsJLy8gMHg1MDogU2ltcGxlIGFkZGl0aXZlIGNoZWNrc3Vt
IG9mIGFsbAotCQkJCS8vIG9mIHRoZSB1MzIncyB3aGljaCBwcmVjZWRlIHRoZSAnY2hlY2tfc3Vt
JworCQkJCS8vIG9mIHRoZSB1MzIncyB3aGljaCBwcmVjZWRlIHRoZSAnY2hlY2tfc3VtJy4KCiAJ
dTggYm9vdF9jb2RlWzB4MjAwIC0gMHg1MCAtIDIgLSA0XTsgLy8gMHg1NDoKIAl1OCBib290X21h
Z2ljWzJdOwkvLyAweDFGRTogQm9vdCBzaWduYXR1cmUgPTB4NTUgKyAweEFBCkBAIC0yNDUsMTMg
KzIzNiwxMyBAQCBlbnVtIE5URlNfU0lHTkFUVVJFIHsKCiBzdGF0aWNfYXNzZXJ0KHNpemVvZihl
bnVtIE5URlNfU0lHTkFUVVJFKSA9PSA0KTsKCi0vKiBNRlQgUmVjb3JkIGhlYWRlciBzdHJ1Y3R1
cmUgKi8KKy8qIE1GVCBSZWNvcmQgaGVhZGVyIHN0cnVjdHVyZS4gKi8KIHN0cnVjdCBOVEZTX1JF
Q09SRF9IRUFERVIgewotCS8qIFJlY29yZCBtYWdpYyBudW1iZXIsIGVxdWFscyAnRklMRScvJ0lO
RFgnLydSU1RSJy8nUkNSRCcgKi8KKwkvKiBSZWNvcmQgbWFnaWMgbnVtYmVyLCBlcXVhbHMgJ0ZJ
TEUnLydJTkRYJy8nUlNUUicvJ1JDUkQnLiAqLwogCWVudW0gTlRGU19TSUdOQVRVUkUgc2lnbjsg
Ly8gMHgwMDoKIAlfX2xlMTYgZml4X29mZjsJCS8vIDB4MDQ6CiAJX19sZTE2IGZpeF9udW07CQkv
LyAweDA2OgotCV9fbGU2NCBsc247CQkvLyAweDA4OiBMb2cgZmlsZSBzZXF1ZW5jZSBudW1iZXIK
KwlfX2xlNjQgbHNuOwkJLy8gMHgwODogTG9nIGZpbGUgc2VxdWVuY2UgbnVtYmVyLAogfTsKCiBz
dGF0aWNfYXNzZXJ0KHNpemVvZihzdHJ1Y3QgTlRGU19SRUNPUkRfSEVBREVSKSA9PSAweDEwKTsK
QEAgLTI2MSw3ICsyNTIsNyBAQCBzdGF0aWMgaW5saW5lIGludCBpc19iYWFkKGNvbnN0IHN0cnVj
dCBOVEZTX1JFQ09SRF9IRUFERVIgKmhkcikKIAlyZXR1cm4gaGRyLT5zaWduID09IE5URlNfQkFB
RF9TSUdOQVRVUkU7CiB9CgotLyogUG9zc2libGUgYml0cyBpbiBzdHJ1Y3QgTUZUX1JFQy5mbGFn
cyAqLworLyogUG9zc2libGUgYml0cyBpbiBzdHJ1Y3QgTUZUX1JFQy5mbGFncy4gKi8KIGVudW0g
UkVDT1JEX0ZMQUcgewogCVJFQ09SRF9GTEFHX0lOX1VTRQk9IGNwdV90b19sZTE2KDB4MDAwMSks
CiAJUkVDT1JEX0ZMQUdfRElSCQk9IGNwdV90b19sZTE2KDB4MDAwMiksCkBAIC0yNjksMjIgKzI2
MCwyOCBAQCBlbnVtIFJFQ09SRF9GTEFHIHsKIAlSRUNPUkRfRkxBR19VTktOT1dOCT0gY3B1X3Rv
X2xlMTYoMHgwMDA4KSwKIH07CgotLyogTUZUIFJlY29yZCBzdHJ1Y3R1cmUgKi8KKy8qIE1GVCBS
ZWNvcmQgc3RydWN0dXJlLCAqLwogc3RydWN0IE1GVF9SRUMgewogCXN0cnVjdCBOVEZTX1JFQ09S
RF9IRUFERVIgcmhkcjsgLy8gJ0ZJTEUnCgotCV9fbGUxNiBzZXE7CQkvLyAweDEwOiBTZXF1ZW5j
ZSBudW1iZXIgZm9yIHRoaXMgcmVjb3JkCi0JX19sZTE2IGhhcmRfbGlua3M7CS8vIDB4MTI6IFRo
ZSBudW1iZXIgb2YgaGFyZCBsaW5rcyB0byByZWNvcmQKLQlfX2xlMTYgYXR0cl9vZmY7CS8vIDB4
MTQ6IE9mZnNldCB0byBhdHRyaWJ1dGVzCi0JX19sZTE2IGZsYWdzOwkJLy8gMHgxNjogU2VlIFJF
Q09SRF9GTEFHCi0JX19sZTMyIHVzZWQ7CQkvLyAweDE4OiBUaGUgc2l6ZSBvZiB1c2VkIHBhcnQK
LQlfX2xlMzIgdG90YWw7CQkvLyAweDFDOiBUb3RhbCByZWNvcmQgc2l6ZQorCV9fbGUxNiBzZXE7
CQkvLyAweDEwOiBTZXF1ZW5jZSBudW1iZXIgZm9yIHRoaXMgcmVjb3JkLgorCV9fbGUxNiBoYXJk
X2xpbmtzOwkvLyAweDEyOiBUaGUgbnVtYmVyIG9mIGhhcmQgbGlua3MgdG8gcmVjb3JkLgorCV9f
bGUxNiBhdHRyX29mZjsJLy8gMHgxNDogT2Zmc2V0IHRvIGF0dHJpYnV0ZXMuCisJX19sZTE2IGZs
YWdzOwkJLy8gMHgxNjogU2VlIFJFQ09SRF9GTEFHLgorCV9fbGUzMiB1c2VkOwkJLy8gMHgxODog
VGhlIHNpemUgb2YgdXNlZCBwYXJ0LgorCV9fbGUzMiB0b3RhbDsJCS8vIDB4MUM6IFRvdGFsIHJl
Y29yZCBzaXplLgorCisJc3RydWN0IE1GVF9SRUYgcGFyZW50X3JlZjsgLy8gMHgyMDogUGFyZW50
IE1GVCByZWNvcmQuCisJX19sZTE2IG5leHRfYXR0cl9pZDsJLy8gMHgyODogVGhlIG5leHQgYXR0
cmlidXRlIElkLgoKLQlzdHJ1Y3QgTUZUX1JFRiBwYXJlbnRfcmVmOyAvLyAweDIwOiBQYXJlbnQg
TUZUIHJlY29yZAotCV9fbGUxNiBuZXh0X2F0dHJfaWQ7CS8vIDB4Mjg6IFRoZSBuZXh0IGF0dHJp
YnV0ZSBJZAorCV9fbGUzMiB1c2VkOwkJLy8gMHgxODogVGhlIHNpemUgb2YgdXNlZCBwYXJ0Lgor
CV9fbGUzMiB0b3RhbDsJCS8vIDB4MUM6IFRvdGFsIHJlY29yZCBzaXplLgoKLQlfX2xlMTYgcmVz
OwkJLy8gMHgyQTogSGlnaCBwYXJ0IG9mIG1mdCByZWNvcmQ/Ci0JX19sZTMyIG1mdF9yZWNvcmQ7
CS8vIDB4MkM6IEN1cnJlbnQgbWZ0IHJlY29yZCBudW1iZXIKKwlzdHJ1Y3QgTUZUX1JFRiBwYXJl
bnRfcmVmOyAvLyAweDIwOiBQYXJlbnQgTUZUIHJlY29yZC4KKwlfX2xlMTYgbmV4dF9hdHRyX2lk
OwkvLyAweDI4OiBUaGUgbmV4dCBhdHRyaWJ1dGUgSWQuCisKKwlfX2xlMTYgcmVzOwkJLy8gMHgy
QTogSGlnaCBwYXJ0IG9mIE1GVCByZWNvcmQ/CisJX19sZTMyIG1mdF9yZWNvcmQ7CS8vIDB4MkM6
IEN1cnJlbnQgTUZUIHJlY29yZCBudW1iZXIuCiAJX19sZTE2IGZpeHVwc1tdOwkvLyAweDMwOgog
fTsKCkBAIC0zMjEsMTYgKzMxOCwxNiBAQCBzdGF0aWMgaW5saW5lIGJvb2wgY2xlYXJfcmVjX2lu
dXNlKHN0cnVjdCBNRlRfUkVDICpyZWMpCiAjZGVmaW5lIFJFU0lERU5UX0ZMQUdfSU5ERVhFRCAw
eDAxCgogc3RydWN0IEFUVFJfUkVTSURFTlQgewotCV9fbGUzMiBkYXRhX3NpemU7CS8vIDB4MTA6
IFRoZSBzaXplIG9mIGRhdGEKLQlfX2xlMTYgZGF0YV9vZmY7CS8vIDB4MTQ6IE9mZnNldCB0byBk
YXRhCi0JdTggZmxhZ3M7CQkvLyAweDE2OiByZXNpZGVudCBmbGFncyAoIDEgLSBpbmRleGVkICkK
KwlfX2xlMzIgZGF0YV9zaXplOwkvLyAweDEwOiBUaGUgc2l6ZSBvZiBkYXRhLgorCV9fbGUxNiBk
YXRhX29mZjsJLy8gMHgxNDogT2Zmc2V0IHRvIGRhdGEuCisJdTggZmxhZ3M7CQkvLyAweDE2OiBS
ZXNpZGVudCBmbGFncyAoIDEgLSBpbmRleGVkICkuCiAJdTggcmVzOwkJCS8vIDB4MTc6CiB9OyAv
LyBzaXplb2YoKSA9IDB4MTgKCiBzdHJ1Y3QgQVRUUl9OT05SRVNJREVOVCB7Ci0JX19sZTY0IHN2
Y247CQkvLyAweDEwOiBTdGFydGluZyBWQ04gb2YgdGhpcyBzZWdtZW50Ci0JX19sZTY0IGV2Y247
CQkvLyAweDE4OiBFbmQgVkNOIG9mIHRoaXMgc2VnbWVudAotCV9fbGUxNiBydW5fb2ZmOwkJLy8g
MHgyMDogT2Zmc2V0IHRvIHBhY2tlZCBydW5zCisJX19sZTY0IHN2Y247CQkvLyAweDEwOiBTdGFy
dGluZyBWQ04gb2YgdGhpcyBzZWdtZW50LgorCV9fbGU2NCBldmNuOwkJLy8gMHgxODogRW5kIFZD
TiBvZiB0aGlzIHNlZ21lbnQuCisJX19sZTE2IHJ1bl9vZmY7CQkvLyAweDIwOiBPZmZzZXQgdG8g
cGFja2VkIHJ1bnMuCiAJLy8gIFVuaXQgb2YgQ29tcHJlc3Npb24gc2l6ZSBmb3IgdGhpcyBzdHJl
YW0sIGV4cHJlc3NlZAogCS8vICBhcyBhIGxvZyBvZiB0aGUgY2x1c3RlciBzaXplLgogCS8vCkBA
IC0zNDMsMTMgKzM0MCwxMyBAQCBzdHJ1Y3QgQVRUUl9OT05SRVNJREVOVCB7CiAJLy8JICAgIHJl
YXNvbmFibGUgcmFuZ2Ugb2YgbGVnYWwgdmFsdWVzIGhlcmUgKDEtNT8pLAogCS8vCSAgICBldmVu
IGlmIHRoZSBpbXBsZW1lbnRhdGlvbiBvbmx5IGdlbmVyYXRlcwogCS8vCSAgICBhIHNtYWxsZXIg
c2V0IG9mIHZhbHVlcyBpdHNlbGYuCi0JdTggY191bml0OwkJLy8gMHgyMgorCXU4IGNfdW5pdDsJ
CS8vIDB4MjI6CiAJdTggcmVzMVs1XTsJCS8vIDB4MjM6Ci0JX19sZTY0IGFsbG9jX3NpemU7CS8v
IDB4Mjg6IFRoZSBhbGxvY2F0ZWQgc2l6ZSBvZiBhdHRyaWJ1dGUgaW4gYnl0ZXMKKwlfX2xlNjQg
YWxsb2Nfc2l6ZTsJLy8gMHgyODogVGhlIGFsbG9jYXRlZCBzaXplIG9mIGF0dHJpYnV0ZSBpbiBi
eXRlcy4KIAkJCQkvLyAobXVsdGlwbGUgb2YgY2x1c3RlciBzaXplKQotCV9fbGU2NCBkYXRhX3Np
emU7CS8vIDB4MzA6IFRoZSBzaXplIG9mIGF0dHJpYnV0ZSAgaW4gYnl0ZXMgPD0gYWxsb2Nfc2l6
ZQotCV9fbGU2NCB2YWxpZF9zaXplOwkvLyAweDM4OiBUaGUgc2l6ZSBvZiB2YWxpZCBwYXJ0IGlu
IGJ5dGVzIDw9IGRhdGFfc2l6ZQotCV9fbGU2NCB0b3RhbF9zaXplOwkvLyAweDQwOiBUaGUgc3Vt
IG9mIHRoZSBhbGxvY2F0ZWQgY2x1c3RlcnMgZm9yIGEgZmlsZQorCV9fbGU2NCBkYXRhX3NpemU7
CS8vIDB4MzA6IFRoZSBzaXplIG9mIGF0dHJpYnV0ZSAgaW4gYnl0ZXMgPD0gYWxsb2Nfc2l6ZS4K
KwlfX2xlNjQgdmFsaWRfc2l6ZTsJLy8gMHgzODogVGhlIHNpemUgb2YgdmFsaWQgcGFydCBpbiBi
eXRlcyA8PSBkYXRhX3NpemUuCisJX19sZTY0IHRvdGFsX3NpemU7CS8vIDB4NDA6IFRoZSBzdW0g
b2YgdGhlIGFsbG9jYXRlZCBjbHVzdGVycyBmb3IgYSBmaWxlLgogCQkJCS8vIChwcmVzZW50IG9u
bHkgZm9yIHRoZSBmaXJzdCBzZWdtZW50ICgwID09IHZjbikKIAkJCQkvLyBvZiBjb21wcmVzc2Vk
IGF0dHJpYnV0ZSkKCkBAIC0zNjIsMTMgKzM1OSwxMyBAQCBzdHJ1Y3QgQVRUUl9OT05SRVNJREVO
VCB7CiAjZGVmaW5lIEFUVFJfRkxBR19TUEFSU0VECSAgY3B1X3RvX2xlMTYoMHg4MDAwKQoKIHN0
cnVjdCBBVFRSSUIgewotCWVudW0gQVRUUl9UWVBFIHR5cGU7CS8vIDB4MDA6IFRoZSB0eXBlIG9m
IHRoaXMgYXR0cmlidXRlCi0JX19sZTMyIHNpemU7CQkvLyAweDA0OiBUaGUgc2l6ZSBvZiB0aGlz
IGF0dHJpYnV0ZQotCXU4IG5vbl9yZXM7CQkvLyAweDA4OiBJcyB0aGlzIGF0dHJpYnV0ZSBub24t
cmVzaWRlbnQgPwotCXU4IG5hbWVfbGVuOwkJLy8gMHgwOTogVGhpcyBhdHRyaWJ1dGUgbmFtZSBs
ZW5ndGgKLQlfX2xlMTYgbmFtZV9vZmY7CS8vIDB4MEE6IE9mZnNldCB0byB0aGUgYXR0cmlidXRl
IG5hbWUKLQlfX2xlMTYgZmxhZ3M7CQkvLyAweDBDOiBTZWUgQVRUUl9GTEFHX1hYWAotCV9fbGUx
NiBpZDsJCS8vIDB4MEU6IHVuaXF1ZSBpZCAocGVyIHJlY29yZCkKKwllbnVtIEFUVFJfVFlQRSB0
eXBlOwkvLyAweDAwOiBUaGUgdHlwZSBvZiB0aGlzIGF0dHJpYnV0ZS4KKwlfX2xlMzIgc2l6ZTsJ
CS8vIDB4MDQ6IFRoZSBzaXplIG9mIHRoaXMgYXR0cmlidXRlLgorCXU4IG5vbl9yZXM7CQkvLyAw
eDA4OiBJcyB0aGlzIGF0dHJpYnV0ZSBub24tcmVzaWRlbnQ/CisJdTggbmFtZV9sZW47CQkvLyAw
eDA5OiBUaGlzIGF0dHJpYnV0ZSBuYW1lIGxlbmd0aC4KKwlfX2xlMTYgbmFtZV9vZmY7CS8vIDB4
MEE6IE9mZnNldCB0byB0aGUgYXR0cmlidXRlIG5hbWUuCisJX19sZTE2IGZsYWdzOwkJLy8gMHgw
QzogU2VlIEFUVFJfRkxBR19YWFguCisJX19sZTE2IGlkOwkJLy8gMHgwRTogVW5pcXVlIGlkIChw
ZXIgcmVjb3JkKS4KCiAJdW5pb24gewogCQlzdHJ1Y3QgQVRUUl9SRVNJREVOVCByZXM7ICAgICAv
LyAweDEwCkBAIC0zNzYsNyArMzczLDcgQEAgc3RydWN0IEFUVFJJQiB7CiAJfTsKIH07CgotLyog
RGVmaW5lIGF0dHJpYnV0ZSBzaXplcyAqLworLyogRGVmaW5lIGF0dHJpYnV0ZSBzaXplcy4gKi8K
ICNkZWZpbmUgU0laRU9GX1JFU0lERU5UCQkJMHgxOAogI2RlZmluZSBTSVpFT0ZfTk9OUkVTSURF
TlRfRVgJCTB4NDgKICNkZWZpbmUgU0laRU9GX05PTlJFU0lERU5UCQkweDQwCkBAIC00MzUsNyAr
NDMyLDcgQEAgc3RhdGljIGlubGluZSB1NjQgYXR0cl9zdmNuKGNvbnN0IHN0cnVjdCBBVFRSSUIg
KmF0dHIpCiAJcmV0dXJuIGF0dHItPm5vbl9yZXMgPyBsZTY0X3RvX2NwdShhdHRyLT5ucmVzLnN2
Y24pIDogMDsKIH0KCi0vKiB0aGUgc2l6ZSBvZiByZXNpZGVudCBhdHRyaWJ1dGUgYnkgaXRzIHJl
c2lkZW50IHNpemUgKi8KKy8qIFRoZSBzaXplIG9mIHJlc2lkZW50IGF0dHJpYnV0ZSBieSBpdHMg
cmVzaWRlbnQgc2l6ZS4gKi8KICNkZWZpbmUgQllURVNfUEVSX1JFU0lERU5UKGIpICgweDE4ICsg
KGIpKQoKIHN0YXRpY19hc3NlcnQoc2l6ZW9mKHN0cnVjdCBBVFRSSUIpID09IDB4NDgpOwpAQCAt
NDczLDE2ICs0NzAsMTYgQEAgc3RhdGljIGlubGluZSB2b2lkICphdHRyX3J1bihjb25zdCBzdHJ1
Y3QgQVRUUklCICphdHRyKQogCXJldHVybiBBZGQyUHRyKGF0dHIsIGxlMTZfdG9fY3B1KGF0dHIt
Pm5yZXMucnVuX29mZikpOwogfQoKLS8qIFN0YW5kYXJkIGluZm9ybWF0aW9uIGF0dHJpYnV0ZSAo
MHgxMCkgKi8KKy8qIFN0YW5kYXJkIGluZm9ybWF0aW9uIGF0dHJpYnV0ZSAoMHgxMCkuICovCiBz
dHJ1Y3QgQVRUUl9TVERfSU5GTyB7Ci0JX19sZTY0IGNyX3RpbWU7CQkvLyAweDAwOiBGaWxlIGNy
ZWF0aW9uIGZpbGUKLQlfX2xlNjQgbV90aW1lOwkJLy8gMHgwODogRmlsZSBtb2RpZmljYXRpb24g
dGltZQotCV9fbGU2NCBjX3RpbWU7CQkvLyAweDEwOiBMYXN0IHRpbWUgYW55IGF0dHJpYnV0ZSB3
YXMgbW9kaWZpZWQKLQlfX2xlNjQgYV90aW1lOwkJLy8gMHgxODogRmlsZSBsYXN0IGFjY2VzcyB0
aW1lCi0JZW51bSBGSUxFX0FUVFJJQlVURSBmYTsgLy8gMHgyMDogU3RhbmRhcmQgRE9TIGF0dHJp
YnV0ZXMgJiBtb3JlCi0JX19sZTMyIG1heF92ZXJfbnVtOwkvLyAweDI0OiBNYXhpbXVtIE51bWJl
ciBvZiBWZXJzaW9ucwotCV9fbGUzMiB2ZXJfbnVtOwkJLy8gMHgyODogVmVyc2lvbiBOdW1iZXIK
LQlfX2xlMzIgY2xhc3NfaWQ7CS8vIDB4MkM6IENsYXNzIElkIGZyb20gYmlkaXJlY3Rpb25hbCBD
bGFzcyBJZCBpbmRleAorCV9fbGU2NCBjcl90aW1lOwkJLy8gMHgwMDogRmlsZSBjcmVhdGlvbiBm
aWxlLgorCV9fbGU2NCBtX3RpbWU7CQkvLyAweDA4OiBGaWxlIG1vZGlmaWNhdGlvbiB0aW1lLgor
CV9fbGU2NCBjX3RpbWU7CQkvLyAweDEwOiBMYXN0IHRpbWUgYW55IGF0dHJpYnV0ZSB3YXMgbW9k
aWZpZWQuCisJX19sZTY0IGFfdGltZTsJCS8vIDB4MTg6IEZpbGUgbGFzdCBhY2Nlc3MgdGltZS4K
KwllbnVtIEZJTEVfQVRUUklCVVRFIGZhOwkvLyAweDIwOiBTdGFuZGFyZCBET1MgYXR0cmlidXRl
cyAmIG1vcmUuCisJX19sZTMyIG1heF92ZXJfbnVtOwkvLyAweDI0OiBNYXhpbXVtIE51bWJlciBv
ZiBWZXJzaW9ucy4KKwlfX2xlMzIgdmVyX251bTsJCS8vIDB4Mjg6IFZlcnNpb24gTnVtYmVyLgor
CV9fbGUzMiBjbGFzc19pZDsJLy8gMHgyQzogQ2xhc3MgSWQgZnJvbSBiaWRpcmVjdGlvbmFsIENs
YXNzIElkIGluZGV4LgogfTsKCiBzdGF0aWNfYXNzZXJ0KHNpemVvZihzdHJ1Y3QgQVRUUl9TVERf
SU5GTykgPT0gMHgzMCk7CkBAIC00OTEsMTcgKzQ4OCwxNyBAQCBzdGF0aWNfYXNzZXJ0KHNpemVv
ZihzdHJ1Y3QgQVRUUl9TVERfSU5GTykgPT0gMHgzMCk7CiAjZGVmaW5lIFNFQ1VSSVRZX0lEX0ZJ
UlNUIDB4MDAwMDAxMDAKCiBzdHJ1Y3QgQVRUUl9TVERfSU5GTzUgewotCV9fbGU2NCBjcl90aW1l
OwkJLy8gMHgwMDogRmlsZSBjcmVhdGlvbiBmaWxlCi0JX19sZTY0IG1fdGltZTsJCS8vIDB4MDg6
IEZpbGUgbW9kaWZpY2F0aW9uIHRpbWUKLQlfX2xlNjQgY190aW1lOwkJLy8gMHgxMDogTGFzdCB0
aW1lIGFueSBhdHRyaWJ1dGUgd2FzIG1vZGlmaWVkCi0JX19sZTY0IGFfdGltZTsJCS8vIDB4MTg6
IEZpbGUgbGFzdCBhY2Nlc3MgdGltZQotCWVudW0gRklMRV9BVFRSSUJVVEUgZmE7IC8vIDB4MjA6
IFN0YW5kYXJkIERPUyBhdHRyaWJ1dGVzICYgbW9yZQotCV9fbGUzMiBtYXhfdmVyX251bTsJLy8g
MHgyNDogTWF4aW11bSBOdW1iZXIgb2YgVmVyc2lvbnMKLQlfX2xlMzIgdmVyX251bTsJCS8vIDB4
Mjg6IFZlcnNpb24gTnVtYmVyCi0JX19sZTMyIGNsYXNzX2lkOwkvLyAweDJDOiBDbGFzcyBJZCBm
cm9tIGJpZGlyZWN0aW9uYWwgQ2xhc3MgSWQgaW5kZXgKKwlfX2xlNjQgY3JfdGltZTsJCS8vIDB4
MDA6IEZpbGUgY3JlYXRpb24gZmlsZS4KKwlfX2xlNjQgbV90aW1lOwkJLy8gMHgwODogRmlsZSBt
b2RpZmljYXRpb24gdGltZS4KKwlfX2xlNjQgY190aW1lOwkJLy8gMHgxMDogTGFzdCB0aW1lIGFu
eSBhdHRyaWJ1dGUgd2FzIG1vZGlmaWVkLgorCV9fbGU2NCBhX3RpbWU7CQkvLyAweDE4OiBGaWxl
IGxhc3QgYWNjZXNzIHRpbWUuCisJZW51bSBGSUxFX0FUVFJJQlVURSBmYTsJLy8gMHgyMDogU3Rh
bmRhcmQgRE9TIGF0dHJpYnV0ZXMgJiBtb3JlLgorCV9fbGUzMiBtYXhfdmVyX251bTsJLy8gMHgy
NDogTWF4aW11bSBOdW1iZXIgb2YgVmVyc2lvbnMuCisJX19sZTMyIHZlcl9udW07CQkvLyAweDI4
OiBWZXJzaW9uIE51bWJlci4KKwlfX2xlMzIgY2xhc3NfaWQ7CS8vIDB4MkM6IENsYXNzIElkIGZy
b20gYmlkaXJlY3Rpb25hbCBDbGFzcyBJZCBpbmRleC4KCiAJX19sZTMyIG93bmVyX2lkOwkvLyAw
eDMwOiBPd25lciBJZCBvZiB0aGUgdXNlciBvd25pbmcgdGhlIGZpbGUuCi0JX19sZTMyIHNlY3Vy
aXR5X2lkOwkvLyAweDM0OiBUaGUgU2VjdXJpdHkgSWQgaXMgYSBrZXkgaW4gdGhlICRTSUkgSW5k
ZXggYW5kICRTRFMKKwlfX2xlMzIgc2VjdXJpdHlfaWQ7CS8vIDB4MzQ6IFRoZSBTZWN1cml0eSBJ
ZCBpcyBhIGtleSBpbiB0aGUgJFNJSSBJbmRleCBhbmQgJFNEUy4KIAlfX2xlNjQgcXVvdGFfY2hh
cmdlOwkvLyAweDM4OgogCV9fbGU2NCB1c247CQkvLyAweDQwOiBMYXN0IFVwZGF0ZSBTZXF1ZW5j
ZSBOdW1iZXIgb2YgdGhlIGZpbGUuIFRoaXMgaXMgYSBkaXJlY3QKIAkJCQkvLyBpbmRleCBpbnRv
IHRoZSBmaWxlICRVc25Kcm5sLiBJZiB6ZXJvLCB0aGUgVVNOIEpvdXJuYWwgaXMKQEAgLTUxMCwx
NiArNTA3LDE2IEBAIHN0cnVjdCBBVFRSX1NURF9JTkZPNSB7Cgogc3RhdGljX2Fzc2VydChzaXpl
b2Yoc3RydWN0IEFUVFJfU1REX0lORk81KSA9PSAweDQ4KTsKCi0vKiBhdHRyaWJ1dGUgbGlzdCBl
bnRyeSBzdHJ1Y3R1cmUgKDB4MjApICovCisvKiBBdHRyaWJ1dGUgbGlzdCBlbnRyeSBzdHJ1Y3R1
cmUgKDB4MjApICovCiBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZIHsKLQllbnVtIEFUVFJfVFlQRSB0
eXBlOwkvLyAweDAwOiBUaGUgdHlwZSBvZiBhdHRyaWJ1dGUKLQlfX2xlMTYgc2l6ZTsJCS8vIDB4
MDQ6IFRoZSBzaXplIG9mIHRoaXMgcmVjb3JkCi0JdTggbmFtZV9sZW47CQkvLyAweDA2OiBUaGUg
bGVuZ3RoIG9mIGF0dHJpYnV0ZSBuYW1lCi0JdTggbmFtZV9vZmY7CQkvLyAweDA3OiBUaGUgb2Zm
c2V0IHRvIGF0dHJpYnV0ZSBuYW1lCi0JX19sZTY0IHZjbjsJCS8vIDB4MDg6IFN0YXJ0aW5nIFZD
TiBvZiB0aGlzIGF0dHJpYnV0ZQotCXN0cnVjdCBNRlRfUkVGIHJlZjsJLy8gMHgxMDogTUZUIHJl
Y29yZCBudW1iZXIgd2l0aCBhdHRyaWJ1dGUKLQlfX2xlMTYgaWQ7CQkvLyAweDE4OiBzdHJ1Y3Qg
QVRUUklCIElECi0JX19sZTE2IG5hbWVbM107CQkvLyAweDFBOiBKdXN0IHRvIGFsaWduLiBUbyBn
ZXQgcmVhbCBuYW1lIGNhbiB1c2UgYk5hbWVPZmZzZXQKKwllbnVtIEFUVFJfVFlQRSB0eXBlOwkv
LyAweDAwOiBUaGUgdHlwZSBvZiBhdHRyaWJ1dGUuCisJX19sZTE2IHNpemU7CQkvLyAweDA0OiBU
aGUgc2l6ZSBvZiB0aGlzIHJlY29yZC4KKwl1OCBuYW1lX2xlbjsJCS8vIDB4MDY6IFRoZSBsZW5n
dGggb2YgYXR0cmlidXRlIG5hbWUuCisJdTggbmFtZV9vZmY7CQkvLyAweDA3OiBUaGUgb2Zmc2V0
IHRvIGF0dHJpYnV0ZSBuYW1lLgorCV9fbGU2NCB2Y247CQkvLyAweDA4OiBTdGFydGluZyBWQ04g
b2YgdGhpcyBhdHRyaWJ1dGUuCisJc3RydWN0IE1GVF9SRUYgcmVmOwkvLyAweDEwOiBNRlQgcmVj
b3JkIG51bWJlciB3aXRoIGF0dHJpYnV0ZS4KKwlfX2xlMTYgaWQ7CQkvLyAweDE4OiBzdHJ1Y3Qg
QVRUUklCIElELgorCV9fbGUxNiBuYW1lWzNdOwkJLy8gMHgxQTogSnVzdCB0byBhbGlnbi4gVG8g
Z2V0IHJlYWwgbmFtZSBjYW4gdXNlIGJOYW1lT2Zmc2V0LgoKIH07IC8vIHNpemVvZigweDIwKQoK
QEAgLTUzMSw3ICs1MjgsNyBAQCBzdGF0aWMgaW5saW5lIHUzMiBsZV9zaXplKHU4IG5hbWVfbGVu
KQogCQkJIG5hbWVfbGVuICogc2l6ZW9mKHNob3J0KSk7CiB9CgotLyogcmV0dXJucyAwIGlmICdh
dHRyJyBoYXMgdGhlIHNhbWUgdHlwZSBhbmQgbmFtZSAqLworLyogUmV0dXJucyAwIGlmICdhdHRy
JyBoYXMgdGhlIHNhbWUgdHlwZSBhbmQgbmFtZS4gKi8KIHN0YXRpYyBpbmxpbmUgaW50IGxlX2Nt
cChjb25zdCBzdHJ1Y3QgQVRUUl9MSVNUX0VOVFJZICpsZSwKIAkJCSBjb25zdCBzdHJ1Y3QgQVRU
UklCICphdHRyKQogewpAQCAtNTQ3LDMyICs1NDQsMzIgQEAgc3RhdGljIGlubGluZSBfX2xlMTYg
Y29uc3QgKmxlX25hbWUoY29uc3Qgc3RydWN0IEFUVFJfTElTVF9FTlRSWSAqbGUpCiAJcmV0dXJu
IEFkZDJQdHIobGUsIGxlLT5uYW1lX29mZik7CiB9CgotLyogRmlsZSBuYW1lIHR5cGVzICh0aGUg
ZmllbGQgdHlwZSBpbiBzdHJ1Y3QgQVRUUl9GSUxFX05BTUUgKSAqLworLyogRmlsZSBuYW1lIHR5
cGVzICh0aGUgZmllbGQgdHlwZSBpbiBzdHJ1Y3QgQVRUUl9GSUxFX05BTUUpLiAqLwogI2RlZmlu
ZSBGSUxFX05BTUVfUE9TSVggICAwCiAjZGVmaW5lIEZJTEVfTkFNRV9VTklDT0RFIDEKICNkZWZp
bmUgRklMRV9OQU1FX0RPUwkgIDIKICNkZWZpbmUgRklMRV9OQU1FX1VOSUNPREVfQU5EX0RPUyAo
RklMRV9OQU1FX0RPUyB8IEZJTEVfTkFNRV9VTklDT0RFKQoKLS8qIEZpbGVuYW1lIGF0dHJpYnV0
ZSBzdHJ1Y3R1cmUgKDB4MzApICovCisvKiBGaWxlbmFtZSBhdHRyaWJ1dGUgc3RydWN0dXJlICgw
eDMwKS4gKi8KIHN0cnVjdCBOVEZTX0RVUF9JTkZPIHsKLQlfX2xlNjQgY3JfdGltZTsJCS8vIDB4
MDA6IEZpbGUgY3JlYXRpb24gZmlsZQotCV9fbGU2NCBtX3RpbWU7CQkvLyAweDA4OiBGaWxlIG1v
ZGlmaWNhdGlvbiB0aW1lCi0JX19sZTY0IGNfdGltZTsJCS8vIDB4MTA6IExhc3QgdGltZSBhbnkg
YXR0cmlidXRlIHdhcyBtb2RpZmllZAotCV9fbGU2NCBhX3RpbWU7CQkvLyAweDE4OiBGaWxlIGxh
c3QgYWNjZXNzIHRpbWUKLQlfX2xlNjQgYWxsb2Nfc2l6ZTsJLy8gMHgyMDogRGF0YSBhdHRyaWJ1
dGUgYWxsb2NhdGVkIHNpemUsIG11bHRpcGxlIG9mIGNsdXN0ZXIgc2l6ZQotCV9fbGU2NCBkYXRh
X3NpemU7CS8vIDB4Mjg6IERhdGEgYXR0cmlidXRlIHNpemUgPD0gRGF0YWFsbG9jX3NpemUKLQll
bnVtIEZJTEVfQVRUUklCVVRFIGZhOwkvLyAweDMwOiBTdGFuZGFyZCBET1MgYXR0cmlidXRlcyAm
IG1vcmUKLQlfX2xlMTYgZWFfc2l6ZTsJCS8vIDB4MzQ6IFBhY2tlZCBFQXMKLQlfX2xlMTYgcmVw
YXJzZTsJCS8vIDB4MzY6IFVzZWQgYnkgUmVwYXJzZQorCV9fbGU2NCBjcl90aW1lOwkJLy8gMHgw
MDogRmlsZSBjcmVhdGlvbiBmaWxlLgorCV9fbGU2NCBtX3RpbWU7CQkvLyAweDA4OiBGaWxlIG1v
ZGlmaWNhdGlvbiB0aW1lLgorCV9fbGU2NCBjX3RpbWU7CQkvLyAweDEwOiBMYXN0IHRpbWUgYW55
IGF0dHJpYnV0ZSB3YXMgbW9kaWZpZWQuCisJX19sZTY0IGFfdGltZTsJCS8vIDB4MTg6IEZpbGUg
bGFzdCBhY2Nlc3MgdGltZS4KKwlfX2xlNjQgYWxsb2Nfc2l6ZTsJLy8gMHgyMDogRGF0YSBhdHRy
aWJ1dGUgYWxsb2NhdGVkIHNpemUsIG11bHRpcGxlIG9mIGNsdXN0ZXIgc2l6ZS4KKwlfX2xlNjQg
ZGF0YV9zaXplOwkvLyAweDI4OiBEYXRhIGF0dHJpYnV0ZSBzaXplIDw9IERhdGFhbGxvY19zaXpl
LgorCWVudW0gRklMRV9BVFRSSUJVVEUgZmE7CS8vIDB4MzA6IFN0YW5kYXJkIERPUyBhdHRyaWJ1
dGVzICYgbW9yZS4KKwlfX2xlMTYgZWFfc2l6ZTsJCS8vIDB4MzQ6IFBhY2tlZCBFQXMuCisJX19s
ZTE2IHJlcGFyc2U7CQkvLyAweDM2OiBVc2VkIGJ5IFJlcGFyc2UuCgogfTsgLy8gMHgzOAoKIHN0
cnVjdCBBVFRSX0ZJTEVfTkFNRSB7Ci0Jc3RydWN0IE1GVF9SRUYgaG9tZTsJLy8gMHgwMDogTUZU
IHJlY29yZCBmb3IgZGlyZWN0b3J5Ci0Jc3RydWN0IE5URlNfRFVQX0lORk8gZHVwOy8vIDB4MDgK
LQl1OCBuYW1lX2xlbjsJCS8vIDB4NDA6IEZpbGUgbmFtZSBsZW5ndGggaW4gd29yZHMKLQl1OCB0
eXBlOwkJLy8gMHg0MTogRmlsZSBuYW1lIHR5cGUKLQlfX2xlMTYgbmFtZVtdOwkJLy8gMHg0Mjog
RmlsZSBuYW1lCisJc3RydWN0IE1GVF9SRUYgaG9tZTsJLy8gMHgwMDogTUZUIHJlY29yZCBmb3Ig
ZGlyZWN0b3J5LgorCXN0cnVjdCBOVEZTX0RVUF9JTkZPIGR1cDsvLyAweDA4OgorCXU4IG5hbWVf
bGVuOwkJLy8gMHg0MDogRmlsZSBuYW1lIGxlbmd0aCBpbiB3b3Jkcy4KKwl1OCB0eXBlOwkJLy8g
MHg0MTogRmlsZSBuYW1lIHR5cGUuCisJX19sZTE2IG5hbWVbXTsJCS8vIDB4NDI6IEZpbGUgbmFt
ZS4KIH07Cgogc3RhdGljX2Fzc2VydChzaXplb2YoKChzdHJ1Y3QgQVRUUl9GSUxFX05BTUUgKilO
VUxMKS0+ZHVwKSA9PSAweDM4KTsKQEAgLTU4Nyw3ICs1ODQsNyBAQCBzdGF0aWMgaW5saW5lIHN0
cnVjdCBBVFRSSUIgKmF0dHJfZnJvbV9uYW1lKHN0cnVjdCBBVFRSX0ZJTEVfTkFNRSAqZm5hbWUp
Cgogc3RhdGljIGlubGluZSB1MTYgZm5hbWVfZnVsbF9zaXplKGNvbnN0IHN0cnVjdCBBVFRSX0ZJ
TEVfTkFNRSAqZm5hbWUpCiB7Ci0JLy8gZG9uJ3QgcmV0dXJuIHN0cnVjdF9zaXplKGZuYW1lLCBu
YW1lLCBmbmFtZS0+bmFtZV9sZW4pOworCS8qIERvbid0IHJldHVybiBzdHJ1Y3Rfc2l6ZShmbmFt
ZSwgbmFtZSwgZm5hbWUtPm5hbWVfbGVuKTsgKi8KIAlyZXR1cm4gb2Zmc2V0b2Yoc3RydWN0IEFU
VFJfRklMRV9OQU1FLCBuYW1lKSArCiAJICAgICAgIGZuYW1lLT5uYW1lX2xlbiAqIHNpemVvZihz
aG9ydCk7CiB9CkBAIC02MDEsMzIgKzU5OCwzMiBAQCBzdGF0aWMgaW5saW5lIHU4IHBhaXJlZF9u
YW1lKHU4IHR5cGUpCiAJcmV0dXJuIEZJTEVfTkFNRV9QT1NJWDsKIH0KCi0vKiBJbmRleCBlbnRy
eSBkZWZpbmVzICggdGhlIGZpZWxkIGZsYWdzIGluIE50ZnNEaXJFbnRyeSApICovCisvKiBJbmRl
eCBlbnRyeSBkZWZpbmVzICggdGhlIGZpZWxkIGZsYWdzIGluIE50ZnNEaXJFbnRyeSApLiAqLwog
I2RlZmluZSBOVEZTX0lFX0hBU19TVUJOT0RFUwljcHVfdG9fbGUxNigxKQogI2RlZmluZSBOVEZT
X0lFX0xBU1QJCWNwdV90b19sZTE2KDIpCgotLyogRGlyZWN0b3J5IGVudHJ5IHN0cnVjdHVyZSAq
LworLyogRGlyZWN0b3J5IGVudHJ5IHN0cnVjdHVyZS4gKi8KIHN0cnVjdCBOVEZTX0RFIHsKIAl1
bmlvbiB7Ci0JCXN0cnVjdCBNRlRfUkVGIHJlZjsgLy8gMHgwMDogTUZUIHJlY29yZCBudW1iZXIg
d2l0aCB0aGlzIGZpbGUKKwkJc3RydWN0IE1GVF9SRUYgcmVmOyAvLyAweDAwOiBNRlQgcmVjb3Jk
IG51bWJlciB3aXRoIHRoaXMgZmlsZS4KIAkJc3RydWN0IHsKIAkJCV9fbGUxNiBkYXRhX29mZjsg
IC8vIDB4MDA6CiAJCQlfX2xlMTYgZGF0YV9zaXplOyAvLyAweDAyOgotCQkJX19sZTMyIHJlczsJ
ICAvLyAweDA0OiBtdXN0IGJlIDAKKwkJCV9fbGUzMiByZXM7CSAgLy8gMHgwNDogTXVzdCBiZSAw
LgogCQl9IHZpZXc7CiAJfTsKLQlfX2xlMTYgc2l6ZTsJCS8vIDB4MDg6IFRoZSBzaXplIG9mIHRo
aXMgZW50cnkKLQlfX2xlMTYga2V5X3NpemU7CS8vIDB4MEE6IFRoZSBzaXplIG9mIEZpbGUgbmFt
ZSBsZW5ndGggaW4gYnl0ZXMgKyAweDQyCi0JX19sZTE2IGZsYWdzOwkJLy8gMHgwQzogRW50cnkg
ZmxhZ3M6IE5URlNfSUVfWFhYCisJX19sZTE2IHNpemU7CQkvLyAweDA4OiBUaGUgc2l6ZSBvZiB0
aGlzIGVudHJ5LgorCV9fbGUxNiBrZXlfc2l6ZTsJLy8gMHgwQTogVGhlIHNpemUgb2YgRmlsZSBu
YW1lIGxlbmd0aCBpbiBieXRlcyArIDB4NDIuCisJX19sZTE2IGZsYWdzOwkJLy8gMHgwQzogRW50
cnkgZmxhZ3M6IE5URlNfSUVfWFhYLgogCV9fbGUxNiByZXM7CQkvLyAweDBFOgoKLQkvLyBIZXJl
IGFueSBpbmRleGVkIGF0dHJpYnV0ZSBjYW4gYmUgcGxhY2VkCisJLy8gSGVyZSBhbnkgaW5kZXhl
ZCBhdHRyaWJ1dGUgY2FuIGJlIHBsYWNlZC4KIAkvLyBPbmUgb2YgdGhlbSBpczoKIAkvLyBzdHJ1
Y3QgQVRUUl9GSUxFX05BTUUgQXR0ckZpbGVOYW1lOwogCS8vCgogCS8vIFRoZSBsYXN0IDggYnl0
ZXMgb2YgdGhpcyBzdHJ1Y3R1cmUgY29udGFpbnMKLQkvLyB0aGUgVkJOIG9mIHN1Ym5vZGUKKwkv
LyB0aGUgVkJOIG9mIHN1Ym5vZGUuCiAJLy8gISEhIE5vdGUgISEhCiAJLy8gVGhpcyBmaWVsZCBp
cyBwcmVzZW50ZWQgb25seSBpZiAoZmxhZ3MgJiBOVEZTX0lFX0hBU19TVUJOT0RFUykKIAkvLyBf
X2xlNjQgdmJuOwpAQCAtNjk2LDExICs2OTMsMTEgQEAgc3RhdGljIGlubGluZSBib29sIGRlX2hh
c192Y25fZXgoY29uc3Qgc3RydWN0IE5URlNfREUgKmUpCgogc3RydWN0IElOREVYX0hEUiB7CiAJ
X19sZTMyIGRlX29mZjsJLy8gMHgwMDogVGhlIG9mZnNldCBmcm9tIHRoZSBzdGFydCBvZiB0aGlz
IHN0cnVjdHVyZQotCQkJLy8gdG8gdGhlIGZpcnN0IE5URlNfREUKKwkJCS8vIHRvIHRoZSBmaXJz
dCBOVEZTX0RFLgogCV9fbGUzMiB1c2VkOwkvLyAweDA0OiBUaGUgc2l6ZSBvZiB0aGlzIHN0cnVj
dHVyZSBwbHVzIGFsbAotCQkJLy8gZW50cmllcyAocXVhZC13b3JkIGFsaWduZWQpCi0JX19sZTMy
IHRvdGFsOwkvLyAweDA4OiBUaGUgYWxsb2NhdGVkIHNpemUgb2YgZm9yIHRoaXMgc3RydWN0dXJl
IHBsdXMgYWxsIGVudHJpZXMKLQl1OCBmbGFnczsJLy8gMHgwQzogMHgwMCA9IFNtYWxsIGRpcmVj
dG9yeSwgMHgwMSA9IExhcmdlIGRpcmVjdG9yeQorCQkJLy8gZW50cmllcyAocXVhZC13b3JkIGFs
aWduZWQpLgorCV9fbGUzMiB0b3RhbDsJLy8gMHgwODogVGhlIGFsbG9jYXRlZCBzaXplIG9mIGZv
ciB0aGlzIHN0cnVjdHVyZSBwbHVzIGFsbCBlbnRyaWVzLgorCXU4IGZsYWdzOwkvLyAweDBDOiAw
eDAwID0gU21hbGwgZGlyZWN0b3J5LCAweDAxID0gTGFyZ2UgZGlyZWN0b3J5LgogCXU4IHJlc1sz
XTsKCiAJLy8KQEAgLTc3MSw3ICs3NjgsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaWJfaXNfbGVh
Zihjb25zdCBzdHJ1Y3QgSU5ERVhfQlVGRkVSICppYikKIAlyZXR1cm4gIShpYi0+aWhkci5mbGFn
cyAmIDEpOwogfQoKLS8qIEluZGV4IHJvb3Qgc3RydWN0dXJlICggMHg5MCApICovCisvKiBJbmRl
eCByb290IHN0cnVjdHVyZSAoIDB4OTAgKS4gKi8KIGVudW0gQ09MTEFUSU9OX1JVTEUgewogCU5U
RlNfQ09MTEFUSU9OX1RZUEVfQklOQVJZCT0gY3B1X3RvX2xlMzIoMCksCiAJLy8gJEkzMApAQCAt
NzkwLDEwICs3ODcsMTAgQEAgc3RhdGljX2Fzc2VydChzaXplb2YoZW51bSBDT0xMQVRJT05fUlVM
RSkgPT0gNCk7CgogLy8KIHN0cnVjdCBJTkRFWF9ST09UIHsKLQllbnVtIEFUVFJfVFlQRSB0eXBl
OwkvLyAweDAwOiBUaGUgdHlwZSBvZiBhdHRyaWJ1dGUgdG8gaW5kZXggb24KLQllbnVtIENPTExB
VElPTl9SVUxFIHJ1bGU7IC8vIDB4MDQ6IFRoZSBydWxlCi0JX19sZTMyIGluZGV4X2Jsb2NrX3Np
emU7Ly8gMHgwODogVGhlIHNpemUgb2YgaW5kZXggcmVjb3JkCi0JdTggaW5kZXhfYmxvY2tfY2xz
dDsJLy8gMHgwQzogVGhlIG51bWJlciBvZiBjbHVzdGVycyBvciBzZWN0b3JzIHBlciBpbmRleAor
CWVudW0gQVRUUl9UWVBFIHR5cGU7CS8vIDB4MDA6IFRoZSB0eXBlIG9mIGF0dHJpYnV0ZSB0byBp
bmRleCBvbi4KKwllbnVtIENPTExBVElPTl9SVUxFIHJ1bGU7IC8vIDB4MDQ6IFRoZSBydWxlLgor
CV9fbGUzMiBpbmRleF9ibG9ja19zaXplOy8vIDB4MDg6IFRoZSBzaXplIG9mIGluZGV4IHJlY29y
ZC4KKwl1OCBpbmRleF9ibG9ja19jbHN0OwkvLyAweDBDOiBUaGUgbnVtYmVyIG9mIGNsdXN0ZXJz
IG9yIHNlY3RvcnMgcGVyIGluZGV4LgogCXU4IHJlc1szXTsKIAlzdHJ1Y3QgSU5ERVhfSERSIGlo
ZHI7CS8vIDB4MTA6CiB9OwpAQCAtODIyLDI0ICs4MTksMjQgQEAgc3RydWN0IFZPTFVNRV9JTkZP
IHsKICNkZWZpbmUgTlRGU19BVFRSX01VU1RfQkVfUkVTSURFTlQJY3B1X3RvX2xlMzIoMHgwMDAw
MDA0MCkKICNkZWZpbmUgTlRGU19BVFRSX0xPR19BTFdBWVMJCWNwdV90b19sZTMyKDB4MDAwMDAw
ODApCgotLyogJEF0dHJEZWYgZmlsZSBlbnRyeSAqLworLyogJEF0dHJEZWYgZmlsZSBlbnRyeS4g
Ki8KIHN0cnVjdCBBVFRSX0RFRl9FTlRSWSB7Ci0JX19sZTE2IG5hbWVbMHg0MF07CS8vIDB4MDA6
IEF0dHIgbmFtZQotCWVudW0gQVRUUl9UWVBFIHR5cGU7CS8vIDB4ODA6IHN0cnVjdCBBVFRSSUIg
dHlwZQorCV9fbGUxNiBuYW1lWzB4NDBdOwkvLyAweDAwOiBBdHRyIG5hbWUuCisJZW51bSBBVFRS
X1RZUEUgdHlwZTsJLy8gMHg4MDogc3RydWN0IEFUVFJJQiB0eXBlLgogCV9fbGUzMiByZXM7CQkv
LyAweDg0OgogCWVudW0gQ09MTEFUSU9OX1JVTEUgcnVsZTsgLy8gMHg4ODoKLQlfX2xlMzIgZmxh
Z3M7CQkvLyAweDhDOiBOVEZTX0FUVFJfWFhYIChzZWUgYWJvdmUpCi0JX19sZTY0IG1pbl9zejsJ
CS8vIDB4OTA6IE1pbmltdW0gYXR0cmlidXRlIGRhdGEgc2l6ZQotCV9fbGU2NCBtYXhfc3o7CQkv
LyAweDk4OiBNYXhpbXVtIGF0dHJpYnV0ZSBkYXRhIHNpemUKKwlfX2xlMzIgZmxhZ3M7CQkvLyAw
eDhDOiBOVEZTX0FUVFJfWFhYIChzZWUgYWJvdmUpLgorCV9fbGU2NCBtaW5fc3o7CQkvLyAweDkw
OiBNaW5pbXVtIGF0dHJpYnV0ZSBkYXRhIHNpemUuCisJX19sZTY0IG1heF9zejsJCS8vIDB4OTg6
IE1heGltdW0gYXR0cmlidXRlIGRhdGEgc2l6ZS4KIH07Cgogc3RhdGljX2Fzc2VydChzaXplb2Yo
c3RydWN0IEFUVFJfREVGX0VOVFJZKSA9PSAweGEwKTsKCiAvKiBPYmplY3QgSUQgKDB4NDApICov
CiBzdHJ1Y3QgT0JKRUNUX0lEIHsKLQlzdHJ1Y3QgR1VJRCBPYmpJZDsJLy8gMHgwMDogVW5pcXVl
IElkIGFzc2lnbmVkIHRvIGZpbGUKLQlzdHJ1Y3QgR1VJRCBCaXJ0aFZvbHVtZUlkOy8vIDB4MTA6
IEJpcnRoIFZvbHVtZSBJZCBpcyB0aGUgT2JqZWN0IElkIG9mIHRoZSBWb2x1bWUgb24KLQkJCQkv
LyB3aGljaCB0aGUgT2JqZWN0IElkIHdhcyBhbGxvY2F0ZWQuIEl0IG5ldmVyIGNoYW5nZXMKKwlz
dHJ1Y3QgR1VJRCBPYmpJZDsJLy8gMHgwMDogVW5pcXVlIElkIGFzc2lnbmVkIHRvIGZpbGUuCisJ
c3RydWN0IEdVSUQgQmlydGhWb2x1bWVJZDsgLy8gMHgxMDogQmlydGggVm9sdW1lIElkIGlzIHRo
ZSBPYmplY3QgSWQgb2YgdGhlIFZvbHVtZSBvbi4KKwkJCQkvLyB3aGljaCB0aGUgT2JqZWN0IElk
IHdhcyBhbGxvY2F0ZWQuIEl0IG5ldmVyIGNoYW5nZXMuCiAJc3RydWN0IEdVSUQgQmlydGhPYmpl
Y3RJZDsgLy8gMHgyMDogQmlydGggT2JqZWN0IElkIGlzIHRoZSBmaXJzdCBPYmplY3QgSWQgdGhh
dCB3YXMKIAkJCQkvLyBldmVyIGFzc2lnbmVkIHRvIHRoaXMgTUZUIFJlY29yZC4gSS5lLiBJZiB0
aGUgT2JqZWN0IElkCiAJCQkJLy8gaXMgY2hhbmdlZCBmb3Igc29tZSByZWFzb24sIHRoaXMgZmll
bGQgd2lsbCByZWZsZWN0IHRoZQpAQCAtODU1LDE1ICs4NTIsMTUgQEAgc3RhdGljX2Fzc2VydChz
aXplb2Yoc3RydWN0IE9CSkVDVF9JRCkgPT0gMHg0MCk7CiAvKiBPIERpcmVjdG9yeSBlbnRyeSBz
dHJ1Y3R1cmUgKCBydWxlID0gMHgxMyApICovCiBzdHJ1Y3QgTlRGU19ERV9PIHsKIAlzdHJ1Y3Qg
TlRGU19ERSBkZTsKLQlzdHJ1Y3QgR1VJRCBPYmpJZDsJLy8gMHgxMDogVW5pcXVlIElkIGFzc2ln
bmVkIHRvIGZpbGUKLQlzdHJ1Y3QgTUZUX1JFRiByZWY7CS8vIDB4MjA6IE1GVCByZWNvcmQgbnVt
YmVyIHdpdGggdGhpcyBmaWxlCisJc3RydWN0IEdVSUQgT2JqSWQ7CS8vIDB4MTA6IFVuaXF1ZSBJ
ZCBhc3NpZ25lZCB0byBmaWxlLgorCXN0cnVjdCBNRlRfUkVGIHJlZjsJLy8gMHgyMDogTUZUIHJl
Y29yZCBudW1iZXIgd2l0aCB0aGlzIGZpbGUuCiAJc3RydWN0IEdVSUQgQmlydGhWb2x1bWVJZDsg
Ly8gMHgyODogQmlydGggVm9sdW1lIElkIGlzIHRoZSBPYmplY3QgSWQgb2YgdGhlIFZvbHVtZSBv
bgotCQkJCS8vIHdoaWNoIHRoZSBPYmplY3QgSWQgd2FzIGFsbG9jYXRlZC4gSXQgbmV2ZXIgY2hh
bmdlcworCQkJCS8vIHdoaWNoIHRoZSBPYmplY3QgSWQgd2FzIGFsbG9jYXRlZC4gSXQgbmV2ZXIg
Y2hhbmdlcy4KIAlzdHJ1Y3QgR1VJRCBCaXJ0aE9iamVjdElkOyAvLyAweDM4OiBCaXJ0aCBPYmpl
Y3QgSWQgaXMgdGhlIGZpcnN0IE9iamVjdCBJZCB0aGF0IHdhcwogCQkJCS8vIGV2ZXIgYXNzaWdu
ZWQgdG8gdGhpcyBNRlQgUmVjb3JkLiBJLmUuIElmIHRoZSBPYmplY3QgSWQKIAkJCQkvLyBpcyBj
aGFuZ2VkIGZvciBzb21lIHJlYXNvbiwgdGhpcyBmaWVsZCB3aWxsIHJlZmxlY3QgdGhlCiAJCQkJ
Ly8gb3JpZ2luYWwgdmFsdWUgb2YgdGhlIE9iamVjdCBJZC4KLQkJCQkvLyBUaGlzIGZpZWxkIGlz
IHZhbGlkIGlmIGRhdGFfc2l6ZSA9PSAweDQ4CisJCQkJLy8gVGhpcyBmaWVsZCBpcyB2YWxpZCBp
ZiBkYXRhX3NpemUgPT0gMHg0OC4KIAlzdHJ1Y3QgR1VJRCBCaXJ0aERvbWFpbklkOyAvLyAweDQ4
OiBEb21haW4gSWQgaXMgY3VycmVudGx5IHVudXNlZCBidXQgaXQgaXMgaW50ZW5kZWQKIAkJCQkv
LyB0byBiZSB1c2VkIGluIGEgbmV0d29yayBlbnZpcm9ubWVudCB3aGVyZSB0aGUgbG9jYWwKIAkJ
CQkvLyBtYWNoaW5lIGlzIHBhcnQgb2YgYSBXaW5kb3dzIDIwMDAgRG9tYWluLiBUaGlzIG1heSBi
ZQpAQCAtOTA1LDEzICs5MDIsMTMgQEAgc3RydWN0IFNFQ1VSSVRZX0tFWSB7CgogLyogU2VjdXJp
dHkgZGVzY3JpcHRvcnMgKHRoZSBjb250ZW50IG9mICRTZWN1cmU6OlNEUyBkYXRhIHN0cmVhbSkg
Ki8KIHN0cnVjdCBTRUNVUklUWV9IRFIgewotCXN0cnVjdCBTRUNVUklUWV9LRVkga2V5OwkvLyAw
eDAwOiBTZWN1cml0eSBLZXkKLQlfX2xlNjQgb2ZmOwkJCS8vIDB4MDg6IE9mZnNldCBvZiB0aGlz
IGVudHJ5IGluIHRoZSBmaWxlCi0JX19sZTMyIHNpemU7CQkJLy8gMHgxMDogU2l6ZSBvZiB0aGlz
IGVudHJ5LCA4IGJ5dGUgYWxpZ25lZAotCS8vCi0JLy8gU2VjdXJpdHkgZGVzY3JpcHRvciBpdHNl
bGYgaXMgcGxhY2VkIGhlcmUKLQkvLyBUb3RhbCBzaXplIGlzIDE2IGJ5dGUgYWxpZ25lZAotCS8v
CisJc3RydWN0IFNFQ1VSSVRZX0tFWSBrZXk7CS8vIDB4MDA6IFNlY3VyaXR5IEtleS4KKwlfX2xl
NjQgb2ZmOwkJCS8vIDB4MDg6IE9mZnNldCBvZiB0aGlzIGVudHJ5IGluIHRoZSBmaWxlLgorCV9f
bGUzMiBzaXplOwkJCS8vIDB4MTA6IFNpemUgb2YgdGhpcyBlbnRyeSwgOCBieXRlIGFsaWduZWQu
CisJLyoKKwkgKiBTZWN1cml0eSBkZXNjcmlwdG9yIGl0c2VsZiBpcyBwbGFjZWQgaGVyZS4KKwkg
KiBUb3RhbCBzaXplIGlzIDE2IGJ5dGUgYWxpZ25lZC4KKwkgKi8KIH0gX19wYWNrZWQ7CgogI2Rl
ZmluZSBTSVpFT0ZfU0VDVVJJVFlfSERSIDB4MTQKQEAgLTk0Niw4ICs5NDMsOCBAQCBzdGF0aWNf
YXNzZXJ0KG9mZnNldG9mKHN0cnVjdCBSRVBBUlNFX0tFWSwgcmVmKSA9PSAweDA0KTsKIC8qIFJl
cGFyc2UgRGlyZWN0b3J5IGVudHJ5IHN0cnVjdHVyZSAqLwogc3RydWN0IE5URlNfREVfUiB7CiAJ
c3RydWN0IE5URlNfREUgZGU7Ci0Jc3RydWN0IFJFUEFSU0VfS0VZIGtleTsJCS8vIDB4MTA6IFJl
cGFyc2UgS2V5Ci0JdTMyIHplcm87CQkJLy8gMHgxYworCXN0cnVjdCBSRVBBUlNFX0tFWSBrZXk7
CQkvLyAweDEwOiBSZXBhcnNlIEtleS4KKwl1MzIgemVybzsJCQkvLyAweDFjOgogfTsgLy8gc2l6
ZW9mKCkgPSAweDIwCgogc3RhdGljX2Fzc2VydChzaXplb2Yoc3RydWN0IE5URlNfREVfUikgPT0g
MHgyMCk7CkBAIC05ODksNjkgKzk4Niw2MyBAQCBzdHJ1Y3QgUkVQQVJTRV9QT0lOVCB7Cgogc3Rh
dGljX2Fzc2VydChzaXplb2Yoc3RydWN0IFJFUEFSU0VfUE9JTlQpID09IDB4MTgpOwoKLS8vCi0v
LyBNYXhpbXVtIGFsbG93ZWQgc2l6ZSBvZiB0aGUgcmVwYXJzZSBkYXRhLgotLy8KKy8qIE1heGlt
dW0gYWxsb3dlZCBzaXplIG9mIHRoZSByZXBhcnNlIGRhdGEuICovCiAjZGVmaW5lIE1BWElNVU1f
UkVQQVJTRV9EQVRBX0JVRkZFUl9TSVpFCSgxNiAqIDEwMjQpCgotLy8KLS8vIFRoZSB2YWx1ZSBv
ZiB0aGUgZm9sbG93aW5nIGNvbnN0YW50IG5lZWRzIHRvIHNhdGlzZnkgdGhlIGZvbGxvd2luZwot
Ly8gY29uZGl0aW9uczoKLS8vICAoMSkgQmUgYXQgbGVhc3QgYXMgbGFyZ2UgYXMgdGhlIGxhcmdl
c3Qgb2YgdGhlIHJlc2VydmVkIHRhZ3MuCi0vLyAgKDIpIEJlIHN0cmljdGx5IHNtYWxsZXIgdGhh
biBhbGwgdGhlIHRhZ3MgaW4gdXNlLgotLy8KKy8qCisgKiBUaGUgdmFsdWUgb2YgdGhlIGZvbGxv
d2luZyBjb25zdGFudCBuZWVkcyB0byBzYXRpc2Z5IHRoZSBmb2xsb3dpbmcKKyAqIGNvbmRpdGlv
bnM6CisgKiAgKDEpIEJlIGF0IGxlYXN0IGFzIGxhcmdlIGFzIHRoZSBsYXJnZXN0IG9mIHRoZSBy
ZXNlcnZlZCB0YWdzLgorICogICgyKSBCZSBzdHJpY3RseSBzbWFsbGVyIHRoYW4gYWxsIHRoZSB0
YWdzIGluIHVzZS4KKyAqLwogI2RlZmluZSBJT19SRVBBUlNFX1RBR19SRVNFUlZFRF9SQU5HRQkJ
MQoKLS8vCi0vLyBUaGUgcmVwYXJzZSB0YWdzIGFyZSBhIFVMT05HLiBUaGUgMzIgYml0cyBhcmUg
bGFpZCBvdXQgYXMgZm9sbG93czoKLS8vCi0vLyAgIDMgMyAyIDIgMiAyIDIgMiAyIDIgMiAyIDEg
MSAxIDEgMSAxIDEgMSAxIDEKLS8vICAgMSAwIDkgOCA3IDYgNSA0IDMgMiAxIDAgOSA4IDcgNiA1
IDQgMyAyIDEgMCA5IDggNyA2IDUgNCAzIDIgMSAwCi0vLyAgKy0rLSstKy0rLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKLS8vICB8TXxSfE58
UnwJICBSZXNlcnZlZCBiaXRzICAgICB8CSAgICBSZXBhcnNlIFRhZyBWYWx1ZQkgICAgfAotLy8g
ICstKy0rLSstKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0rCi0vLwotLy8gTSBpcyB0aGUgTWljcm9zb2Z0IGJpdC4gV2hlbiBzZXQgdG8gMSwg
aXQgZGVub3RlcyBhIHRhZyBvd25lZCBieSBNaWNyb3NvZnQuCi0vLyAgIEFsbCBJU1ZzIG11c3Qg
dXNlIGEgdGFnIHdpdGggYSAwIGluIHRoaXMgcG9zaXRpb24uCi0vLyAgIE5vdGU6IElmIGEgTWlj
cm9zb2Z0IHRhZyBpcyB1c2VkIGJ5IG5vbi1NaWNyb3NvZnQgc29mdHdhcmUsIHRoZQotLy8gICBi
ZWhhdmlvciBpcyBub3QgZGVmaW5lZC4KLS8vCi0vLyBSIGlzIHJlc2VydmVkLiAgTXVzdCBiZSB6
ZXJvIGZvciBub24tTWljcm9zb2Z0IHRhZ3MuCi0vLwotLy8gTiBpcyBuYW1lIHN1cnJvZ2F0ZS4g
V2hlbiBzZXQgdG8gMSwgdGhlIGZpbGUgcmVwcmVzZW50cyBhbm90aGVyIG5hbWVkCi0vLyAgIGVu
dGl0eSBpbiB0aGUgc3lzdGVtLgotLy8KLS8vIFRoZSBNIGFuZCBOIGJpdHMgYXJlIE9SLWFibGUu
Ci0vLyBUaGUgZm9sbG93aW5nIG1hY3JvcyBjaGVjayBmb3IgdGhlIE0gYW5kIE4gYml0IHZhbHVl
czoKLS8vCisvKgorICogVGhlIHJlcGFyc2UgdGFncyBhcmUgYSBVTE9ORy4gVGhlIDMyIGJpdHMg
YXJlIGxhaWQgb3V0IGFzIGZvbGxvd3M6CisgKgorICogICAzIDMgMiAyIDIgMiAyIDIgMiAyIDIg
MiAxIDEgMSAxIDEgMSAxIDEgMSAxCisgKiAgIDEgMCA5IDggNyA2IDUgNCAzIDIgMSAwIDkgOCA3
IDYgNSA0IDMgMiAxIDAgOSA4IDcgNiA1IDQgMyAyIDEgMAorICogICstKy0rLSstKy0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisgKiAgfE18
UnxOfFJ8CSAgUmVzZXJ2ZWQgYml0cyAgICAgfAkgICAgUmVwYXJzZSBUYWcgVmFsdWUJICAgIHwK
KyAqICArLSstKy0rLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tKworICoKKyAqIE0gaXMgdGhlIE1pY3Jvc29mdCBiaXQuIFdoZW4gc2V0IHRv
IDEsIGl0IGRlbm90ZXMgYSB0YWcgb3duZWQgYnkgTWljcm9zb2Z0LgorICogICBBbGwgSVNWcyBt
dXN0IHVzZSBhIHRhZyB3aXRoIGEgMCBpbiB0aGlzIHBvc2l0aW9uLgorICogICBOb3RlOiBJZiBh
IE1pY3Jvc29mdCB0YWcgaXMgdXNlZCBieSBub24tTWljcm9zb2Z0IHNvZnR3YXJlLCB0aGUKKyAq
ICAgYmVoYXZpb3IgaXMgbm90IGRlZmluZWQuCisgKgorICogUiBpcyByZXNlcnZlZC4gIE11c3Qg
YmUgemVybyBmb3Igbm9uLU1pY3Jvc29mdCB0YWdzLgorICoKKyAqIE4gaXMgbmFtZSBzdXJyb2dh
dGUuIFdoZW4gc2V0IHRvIDEsIHRoZSBmaWxlIHJlcHJlc2VudHMgYW5vdGhlciBuYW1lZAorICog
ICBlbnRpdHkgaW4gdGhlIHN5c3RlbS4KKyAqCisgKiBUaGUgTSBhbmQgTiBiaXRzIGFyZSBPUi1h
YmxlLgorICogVGhlIGZvbGxvd2luZyBtYWNyb3MgY2hlY2sgZm9yIHRoZSBNIGFuZCBOIGJpdCB2
YWx1ZXM6CisgKi8KCi0vLwotLy8gTWFjcm8gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgYSByZXBhcnNl
IHBvaW50IHRhZyBjb3JyZXNwb25kcyB0byBhIHRhZwotLy8gb3duZWQgYnkgTWljcm9zb2Z0Lgot
Ly8KKy8qCisgKiBNYWNybyB0byBkZXRlcm1pbmUgd2hldGhlciBhIHJlcGFyc2UgcG9pbnQgdGFn
IGNvcnJlc3BvbmRzIHRvIGEgdGFnCisgKiBvd25lZCBieSBNaWNyb3NvZnQuCisgKi8KICNkZWZp
bmUgSXNSZXBhcnNlVGFnTWljcm9zb2Z0KF90YWcpCSgoKF90YWcpJklPX1JFUEFSU0VfVEFHX01J
Q1JPU09GVCkpCgotLy8KLS8vIE1hY3JvIHRvIGRldGVybWluZSB3aGV0aGVyIGEgcmVwYXJzZSBw
b2ludCB0YWcgaXMgYSBuYW1lIHN1cnJvZ2F0ZQotLy8KKy8qIE1hY3JvIHRvIGRldGVybWluZSB3
aGV0aGVyIGEgcmVwYXJzZSBwb2ludCB0YWcgaXMgYSBuYW1lIHN1cnJvZ2F0ZS4gKi8KICNkZWZp
bmUgSXNSZXBhcnNlVGFnTmFtZVN1cnJvZ2F0ZShfdGFnKQkoKChfdGFnKSZJT19SRVBBUlNFX1RB
R19OQU1FX1NVUlJPR0FURSkpCgotLy8KLS8vIFRoZSBmb2xsb3dpbmcgY29uc3RhbnQgcmVwcmVz
ZW50cyB0aGUgYml0cyB0aGF0IGFyZSB2YWxpZCB0byB1c2UgaW4KLS8vIHJlcGFyc2UgdGFncy4K
LS8vCisvKgorICogVGhlIGZvbGxvd2luZyBjb25zdGFudCByZXByZXNlbnRzIHRoZSBiaXRzIHRo
YXQgYXJlIHZhbGlkIHRvIHVzZSBpbgorICogcmVwYXJzZSB0YWdzLgorICovCiAjZGVmaW5lIElP
X1JFUEFSU0VfVEFHX1ZBTElEX1ZBTFVFUwkweEYwMDBGRkZGCgotLy8KLS8vIE1hY3JvIHRvIGRl
dGVybWluZSB3aGV0aGVyIGEgcmVwYXJzZSB0YWcgaXMgYSB2YWxpZCB0YWcuCi0vLworLyoKKyAq
IE1hY3JvIHRvIGRldGVybWluZSB3aGV0aGVyIGEgcmVwYXJzZSB0YWcgaXMgYSB2YWxpZCB0YWcu
CisgKi8KICNkZWZpbmUgSXNSZXBhcnNlVGFnVmFsaWQoX3RhZykJCQkJCQkgICAgICAgXAogCSgh
KChfdGFnKSAmIH5JT19SRVBBUlNFX1RBR19WQUxJRF9WQUxVRVMpICYmCQkJICAgICAgIFwKIAkg
KChfdGFnKSA+IElPX1JFUEFSU0VfVEFHX1JFU0VSVkVEX1JBTkdFKSkKCi0vLwotLy8gTWljcm9z
b2Z0IHRhZ3MgZm9yIHJlcGFyc2UgcG9pbnRzLgotLy8KKy8qIE1pY3Jvc29mdCB0YWdzIGZvciBy
ZXBhcnNlIHBvaW50cy4gKi8KCiBlbnVtIElPX1JFUEFSU0VfVEFHIHsKIAlJT19SRVBBUlNFX1RB
R19TWU1CT0xJQ19MSU5LCT0gY3B1X3RvX2xlMzIoMCksCkBAIC0xMDY0LDYyICsxMDU1LDQ4IEBA
IGVudW0gSU9fUkVQQVJTRV9UQUcgewogCUlPX1JFUEFSU0VfVEFHX0RFRFVQCQk9IGNwdV90b19s
ZTMyKDB4ODAwMDAwMTMpLAogCUlPX1JFUEFSU0VfVEFHX0NPTVBSRVNTCQk9IGNwdV90b19sZTMy
KDB4ODAwMDAwMTcpLAoKLQkvLwotCS8vIFRoZSByZXBhcnNlIHRhZyAweDgwMDAwMDA4IGlzIHJl
c2VydmVkIGZvciBNaWNyb3NvZnQgaW50ZXJuYWwgdXNlCi0JLy8gKG1heSBiZSBwdWJsaXNoZWQg
aW4gdGhlIGZ1dHVyZSkKLQkvLworCS8qCisJICogVGhlIHJlcGFyc2UgdGFnIDB4ODAwMDAwMDgg
aXMgcmVzZXJ2ZWQgZm9yIE1pY3Jvc29mdCBpbnRlcm5hbCB1c2UuCisJICogTWF5IGJlIHB1Ymxp
c2hlZCBpbiB0aGUgZnV0dXJlLgorCSAqLwoKLQkvLwotCS8vIE1pY3Jvc29mdCByZXBhcnNlIHRh
ZyByZXNlcnZlZCBmb3IgREZTCi0JLy8KLQlJT19SRVBBUlNFX1RBR19ERlMJCT0gY3B1X3RvX2xl
MzIoMHg4MDAwMDAwQSksCisJLyogTWljcm9zb2Z0IHJlcGFyc2UgdGFnIHJlc2VydmVkIGZvciBE
RlMgKi8KKwlJT19SRVBBUlNFX1RBR19ERlMJPSBjcHVfdG9fbGUzMigweDgwMDAwMDBBKSwKCi0J
Ly8KLQkvLyBNaWNyb3NvZnQgcmVwYXJzZSB0YWcgcmVzZXJ2ZWQgZm9yIHRoZSBmaWxlIHN5c3Rl
bSBmaWx0ZXIgbWFuYWdlcgotCS8vCisJLyogTWljcm9zb2Z0IHJlcGFyc2UgdGFnIHJlc2VydmVk
IGZvciB0aGUgZmlsZSBzeXN0ZW0gZmlsdGVyIG1hbmFnZXIuICovCiAJSU9fUkVQQVJTRV9UQUdf
RklMVEVSX01BTkFHRVIJPSBjcHVfdG9fbGUzMigweDgwMDAwMDBCKSwKCi0JLy8KLQkvLyBOb24t
TWljcm9zb2Z0IHRhZ3MgZm9yIHJlcGFyc2UgcG9pbnRzCi0JLy8KKwkvKiBOb24tTWljcm9zb2Z0
IHRhZ3MgZm9yIHJlcGFyc2UgcG9pbnRzICovCgotCS8vCi0JLy8gVGFnIGFsbG9jYXRlZCB0byBD
T05HUlVFTlQsIE1heSAyMDAwLiBVc2VkIGJ5IElGU1RFU1QKLQkvLworCS8qIFRhZyBhbGxvY2F0
ZWQgdG8gQ09OR1JVRU5ULCBNYXkgMjAwMC4gVXNlZCBieSBJRlNURVNULiAqLwogCUlPX1JFUEFS
U0VfVEFHX0lGU1RFU1RfQ09OR1JVRU5UID0gY3B1X3RvX2xlMzIoMHgwMDAwMDAwOSksCgotCS8v
Ci0JLy8gVGFnIGFsbG9jYXRlZCB0byBBUktJVklPCi0JLy8KLQlJT19SRVBBUlNFX1RBR19BUktJ
VklPCQk9IGNwdV90b19sZTMyKDB4MDAwMDAwMEMpLAorCS8qIFRhZyBhbGxvY2F0ZWQgdG8gQVJL
SVZJTy4gKi8KKwlJT19SRVBBUlNFX1RBR19BUktJVklPCT0gY3B1X3RvX2xlMzIoMHgwMDAwMDAw
QyksCgotCS8vCi0JLy8gIFRhZyBhbGxvY2F0ZWQgdG8gU09MVVRJT05TT0ZUCi0JLy8KKwkvKiBU
YWcgYWxsb2NhdGVkIHRvIFNPTFVUSU9OU09GVC4gKi8KIAlJT19SRVBBUlNFX1RBR19TT0xVVElP
TlNPRlQJPSBjcHVfdG9fbGUzMigweDIwMDAwMDBEKSwKCi0JLy8KLQkvLyAgVGFnIGFsbG9jYXRl
ZCB0byBDT01NVkFVTFQKLQkvLworCS8qIFRhZyBhbGxvY2F0ZWQgdG8gQ09NTVZBVUxULiAqLwog
CUlPX1JFUEFSU0VfVEFHX0NPTU1WQVVMVAk9IGNwdV90b19sZTMyKDB4MDAwMDAwMEUpLAoKLQkv
LyBPbmVEcml2ZT8/Ci0JSU9fUkVQQVJTRV9UQUdfQ0xPVUQJCT0gY3B1X3RvX2xlMzIoMHg5MDAw
MDAxQSksCi0JSU9fUkVQQVJTRV9UQUdfQ0xPVURfMQkJPSBjcHVfdG9fbGUzMigweDkwMDAxMDFB
KSwKLQlJT19SRVBBUlNFX1RBR19DTE9VRF8yCQk9IGNwdV90b19sZTMyKDB4OTAwMDIwMUEpLAot
CUlPX1JFUEFSU0VfVEFHX0NMT1VEXzMJCT0gY3B1X3RvX2xlMzIoMHg5MDAwMzAxQSksCi0JSU9f
UkVQQVJTRV9UQUdfQ0xPVURfNAkJPSBjcHVfdG9fbGUzMigweDkwMDA0MDFBKSwKLQlJT19SRVBB
UlNFX1RBR19DTE9VRF81CQk9IGNwdV90b19sZTMyKDB4OTAwMDUwMUEpLAotCUlPX1JFUEFSU0Vf
VEFHX0NMT1VEXzYJCT0gY3B1X3RvX2xlMzIoMHg5MDAwNjAxQSksCi0JSU9fUkVQQVJTRV9UQUdf
Q0xPVURfNwkJPSBjcHVfdG9fbGUzMigweDkwMDA3MDFBKSwKLQlJT19SRVBBUlNFX1RBR19DTE9V
RF84CQk9IGNwdV90b19sZTMyKDB4OTAwMDgwMUEpLAotCUlPX1JFUEFSU0VfVEFHX0NMT1VEXzkJ
CT0gY3B1X3RvX2xlMzIoMHg5MDAwOTAxQSksCi0JSU9fUkVQQVJTRV9UQUdfQ0xPVURfQQkJPSBj
cHVfdG9fbGUzMigweDkwMDBBMDFBKSwKLQlJT19SRVBBUlNFX1RBR19DTE9VRF9CCQk9IGNwdV90
b19sZTMyKDB4OTAwMEIwMUEpLAotCUlPX1JFUEFSU0VfVEFHX0NMT1VEX0MJCT0gY3B1X3RvX2xl
MzIoMHg5MDAwQzAxQSksCi0JSU9fUkVQQVJTRV9UQUdfQ0xPVURfRAkJPSBjcHVfdG9fbGUzMigw
eDkwMDBEMDFBKSwKLQlJT19SRVBBUlNFX1RBR19DTE9VRF9FCQk9IGNwdV90b19sZTMyKDB4OTAw
MEUwMUEpLAotCUlPX1JFUEFSU0VfVEFHX0NMT1VEX0YJCT0gY3B1X3RvX2xlMzIoMHg5MDAwRjAx
QSksCisJLyogT25lRHJpdmU/PyAqLworCUlPX1JFUEFSU0VfVEFHX0NMT1VECT0gY3B1X3RvX2xl
MzIoMHg5MDAwMDAxQSksCisJSU9fUkVQQVJTRV9UQUdfQ0xPVURfMQk9IGNwdV90b19sZTMyKDB4
OTAwMDEwMUEpLAorCUlPX1JFUEFSU0VfVEFHX0NMT1VEXzIJPSBjcHVfdG9fbGUzMigweDkwMDAy
MDFBKSwKKwlJT19SRVBBUlNFX1RBR19DTE9VRF8zCT0gY3B1X3RvX2xlMzIoMHg5MDAwMzAxQSks
CisJSU9fUkVQQVJTRV9UQUdfQ0xPVURfNAk9IGNwdV90b19sZTMyKDB4OTAwMDQwMUEpLAorCUlP
X1JFUEFSU0VfVEFHX0NMT1VEXzUJPSBjcHVfdG9fbGUzMigweDkwMDA1MDFBKSwKKwlJT19SRVBB
UlNFX1RBR19DTE9VRF82CT0gY3B1X3RvX2xlMzIoMHg5MDAwNjAxQSksCisJSU9fUkVQQVJTRV9U
QUdfQ0xPVURfNwk9IGNwdV90b19sZTMyKDB4OTAwMDcwMUEpLAorCUlPX1JFUEFSU0VfVEFHX0NM
T1VEXzgJPSBjcHVfdG9fbGUzMigweDkwMDA4MDFBKSwKKwlJT19SRVBBUlNFX1RBR19DTE9VRF85
CT0gY3B1X3RvX2xlMzIoMHg5MDAwOTAxQSksCisJSU9fUkVQQVJTRV9UQUdfQ0xPVURfQQk9IGNw
dV90b19sZTMyKDB4OTAwMEEwMUEpLAorCUlPX1JFUEFSU0VfVEFHX0NMT1VEX0IJPSBjcHVfdG9f
bGUzMigweDkwMDBCMDFBKSwKKwlJT19SRVBBUlNFX1RBR19DTE9VRF9DCT0gY3B1X3RvX2xlMzIo
MHg5MDAwQzAxQSksCisJSU9fUkVQQVJTRV9UQUdfQ0xPVURfRAk9IGNwdV90b19sZTMyKDB4OTAw
MEQwMUEpLAorCUlPX1JFUEFSU0VfVEFHX0NMT1VEX0UJPSBjcHVfdG9fbGUzMigweDkwMDBFMDFB
KSwKKwlJT19SRVBBUlNFX1RBR19DTE9VRF9GCT0gY3B1X3RvX2xlMzIoMHg5MDAwRjAxQSksCgog
fTsKCkBAIC0xMTMyLDcgKzExMDksNyBAQCBzdHJ1Y3QgUkVQQVJTRV9EQVRBX0JVRkZFUiB7CiAJ
X19sZTE2IFJlc2VydmVkOwoKIAl1bmlvbiB7Ci0JCS8vIElmIFJlcGFyc2VUYWcgPT0gMHhBMDAw
MDAwMyAoSU9fUkVQQVJTRV9UQUdfTU9VTlRfUE9JTlQpCisJCS8qIElmIFJlcGFyc2VUYWcgPT0g
MHhBMDAwMDAwMyAoSU9fUkVQQVJTRV9UQUdfTU9VTlRfUE9JTlQpICovCiAJCXN0cnVjdCB7CiAJ
CQlfX2xlMTYgU3Vic3RpdHV0ZU5hbWVPZmZzZXQ7IC8vIDB4MDgKIAkJCV9fbGUxNiBTdWJzdGl0
dXRlTmFtZUxlbmd0aDsgLy8gMHgwQQpAQCAtMTE0MSw4ICsxMTE4LDEwIEBAIHN0cnVjdCBSRVBB
UlNFX0RBVEFfQlVGRkVSIHsKIAkJCV9fbGUxNiBQYXRoQnVmZmVyW107CSAgICAgLy8gMHgxMAog
CQl9IE1vdW50UG9pbnRSZXBhcnNlQnVmZmVyOwoKLQkJLy8gSWYgUmVwYXJzZVRhZyA9PSAweEEw
MDAwMDBDIChJT19SRVBBUlNFX1RBR19TWU1MSU5LKQotCQkvLyBodHRwczovL21zZG4ubWljcm9z
b2Z0LmNvbS9lbi11cy9saWJyYXJ5L2NjMjMyMDA2LmFzcHgKKwkJLyoKKwkJICogSWYgUmVwYXJz
ZVRhZyA9PSAweEEwMDAwMDBDIChJT19SRVBBUlNFX1RBR19TWU1MSU5LKQorCQkgKiBodHRwczov
L21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2NjMjMyMDA2LmFzcHgKKwkJICovCiAJ
CXN0cnVjdCB7CiAJCQlfX2xlMTYgU3Vic3RpdHV0ZU5hbWVPZmZzZXQ7IC8vIDB4MDgKIAkJCV9f
bGUxNiBTdWJzdGl0dXRlTmFtZUxlbmd0aDsgLy8gMHgwQQpAQCAtMTE1MywxOSArMTEzMiwyMCBA
QCBzdHJ1Y3QgUkVQQVJTRV9EQVRBX0JVRkZFUiB7CiAJCQlfX2xlMTYgUGF0aEJ1ZmZlcltdOwkg
ICAgIC8vIDB4MTQKIAkJfSBTeW1ib2xpY0xpbmtSZXBhcnNlQnVmZmVyOwoKLQkJLy8gSWYgUmVw
YXJzZVRhZyA9PSAweDgwMDAwMDE3VQorCQkvKiBJZiBSZXBhcnNlVGFnID09IDB4ODAwMDAwMTdV
ICovCiAJCXN0cnVjdCB7CiAJCQlfX2xlMzIgV29mVmVyc2lvbjsgIC8vIDB4MDggPT0gMQotCQkJ
LyogMSAtIFdJTSBiYWNraW5nIHByb3ZpZGVyICgiV0lNQm9vdCIpLAorCQkJLyoKKwkJCSAqIDEg
LSBXSU0gYmFja2luZyBwcm92aWRlciAoIldJTUJvb3QiKSwKIAkJCSAqIDIgLSBTeXN0ZW0gY29t
cHJlc3NlZCBmaWxlIHByb3ZpZGVyCiAJCQkgKi8KLQkJCV9fbGUzMiBXb2ZQcm92aWRlcjsgLy8g
MHgwQworCQkJX19sZTMyIFdvZlByb3ZpZGVyOyAvLyAweDBDOgogCQkJX19sZTMyIFByb3ZpZGVy
VmVyOyAvLyAweDEwOiA9PSAxIFdPRl9GSUxFX1BST1ZJREVSX0NVUlJFTlRfVkVSU0lPTiA9PSAx
CiAJCQlfX2xlMzIgQ29tcHJlc3Npb25Gb3JtYXQ7IC8vIDB4MTQ6IDAsIDEsIDIsIDMuIFNlZSBX
T0ZfQ09NUFJFU1NJT05fWFhYCiAJCX0gQ29tcHJlc3NSZXBhcnNlQnVmZmVyOwoKIAkJc3RydWN0
IHsKLQkJCXU4IERhdGFCdWZmZXJbMV07ICAgLy8gMHgwOAorCQkJdTggRGF0YUJ1ZmZlclsxXTsg
ICAvLyAweDA4OgogCQl9IEdlbmVyaWNSZXBhcnNlQnVmZmVyOwogCX07CiB9OwpAQCAtMTE3Mywx
MyArMTE1MywxNCBAQCBzdHJ1Y3QgUkVQQVJTRV9EQVRBX0JVRkZFUiB7CiAvKiBBVFRSX0VBX0lO
Rk8gKDB4RDApICovCgogI2RlZmluZSBGSUxFX05FRURfRUEgMHg4MCAvLyBTZWUgbnRpZnMuaAot
LyogRklMRV9ORUVEX0VBLCBpbmRpY2F0ZXMgdGhhdCB0aGUgZmlsZSB0byB3aGljaCB0aGUgRUEg
YmVsb25ncyBjYW5ub3QgYmUKKy8qCisgKkZJTEVfTkVFRF9FQSwgaW5kaWNhdGVzIHRoYXQgdGhl
IGZpbGUgdG8gd2hpY2ggdGhlIEVBIGJlbG9uZ3MgY2Fubm90IGJlCiAgKiBpbnRlcnByZXRlZCB3
aXRob3V0IHVuZGVyc3RhbmRpbmcgdGhlIGFzc29jaWF0ZWQgZXh0ZW5kZWQgYXR0cmlidXRlcy4K
ICAqLwogc3RydWN0IEVBX0lORk8gewotCV9fbGUxNiBzaXplX3BhY2s7CS8vIDB4MDA6IFNpemUg
b2YgYnVmZmVyIHRvIGhvbGQgaW4gcGFja2VkIGZvcm0KLQlfX2xlMTYgY291bnQ7CQkvLyAweDAy
OiBDb3VudCBvZiBFQSdzIHdpdGggRklMRV9ORUVEX0VBIGJpdCBzZXQKLQlfX2xlMzIgc2l6ZTsJ
CS8vIDB4MDQ6IFNpemUgb2YgYnVmZmVyIHRvIGhvbGQgaW4gdW5wYWNrZWQgZm9ybQorCV9fbGUx
NiBzaXplX3BhY2s7CS8vIDB4MDA6IFNpemUgb2YgYnVmZmVyIHRvIGhvbGQgaW4gcGFja2VkIGZv
cm0uCisJX19sZTE2IGNvdW50OwkJLy8gMHgwMjogQ291bnQgb2YgRUEncyB3aXRoIEZJTEVfTkVF
RF9FQSBiaXQgc2V0LgorCV9fbGUzMiBzaXplOwkJLy8gMHgwNDogU2l6ZSBvZiBidWZmZXIgdG8g
aG9sZCBpbiB1bnBhY2tlZCBmb3JtLgogfTsKCiBzdGF0aWNfYXNzZXJ0KHNpemVvZihzdHJ1Y3Qg
RUFfSU5GTykgPT0gOCk7CkBAIC0xMTg3LDEwICsxMTY4LDEwIEBAIHN0YXRpY19hc3NlcnQoc2l6
ZW9mKHN0cnVjdCBFQV9JTkZPKSA9PSA4KTsKIC8qIEFUVFJfRUEgKDB4RTApICovCiBzdHJ1Y3Qg
RUFfRlVMTCB7CiAJX19sZTMyIHNpemU7CQkvLyAweDAwOiAobm90IGluIHBhY2tlZCkKLQl1OCBm
bGFnczsJCS8vIDB4MDQKLQl1OCBuYW1lX2xlbjsJCS8vIDB4MDUKLQlfX2xlMTYgZWxlbmd0aDsJ
CS8vIDB4MDYKLQl1OCBuYW1lW107CQkvLyAweDA4CisJdTggZmxhZ3M7CQkvLyAweDA0OgorCXU4
IG5hbWVfbGVuOwkJLy8gMHgwNToKKwlfX2xlMTYgZWxlbmd0aDsJCS8vIDB4MDY6CisJdTggbmFt
ZVtdOwkJLy8gMHgwODoKIH07Cgogc3RhdGljX2Fzc2VydChvZmZzZXRvZihzdHJ1Y3QgRUFfRlVM
TCwgbmFtZSkgPT0gOCk7CmRpZmYgLS1naXQgYS9mcy9udGZzMy9udGZzX2ZzLmggYi9mcy9udGZz
My9udGZzX2ZzLmgKaW5kZXggNWUxZGQ2MjhkM2NjLi45ZGQwNDZiMTI4ZTkgMTAwNjQ0Ci0tLSBh
L2ZzL250ZnMzL250ZnNfZnMuaAorKysgYi9mcy9udGZzMy9udGZzX2ZzLmgKQEAgLTYsNyArNiw3
IEBACiAgKi8KCiAvLyBjbGFuZy1mb3JtYXQgb2ZmCi0jZGVmaW5lIE1JTlVTX09ORV9UCQkJKChz
aXplX3QpKC0xKSkKKyNkZWZpbmUgTUlOVVNfT05FX1QJCSgoc2l6ZV90KSgtMSkpCiAvKiBCaWdn
ZXN0IE1GVCAvIHNtYWxsZXN0IGNsdXN0ZXIgKi8KICNkZWZpbmUgTUFYSU1VTV9CWVRFU19QRVJf
TUZUCQk0MDk2CiAjZGVmaW5lIE5URlNfQkxPQ0tTX1BFUl9NRlRfUkVDT1JECShNQVhJTVVNX0JZ
VEVTX1BFUl9NRlQgLyA1MTIpCkBAIC0xNCwzMCArMTQsMzAgQEAKICNkZWZpbmUgTUFYSU1VTV9C
WVRFU19QRVJfSU5ERVgJCTQwOTYKICNkZWZpbmUgTlRGU19CTE9DS1NfUEVSX0lOT0RFCQkoTUFY
SU1VTV9CWVRFU19QRVJfSU5ERVggLyA1MTIpCgotLyogbnRmcyBzcGVjaWZpYyBlcnJvciBjb2Rl
IHdoZW4gZml4dXAgZmFpbGVkKi8KLSNkZWZpbmUgRV9OVEZTX0ZJWFVQCQkJNTU1Ci0vKiBudGZz
IHNwZWNpZmljIGVycm9yIGNvZGUgYWJvdXQgcmVzaWRlbnQtPm5vbnJlc2lkZW50Ki8KKy8qIE5U
RlMgc3BlY2lmaWMgZXJyb3IgY29kZSB3aGVuIGZpeHVwIGZhaWxlZC4gKi8KKyNkZWZpbmUgRV9O
VEZTX0ZJWFVQCQk1NTUKKy8qIE5URlMgc3BlY2lmaWMgZXJyb3IgY29kZSBhYm91dCByZXNpZGVu
dC0+bm9ucmVzaWRlbnQuICovCiAjZGVmaW5lIEVfTlRGU19OT05SRVNJREVOVAkJNTU2CgogLyog
c2JpLT5mbGFncyAqLwogI2RlZmluZSBOVEZTX0ZMQUdTX05PRElTQ0FSRAkJMHgwMDAwMDAwMQot
LyogU2V0IHdoZW4gTG9nRmlsZSBpcyByZXBsYXlpbmcgKi8KKy8qIFNldCB3aGVuIExvZ0ZpbGUg
aXMgcmVwbGF5aW5nLiAqLwogI2RlZmluZSBOVEZTX0ZMQUdTX0xPR19SRVBMQVlJTkcJMHgwMDAw
MDAwOAotLyogU2V0IHdoZW4gd2UgY2hhbmdlZCBmaXJzdCBNRlQncyB3aGljaCBjb3B5IG11c3Qg
YmUgdXBkYXRlZCBpbiAkTWZ0TWlyciAqLworLyogU2V0IHdoZW4gd2UgY2hhbmdlZCBmaXJzdCBN
RlQncyB3aGljaCBjb3B5IG11c3QgYmUgdXBkYXRlZCBpbiAkTWZ0TWlyci4gKi8KICNkZWZpbmUg
TlRGU19GTEFHU19NRlRNSVJSCQkweDAwMDAxMDAwCiAjZGVmaW5lIE5URlNfRkxBR1NfTkVFRF9S
RVBMQVkJCTB4MDQwMDAwMDAKCgogLyogbmktPm5pX2ZsYWdzICovCiAvKgotICogRGF0YSBhdHRy
aWJ1dGUgaXMgZXh0ZXJuYWwgY29tcHJlc3NlZCAobHp4L3hwcmVzcykKKyAqIERhdGEgYXR0cmli
dXRlIGlzIGV4dGVybmFsIGNvbXByZXNzZWQgKExaWC9YcHJlc3MpCiAgKiAxIC0gV09GX0NPTVBS
RVNTSU9OX1hQUkVTUzRLCiAgKiAyIC0gV09GX0NPTVBSRVNTSU9OX1hQUkVTUzhLCiAgKiAzIC0g
V09GX0NPTVBSRVNTSU9OX1hQUkVTUzE2SwogICogNCAtIFdPRl9DT01QUkVTU0lPTl9MWlgzMksK
ICAqLwogI2RlZmluZSBOSV9GTEFHX0NPTVBSRVNTRURfTUFTSwkJMHgwMDAwMDAwZgotLyogRGF0
YSBhdHRyaWJ1dGUgaXMgZGVkdXBsaWNhdGVkICovCisvKiBEYXRhIGF0dHJpYnV0ZSBpcyBkZWR1
cGxpY2F0ZWQuICovCiAjZGVmaW5lIE5JX0ZMQUdfREVEVVBMSUNBVEVECQkweDAwMDAwMDEwCiAj
ZGVmaW5lIE5JX0ZMQUdfRUEJCQkweDAwMDAwMDIwCiAjZGVmaW5lIE5JX0ZMQUdfRElSCQkJMHgw
MDAwMDA0MApAQCAtNTMsMjkgKzUzLDI5IEBAIHN0cnVjdCBudGZzX21vdW50X29wdGlvbnMgewog
CXUxNiBmc19mbWFza19pbnY7CiAJdTE2IGZzX2RtYXNrX2ludjsKCi0JdW5zaWduZWQgdWlkIDog
MSwgLyogdWlkIHdhcyBzZXQgKi8KLQkJZ2lkIDogMSwgLyogZ2lkIHdhcyBzZXQgKi8KLQkJZm1h
c2sgOiAxLCAvKiBmbWFzayB3YXMgc2V0ICovCi0JCWRtYXNrIDogMSwgLypkbWFzayB3YXMgc2V0
Ki8KLQkJc3lzX2ltbXV0YWJsZSA6IDEsIC8qIGltbXV0YWJsZSBzeXN0ZW0gZmlsZXMgKi8KLQkJ
ZGlzY2FyZCA6IDEsIC8qIGlzc3VlIGRpc2NhcmQgcmVxdWVzdHMgb24gZGVsZXRpb25zICovCi0J
CXNwYXJzZSA6IDEsIC8qY3JlYXRlIHNwYXJzZSBmaWxlcyovCi0JCXNob3dtZXRhIDogMSwgLypz
aG93IG1ldGEgZmlsZXMqLwotCQlub2hpZGRlbiA6IDEsIC8qZG8gbm90IHNob3cgaGlkZGVuIGZp
bGVzKi8KLQkJZm9yY2UgOiAxLCAvKnJ3IG1vdW50IGRpcnR5IHZvbHVtZSovCi0JCW5vX2Fjc19y
dWxlcyA6IDEsIC8qZXhjbHVkZSBhY3MgcnVsZXMqLwotCQlwcmVhbGxvYyA6IDEgLypwcmVhbGxv
Y2F0ZSBzcGFjZSB3aGVuIGZpbGUgaXMgZ3Jvd2luZyovCisJdW5zaWduZWQgdWlkIDogMSwJLyog
dWlkIHdhcyBzZXQuICovCisJCWdpZCA6IDEsCS8qIGdpZCB3YXMgc2V0LiAqLworCQlmbWFzayA6
IDEsCS8qIGZtYXNrIHdhcyBzZXQuICovCisJCWRtYXNrIDogMSwJLyogZG1hc2sgd2FzIHNldC4g
Ki8KKwkJc3lzX2ltbXV0YWJsZSA6IDEsLyogSW1tdXRhYmxlIHN5c3RlbSBmaWxlcy4gKi8KKwkJ
ZGlzY2FyZCA6IDEsCS8qIElzc3VlIGRpc2NhcmQgcmVxdWVzdHMgb24gZGVsZXRpb25zLiAqLwor
CQlzcGFyc2UgOiAxLAkvKiBDcmVhdGUgc3BhcnNlIGZpbGVzLiAqLworCQlzaG93bWV0YSA6IDEs
CS8qIFNob3cgbWV0YSBmaWxlcy4gKi8KKwkJbm9oaWRkZW4gOiAxLCAJLyogRG8gbm90IHNob3cg
aGlkZGVuIGZpbGVzLiAqLworCQlmb3JjZSA6IDEsIAkvKiBSdyBtb3VudCBkaXJ0eSB2b2x1bWUu
ICovCisJCW5vX2Fjc19ydWxlcyA6IDEsLypFeGNsdWRlIGFjcyBydWxlcy4gKi8KKwkJcHJlYWxs
b2MgOiAxCS8qIFByZWFsbG9jYXRlIHNwYWNlIHdoZW4gZmlsZSBpcyBncm93aW5nLiAqLwogCQk7
CiB9OwoKLS8qIHNwZWNpYWwgdmFsdWUgdG8gdW5wYWNrIGFuZCBkZWFsbG9jYXRlKi8KKy8qIFNw
ZWNpYWwgdmFsdWUgdG8gdW5wYWNrIGFuZCBkZWFsbG9jYXRlLiAqLwogI2RlZmluZSBSVU5fREVB
TExPQ0FURSAoKHN0cnVjdCBydW5zX3RyZWUgKikoc2l6ZV90KTEpCgotLyogVE9ETzogdXNlIHJi
IHRyZWUgaW5zdGVhZCBvZiBhcnJheSAqLworLyogVE9ETzogVXNlIHJiIHRyZWUgaW5zdGVhZCBv
ZiBhcnJheS4gKi8KIHN0cnVjdCBydW5zX3RyZWUgewogCXN0cnVjdCBudGZzX3J1biAqcnVuczsK
LQlzaXplX3QgY291bnQ7IC8vIEN1cnJlbnRseSB1c2VkIHNpemUgYSBudGZzX3J1biBzdG9yYWdl
LgotCXNpemVfdCBhbGxvY2F0ZWQ7IC8vIEN1cnJlbnRseSBhbGxvY2F0ZWQgbnRmc19ydW4gc3Rv
cmFnZSBzaXplLgorCXNpemVfdCBjb3VudDsgLyogQ3VycmVudGx5IHVzZWQgc2l6ZSBhIG50ZnNf
cnVuIHN0b3JhZ2UuICovCisJc2l6ZV90IGFsbG9jYXRlZDsgLyogQ3VycmVudGx5IGFsbG9jYXRl
ZCBudGZzX3J1biBzdG9yYWdlIHNpemUuICovCiB9OwoKIHN0cnVjdCBudGZzX2J1ZmZlcnMgewpA
QCAtODgsOCArODgsOCBAQCBzdHJ1Y3QgbnRmc19idWZmZXJzIHsKIH07CgogZW51bSBBTExPQ0FU
RV9PUFQgewotCUFMTE9DQVRFX0RFRiA9IDAsIC8vIEFsbG9jYXRlIGFsbCBjbHVzdGVycwotCUFM
TE9DQVRFX01GVCA9IDEsIC8vIEFsbG9jYXRlIGZvciBNRlQKKwlBTExPQ0FURV9ERUYgPSAwLCAv
LyBBbGxvY2F0ZSBhbGwgY2x1c3RlcnMuCisJQUxMT0NBVEVfTUZUID0gMSwgLy8gQWxsb2NhdGUg
Zm9yIE1GVC4KIH07CgogZW51bSBiaXRtYXBfbXV0ZXhfY2xhc3NlcyB7CkBAIC0xMDQsMjkgKzEw
NCwyOSBAQCBzdHJ1Y3Qgd25kX2JpdG1hcCB7CiAJc3RydWN0IHJ1bnNfdHJlZSBydW47CiAJc2l6
ZV90IG5iaXRzOwoKLQlzaXplX3QgdG90YWxfemVyb2VzOyAvLyB0b3RhbCBudW1iZXIgb2YgZnJl
ZSBiaXRzCi0JdTE2ICpmcmVlX2JpdHM7IC8vIGZyZWUgYml0cyBpbiBlYWNoIHdpbmRvdworCXNp
emVfdCB0b3RhbF96ZXJvZXM7IC8vIFRvdGFsIG51bWJlciBvZiBmcmVlIGJpdHMuCisJdTE2ICpm
cmVlX2JpdHM7IC8vIEZyZWUgYml0cyBpbiBlYWNoIHdpbmRvdy4KIAlzaXplX3QgbnduZDsKLQl1
MzIgYml0c19sYXN0OyAvLyBiaXRzIGluIGxhc3Qgd2luZG93CisJdTMyIGJpdHNfbGFzdDsgLy8g
Qml0cyBpbiBsYXN0IHdpbmRvdy4KCi0Jc3RydWN0IHJiX3Jvb3Qgc3RhcnRfdHJlZTsgLy8gZXh0
ZW50cywgc29ydGVkIGJ5ICdzdGFydCcKLQlzdHJ1Y3QgcmJfcm9vdCBjb3VudF90cmVlOyAvLyBl
eHRlbnRzLCBzb3J0ZWQgYnkgJ2NvdW50ICsgc3RhcnQnCi0Jc2l6ZV90IGNvdW50OyAvLyBleHRl
bnRzIGNvdW50CisJc3RydWN0IHJiX3Jvb3Qgc3RhcnRfdHJlZTsgLy8gRXh0ZW50cywgc29ydGVk
IGJ5ICdzdGFydCcuCisJc3RydWN0IHJiX3Jvb3QgY291bnRfdHJlZTsgLy8gRXh0ZW50cywgc29y
dGVkIGJ5ICdjb3VudCArIHN0YXJ0Jy4KKwlzaXplX3QgY291bnQ7IC8vIEV4dGVudHMgY291bnQu
CgogCS8qCi0JICogLTEgVHJlZSBpcyBhY3RpdmF0ZWQgYnV0IG5vdCB1cGRhdGVkICh0b28gbWFu
eSBmcmFnbWVudHMpCi0JICogMCAtIFRyZWUgaXMgbm90IGFjdGl2YXRlZAotCSAqIDEgLSBUcmVl
IGlzIGFjdGl2YXRlZCBhbmQgdXBkYXRlZAorCSAqIC0xIFRyZWUgaXMgYWN0aXZhdGVkIGJ1dCBu
b3QgdXBkYXRlZCAodG9vIG1hbnkgZnJhZ21lbnRzKS4KKwkgKiAwIC0gVHJlZSBpcyBub3QgYWN0
aXZhdGVkLgorCSAqIDEgLSBUcmVlIGlzIGFjdGl2YXRlZCBhbmQgdXBkYXRlZC4KIAkgKi8KIAlp
bnQgdXB0b2RhdGVkOwotCXNpemVfdCBleHRlbnRfbWluOyAvLyBNaW5pbWFsIGV4dGVudCB1c2Vk
IHdoaWxlIGJ1aWxkaW5nCi0Jc2l6ZV90IGV4dGVudF9tYXg7IC8vIFVwcGVyIGVzdGltYXRlIG9m
IGJpZ2dlc3QgZnJlZSBibG9jaworCXNpemVfdCBleHRlbnRfbWluOyAvLyBNaW5pbWFsIGV4dGVu
dCB1c2VkIHdoaWxlIGJ1aWxkaW5nLgorCXNpemVfdCBleHRlbnRfbWF4OyAvLyBVcHBlciBlc3Rp
bWF0ZSBvZiBiaWdnZXN0IGZyZWUgYmxvY2suCgogCS8qIFpvbmUgW2JpdCwgZW5kKSAqLwogCXNp
emVfdCB6b25lX2JpdDsKIAlzaXplX3Qgem9uZV9lbmQ7CgotCWJvb2wgc2V0X3RhaWw7IC8vIG5v
dCBuZWNlc3NhcnkgaW4gZHJpdmVyCisJYm9vbCBzZXRfdGFpbDsgLy8gTm90IG5lY2Vzc2FyeSBp
biBkcml2ZXIuCiAJYm9vbCBpbml0ZWQ7CiB9OwoKQEAgLTE0MywxNCArMTQzLDE0IEBAIGVudW0g
aW5kZXhfbXV0ZXhfY2xhc3NlZCB7CiAJSU5ERVhfTVVURVhfVE9UQUwKIH07CgotLyogbnRmc19p
bmRleCAtIGFsbG9jYXRpb24gdW5pdCBpbnNpZGUgZGlyZWN0b3J5ICovCisvKiBudGZzX2luZGV4
IC0gQWxsb2NhdGlvbiB1bml0IGluc2lkZSBkaXJlY3RvcnkuICovCiBzdHJ1Y3QgbnRmc19pbmRl
eCB7CiAJc3RydWN0IHJ1bnNfdHJlZSBiaXRtYXBfcnVuOwogCXN0cnVjdCBydW5zX3RyZWUgYWxs
b2NfcnVuOwogCS8qIHJlYWQvd3JpdGUgYWNjZXNzIHRvICdiaXRtYXBfcnVuJy8nYWxsb2NfcnVu
JyB3aGlsZSBudGZzX3JlYWRkaXIgKi8KIAlzdHJ1Y3Qgcndfc2VtYXBob3JlIHJ1bl9sb2NrOwoK
LQkvKlRPRE86IHJlbW92ZSAnY21wJyovCisJLypUT0RPOiBSZW1vdmUgJ2NtcCcuICovCiAJTlRG
U19DTVBfRlVOQyBjbXA7CgogCXU4IGluZGV4X2JpdHM7IC8vIGxvZzIocm9vdC0+aW5kZXhfYmxv
Y2tfc2l6ZSkKQEAgLTE1OSwxMCArMTU5LDEwIEBAIHN0cnVjdCBudGZzX2luZGV4IHsKIAl1OCB0
eXBlOyAvLyBpbmRleF9tdXRleF9jbGFzc2VkCiB9OwoKLS8qIE1pbmltdW0gbWZ0IHpvbmUgKi8K
Ky8qIE1pbmltdW0gTUZUIHpvbmUuICovCiAjZGVmaW5lIE5URlNfTUlOX01GVF9aT05FIDEwMAoK
LS8qIG50ZnMgZmlsZSBzeXN0ZW0gaW4tY29yZSBzdXBlcmJsb2NrIGRhdGEgKi8KKy8qIE50ZnMg
ZmlsZSBzeXN0ZW0gaW4tY29yZSBzdXBlcmJsb2NrIGRhdGEuICovCiBzdHJ1Y3QgbnRmc19zYl9p
bmZvIHsKIAlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiOwoKQEAgLTE4MywyMyArMTgzLDIzIEBAIHN0
cnVjdCBudGZzX3NiX2luZm8gewogCXU4IGNsdXN0ZXJfYml0czsKIAl1OCByZWNvcmRfYml0czsK
Ci0JdTY0IG1heGJ5dGVzOyAvLyBNYXhpbXVtIHNpemUgZm9yIG5vcm1hbCBmaWxlcwotCXU2NCBt
YXhieXRlc19zcGFyc2U7IC8vIE1heGltdW0gc2l6ZSBmb3Igc3BhcnNlIGZpbGUKKwl1NjQgbWF4
Ynl0ZXM7IC8vIE1heGltdW0gc2l6ZSBmb3Igbm9ybWFsIGZpbGVzLgorCXU2NCBtYXhieXRlc19z
cGFyc2U7IC8vIE1heGltdW0gc2l6ZSBmb3Igc3BhcnNlIGZpbGUuCgotCXUzMiBmbGFnczsgLy8g
U2VlIE5URlNfRkxBR1NfWFhYCisJdTMyIGZsYWdzOyAvLyBTZWUgTlRGU19GTEFHU19YWFguCgot
CUNMU1QgYmFkX2NsdXN0ZXJzOyAvLyBUaGUgY291bnQgb2YgbWFya2VkIGJhZCBjbHVzdGVycwor
CUNMU1QgYmFkX2NsdXN0ZXJzOyAvLyBUaGUgY291bnQgb2YgbWFya2VkIGJhZCBjbHVzdGVycy4K
Ci0JdTE2IG1heF9ieXRlc19wZXJfYXR0cjsgLy8gbWF4aW11bSBhdHRyaWJ1dGUgc2l6ZSBpbiBy
ZWNvcmQKLQl1MTYgYXR0cl9zaXplX3RyOyAvLyBhdHRyaWJ1dGUgc2l6ZSB0aHJlc2hvbGQgKDMy
MCBieXRlcykKKwl1MTYgbWF4X2J5dGVzX3Blcl9hdHRyOyAvLyBNYXhpbXVtIGF0dHJpYnV0ZSBz
aXplIGluIHJlY29yZC4KKwl1MTYgYXR0cl9zaXplX3RyOyAvLyBBdHRyaWJ1dGUgc2l6ZSB0aHJl
c2hvbGQgKDMyMCBieXRlcykuCgotCS8qIFJlY29yZHMgaW4gJEV4dGVuZCAqLworCS8qIFJlY29y
ZHMgaW4gJEV4dGVuZC4gKi8KIAlDTFNUIG9iamlkX25vOwogCUNMU1QgcXVvdGFfbm87CiAJQ0xT
VCByZXBhcnNlX25vOwogCUNMU1QgdXNuX2pybmxfbm87CgotCXN0cnVjdCBBVFRSX0RFRl9FTlRS
WSAqZGVmX3RhYmxlOyAvLyBhdHRyaWJ1dGUgZGVmaW5pdGlvbiB0YWJsZQorCXN0cnVjdCBBVFRS
X0RFRl9FTlRSWSAqZGVmX3RhYmxlOyAvLyBBdHRyaWJ1dGUgZGVmaW5pdGlvbiB0YWJsZS4KIAl1
MzIgZGVmX2VudHJpZXM7CiAJdTMyIGVhX21heF9zaXplOwoKQEAgLTIxMiwxMyArMjEyLDEzIEBA
IHN0cnVjdCBudGZzX3NiX2luZm8gewogCQlzdHJ1Y3QgbnRmc19pbm9kZSAqbmk7CiAJCXN0cnVj
dCB3bmRfYml0bWFwIGJpdG1hcDsgLy8gJE1GVDo6Qml0bWFwCiAJCS8qCi0JCSAqIE1GVCByZWNv
cmRzIFsxMS0yNCkgdXNlZCB0byBleHBhbmQgTUZUIGl0c2VsZgorCQkgKiBNRlQgcmVjb3JkcyBb
MTEtMjQpIHVzZWQgdG8gZXhwYW5kIE1GVCBpdHNlbGYuCiAJCSAqIFRoZXkgYWx3YXlzIG1hcmtl
ZCBhcyB1c2VkIGluICRNRlQ6OkJpdG1hcAotCQkgKiAncmVzZXJ2ZWRfYml0bWFwJyBjb250YWlu
cyByZWFsIGJpdG1hcCBvZiB0aGVzZSByZWNvcmRzCisJCSAqICdyZXNlcnZlZF9iaXRtYXAnIGNv
bnRhaW5zIHJlYWwgYml0bWFwIG9mIHRoZXNlIHJlY29yZHMuCiAJCSAqLwotCQl1bG9uZyByZXNl
cnZlZF9iaXRtYXA7IC8vIGJpdG1hcCBvZiB1c2VkIHJlY29yZHMgWzExIC0gMjQpCisJCXVsb25n
IHJlc2VydmVkX2JpdG1hcDsgLy8gQml0bWFwIG9mIHVzZWQgcmVjb3JkcyBbMTEgLSAyNCkKIAkJ
c2l6ZV90IG5leHRfZnJlZTsgLy8gVGhlIG5leHQgcmVjb3JkIHRvIGFsbG9jYXRlIGZyb20KLQkJ
c2l6ZV90IHVzZWQ7IC8vIG1mdCB2YWxpZCBzaXplIGluIHJlY29yZHMKKwkJc2l6ZV90IHVzZWQ7
IC8vIE1GVCB2YWxpZCBzaXplIGluIHJlY29yZHMuCiAJCXUzMiByZWNzX21pcnI7IC8vIE51bWJl
ciBvZiByZWNvcmRzIGluIE1GVE1pcnIKIAkJdTggbmV4dF9yZXNlcnZlZDsKIAkJdTggcmVzZXJ2
ZWRfYml0bWFwX2luaXRlZDsKQEAgLTIzMCwxNSArMjMwLDE1IEBAIHN0cnVjdCBudGZzX3NiX2lu
Zm8gewogCX0gdXNlZDsKCiAJc3RydWN0IHsKLQkJdTY0IHNpemU7IC8vIGluIGJ5dGVzCi0JCXU2
NCBibG9ja3M7IC8vIGluIGJsb2NrcworCQl1NjQgc2l6ZTsgLy8gSW4gYnl0ZXMuCisJCXU2NCBi
bG9ja3M7IC8vIEluIGJsb2Nrcy4KIAkJdTY0IHNlcl9udW07CiAJCXN0cnVjdCBudGZzX2lub2Rl
ICpuaTsKLQkJX19sZTE2IGZsYWdzOyAvLyBjYWNoZWQgY3VycmVudCBWT0xVTUVfSU5GTzo6Zmxh
Z3MsIFZPTFVNRV9GTEFHX0RJUlRZCisJCV9fbGUxNiBmbGFnczsgLy8gQ2FjaGVkIGN1cnJlbnQg
Vk9MVU1FX0lORk86OmZsYWdzLCBWT0xVTUVfRkxBR19ESVJUWS4KIAkJdTggbWFqb3JfdmVyOwog
CQl1OCBtaW5vcl92ZXI7CiAJCWNoYXIgbGFiZWxbNjVdOwotCQlib29sIHJlYWxfZGlydHk7IC8q
IHJlYWwgZnMgc3RhdGUqLworCQlib29sIHJlYWxfZGlydHk7IC8vIFJlYWwgZnMgc3RhdGUuCiAJ
fSB2b2x1bWU7CgogCXN0cnVjdCB7CkBAIC0yNzcsOSArMjc3LDcgQEAgc3RydWN0IG50ZnNfc2Jf
aW5mbyB7CiAJc3RydWN0IHJhdGVsaW1pdF9zdGF0ZSBtc2dfcmF0ZWxpbWl0OwogfTsKCi0vKgot
ICogb25lIE1GVCByZWNvcmQodXN1YWxseSAxMDI0IGJ5dGVzKSwgY29uc2lzdHMgb2YgYXR0cmli
dXRlcwotICovCisvKiBPbmUgTUZUIHJlY29yZCh1c3VhbGx5IDEwMjQgYnl0ZXMpLCBjb25zaXN0
cyBvZiBhdHRyaWJ1dGVzLiAqLwogc3RydWN0IG1mdF9pbm9kZSB7CiAJc3RydWN0IHJiX25vZGUg
bm9kZTsKIAlzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmk7CkBAIC0yOTEsNyArMjg5LDcgQEAgc3Ry
dWN0IG1mdF9pbm9kZSB7CiAJYm9vbCBkaXJ0eTsKIH07CgotLyogbmVzdGVkIGNsYXNzIGZvciBu
dGZzX2lub2RlOjpuaV9sb2NrICovCisvKiBOZXN0ZWQgY2xhc3MgZm9yIG50ZnNfaW5vZGU6Om5p
X2xvY2suICovCiBlbnVtIG50ZnNfaW5vZGVfbXV0ZXhfbG9ja19jbGFzcyB7CiAJTlRGU19JTk9E
RV9NVVRFWF9ESVJUWSwKIAlOVEZTX0lOT0RFX01VVEVYX1NFQ1VSSVRZLApAQCAtMzAyLDI5ICsz
MDAsMzEgQEAgZW51bSBudGZzX2lub2RlX211dGV4X2xvY2tfY2xhc3MgewogfTsKCiAvKgotICog
bnRmcyBpbm9kZSAtIGV4dGVuZHMgbGludXggaW5vZGUuIGNvbnNpc3RzIG9mIG9uZSBvciBtb3Jl
IG1mdCBpbm9kZXMKKyAqIHN0dXJjdCBudGZzX2lub2RlCisgKgorICogTnRmcyBpbm9kZSAtIGV4
dGVuZHMgbGludXggaW5vZGUuIGNvbnNpc3RzIG9mIG9uZSBvciBtb3JlIE1GVCBpbm9kZXMuCiAg
Ki8KIHN0cnVjdCBudGZzX2lub2RlIHsKIAlzdHJ1Y3QgbWZ0X2lub2RlIG1pOyAvLyBiYXNlIHJl
Y29yZAoKIAkvKgotCSAqIFZhbGlkIHNpemU6IFswIC0gaV92YWxpZCkgLSB0aGVzZSByYW5nZSBp
biBmaWxlIGNvbnRhaW5zIHZhbGlkIGRhdGEKLQkgKiBSYW5nZSBbaV92YWxpZCAtIGlub2RlLT5p
X3NpemUpIC0gY29udGFpbnMgMAotCSAqIFVzdWFsbHkgaV92YWxpZCA8PSBpbm9kZS0+aV9zaXpl
CisJICogVmFsaWQgc2l6ZTogWzAgLSBpX3ZhbGlkKSAtIHRoZXNlIHJhbmdlIGluIGZpbGUgY29u
dGFpbnMgdmFsaWQgZGF0YS4KKwkgKiBSYW5nZSBbaV92YWxpZCAtIGlub2RlLT5pX3NpemUpIC0g
Y29udGFpbnMgMC4KKwkgKiBVc3VhbGx5IGlfdmFsaWQgPD0gaW5vZGUtPmlfc2l6ZS4KIAkgKi8K
IAl1NjQgaV92YWxpZDsKIAlzdHJ1Y3QgdGltZXNwZWM2NCBpX2NydGltZTsKCiAJc3RydWN0IG11
dGV4IG5pX2xvY2s7CgotCS8qIGZpbGUgYXR0cmlidXRlcyBmcm9tIHN0ZCAqLworCS8qIEZpbGUg
YXR0cmlidXRlcyBmcm9tIHN0ZC4gKi8KIAllbnVtIEZJTEVfQVRUUklCVVRFIHN0ZF9mYTsKIAlf
X2xlMzIgc3RkX3NlY3VyaXR5X2lkOwoKIAkvKgotCSAqIHRyZWUgb2YgbWZ0X2lub2RlCi0JICog
bm90IGVtcHR5IHdoZW4gcHJpbWFyeSBNRlQgcmVjb3JkICh1c3VhbGx5IDEwMjQgYnl0ZXMpIGNh
bid0IHNhdmUgYWxsIGF0dHJpYnV0ZXMKLQkgKiBlLmcuIGZpbGUgYmVjb21lcyB0b28gZnJhZ21l
bnRlZCBvciBjb250YWlucyBhIGxvdCBvZiBuYW1lcworCSAqIFRyZWUgb2YgbWZ0X2lub2RlLgor
CSAqIE5vdCBlbXB0eSB3aGVuIHByaW1hcnkgTUZUIHJlY29yZCAodXN1YWxseSAxMDI0IGJ5dGVz
KSBjYW4ndCBzYXZlIGFsbCBhdHRyaWJ1dGVzCisJICogZS5nLiBmaWxlIGJlY29tZXMgdG9vIGZy
YWdtZW50ZWQgb3IgY29udGFpbnMgYSBsb3Qgb2YgbmFtZXMuCiAJICovCiAJc3RydWN0IHJiX3Jv
b3QgbWlfdHJlZTsKCkBAIC0zNDYsNyArMzQ2LDcgQEAgc3RydWN0IG50ZnNfaW5vZGUgewoKIAlz
dHJ1Y3QgewogCQlzdHJ1Y3QgcnVuc190cmVlIHJ1bjsKLQkJc3RydWN0IEFUVFJfTElTVF9FTlRS
WSAqbGU7IC8vIDFLIGFsaWduZWQgbWVtb3J5CisJCXN0cnVjdCBBVFRSX0xJU1RfRU5UUlkgKmxl
OyAvLyAxSyBhbGlnbmVkIG1lbW9yeS4KIAkJc2l6ZV90IHNpemU7CiAJCWJvb2wgZGlydHk7CiAJ
fSBhdHRyX2xpc3Q7CkBAIC0zNzUsNyArMzc1LDcgQEAgZW51bSBSRVBBUlNFX1NJR04gewogCVJF
UEFSU0VfTElOSyA9IDMKIH07CgotLyogZnVuY3Rpb25zIGZyb20gYXR0cmliLmMqLworLyogRnVu
Y3Rpb25zIGZyb20gYXR0cmliLmMgKi8KIGludCBhdHRyX2xvYWRfcnVucyhzdHJ1Y3QgQVRUUklC
ICphdHRyLCBzdHJ1Y3QgbnRmc19pbm9kZSAqbmksCiAJCSAgIHN0cnVjdCBydW5zX3RyZWUgKnJ1
biwgY29uc3QgQ0xTVCAqdmNuKTsKIGludCBhdHRyX2FsbG9jYXRlX2NsdXN0ZXJzKHN0cnVjdCBu
dGZzX3NiX2luZm8gKnNiaSwgc3RydWN0IHJ1bnNfdHJlZSAqcnVuLApAQCAtNDEwLDcgKzQxMCw3
IEBAIGludCBhdHRyX2FsbG9jYXRlX2ZyYW1lKHN0cnVjdCBudGZzX2lub2RlICpuaSwgQ0xTVCBm
cmFtZSwgc2l6ZV90IGNvbXByX3NpemUsCiBpbnQgYXR0cl9jb2xsYXBzZV9yYW5nZShzdHJ1Y3Qg
bnRmc19pbm9kZSAqbmksIHU2NCB2Ym8sIHU2NCBieXRlcyk7CiBpbnQgYXR0cl9wdW5jaF9ob2xl
KHN0cnVjdCBudGZzX2lub2RlICpuaSwgdTY0IHZibywgdTY0IGJ5dGVzKTsKCi0vKiBmdW5jdGlv
bnMgZnJvbSBhdHRybGlzdC5jKi8KKy8qIEZ1bmN0aW9ucyBmcm9tIGF0dHJsaXN0LmMgKi8KIHZv
aWQgYWxfZGVzdHJveShzdHJ1Y3QgbnRmc19pbm9kZSAqbmkpOwogYm9vbCBhbF92ZXJpZnkoc3Ry
dWN0IG50ZnNfaW5vZGUgKm5pKTsKIGludCBudGZzX2xvYWRfYXR0cl9saXN0KHN0cnVjdCBudGZz
X2lub2RlICpuaSwgc3RydWN0IEFUVFJJQiAqYXR0cik7CkBAIC00MzYsMTIgKzQzNiwxMiBAQCBz
dGF0aWMgaW5saW5lIHNpemVfdCBhbF9hbGlnbmVkKHNpemVfdCBzaXplKQogCXJldHVybiAoc2l6
ZSArIDEwMjMpICYgfihzaXplX3QpMTAyMzsKIH0KCi0vKiBnbG9iYWxzIGZyb20gYml0ZnVuYy5j
ICovCisvKiBHbG9iYWxzIGZyb20gYml0ZnVuYy5jICovCiBib29sIGFyZV9iaXRzX2NsZWFyKGNv
bnN0IHVsb25nICptYXAsIHNpemVfdCBiaXQsIHNpemVfdCBuYml0cyk7CiBib29sIGFyZV9iaXRz
X3NldChjb25zdCB1bG9uZyAqbWFwLCBzaXplX3QgYml0LCBzaXplX3QgbmJpdHMpOwogc2l6ZV90
IGdldF9zZXRfYml0c19leChjb25zdCB1bG9uZyAqbWFwLCBzaXplX3QgYml0LCBzaXplX3QgbmJp
dHMpOwoKLS8qIGdsb2JhbHMgZnJvbSBkaXIuYyAqLworLyogR2xvYmFscyBmcm9tIGRpci5jICov
CiBpbnQgbnRmc191dGYxNl90b19ubHMoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBjb25zdCBz
dHJ1Y3QgbGVfc3RyICp1bmksCiAJCSAgICAgIHU4ICpidWYsIGludCBidWZfbGVuKTsKIGludCBu
dGZzX25sc190b191dGYxNihzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIGNvbnN0IHU4ICpuYW1l
LCB1MzIgbmFtZV9sZW4sCkBAIC00NTIsNyArNDUyLDcgQEAgc3RydWN0IGlub2RlICpkaXJfc2Vh
cmNoX3Uoc3RydWN0IGlub2RlICpkaXIsIGNvbnN0IHN0cnVjdCBjcHVfc3RyICp1bmksCiBib29s
IGRpcl9pc19lbXB0eShzdHJ1Y3QgaW5vZGUgKmRpcik7CiBleHRlcm4gY29uc3Qgc3RydWN0IGZp
bGVfb3BlcmF0aW9ucyBudGZzX2Rpcl9vcGVyYXRpb25zOwoKLS8qIGdsb2JhbHMgZnJvbSBmaWxl
LmMqLworLyogR2xvYmFscyBmcm9tIGZpbGUuYyAqLwogaW50IG50ZnNfZ2V0YXR0cihzdHJ1Y3Qg
dXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIGNvbnN0IHN0cnVjdCBwYXRoICpwYXRoLAogCQkg
c3RydWN0IGtzdGF0ICpzdGF0LCB1MzIgcmVxdWVzdF9tYXNrLCB1MzIgZmxhZ3MpOwogdm9pZCBu
dGZzX3NwYXJzZV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICpwYWdl
MCwgQ0xTVCB2Y24sCkBAIC00NjYsNyArNDY2LDcgQEAgZXh0ZXJuIGNvbnN0IHN0cnVjdCBpbm9k
ZV9vcGVyYXRpb25zIG50ZnNfc3BlY2lhbF9pbm9kZV9vcGVyYXRpb25zOwogZXh0ZXJuIGNvbnN0
IHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIG50ZnNfZmlsZV9pbm9kZV9vcGVyYXRpb25zOwogZXh0
ZXJuIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgbnRmc19maWxlX29wZXJhdGlvbnM7Cgot
LyogZ2xvYmFscyBmcm9tIGZyZWNvcmQuYyAqLworLyogR2xvYmFscyBmcm9tIGZyZWNvcmQuYyAq
Lwogdm9pZCBuaV9yZW1vdmVfbWkoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgbWZ0X2lu
b2RlICptaSk7CiBzdHJ1Y3QgQVRUUl9TVERfSU5GTyAqbmlfc3RkKHN0cnVjdCBudGZzX2lub2Rl
ICpuaSk7CiBzdHJ1Y3QgQVRUUl9TVERfSU5GTzUgKm5pX3N0ZDUoc3RydWN0IG50ZnNfaW5vZGUg
Km5pKTsKQEAgLTUyMywxMCArNTIzLDEwIEBAIGludCBuaV9yZWFkX2ZyYW1lKHN0cnVjdCBudGZz
X2lub2RlICpuaSwgdTY0IGZyYW1lX3Zibywgc3RydWN0IHBhZ2UgKipwYWdlcywKIGludCBuaV93
cml0ZV9mcmFtZShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBwYWdlICoqcGFnZXMsCiAJ
CSAgIHUzMiBwYWdlc19wZXJfZnJhbWUpOwoKLS8qIGdsb2JhbHMgZnJvbSBmc2xvZy5jICovCisv
KiBHbG9iYWxzIGZyb20gZnNsb2cuYyAqLwogaW50IGxvZ19yZXBsYXkoc3RydWN0IG50ZnNfaW5v
ZGUgKm5pLCBib29sICppbml0aWFsaXplZCk7CgotLyogZ2xvYmFscyBmcm9tIGZzbnRmcy5jICov
CisvKiBHbG9iYWxzIGZyb20gZnNudGZzLmMgKi8KIGJvb2wgbnRmc19maXhfcHJlX3dyaXRlKHN0
cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJoZHIsIHNpemVfdCBieXRlcyk7CiBpbnQgbnRmc19m
aXhfcG9zdF9yZWFkKHN0cnVjdCBOVEZTX1JFQ09SRF9IRUFERVIgKnJoZHIsIHNpemVfdCBieXRl
cywKIAkJICAgICAgIGJvb2wgc2ltcGxlKTsKQEAgLTU5Miw3ICs1OTIsNyBAQCBpbnQgbnRmc19y
ZW1vdmVfcmVwYXJzZShzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIF9fbGUzMiBydGFnLAogdm9p
ZCBtYXJrX2FzX2ZyZWVfZXgoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGxjbiwgQ0xT
VCBsZW4sIGJvb2wgdHJpbSk7CiBpbnQgcnVuX2RlYWxsb2NhdGUoc3RydWN0IG50ZnNfc2JfaW5m
byAqc2JpLCBzdHJ1Y3QgcnVuc190cmVlICpydW4sIGJvb2wgdHJpbSk7CgotLyogZ2xvYmFscyBm
cm9tIGluZGV4LmMgKi8KKy8qIEdsb2JhbHMgZnJvbSBpbmRleC5jICovCiBpbnQgaW5keF91c2Vk
X2JpdChzdHJ1Y3QgbnRmc19pbmRleCAqaW5keCwgc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzaXpl
X3QgKmJpdCk7CiB2b2lkIGZuZF9jbGVhcihzdHJ1Y3QgbnRmc19mbmQgKmZuZCk7CiBzdGF0aWMg
aW5saW5lIHN0cnVjdCBudGZzX2ZuZCAqZm5kX2dldCh2b2lkKQpAQCAtNjMyLDcgKzYzMiw3IEBA
IGludCBpbmR4X3VwZGF0ZV9kdXAoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCBzdHJ1Y3QgbnRmc19z
Yl9pbmZvICpzYmksCiAJCSAgICBjb25zdCBzdHJ1Y3QgQVRUUl9GSUxFX05BTUUgKmZuYW1lLAog
CQkgICAgY29uc3Qgc3RydWN0IE5URlNfRFVQX0lORk8gKmR1cCwgaW50IHN5bmMpOwoKLS8qIGds
b2JhbHMgZnJvbSBpbm9kZS5jICovCisvKiBHbG9iYWxzIGZyb20gaW5vZGUuYyAqLwogc3RydWN0
IGlub2RlICpudGZzX2lnZXQ1KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIGNvbnN0IHN0cnVjdCBN
RlRfUkVGICpyZWYsCiAJCQkgY29uc3Qgc3RydWN0IGNwdV9zdHIgKm5hbWUpOwogaW50IG50ZnNf
c2V0X3NpemUoc3RydWN0IGlub2RlICppbm9kZSwgdTY0IG5ld19zaXplKTsKQEAgLTY1NiwxNCAr
NjU2LDE0IEBAIGV4dGVybiBjb25zdCBzdHJ1Y3QgaW5vZGVfb3BlcmF0aW9ucyBudGZzX2xpbmtf
aW5vZGVfb3BlcmF0aW9uczsKIGV4dGVybiBjb25zdCBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVy
YXRpb25zIG50ZnNfYW9wczsKIGV4dGVybiBjb25zdCBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVy
YXRpb25zIG50ZnNfYW9wc19jbXByOwoKLS8qIGdsb2JhbHMgZnJvbSBuYW1lX2kuYyovCisvKiBH
bG9iYWxzIGZyb20gbmFtZV9pLmMgKi8KIGludCBmaWxsX25hbWVfZGUoc3RydWN0IG50ZnNfc2Jf
aW5mbyAqc2JpLCB2b2lkICpidWYsIGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLAogCQkgY29uc3Qg
c3RydWN0IGNwdV9zdHIgKnVuaSk7CiBzdHJ1Y3QgZGVudHJ5ICpudGZzM19nZXRfcGFyZW50KHN0
cnVjdCBkZW50cnkgKmNoaWxkKTsKCiBleHRlcm4gY29uc3Qgc3RydWN0IGlub2RlX29wZXJhdGlv
bnMgbnRmc19kaXJfaW5vZGVfb3BlcmF0aW9uczsKCi0vKiBnbG9iYWxzIGZyb20gcmVjb3JkLmMg
Ki8KKy8qIEdsb2JhbHMgZnJvbSByZWNvcmQuYyAqLwogaW50IG1pX2dldChzdHJ1Y3QgbnRmc19z
Yl9pbmZvICpzYmksIENMU1Qgcm5vLCBzdHJ1Y3QgbWZ0X2lub2RlICoqbWkpOwogdm9pZCBtaV9w
dXQoc3RydWN0IG1mdF9pbm9kZSAqbWkpOwogaW50IG1pX2luaXQoc3RydWN0IG1mdF9pbm9kZSAq
bWksIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBybm8pOwpAQCAtNzE3LDcgKzcxNyw3
IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBtaV9nZXRfcmVmKGNvbnN0IHN0cnVjdCBtZnRfaW5vZGUg
Km1pLCBzdHJ1Y3QgTUZUX1JFRiAqcmVmKQogCXJlZi0+c2VxID0gbWktPm1yZWMtPnNlcTsKIH0K
Ci0vKiBnbG9iYWxzIGZyb20gcnVuLmMgKi8KKy8qIEdsb2JhbHMgZnJvbSBydW4uYyAqLwogYm9v
bCBydW5fbG9va3VwX2VudHJ5KGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24s
IENMU1QgKmxjbiwKIAkJICAgICAgQ0xTVCAqbGVuLCBzaXplX3QgKmluZGV4KTsKIHZvaWQgcnVu
X3RydW5jYXRlKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24pOwpAQCAtNzQ2LDEzICs3
NDYsMTMgQEAgaW50IHJ1bl91bnBhY2tfZXgoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIENMU1QgaW5vLAogI2VuZGlmCiBpbnQgcnVuX2dldF9oaWdoZXN0
X3ZjbihDTFNUIHZjbiwgY29uc3QgdTggKnJ1bl9idWYsIHU2NCAqaGlnaGVzdF92Y24pOwoKLS8q
IGdsb2JhbHMgZnJvbSBzdXBlci5jICovCisvKiBHbG9iYWxzIGZyb20gc3VwZXIuYyAqLwogdm9p
ZCAqbnRmc19zZXRfc2hhcmVkKHZvaWQgKnB0ciwgdTMyIGJ5dGVzKTsKIHZvaWQgKm50ZnNfcHV0
X3NoYXJlZCh2b2lkICpwdHIpOwogdm9pZCBudGZzX3VubWFwX21ldGEoc3RydWN0IHN1cGVyX2Js
b2NrICpzYiwgQ0xTVCBsY24sIENMU1QgbGVuKTsKIGludCBudGZzX2Rpc2NhcmQoc3RydWN0IG50
ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIExjbiwgQ0xTVCBMZW4pOwoKLS8qIGdsb2JhbHMgZnJvbSBi
aXRtYXAuYyovCisvKiBHbG9iYWxzIGZyb20gYml0bWFwLmMqLwogaW50IF9faW5pdCBudGZzM19p
bml0X2JpdG1hcCh2b2lkKTsKIHZvaWQgbnRmczNfZXhpdF9iaXRtYXAodm9pZCk7CiB2b2lkIHdu
ZF9jbG9zZShzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kKTsKQEAgLTc2Niw3ICs3NjYsNyBAQCBpbnQg
d25kX3NldF91c2VkKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBiaXQsIHNpemVfdCBi
aXRzKTsKIGJvb2wgd25kX2lzX2ZyZWUoc3RydWN0IHduZF9iaXRtYXAgKnduZCwgc2l6ZV90IGJp
dCwgc2l6ZV90IGJpdHMpOwogYm9vbCB3bmRfaXNfdXNlZChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25k
LCBzaXplX3QgYml0LCBzaXplX3QgYml0cyk7CgotLyogUG9zc2libGUgdmFsdWVzIGZvciAnZmxh
Z3MnICd3bmRfZmluZCcgKi8KKy8qIFBvc3NpYmxlIHZhbHVlcyBmb3IgJ2ZsYWdzJyAnd25kX2Zp
bmQnLiAqLwogI2RlZmluZSBCSVRNQVBfRklORF9NQVJLX0FTX1VTRUQgMHgwMQogI2RlZmluZSBC
SVRNQVBfRklORF9GVUxMIDB4MDIKIHNpemVfdCB3bmRfZmluZChzdHJ1Y3Qgd25kX2JpdG1hcCAq
d25kLCBzaXplX3QgdG9fYWxsb2MsIHNpemVfdCBoaW50LApAQCAtNzc1LDcgKzc3NSw3IEBAIGlu
dCB3bmRfZXh0ZW5kKHN0cnVjdCB3bmRfYml0bWFwICp3bmQsIHNpemVfdCBuZXdfYml0cyk7CiB2
b2lkIHduZF96b25lX3NldChzdHJ1Y3Qgd25kX2JpdG1hcCAqd25kLCBzaXplX3QgTGNuLCBzaXpl
X3QgTGVuKTsKIGludCBudGZzX3RyaW1fZnMoc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBzdHJ1
Y3QgZnN0cmltX3JhbmdlICpyYW5nZSk7CgotLyogZ2xvYmFscyBmcm9tIHVwY2FzZS5jICovCisv
KiBHbG9iYWxzIGZyb20gdXBjYXNlLmMgKi8KIGludCBudGZzX2NtcF9uYW1lcyhjb25zdCBfX2xl
MTYgKnMxLCBzaXplX3QgbDEsIGNvbnN0IF9fbGUxNiAqczIsIHNpemVfdCBsMiwKIAkJICAgY29u
c3QgdTE2ICp1cGNhc2UsIGJvb2wgYm90aGNhc2UpOwogaW50IG50ZnNfY21wX25hbWVzX2NwdShj
b25zdCBzdHJ1Y3QgY3B1X3N0ciAqdW5pMSwgY29uc3Qgc3RydWN0IGxlX3N0ciAqdW5pMiwKQEAg
LTgxMiw3ICs4MTIsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfbnRmczMoc3RydWN0IG50ZnNf
c2JfaW5mbyAqc2JpKQogCXJldHVybiBzYmktPnZvbHVtZS5tYWpvcl92ZXIgPj0gMzsKIH0KCi0v
KihzYi0+c19mbGFncyAmIFNCX0FDVElWRSkqLworLyogKHNiLT5zX2ZsYWdzICYgU0JfQUNUSVZF
KSAqLwogc3RhdGljIGlubGluZSBib29sIGlzX21vdW50ZWQoc3RydWN0IG50ZnNfc2JfaW5mbyAq
c2JpKQogewogCXJldHVybiAhIXNiaS0+c2ItPnNfcm9vdDsKQEAgLTg4Nyw3ICs4ODcsNyBAQCBz
dGF0aWMgaW5saW5lIGJvb2wgcnVuX2lzX2VtcHR5KHN0cnVjdCBydW5zX3RyZWUgKnJ1bikKIAly
ZXR1cm4gIXJ1bi0+Y291bnQ7CiB9CgotLyogTlRGUyB1c2VzIHF1YWQgYWxpZ25lZCBiaXRtYXBz
ICovCisvKiBOVEZTIHVzZXMgcXVhZCBhbGlnbmVkIGJpdG1hcHMuICovCiBzdGF0aWMgaW5saW5l
IHNpemVfdCBiaXRtYXBfc2l6ZShzaXplX3QgYml0cykKIHsKIAlyZXR1cm4gUXVhZEFsaWduKChi
aXRzICsgNykgPj4gMyk7CkBAIC04OTksOSArODk5LDcgQEAgc3RhdGljIGlubGluZSBzaXplX3Qg
Yml0bWFwX3NpemUoc2l6ZV90IGJpdHMpCiAjZGVmaW5lIE5URlNfVElNRV9HUkFOIDEwMAoKIC8q
Ci0gKiBrZXJuZWwybnQKLSAqCi0gKiBjb252ZXJ0cyBpbi1tZW1vcnkga2VybmVsIHRpbWVzdGFt
cCBpbnRvIG50IHRpbWUKKyAqIGtlcm5lbDJudCAtIENvbnZlcnRzIGluLW1lbW9yeSBrZXJuZWwg
dGltZXN0YW1wIGludG8gbnQgdGltZS4KICAqLwogc3RhdGljIGlubGluZSBfX2xlNjQga2VybmVs
Mm50KGNvbnN0IHN0cnVjdCB0aW1lc3BlYzY0ICp0cykKIHsKQEAgLTkxMiw5ICs5MTAsNyBAQCBz
dGF0aWMgaW5saW5lIF9fbGU2NCBrZXJuZWwybnQoY29uc3Qgc3RydWN0IHRpbWVzcGVjNjQgKnRz
KQogfQoKIC8qCi0gKiBudDJrZXJuZWwKLSAqCi0gKiBjb252ZXJ0cyBvbi1kaXNrIG50IHRpbWUg
aW50byBrZXJuZWwgdGltZXN0YW1wCisgKiBudDJrZXJuZWwgLSBDb252ZXJ0cyBvbi1kaXNrIG50
IHRpbWUgaW50byBrZXJuZWwgdGltZXN0YW1wLgogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgbnQy
a2VybmVsKGNvbnN0IF9fbGU2NCB0bSwgc3RydWN0IHRpbWVzcGVjNjQgKnRzKQogewpAQCAtOTMw
LDEzICs5MjYsMTcgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgbnRmc19zYl9pbmZvICpudGZzX3Ni
KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IpCiAJcmV0dXJuIHNiLT5zX2ZzX2luZm87CiB9CgotLyog
QWxpZ24gdXAgb24gY2x1c3RlciBib3VuZGFyeSAqLworLyoKKyAqIG50ZnNfdXBfY2x1c3RlciAt
IEFsaWduIHVwIG9uIGNsdXN0ZXIgYm91bmRhcnkuCisgKi8KIHN0YXRpYyBpbmxpbmUgdTY0IG50
ZnNfdXBfY2x1c3Rlcihjb25zdCBzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIHU2NCBzaXplKQog
ewogCXJldHVybiAoc2l6ZSArIHNiaS0+Y2x1c3Rlcl9tYXNrKSAmIHNiaS0+Y2x1c3Rlcl9tYXNr
X2ludjsKIH0KCi0vKiBBbGlnbiB1cCBvbiBjbHVzdGVyIGJvdW5kYXJ5ICovCisvKgorICogbnRm
c191cF9ibG9jayAtIEFsaWduIHVwIG9uIGNsdXN0ZXIgYm91bmRhcnkuCisgKi8KIHN0YXRpYyBp
bmxpbmUgdTY0IG50ZnNfdXBfYmxvY2soY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdTY0
IHNpemUpCiB7CiAJcmV0dXJuIChzaXplICsgc2ItPnNfYmxvY2tzaXplIC0gMSkgJiB+KHU2NCko
c2ItPnNfYmxvY2tzaXplIC0gMSk7CkBAIC05ODYsNyArOTg2LDcgQEAgc3RhdGljIGlubGluZSBp
bnQgbmlfZXh0X2NvbXByZXNzX2JpdHMoY29uc3Qgc3RydWN0IG50ZnNfaW5vZGUgKm5pKQogCXJl
dHVybiAweGIgKyAobmktPm5pX2ZsYWdzICYgTklfRkxBR19DT01QUkVTU0VEX01BU0spOwogfQoK
LS8qIGJpdHMgLSAweGMsIDB4ZCwgMHhlLCAweGYsIDB4MTAgKi8KKy8qIEJpdHMgLSAweGMsIDB4
ZCwgMHhlLCAweGYsIDB4MTAgKi8KIHN0YXRpYyBpbmxpbmUgdm9pZCBuaV9zZXRfZXh0X2NvbXBy
ZXNzX2JpdHMoc3RydWN0IG50ZnNfaW5vZGUgKm5pLCB1OCBiaXRzKQogewogCW5pLT5uaV9mbGFn
cyB8PSAoYml0cyAtIDB4YikgJiBOSV9GTEFHX0NPTVBSRVNTRURfTUFTSzsKZGlmZiAtLWdpdCBh
L2ZzL250ZnMzL3JlY29yZC5jIGIvZnMvbnRmczMvcmVjb3JkLmMKaW5kZXggMGQ0YTYyNTFiZGRj
Li42NGE5YzRmMDVjN2MgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL3JlY29yZC5jCisrKyBiL2ZzL250
ZnMzL3JlY29yZC5jCkBAIC0xOCwxNSArMTgsMTMgQEAgc3RhdGljIGlubGluZSBpbnQgY29tcGFy
ZV9hdHRyKGNvbnN0IHN0cnVjdCBBVFRSSUIgKmxlZnQsIGVudW0gQVRUUl9UWVBFIHR5cGUsCiAJ
CQkgICAgICAgY29uc3QgX19sZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwKIAkJCSAgICAgICBjb25z
dCB1MTYgKnVwY2FzZSkKIHsKLQkvKiBGaXJzdCwgY29tcGFyZSB0aGUgdHlwZSBjb2RlczogKi8K
KwkvKiBGaXJzdCwgY29tcGFyZSB0aGUgdHlwZSBjb2Rlcy4gKi8KIAlpbnQgZGlmZiA9IGxlMzJf
dG9fY3B1KGxlZnQtPnR5cGUpIC0gbGUzMl90b19jcHUodHlwZSk7CgogCWlmIChkaWZmKQogCQly
ZXR1cm4gZGlmZjsKCi0JLyoKLQkgKiBUaGV5IGhhdmUgdGhlIHNhbWUgdHlwZSBjb2RlLCBzbyB3
ZSBoYXZlIHRvIGNvbXBhcmUgdGhlIG5hbWVzLgotCSAqLworCS8qIFRoZXkgaGF2ZSB0aGUgc2Ft
ZSB0eXBlIGNvZGUsIHNvIHdlIGhhdmUgdG8gY29tcGFyZSB0aGUgbmFtZXMuICovCiAJcmV0dXJu
IG50ZnNfY21wX25hbWVzKGF0dHJfbmFtZShsZWZ0KSwgbGVmdC0+bmFtZV9sZW4sIG5hbWUsIG5h
bWVfbGVuLAogCQkJICAgICAgdXBjYXNlLCB0cnVlKTsKIH0KQEAgLTM0LDcgKzMyLDcgQEAgc3Rh
dGljIGlubGluZSBpbnQgY29tcGFyZV9hdHRyKGNvbnN0IHN0cnVjdCBBVFRSSUIgKmxlZnQsIGVu
dW0gQVRUUl9UWVBFIHR5cGUsCiAvKgogICogbWlfbmV3X2F0dHRfaWQKICAqCi0gKiByZXR1cm5z
IHVudXNlZCBhdHRyaWJ1dGUgaWQgdGhhdCBpcyBsZXNzIHRoYW4gbXJlYy0+bmV4dF9hdHRyX2lk
CisgKiBSZXR1cm46IFVudXNlZCBhdHRyaWJ1dGUgaWQgdGhhdCBpcyBsZXNzIHRoYW4gbXJlYy0+
bmV4dF9hdHRyX2lkLgogICovCiBzdGF0aWMgX19sZTE2IG1pX25ld19hdHR0X2lkKHN0cnVjdCBt
ZnRfaW5vZGUgKm1pKQogewpAQCAtNTAsNyArNDgsNyBAQCBzdGF0aWMgX19sZTE2IG1pX25ld19h
dHR0X2lkKHN0cnVjdCBtZnRfaW5vZGUgKm1pKQogCQlyZXR1cm4gaWQ7CiAJfQoKLQkvKiBPbmUg
cmVjb3JkIGNhbiBzdG9yZSB1cCB0byAxMDI0LzI0IH49IDQyIGF0dHJpYnV0ZXMgKi8KKwkvKiBP
bmUgcmVjb3JkIGNhbiBzdG9yZSB1cCB0byAxMDI0LzI0IH49IDQyIGF0dHJpYnV0ZXMuICovCiAJ
ZnJlZV9pZCA9IDA7CiAJbWF4X2lkID0gMDsKCkBAIC0xMTUsOSArMTEzLDcgQEAgaW50IG1pX2lu
aXQoc3RydWN0IG1mdF9pbm9kZSAqbWksIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBy
bm8pCiB9CgogLyoKLSAqIG1pX3JlYWQKLSAqCi0gKiByZWFkcyBNRlQgZGF0YQorICogbWlfcmVh
ZCAtIFJlYWQgTUZUIGRhdGEuCiAgKi8KIGludCBtaV9yZWFkKHN0cnVjdCBtZnRfaW5vZGUgKm1p
LCBib29sIGlzX21mdCkKIHsKQEAgLTE3OCw3ICsxNzQsNyBAQCBpbnQgbWlfcmVhZChzdHJ1Y3Qg
bWZ0X2lub2RlICptaSwgYm9vbCBpc19tZnQpCiAJCWdvdG8gb3V0OwoKIG9rOgotCS8qIGNoZWNr
IGZpZWxkICd0b3RhbCcgb25seSBoZXJlICovCisJLyogQ2hlY2sgZmllbGQgJ3RvdGFsJyBvbmx5
IGhlcmUuICovCiAJaWYgKGxlMzJfdG9fY3B1KHJlYy0+dG90YWwpICE9IGJwcikgewogCQllcnIg
PSAtRUlOVkFMOwogCQlnb3RvIG91dDsKQEAgLTIxMCwxMyArMjA2LDEzIEBAIHN0cnVjdCBBVFRS
SUIgKm1pX2VudW1fYXR0cihzdHJ1Y3QgbWZ0X2lub2RlICptaSwgc3RydWN0IEFUVFJJQiAqYXR0
cikKIAkJCXJldHVybiBOVUxMOwogCQl9CgotCQkvKiBTa2lwIG5vbi1yZXNpZGVudCByZWNvcmRz
ICovCisJCS8qIFNraXAgbm9uLXJlc2lkZW50IHJlY29yZHMuICovCiAJCWlmICghaXNfcmVjX2lu
dXNlKHJlYykpCiAJCQlyZXR1cm4gTlVMTDsKCiAJCWF0dHIgPSBBZGQyUHRyKHJlYywgb2ZmKTsK
IAl9IGVsc2UgewotCQkvKiBDaGVjayBpZiBpbnB1dCBhdHRyIGluc2lkZSByZWNvcmQgKi8KKwkJ
LyogQ2hlY2sgaWYgaW5wdXQgYXR0ciBpbnNpZGUgcmVjb3JkLiAqLwogCQlvZmYgPSBQdHJPZmZz
ZXQocmVjLCBhdHRyKTsKIAkJaWYgKG9mZiA+PSB1c2VkKQogCQkJcmV0dXJuIE5VTEw7CkBAIC0y
MzMsMjcgKzIyOSwyNyBAQCBzdHJ1Y3QgQVRUUklCICptaV9lbnVtX2F0dHIoc3RydWN0IG1mdF9p
bm9kZSAqbWksIHN0cnVjdCBBVFRSSUIgKmF0dHIpCgogCWFzaXplID0gbGUzMl90b19jcHUoYXR0
ci0+c2l6ZSk7CgotCS8qIENhbiB3ZSB1c2UgdGhlIGZpcnN0IGZpZWxkIChhdHRyLT50eXBlKSAq
LworCS8qIENhbiB3ZSB1c2UgdGhlIGZpcnN0IGZpZWxkIChhdHRyLT50eXBlKS4gKi8KIAlpZiAo
b2ZmICsgOCA+IHVzZWQpIHsKIAkJc3RhdGljX2Fzc2VydChRdWFkQWxpZ24oc2l6ZW9mKGVudW0g
QVRUUl9UWVBFKSkgPT0gOCk7CiAJCXJldHVybiBOVUxMOwogCX0KCiAJaWYgKGF0dHItPnR5cGUg
PT0gQVRUUl9FTkQpIHsKLQkJLyogZW5kIG9mIGVudW1lcmF0aW9uICovCisJCS8qIEVuZCBvZiBl
bnVtZXJhdGlvbi4gKi8KIAkJcmV0dXJuIE5VTEw7CiAJfQoKLQkvKiAweDEwMCBpcyBsYXN0IGtu
b3duIGF0dHJpYnV0ZSBmb3Igbm93Ki8KKwkvKiAweDEwMCBpcyBsYXN0IGtub3duIGF0dHJpYnV0
ZSBmb3Igbm93LiAqLwogCXQzMiA9IGxlMzJfdG9fY3B1KGF0dHItPnR5cGUpOwogCWlmICgodDMy
ICYgMHhmKSB8fCAodDMyID4gMHgxMDApKQogCQlyZXR1cm4gTlVMTDsKCi0JLyogQ2hlY2sgYm91
bmRhcnkgKi8KKwkvKiBDaGVjayBib3VuZGFyeS4gKi8KIAlpZiAob2ZmICsgYXNpemUgPiB1c2Vk
KQogCQlyZXR1cm4gTlVMTDsKCi0JLyogQ2hlY2sgc2l6ZSBvZiBhdHRyaWJ1dGUgKi8KKwkvKiBD
aGVjayBzaXplIG9mIGF0dHJpYnV0ZS4gKi8KIAlpZiAoIWF0dHItPm5vbl9yZXMpIHsKIAkJaWYg
KGFzaXplIDwgU0laRU9GX1JFU0lERU5UKQogCQkJcmV0dXJuIE5VTEw7CkBAIC0yNzAsNyArMjY2
LDcgQEAgc3RydWN0IEFUVFJJQiAqbWlfZW51bV9hdHRyKHN0cnVjdCBtZnRfaW5vZGUgKm1pLCBz
dHJ1Y3QgQVRUUklCICphdHRyKQogCQlyZXR1cm4gYXR0cjsKIAl9CgotCS8qIENoZWNrIHNvbWUg
bm9ucmVzaWRlbnQgZmllbGRzICovCisJLyogQ2hlY2sgc29tZSBub25yZXNpZGVudCBmaWVsZHMu
ICovCiAJaWYgKGF0dHItPm5hbWVfbGVuICYmCiAJICAgIGxlMTZfdG9fY3B1KGF0dHItPm5hbWVf
b2ZmKSArIHNpemVvZihzaG9ydCkgKiBhdHRyLT5uYW1lX2xlbiA+CiAJCSAgICBsZTE2X3RvX2Nw
dShhdHRyLT5ucmVzLnJ1bl9vZmYpKSB7CkBAIC0yOTAsOSArMjg2LDcgQEAgc3RydWN0IEFUVFJJ
QiAqbWlfZW51bV9hdHRyKHN0cnVjdCBtZnRfaW5vZGUgKm1pLCBzdHJ1Y3QgQVRUUklCICphdHRy
KQogfQoKIC8qCi0gKiBtaV9maW5kX2F0dHIKLSAqCi0gKiBmaW5kcyB0aGUgYXR0cmlidXRlIGJ5
IHR5cGUgYW5kIG5hbWUgYW5kIGlkCisgKiBtaV9maW5kX2F0dHIgLSBGaW5kIHRoZSBhdHRyaWJ1
dGUgYnkgdHlwZSBhbmQgbmFtZSBhbmQgaWQuCiAgKi8KIHN0cnVjdCBBVFRSSUIgKm1pX2ZpbmRf
YXR0cihzdHJ1Y3QgbWZ0X2lub2RlICptaSwgc3RydWN0IEFUVFJJQiAqYXR0ciwKIAkJCSAgICBl
bnVtIEFUVFJfVFlQRSB0eXBlLCBjb25zdCBfX2xlMTYgKm5hbWUsCkBAIC0zNzIsNyArMzY2LDcg
QEAgaW50IG1pX2Zvcm1hdF9uZXcoc3RydWN0IG1mdF9pbm9kZSAqbWksIHN0cnVjdCBudGZzX3Ni
X2luZm8gKnNiaSwgQ0xTVCBybm8sCiAJfSBlbHNlIGlmIChtaV9yZWFkKG1pLCBpc19tZnQpKSB7
CiAJCTsKIAl9IGVsc2UgaWYgKHJlYy0+cmhkci5zaWduID09IE5URlNfRklMRV9TSUdOQVRVUkUp
IHsKLQkJLyogUmVjb3JkIGlzIHJldXNlZC4gVXBkYXRlIGl0cyBzZXF1ZW5jZSBudW1iZXIgKi8K
KwkJLyogUmVjb3JkIGlzIHJldXNlZC4gVXBkYXRlIGl0cyBzZXF1ZW5jZSBudW1iZXIuICovCiAJ
CXNlcSA9IGxlMTZfdG9fY3B1KHJlYy0+c2VxKSArIDE7CiAJCWlmICghc2VxKQogCQkJc2VxID0g
MTsKQEAgLTQwNCw5ICszOTgsNyBAQCBpbnQgbWlfZm9ybWF0X25ldyhzdHJ1Y3QgbWZ0X2lub2Rl
ICptaSwgc3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIHJubywKIH0KCiAvKgotICogbWlf
bWFya19mcmVlCi0gKgotICogbWFya3MgcmVjb3JkIGFzIHVudXNlZCBhbmQgbWFya3MgaXQgYXMg
ZnJlZSBpbiBiaXRtYXAKKyAqIG1pX21hcmtfZnJlZSAtIE1hcmsgcmVjb3JkIGFzIHVudXNlZCBh
bmQgbWFya3MgaXQgYXMgZnJlZSBpbiBiaXRtYXAuCiAgKi8KIHZvaWQgbWlfbWFya19mcmVlKHN0
cnVjdCBtZnRfaW5vZGUgKm1pKQogewpAQCAtNDI4LDEwICs0MjAsOSBAQCB2b2lkIG1pX21hcmtf
ZnJlZShzdHJ1Y3QgbWZ0X2lub2RlICptaSkKIH0KCiAvKgotICogbWlfaW5zZXJ0X2F0dHIKKyAq
IG1pX2luc2VydF9hdHRyIC0gUmVzZXJ2ZSBzcGFjZSBmb3IgbmV3IGF0dHJpYnV0ZS4KICAqCi0g
KiByZXNlcnZlcyBzcGFjZSBmb3IgbmV3IGF0dHJpYnV0ZQotICogcmV0dXJucyBub3QgZnVsbCBj
b25zdHJ1Y3RlZCBhdHRyaWJ1dGUgb3IgTlVMTCBpZiBub3QgcG9zc2libGUgdG8gY3JlYXRlCisg
KiBSZXR1cm46IE5vdCBmdWxsIGNvbnN0cnVjdGVkIGF0dHJpYnV0ZSBvciBOVUxMIGlmIG5vdCBw
b3NzaWJsZSB0byBjcmVhdGUuCiAgKi8KIHN0cnVjdCBBVFRSSUIgKm1pX2luc2VydF9hdHRyKHN0
cnVjdCBtZnRfaW5vZGUgKm1pLCBlbnVtIEFUVFJfVFlQRSB0eXBlLAogCQkJICAgICAgY29uc3Qg
X19sZTE2ICpuYW1lLCB1OCBuYW1lX2xlbiwgdTMyIGFzaXplLApAQCAtNDY4LDcgKzQ1OSw3IEBA
IHN0cnVjdCBBVFRSSUIgKm1pX2luc2VydF9hdHRyKHN0cnVjdCBtZnRfaW5vZGUgKm1pLCBlbnVt
IEFUVFJfVFlQRSB0eXBlLAogCX0KCiAJaWYgKCFhdHRyKSB7Ci0JCXRhaWwgPSA4OyAvKiBub3Qg
dXNlZCwganVzdCB0byBzdXBwcmVzcyB3YXJuaW5nICovCisJCXRhaWwgPSA4OyAvKiBOb3QgdXNl
ZCwganVzdCB0byBzdXBwcmVzcyB3YXJuaW5nLiAqLwogCQlhdHRyID0gQWRkMlB0cihyZWMsIHVz
ZWQgLSA4KTsKIAl9IGVsc2UgewogCQl0YWlsID0gdXNlZCAtIFB0ck9mZnNldChyZWMsIGF0dHIp
OwpAQCAtNDk0LDEwICs0ODUsOSBAQCBzdHJ1Y3QgQVRUUklCICptaV9pbnNlcnRfYXR0cihzdHJ1
Y3QgbWZ0X2lub2RlICptaSwgZW51bSBBVFRSX1RZUEUgdHlwZSwKIH0KCiAvKgotICogbWlfcmVt
b3ZlX2F0dHIKKyAqIG1pX3JlbW92ZV9hdHRyIC0gUmVtb3ZlIHRoZSBhdHRyaWJ1dGUgZnJvbSBy
ZWNvcmQuCiAgKgotICogcmVtb3ZlcyB0aGUgYXR0cmlidXRlIGZyb20gcmVjb3JkCi0gKiBOT1RF
OiBUaGUgc291cmNlIGF0dHIgd2lsbCBwb2ludCB0byBuZXh0IGF0dHJpYnV0ZQorICogTk9URTog
VGhlIHNvdXJjZSBhdHRyIHdpbGwgcG9pbnQgdG8gbmV4dCBhdHRyaWJ1dGUuCiAgKi8KIGJvb2wg
bWlfcmVtb3ZlX2F0dHIoc3RydWN0IG1mdF9pbm9kZSAqbWksIHN0cnVjdCBBVFRSSUIgKmF0dHIp
CiB7CkBAIC01NDMsNyArNTMzLDcgQEAgYm9vbCBtaV9yZXNpemVfYXR0cihzdHJ1Y3QgbWZ0X2lu
b2RlICptaSwgc3RydWN0IEFUVFJJQiAqYXR0ciwgaW50IGJ5dGVzKQogCQlpZiAodXNlZCArIGRz
aXplID4gdG90YWwpCiAJCQlyZXR1cm4gZmFsc2U7CiAJCW5zaXplID0gYXNpemUgKyBkc2l6ZTsK
LQkJLy8gbW92ZSB0YWlsCisJCS8qIE1vdmUgdGFpbCAqLwogCQltZW1tb3ZlKG5leHQgKyBkc2l6
ZSwgbmV4dCwgdGFpbCk7CiAJCW1lbXNldChuZXh0LCAwLCBkc2l6ZSk7CiAJCXVzZWQgKz0gZHNp
emU7CkBAIC01ODUsMTAgKzU3NSwxMCBAQCBpbnQgbWlfcGFja19ydW5zKHN0cnVjdCBtZnRfaW5v
ZGUgKm1pLCBzdHJ1Y3QgQVRUUklCICphdHRyLAogCXUzMiB0YWlsID0gdXNlZCAtIGFvZmYgLSBh
c2l6ZTsKIAl1MzIgZHNpemUgPSBzYmktPnJlY29yZF9zaXplIC0gdXNlZDsKCi0JLyogTWFrZSBh
IG1heGltdW0gZ2FwIGluIGN1cnJlbnQgcmVjb3JkICovCisJLyogTWFrZSBhIG1heGltdW0gZ2Fw
IGluIGN1cnJlbnQgcmVjb3JkLiAqLwogCW1lbW1vdmUobmV4dCArIGRzaXplLCBuZXh0LCB0YWls
KTsKCi0JLyogUGFjayBhcyBtdWNoIGFzIHBvc3NpYmxlICovCisJLyogUGFjayBhcyBtdWNoIGFz
IHBvc3NpYmxlLiAqLwogCWVyciA9IHJ1bl9wYWNrKHJ1biwgc3ZjbiwgbGVuLCBBZGQyUHRyKGF0
dHIsIHJ1bl9vZmYpLCBydW5fc2l6ZSArIGRzaXplLAogCQkgICAgICAgJnBsZW4pOwogCWlmIChl
cnIgPCAwKSB7CmRpZmYgLS1naXQgYS9mcy9udGZzMy9ydW4uYyBiL2ZzL250ZnMzL3J1bi5jCmlu
ZGV4IDVjZGY2ZWZlNjdlMC4uZmU5ZWU4MjJhOTcwIDEwMDY0NAotLS0gYS9mcy9udGZzMy9ydW4u
YworKysgYi9mcy9udGZzMy9ydW4uYwpAQCAtMTUsMjIgKzE1LDIxIEBACiAjaW5jbHVkZSAibnRm
cy5oIgogI2luY2x1ZGUgIm50ZnNfZnMuaCIKCi0vKiBydW5zX3RyZWUgaXMgYSBjb250aW51ZXMg
bWVtb3J5LiBUcnkgdG8gYXZvaWQgYmlnIHNpemUgICovCisvKiBydW5zX3RyZWUgaXMgYSBjb250
aW51ZXMgbWVtb3J5LiBUcnkgdG8gYXZvaWQgYmlnIHNpemUuICovCiAjZGVmaW5lIE5URlMzX1JV
Tl9NQVhfQllURVMgMHgxMDAwMAoKIHN0cnVjdCBudGZzX3J1biB7Ci0JQ0xTVCB2Y247IC8qIHZp
cnR1YWwgY2x1c3RlciBudW1iZXIgKi8KLQlDTFNUIGxlbjsgLyogbGVuZ3RoIGluIGNsdXN0ZXJz
ICovCi0JQ0xTVCBsY247IC8qIGxvZ2ljYWwgY2x1c3RlciBudW1iZXIgKi8KKwlDTFNUIHZjbjsg
LyogVmlydHVhbCBjbHVzdGVyIG51bWJlci4gKi8KKwlDTFNUIGxlbjsgLyogTGVuZ3RoIGluIGNs
dXN0ZXJzLiAqLworCUNMU1QgbGNuOyAvKiBMb2dpY2FsIGNsdXN0ZXIgbnVtYmVyLiAqLwogfTsK
CiAvKgotICogcnVuX2xvb2t1cAorICogcnVuX2xvb2t1cCAtIExvb2t1cCB0aGUgaW5kZXggb2Yg
YSBNQ0IgZW50cnkgdGhhdCBpcyBmaXJzdCA8PSB2Y24uCiAgKgotICogTG9va3VwIHRoZSBpbmRl
eCBvZiBhIE1DQiBlbnRyeSB0aGF0IGlzIGZpcnN0IDw9IHZjbi4KLSAqIGNhc2Ugb2Ygc3VjY2Vz
cyBpdCB3aWxsIHJldHVybiBub24temVybyB2YWx1ZSBhbmQgc2V0Ci0gKiAnaW5kZXgnIHBhcmFt
ZXRlciB0byBpbmRleCBvZiBlbnRyeSBiZWVuIGZvdW5kLgotICogY2FzZSBvZiBlbnRyeSBtaXNz
aW5nIGZyb20gbGlzdCAnaW5kZXgnIHdpbGwgYmUgc2V0IHRvCisgKiBDYXNlIG9mIHN1Y2Nlc3Mg
aXQgd2lsbCByZXR1cm4gbm9uLXplcm8gdmFsdWUgYW5kIHNldAorICogQGluZGV4IHBhcmFtZXRl
ciB0byBpbmRleCBvZiBlbnRyeSBiZWVuIGZvdW5kLgorICogQ2FzZSBvZiBlbnRyeSBtaXNzaW5n
IGZyb20gbGlzdCAnaW5kZXgnIHdpbGwgYmUgc2V0IHRvCiAgKiBwb2ludCB0byBpbnNlcnRpb24g
cG9zaXRpb24gZm9yIHRoZSBlbnRyeSBxdWVzdGlvbi4KICAqLwogYm9vbCBydW5fbG9va3VwKGNv
bnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24sIHNpemVfdCAqaW5kZXgpCkBAIC00
Niw3ICs0NSw3IEBAIGJvb2wgcnVuX2xvb2t1cChjb25zdCBzdHJ1Y3QgcnVuc190cmVlICpydW4s
IENMU1QgdmNuLCBzaXplX3QgKmluZGV4KQogCW1pbl9pZHggPSAwOwogCW1heF9pZHggPSBydW4t
PmNvdW50IC0gMTsKCi0JLyogQ2hlY2sgYm91bmRhcnkgY2FzZXMgc3BlY2lhbGx5LCAnY2F1c2Ug
dGhleSBjb3ZlciB0aGUgb2Z0ZW4gcmVxdWVzdHMgKi8KKwkvKiBDaGVjayBib3VuZGFyeSBjYXNl
cyBzcGVjaWFsbHksICdjYXVzZSB0aGV5IGNvdmVyIHRoZSBvZnRlbiByZXF1ZXN0cy4gKi8KIAly
ID0gcnVuLT5ydW5zOwogCWlmICh2Y24gPCByLT52Y24pIHsKIAkJKmluZGV4ID0gMDsKQEAgLTkw
LDkgKzg5LDcgQEAgYm9vbCBydW5fbG9va3VwKGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwg
Q0xTVCB2Y24sIHNpemVfdCAqaW5kZXgpCiB9CgogLyoKLSAqIHJ1bl9jb25zb2xpZGF0ZQotICoK
LSAqIGNvbnNvbGlkYXRlIHJ1bnMgc3RhcnRpbmcgZnJvbSBhIGdpdmVuIG9uZS4KKyAqIHJ1bl9j
b25zb2xpZGF0ZSAtIENvbnNvbGlkYXRlIHJ1bnMgc3RhcnRpbmcgZnJvbSBhIGdpdmVuIG9uZS4K
ICAqLwogc3RhdGljIHZvaWQgcnVuX2NvbnNvbGlkYXRlKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwg
c2l6ZV90IGluZGV4KQogewpAQCAtMTYzLDcgKzE2MCwxMSBAQCBzdGF0aWMgdm9pZCBydW5fY29u
c29saWRhdGUoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBzaXplX3QgaW5kZXgpCiAJfQogfQoKLS8q
IHJldHVybnMgdHJ1ZSBpZiByYW5nZSBbc3ZjbiAtIGV2Y25dIGlzIG1hcHBlZCovCisvKgorICog
cnVuX2lzX21hcHBlZF9mdWxsCisgKgorICogUmV0dXJuOiBUcnVlIGlmIHJhbmdlIFtzdmNuIC0g
ZXZjbl0gaXMgbWFwcGVkLgorICovCiBib29sIHJ1bl9pc19tYXBwZWRfZnVsbChjb25zdCBzdHJ1
Y3QgcnVuc190cmVlICpydW4sIENMU1Qgc3ZjbiwgQ0xTVCBldmNuKQogewogCXNpemVfdCBpOwpA
QCAtMjIzLDkgKzIyNCw3IEBAIGJvb2wgcnVuX2xvb2t1cF9lbnRyeShjb25zdCBzdHJ1Y3QgcnVu
c190cmVlICpydW4sIENMU1QgdmNuLCBDTFNUICpsY24sCiB9CgogLyoKLSAqIHJ1bl90cnVuY2F0
ZV9oZWFkCi0gKgotICogZGVjb21taXQgdGhlIHJhbmdlIGJlZm9yZSB2Y24KKyAqIHJ1bl90cnVu
Y2F0ZV9oZWFkIC0gRGVjb21taXQgdGhlIHJhbmdlIGJlZm9yZSB2Y24uCiAgKi8KIHZvaWQgcnVu
X3RydW5jYXRlX2hlYWQoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbikKIHsKQEAgLTI2
MCw5ICsyNTksNyBAQCB2b2lkIHJ1bl90cnVuY2F0ZV9oZWFkKHN0cnVjdCBydW5zX3RyZWUgKnJ1
biwgQ0xTVCB2Y24pCiB9CgogLyoKLSAqIHJ1bl90cnVuY2F0ZQotICoKLSAqIGRlY29tbWl0IHRo
ZSByYW5nZSBhZnRlciB2Y24KKyAqIHJ1bl90cnVuY2F0ZSAtIERlY29tbWl0IHRoZSByYW5nZSBh
ZnRlciB2Y24uCiAgKi8KIHZvaWQgcnVuX3RydW5jYXRlKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwg
Q0xTVCB2Y24pCiB7CkBAIC0yODQsMTMgKzI4MSwxMyBAQCB2b2lkIHJ1bl90cnVuY2F0ZShzdHJ1
Y3QgcnVuc190cmVlICpydW4sIENMU1QgdmNuKQogCX0KCiAJLyoKLQkgKiBBdCB0aGlzIHBvaW50
ICdpbmRleCcgaXMgc2V0IHRvCi0JICogcG9zaXRpb24gdGhhdCBzaG91bGQgYmUgdGhyb3duIGF3
YXkgKGluY2x1ZGluZyBpbmRleCBpdHNlbGYpCisJICogQXQgdGhpcyBwb2ludCAnaW5kZXgnIGlz
IHNldCB0byBwb3NpdGlvbiB0aGF0CisJICogc2hvdWxkIGJlIHRocm93biBhd2F5IChpbmNsdWRp
bmcgaW5kZXggaXRzZWxmKQogCSAqIFNpbXBsZSBvbmUgLSBqdXN0IHNldCB0aGUgbGltaXQuCiAJ
ICovCiAJcnVuLT5jb3VudCA9IGluZGV4OwoKLQkvKiBEbyBub3QgcmVhbGxvY2F0ZSBhcnJheSAn
cnVucycuIE9ubHkgZnJlZSBpZiBwb3NzaWJsZSAqLworCS8qIERvIG5vdCByZWFsbG9jYXRlIGFy
cmF5ICdydW5zJy4gT25seSBmcmVlIGlmIHBvc3NpYmxlLiAqLwogCWlmICghaW5kZXgpIHsKIAkJ
bnRmc192ZnJlZShydW4tPnJ1bnMpOwogCQlydW4tPnJ1bnMgPSBOVUxMOwpAQCAtMjk4LDcgKzI5
NSw5IEBAIHZvaWQgcnVuX3RydW5jYXRlKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24p
CiAJfQogfQoKLS8qIHRyaW0gaGVhZCBhbmQgdGFpbCBpZiBuZWNlc3NhcnkqLworLyoKKyAqIHJ1
bl90cnVuY2F0ZV9hcm91bmQgLSBUcmltIGhlYWQgYW5kIHRhaWwgaWYgbmVjZXNzYXJ5LgorICov
CiB2b2lkIHJ1bl90cnVuY2F0ZV9hcm91bmQoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZj
bikKIHsKIAlydW5fdHJ1bmNhdGVfaGVhZChydW4sIHZjbik7CkBAIC0zMTAsOSArMzA5LDEwIEBA
IHZvaWQgcnVuX3RydW5jYXRlX2Fyb3VuZChzdHJ1Y3QgcnVuc190cmVlICpydW4sIENMU1QgdmNu
KQogLyoKICAqIHJ1bl9hZGRfZW50cnkKICAqCi0gKiBzZXRzIGxvY2F0aW9uIHRvIGtub3duIHN0
YXRlLgotICogcnVuIHRvIGJlIGFkZGVkIG1heSBvdmVybGFwIHdpdGggZXhpc3RpbmcgbG9jYXRp
b24uCi0gKiByZXR1cm5zIGZhbHNlIGlmIG9mIG1lbW9yeQorICogU2V0cyBsb2NhdGlvbiB0byBr
bm93biBzdGF0ZS4KKyAqIFJ1biB0byBiZSBhZGRlZCBtYXkgb3ZlcmxhcCB3aXRoIGV4aXN0aW5n
IGxvY2F0aW9uLgorICoKKyAqIFJldHVybjogZmFsc2UgaWYgb2YgbWVtb3J5LgogICovCiBib29s
IHJ1bl9hZGRfZW50cnkoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbiwgQ0xTVCBsY24s
IENMU1QgbGVuLAogCQkgICBib29sIGlzX21mdCkKQEAgLTMzNSw3ICszMzUsNyBAQCBib29sIHJ1
bl9hZGRfZW50cnkoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbiwgQ0xTVCBsY24sIENM
U1QgbGVuLAogCSAqIFNob3J0Y3V0IGhlcmUgd291bGQgYmUgY2FzZSBvZgogCSAqIHJhbmdlIG5v
dCBiZWVuIGZvdW5kIGJ1dCBvbmUgYmVlbiBhZGRlZAogCSAqIGNvbnRpbnVlcyBwcmV2aW91cyBy
dW4uCi0JICogdGhpcyBjYXNlIEkgY2FuIGRpcmVjdGx5IG1ha2UgdXNlIG9mCisJICogVGhpcyBj
YXNlIEkgY2FuIGRpcmVjdGx5IG1ha2UgdXNlIG9mCiAJICogZXhpc3RpbmcgcmFuZ2UgYXMgbXkg
c3RhcnQgcG9pbnQuCiAJICovCiAJaWYgKCFpbnJhbmdlICYmIGluZGV4ID4gMCkgewpAQCAtMzY2
LDEzICszNjYsMTMgQEAgYm9vbCBydW5fYWRkX2VudHJ5KHN0cnVjdCBydW5zX3RyZWUgKnJ1biwg
Q0xTVCB2Y24sIENMU1QgbGNuLCBDTFNUIGxlbiwKIAkJLyoKIAkJICogQ2hlY2sgYWxsb2NhdGVk
IHNwYWNlLgogCQkgKiBJZiBvbmUgaXMgbm90IGVub3VnaCB0byBnZXQgb25lIG1vcmUgZW50cnkK
LQkJICogdGhlbiBpdCB3aWxsIGJlIHJlYWxsb2NhdGVkCisJCSAqIHRoZW4gaXQgd2lsbCBiZSBy
ZWFsbG9jYXRlZC4KIAkJICovCiAJCWlmIChydW4tPmFsbG9jYXRlZCA8IHVzZWQgKyBzaXplb2Yo
c3RydWN0IG50ZnNfcnVuKSkgewogCQkJc2l6ZV90IGJ5dGVzOwogCQkJc3RydWN0IG50ZnNfcnVu
ICpuZXdfcHRyOwoKLQkJCS8qIFVzZSBwb3dlciBvZiAyIGZvciAnYnl0ZXMnKi8KKwkJCS8qIFVz
ZSBwb3dlciBvZiAyIGZvciAnYnl0ZXMnLiAqLwogCQkJaWYgKCF1c2VkKSB7CiAJCQkJYnl0ZXMg
PSA2NDsKIAkJCX0gZWxzZSBpZiAodXNlZCA8PSAxNiAqIFBBR0VfU0laRSkgewpAQCAtNDIwLDEw
ICs0MjAsMTAgQEAgYm9vbCBydW5fYWRkX2VudHJ5KHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xT
VCB2Y24sIENMU1QgbGNuLCBDTFNUIGxlbiwKIAkJciA9IHJ1bi0+cnVucyArIGluZGV4OwoKIAkJ
LyoKLQkJICogSWYgb25lIG9mIHJhbmdlcyB3YXMgbm90IGFsbG9jYXRlZAotCQkgKiB0aGVuIEkg
aGF2ZSB0byBzcGxpdCBsb2NhdGlvbiBJIGp1c3QgbWF0Y2hlZC4KLQkJICogYW5kIGluc2VydCBj
dXJyZW50IG9uZQotCQkgKiBhIGNvbW1vbiBjYXNlIHRoaXMgcmVxdWlyZXMgdGFpbCB0byBiZSBy
ZWluc2VydGVkCisJCSAqIElmIG9uZSBvZiByYW5nZXMgd2FzIG5vdCBhbGxvY2F0ZWQgdGhlbiB3
ZQorCQkgKiBoYXZlIHRvIHNwbGl0IGxvY2F0aW9uIHdlIGp1c3QgbWF0Y2hlZCBhbmQKKwkJICog
aW5zZXJ0IGN1cnJlbnQgb25lLgorCQkgKiBBIGNvbW1vbiBjYXNlIHRoaXMgcmVxdWlyZXMgdGFp
bCB0byBiZSByZWluc2VydGVkCiAJCSAqIGEgcmVjdXJzaXZlIGNhbGwuCiAJCSAqLwogCQlpZiAo
KChsY24gPT0gU1BBUlNFX0xDTikgIT0gKHItPmxjbiA9PSBTUEFSU0VfTENOKSkgfHwKQEAgLTQ0
OCwxMiArNDQ4LDEyIEBAIGJvb2wgcnVuX2FkZF9lbnRyeShzdHJ1Y3QgcnVuc190cmVlICpydW4s
IENMU1QgdmNuLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCiAJCQkJZ290byByZXF1aXJlc19uZXdfcmFu
Z2U7CiAJCQl9CgotCQkJLyogbGNuIHNob3VsZCBtYXRjaCBvbmUgSSdtIGdvaW5nIHRvIGFkZC4g
Ki8KKwkJCS8qIGxjbiBzaG91bGQgbWF0Y2ggb25lIHdlcmUgZ29pbmcgdG8gYWRkLiAqLwogCQkJ
ci0+bGNuID0gbGNuOwogCQl9CgogCQkvKgotCQkgKiBJZiBleGlzdGluZyByYW5nZSBmaXRzIHRo
ZW4gSSdtIGRvbmUuCisJCSAqIElmIGV4aXN0aW5nIHJhbmdlIGZpdHMgdGhlbiB3ZXJlIGRvbmUu
CiAJCSAqIE90aGVyd2lzZSBleHRlbmQgZm91bmQgb25lIGFuZCBmYWxsIGJhY2sgdG8gcmFuZ2Ug
am9jb2RlLgogCQkgKi8KIAkJaWYgKHItPnZjbiArIHItPmxlbiA8IHZjbiArIGxlbikKQEAgLTQ3
Miw4ICs0NzIsOCBAQCBib29sIHJ1bl9hZGRfZW50cnkoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBD
TFNUIHZjbiwgQ0xTVCBsY24sIENMU1QgbGVuLAogCXJ1bl9jb25zb2xpZGF0ZShydW4sIGluZGV4
ICsgMSk7CgogCS8qCi0JICogYSBzcGVjaWFsIGNhc2UKLQkgKiBJIGhhdmUgdG8gYWRkIGV4dHJh
IHJhbmdlIGEgdGFpbC4KKwkgKiBBIHNwZWNpYWwgY2FzZS4KKwkgKiBXZSBoYXZlIHRvIGFkZCBl
eHRyYSByYW5nZSBhIHRhaWwuCiAJICovCiAJaWYgKHNob3VsZF9hZGRfdGFpbCAmJgogCSAgICAh
cnVuX2FkZF9lbnRyeShydW4sIHRhaWxfdmNuLCB0YWlsX2xjbiwgdGFpbF9sZW4sIGlzX21mdCkp
CkBAIC00ODIsNyArNDgyLDExIEBAIGJvb2wgcnVuX2FkZF9lbnRyeShzdHJ1Y3QgcnVuc190cmVl
ICpydW4sIENMU1QgdmNuLCBDTFNUIGxjbiwgQ0xTVCBsZW4sCiAJcmV0dXJuIHRydWU7CiB9Cgot
LypoZWxwZXIgZm9yIGF0dHJfY29sbGFwc2VfcmFuZ2UsIHdoaWNoIGlzIGhlbHBlciBmb3IgZmFs
bG9jYXRlKGNvbGxhcHNlX3JhbmdlKSovCisvKiBydW5fY29sbGFwc2VfcmFuZ2UKKyAqCisgKiBI
ZWxwZXIgZm9yIGF0dHJfY29sbGFwc2VfcmFuZ2UoKSwKKyAqIHdoaWNoIGlzIGhlbHBlciBmb3Ig
ZmFsbG9jYXRlKGNvbGxhcHNlX3JhbmdlKS4KKyAqLwogYm9vbCBydW5fY29sbGFwc2VfcmFuZ2Uo
c3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbiwgQ0xTVCBsZW4pCiB7CiAJc2l6ZV90IGlu
ZGV4LCBlYXQ7CkBAIC00OTAsNyArNDk0LDcgQEAgYm9vbCBydW5fY29sbGFwc2VfcmFuZ2Uoc3Ry
dWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbiwgQ0xTVCBsZW4pCiAJQ0xTVCBlbmQ7CgogCWlm
IChXQVJOX09OKCFydW5fbG9va3VwKHJ1biwgdmNuLCAmaW5kZXgpKSkKLQkJcmV0dXJuIHRydWU7
IC8qIHNob3VsZCBuZXZlciBiZSBoZXJlICovCisJCXJldHVybiB0cnVlOyAvKiBTaG91bGQgbmV2
ZXIgYmUgaGVyZS4gKi8KCiAJZSA9IHJ1bi0+cnVucyArIHJ1bi0+Y291bnQ7CiAJciA9IHJ1bi0+
cnVucyArIGluZGV4OwpAQCAtNDk4LDEzICs1MDIsMTMgQEAgYm9vbCBydW5fY29sbGFwc2VfcmFu
Z2Uoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBDTFNUIHZjbiwgQ0xTVCBsZW4pCgogCWlmICh2Y24g
PiByLT52Y24pIHsKIAkJaWYgKHItPnZjbiArIHItPmxlbiA8PSBlbmQpIHsKLQkJCS8qIGNvbGxh
cHNlIHRhaWwgb2YgcnVuICovCisJCQkvKiBDb2xsYXBzZSB0YWlsIG9mIHJ1biAuKi8KIAkJCXIt
PmxlbiA9IHZjbiAtIHItPnZjbjsKIAkJfSBlbHNlIGlmIChyLT5sY24gPT0gU1BBUlNFX0xDTikg
ewotCQkJLyogY29sbGFwc2UgYSBtaWRkbGUgcGFydCBvZiBzcGFyc2VkIHJ1biAqLworCQkJLyog
Q29sbGFwc2UgYSBtaWRkbGUgcGFydCBvZiBzcGFyc2VkIHJ1bi4gKi8KIAkJCXItPmxlbiAtPSBs
ZW47CiAJCX0gZWxzZSB7Ci0JCQkvKiBjb2xsYXBzZSBhIG1pZGRsZSBwYXJ0IG9mIG5vcm1hbCBy
dW4sIHNwbGl0ICovCisJCQkvKiBDb2xsYXBzZSBhIG1pZGRsZSBwYXJ0IG9mIG5vcm1hbCBydW4s
IHNwbGl0LiAqLwogCQkJaWYgKCFydW5fYWRkX2VudHJ5KHJ1biwgdmNuLCBTUEFSU0VfTENOLCBs
ZW4sIGZhbHNlKSkKIAkJCQlyZXR1cm4gZmFsc2U7CiAJCQlyZXR1cm4gcnVuX2NvbGxhcHNlX3Jh
bmdlKHJ1biwgdmNuLCBsZW4pOwpAQCAtNTI1LDcgKzUyOSw3IEBAIGJvb2wgcnVuX2NvbGxhcHNl
X3JhbmdlKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24sIENMU1QgbGVuKQogCQl9Cgog
CQlpZiAoci0+dmNuICsgci0+bGVuIDw9IGVuZCkgewotCQkJLyogZWF0IHRoaXMgcnVuICovCisJ
CQkvKiBFYXQgdGhpcyBydW4uICovCiAJCQllYXRfZW5kID0gciArIDE7CiAJCQljb250aW51ZTsK
IAkJfQpAQCAtNTQ1LDkgKzU0OSw3IEBAIGJvb2wgcnVuX2NvbGxhcHNlX3JhbmdlKHN0cnVjdCBy
dW5zX3RyZWUgKnJ1biwgQ0xTVCB2Y24sIENMU1QgbGVuKQogfQoKIC8qCi0gKiBydW5fZ2V0X2Vu
dHJ5Ci0gKgotICogcmV0dXJucyBpbmRleC10aCBtYXBwZWQgcmVnaW9uCisgKiBydW5fZ2V0X2Vu
dHJ5IC0gUmV0dXJuIGluZGV4LXRoIG1hcHBlZCByZWdpb24uCiAgKi8KIGJvb2wgcnVuX2dldF9l
bnRyeShjb25zdCBzdHJ1Y3QgcnVuc190cmVlICpydW4sIHNpemVfdCBpbmRleCwgQ0xTVCAqdmNu
LAogCQkgICBDTFNUICpsY24sIENMU1QgKmxlbikKQEAgLTU3Miw5ICs1NzQsNyBAQCBib29sIHJ1
bl9nZXRfZW50cnkoY29uc3Qgc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBzaXplX3QgaW5kZXgsIENM
U1QgKnZjbiwKIH0KCiAvKgotICogcnVuX3BhY2tlZF9zaXplCi0gKgotICogY2FsY3VsYXRlcyB0
aGUgc2l6ZSBvZiBwYWNrZWQgaW50NjQKKyAqIHJ1bl9wYWNrZWRfc2l6ZSAtIENhbGN1bGF0ZSB0
aGUgc2l6ZSBvZiBwYWNrZWQgaW50NjQuCiAgKi8KICNpZmRlZiBfX0JJR19FTkRJQU4KIHN0YXRp
YyBpbmxpbmUgaW50IHJ1bl9wYWNrZWRfc2l6ZShjb25zdCBzNjQgbikKQEAgLTYwNCw3ICs2MDQs
NyBAQCBzdGF0aWMgaW5saW5lIGludCBydW5fcGFja2VkX3NpemUoY29uc3QgczY0IG4pCiAJcmV0
dXJuIChjb25zdCB1OCAqKSZuICsgc2l6ZW9mKG4pIC0gcDsKIH0KCi0vKiBmdWxsIHRydXN0ZWQg
ZnVuY3Rpb24uIEl0IGRvZXMgbm90IGNoZWNrICdzaXplJyBmb3IgZXJyb3JzICovCisvKiBGdWxs
IHRydXN0ZWQgZnVuY3Rpb24uIEl0IGRvZXMgbm90IGNoZWNrICdzaXplJyBmb3IgZXJyb3JzLiAq
Lwogc3RhdGljIGlubGluZSB2b2lkIHJ1bl9wYWNrX3M2NCh1OCAqcnVuX2J1ZiwgdTggc2l6ZSwg
czY0IHYpCiB7CiAJY29uc3QgdTggKnAgPSAodTggKikmdjsKQEAgLTYzNiw3ICs2MzYsNyBAQCBz
dGF0aWMgaW5saW5lIHZvaWQgcnVuX3BhY2tfczY0KHU4ICpydW5fYnVmLCB1OCBzaXplLCBzNjQg
dikKIAl9CiB9CgotLyogZnVsbCB0cnVzdGVkIGZ1bmN0aW9uLiBJdCBkb2VzIG5vdCBjaGVjayAn
c2l6ZScgZm9yIGVycm9ycyAqLworLyogRnVsbCB0cnVzdGVkIGZ1bmN0aW9uLiBJdCBkb2VzIG5v
dCBjaGVjayAnc2l6ZScgZm9yIGVycm9ycy4gKi8KIHN0YXRpYyBpbmxpbmUgczY0IHJ1bl91bnBh
Y2tfczY0KGNvbnN0IHU4ICpydW5fYnVmLCB1OCBzaXplLCBzNjQgdikKIHsKIAl1OCAqcCA9ICh1
OCAqKSZ2OwpAQCAtNjk5LDEyICs2OTksMTIgQEAgc3RhdGljIGlubGluZSBpbnQgcnVuX3BhY2tl
ZF9zaXplKGNvbnN0IHM2NCBuKQogCXJldHVybiAxICsgcCAtIChjb25zdCB1OCAqKSZuOwogfQoK
LS8qIGZ1bGwgdHJ1c3RlZCBmdW5jdGlvbi4gSXQgZG9lcyBub3QgY2hlY2sgJ3NpemUnIGZvciBl
cnJvcnMgKi8KKy8qIEZ1bGwgdHJ1c3RlZCBmdW5jdGlvbi4gSXQgZG9lcyBub3QgY2hlY2sgJ3Np
emUnIGZvciBlcnJvcnMuICovCiBzdGF0aWMgaW5saW5lIHZvaWQgcnVuX3BhY2tfczY0KHU4ICpy
dW5fYnVmLCB1OCBzaXplLCBzNjQgdikKIHsKIAljb25zdCB1OCAqcCA9ICh1OCAqKSZ2OwoKLQkv
KiBtZW1jcHkoIHJ1bl9idWYsICZ2LCBzaXplKTsgaXMgaXQgZmFzdGVyPyAqLworCS8qIG1lbWNw
eSggcnVuX2J1ZiwgJnYsIHNpemUpOyBJcyBpdCBmYXN0ZXI/ICovCiAJc3dpdGNoIChzaXplKSB7
CiAJY2FzZSA4OgogCQlydW5fYnVmWzddID0gcFs3XTsKQEAgLTczNyw3ICs3MzcsNyBAQCBzdGF0
aWMgaW5saW5lIHM2NCBydW5fdW5wYWNrX3M2NChjb25zdCB1OCAqcnVuX2J1ZiwgdTggc2l6ZSwg
czY0IHYpCiB7CiAJdTggKnAgPSAodTggKikmdjsKCi0JLyogbWVtY3B5KCAmdiwgcnVuX2J1Ziwg
c2l6ZSk7IGlzIGl0IGZhc3Rlcj8gKi8KKwkvKiBtZW1jcHkoICZ2LCBydW5fYnVmLCBzaXplKTsg
SXMgaXQgZmFzdGVyPyAqLwogCXN3aXRjaCAoc2l6ZSkgewogCWNhc2UgODoKIAkJcFs3XSA9IHJ1
bl9idWZbN107CkBAIC03NjgsMTEgKzc2OCwxMCBAQCBzdGF0aWMgaW5saW5lIHM2NCBydW5fdW5w
YWNrX3M2NChjb25zdCB1OCAqcnVuX2J1ZiwgdTggc2l6ZSwgczY0IHYpCiAjZW5kaWYKCiAvKgot
ICogcnVuX3BhY2sKKyAqIHJ1bl9wYWNrIC0gUGFjayBydW5zIGludG8gYnVmZmVyLgogICoKLSAq
IHBhY2tzIHJ1bnMgaW50byBidWZmZXIKLSAqIHBhY2tlZF92Y25zIC0gaG93IG11Y2ggcnVucyB3
ZSBoYXZlIHBhY2tlZAotICogcGFja2VkX3NpemUgLSBob3cgbXVjaCBieXRlcyB3ZSBoYXZlIHVz
ZWQgcnVuX2J1ZgorICogcGFja2VkX3ZjbnMgLSBIb3cgbXVjaCBydW5zIHdlIGhhdmUgcGFja2Vk
LgorICogcGFja2VkX3NpemUgLSBIb3cgbXVjaCBieXRlcyB3ZSBoYXZlIHVzZWQgcnVuX2J1Zi4K
ICAqLwogaW50IHJ1bl9wYWNrKGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCBzdmNu
LCBDTFNUIGxlbiwgdTggKnJ1bl9idWYsCiAJICAgICB1MzIgcnVuX2J1Zl9zaXplLCBDTFNUICpw
YWNrZWRfdmNucykKQEAgLTgwNiwxMCArODA1LDEwIEBAIGludCBydW5fcGFjayhjb25zdCBzdHJ1
Y3QgcnVuc190cmVlICpydW4sIENMU1Qgc3ZjbiwgQ0xTVCBsZW4sIHU4ICpydW5fYnVmLAogCQlp
ZiAobmV4dF92Y24gPiBldmNuMSkKIAkJCWxlbiA9IGV2Y24xIC0gdmNuOwoKLQkJLyogaG93IG11
Y2ggYnl0ZXMgcmVxdWlyZWQgdG8gcGFjayBsZW4gKi8KKwkJLyogSG93IG11Y2ggYnl0ZXMgcmVx
dWlyZWQgdG8gcGFjayBsZW4uICovCiAJCXNpemVfc2l6ZSA9IHJ1bl9wYWNrZWRfc2l6ZShsZW4p
OwoKLQkJLyogb2Zmc2V0X3NpemUgLSBob3cgbXVjaCBieXRlcyBpcyBwYWNrZWQgZGxjbiAqLwor
CQkvKiBvZmZzZXRfc2l6ZSAtIEhvdyBtdWNoIGJ5dGVzIGlzIHBhY2tlZCBkbGNuLiAqLwogCQlp
ZiAobGNuID09IFNQQVJTRV9MQ04pIHsKIAkJCW9mZnNldF9zaXplID0gMDsKIAkJCWRsY24gPSAw
OwpAQCAtODI0LDIwICs4MjMsMjAgQEAgaW50IHJ1bl9wYWNrKGNvbnN0IHN0cnVjdCBydW5zX3Ry
ZWUgKnJ1biwgQ0xTVCBzdmNuLCBDTFNUIGxlbiwgdTggKnJ1bl9idWYsCiAJCWlmICh0bXAgPD0g
MCkKIAkJCWdvdG8gb3V0OwoKLQkJLyogY2FuIHdlIHN0b3JlIHRoaXMgZW50aXJlIHJ1biAqLwor
CQkvKiBDYW4gd2Ugc3RvcmUgdGhpcyBlbnRpcmUgcnVuLiAqLwogCQlpZiAodG1wIDwgc2l6ZV9z
aXplKQogCQkJZ290byBvdXQ7CgogCQlpZiAocnVuX2J1ZikgewotCQkJLyogcGFjayBydW4gaGVh
ZGVyICovCisJCQkvKiBQYWNrIHJ1biBoZWFkZXIuICovCiAJCQlydW5fYnVmWzBdID0gKCh1OCko
c2l6ZV9zaXplIHwgKG9mZnNldF9zaXplIDw8IDQpKSk7CiAJCQlydW5fYnVmICs9IDE7CgotCQkJ
LyogUGFjayB0aGUgbGVuZ3RoIG9mIHJ1biAqLworCQkJLyogUGFjayB0aGUgbGVuZ3RoIG9mIHJ1
bi4gKi8KIAkJCXJ1bl9wYWNrX3M2NChydW5fYnVmLCBzaXplX3NpemUsIGxlbik7CgogCQkJcnVu
X2J1ZiArPSBzaXplX3NpemU7Ci0JCQkvKiBQYWNrIHRoZSBvZmZzZXQgZnJvbSBwcmV2aW91cyBs
Y24gKi8KKwkJCS8qIFBhY2sgdGhlIG9mZnNldCBmcm9tIHByZXZpb3VzIExDTi4gKi8KIAkJCXJ1
bl9wYWNrX3M2NChydW5fYnVmLCBvZmZzZXRfc2l6ZSwgZGxjbik7CiAJCQlydW5fYnVmICs9IG9m
ZnNldF9zaXplOwogCQl9CkBAIC04NTcsNyArODU2LDcgQEAgaW50IHJ1bl9wYWNrKGNvbnN0IHN0
cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCBzdmNuLCBDTFNUIGxlbiwgdTggKnJ1bl9idWYsCiAJ
fQoKIG91dDoKLQkvKiBTdG9yZSBsYXN0IHplcm8gKi8KKwkvKiBTdG9yZSBsYXN0IHplcm8uICov
CiAJaWYgKHJ1bl9idWYpCiAJCXJ1bl9idWZbMF0gPSAwOwoKQEAgLTg2OCwxMCArODY3LDkgQEAg
aW50IHJ1bl9wYWNrKGNvbnN0IHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgQ0xTVCBzdmNuLCBDTFNU
IGxlbiwgdTggKnJ1bl9idWYsCiB9CgogLyoKLSAqIHJ1bl91bnBhY2sKKyAqIHJ1bl91bnBhY2sg
LSBVbnBhY2sgcGFja2VkIHJ1bnMgZnJvbSBAcnVuX2J1Zi4KICAqCi0gKiB1bnBhY2tzIHBhY2tl
ZCBydW5zIGZyb20gInJ1bl9idWYiCi0gKiByZXR1cm5zIGVycm9yLCBpZiBuZWdhdGl2ZSwgb3Ig
cmVhbCB1c2VkIGJ5dGVzCisgKiBSZXR1cm46IEVycm9yIGlmIG5lZ2F0aXZlLCBvciByZWFsIHVz
ZWQgYnl0ZXMuCiAgKi8KIGludCBydW5fdW5wYWNrKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgc3Ry
dWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGlubywKIAkgICAgICAgQ0xTVCBzdmNuLCBDTFNU
IGV2Y24sIENMU1QgdmNuLCBjb25zdCB1OCAqcnVuX2J1ZiwKQEAgLTg4MSw3ICs4NzksNyBAQCBp
bnQgcnVuX3VucGFjayhzdHJ1Y3QgcnVuc190cmVlICpydW4sIHN0cnVjdCBudGZzX3NiX2luZm8g
KnNiaSwgQ0xTVCBpbm8sCiAJY29uc3QgdTggKnJ1bl9sYXN0LCAqcnVuXzA7CiAJYm9vbCBpc19t
ZnQgPSBpbm8gPT0gTUZUX1JFQ19NRlQ7CgotCS8qIENoZWNrIGZvciBlbXB0eSAqLworCS8qIENo
ZWNrIGZvciBlbXB0eS4gKi8KIAlpZiAoZXZjbiArIDEgPT0gc3ZjbikKIAkJcmV0dXJuIDA7CgpA
QCAtODkzLDEyICs4OTEsMTIgQEAgaW50IHJ1bl91bnBhY2soc3RydWN0IHJ1bnNfdHJlZSAqcnVu
LCBzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIENMU1QgaW5vLAogCXByZXZfbGNuID0gMDsKIAl2
Y242NCA9IHN2Y247CgotCS8qIFJlYWQgYWxsIHJ1bnMgdGhlIGNoYWluICovCi0JLyogc2l6ZV9z
aXplIC0gaG93IG11Y2ggYnl0ZXMgaXMgcGFja2VkIGxlbiAqLworCS8qIFJlYWQgYWxsIHJ1bnMg
dGhlIGNoYWluLiAqLworCS8qIHNpemVfc2l6ZSAtIEhvdyBtdWNoIGJ5dGVzIGlzIHBhY2tlZCBs
ZW4uICovCiAJd2hpbGUgKHJ1bl9idWYgPCBydW5fbGFzdCkgewotCQkvKiBzaXplX3NpemUgLSBo
b3cgbXVjaCBieXRlcyBpcyBwYWNrZWQgbGVuICovCisJCS8qIHNpemVfc2l6ZSAtIEhvdyBtdWNo
IGJ5dGVzIGlzIHBhY2tlZCBsZW4uICovCiAJCXU4IHNpemVfc2l6ZSA9ICpydW5fYnVmICYgMHhG
OwotCQkvKiBvZmZzZXRfc2l6ZSAtIGhvdyBtdWNoIGJ5dGVzIGlzIHBhY2tlZCBkbGNuICovCisJ
CS8qIG9mZnNldF9zaXplIC0gSG93IG11Y2ggYnl0ZXMgaXMgcGFja2VkIGRsY24uICovCiAJCXU4
IG9mZnNldF9zaXplID0gKnJ1bl9idWYrKyA+PiA0OwogCQl1NjQgbGVuOwoKQEAgLTkwNyw4ICs5
MDUsOCBAQCBpbnQgcnVuX3VucGFjayhzdHJ1Y3QgcnVuc190cmVlICpydW4sIHN0cnVjdCBudGZz
X3NiX2luZm8gKnNiaSwgQ0xTVCBpbm8sCgogCQkvKgogCQkgKiBVbnBhY2sgcnVucy4KLQkJICog
Tk9URTogcnVucyBhcmUgc3RvcmVkIGxpdHRsZSBlbmRpYW4gb3JkZXIKLQkJICogImxlbiIgaXMg
dW5zaWduZWQgdmFsdWUsICJkbGNuIiBpcyBzaWduZWQKKwkJICogTk9URTogUnVucyBhcmUgc3Rv
cmVkIGxpdHRsZSBlbmRpYW4gb3JkZXIKKwkJICogImxlbiIgaXMgdW5zaWduZWQgdmFsdWUsICJk
bGNuIiBpcyBzaWduZWQuCiAJCSAqIExhcmdlIHBvc2l0aXZlIG51bWJlciByZXF1aXJlcyB0byBz
dG9yZSA1IGJ5dGVzCiAJCSAqIGUuZy46IDA1IEZGIDdFIEZGIEZGIDAwIDAwIDAwCiAJCSAqLwpA
QCAtOTE2LDcgKzkxNCw3IEBAIGludCBydW5fdW5wYWNrKHN0cnVjdCBydW5zX3RyZWUgKnJ1biwg
c3RydWN0IG50ZnNfc2JfaW5mbyAqc2JpLCBDTFNUIGlubywKIAkJCXJldHVybiAtRUlOVkFMOwoK
IAkJbGVuID0gcnVuX3VucGFja19zNjQocnVuX2J1Ziwgc2l6ZV9zaXplLCAwKTsKLQkJLyogc2tp
cCBzaXplX3NpemUgKi8KKwkJLyogU2tpcCBzaXplX3NpemUuICovCiAJCXJ1bl9idWYgKz0gc2l6
ZV9zaXplOwoKIAkJaWYgKCFsZW4pCkBAIC05MjcsMTAgKzkyNSwxMCBAQCBpbnQgcnVuX3VucGFj
ayhzdHJ1Y3QgcnVuc190cmVlICpydW4sIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBp
bm8sCiAJCWVsc2UgaWYgKG9mZnNldF9zaXplIDw9IDgpIHsKIAkJCXM2NCBkbGNuOwoKLQkJCS8q
IGluaXRpYWwgdmFsdWUgb2YgZGxjbiBpcyAtMSBvciAwICovCisJCQkvKiBJbml0aWFsIHZhbHVl
IG9mIGRsY24gaXMgLTEgb3IgMC4gKi8KIAkJCWRsY24gPSAocnVuX2J1ZltvZmZzZXRfc2l6ZSAt
IDFdICYgMHg4MCkgPyAoczY0KS0xIDogMDsKIAkJCWRsY24gPSBydW5fdW5wYWNrX3M2NChydW5f
YnVmLCBvZmZzZXRfc2l6ZSwgZGxjbik7Ci0JCQkvKiBza2lwIG9mZnNldF9zaXplICovCisJCQkv
KiBTa2lwIG9mZnNldF9zaXplLiAqLwogCQkJcnVuX2J1ZiArPSBvZmZzZXRfc2l6ZTsKCiAJCQlp
ZiAoIWRsY24pCkBAIC05NDEsNyArOTM5LDcgQEAgaW50IHJ1bl91bnBhY2soc3RydWN0IHJ1bnNf
dHJlZSAqcnVuLCBzdHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIENMU1QgaW5vLAogCQkJcmV0dXJu
IC1FSU5WQUw7CgogCQluZXh0X3ZjbiA9IHZjbjY0ICsgbGVuOwotCQkvKiBjaGVjayBib3VuZGFy
eSAqLworCQkvKiBDaGVjayBib3VuZGFyeS4gKi8KIAkJaWYgKG5leHRfdmNuID4gZXZjbiArIDEp
CiAJCQlyZXR1cm4gLUVJTlZBTDsKCkBAIC05NTcsMTQgKzk1NSwxNyBAQCBpbnQgcnVuX3VucGFj
ayhzdHJ1Y3QgcnVuc190cmVlICpydW4sIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBp
bm8sCiAJCX0KICNlbmRpZgogCQlpZiAobGNuICE9IFNQQVJTRV9MQ042NCAmJiBsY24gKyBsZW4g
PiBzYmktPnVzZWQuYml0bWFwLm5iaXRzKSB7Ci0JCQkvKiBsY24gcmFuZ2UgaXMgb3V0IG9mIHZv
bHVtZSAqLworCQkJLyogTENOIHJhbmdlIGlzIG91dCBvZiB2b2x1bWUuICovCiAJCQlyZXR1cm4g
LUVJTlZBTDsKIAkJfQoKIAkJaWYgKCFydW4pCi0JCQk7IC8qIGNhbGxlZCBmcm9tIGNoZWNrX2F0
dHIoZnNsb2cuYykgdG8gY2hlY2sgcnVuICovCisJCQk7IC8qIENhbGxlZCBmcm9tIGNoZWNrX2F0
dHIoZnNsb2cuYykgdG8gY2hlY2sgcnVuLiAqLwogCQllbHNlIGlmIChydW4gPT0gUlVOX0RFQUxM
T0NBVEUpIHsKLQkJCS8qIGNhbGxlZCBmcm9tIG5pX2RlbGV0ZV9hbGwgdG8gZnJlZSBjbHVzdGVy
cyB3aXRob3V0IHN0b3JpbmcgaW4gcnVuICovCisJCQkvKgorCQkJICogQ2FsbGVkIGZyb20gbmlf
ZGVsZXRlX2FsbCB0byBmcmVlIGNsdXN0ZXJzCisJCQkgKiB3aXRob3V0IHN0b3JpbmcgaW4gcnVu
LgorCQkJICovCiAJCQlpZiAobGNuICE9IFNQQVJTRV9MQ042NCkKIAkJCQltYXJrX2FzX2ZyZWVf
ZXgoc2JpLCBsY24sIGxlbiwgdHJ1ZSk7CiAJCX0gZWxzZSBpZiAodmNuNjQgPj0gdmNuKSB7CkBA
IC05ODIsNyArOTgzLDcgQEAgaW50IHJ1bl91bnBhY2soc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBz
dHJ1Y3QgbnRmc19zYl9pbmZvICpzYmksIENMU1QgaW5vLAogCX0KCiAJaWYgKHZjbjY0ICE9IGV2
Y24gKyAxKSB7Ci0JCS8qIG5vdCBleHBlY3RlZCBsZW5ndGggb2YgdW5wYWNrZWQgcnVucyAqLwor
CQkvKiBOb3QgZXhwZWN0ZWQgbGVuZ3RoIG9mIHVucGFja2VkIHJ1bnMuICovCiAJCXJldHVybiAt
RUlOVkFMOwogCX0KCkBAIC05OTEsMTEgKzk5MiwxMSBAQCBpbnQgcnVuX3VucGFjayhzdHJ1Y3Qg
cnVuc190cmVlICpydW4sIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBpbm8sCgogI2lm
ZGVmIE5URlMzX0NIRUNLX0ZSRUVfQ0xTVAogLyoKLSAqIHJ1bl91bnBhY2tfZXgKKyAqIHJ1bl91
bnBhY2tfZXggLSBVbnBhY2sgcGFja2VkIHJ1bnMgZnJvbSAicnVuX2J1ZiIuCisgKgorICogQ2hl
Y2tzIHVucGFja2VkIHJ1bnMgdG8gYmUgdXNlZCBpbiBiaXRtYXAuCiAgKgotICogdW5wYWNrcyBw
YWNrZWQgcnVucyBmcm9tICJydW5fYnVmIgotICogY2hlY2tzIHVucGFja2VkIHJ1bnMgdG8gYmUg
dXNlZCBpbiBiaXRtYXAKLSAqIHJldHVybnMgZXJyb3IsIGlmIG5lZ2F0aXZlLCBvciByZWFsIHVz
ZWQgYnl0ZXMKKyAqIFJldHVybjogRXJyb3IgaWYgbmVnYXRpdmUsIG9yIHJlYWwgdXNlZCBieXRl
cy4KICAqLwogaW50IHJ1bl91bnBhY2tfZXgoc3RydWN0IHJ1bnNfdHJlZSAqcnVuLCBzdHJ1Y3Qg
bnRmc19zYl9pbmZvICpzYmksIENMU1QgaW5vLAogCQkgIENMU1Qgc3ZjbiwgQ0xTVCBldmNuLCBD
TFNUIHZjbiwgY29uc3QgdTggKnJ1bl9idWYsCkBAIC0xMDM1LDE3ICsxMDM2LDE3IEBAIGludCBy
dW5fdW5wYWNrX2V4KHN0cnVjdCBydW5zX3RyZWUgKnJ1biwgc3RydWN0IG50ZnNfc2JfaW5mbyAq
c2JpLCBDTFNUIGlubywKIAkJCWNvbnRpbnVlOwoKIAkJZG93bl9yZWFkX25lc3RlZCgmd25kLT5y
d19sb2NrLCBCSVRNQVBfTVVURVhfQ0xVU1RFUlMpOwotCQkvKiBDaGVjayBmb3IgZnJlZSBibG9j
a3MgKi8KKwkJLyogQ2hlY2sgZm9yIGZyZWUgYmxvY2tzLiAqLwogCQlvayA9IHduZF9pc191c2Vk
KHduZCwgbGNuLCBsZW4pOwogCQl1cF9yZWFkKCZ3bmQtPnJ3X2xvY2spOwogCQlpZiAob2spCiAJ
CQljb250aW51ZTsKCi0JCS8qIExvb2tzIGxpa2Ugdm9sdW1lIGlzIGNvcnJ1cHRlZCAqLworCQkv
KiBMb29rcyBsaWtlIHZvbHVtZSBpcyBjb3JydXB0ZWQuICovCiAJCW50ZnNfc2V0X3N0YXRlKHNi
aSwgTlRGU19ESVJUWV9FUlJPUik7CgogCQlpZiAoZG93bl93cml0ZV90cnlsb2NrKCZ3bmQtPnJ3
X2xvY2spKSB7Ci0JCQkvKiBtYXJrIGFsbCB6ZXJvIGJpdHMgYXMgdXNlZCBpbiByYW5nZSBbbGNu
LCBsY24rbGVuKSAqLworCQkJLyogTWFyayBhbGwgemVybyBiaXRzIGFzIHVzZWQgaW4gcmFuZ2Ug
W2xjbiwgbGNuK2xlbikuICovCiAJCQlDTFNUIGksIGxjbl9mID0gMCwgbGVuX2YgPSAwOwoKIAkJ
CWVyciA9IDA7CkBAIC0xMDc4LDggKzEwNzksOCBAQCBpbnQgcnVuX3VucGFja19leChzdHJ1Y3Qg
cnVuc190cmVlICpydW4sIHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBpbm8sCiAvKgog
ICogcnVuX2dldF9oaWdoZXN0X3ZjbgogICoKLSAqIHJldHVybnMgdGhlIGhpZ2hlc3QgdmNuIGZy
b20gYSBtYXBwaW5nIHBhaXJzIGFycmF5Ci0gKiBpdCB1c2VkIHdoaWxlIHJlcGxheWluZyBsb2cg
ZmlsZQorICogUmV0dXJuIHRoZSBoaWdoZXN0IHZjbiBmcm9tIGEgbWFwcGluZyBwYWlycyBhcnJh
eQorICogaXQgdXNlZCB3aGlsZSByZXBsYXlpbmcgbG9nIGZpbGUuCiAgKi8KIGludCBydW5fZ2V0
X2hpZ2hlc3RfdmNuKENMU1QgdmNuLCBjb25zdCB1OCAqcnVuX2J1ZiwgdTY0ICpoaWdoZXN0X3Zj
bikKIHsKZGlmZiAtLWdpdCBhL2ZzL250ZnMzL3N1cGVyLmMgYi9mcy9udGZzMy9zdXBlci5jCmlu
ZGV4IGM1NjM0MzEyNDhiZi4uMTRhNDQ2ZTRlZjM3IDEwMDY0NAotLS0gYS9mcy9udGZzMy9zdXBl
ci5jCisrKyBiL2ZzL250ZnMzL3N1cGVyLmMKQEAgLTcsMTUgKzcsMTUgQEAKICAqICAgICAgICAg
ICAgICAgICB0ZXJtaW5vbG9neQogICoKICAqIGNsdXN0ZXIgLSBhbGxvY2F0aW9uIHVuaXQgICAg
IC0gNTEyLDFLLDJLLDRLLC4uLiwyTQotICogdmNuIC0gdmlydHVhbCBjbHVzdGVyIG51bWJlciAg
LSBvZmZzZXQgaW5zaWRlIHRoZSBmaWxlIGluIGNsdXN0ZXJzCi0gKiB2Ym8gLSB2aXJ0dWFsIGJ5
dGUgb2Zmc2V0ICAgICAtIG9mZnNldCBpbnNpZGUgdGhlIGZpbGUgaW4gYnl0ZXMKLSAqIGxjbiAt
IGxvZ2ljYWwgY2x1c3RlciBudW1iZXIgIC0gMCBiYXNlZCBjbHVzdGVyIGluIGNsdXN0ZXJzIGhl
YXAKLSAqIGxibyAtIGxvZ2ljYWwgYnl0ZSBvZmZzZXQgICAgIC0gYWJzb2x1dGUgcG9zaXRpb24g
aW5zaWRlIHZvbHVtZQotICogcnVuIC0gbWFwcyB2Y24gdG8gbGNuICAgICAgICAgLSBzdG9yZWQg
aW4gYXR0cmlidXRlcyBpbiBwYWNrZWQgZm9ybQotICogYXR0ciAtIGF0dHJpYnV0ZSBzZWdtZW50
ICAgICAgLSBzdGQvbmFtZS9kYXRhIGV0YyByZWNvcmRzIGluc2lkZSBNRlQKLSAqIG1pICAtIG1m
dCBpbm9kZSAgICAgICAgICAgICAgIC0gb25lIE1GVCByZWNvcmQodXN1YWxseSAxMDI0IGJ5dGVz
IG9yIDRLKSwgY29uc2lzdHMgb2YgYXR0cmlidXRlcwotICogbmkgIC0gbnRmcyBpbm9kZSAgICAg
ICAgICAgICAgLSBleHRlbmRzIGxpbnV4IGlub2RlLiBjb25zaXN0cyBvZiBvbmUgb3IgbW9yZSBt
ZnQgaW5vZGVzCi0gKiBpbmRleCAtIHVuaXQgaW5zaWRlIGRpcmVjdG9yeSAtIDJLLCA0SywgPD1w
YWdlIHNpemUsIGRvZXMgbm90IGRlcGVuZCBvbiBjbHVzdGVyIHNpemUKKyAqIHZjbiAtIHZpcnR1
YWwgY2x1c3RlciBudW1iZXIgIC0gT2Zmc2V0IGluc2lkZSB0aGUgZmlsZSBpbiBjbHVzdGVycy4K
KyAqIHZibyAtIHZpcnR1YWwgYnl0ZSBvZmZzZXQgICAgIC0gT2Zmc2V0IGluc2lkZSB0aGUgZmls
ZSBpbiBieXRlcy4KKyAqIGxjbiAtIGxvZ2ljYWwgY2x1c3RlciBudW1iZXIgIC0gMCBiYXNlZCBj
bHVzdGVyIGluIGNsdXN0ZXJzIGhlYXAuCisgKiBsYm8gLSBsb2dpY2FsIGJ5dGUgb2Zmc2V0ICAg
ICAtIEFic29sdXRlIHBvc2l0aW9uIGluc2lkZSB2b2x1bWUuCisgKiBydW4gLSBtYXBzIFZDTiB0
byBMQ04gICAgICAgICAtIFN0b3JlZCBpbiBhdHRyaWJ1dGVzIGluIHBhY2tlZCBmb3JtLgorICog
YXR0ciAtIGF0dHJpYnV0ZSBzZWdtZW50ICAgICAgLSBzdGQvbmFtZS9kYXRhIGV0YyByZWNvcmRz
IGluc2lkZSBNRlQuCisgKiBtaSAgLSBNRlQgaW5vZGUgICAgICAgICAgICAgICAtIE9uZSBNRlQg
cmVjb3JkKHVzdWFsbHkgMTAyNCBieXRlcyBvciA0SyksIGNvbnNpc3RzIG9mIGF0dHJpYnV0ZXMu
CisgKiBuaSAgLSBOVEZTIGlub2RlICAgICAgICAgICAgICAtIEV4dGVuZHMgbGludXggaW5vZGUu
IGNvbnNpc3RzIG9mIG9uZSBvciBtb3JlIG1mdCBpbm9kZXMuCisgKiBpbmRleCAtIHVuaXQgaW5z
aWRlIGRpcmVjdG9yeSAtIDJLLCA0SywgPD1wYWdlIHNpemUsIGRvZXMgbm90IGRlcGVuZCBvbiBj
bHVzdGVyIHNpemUuCiAgKgogICogVE9ETzogSW1wbGVtZW50CiAgKiBodHRwczovL2RvY3MubWlj
cm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzL3dzbC9maWxlLXBlcm1pc3Npb25zCkBAIC00Miw3ICs0
Miw4IEBACgogI2lmZGVmIENPTkZJR19QUklOVEsKIC8qCi0gKiBUcmFjZSB3YXJuaW5ncy9ub3Rp
Y2VzL2Vycm9ycworICogbnRmc19wcmludGsgLSBUcmFjZSB3YXJuaW5ncy9ub3RpY2VzL2Vycm9y
cy4KKyAqCiAgKiBUaGFua3MgSm9lIFBlcmNoZXMgPGpvZUBwZXJjaGVzLmNvbT4gZm9yIGltcGxl
bWVudGF0aW9uCiAgKi8KIHZvaWQgbnRmc19wcmludGsoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzYiwgY29uc3QgY2hhciAqZm10LCAuLi4pCkBAIC01Miw3ICs1Myw3IEBAIHZvaWQgbnRmc19w
cmludGsoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgY29uc3QgY2hhciAqZm10LCAuLi4p
CiAJaW50IGxldmVsOwogCXN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSA9IHNiLT5zX2ZzX2luZm87
CgotCS8qc2hvdWxkIHdlIHVzZSBkaWZmZXJlbnQgcmF0ZWxpbWl0cyBmb3Igd2FybmluZ3Mvbm90
aWNlcy9lcnJvcnM/ICovCisJLyogU2hvdWxkIHdlIHVzZSBkaWZmZXJlbnQgcmF0ZWxpbWl0cyBm
b3Igd2FybmluZ3Mvbm90aWNlcy9lcnJvcnM/ICovCiAJaWYgKCFfX19yYXRlbGltaXQoJnNiaS0+
bXNnX3JhdGVsaW1pdCwgIm50ZnMzIikpCiAJCXJldHVybjsKCkBAIC02Nyw5ICs2OCwxMyBAQCB2
b2lkIG50ZnNfcHJpbnRrKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIGNvbnN0IGNoYXIg
KmZtdCwgLi4uKQogfQoKIHN0YXRpYyBjaGFyIHNfbmFtZV9idWZbNTEyXTsKLXN0YXRpYyBhdG9t
aWNfdCBzX25hbWVfYnVmX2NudCA9IEFUT01JQ19JTklUKDEpOyAvLyAxIG1lYW5zICdmcmVlIHNf
bmFtZV9idWYnCitzdGF0aWMgYXRvbWljX3Qgc19uYW1lX2J1Zl9jbnQgPSBBVE9NSUNfSU5JVCgx
KTsgLy8gMSBtZWFucyAnZnJlZSBzX25hbWVfYnVmJy4KCi0vKiBwcmludCB3YXJuaW5ncy9ub3Rp
Y2VzL2Vycm9ycyBhYm91dCBpbm9kZSB1c2luZyBuYW1lIG9yIGlub2RlIG51bWJlciAqLworLyoK
KyAqIG50ZnNfaW5vZGVfcHJpbnRrCisgKgorICogUHJpbnQgd2FybmluZ3Mvbm90aWNlcy9lcnJv
cnMgYWJvdXQgaW5vZGUgdXNpbmcgbmFtZSBvciBpbm9kZSBudW1iZXIuCisgKi8KIHZvaWQgbnRm
c19pbm9kZV9wcmludGsoc3RydWN0IGlub2RlICppbm9kZSwgY29uc3QgY2hhciAqZm10LCAuLi4p
CiB7CiAJc3RydWN0IHN1cGVyX2Jsb2NrICpzYiA9IGlub2RlLT5pX3NiOwpAQCAtODIsNyArODcs
NyBAQCB2b2lkIG50ZnNfaW5vZGVfcHJpbnRrKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNvbnN0IGNo
YXIgKmZtdCwgLi4uKQogCWlmICghX19fcmF0ZWxpbWl0KCZzYmktPm1zZ19yYXRlbGltaXQsICJu
dGZzMyIpKQogCQlyZXR1cm47CgotCS8qIHVzZSBzdGF0aWMgYWxsb2NhdGVkIGJ1ZmZlciwgaWYg
cG9zc2libGUgKi8KKwkvKiBVc2Ugc3RhdGljIGFsbG9jYXRlZCBidWZmZXIsIGlmIHBvc3NpYmxl
LiAqLwogCW5hbWUgPSBhdG9taWNfZGVjX2FuZF90ZXN0KCZzX25hbWVfYnVmX2NudCkKIAkJICAg
ICAgID8gc19uYW1lX2J1ZgogCQkgICAgICAgOiBrbWFsbG9jKHNpemVvZihzX25hbWVfYnVmKSwg
R0ZQX05PRlMpOwpAQCAtOTUsMTEgKzEwMCwxMSBAQCB2b2lkIG50ZnNfaW5vZGVfcHJpbnRrKHN0
cnVjdCBpbm9kZSAqaW5vZGUsIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQogCQkJc3Bpbl9sb2NrKCZk
ZS0+ZF9sb2NrKTsKIAkJCXNucHJpbnRmKG5hbWUsIG5hbWVfbGVuLCAiIFwiJXNcIiIsIGRlLT5k
X25hbWUubmFtZSk7CiAJCQlzcGluX3VubG9jaygmZGUtPmRfbG9jayk7Ci0JCQluYW1lW25hbWVf
bGVuXSA9IDA7IC8qIHRvIGJlIHN1cmUqLworCQkJbmFtZVtuYW1lX2xlbl0gPSAwOyAvKiBUbyBi
ZSBzdXJlLiAqLwogCQl9IGVsc2UgewogCQkJbmFtZVswXSA9IDA7CiAJCX0KLQkJZHB1dChkZSk7
IC8qIGNvY2NpIHdhcm5zIGlmIHBsYWNlZCBpbiBicmFuY2ggImlmIChkZSkiICovCisJCWRwdXQo
ZGUpOyAvKiBDb2NjaSB3YXJucyBpZiBwbGFjZWQgaW4gYnJhbmNoICJpZiAoZGUpIiAqLwogCX0K
CiAJdmFfc3RhcnQoYXJncywgZm10KTsKQEAgLTEyMiwxMiArMTI3LDEyIEBAIHZvaWQgbnRmc19p
bm9kZV9wcmludGsoc3RydWN0IGlub2RlICppbm9kZSwgY29uc3QgY2hhciAqZm10LCAuLi4pCiAv
KgogICogU2hhcmVkIG1lbW9yeSBzdHJ1Y3QuCiAgKgotICogb24tZGlzayBudGZzJ3MgdXBjYXNl
IHRhYmxlIGlzIGNyZWF0ZWQgYnkgbnRmcyBmb3JtYXRlcgotICogJ3VwY2FzZScgdGFibGUgaXMg
MTI4SyBieXRlcyBvZiBtZW1vcnkKLSAqIHdlIHNob3VsZCByZWFkIGl0IGludG8gbWVtb3J5IHdo
ZW4gbW91bnRpbmcKLSAqIFNldmVyYWwgbnRmcyB2b2x1bWVzIGxpa2VseSB1c2UgdGhlIHNhbWUg
J3VwY2FzZScgdGFibGUKLSAqIEl0IGlzIGdvb2QgaWRlYSB0byBzaGFyZSBpbi1tZW1vcnkgJ3Vw
Y2FzZScgdGFibGUgYmV0d2VlbiBkaWZmZXJlbnQgdm9sdW1lcwotICogVW5mb3J0dW5hdGVseSB3
aW54cC92aXN0YS93aW43IHVzZSBkaWZmZXJlbnQgdXBjYXNlIHRhYmxlcworICogT24tZGlzayBu
dGZzJ3MgdXBjYXNlIHRhYmxlIGlzIGNyZWF0ZWQgYnkgbnRmcyBmb3JtYXRlcgorICogJ3VwY2Fz
ZScgdGFibGUgaXMgMTI4SyBieXRlcyBvZiBtZW1vcnkuCisgKiBXZSBzaG91bGQgcmVhZCBpdCBp
bnRvIG1lbW9yeSB3aGVuIG1vdW50aW5nLgorICogU2V2ZXJhbCBudGZzIHZvbHVtZXMgbGlrZWx5
IHVzZSB0aGUgc2FtZSAndXBjYXNlJyB0YWJsZS4KKyAqIEl0IGlzIGdvb2QgaWRlYSB0byBzaGFy
ZSBpbi1tZW1vcnkgJ3VwY2FzZScgdGFibGUgYmV0d2VlbiBkaWZmZXJlbnQgdm9sdW1lcy4KKyAq
IFVuZm9ydHVuYXRlbHkgd2lueHAvdmlzdGEvd2luNyB1c2UgZGlmZmVyZW50IHVwY2FzZSB0YWJs
ZXMuCiAgKi8KIHN0YXRpYyBERUZJTkVfU1BJTkxPQ0soc19zaGFyZWRfbG9jayk7CgpAQCAtMTQw
LDggKzE0NSw5IEBAIHN0YXRpYyBzdHJ1Y3QgewogLyoKICAqIG50ZnNfc2V0X3NoYXJlZAogICoK
LSAqIFJldHVybnMgJ3B0cicgaWYgcG9pbnRlciB3YXMgc2F2ZWQgaW4gc2hhcmVkIG1lbW9yeQot
ICogUmV0dXJucyBOVUxMIGlmIHBvaW50ZXIgd2FzIG5vdCBzaGFyZWQKKyAqIFJldHVybjoKKyAq
ICogQHB0ciAtIElmIHBvaW50ZXIgd2FzIHNhdmVkIGluIHNoYXJlZCBtZW1vcnkuCisgKiAqIE5V
TEwgLSBJZiBwb2ludGVyIHdhcyBub3Qgc2hhcmVkLgogICovCiB2b2lkICpudGZzX3NldF9zaGFy
ZWQodm9pZCAqcHRyLCB1MzIgYnl0ZXMpCiB7CkBAIC0xNzQsOCArMTgwLDkgQEAgdm9pZCAqbnRm
c19zZXRfc2hhcmVkKHZvaWQgKnB0ciwgdTMyIGJ5dGVzKQogLyoKICAqIG50ZnNfcHV0X3NoYXJl
ZAogICoKLSAqIFJldHVybnMgJ3B0cicgaWYgcG9pbnRlciBpcyBub3Qgc2hhcmVkIGFueW1vcmUK
LSAqIFJldHVybnMgTlVMTCBpZiBwb2ludGVyIGlzIHN0aWxsIHNoYXJlZAorICogUmV0dXJuOgor
ICogKiBAcHRyIC0gSWYgcG9pbnRlciBpcyBub3Qgc2hhcmVkIGFueW1vcmUuCisgKiAqIE5VTEwg
LSBJZiBwb2ludGVyIGlzIHN0aWxsIHNoYXJlZC4KICAqLwogdm9pZCAqbnRmc19wdXRfc2hhcmVk
KHZvaWQgKnB0cikKIHsKQEAgLTM1MCw3ICszNTcsMTAgQEAgc3RhdGljIG5vaW5saW5lIGludCBu
dGZzX3BhcnNlX29wdGlvbnMoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgY2hhciAqb3B0aW9ucywK
CiBvdXQ6CiAJaWYgKCFzdHJjbXAobmxzX25hbWVbMF0gPyBubHNfbmFtZSA6IENPTkZJR19OTFNf
REVGQVVMVCwgInV0ZjgiKSkgewotCQkvKiBGb3IgVVRGLTggdXNlIHV0ZjE2c190b191dGY4cy91
dGY4c190b191dGYxNnMgaW5zdGVhZCBvZiBubHMgKi8KKwkJLyoKKwkJICogRm9yIFVURi04IHVz
ZSB1dGYxNnNfdG9fdXRmOHMoKS91dGY4c190b191dGYxNnMoKQorCQkgKiBpbnN0ZWFkIG9mIE5M
Uy4KKwkJICovCiAJCW5scyA9IE5VTEw7CiAJfSBlbHNlIGlmIChubHNfbmFtZVswXSkgewogCQlu
bHMgPSBsb2FkX25scyhubHNfbmFtZSk7CkBAIC0zODAsNyArMzkwLDcgQEAgc3RhdGljIGludCBu
dGZzX3JlbW91bnQoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgaW50ICpmbGFncywgY2hhciAqZGF0
YSkKIAlpZiAoZGF0YSAmJiAhb3JpZ19kYXRhKQogCQlyZXR1cm4gLUVOT01FTTsKCi0JLyogU3Rv
cmUgIG9yaWdpbmFsIG9wdGlvbnMgKi8KKwkvKiBTdG9yZSAgb3JpZ2luYWwgb3B0aW9ucy4gKi8K
IAltZW1jcHkoJm9sZF9vcHRzLCAmc2JpLT5vcHRpb25zLCBzaXplb2Yob2xkX29wdHMpKTsKIAlj
bGVhcl9tb3VudF9vcHRpb25zKCZzYmktPm9wdGlvbnMpOwogCW1lbXNldCgmc2JpLT5vcHRpb25z
LCAwLCBzaXplb2Yoc2JpLT5vcHRpb25zKSk7CkBAIC00NjIsNyArNDcyLDkgQEAgc3RhdGljIHZv
aWQgaW5pdF9vbmNlKHZvaWQgKmZvbykKIAlpbm9kZV9pbml0X29uY2UoJm5pLT52ZnNfaW5vZGUp
OwogfQoKLS8qIG5vaW5saW5lIHRvIHJlZHVjZSBiaW5hcnkgc2l6ZSovCisvKgorICogcHV0X250
ZnMgLSBOb2lubGluZSB0byByZWR1Y2UgYmluYXJ5IHNpemUuCisgKi8KIHN0YXRpYyBub2lubGlu
ZSB2b2lkIHB1dF9udGZzKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSkKIHsKIAludGZzX2ZyZWUo
c2JpLT5uZXdfcmVjKTsKQEAgLTUwNyw3ICs1MTksNyBAQCBzdGF0aWMgdm9pZCBudGZzX3B1dF9z
dXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiKQogewogCXN0cnVjdCBudGZzX3NiX2luZm8gKnNi
aSA9IHNiLT5zX2ZzX2luZm87CgotCS8qbWFyayBydyBudGZzIGFzIGNsZWFyLCBpZiBwb3NzaWJs
ZSovCisJLyogTWFyayBydyBudGZzIGFzIGNsZWFyLCBpZiBwb3NzaWJsZS4gKi8KIAludGZzX3Nl
dF9zdGF0ZShzYmksIE5URlNfRElSVFlfQ0xFQVIpOwoKIAlwdXRfbnRmcyhzYmkpOwpAQCAtNTc4
LDcgKzU5MCw5IEBAIHN0YXRpYyBpbnQgbnRmc19zaG93X29wdGlvbnMoc3RydWN0IHNlcV9maWxl
ICptLCBzdHJ1Y3QgZGVudHJ5ICpyb290KQogCXJldHVybiAwOwogfQoKLS8qc3VwZXJfb3BlcmF0
aW9uczo6c3luY19mcyovCisvKgorICogbnRmc19zeW5jX2ZzIC0gc3VwZXJfb3BlcmF0aW9uczo6
c3luY19mcworICovCiBzdGF0aWMgaW50IG50ZnNfc3luY19mcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sg
KnNiLCBpbnQgd2FpdCkKIHsKIAlpbnQgZXJyID0gMCwgZXJyMjsKQEAgLTY4MCwxMCArNjk0LDEy
IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZXhwb3J0X29wZXJhdGlvbnMgbnRmc19leHBvcnRfb3Bz
ID0gewogCS5jb21taXRfbWV0YWRhdGEgPSBudGZzX25mc19jb21taXRfbWV0YWRhdGEsCiB9OwoK
LS8qIFJldHVybnMgR2IsTWIgdG8gcHJpbnQgd2l0aCAiJXUuJTAydSBHYiIgKi8KKy8qCisgKiBm
b3JtYXRfc2l6ZV9nYiAtIFJldHVybiBHYixNYiB0byBwcmludCB3aXRoICIldS4lMDJ1IEdiIi4K
KyAqLwogc3RhdGljIHUzMiBmb3JtYXRfc2l6ZV9nYihjb25zdCB1NjQgYnl0ZXMsIHUzMiAqbWIp
CiB7Ci0JLyogRG8gc2ltcGxlIHJpZ2h0IDMwIGJpdCBzaGlmdCBvZiA2NCBiaXQgdmFsdWUgKi8K
KwkvKiBEbyBzaW1wbGUgcmlnaHQgMzAgYml0IHNoaWZ0IG9mIDY0IGJpdCB2YWx1ZS4gKi8KIAl1
NjQga2J5dGVzID0gYnl0ZXMgPj4gMTA7CiAJdTMyIGtieXRlczMyID0ga2J5dGVzOwoKQEAgLTcw
MSw3ICs3MTcsOSBAQCBzdGF0aWMgdTMyIHRydWVfc2VjdG9yc19wZXJfY2xzdChjb25zdCBzdHJ1
Y3QgTlRGU19CT09UICpib290KQogCQkgICAgICAgOiAoMXUgPDwgKDAgLSBib290LT5zZWN0b3Jz
X3Blcl9jbHVzdGVycykpOwogfQoKLS8qIGluaXRzIGludGVybmFsIGluZm8gZnJvbSBvbi1kaXNr
IGJvb3Qgc2VjdG9yKi8KKy8qCisgKiBudGZzX2luaXRfZnJvbV9ib290IC0gSW5pdCBpbnRlcm5h
bCBpbmZvIGZyb20gb24tZGlzayBib290IHNlY3Rvci4KKyAqLwogc3RhdGljIGludCBudGZzX2lu
aXRfZnJvbV9ib290KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHUzMiBzZWN0b3Jfc2l6ZSwKIAkJ
CSAgICAgICB1NjQgZGV2X3NpemUpCiB7CkBAIC03NTIsMTQgKzc3MCwxNCBAQCBzdGF0aWMgaW50
IG50ZnNfaW5pdF9mcm9tX2Jvb3Qoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdTMyIHNlY3Rvcl9z
aXplLAogCWlmIChtbGNuMiAqIHNjdF9wZXJfY2xzdCA+PSBzZWN0b3JzKQogCQlnb3RvIG91dDsK
Ci0JLyogQ2hlY2sgTUZUIHJlY29yZCBzaXplICovCisJLyogQ2hlY2sgTUZUIHJlY29yZCBzaXpl
LiAqLwogCWlmICgoYm9vdC0+cmVjb3JkX3NpemUgPCAwICYmCiAJICAgICBTRUNUT1JfU0laRSA+
ICgyVSA8PCAoLWJvb3QtPnJlY29yZF9zaXplKSkpIHx8CiAJICAgIChib290LT5yZWNvcmRfc2l6
ZSA+PSAwICYmICFpc19wb3dlcl9vZjIoYm9vdC0+cmVjb3JkX3NpemUpKSkgewogCQlnb3RvIG91
dDsKIAl9CgotCS8qIENoZWNrIGluZGV4IHJlY29yZCBzaXplICovCisJLyogQ2hlY2sgaW5kZXgg
cmVjb3JkIHNpemUuICovCiAJaWYgKChib290LT5pbmRleF9zaXplIDwgMCAmJgogCSAgICAgU0VD
VE9SX1NJWkUgPiAoMlUgPDwgKC1ib290LT5pbmRleF9zaXplKSkpIHx8CiAJICAgIChib290LT5p
bmRleF9zaXplID49IDAgJiYgIWlzX3Bvd2VyX29mMihib290LT5pbmRleF9zaXplKSkpIHsKQEAg
LTc3Myw5ICs3OTEsOSBAQCBzdGF0aWMgaW50IG50ZnNfaW5pdF9mcm9tX2Jvb3Qoc3RydWN0IHN1
cGVyX2Jsb2NrICpzYiwgdTMyIHNlY3Rvcl9zaXplLAogCWdiID0gZm9ybWF0X3NpemVfZ2IoZnNf
c2l6ZSwgJm1iKTsKCiAJLyoKLQkgKiAtIFZvbHVtZSBmb3JtYXR0ZWQgYW5kIG1vdW50ZWQgd2l0
aCB0aGUgc2FtZSBzZWN0b3Igc2l6ZQotCSAqIC0gVm9sdW1lIGZvcm1hdHRlZCA0SyBhbmQgbW91
bnRlZCBhcyA1MTIKLQkgKiAtIFZvbHVtZSBmb3JtYXR0ZWQgNTEyIGFuZCBtb3VudGVkIGFzIDRL
CisJICogLSBWb2x1bWUgZm9ybWF0dGVkIGFuZCBtb3VudGVkIHdpdGggdGhlIHNhbWUgc2VjdG9y
IHNpemUuCisJICogLSBWb2x1bWUgZm9ybWF0dGVkIDRLIGFuZCBtb3VudGVkIGFzIDUxMi4KKwkg
KiAtIFZvbHVtZSBmb3JtYXR0ZWQgNTEyIGFuZCBtb3VudGVkIGFzIDRLLgogCSAqLwogCWlmIChz
YmktPnNlY3Rvcl9zaXplICE9IHNlY3Rvcl9zaXplKSB7CiAJCW50ZnNfd2FybihzYiwKQEAgLTgx
Nyw3ICs4MzUsNyBAQCBzdGF0aWMgaW50IG50ZnNfaW5pdF9mcm9tX2Jvb3Qoc3RydWN0IHN1cGVy
X2Jsb2NrICpzYiwgdTMyIHNlY3Rvcl9zaXplLAogCXNiaS0+dm9sdW1lLnNlcl9udW0gPSBsZTY0
X3RvX2NwdShib290LT5zZXJpYWxfbnVtKTsKIAlzYmktPnZvbHVtZS5zaXplID0gc2VjdG9ycyA8
PCBzYmktPnNlY3Rvcl9iaXRzOwoKLQkvKiB3YXJuaW5nIGlmIFJBVyB2b2x1bWUgKi8KKwkvKiBX
YXJuaW5nIGlmIFJBVyB2b2x1bWUuICovCiAJaWYgKGRldl9zaXplIDwgZnNfc2l6ZSkgewogCQl1
MzIgbWIwLCBnYjA7CgpAQCAtODMxLDcgKzg0OSw3IEBAIHN0YXRpYyBpbnQgbnRmc19pbml0X2Zy
b21fYm9vdChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB1MzIgc2VjdG9yX3NpemUsCgogCWNsdXN0
ZXJzID0gc2JpLT52b2x1bWUuc2l6ZSA+PiBzYmktPmNsdXN0ZXJfYml0czsKICNpZm5kZWYgQ09O
RklHX05URlMzXzY0QklUX0NMVVNURVIKLQkvKiAzMiBiaXRzIHBlciBjbHVzdGVyICovCisJLyog
MzIgYml0cyBwZXIgY2x1c3Rlci4gKi8KIAlpZiAoY2x1c3RlcnMgPj4gMzIpIHsKIAkJbnRmc19u
b3RpY2UoCiAJCQlzYiwKQEAgLTg2OSw3ICs4ODcsNyBAQCBzdGF0aWMgaW50IG50ZnNfaW5pdF9m
cm9tX2Jvb3Qoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdTMyIHNlY3Rvcl9zaXplLAogCXNiaS0+
YmxvY2tzX3Blcl9jbHVzdGVyID0gc2JpLT5jbHVzdGVyX3NpemUgPj4gc2ItPnNfYmxvY2tzaXpl
X2JpdHM7CiAJc2JpLT52b2x1bWUuYmxvY2tzID0gc2JpLT52b2x1bWUuc2l6ZSA+PiBzYi0+c19i
bG9ja3NpemVfYml0czsKCi0JLyogTWF4aW11bSBzaXplIGZvciBub3JtYWwgZmlsZXMgKi8KKwkv
KiBNYXhpbXVtIHNpemUgZm9yIG5vcm1hbCBmaWxlcy4gKi8KIAlzYmktPm1heGJ5dGVzID0gKGNs
dXN0ZXJzIDw8IHNiaS0+Y2x1c3Rlcl9iaXRzKSAtIDE7CgogI2lmZGVmIENPTkZJR19OVEZTM182
NEJJVF9DTFVTVEVSCkBAIC04NzcsNyArODk1LDcgQEAgc3RhdGljIGludCBudGZzX2luaXRfZnJv
bV9ib290KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHUzMiBzZWN0b3Jfc2l6ZSwKIAkJc2JpLT5t
YXhieXRlcyA9IC0xOwogCXNiaS0+bWF4Ynl0ZXNfc3BhcnNlID0gLTE7CiAjZWxzZQotCS8qIE1h
eGltdW0gc2l6ZSBmb3Igc3BhcnNlIGZpbGUgKi8KKwkvKiBNYXhpbXVtIHNpemUgZm9yIHNwYXJz
ZSBmaWxlLiAqLwogCXNiaS0+bWF4Ynl0ZXNfc3BhcnNlID0gKDF1bGwgPDwgKHNiaS0+Y2x1c3Rl
cl9iaXRzICsgMzIpKSAtIDE7CiAjZW5kaWYKCkBAIC04ODksNyArOTA3LDkgQEAgc3RhdGljIGlu
dCBudGZzX2luaXRfZnJvbV9ib290KHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHUzMiBzZWN0b3Jf
c2l6ZSwKIAlyZXR1cm4gZXJyOwogfQoKLS8qIHRyeSB0byBtb3VudCovCisvKgorICogbnRmc19m
aWxsX3N1cGVyIC0gVHJ5IHRvIG1vdW50LgorICovCiBzdGF0aWMgaW50IG50ZnNfZmlsbF9zdXBl
cihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQogewogCWlu
dCBlcnI7CkBAIC05NDIsNyArOTYyLDcgQEAgc3RhdGljIGludCBudGZzX2ZpbGxfc3VwZXIoc3Ry
dWN0IHN1cGVyX2Jsb2NrICpzYiwgdm9pZCAqZGF0YSwgaW50IHNpbGVudCkKCiAJc2Jfc2V0X2Js
b2Nrc2l6ZShzYiwgUEFHRV9TSVpFKTsKCi0JLyogcGFyc2UgYm9vdCAqLworCS8qIFBhcnNlIGJv
b3QuICovCiAJZXJyID0gbnRmc19pbml0X2Zyb21fYm9vdChzYiwgcnEgPyBxdWV1ZV9sb2dpY2Fs
X2Jsb2NrX3NpemUocnEpIDogNTEyLAogCQkJCSAgYmRfaW5vZGUtPmlfc2l6ZSk7CiAJaWYgKGVy
cikKQEAgLTk2MSw4ICs5ODEsOCBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9zdXBlcihzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQogI2VuZGlmCgogCS8qCi0J
ICogTG9hZCAkVm9sdW1lLiBUaGlzIHNob3VsZCBiZSBkb25lIGJlZm9yZSBMb2dGaWxlCi0JICog
J2NhdXNlICdzYmktPnZvbHVtZS5uaScgaXMgdXNlZCAnbnRmc19zZXRfc3RhdGUnCisJICogTG9h
ZCAkVm9sdW1lLiBUaGlzIHNob3VsZCBiZSBkb25lIGJlZm9yZSAkTG9nRmlsZQorCSAqICdjYXVz
ZSAnc2JpLT52b2x1bWUubmknIGlzIHVzZWQgJ250ZnNfc2V0X3N0YXRlJy4KIAkgKi8KIAlyZWYu
bG93ID0gY3B1X3RvX2xlMzIoTUZUX1JFQ19WT0wpOwogCXJlZi5zZXEgPSBjcHVfdG9fbGUxNihN
RlRfUkVDX1ZPTCk7CkBAIC05NzYsMTMgKzk5NiwxMyBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9z
dXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQoKIAlu
aSA9IG50ZnNfaShpbm9kZSk7CgotCS8qIExvYWQgYW5kIHNhdmUgbGFiZWwgKG5vdCBuZWNlc3Nh
cnkpICovCisJLyogTG9hZCBhbmQgc2F2ZSBsYWJlbCAobm90IG5lY2Vzc2FyeSkuICovCiAJYXR0
ciA9IG5pX2ZpbmRfYXR0cihuaSwgTlVMTCwgTlVMTCwgQVRUUl9MQUJFTCwgTlVMTCwgMCwgTlVM
TCwgTlVMTCk7CgogCWlmICghYXR0cikgewogCQkvKiBJdCBpcyBvayBpZiBubyBBVFRSX0xBQkVM
ICovCiAJfSBlbHNlIGlmICghYXR0ci0+bm9uX3JlcyAmJiAhaXNfYXR0cl9leHQoYXR0cikpIHsK
LQkJLyogJEF0dHJEZWYgYWxsb3dzIGxhYmVscyB0byBiZSB1cCB0byAxMjggc3ltYm9scyAqLwor
CQkvKiAkQXR0ckRlZiBhbGxvd3MgbGFiZWxzIHRvIGJlIHVwIHRvIDEyOCBzeW1ib2xzLiAqLwog
CQllcnIgPSB1dGYxNnNfdG9fdXRmOHMocmVzaWRlbnRfZGF0YShhdHRyKSwKIAkJCQkgICAgICBs
ZTMyX3RvX2NwdShhdHRyLT5yZXMuZGF0YV9zaXplKSA+PiAxLAogCQkJCSAgICAgIFVURjE2X0xJ
VFRMRV9FTkRJQU4sIHNiaS0+dm9sdW1lLmxhYmVsLApAQCAtOTkwLDcgKzEwMTAsNyBAQCBzdGF0
aWMgaW50IG50ZnNfZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRh
LCBpbnQgc2lsZW50KQogCQlpZiAoZXJyIDwgMCkKIAkJCXNiaS0+dm9sdW1lLmxhYmVsWzBdID0g
MDsKIAl9IGVsc2UgewotCQkvKiBzaG91bGQgd2UgYnJlYWsgbW91bnRpbmcgaGVyZT8gKi8KKwkJ
LyogU2hvdWxkIHdlIGJyZWFrIG1vdW50aW5nIGhlcmU/ICovCiAJCS8vZXJyID0gLUVJTlZBTDsK
IAkJLy9nb3RvIG91dDsKIAl9CkBAIC0xMDE0LDcgKzEwMzQsNyBAQCBzdGF0aWMgaW50IG50ZnNf
ZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50
KQogCXNiaS0+dm9sdW1lLm5pID0gbmk7CiAJaW5vZGUgPSBOVUxMOwoKLQkvKiBMb2FkICRNRlRN
aXJyIHRvIGVzdGltYXRlIHJlY3NfbWlyciAqLworCS8qIExvYWQgJE1GVE1pcnIgdG8gZXN0aW1h
dGUgcmVjc19taXJyLiAqLwogCXJlZi5sb3cgPSBjcHVfdG9fbGUzMihNRlRfUkVDX01JUlIpOwog
CXJlZi5zZXEgPSBjcHVfdG9fbGUxNihNRlRfUkVDX01JUlIpOwogCWlub2RlID0gbnRmc19pZ2V0
NShzYiwgJnJlZiwgJk5BTUVfTUlSUk9SKTsKQEAgLTEwMzAsNyArMTA1MCw3IEBAIHN0YXRpYyBp
bnQgbnRmc19maWxsX3N1cGVyKHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHZvaWQgKmRhdGEsIGlu
dCBzaWxlbnQpCgogCWlwdXQoaW5vZGUpOwoKLQkvKiBMb2FkIExvZ0ZpbGUgdG8gcmVwbGF5ICov
CisJLyogTG9hZCAkTG9nRmlsZSB0byByZXBsYXkuICovCiAJcmVmLmxvdyA9IGNwdV90b19sZTMy
KE1GVF9SRUNfTE9HKTsKIAlyZWYuc2VxID0gY3B1X3RvX2xlMTYoTUZUX1JFQ19MT0cpOwogCWlu
b2RlID0gbnRmc19pZ2V0NShzYiwgJnJlZiwgJk5BTUVfTE9HRklMRSk7CkBAIC0xMDY5LDcgKzEw
ODksNyBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNi
LCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQogCQl9CiAJfQoKLQkvKiBMb2FkICRNRlQgKi8KKwkv
KiBMb2FkICRNRlQuICovCiAJcmVmLmxvdyA9IGNwdV90b19sZTMyKE1GVF9SRUNfTUZUKTsKIAly
ZWYuc2VxID0gY3B1X3RvX2xlMTYoMSk7CgpAQCAtMTA5Nyw3ICsxMTE3LDcgQEAgc3RhdGljIGlu
dCBudGZzX2ZpbGxfc3VwZXIoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdm9pZCAqZGF0YSwgaW50
IHNpbGVudCkKCiAJc2JpLT5tZnQubmkgPSBuaTsKCi0JLyogTG9hZCAkQmFkQ2x1cyAqLworCS8q
IExvYWQgJEJhZENsdXMuICovCiAJcmVmLmxvdyA9IGNwdV90b19sZTMyKE1GVF9SRUNfQkFEQ0xV
U1QpOwogCXJlZi5zZXEgPSBjcHVfdG9fbGUxNihNRlRfUkVDX0JBRENMVVNUKTsKIAlpbm9kZSA9
IG50ZnNfaWdldDUoc2IsICZyZWYsICZOQU1FX0JBRENMVVMpOwpAQCAtMTEyMiw3ICsxMTQyLDcg
QEAgc3RhdGljIGludCBudGZzX2ZpbGxfc3VwZXIoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdm9p
ZCAqZGF0YSwgaW50IHNpbGVudCkKCiAJaXB1dChpbm9kZSk7CgotCS8qIExvYWQgJEJpdG1hcCAq
LworCS8qIExvYWQgJEJpdG1hcC4gKi8KIAlyZWYubG93ID0gY3B1X3RvX2xlMzIoTUZUX1JFQ19C
SVRNQVApOwogCXJlZi5zZXEgPSBjcHVfdG9fbGUxNihNRlRfUkVDX0JJVE1BUCk7CiAJaW5vZGUg
PSBudGZzX2lnZXQ1KHNiLCAmcmVmLCAmTkFNRV9CSVRNQVApOwpAQCAtMTE0MiwxNCArMTE2Miwx
NCBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2
b2lkICpkYXRhLCBpbnQgc2lsZW50KQogCX0KICNlbmRpZgoKLQkvKiBDaGVjayBiaXRtYXAgYm91
bmRhcnkgKi8KKwkvKiBDaGVjayBiaXRtYXAgYm91bmRhcnkuICovCiAJdHQgPSBzYmktPnVzZWQu
Yml0bWFwLm5iaXRzOwogCWlmIChpbm9kZS0+aV9zaXplIDwgYml0bWFwX3NpemUodHQpKSB7CiAJ
CWVyciA9IC1FSU5WQUw7CiAJCWdvdG8gb3V0OwogCX0KCi0JLyogTm90IG5lY2Vzc2FyeSAqLwor
CS8qIE5vdCBuZWNlc3NhcnkuICovCiAJc2JpLT51c2VkLmJpdG1hcC5zZXRfdGFpbCA9IHRydWU7
CiAJZXJyID0gd25kX2luaXQoJnNiaS0+dXNlZC5iaXRtYXAsIHNiaS0+c2IsIHR0KTsKIAlpZiAo
ZXJyKQpAQCAtMTE1NywxMiArMTE3NywxMiBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9zdXBlcihz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQoKIAlpcHV0KGlu
b2RlKTsKCi0JLyogQ29tcHV0ZSB0aGUgbWZ0IHpvbmUgKi8KKwkvKiBDb21wdXRlIHRoZSBNRlQg
em9uZS4gKi8KIAllcnIgPSBudGZzX3JlZnJlc2hfem9uZShzYmkpOwogCWlmIChlcnIpCiAJCWdv
dG8gb3V0OwoKLQkvKiBMb2FkICRBdHRyRGVmICovCisJLyogTG9hZCAkQXR0ckRlZi4gKi8KIAly
ZWYubG93ID0gY3B1X3RvX2xlMzIoTUZUX1JFQ19BVFRSKTsKIAlyZWYuc2VxID0gY3B1X3RvX2xl
MTYoTUZUX1JFQ19BVFRSKTsKIAlpbm9kZSA9IG50ZnNfaWdldDUoc2JpLT5zYiwgJnJlZiwgJk5B
TUVfQVRUUkRFRik7CkBAIC0xMjI2LDcgKzEyNDYsNyBAQCBzdGF0aWMgaW50IG50ZnNfZmlsbF9z
dXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB2b2lkICpkYXRhLCBpbnQgc2lsZW50KQogCX0K
IAlpcHV0KGlub2RlKTsKCi0JLyogTG9hZCAkVXBDYXNlICovCisJLyogTG9hZCAkVXBDYXNlLiAq
LwogCXJlZi5sb3cgPSBjcHVfdG9fbGUzMihNRlRfUkVDX1VQQ0FTRSk7CiAJcmVmLnNlcSA9IGNw
dV90b19sZTE2KE1GVF9SRUNfVVBDQVNFKTsKIAlpbm9kZSA9IG50ZnNfaWdldDUoc2IsICZyZWYs
ICZOQU1FX1VQQ0FTRSk7CkBAIC0xMjgxLDI5ICsxMzAxLDI5IEBAIHN0YXRpYyBpbnQgbnRmc19m
aWxsX3N1cGVyKHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIHZvaWQgKmRhdGEsIGludCBzaWxlbnQp
CiAJaW5vZGUgPSBOVUxMOwoKIAlpZiAoaXNfbnRmczMoc2JpKSkgewotCQkvKiBMb2FkICRTZWN1
cmUgKi8KKwkJLyogTG9hZCAkU2VjdXJlLiAqLwogCQllcnIgPSBudGZzX3NlY3VyaXR5X2luaXQo
c2JpKTsKIAkJaWYgKGVycikKIAkJCWdvdG8gb3V0OwoKLQkJLyogTG9hZCAkRXh0ZW5kICovCisJ
CS8qIExvYWQgJEV4dGVuZC4gKi8KIAkJZXJyID0gbnRmc19leHRlbmRfaW5pdChzYmkpOwogCQlp
ZiAoZXJyKQogCQkJZ290byBsb2FkX3Jvb3Q7CgotCQkvKiBMb2FkICRFeHRlbmRcJFJlcGFyc2Ug
Ki8KKwkJLyogTG9hZCAkRXh0ZW5kXCRSZXBhcnNlLiAqLwogCQllcnIgPSBudGZzX3JlcGFyc2Vf
aW5pdChzYmkpOwogCQlpZiAoZXJyKQogCQkJZ290byBsb2FkX3Jvb3Q7CgotCQkvKiBMb2FkICRF
eHRlbmRcJE9iaklkICovCisJCS8qIExvYWQgJEV4dGVuZFwkT2JqSWQuICovCiAJCWVyciA9IG50
ZnNfb2JqaWRfaW5pdChzYmkpOwogCQlpZiAoZXJyKQogCQkJZ290byBsb2FkX3Jvb3Q7CiAJfQoK
IGxvYWRfcm9vdDoKLQkvKiBMb2FkIHJvb3QgKi8KKwkvKiBMb2FkIHJvb3QuICovCiAJcmVmLmxv
dyA9IGNwdV90b19sZTMyKE1GVF9SRUNfUk9PVCk7CiAJcmVmLnNlcSA9IGNwdV90b19sZTE2KE1G
VF9SRUNfUk9PVCk7CiAJaW5vZGUgPSBudGZzX2lnZXQ1KHNiLCAmcmVmLCAmTkFNRV9ST09UKTsK
QEAgLTEzNjYsOSArMTM4Niw3IEBAIHZvaWQgbnRmc191bm1hcF9tZXRhKHN0cnVjdCBzdXBlcl9i
bG9jayAqc2IsIENMU1QgbGNuLCBDTFNUIGxlbikKIH0KCiAvKgotICogbnRmc19kaXNjYXJkCi0g
KgotICogaXNzdWUgYSBkaXNjYXJkIHJlcXVlc3QgKHRyaW0gZm9yIFNTRCkKKyAqIG50ZnNfZGlz
Y2FyZCAtIElzc3VlIGEgZGlzY2FyZCByZXF1ZXN0ICh0cmltIGZvciBTU0QpLgogICovCiBpbnQg
bnRmc19kaXNjYXJkKHN0cnVjdCBudGZzX3NiX2luZm8gKnNiaSwgQ0xTVCBsY24sIENMU1QgbGVu
KQogewpAQCAtMTM4OCwxMCArMTQwNiwxMCBAQCBpbnQgbnRmc19kaXNjYXJkKHN0cnVjdCBudGZz
X3NiX2luZm8gKnNiaSwgQ0xTVCBsY24sIENMU1QgbGVuKQogCWxibyA9ICh1NjQpbGNuIDw8IHNi
aS0+Y2x1c3Rlcl9iaXRzOwogCWJ5dGVzID0gKHU2NClsZW4gPDwgc2JpLT5jbHVzdGVyX2JpdHM7
CgotCS8qIEFsaWduIHVwICdzdGFydCcgb24gZGlzY2FyZF9ncmFudWxhcml0eSAqLworCS8qIEFs
aWduIHVwICdzdGFydCcgb24gZGlzY2FyZF9ncmFudWxhcml0eS4gKi8KIAlzdGFydCA9IChsYm8g
KyBzYmktPmRpc2NhcmRfZ3JhbnVsYXJpdHkgLSAxKSAmCiAJCXNiaS0+ZGlzY2FyZF9ncmFudWxh
cml0eV9tYXNrX2ludjsKLQkvKiBBbGlnbiBkb3duICdlbmQnIG9uIGRpc2NhcmRfZ3JhbnVsYXJp
dHkgKi8KKwkvKiBBbGlnbiBkb3duICdlbmQnIG9uIGRpc2NhcmRfZ3JhbnVsYXJpdHkuICovCiAJ
ZW5kID0gKGxibyArIGJ5dGVzKSAmIHNiaS0+ZGlzY2FyZF9ncmFudWxhcml0eV9tYXNrX2ludjsK
CiAJc2IgPSBzYmktPnNiOwpAQCAtMTQzOCw3ICsxNDU2LDcgQEAgc3RhdGljIGludCBfX2luaXQg
aW5pdF9udGZzX2ZzKHZvaWQpCiAJcHJfbm90aWNlKCJudGZzMzogQWN0aXZhdGVkIDMyIGJpdHMg
cGVyIGNsdXN0ZXJcbiIpOwogI2VuZGlmCiAjaWZkZWYgQ09ORklHX05URlMzX0xaWF9YUFJFU1MK
LQlwcl9ub3RpY2UoIm50ZnMzOiBSZWFkLW9ubHkgbHp4L3hwcmVzcyBjb21wcmVzc2lvbiBpbmNs
dWRlZFxuIik7CisJcHJfbm90aWNlKCJudGZzMzogUmVhZC1vbmx5IExaWC9YcHJlc3MgY29tcHJl
c3Npb24gaW5jbHVkZWRcbiIpOwogI2VuZGlmCgogCWVyciA9IG50ZnMzX2luaXRfYml0bWFwKCk7
CmRpZmYgLS1naXQgYS9mcy9udGZzMy91cGNhc2UuYyBiL2ZzL250ZnMzL3VwY2FzZS5jCmluZGV4
IDk2MTczODJhY2E2NC4uNTA0N2ZhMzQwNGE2IDEwMDY0NAotLS0gYS9mcy9udGZzMy91cGNhc2Uu
YworKysgYi9mcy9udGZzMy91cGNhc2UuYwpAQCAtNCw2ICs0LDcgQEAKICAqIENvcHlyaWdodCAo
QykgMjAxOS0yMDIxIFBhcmFnb24gU29mdHdhcmUgR21iSCwgQWxsIHJpZ2h0cyByZXNlcnZlZC4K
ICAqCiAgKi8KKwogI2luY2x1ZGUgPGxpbnV4L2Jsa2Rldi5oPgogI2luY2x1ZGUgPGxpbnV4L2J1
ZmZlcl9oZWFkLmg+CiAjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CkBAIC0yNSwxMiArMjYsMTQg
QEAgc3RhdGljIGlubGluZSB1MTYgdXBjYXNlX3VuaWNvZGVfY2hhcihjb25zdCB1MTYgKnVwY2Fz
ZSwgdTE2IGNocikKIH0KCiAvKgorICogbnRmc19jbXBfbmFtZXMKKyAqCiAgKiBUaGFua3MgS2Fy
aSBBcmdpbGxhbmRlciA8a2FyaS5hcmdpbGxhbmRlckBnbWFpbC5jb20+IGZvciBpZGVhIGFuZCBp
bXBsZW1lbnRhdGlvbiAnYm90aGNhc2UnCiAgKgogICogU3RyYWlndGggd2F5IHRvIGNvbXBhcmUg
bmFtZXM6Ci0gKiAtIGNhc2UgaW5zZW5zaXRpdmUKLSAqIC0gaWYgbmFtZSBlcXVhbHMgYW5kICdi
b3RoY2FzZXMnIHRoZW4KLSAqIC0gY2FzZSBzZW5zaXRpdmUKKyAqIC0gQ2FzZSBpbnNlbnNpdGl2
ZQorICogLSBJZiBuYW1lIGVxdWFscyBhbmQgJ2JvdGhjYXNlcycgdGhlbgorICogLSBDYXNlIHNl
bnNpdGl2ZQogICogJ1N0cmFpZ3RoIHdheScgY29kZSBzY2FucyBpbnB1dCBuYW1lcyB0d2ljZSBp
biB3b3JzdCBjYXNlCiAgKiBPcHRpbWl6ZWQgY29kZSBzY2FucyBpbnB1dCBuYW1lcyBvbmx5IG9u
Y2UKICAqLwpkaWZmIC0tZ2l0IGEvZnMvbnRmczMveGF0dHIuYyBiL2ZzL250ZnMzL3hhdHRyLmMK
aW5kZXggNzU5ZGY1MDdjOTJjLi5hNDBmOGQ1MmI4MDUgMTAwNjQ0Ci0tLSBhL2ZzL250ZnMzL3hh
dHRyLmMKKysrIGIvZnMvbnRmczMveGF0dHIuYwpAQCAtNDEsNyArNDEsNyBAQCBzdGF0aWMgaW5s
aW5lIHNpemVfdCBwYWNrZWRfZWFfc2l6ZShjb25zdCBzdHJ1Y3QgRUFfRlVMTCAqZWEpCiAvKgog
ICogZmluZF9lYQogICoKLSAqIGFzc3VtZSB0aGVyZSBpcyBhdCBsZWFzdCBvbmUgeGF0dHIgaW4g
dGhlIGxpc3QKKyAqIEFzc3VtZSB0aGVyZSBpcyBhdCBsZWFzdCBvbmUgeGF0dHIgaW4gdGhlIGxp
c3QuCiAgKi8KIHN0YXRpYyBpbmxpbmUgYm9vbCBmaW5kX2VhKGNvbnN0IHN0cnVjdCBFQV9GVUxM
ICplYV9hbGwsIHUzMiBieXRlcywKIAkJCSAgIGNvbnN0IGNoYXIgKm5hbWUsIHU4IG5hbWVfbGVu
LCB1MzIgKm9mZikKQEAgLTY5LDExICs2OSw5IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBmaW5kX2Vh
KGNvbnN0IHN0cnVjdCBFQV9GVUxMICplYV9hbGwsIHUzMiBieXRlcywKIH0KCiAvKgotICogbnRm
c19yZWFkX2VhCi0gKgotICogcmVhZHMgYWxsIGV4dGVuZGVkIGF0dHJpYnV0ZXMKLSAqIGVhIC0g
bmV3IGFsbG9jYXRlZCBtZW1vcnkKLSAqIGluZm8gLSBwb2ludGVyIGludG8gcmVzaWRlbnQgZGF0
YQorICogbnRmc19yZWFkX2VhIC0gUmVhZCBhbGwgZXh0ZW5kZWQgYXR0cmlidXRlcy4KKyAqIEBl
YToJCU5ldyBhbGxvY2F0ZWQgbWVtb3J5LgorICogQGluZm86CVBvaW50ZXIgaW50byByZXNpZGVu
dCBkYXRhLgogICovCiBzdGF0aWMgaW50IG50ZnNfcmVhZF9lYShzdHJ1Y3QgbnRmc19pbm9kZSAq
bmksIHN0cnVjdCBFQV9GVUxMICoqZWEsCiAJCQlzaXplX3QgYWRkX2J5dGVzLCBjb25zdCBzdHJ1
Y3QgRUFfSU5GTyAqKmluZm8pCkBAIC0xMDEsNyArOTksNyBAQCBzdGF0aWMgaW50IG50ZnNfcmVh
ZF9lYShzdHJ1Y3QgbnRmc19pbm9kZSAqbmksIHN0cnVjdCBFQV9GVUxMICoqZWEsCiAJaWYgKCEq
aW5mbykKIAkJcmV0dXJuIC1FSU5WQUw7CgotCS8qIENoZWNrIEVhIGxpbWl0ICovCisJLyogQ2hl
Y2sgRWEgbGltaXQuICovCiAJc2l6ZSA9IGxlMzJfdG9fY3B1KCgqaW5mbyktPnNpemUpOwogCWlm
IChzaXplID4gbmktPm1pLnNiaS0+ZWFfbWF4X3NpemUpCiAJCXJldHVybiAtRUZCSUc7CkBAIC0x
MDksNyArMTA3LDcgQEAgc3RhdGljIGludCBudGZzX3JlYWRfZWEoc3RydWN0IG50ZnNfaW5vZGUg
Km5pLCBzdHJ1Y3QgRUFfRlVMTCAqKmVhLAogCWlmIChhdHRyX3NpemUoYXR0cl9lYSkgPiBuaS0+
bWkuc2JpLT5lYV9tYXhfc2l6ZSkKIAkJcmV0dXJuIC1FRkJJRzsKCi0JLyogQWxsb2NhdGUgbWVt
b3J5IGZvciBwYWNrZWQgRWEgKi8KKwkvKiBBbGxvY2F0ZSBtZW1vcnkgZm9yIHBhY2tlZCBFYS4g
Ki8KIAllYV9wID0gbnRmc19tYWxsb2Moc2l6ZSArIGFkZF9ieXRlcyk7CiAJaWYgKCFlYV9wKQog
CQlyZXR1cm4gLUVOT01FTTsKQEAgLTE1MCwxMSArMTQ4LDEyIEBAIHN0YXRpYyBpbnQgbnRmc19y
ZWFkX2VhKHN0cnVjdCBudGZzX2lub2RlICpuaSwgc3RydWN0IEVBX0ZVTEwgKiplYSwKIC8qCiAg
KiBudGZzX2xpc3RfZWEKICAqCi0gKiBjb3B5IGEgbGlzdCBvZiB4YXR0cnMgbmFtZXMgaW50byB0
aGUgYnVmZmVyCi0gKiBwcm92aWRlZCwgb3IgY29tcHV0ZSB0aGUgYnVmZmVyIHNpemUgcmVxdWly
ZWQKKyAqIENvcHkgYSBsaXN0IG9mIHhhdHRycyBuYW1lcyBpbnRvIHRoZSBidWZmZXIKKyAqIHBy
b3ZpZGVkLCBvciBjb21wdXRlIHRoZSBidWZmZXIgc2l6ZSByZXF1aXJlZC4KICAqCi0gKiBSZXR1
cm5zIGEgbmVnYXRpdmUgZXJyb3IgbnVtYmVyIG9uIGZhaWx1cmUsIG9yIHRoZSBudW1iZXIgb2Yg
Ynl0ZXMKLSAqIHVzZWQgLyByZXF1aXJlZCBvbiBzdWNjZXNzLgorICogUmV0dXJuOgorICogKiBO
dW1iZXIgb2YgYnl0ZXMgdXNlZCAvIHJlcXVpcmVkIG9uCisgKiAqIC1FUlJOTyAtIG9uIGZhaWx1
cmUKICAqLwogc3RhdGljIHNzaXplX3QgbnRmc19saXN0X2VhKHN0cnVjdCBudGZzX2lub2RlICpu
aSwgY2hhciAqYnVmZmVyLAogCQkJICAgIHNpemVfdCBieXRlc19wZXJfYnVmZmVyKQpAQCAtMTc1
LDcgKzE3NCw3IEBAIHN0YXRpYyBzc2l6ZV90IG50ZnNfbGlzdF9lYShzdHJ1Y3QgbnRmc19pbm9k
ZSAqbmksIGNoYXIgKmJ1ZmZlciwKCiAJc2l6ZSA9IGxlMzJfdG9fY3B1KGluZm8tPnNpemUpOwoK
LQkvKiBFbnVtZXJhdGUgYWxsIHhhdHRycyAqLworCS8qIEVudW1lcmF0ZSBhbGwgeGF0dHJzLiAq
LwogCWZvciAocmV0ID0gMCwgb2ZmID0gMDsgb2ZmIDwgc2l6ZTsgb2ZmICs9IHVucGFja2VkX2Vh
X3NpemUoZWEpKSB7CiAJCWVhID0gQWRkMlB0cihlYV9hbGwsIG9mZik7CgpAQCAtMjI3LDcgKzIy
Niw3IEBAIHN0YXRpYyBpbnQgbnRmc19nZXRfZWEoc3RydWN0IGlub2RlICppbm9kZSwgY29uc3Qg
Y2hhciAqbmFtZSwgc2l6ZV90IG5hbWVfbGVuLAogCWlmICghaW5mbykKIAkJZ290byBvdXQ7Cgot
CS8qIEVudW1lcmF0ZSBhbGwgeGF0dHJzICovCisJLyogRW51bWVyYXRlIGFsbCB4YXR0cnMuICov
CiAJaWYgKCFmaW5kX2VhKGVhX2FsbCwgbGUzMl90b19jcHUoaW5mby0+c2l6ZSksIG5hbWUsIG5h
bWVfbGVuLCAmb2ZmKSkgewogCQllcnIgPSAtRU5PREFUQTsKIAkJZ290byBvdXQ7CkBAIC0zMTQs
NyArMzEzLDcgQEAgc3RhdGljIG5vaW5saW5lIGludCBudGZzX3NldF9lYShzdHJ1Y3QgaW5vZGUg
Kmlub2RlLCBjb25zdCBjaGFyICpuYW1lLAogCQkJZ290byBvdXQ7CiAJCX0KCi0JCS8qIFJlbW92
ZSBjdXJyZW50IHhhdHRyICovCisJCS8qIFJlbW92ZSBjdXJyZW50IHhhdHRyLiAqLwogCQllYSA9
IEFkZDJQdHIoZWFfYWxsLCBvZmYpOwogCQlpZiAoZWEtPmZsYWdzICYgRklMRV9ORUVEX0VBKQog
CQkJbGUxNl9hZGRfY3B1KCZlYV9pbmZvLmNvdW50LCAtMSk7CkBAIC0zNDcsNyArMzQ2LDcgQEAg
c3RhdGljIG5vaW5saW5lIGludCBudGZzX3NldF9lYShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25z
dCBjaGFyICpuYW1lLAogCQl9CiAJfQoKLQkvKiBhcHBlbmQgbmV3IHhhdHRyICovCisJLyogQXBw
ZW5kIG5ldyB4YXR0ci4gKi8KIAluZXdfZWEgPSBBZGQyUHRyKGVhX2FsbCwgc2l6ZSk7CiAJbmV3
X2VhLT5zaXplID0gY3B1X3RvX2xlMzIoYWRkKTsKIAluZXdfZWEtPmZsYWdzID0gMDsKQEAgLTM1
OCwxNCArMzU3LDE0IEBAIHN0YXRpYyBub2lubGluZSBpbnQgbnRmc19zZXRfZWEoc3RydWN0IGlu
b2RlICppbm9kZSwgY29uc3QgY2hhciAqbmFtZSwKIAltZW1jcHkobmV3X2VhLT5uYW1lICsgbmFt
ZV9sZW4gKyAxLCB2YWx1ZSwgdmFsX3NpemUpOwogCW5ld19wYWNrID0gbGUxNl90b19jcHUoZWFf
aW5mby5zaXplX3BhY2spICsgcGFja2VkX2VhX3NpemUobmV3X2VhKTsKCi0JLyogc2hvdWxkIGZp
dCBpbnRvIDE2IGJpdHMgKi8KKwkvKiBTaG91bGQgZml0IGludG8gMTYgYml0cy4gKi8KIAlpZiAo
bmV3X3BhY2sgPiAweGZmZmYpIHsKIAkJZXJyID0gLUVGQklHOyAvLyAtRUlOVkFMPwogCQlnb3Rv
IG91dDsKIAl9CiAJZWFfaW5mby5zaXplX3BhY2sgPSBjcHVfdG9fbGUxNihuZXdfcGFjayk7Cgot
CS8qIG5ldyBzaXplIG9mIEFUVFJfRUEgKi8KKwkvKiBOZXcgc2l6ZSBvZiBBVFRSX0VBLiAqLwog
CXNpemUgKz0gYWRkOwogCWlmIChzaXplID4gc2JpLT5lYV9tYXhfc2l6ZSkgewogCQllcnIgPSAt
RUZCSUc7IC8vIC1FSU5WQUw/CkBAIC0zNzYsNyArMzc1LDcgQEAgc3RhdGljIG5vaW5saW5lIGlu
dCBudGZzX3NldF9lYShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCBjaGFyICpuYW1lLAogdXBk
YXRlX2VhOgoKIAlpZiAoIWluZm8pIHsKLQkJLyogQ3JlYXRlIHhhdHRyICovCisJCS8qIENyZWF0
ZSB4YXR0ci4gKi8KIAkJaWYgKCFzaXplKSB7CiAJCQllcnIgPSAwOwogCQkJZ290byBvdXQ7CkBA
IC00MDYsNyArNDA1LDcgQEAgc3RhdGljIG5vaW5saW5lIGludCBudGZzX3NldF9lYShzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBjb25zdCBjaGFyICpuYW1lLAogCX0KCiAJaWYgKCFzaXplKSB7Ci0JCS8q
IGRlbGV0ZSB4YXR0ciwgQVRUUl9FQV9JTkZPICovCisJCS8qIERlbGV0ZSB4YXR0ciwgQVRUUl9F
QV9JTkZPICovCiAJCWVyciA9IG5pX3JlbW92ZV9hdHRyX2xlKG5pLCBhdHRyLCBsZSk7CiAJCWlm
IChlcnIpCiAJCQlnb3RvIG91dDsKQEAgLTQyOCw3ICs0MjcsNyBAQCBzdGF0aWMgbm9pbmxpbmUg
aW50IG50ZnNfc2V0X2VhKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNvbnN0IGNoYXIgKm5hbWUsCiAJ
fQoKIAlpZiAoIXNpemUpIHsKLQkJLyogZGVsZXRlIHhhdHRyLCBBVFRSX0VBICovCisJCS8qIERl
bGV0ZSB4YXR0ciwgQVRUUl9FQSAqLwogCQllcnIgPSBuaV9yZW1vdmVfYXR0cl9sZShuaSwgYXR0
ciwgbGUpOwogCQlpZiAoZXJyKQogCQkJZ290byBvdXQ7CkBAIC00NDYsNyArNDQ1LDcgQEAgc3Rh
dGljIG5vaW5saW5lIGludCBudGZzX3NldF9lYShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCBj
aGFyICpuYW1lLAogCQltaS0+ZGlydHkgPSB0cnVlOwogCX0KCi0JLyogQ2hlY2sgaWYgd2UgZGVs
ZXRlIHRoZSBsYXN0IHhhdHRyICovCisJLyogQ2hlY2sgaWYgd2UgZGVsZXRlIHRoZSBsYXN0IHhh
dHRyLiAqLwogCWlmIChzaXplKQogCQluaS0+bmlfZmxhZ3MgfD0gTklfRkxBR19FQTsKIAllbHNl
CkBAIC00ODUsMTIgKzQ4NCwxMiBAQCBzdGF0aWMgc3RydWN0IHBvc2l4X2FjbCAqbnRmc19nZXRf
YWNsX2V4KHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKIAlpbnQgZXJyOwogCXZv
aWQgKmJ1ZjsKCi0JLyogYWxsb2NhdGUgUEFUSF9NQVggYnl0ZXMgKi8KKwkvKiBBbGxvY2F0ZSBQ
QVRIX01BWCBieXRlcy4gKi8KIAlidWYgPSBfX2dldG5hbWUoKTsKIAlpZiAoIWJ1ZikKIAkJcmV0
dXJuIEVSUl9QVFIoLUVOT01FTSk7CgotCS8qIFBvc3NpYmxlIHZhbHVlcyBvZiAndHlwZScgd2Fz
IGFscmVhZHkgY2hlY2tlZCBhYm92ZSAqLworCS8qIFBvc3NpYmxlIHZhbHVlcyBvZiAndHlwZScg
d2FzIGFscmVhZHkgY2hlY2tlZCBhYm92ZS4gKi8KIAlpZiAodHlwZSA9PSBBQ0xfVFlQRV9BQ0NF
U1MpIHsKIAkJbmFtZSA9IFhBVFRSX05BTUVfUE9TSVhfQUNMX0FDQ0VTUzsKIAkJbmFtZV9sZW4g
PSBzaXplb2YoWEFUVFJfTkFNRV9QT1NJWF9BQ0xfQUNDRVNTKSAtIDE7CkBAIC01MDcsNyArNTA2
LDcgQEAgc3RhdGljIHN0cnVjdCBwb3NpeF9hY2wgKm50ZnNfZ2V0X2FjbF9leChzdHJ1Y3QgdXNl
cl9uYW1lc3BhY2UgKm1udF91c2VybnMsCiAJaWYgKCFsb2NrZWQpCiAJCW5pX3VubG9jayhuaSk7
CgotCS8qIFRyYW5zbGF0ZSBleHRlbmRlZCBhdHRyaWJ1dGUgdG8gYWNsICovCisJLyogVHJhbnNs
YXRlIGV4dGVuZGVkIGF0dHJpYnV0ZSB0byBhY2wuICovCiAJaWYgKGVyciA+IDApIHsKIAkJYWNs
ID0gcG9zaXhfYWNsX2Zyb21feGF0dHIobW50X3VzZXJucywgYnVmLCBlcnIpOwogCQlpZiAoIUlT
X0VSUihhY2wpKQpAQCAtNTIyLDkgKzUyMSw3IEBAIHN0YXRpYyBzdHJ1Y3QgcG9zaXhfYWNsICpu
dGZzX2dldF9hY2xfZXgoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLAogfQoKIC8q
Ci0gKiBudGZzX2dldF9hY2wKLSAqCi0gKiBpbm9kZV9vcGVyYXRpb25zOjpnZXRfYWNsCisgKiBu
dGZzX2dldF9hY2wgLSBpbm9kZV9vcGVyYXRpb25zOjpnZXRfYWNsCiAgKi8KIHN0cnVjdCBwb3Np
eF9hY2wgKm50ZnNfZ2V0X2FjbChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBpbnQgdHlwZSkKIHsKQEAg
LTU2MCw4ICs1NTcsOCBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfc2V0X2FjbF9leChzdHJ1
Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsCgogCQkJaWYgKCFlcnIpIHsKIAkJCQkvKgot
CQkJCSAqIGFjbCBjYW4gYmUgZXhhY3RseSByZXByZXNlbnRlZCBpbiB0aGUKLQkJCQkgKiB0cmFk
aXRpb25hbCBmaWxlIG1vZGUgcGVybWlzc2lvbiBiaXRzCisJCQkJICogQUNMIGNhbiBiZSBleGFj
dGx5IHJlcHJlc2VudGVkIGluIHRoZQorCQkJCSAqIHRyYWRpdGlvbmFsIGZpbGUgbW9kZSBwZXJt
aXNzaW9uIGJpdHMuCiAJCQkJICovCiAJCQkJYWNsID0gTlVMTDsKIAkJCQlnb3RvIG91dDsKQEAg
LTYxMCw5ICs2MDcsNyBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfc2V0X2FjbF9leChzdHJ1
Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsCiB9CgogLyoKLSAqIG50ZnNfc2V0X2FjbAot
ICoKLSAqIGlub2RlX29wZXJhdGlvbnM6OnNldF9hY2wKKyAqIG50ZnNfc2V0X2FjbCAtIGlub2Rl
X29wZXJhdGlvbnM6OnNldF9hY2wKICAqLwogaW50IG50ZnNfc2V0X2FjbChzdHJ1Y3QgdXNlcl9u
YW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCSBzdHJ1Y3QgcG9z
aXhfYWNsICphY2wsIGludCB0eXBlKQpAQCAtNjc3LDcgKzY3Miw5IEBAIHN0YXRpYyBpbnQgbnRm
c194YXR0cl9zZXRfYWNsKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKIH0KCiAv
KgotICogSW5pdGlhbGl6ZSB0aGUgQUNMcyBvZiBhIG5ldyBpbm9kZS4gQ2FsbGVkIGZyb20gbnRm
c19jcmVhdGVfaW5vZGUuCisgKiBudGZzX2luaXRfYWNsIC0gSW5pdGlhbGl6ZSB0aGUgQUNMcyBv
ZiBhIG5ldyBpbm9kZS4KKyAqCisgKiBDYWxsZWQgZnJvbSBudGZzX2NyZWF0ZV9pbm9kZSgpLgog
ICovCiBpbnQgbnRmc19pbml0X2FjbChzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMs
IHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCSAgc3RydWN0IGlub2RlICpkaXIpCkBAIC02ODYsNyAr
NjgzLDcgQEAgaW50IG50ZnNfaW5pdF9hY2woc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNl
cm5zLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLAogCWludCBlcnI7CgogCS8qCi0JICogVE9ETyByZWZh
Y3RvcmluZyBsb2NrCisJICogVE9ETzogUmVmYWN0b3JpbmcgbG9jay4KIAkgKiBuaV9sb2NrKGRp
cikgLi4uIC0+IHBvc2l4X2FjbF9jcmVhdGUoZGlyLC4uLikgLT4gbnRmc19nZXRfYWNsIC0+IG5p
X2xvY2soZGlyKQogCSAqLwogCWlub2RlLT5pX2RlZmF1bHRfYWNsID0gTlVMTDsKQEAgLTczOCw5
ICs3MzUsNyBAQCBpbnQgbnRmc19pbml0X2FjbChzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91
c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAjZW5kaWYKCiAvKgotICogbnRmc19hY2xfY2ht
b2QKLSAqCi0gKiBoZWxwZXIgZm9yICdudGZzM19zZXRhdHRyJworICogbnRmc19hY2xfY2htb2Qg
LSBIZWxwZXIgZm9yIG50ZnMzX3NldGF0dHIoKS4KICAqLwogaW50IG50ZnNfYWNsX2NobW9kKHN0
cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICppbm9kZSkKIHsK
QEAgLTc1NiwxNSArNzUxLDEzIEBAIGludCBudGZzX2FjbF9jaG1vZChzdHJ1Y3QgdXNlcl9uYW1l
c3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUpCiB9CgogLyoKLSAqIG50ZnNf
cGVybWlzc2lvbgotICoKLSAqIGlub2RlX29wZXJhdGlvbnM6OnBlcm1pc3Npb24KKyAqIG50ZnNf
cGVybWlzc2lvbiAtIGlub2RlX29wZXJhdGlvbnM6OnBlcm1pc3Npb24KICAqLwogaW50IG50ZnNf
cGVybWlzc2lvbihzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9k
ZSAqaW5vZGUsCiAJCSAgICBpbnQgbWFzaykKIHsKIAlpZiAobnRmc19zYihpbm9kZS0+aV9zYikt
Pm9wdGlvbnMubm9fYWNzX3J1bGVzKSB7Ci0JCS8qICJubyBhY2Nlc3MgcnVsZXMiIG1vZGUgLSBh
bGxvdyBhbGwgY2hhbmdlcyAqLworCQkvKiAiTm8gYWNjZXNzIHJ1bGVzIiBtb2RlIC0gQWxsb3cg
YWxsIGNoYW5nZXMuICovCiAJCXJldHVybiAwOwogCX0KCkBAIC03NzIsOSArNzY1LDcgQEAgaW50
IG50ZnNfcGVybWlzc2lvbihzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVj
dCBpbm9kZSAqaW5vZGUsCiB9CgogLyoKLSAqIG50ZnNfbGlzdHhhdHRyCi0gKgotICogaW5vZGVf
b3BlcmF0aW9uczo6bGlzdHhhdHRyCisgKiBudGZzX2xpc3R4YXR0ciAtIGlub2RlX29wZXJhdGlv
bnM6Omxpc3R4YXR0cgogICovCiBzc2l6ZV90IG50ZnNfbGlzdHhhdHRyKHN0cnVjdCBkZW50cnkg
KmRlbnRyeSwgY2hhciAqYnVmZmVyLCBzaXplX3Qgc2l6ZSkKIHsKQEAgLTgwNCw3ICs3OTUsNyBA
QCBzdGF0aWMgaW50IG50ZnNfZ2V0eGF0dHIoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhh
bmRsZXIsIHN0cnVjdCBkZW50cnkgKmRlLAogCXN0cnVjdCBudGZzX2lub2RlICpuaSA9IG50ZnNf
aShpbm9kZSk7CiAJc2l6ZV90IG5hbWVfbGVuID0gc3RybGVuKG5hbWUpOwoKLQkvKiBEaXNwYXRj
aCByZXF1ZXN0ICovCisJLyogRGlzcGF0Y2ggcmVxdWVzdC4gKi8KIAlpZiAobmFtZV9sZW4gPT0g
c2l6ZW9mKFNZU1RFTV9ET1NfQVRUUklCKSAtIDEgJiYKIAkgICAgIW1lbWNtcChuYW1lLCBTWVNU
RU1fRE9TX0FUVFJJQiwgc2l6ZW9mKFNZU1RFTV9ET1NfQVRUUklCKSkpIHsKIAkJLyogc3lzdGVt
LmRvc19hdHRyaWIgKi8KQEAgLTg0MCw3ICs4MzEsNyBAQCBzdGF0aWMgaW50IG50ZnNfZ2V0eGF0
dHIoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsIHN0cnVjdCBkZW50cnkgKmRl
LAogCQlzaXplX3Qgc2Rfc2l6ZSA9IDA7CgogCQlpZiAoIWlzX250ZnMzKG5pLT5taS5zYmkpKSB7
Ci0JCQkvKiB3ZSBzaG91bGQgZ2V0IG50NCBzZWN1cml0eSAqLworCQkJLyogV2Ugc2hvdWxkIGdl
dCBudDQgc2VjdXJpdHkuICovCiAJCQllcnIgPSAtRUlOVkFMOwogCQkJZ290byBvdXQ7CiAJCX0g
ZWxzZSBpZiAobGUzMl90b19jcHUobmktPnN0ZF9zZWN1cml0eV9pZCkgPApAQCAtODkwLDcgKzg4
MSw3IEBAIHN0YXRpYyBpbnQgbnRmc19nZXR4YXR0cihjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxl
ciAqaGFuZGxlciwgc3RydWN0IGRlbnRyeSAqZGUsCiAJCWdvdG8gb3V0OwogCX0KICNlbmRpZgot
CS8qIGRlYWwgd2l0aCBudGZzIGV4dGVuZGVkIGF0dHJpYnV0ZSAqLworCS8qIERlYWwgd2l0aCBO
VEZTIGV4dGVuZGVkIGF0dHJpYnV0ZS4gKi8KIAllcnIgPSBudGZzX2dldF9lYShpbm9kZSwgbmFt
ZSwgbmFtZV9sZW4sIGJ1ZmZlciwgc2l6ZSwgTlVMTCk7Cgogb3V0OgpAQCAtODk4LDkgKzg4OSw3
IEBAIHN0YXRpYyBpbnQgbnRmc19nZXR4YXR0cihjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAq
aGFuZGxlciwgc3RydWN0IGRlbnRyeSAqZGUsCiB9CgogLyoKLSAqIG50ZnNfc2V0eGF0dHIKLSAq
Ci0gKiBpbm9kZV9vcGVyYXRpb25zOjpzZXR4YXR0cgorICogbnRmc19zZXR4YXR0ciAtIGlub2Rl
X29wZXJhdGlvbnM6OnNldHhhdHRyCiAgKi8KIHN0YXRpYyBub2lubGluZSBpbnQgbnRmc19zZXR4
YXR0cihjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciwKIAkJCQkgIHN0cnVjdCB1
c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywKQEAgLTkxMyw3ICs5MDIsNyBAQCBzdGF0aWMgbm9p
bmxpbmUgaW50IG50ZnNfc2V0eGF0dHIoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRs
ZXIsCiAJc2l6ZV90IG5hbWVfbGVuID0gc3RybGVuKG5hbWUpOwogCWVudW0gRklMRV9BVFRSSUJV
VEUgbmV3X2ZhOwoKLQkvKiBEaXNwYXRjaCByZXF1ZXN0ICovCisJLyogRGlzcGF0Y2ggcmVxdWVz
dC4gKi8KIAlpZiAobmFtZV9sZW4gPT0gc2l6ZW9mKFNZU1RFTV9ET1NfQVRUUklCKSAtIDEgJiYK
IAkgICAgIW1lbWNtcChuYW1lLCBTWVNURU1fRE9TX0FUVFJJQiwgc2l6ZW9mKFNZU1RFTV9ET1Nf
QVRUUklCKSkpIHsKIAkJaWYgKHNpemVvZih1OCkgIT0gc2l6ZSkKQEAgLTkyOSw3ICs5MTgsNyBA
QCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfc2V0eGF0dHIoY29uc3Qgc3RydWN0IHhhdHRyX2hh
bmRsZXIgKmhhbmRsZXIsCiAJCW5ld19mYSA9IGNwdV90b19sZTMyKCoodTMyICopdmFsdWUpOwoK
IAkJaWYgKFNfSVNSRUcoaW5vZGUtPmlfbW9kZSkpIHsKLQkJCS8qIFByb2Nlc3MgY29tcHJlc3Nl
ZC9zcGFyc2VkIGluIHNwZWNpYWwgd2F5Ki8KKwkJCS8qIFByb2Nlc3MgY29tcHJlc3NlZC9zcGFy
c2VkIGluIHNwZWNpYWwgd2F5LiAqLwogCQkJbmlfbG9jayhuaSk7CiAJCQllcnIgPSBuaV9uZXdf
YXR0cl9mbGFncyhuaSwgbmV3X2ZhKTsKIAkJCW5pX3VubG9jayhuaSk7CkBAIC05MzksNyArOTI4
LDcgQEAgc3RhdGljIG5vaW5saW5lIGludCBudGZzX3NldHhhdHRyKGNvbnN0IHN0cnVjdCB4YXR0
cl9oYW5kbGVyICpoYW5kbGVyLAogc2V0X25ld19mYToKIAkJLyoKIAkJICogVGhhbmtzIE1hcmsg
SGFybXN0b25lOgotCQkgKiBrZWVwIGRpcmVjdG9yeSBiaXQgY29uc2lzdGVuY3kKKwkJICogS2Vl
cCBkaXJlY3RvcnkgYml0IGNvbnNpc3RlbmN5LgogCQkgKi8KIAkJaWYgKFNfSVNESVIoaW5vZGUt
PmlfbW9kZSkpCiAJCQluZXdfZmEgfD0gRklMRV9BVFRSSUJVVEVfRElSRUNUT1JZOwpAQCAtOTUy
LDcgKzk0MSw3IEBAIHN0YXRpYyBub2lubGluZSBpbnQgbnRmc19zZXR4YXR0cihjb25zdCBzdHJ1
Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciwKIAkJCQlpbm9kZS0+aV9tb2RlICY9IH4wMjIyOwog
CQkJZWxzZQogCQkJCWlub2RlLT5pX21vZGUgfD0gMDIyMjsKLQkJCS8qIHN0ZCBhdHRyaWJ1dGUg
YWx3YXlzIGluIHByaW1hcnkgcmVjb3JkICovCisJCQkvKiBTdGQgYXR0cmlidXRlIGFsd2F5cyBp
biBwcmltYXJ5IHJlY29yZC4gKi8KIAkJCW5pLT5taS5kaXJ0eSA9IHRydWU7CiAJCQltYXJrX2lu
b2RlX2RpcnR5KGlub2RlKTsKIAkJfQpAQCAtOTcwLDggKzk1OSw4IEBAIHN0YXRpYyBub2lubGlu
ZSBpbnQgbnRmc19zZXR4YXR0cihjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciwK
CiAJCWlmICghaXNfbnRmczMobmktPm1pLnNiaSkpIHsKIAkJCS8qCi0JCQkgKiB3ZSBzaG91bGQg
cmVwbGFjZSBBVFRSX1NFQ1VSRQotCQkJICogU2tpcCB0aGlzIHdheSBjYXVzZSBpdCBpcyBudDQg
ZmVhdHVyZQorCQkJICogV2Ugc2hvdWxkIHJlcGxhY2UgQVRUUl9TRUNVUkUuCisJCQkgKiBTa2lw
IHRoaXMgd2F5IGNhdXNlIGl0IGlzIG50NCBmZWF0dXJlLgogCQkJICovCiAJCQllcnIgPSAtRUlO
VkFMOwogCQkJZ290byBvdXQ7CkBAIC05OTYsNyArOTg1LDcgQEAgc3RhdGljIG5vaW5saW5lIGlu
dCBudGZzX3NldHhhdHRyKGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCQkJ
ZXJyID0gLUVJTlZBTDsKIAkJfSBlbHNlIGlmIChzdGQtPnNlY3VyaXR5X2lkICE9IHNlY3VyaXR5
X2lkKSB7CiAJCQlzdGQtPnNlY3VyaXR5X2lkID0gbmktPnN0ZF9zZWN1cml0eV9pZCA9IHNlY3Vy
aXR5X2lkOwotCQkJLyogc3RkIGF0dHJpYnV0ZSBhbHdheXMgaW4gcHJpbWFyeSByZWNvcmQgKi8K
KwkJCS8qIFN0ZCBhdHRyaWJ1dGUgYWx3YXlzIGluIHByaW1hcnkgcmVjb3JkLiAqLwogCQkJbmkt
Pm1pLmRpcnR5ID0gdHJ1ZTsKIAkJCW1hcmtfaW5vZGVfZGlydHkoJm5pLT52ZnNfaW5vZGUpOwog
CQl9CkBAIC0xMDIxLDcgKzEwMTAsNyBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IG50ZnNfc2V0eGF0
dHIoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsCiAJCWdvdG8gb3V0OwogCX0K
ICNlbmRpZgotCS8qIGRlYWwgd2l0aCBudGZzIGV4dGVuZGVkIGF0dHJpYnV0ZSAqLworCS8qIERl
YWwgd2l0aCBOVEZTIGV4dGVuZGVkIGF0dHJpYnV0ZS4gKi8KIAllcnIgPSBudGZzX3NldF9lYShp
bm9kZSwgbmFtZSwgbmFtZV9sZW4sIHZhbHVlLCBzaXplLCBmbGFncywgMCk7Cgogb3V0OgotLQoy
LjI1LjEKCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
TGludXgtTlRGUy1EZXYgbWFpbGluZyBsaXN0CkxpbnV4LU5URlMtRGV2QGxpc3RzLnNvdXJjZWZv
cmdlLm5ldApodHRwczovL2xpc3RzLnNvdXJjZWZvcmdlLm5ldC9saXN0cy9saXN0aW5mby9saW51
eC1udGZzLWRldgo=
