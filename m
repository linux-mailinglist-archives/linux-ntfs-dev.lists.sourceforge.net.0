Return-Path: <linux-ntfs-dev-bounces@lists.sourceforge.net>
X-Original-To: lists+linux-ntfs-dev@lfdr.de
Delivered-To: lists+linux-ntfs-dev@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id 1571A6564F8
	for <lists+linux-ntfs-dev@lfdr.de>; Mon, 26 Dec 2022 21:37:09 +0100 (CET)
Received: from [127.0.0.1] (helo=sfs-ml-4.v29.lw.sourceforge.com)
	by sfs-ml-4.v29.lw.sourceforge.com with esmtp (Exim 4.95)
	(envelope-from <linux-ntfs-dev-bounces@lists.sourceforge.net>)
	id 1p9uDb-0004vh-A9;
	Mon, 26 Dec 2022 20:37:07 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-1.v29.lw.sourceforge.com with esmtps (TLS1.2) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <pali@kernel.org>) id 1p9oMv-00036S-8W;
 Mon, 26 Dec 2022 14:22:21 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=Content-Transfer-Encoding:Content-Type:MIME-Version
 :References:In-Reply-To:Message-Id:Date:Subject:To:From:Sender:Reply-To:Cc:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=STz6tu8sQBqbB/qMacyBAxgYCovYcl+zbYl5FoNDI9c=; b=Xgxx2uHt5SI5wxaclVHJMRv6Ch
 yDAyC1DZAnZUaIn9LrmfQW/ETdjpUyuE/7PXxeavjmY+u+w666FYqF17bEsZsz85uS33z+rL3EiTW
 /cyVpT9ZkneuMHPh5LF9XlENbEhVuAmf3G80MR2iRhC6WtWiLI9U6dHZ9vFkrpO5dUIg=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:
 In-Reply-To:Message-Id:Date:Subject:To:From:Sender:Reply-To:Cc:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:List-Subscribe:
 List-Post:List-Owner:List-Archive;
 bh=STz6tu8sQBqbB/qMacyBAxgYCovYcl+zbYl5FoNDI9c=; b=jGm0bkbmncw7a4zyRl3MstKKxQ
 UyQ3gg/jatl+mMjOsfc9B3piKkh3kFOIFjl3xGzofmgZeS3nsdJ7unnQiD49sI5KlmvKHUG2iK5xG
 xeQt0THs7kUUfSAedAlNC78JxUQnelkAsHQPre451ht8gPk6TeXVdAmKCnIVbydBqQB8=;
Received: from dfw.source.kernel.org ([139.178.84.217])
 by sfi-mx-1.v28.lw.sourceforge.com with esmtps
 (TLS1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.95)
 id 1p9oMu-00DHhh-FX; Mon, 26 Dec 2022 14:22:21 +0000
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id 5542560ECC;
 Mon, 26 Dec 2022 14:22:20 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 6962AC433F1;
 Mon, 26 Dec 2022 14:22:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1672064539;
 bh=C9hpYs5SfjcSEusd2O4PwIN/sol9PZlsNg0ce4muq9s=;
 h=From:To:Subject:Date:In-Reply-To:References:From;
 b=qrZ66dr2mYGyXJ9dpyMUaNCLPxhIlaRWjTHgoAyF1lEmGiF1AJYUsM6NaZqbcFx2w
 7iJMyDNL/grtQhmS59x3ND4/dpiaBtDMPKoUeARpwTTtB+ETaTFN6aUqWUaRIkquw7
 zwzqy4o+GgFBqFSjIvRCajWdCSfZ/+GpzuXo87Wg7Du+iwhe13CvkF0e6y48ueZ+sX
 R+b8cGcvZ1ZCJ6xt0gJb3iQmQLGKMtdgSdeI5Lfmnd4qAICxRaRCEfPDiR7l4tM6ld
 jYyBH2ygLjy5X7Xv7yQ5/HV9Q3trWHLryksVqYLDC9OOk3D15QtkxcsZ0UwoqstCk8
 5JpDY7kEq+b1w==
Received: by pali.im (Postfix)
 id 251389D7; Mon, 26 Dec 2022 15:22:19 +0100 (CET)
From: =?UTF-8?q?Pali=20Roh=C3=A1r?= <pali@kernel.org>
To: linux-fsdevel@vger.kernel.org, linux-ntfs-dev@lists.sourceforge.net,
 linux-cifs@vger.kernel.org, jfs-discussion@lists.sourceforge.net,
 linux-kernel@vger.kernel.org, Alexander Viro <viro@zeniv.linux.org.uk>,
 Jan Kara <jack@suse.cz>, "Theodore Y . Ts'o" <tytso@mit.edu>,
 Anton Altaparmakov <anton@tuxera.com>,
 OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>,
 Luis de Bethencourt <luisbg@kernel.org>,
 Salah Triki <salah.triki@gmail.com>, Steve French <sfrench@samba.org>,
 Paulo Alcantara <pc@cjr.nz>, Ronnie Sahlberg <lsahlber@redhat.com>,
 Shyam Prasad N <sprasad@microsoft.com>, Tom Talpey <tom@talpey.com>,
 Dave Kleikamp <shaggy@kernel.org>,
 Andrew Morton <akpm@linux-foundation.org>, Pavel Machek <pavel@ucw.cz>,
 Christoph Hellwig <hch@infradead.org>,
 Kari Argillander <kari.argillander@gmail.com>,
 Viacheslav Dubeyko <slava@dubeyko.com>
Date: Mon, 26 Dec 2022 15:21:49 +0100
Message-Id: <20221226142150.13324-18-pali@kernel.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20221226142150.13324-1-pali@kernel.org>
References: <20221226142150.13324-1-pali@kernel.org>
MIME-Version: 1.0
X-Spam-Score: -5.2 (-----)
X-Spam-Report: Spam detection software,
 running on the system "util-spamd-2.v13.lw.sourceforge.com", 
 has NOT identified this incoming email as spam.  The original
 message has been attached to this so you can view it or label
 similar future email.  If you have any questions, see
 the administrator of that system for details.
 Content preview: cifs functions will use UTF-8 encoding when nls_table is set
 to NULL. So there is no need to load "dummy" NLS table for some operations.
 On few places in dfs_cache replace utf8 nls by utf8_to_utf32() function which
 converts UTF-8 sequence to unicode code points (stored as type unicode_t).
 This should fix handling of (UTF-16) CIFS paths [...] 
 Content analysis details:   (-5.2 points, 6.0 required)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -5.0 RCVD_IN_DNSWL_HI       RBL: Sender listed at https://www.dnswl.org/,
 high trust [139.178.84.217 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.0 DKIMWL_WL_HIGH         DKIMwl.org - High trust sender
X-Headers-End: 1p9oMu-00DHhh-FX
X-Mailman-Approved-At: Mon, 26 Dec 2022 20:37:02 +0000
Subject: [Linux-NTFS-Dev] [RFC PATCH v2 17/18] cifs: Remove usage of
 load_nls_default() calls
X-BeenThere: linux-ntfs-dev@lists.sourceforge.net
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: "Discussion related to Linux NTFS development."
 <linux-ntfs-dev.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=linux-ntfs-dev>
List-Post: <mailto:linux-ntfs-dev@lists.sourceforge.net>
List-Help: <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/linux-ntfs-dev>, 
 <mailto:linux-ntfs-dev-request@lists.sourceforge.net?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-ntfs-dev-bounces@lists.sourceforge.net

Y2lmcyBmdW5jdGlvbnMgd2lsbCB1c2UgVVRGLTggZW5jb2Rpbmcgd2hlbiBubHNfdGFibGUgaXMg
c2V0IHRvIE5VTEwuIFNvCnRoZXJlIGlzIG5vIG5lZWQgdG8gbG9hZCAiZHVtbXkiIE5MUyB0YWJs
ZSBmb3Igc29tZSBvcGVyYXRpb25zLgoKT24gZmV3IHBsYWNlcyBpbiBkZnNfY2FjaGUgcmVwbGFj
ZSB1dGY4IG5scyBieSB1dGY4X3RvX3V0ZjMyKCkgZnVuY3Rpb24Kd2hpY2ggY29udmVydHMgVVRG
LTggc2VxdWVuY2UgdG8gdW5pY29kZSBjb2RlIHBvaW50cyAoc3RvcmVkIGFzIHR5cGUKdW5pY29k
ZV90KS4gVGhpcyBzaG91bGQgZml4IGhhbmRsaW5nIG9mIChVVEYtMTYpIENJRlMgcGF0aHMgd2l0
aCBVVEYtMTYKc3Vycm9nYXJlIHBhaXJzLCB3aGljaCB1dGY4IG5scyBtb2R1bGUgY2Fubm90IGhh
bmRsZS4KClNpZ25lZC1vZmYtYnk6IFBhbGkgUm9ow6FyIDxwYWxpQGtlcm5lbC5vcmc+Ci0tLQog
ZnMvY2lmcy9jaWZzc21iLmMgICB8ICA4ICsrLS0tLS0tCiBmcy9jaWZzL2Rmc19jYWNoZS5jIHwg
MjQgKysrKysrKystLS0tLS0tLS0tLS0tLS0tCiBmcy9jaWZzL3NtYjJwZHUuYyAgIHwgMTggKysr
Ky0tLS0tLS0tLS0tLS0tCiAzIGZpbGVzIGNoYW5nZWQsIDE0IGluc2VydGlvbnMoKyksIDM2IGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc3NtYi5jIGIvZnMvY2lmcy9jaWZz
c21iLmMKaW5kZXggMjNmMTBlMGQ2ZTdlLi4zZGI4ODJmZGMyMWQgMTAwNjQ0Ci0tLSBhL2ZzL2Np
ZnMvY2lmc3NtYi5jCisrKyBiL2ZzL2NpZnMvY2lmc3NtYi5jCkBAIC02OSw3ICs2OSw2IEBAIGNp
ZnNfcmVjb25uZWN0X3Rjb24oc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwgaW50IHNtYl9jb21tYW5k
KQogCWludCByYzsKIAlzdHJ1Y3QgY2lmc19zZXMgKnNlczsKIAlzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXI7Ci0Jc3RydWN0IG5sc190YWJsZSAqbmxzX2NvZGVwYWdlOwogCWludCByZXRy
aWVzOwogCiAJLyoKQEAgLTE0Nyw4ICsxNDYsNiBAQCBjaWZzX3JlY29ubmVjdF90Y29uKHN0cnVj
dCBjaWZzX3Rjb24gKnRjb24sIGludCBzbWJfY29tbWFuZCkKIAl9CiAJc3Bpbl91bmxvY2soJnNl
cy0+Y2hhbl9sb2NrKTsKIAotCW5sc19jb2RlcGFnZSA9IGxvYWRfbmxzX2RlZmF1bHQoKTsKLQog
CS8qCiAJICogUmVjaGVjayBhZnRlciBhY3F1aXJlIG11dGV4LiBJZiBhbm90aGVyIHRocmVhZCBp
cyBuZWdvdGlhdGluZwogCSAqIGFuZCB0aGUgc2VydmVyIG5ldmVyIHNlbmRzIGFuIGFuc3dlciB0
aGUgc29ja2V0IHdpbGwgYmUgY2xvc2VkCkBAIC0xODIsNyArMTc5LDcgQEAgY2lmc19yZWNvbm5l
Y3RfdGNvbihzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBpbnQgc21iX2NvbW1hbmQpCiAJbXV0ZXhf
bG9jaygmc2VzLT5zZXNzaW9uX211dGV4KTsKIAlyYyA9IGNpZnNfbmVnb3RpYXRlX3Byb3RvY29s
KDAsIHNlcywgc2VydmVyKTsKIAlpZiAoIXJjKQotCQlyYyA9IGNpZnNfc2V0dXBfc2Vzc2lvbigw
LCBzZXMsIHNlcnZlciwgbmxzX2NvZGVwYWdlKTsKKwkJcmMgPSBjaWZzX3NldHVwX3Nlc3Npb24o
MCwgc2VzLCBzZXJ2ZXIsIE5VTEwpOwogCiAJLyogZG8gd2UgbmVlZCB0byByZWNvbm5lY3QgdGNv
bj8gKi8KIAlpZiAocmMgfHwgIXRjb24tPm5lZWRfcmVjb25uZWN0KSB7CkBAIC0xOTIsNyArMTg5
LDcgQEAgY2lmc19yZWNvbm5lY3RfdGNvbihzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBpbnQgc21i
X2NvbW1hbmQpCiAKIHNraXBfc2Vzc19zZXR1cDoKIAljaWZzX21hcmtfb3Blbl9maWxlc19pbnZh
bGlkKHRjb24pOwotCXJjID0gY2lmc190cmVlX2Nvbm5lY3QoMCwgdGNvbiwgbmxzX2NvZGVwYWdl
KTsKKwlyYyA9IGNpZnNfdHJlZV9jb25uZWN0KDAsIHRjb24sIE5VTEwpOwogCW11dGV4X3VubG9j
aygmc2VzLT5zZXNzaW9uX211dGV4KTsKIAljaWZzX2RiZyhGWUksICJyZWNvbm5lY3QgdGNvbiBy
YyA9ICVkXG4iLCByYyk7CiAKQEAgLTIyOCw3ICsyMjUsNiBAQCBjaWZzX3JlY29ubmVjdF90Y29u
KHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIGludCBzbWJfY29tbWFuZCkKIAkJcmMgPSAtRUFHQUlO
OwogCX0KIAotCXVubG9hZF9ubHMobmxzX2NvZGVwYWdlKTsKIAlyZXR1cm4gcmM7CiB9CiAKZGlm
ZiAtLWdpdCBhL2ZzL2NpZnMvZGZzX2NhY2hlLmMgYi9mcy9jaWZzL2Rmc19jYWNoZS5jCmluZGV4
IDQzYWQxMTc2ZGNiOS4uNDc5NGYyY2Y3MjFhIDEwMDY0NAotLS0gYS9mcy9jaWZzL2Rmc19jYWNo
ZS5jCisrKyBiL2ZzL2NpZnMvZGZzX2NhY2hlLmMKQEAgLTY2LDggKzY2LDYgQEAgc3RhdGljIHN0
cnVjdCB3b3JrcXVldWVfc3RydWN0ICpkZnNjYWNoZV93cSBfX3JlYWRfbW9zdGx5Owogc3RhdGlj
IGludCBjYWNoZV90dGw7CiBzdGF0aWMgREVGSU5FX1NQSU5MT0NLKGNhY2hlX3R0bF9sb2NrKTsK
IAotc3RhdGljIHN0cnVjdCBubHNfdGFibGUgKmNhY2hlX2NwOwotCiAvKgogICogTnVtYmVyIG9m
IGVudHJpZXMgaW4gdGhlIGNhY2hlCiAgKi8KQEAgLTE3MywxNCArMTcxLDE0IEBAIGNoYXIgKmRm
c19jYWNoZV9jYW5vbmljYWxfcGF0aChjb25zdCBjaGFyICpwYXRoLCBjb25zdCBzdHJ1Y3Qgbmxz
X3RhYmxlICpjcCwgaW50CiAJaWYgKCFwYXRoIHx8IHN0cmxlbihwYXRoKSA8IDMgfHwgKCpwYXRo
ICE9ICdcXCcgJiYgKnBhdGggIT0gJy8nKSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CiAK
LQlpZiAodW5saWtlbHkoc3RyY21wKGNwLT5jaGFyc2V0LCBjYWNoZV9jcC0+Y2hhcnNldCkpKSB7
CisJaWYgKHVubGlrZWx5KGNwKSkgewogCQl0bXAgPSAoY2hhciAqKWNpZnNfc3RybmR1cF90b191
dGYxNihwYXRoLCBzdHJsZW4ocGF0aCksICZwbGVuLCBjcCwgcmVtYXApOwogCQlpZiAoIXRtcCkg
ewogCQkJY2lmc19kYmcoVkZTLCAiJXM6IGZhaWxlZCB0byBjb252ZXJ0IHBhdGggdG8gdXRmMTZc
biIsIF9fZnVuY19fKTsKIAkJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwogCQl9CiAKLQkJbnBh
dGggPSBjaWZzX3N0cm5kdXBfZnJvbV91dGYxNih0bXAsIHBsZW4sIHRydWUsIGNhY2hlX2NwKTsK
KwkJbnBhdGggPSBjaWZzX3N0cm5kdXBfZnJvbV91dGYxNih0bXAsIHBsZW4sIHRydWUsIE5VTEwp
OwogCQlrZnJlZSh0bXApOwogCiAJCWlmICghbnBhdGgpIHsKQEAgLTM5Miw5ICszOTAsNiBAQCBp
bnQgZGZzX2NhY2hlX2luaXQodm9pZCkKIAkJSU5JVF9ITElTVF9IRUFEKCZjYWNoZV9odGFibGVb
aV0pOwogCiAJYXRvbWljX3NldCgmY2FjaGVfY291bnQsIDApOwotCWNhY2hlX2NwID0gbG9hZF9u
bHMoInV0ZjgiKTsKLQlpZiAoIWNhY2hlX2NwKQotCQljYWNoZV9jcCA9IGxvYWRfbmxzX2RlZmF1
bHQoKTsKIAogCWNpZnNfZGJnKEZZSSwgIiVzOiBpbml0aWFsaXplZCBERlMgcmVmZXJyYWwgY2Fj
aGVcbiIsIF9fZnVuY19fKTsKIAlyZXR1cm4gMDsKQEAgLTQwOCwxMSArNDAzLDExIEBAIHN0YXRp
YyBpbnQgY2FjaGVfZW50cnlfaGFzaChjb25zdCB2b2lkICpkYXRhLCBpbnQgc2l6ZSwgdW5zaWdu
ZWQgaW50ICpoYXNoKQogewogCWludCBpLCBjbGVuOwogCWNvbnN0IHVuc2lnbmVkIGNoYXIgKnMg
PSBkYXRhOwotCXdjaGFyX3QgYzsKKwl1bmljb2RlX3QgYzsKIAl1bnNpZ25lZCBpbnQgaCA9IDA7
CiAKIAlmb3IgKGkgPSAwOyBpIDwgc2l6ZTsgaSArPSBjbGVuKSB7Ci0JCWNsZW4gPSBjYWNoZV9j
cC0+Y2hhcjJ1bmkoJnNbaV0sIHNpemUgLSBpLCAmYyk7CisJCWNsZW4gPSB1dGY4X3RvX3V0ZjMy
KCZzW2ldLCBzaXplIC0gaSwgJmMpOwogCQlpZiAodW5saWtlbHkoY2xlbiA8IDApKSB7CiAJCQlj
aWZzX2RiZyhWRlMsICIlczogY2FuJ3QgY29udmVydCBjaGFyXG4iLCBfX2Z1bmNfXyk7CiAJCQly
ZXR1cm4gY2xlbjsKQEAgLTYwMSwxNCArNTk2LDE0IEBAIHN0YXRpYyBpbnQgYWRkX2NhY2hlX2Vu
dHJ5X2xvY2tlZChzdHJ1Y3QgZGZzX2luZm8zX3BhcmFtICpyZWZzLCBpbnQgbnVtcmVmcykKIHN0
YXRpYyBib29sIGRmc19wYXRoX2VxdWFsKGNvbnN0IGNoYXIgKnMxLCBpbnQgbGVuMSwgY29uc3Qg
Y2hhciAqczIsIGludCBsZW4yKQogewogCWludCBpLCBsMSwgbDI7Ci0Jd2NoYXJfdCBjMSwgYzI7
CisJdW5pY29kZV90IGMxLCBjMjsKIAogCWlmIChsZW4xICE9IGxlbjIpCiAJCXJldHVybiBmYWxz
ZTsKIAogCWZvciAoaSA9IDA7IGkgPCBsZW4xOyBpICs9IGwxKSB7Ci0JCWwxID0gY2FjaGVfY3At
PmNoYXIydW5pKCZzMVtpXSwgbGVuMSAtIGksICZjMSk7Ci0JCWwyID0gY2FjaGVfY3AtPmNoYXIy
dW5pKCZzMltpXSwgbGVuMiAtIGksICZjMik7CisJCWwxID0gdXRmOF90b191dGYzMigmczFbaV0s
IGxlbjEgLSBpLCAmYzEpOworCQlsMiA9IHV0ZjhfdG9fdXRmMzIoJnMyW2ldLCBsZW4yIC0gaSwg
JmMyKTsKIAkJaWYgKHVubGlrZWx5KGwxIDwgMCAmJiBsMiA8IDApKSB7CiAJCQlpZiAoczFbaV0g
IT0gczJbaV0pCiAJCQkJcmV0dXJuIGZhbHNlOwpAQCAtNjk4LDcgKzY5Myw2IEBAIHN0YXRpYyBz
dHJ1Y3QgY2FjaGVfZW50cnkgKmxvb2t1cF9jYWNoZV9lbnRyeShjb25zdCBjaGFyICpwYXRoKQog
dm9pZCBkZnNfY2FjaGVfZGVzdHJveSh2b2lkKQogewogCWNhbmNlbF9kZWxheWVkX3dvcmtfc3lu
YygmcmVmcmVzaF90YXNrKTsKLQl1bmxvYWRfbmxzKGNhY2hlX2NwKTsKIAlmcmVlX21vdW50X2dy
b3VwX2xpc3QoKTsKIAlmbHVzaF9jYWNoZV9lbnRzKCk7CiAJa21lbV9jYWNoZV9kZXN0cm95KGNh
Y2hlX3NsYWIpOwpAQCAtNzQ0LDExICs3MzgsOSBAQCBzdGF0aWMgaW50IGdldF9kZnNfcmVmZXJy
YWwoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfc2VzICpzZXMsIGNvbnN0CiAK
IAlpZiAoIXNlcyB8fCAhc2VzLT5zZXJ2ZXIgfHwgIXNlcy0+c2VydmVyLT5vcHMtPmdldF9kZnNf
cmVmZXIpCiAJCXJldHVybiAtRU9QTk9UU1VQUDsKLQlpZiAodW5saWtlbHkoIWNhY2hlX2NwKSkK
LQkJcmV0dXJuIC1FSU5WQUw7CiAKIAljaWZzX2RiZyhGWUksICIlczogaXBjPSVzIHJlZmVycmFs
PSVzXG4iLCBfX2Z1bmNfXywgc2VzLT50Y29uX2lwYy0+dHJlZV9uYW1lLCBwYXRoKTsKLQlyYyA9
ICBzZXMtPnNlcnZlci0+b3BzLT5nZXRfZGZzX3JlZmVyKHhpZCwgc2VzLCBwYXRoLCByZWZzLCBu
dW1yZWZzLCBjYWNoZV9jcCwKKwlyYyA9ICBzZXMtPnNlcnZlci0+b3BzLT5nZXRfZGZzX3JlZmVy
KHhpZCwgc2VzLCBwYXRoLCByZWZzLCBudW1yZWZzLCBOVUxMLAogCQkJCQkgICAgICBOT19NQVBf
VU5JX1JTVkQpOwogCWlmICghcmMpIHsKIAkJc3RydWN0IGRmc19pbmZvM19wYXJhbSAqcmVmID0g
KnJlZnM7CmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjJwZHUuYyBiL2ZzL2NpZnMvc21iMnBkdS5j
CmluZGV4IGE1Njk1NzQ4YTg5Yi4uM2RjNjk3ODdhZTE3IDEwMDY0NAotLS0gYS9mcy9jaWZzL3Nt
YjJwZHUuYworKysgYi9mcy9jaWZzL3NtYjJwZHUuYwpAQCAtMTQ0LDcgKzE0NCw2IEBAIHNtYjJf
cmVjb25uZWN0KF9fbGUxNiBzbWIyX2NvbW1hbmQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCiAJ
ICAgICAgIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikKIHsKIAlpbnQgcmMgPSAwOwot
CXN0cnVjdCBubHNfdGFibGUgKm5sc19jb2RlcGFnZTsKIAlzdHJ1Y3QgY2lmc19zZXMgKnNlczsK
IAlpbnQgcmV0cmllczsKIApAQCAtMjUwLDggKzI0OSw2IEBAIHNtYjJfcmVjb25uZWN0KF9fbGUx
NiBzbWIyX2NvbW1hbmQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCiAJCSB0Y29uLT5zZXMtPmNo
YW5zX25lZWRfcmVjb25uZWN0LAogCQkgdGNvbi0+bmVlZF9yZWNvbm5lY3QpOwogCi0JbmxzX2Nv
ZGVwYWdlID0gbG9hZF9ubHNfZGVmYXVsdCgpOwotCiAJLyoKIAkgKiBSZWNoZWNrIGFmdGVyIGFj
cXVpcmUgbXV0ZXguIElmIGFub3RoZXIgdGhyZWFkIGlzIG5lZ290aWF0aW5nCiAJICogYW5kIHRo
ZSBzZXJ2ZXIgbmV2ZXIgc2VuZHMgYW4gYW5zd2VyIHRoZSBzb2NrZXQgd2lsbCBiZSBjbG9zZWQK
QEAgLTI4NCw3ICsyODEsNyBAQCBzbWIyX3JlY29ubmVjdChfX2xlMTYgc21iMl9jb21tYW5kLCBz
dHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCW11dGV4X2xvY2soJnNlcy0+c2Vzc2lvbl9tdXRleCk7
CiAJcmMgPSBjaWZzX25lZ290aWF0ZV9wcm90b2NvbCgwLCBzZXMsIHNlcnZlcik7CiAJaWYgKCFy
YykgewotCQlyYyA9IGNpZnNfc2V0dXBfc2Vzc2lvbigwLCBzZXMsIHNlcnZlciwgbmxzX2NvZGVw
YWdlKTsKKwkJcmMgPSBjaWZzX3NldHVwX3Nlc3Npb24oMCwgc2VzLCBzZXJ2ZXIsIE5VTEwpOwog
CQlpZiAoKHJjID09IC1FQUNDRVMpICYmICF0Y29uLT5yZXRyeSkgewogCQkJbXV0ZXhfdW5sb2Nr
KCZzZXMtPnNlc3Npb25fbXV0ZXgpOwogCQkJcmMgPSAtRUhPU1RET1dOOwpAQCAtMzA5LDcgKzMw
Niw3IEBAIHNtYjJfcmVjb25uZWN0KF9fbGUxNiBzbWIyX2NvbW1hbmQsIHN0cnVjdCBjaWZzX3Rj
b24gKnRjb24sCiAJaWYgKHRjb24tPnVzZV9wZXJzaXN0ZW50KQogCQl0Y29uLT5uZWVkX3Jlb3Bl
bl9maWxlcyA9IHRydWU7CiAKLQlyYyA9IGNpZnNfdHJlZV9jb25uZWN0KDAsIHRjb24sIG5sc19j
b2RlcGFnZSk7CisJcmMgPSBjaWZzX3RyZWVfY29ubmVjdCgwLCB0Y29uLCBOVUxMKTsKIAltdXRl
eF91bmxvY2soJnNlcy0+c2Vzc2lvbl9tdXRleCk7CiAKIAljaWZzX2RiZyhGWUksICJyZWNvbm5l
Y3QgdGNvbiByYyA9ICVkXG4iLCByYyk7CkBAIC0zNDUsNyArMzQyLDYgQEAgc21iMl9yZWNvbm5l
Y3QoX19sZTE2IHNtYjJfY29tbWFuZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIAkJcmMgPSAt
RUFHQUlOOwogCX0KIGZhaWxlZDoKLQl1bmxvYWRfbmxzKG5sc19jb2RlcGFnZSk7CiAJcmV0dXJu
IHJjOwogfQogCkBAIC01MDMsMTIgKzQ5OSwxMCBAQCBidWlsZF9lbmNyeXB0X2N0eHQoc3RydWN0
IHNtYjJfZW5jcnlwdGlvbl9uZWdfY29udGV4dCAqcG5lZ19jdHh0KQogc3RhdGljIHVuc2lnbmVk
IGludAogYnVpbGRfbmV0bmFtZV9jdHh0KHN0cnVjdCBzbWIyX25ldG5hbWVfbmVnX2NvbnRleHQg
KnBuZWdfY3R4dCwgY2hhciAqaG9zdG5hbWUpCiB7Ci0Jc3RydWN0IG5sc190YWJsZSAqY3AgPSBs
b2FkX25sc19kZWZhdWx0KCk7Ci0KIAlwbmVnX2N0eHQtPkNvbnRleHRUeXBlID0gU01CMl9ORVRO
QU1FX05FR09USUFURV9DT05URVhUX0lEOwogCiAJLyogY29weSB1cCB0byBtYXggb2YgZmlyc3Qg
MTAwIGJ5dGVzIG9mIHNlcnZlciBuYW1lIHRvIE5ldE5hbWUgZmllbGQgKi8KLQlwbmVnX2N0eHQt
PkRhdGFMZW5ndGggPSBjcHVfdG9fbGUxNigyICogY2lmc19zdHJ0b1VURjE2KHBuZWdfY3R4dC0+
TmV0TmFtZSwgaG9zdG5hbWUsIDEwMCwgY3ApKTsKKwlwbmVnX2N0eHQtPkRhdGFMZW5ndGggPSBj
cHVfdG9fbGUxNigyICogY2lmc19zdHJ0b1VURjE2KHBuZWdfY3R4dC0+TmV0TmFtZSwgaG9zdG5h
bWUsIDEwMCwgTlVMTCkpOwogCS8qIGNvbnRleHQgc2l6ZSBpcyBEYXRhTGVuZ3RoICsgbWluaW1h
bCBzbWIyX25lZ19jb250ZXh0ICovCiAJcmV0dXJuIEFMSUdOKGxlMTZfdG9fY3B1KHBuZWdfY3R4
dC0+RGF0YUxlbmd0aCkgKyBzaXplb2Yoc3RydWN0IHNtYjJfbmVnX2NvbnRleHQpLCA4KTsKIH0K
QEAgLTI1NjgsNyArMjU2Miw2IEBAIGFsbG9jX3BhdGhfd2l0aF90cmVlX3ByZWZpeChfX2xlMTYg
KipvdXRfcGF0aCwgaW50ICpvdXRfc2l6ZSwgaW50ICpvdXRfbGVuLAogCQkJICAgIGNvbnN0IGNo
YXIgKnRyZWVuYW1lLCBjb25zdCBfX2xlMTYgKnBhdGgpCiB7CiAJaW50IHRyZWVuYW1lX2xlbiwg
cGF0aF9sZW47Ci0Jc3RydWN0IG5sc190YWJsZSAqY3A7CiAJY29uc3QgX19sZTE2IHNlcFtdID0g
e2NwdV90b19sZTE2KCdcXCcpLCBjcHVfdG9fbGUxNigweDAwMDApfTsKIAogCS8qCkBAIC0yNTk1
LDggKzI1ODgsNyBAQCBhbGxvY19wYXRoX3dpdGhfdHJlZV9wcmVmaXgoX19sZTE2ICoqb3V0X3Bh
dGgsIGludCAqb3V0X3NpemUsIGludCAqb3V0X2xlbiwKIAlpZiAoISpvdXRfcGF0aCkKIAkJcmV0
dXJuIC1FTk9NRU07CiAKLQljcCA9IGxvYWRfbmxzX2RlZmF1bHQoKTsKLQljaWZzX3N0cnRvVVRG
MTYoKm91dF9wYXRoLCB0cmVlbmFtZSwgdHJlZW5hbWVfbGVuLCBjcCk7CisJY2lmc19zdHJ0b1VU
RjE2KCpvdXRfcGF0aCwgdHJlZW5hbWUsIHRyZWVuYW1lX2xlbiwgTlVMTCk7CiAKIAkvKiBEbyBu
b3QgYXBwZW5kIHRoZSBzZXBhcmF0b3IgaWYgdGhlIHBhdGggaXMgZW1wdHkgKi8KIAlpZiAocGF0
aFswXSAhPSBjcHVfdG9fbGUxNigweDAwMDApKSB7CkBAIC0yNjA0LDggKzI1OTYsNiBAQCBhbGxv
Y19wYXRoX3dpdGhfdHJlZV9wcmVmaXgoX19sZTE2ICoqb3V0X3BhdGgsIGludCAqb3V0X3NpemUs
IGludCAqb3V0X2xlbiwKIAkJVW5pU3RyY2F0KCpvdXRfcGF0aCwgcGF0aCk7CiAJfQogCi0JdW5s
b2FkX25scyhjcCk7Ci0KIAlyZXR1cm4gMDsKIH0KIAotLSAKMi4yMC4xCgoKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbnV4LU5URlMtRGV2IG1haWxp
bmcgbGlzdApMaW51eC1OVEZTLURldkBsaXN0cy5zb3VyY2Vmb3JnZS5uZXQKaHR0cHM6Ly9saXN0
cy5zb3VyY2Vmb3JnZS5uZXQvbGlzdHMvbGlzdGluZm8vbGludXgtbnRmcy1kZXYK
